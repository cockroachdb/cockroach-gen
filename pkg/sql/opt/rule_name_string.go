// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[FoldEqZeroSTDistance-44]
	_ = x[FoldCmpSTDistanceLeft-45]
	_ = x[FoldCmpSTDistanceRight-46]
	_ = x[FoldCmpSTMaxDistanceLeft-47]
	_ = x[FoldCmpSTMaxDistanceRight-48]
	_ = x[FoldEqTrue-49]
	_ = x[FoldEqFalse-50]
	_ = x[FoldNeTrue-51]
	_ = x[FoldNeFalse-52]
	_ = x[DecorrelateJoin-53]
	_ = x[DecorrelateProjectSet-54]
	_ = x[TryDecorrelateSelect-55]
	_ = x[TryDecorrelateProject-56]
	_ = x[TryDecorrelateProjectSelect-57]
	_ = x[TryDecorrelateProjectInnerJoin-58]
	_ = x[TryDecorrelateInnerJoin-59]
	_ = x[TryDecorrelateInnerLeftJoin-60]
	_ = x[TryDecorrelateGroupBy-61]
	_ = x[TryDecorrelateScalarGroupBy-62]
	_ = x[TryDecorrelateSemiJoin-63]
	_ = x[TryDecorrelateLimitOne-64]
	_ = x[TryDecorrelateProjectSet-65]
	_ = x[TryDecorrelateWindow-66]
	_ = x[TryDecorrelateMax1Row-67]
	_ = x[HoistSelectExists-68]
	_ = x[HoistSelectNotExists-69]
	_ = x[HoistSelectSubquery-70]
	_ = x[HoistProjectSubquery-71]
	_ = x[HoistJoinSubquery-72]
	_ = x[HoistValuesSubquery-73]
	_ = x[HoistProjectSetSubquery-74]
	_ = x[NormalizeSelectAnyFilter-75]
	_ = x[NormalizeJoinAnyFilter-76]
	_ = x[NormalizeSelectNotAnyFilter-77]
	_ = x[NormalizeJoinNotAnyFilter-78]
	_ = x[FoldNullCast-79]
	_ = x[FoldNullUnary-80]
	_ = x[FoldNullBinaryLeft-81]
	_ = x[FoldNullBinaryRight-82]
	_ = x[FoldNullInNonEmpty-83]
	_ = x[FoldInEmpty-84]
	_ = x[FoldNotInEmpty-85]
	_ = x[FoldArray-86]
	_ = x[FoldBinary-87]
	_ = x[FoldUnary-88]
	_ = x[FoldComparison-89]
	_ = x[FoldCast-90]
	_ = x[FoldIndirection-91]
	_ = x[FoldColumnAccess-92]
	_ = x[FoldFunction-93]
	_ = x[FoldEqualsAnyNull-94]
	_ = x[ConvertGroupByToDistinct-95]
	_ = x[EliminateGroupByProject-96]
	_ = x[EliminateJoinUnderGroupByLeft-97]
	_ = x[EliminateJoinUnderGroupByRight-98]
	_ = x[EliminateDistinct-99]
	_ = x[ReduceGroupingCols-100]
	_ = x[ReduceNotNullGroupingCols-101]
	_ = x[EliminateAggDistinctForKeys-102]
	_ = x[EliminateAggFilteredDistinctForKeys-103]
	_ = x[EliminateDistinctNoColumns-104]
	_ = x[EliminateEnsureDistinctNoColumns-105]
	_ = x[EliminateDistinctOnValues-106]
	_ = x[PushAggDistinctIntoGroupBy-107]
	_ = x[PushAggFilterIntoScalarGroupBy-108]
	_ = x[ConvertCountToCountRows-109]
	_ = x[ConvertRegressionCountToCount-110]
	_ = x[FoldGroupingOperators-111]
	_ = x[InlineConstVar-112]
	_ = x[InlineProjectConstants-113]
	_ = x[InlineSelectConstants-114]
	_ = x[InlineJoinConstantsLeft-115]
	_ = x[InlineJoinConstantsRight-116]
	_ = x[PushSelectIntoInlinableProject-117]
	_ = x[InlineSelectVirtualColumns-118]
	_ = x[InlineProjectInProject-119]
	_ = x[CommuteRightJoin-120]
	_ = x[SimplifyJoinFilters-121]
	_ = x[DetectJoinContradiction-122]
	_ = x[PushFilterIntoJoinLeftAndRight-123]
	_ = x[MapFilterIntoJoinLeft-124]
	_ = x[MapFilterIntoJoinRight-125]
	_ = x[MapEqualityIntoJoinLeftAndRight-126]
	_ = x[PushFilterIntoJoinLeft-127]
	_ = x[PushFilterIntoJoinRight-128]
	_ = x[SimplifyLeftJoin-129]
	_ = x[SimplifyRightJoin-130]
	_ = x[EliminateSemiJoin-131]
	_ = x[SimplifyZeroCardinalitySemiJoin-132]
	_ = x[EliminateAntiJoin-133]
	_ = x[SimplifyZeroCardinalityAntiJoin-134]
	_ = x[EliminateJoinNoColsLeft-135]
	_ = x[EliminateJoinNoColsRight-136]
	_ = x[HoistJoinProjectRight-137]
	_ = x[HoistJoinProjectLeft-138]
	_ = x[SimplifyJoinNotNullEquality-139]
	_ = x[ExtractJoinEqualities-140]
	_ = x[SortFiltersInJoin-141]
	_ = x[LeftAssociateJoinsLeft-142]
	_ = x[LeftAssociateJoinsRight-143]
	_ = x[RightAssociateJoinsLeft-144]
	_ = x[RightAssociateJoinsRight-145]
	_ = x[RemoveJoinNotNullCondition-146]
	_ = x[ProjectInnerJoinValues-147]
	_ = x[EliminateLimit-148]
	_ = x[EliminateOffset-149]
	_ = x[PushLimitIntoProject-150]
	_ = x[PushOffsetIntoProject-151]
	_ = x[PushLimitIntoOffset-152]
	_ = x[PushLimitIntoOrdinality-153]
	_ = x[PushLimitIntoJoinLeft-154]
	_ = x[PushLimitIntoJoinRight-155]
	_ = x[FoldLimits-156]
	_ = x[AssociateLimitJoinsLeft-157]
	_ = x[AssociateLimitJoinsRight-158]
	_ = x[EliminateMax1Row-159]
	_ = x[SimplifyPartialIndexProjections-160]
	_ = x[FoldPlusZero-161]
	_ = x[FoldZeroPlus-162]
	_ = x[FoldMinusZero-163]
	_ = x[FoldMultOne-164]
	_ = x[FoldOneMult-165]
	_ = x[FoldDivOne-166]
	_ = x[InvertMinus-167]
	_ = x[EliminateUnaryMinus-168]
	_ = x[SimplifyLimitOrdering-169]
	_ = x[SimplifyOffsetOrdering-170]
	_ = x[SimplifyGroupByOrdering-171]
	_ = x[SimplifyOrdinalityOrdering-172]
	_ = x[SimplifyExplainOrdering-173]
	_ = x[EliminateJoinUnderProjectLeft-174]
	_ = x[EliminateJoinUnderProjectRight-175]
	_ = x[EliminateProject-176]
	_ = x[MergeProjects-177]
	_ = x[MergeProjectWithValues-178]
	_ = x[PushColumnRemappingIntoValues-179]
	_ = x[FoldTupleAccessIntoValues-180]
	_ = x[FoldJSONAccessIntoValues-181]
	_ = x[ConvertZipArraysToValues-182]
	_ = x[PruneProjectCols-183]
	_ = x[PruneScanCols-184]
	_ = x[PruneSelectCols-185]
	_ = x[PruneLimitCols-186]
	_ = x[PruneOffsetCols-187]
	_ = x[PruneJoinLeftCols-188]
	_ = x[PruneJoinRightCols-189]
	_ = x[PruneSemiAntiJoinRightCols-190]
	_ = x[PruneAggCols-191]
	_ = x[PruneGroupByCols-192]
	_ = x[PruneValuesCols-193]
	_ = x[PruneOrdinalityCols-194]
	_ = x[PruneExplainCols-195]
	_ = x[PruneProjectSetCols-196]
	_ = x[PruneWindowOutputCols-197]
	_ = x[PruneWindowInputCols-198]
	_ = x[PruneMutationFetchCols-199]
	_ = x[PruneMutationInputCols-200]
	_ = x[PruneMutationReturnCols-201]
	_ = x[PruneWithScanCols-202]
	_ = x[PruneWithCols-203]
	_ = x[PruneUnionAllCols-204]
	_ = x[RejectNullsLeftJoin-205]
	_ = x[RejectNullsRightJoin-206]
	_ = x[RejectNullsGroupBy-207]
	_ = x[RejectNullsUnderJoinLeft-208]
	_ = x[RejectNullsUnderJoinRight-209]
	_ = x[RejectNullsProject-210]
	_ = x[CommuteVar-211]
	_ = x[CommuteConst-212]
	_ = x[EliminateCoalesce-213]
	_ = x[SimplifyCoalesce-214]
	_ = x[EliminateCast-215]
	_ = x[NormalizeInConst-216]
	_ = x[FoldInNull-217]
	_ = x[UnifyComparisonTypes-218]
	_ = x[EliminateExistsZeroRows-219]
	_ = x[EliminateExistsProject-220]
	_ = x[EliminateExistsGroupBy-221]
	_ = x[InlineExistsSelectTuple-222]
	_ = x[IntroduceExistsLimit-223]
	_ = x[EliminateExistsLimit-224]
	_ = x[SimplifyCaseWhenConstValue-225]
	_ = x[InlineAnyValuesSingleCol-226]
	_ = x[InlineAnyValuesMultiCol-227]
	_ = x[SimplifyEqualsAnyTuple-228]
	_ = x[SimplifyAnyScalarArray-229]
	_ = x[FoldCollate-230]
	_ = x[NormalizeArrayFlattenToAgg-231]
	_ = x[SimplifySameVarEqualities-232]
	_ = x[SimplifySameVarInequalities-233]
	_ = x[SimplifyNotDisjoint-234]
	_ = x[SimplifySelectFilters-235]
	_ = x[ConsolidateSelectFilters-236]
	_ = x[EliminateSelect-237]
	_ = x[MergeSelects-238]
	_ = x[PushSelectIntoProject-239]
	_ = x[MergeSelectInnerJoin-240]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-241]
	_ = x[PushSelectIntoJoinLeft-242]
	_ = x[PushSelectIntoGroupBy-243]
	_ = x[RemoveNotNullCondition-244]
	_ = x[PushSelectIntoProjectSet-245]
	_ = x[PushFilterIntoSetOp-246]
	_ = x[EliminateUnionAllLeft-247]
	_ = x[EliminateUnionAllRight-248]
	_ = x[EliminateWindow-249]
	_ = x[ReduceWindowPartitionCols-250]
	_ = x[SimplifyWindowOrdering-251]
	_ = x[PushSelectIntoWindow-252]
	_ = x[PushLimitIntoWindow-253]
	_ = x[InlineWith-254]
	_ = x[startExploreRule-255]
	_ = x[ReplaceScalarMinMaxWithLimit-256]
	_ = x[ReplaceMinWithLimit-257]
	_ = x[ReplaceMaxWithLimit-258]
	_ = x[GenerateStreamingGroupBy-259]
	_ = x[ReorderJoins-260]
	_ = x[CommuteLeftJoin-261]
	_ = x[CommuteSemiJoin-262]
	_ = x[ConvertSemiToInnerJoin-263]
	_ = x[GenerateMergeJoins-264]
	_ = x[GenerateLookupJoins-265]
	_ = x[GenerateInvertedJoins-266]
	_ = x[GenerateInvertedJoinsFromSelect-267]
	_ = x[GenerateLookupJoinsWithFilter-268]
	_ = x[PushJoinIntoIndexJoin-269]
	_ = x[HoistProjectFromInnerJoin-270]
	_ = x[HoistProjectFromLeftJoin-271]
	_ = x[GenerateLocalityOptimizedAntiJoin-272]
	_ = x[GenerateLimitedScans-273]
	_ = x[PushLimitIntoFilteredScan-274]
	_ = x[PushLimitIntoIndexJoin-275]
	_ = x[SplitScanIntoUnionScans-276]
	_ = x[EliminateIndexJoinInsideProject-277]
	_ = x[GenerateIndexScans-278]
	_ = x[GenerateLocalityOptimizedScan-279]
	_ = x[GeneratePartialIndexScans-280]
	_ = x[GenerateConstrainedScans-281]
	_ = x[GenerateInvertedIndexScans-282]
	_ = x[GenerateZigzagJoins-283]
	_ = x[GenerateInvertedIndexZigzagJoins-284]
	_ = x[SplitDisjunction-285]
	_ = x[SplitDisjunctionAddKey-286]
	_ = x[NumRuleNames-287]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZFoldEqZeroSTDistanceFoldCmpSTDistanceLeftFoldCmpSTDistanceRightFoldCmpSTMaxDistanceLeftFoldCmpSTMaxDistanceRightFoldEqTrueFoldEqFalseFoldNeTrueFoldNeFalseDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateGroupByProjectEliminateJoinUnderGroupByLeftEliminateJoinUnderGroupByRightEliminateDistinctReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsConvertRegressionCountToCountFoldGroupingOperatorsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineSelectVirtualColumnsInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinLeftAssociateJoinsLeftLeftAssociateJoinsRightRightAssociateJoinsLeftRightAssociateJoinsRightRemoveJoinNotNullConditionProjectInnerJoinValuesEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoJoinLeftPushLimitIntoJoinRightFoldLimitsAssociateLimitJoinsLeftAssociateLimitJoinsRightEliminateMax1RowSimplifyPartialIndexProjectionsFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateJoinUnderProjectLeftEliminateJoinUnderProjectRightEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesFoldJSONAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByRejectNullsUnderJoinLeftRejectNullsUnderJoinRightRejectNullsProjectCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByInlineExistsSelectTupleIntroduceExistsLimitEliminateExistsLimitSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifyNotDisjointSimplifySelectFiltersConsolidateSelectFiltersEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByReorderJoinsCommuteLeftJoinCommuteSemiJoinConvertSemiToInnerJoinGenerateMergeJoinsGenerateLookupJoinsGenerateInvertedJoinsGenerateInvertedJoinsFromSelectGenerateLookupJoinsWithFilterPushJoinIntoIndexJoinHoistProjectFromInnerJoinHoistProjectFromLeftJoinGenerateLocalityOptimizedAntiJoinGenerateLimitedScansPushLimitIntoFilteredScanPushLimitIntoIndexJoinSplitScanIntoUnionScansEliminateIndexJoinInsideProjectGenerateIndexScansGenerateLocalityOptimizedScanGeneratePartialIndexScansGenerateConstrainedScansGenerateInvertedIndexScansGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 815, 836, 858, 882, 907, 917, 928, 938, 949, 964, 985, 1005, 1026, 1053, 1083, 1106, 1133, 1154, 1181, 1203, 1225, 1249, 1269, 1290, 1307, 1327, 1346, 1366, 1383, 1402, 1425, 1449, 1471, 1498, 1523, 1535, 1548, 1566, 1585, 1603, 1614, 1628, 1637, 1647, 1656, 1670, 1678, 1693, 1709, 1721, 1738, 1762, 1785, 1814, 1844, 1861, 1879, 1904, 1931, 1966, 1992, 2024, 2049, 2075, 2105, 2128, 2157, 2178, 2192, 2214, 2235, 2258, 2282, 2312, 2338, 2360, 2376, 2395, 2418, 2448, 2469, 2491, 2522, 2544, 2567, 2583, 2600, 2617, 2648, 2665, 2696, 2719, 2743, 2764, 2784, 2811, 2832, 2849, 2871, 2894, 2917, 2941, 2967, 2989, 3003, 3018, 3038, 3059, 3078, 3101, 3122, 3144, 3154, 3177, 3201, 3217, 3248, 3260, 3272, 3285, 3296, 3307, 3317, 3328, 3347, 3368, 3390, 3413, 3439, 3462, 3491, 3521, 3537, 3550, 3572, 3601, 3626, 3650, 3674, 3690, 3703, 3718, 3732, 3747, 3764, 3782, 3808, 3820, 3836, 3851, 3870, 3886, 3905, 3926, 3946, 3968, 3990, 4013, 4030, 4043, 4060, 4079, 4099, 4117, 4141, 4166, 4184, 4194, 4206, 4223, 4239, 4252, 4268, 4278, 4298, 4321, 4343, 4365, 4388, 4408, 4428, 4454, 4478, 4501, 4523, 4545, 4556, 4582, 4607, 4634, 4653, 4674, 4698, 4713, 4725, 4746, 4766, 4804, 4826, 4847, 4869, 4893, 4912, 4933, 4955, 4970, 4995, 5017, 5037, 5056, 5066, 5082, 5110, 5129, 5148, 5172, 5184, 5199, 5214, 5236, 5254, 5273, 5294, 5325, 5354, 5375, 5400, 5424, 5457, 5477, 5502, 5524, 5547, 5578, 5596, 5625, 5650, 5674, 5700, 5719, 5751, 5767, 5789, 5801}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
