// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldIsNotNull-35]
	_ = x[FoldNonNullIsNotNull-36]
	_ = x[CommuteNullIs-37]
	_ = x[DecorrelateJoin-38]
	_ = x[DecorrelateProjectSet-39]
	_ = x[TryDecorrelateSelect-40]
	_ = x[TryDecorrelateProject-41]
	_ = x[TryDecorrelateProjectSelect-42]
	_ = x[TryDecorrelateProjectInnerJoin-43]
	_ = x[TryDecorrelateInnerJoin-44]
	_ = x[TryDecorrelateInnerLeftJoin-45]
	_ = x[TryDecorrelateGroupBy-46]
	_ = x[TryDecorrelateScalarGroupBy-47]
	_ = x[TryDecorrelateSemiJoin-48]
	_ = x[TryDecorrelateLimitOne-49]
	_ = x[TryDecorrelateProjectSet-50]
	_ = x[TryDecorrelateWindow-51]
	_ = x[HoistSelectExists-52]
	_ = x[HoistSelectNotExists-53]
	_ = x[HoistSelectSubquery-54]
	_ = x[HoistProjectSubquery-55]
	_ = x[HoistJoinSubquery-56]
	_ = x[HoistValuesSubquery-57]
	_ = x[HoistProjectSetSubquery-58]
	_ = x[NormalizeSelectAnyFilter-59]
	_ = x[NormalizeJoinAnyFilter-60]
	_ = x[NormalizeSelectNotAnyFilter-61]
	_ = x[NormalizeJoinNotAnyFilter-62]
	_ = x[FoldNullCast-63]
	_ = x[FoldNullUnary-64]
	_ = x[FoldNullBinaryLeft-65]
	_ = x[FoldNullBinaryRight-66]
	_ = x[FoldNullInNonEmpty-67]
	_ = x[FoldInEmpty-68]
	_ = x[FoldNotInEmpty-69]
	_ = x[FoldArray-70]
	_ = x[FoldBinary-71]
	_ = x[FoldUnary-72]
	_ = x[FoldComparison-73]
	_ = x[FoldCast-74]
	_ = x[FoldIndirection-75]
	_ = x[FoldColumnAccess-76]
	_ = x[FoldFunction-77]
	_ = x[FoldEqualsAnyNull-78]
	_ = x[ConvertGroupByToDistinct-79]
	_ = x[EliminateDistinct-80]
	_ = x[EliminateGroupByProject-81]
	_ = x[ReduceGroupingCols-82]
	_ = x[ReduceNotNullGroupingCols-83]
	_ = x[EliminateAggDistinctForKeys-84]
	_ = x[EliminateAggFilteredDistinctForKeys-85]
	_ = x[EliminateDistinctNoColumns-86]
	_ = x[EliminateErrorDistinctNoColumns-87]
	_ = x[EliminateDistinctOnValues-88]
	_ = x[InlineProjectConstants-89]
	_ = x[InlineSelectConstants-90]
	_ = x[InlineJoinConstantsLeft-91]
	_ = x[InlineJoinConstantsRight-92]
	_ = x[PushSelectIntoInlinableProject-93]
	_ = x[InlineProjectInProject-94]
	_ = x[CommuteRightJoin-95]
	_ = x[SimplifyJoinFilters-96]
	_ = x[DetectJoinContradiction-97]
	_ = x[PushFilterIntoJoinLeftAndRight-98]
	_ = x[MapFilterIntoJoinLeft-99]
	_ = x[MapFilterIntoJoinRight-100]
	_ = x[MapEqualityIntoJoinLeftAndRight-101]
	_ = x[PushFilterIntoJoinLeft-102]
	_ = x[PushFilterIntoJoinRight-103]
	_ = x[SimplifyLeftJoinWithoutFilters-104]
	_ = x[SimplifyRightJoinWithoutFilters-105]
	_ = x[SimplifyLeftJoinWithFilters-106]
	_ = x[SimplifyRightJoinWithFilters-107]
	_ = x[EliminateSemiJoin-108]
	_ = x[SimplifyZeroCardinalitySemiJoin-109]
	_ = x[EliminateAntiJoin-110]
	_ = x[SimplifyZeroCardinalityAntiJoin-111]
	_ = x[EliminateJoinNoColsLeft-112]
	_ = x[EliminateJoinNoColsRight-113]
	_ = x[HoistJoinProjectRight-114]
	_ = x[HoistJoinProjectLeft-115]
	_ = x[SimplifyJoinNotNullEquality-116]
	_ = x[ExtractJoinEqualities-117]
	_ = x[SortFiltersInJoin-118]
	_ = x[EliminateLimit-119]
	_ = x[EliminateOffset-120]
	_ = x[PushLimitIntoProject-121]
	_ = x[PushOffsetIntoProject-122]
	_ = x[PushLimitIntoOffset-123]
	_ = x[PushLimitIntoOrdinality-124]
	_ = x[PushLimitIntoLeftJoin-125]
	_ = x[EliminateMax1Row-126]
	_ = x[FoldPlusZero-127]
	_ = x[FoldZeroPlus-128]
	_ = x[FoldMinusZero-129]
	_ = x[FoldMultOne-130]
	_ = x[FoldOneMult-131]
	_ = x[FoldDivOne-132]
	_ = x[InvertMinus-133]
	_ = x[EliminateUnaryMinus-134]
	_ = x[SimplifyLimitOrdering-135]
	_ = x[SimplifyOffsetOrdering-136]
	_ = x[SimplifyGroupByOrdering-137]
	_ = x[SimplifyOrdinalityOrdering-138]
	_ = x[SimplifyExplainOrdering-139]
	_ = x[EliminateProject-140]
	_ = x[MergeProjects-141]
	_ = x[MergeProjectWithValues-142]
	_ = x[PruneProjectCols-143]
	_ = x[PruneScanCols-144]
	_ = x[PruneSelectCols-145]
	_ = x[PruneLimitCols-146]
	_ = x[PruneOffsetCols-147]
	_ = x[PruneJoinLeftCols-148]
	_ = x[PruneJoinRightCols-149]
	_ = x[PruneSemiAntiJoinRightCols-150]
	_ = x[PruneAggCols-151]
	_ = x[PruneGroupByCols-152]
	_ = x[PruneValuesCols-153]
	_ = x[PruneOrdinalityCols-154]
	_ = x[PruneExplainCols-155]
	_ = x[PruneProjectSetCols-156]
	_ = x[PruneWindowOutputCols-157]
	_ = x[PruneWindowInputCols-158]
	_ = x[PruneMutationFetchCols-159]
	_ = x[PruneMutationInputCols-160]
	_ = x[PruneMutationReturnCols-161]
	_ = x[PruneWithScanCols-162]
	_ = x[PruneWithCols-163]
	_ = x[PruneUnionAllCols-164]
	_ = x[RejectNullsLeftJoin-165]
	_ = x[RejectNullsRightJoin-166]
	_ = x[RejectNullsGroupBy-167]
	_ = x[CommuteVar-168]
	_ = x[CommuteConst-169]
	_ = x[EliminateCoalesce-170]
	_ = x[SimplifyCoalesce-171]
	_ = x[EliminateCast-172]
	_ = x[NormalizeInConst-173]
	_ = x[FoldInNull-174]
	_ = x[UnifyComparisonTypes-175]
	_ = x[EliminateExistsProject-176]
	_ = x[EliminateExistsGroupBy-177]
	_ = x[IntroduceExistsLimit-178]
	_ = x[NormalizeJSONFieldAccess-179]
	_ = x[NormalizeJSONContains-180]
	_ = x[SimplifyCaseWhenConstValue-181]
	_ = x[InlineAnyValuesSingleCol-182]
	_ = x[InlineAnyValuesMultiCol-183]
	_ = x[SimplifyEqualsAnyTuple-184]
	_ = x[SimplifyAnyScalarArray-185]
	_ = x[FoldCollate-186]
	_ = x[NormalizeArrayFlattenToAgg-187]
	_ = x[SimplifySelectFilters-188]
	_ = x[ConsolidateSelectFilters-189]
	_ = x[DetectSelectContradiction-190]
	_ = x[EliminateSelect-191]
	_ = x[MergeSelects-192]
	_ = x[PushSelectIntoProject-193]
	_ = x[MergeSelectInnerJoin-194]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-195]
	_ = x[PushSelectIntoJoinLeft-196]
	_ = x[PushSelectIntoGroupBy-197]
	_ = x[RemoveNotNullCondition-198]
	_ = x[InlineConstVar-199]
	_ = x[PushSelectIntoProjectSet-200]
	_ = x[PushFilterIntoSetOp-201]
	_ = x[EliminateUnionAllLeft-202]
	_ = x[EliminateUnionAllRight-203]
	_ = x[EliminateWindow-204]
	_ = x[ReduceWindowPartitionCols-205]
	_ = x[SimplifyWindowOrdering-206]
	_ = x[PushSelectIntoWindow-207]
	_ = x[PushLimitIntoWindow-208]
	_ = x[InlineWith-209]
	_ = x[startExploreRule-210]
	_ = x[ReplaceScalarMinMaxWithLimit-211]
	_ = x[ReplaceMinWithLimit-212]
	_ = x[ReplaceMaxWithLimit-213]
	_ = x[GenerateStreamingGroupBy-214]
	_ = x[CommuteJoin-215]
	_ = x[CommuteLeftJoin-216]
	_ = x[CommuteSemiJoin-217]
	_ = x[GenerateMergeJoins-218]
	_ = x[GenerateLookupJoins-219]
	_ = x[GenerateZigzagJoins-220]
	_ = x[GenerateInvertedIndexZigzagJoins-221]
	_ = x[GenerateLookupJoinsWithFilter-222]
	_ = x[AssociateJoin-223]
	_ = x[GenerateLimitedScans-224]
	_ = x[PushLimitIntoConstrainedScan-225]
	_ = x[PushLimitIntoIndexJoin-226]
	_ = x[GenerateIndexScans-227]
	_ = x[GenerateConstrainedScans-228]
	_ = x[GenerateInvertedIndexScans-229]
	_ = x[NumRuleNames-230]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateErrorDistinctNoColumnsEliminateDistinctOnValuesInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoLeftJoinEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionInlineConstVarPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 596, 616, 629, 644, 665, 685, 706, 733, 763, 786, 813, 834, 861, 883, 905, 929, 949, 966, 986, 1005, 1025, 1042, 1061, 1084, 1108, 1130, 1157, 1182, 1194, 1207, 1225, 1244, 1262, 1273, 1287, 1296, 1306, 1315, 1329, 1337, 1352, 1368, 1380, 1397, 1421, 1438, 1461, 1479, 1504, 1531, 1566, 1592, 1623, 1648, 1670, 1691, 1714, 1738, 1768, 1790, 1806, 1825, 1848, 1878, 1899, 1921, 1952, 1974, 1997, 2027, 2058, 2085, 2113, 2130, 2161, 2178, 2209, 2232, 2256, 2277, 2297, 2324, 2345, 2362, 2376, 2391, 2411, 2432, 2451, 2474, 2495, 2511, 2523, 2535, 2548, 2559, 2570, 2580, 2591, 2610, 2631, 2653, 2676, 2702, 2725, 2741, 2754, 2776, 2792, 2805, 2820, 2834, 2849, 2866, 2884, 2910, 2922, 2938, 2953, 2972, 2988, 3007, 3028, 3048, 3070, 3092, 3115, 3132, 3145, 3162, 3181, 3201, 3219, 3229, 3241, 3258, 3274, 3287, 3303, 3313, 3333, 3355, 3377, 3397, 3421, 3442, 3468, 3492, 3515, 3537, 3559, 3570, 3596, 3617, 3641, 3666, 3681, 3693, 3714, 3734, 3772, 3794, 3815, 3837, 3851, 3875, 3894, 3915, 3937, 3952, 3977, 3999, 4019, 4038, 4048, 4064, 4092, 4111, 4130, 4154, 4165, 4180, 4195, 4213, 4232, 4251, 4283, 4312, 4325, 4345, 4373, 4395, 4413, 4437, 4463, 4475}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
