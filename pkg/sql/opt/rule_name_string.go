// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[FoldEqZeroSTDistance-44]
	_ = x[FoldCmpSTDistanceLeft-45]
	_ = x[FoldCmpSTDistanceRight-46]
	_ = x[FoldCmpSTMaxDistanceLeft-47]
	_ = x[FoldCmpSTMaxDistanceRight-48]
	_ = x[DecorrelateJoin-49]
	_ = x[DecorrelateProjectSet-50]
	_ = x[TryDecorrelateSelect-51]
	_ = x[TryDecorrelateProject-52]
	_ = x[TryDecorrelateProjectSelect-53]
	_ = x[TryDecorrelateProjectInnerJoin-54]
	_ = x[TryDecorrelateInnerJoin-55]
	_ = x[TryDecorrelateInnerLeftJoin-56]
	_ = x[TryDecorrelateGroupBy-57]
	_ = x[TryDecorrelateScalarGroupBy-58]
	_ = x[TryDecorrelateSemiJoin-59]
	_ = x[TryDecorrelateLimitOne-60]
	_ = x[TryDecorrelateProjectSet-61]
	_ = x[TryDecorrelateWindow-62]
	_ = x[TryDecorrelateMax1Row-63]
	_ = x[HoistSelectExists-64]
	_ = x[HoistSelectNotExists-65]
	_ = x[HoistSelectSubquery-66]
	_ = x[HoistProjectSubquery-67]
	_ = x[HoistJoinSubquery-68]
	_ = x[HoistValuesSubquery-69]
	_ = x[HoistProjectSetSubquery-70]
	_ = x[NormalizeSelectAnyFilter-71]
	_ = x[NormalizeJoinAnyFilter-72]
	_ = x[NormalizeSelectNotAnyFilter-73]
	_ = x[NormalizeJoinNotAnyFilter-74]
	_ = x[FoldNullCast-75]
	_ = x[FoldNullUnary-76]
	_ = x[FoldNullBinaryLeft-77]
	_ = x[FoldNullBinaryRight-78]
	_ = x[FoldNullInNonEmpty-79]
	_ = x[FoldInEmpty-80]
	_ = x[FoldNotInEmpty-81]
	_ = x[FoldArray-82]
	_ = x[FoldBinary-83]
	_ = x[FoldUnary-84]
	_ = x[FoldComparison-85]
	_ = x[FoldCast-86]
	_ = x[FoldIndirection-87]
	_ = x[FoldColumnAccess-88]
	_ = x[FoldFunctionWithNullArg-89]
	_ = x[FoldFunction-90]
	_ = x[FoldEqualsAnyNull-91]
	_ = x[ConvertGroupByToDistinct-92]
	_ = x[EliminateGroupByProject-93]
	_ = x[EliminateJoinUnderGroupByLeft-94]
	_ = x[EliminateJoinUnderGroupByRight-95]
	_ = x[EliminateDistinct-96]
	_ = x[ReduceGroupingCols-97]
	_ = x[ReduceNotNullGroupingCols-98]
	_ = x[EliminateAggDistinctForKeys-99]
	_ = x[EliminateAggFilteredDistinctForKeys-100]
	_ = x[EliminateDistinctNoColumns-101]
	_ = x[EliminateEnsureDistinctNoColumns-102]
	_ = x[EliminateDistinctOnValues-103]
	_ = x[PushAggDistinctIntoGroupBy-104]
	_ = x[PushAggFilterIntoScalarGroupBy-105]
	_ = x[ConvertCountToCountRows-106]
	_ = x[ConvertRegressionCountToCount-107]
	_ = x[FoldGroupingOperators-108]
	_ = x[InlineConstVar-109]
	_ = x[InlineProjectConstants-110]
	_ = x[InlineSelectConstants-111]
	_ = x[InlineJoinConstantsLeft-112]
	_ = x[InlineJoinConstantsRight-113]
	_ = x[PushSelectIntoInlinableProject-114]
	_ = x[InlineSelectVirtualColumns-115]
	_ = x[InlineProjectInProject-116]
	_ = x[CommuteRightJoin-117]
	_ = x[SimplifyJoinFilters-118]
	_ = x[DetectJoinContradiction-119]
	_ = x[PushFilterIntoJoinLeftAndRight-120]
	_ = x[MapFilterIntoJoinLeft-121]
	_ = x[MapFilterIntoJoinRight-122]
	_ = x[MapEqualityIntoJoinLeftAndRight-123]
	_ = x[PushFilterIntoJoinLeft-124]
	_ = x[PushFilterIntoJoinRight-125]
	_ = x[SimplifyLeftJoin-126]
	_ = x[SimplifyRightJoin-127]
	_ = x[EliminateSemiJoin-128]
	_ = x[SimplifyZeroCardinalitySemiJoin-129]
	_ = x[EliminateAntiJoin-130]
	_ = x[SimplifyZeroCardinalityAntiJoin-131]
	_ = x[EliminateJoinNoColsLeft-132]
	_ = x[EliminateJoinNoColsRight-133]
	_ = x[HoistJoinProjectRight-134]
	_ = x[HoistJoinProjectLeft-135]
	_ = x[SimplifyJoinNotNullEquality-136]
	_ = x[ExtractJoinEqualities-137]
	_ = x[SortFiltersInJoin-138]
	_ = x[LeftAssociateJoinsLeft-139]
	_ = x[LeftAssociateJoinsRight-140]
	_ = x[RightAssociateJoinsLeft-141]
	_ = x[RightAssociateJoinsRight-142]
	_ = x[RemoveJoinNotNullCondition-143]
	_ = x[ProjectInnerJoinValues-144]
	_ = x[EliminateLimit-145]
	_ = x[EliminateOffset-146]
	_ = x[PushLimitIntoProject-147]
	_ = x[PushOffsetIntoProject-148]
	_ = x[PushLimitIntoOffset-149]
	_ = x[PushLimitIntoOrdinality-150]
	_ = x[PushLimitIntoJoinLeft-151]
	_ = x[PushLimitIntoJoinRight-152]
	_ = x[FoldLimits-153]
	_ = x[AssociateLimitJoinsLeft-154]
	_ = x[AssociateLimitJoinsRight-155]
	_ = x[EliminateMax1Row-156]
	_ = x[SimplifyPartialIndexProjections-157]
	_ = x[FoldPlusZero-158]
	_ = x[FoldZeroPlus-159]
	_ = x[FoldMinusZero-160]
	_ = x[FoldMultOne-161]
	_ = x[FoldOneMult-162]
	_ = x[FoldDivOne-163]
	_ = x[InvertMinus-164]
	_ = x[EliminateUnaryMinus-165]
	_ = x[SimplifyLimitOrdering-166]
	_ = x[SimplifyOffsetOrdering-167]
	_ = x[SimplifyGroupByOrdering-168]
	_ = x[SimplifyOrdinalityOrdering-169]
	_ = x[SimplifyExplainOrdering-170]
	_ = x[EliminateJoinUnderProjectLeft-171]
	_ = x[EliminateJoinUnderProjectRight-172]
	_ = x[EliminateProject-173]
	_ = x[MergeProjects-174]
	_ = x[MergeProjectWithValues-175]
	_ = x[PushColumnRemappingIntoValues-176]
	_ = x[FoldTupleAccessIntoValues-177]
	_ = x[FoldJSONAccessIntoValues-178]
	_ = x[ConvertZipArraysToValues-179]
	_ = x[PruneProjectCols-180]
	_ = x[PruneScanCols-181]
	_ = x[PruneSelectCols-182]
	_ = x[PruneLimitCols-183]
	_ = x[PruneOffsetCols-184]
	_ = x[PruneJoinLeftCols-185]
	_ = x[PruneJoinRightCols-186]
	_ = x[PruneSemiAntiJoinRightCols-187]
	_ = x[PruneAggCols-188]
	_ = x[PruneGroupByCols-189]
	_ = x[PruneValuesCols-190]
	_ = x[PruneOrdinalityCols-191]
	_ = x[PruneExplainCols-192]
	_ = x[PruneProjectSetCols-193]
	_ = x[PruneWindowOutputCols-194]
	_ = x[PruneWindowInputCols-195]
	_ = x[PruneMutationFetchCols-196]
	_ = x[PruneMutationInputCols-197]
	_ = x[PruneMutationReturnCols-198]
	_ = x[PruneWithScanCols-199]
	_ = x[PruneWithCols-200]
	_ = x[PruneUnionAllCols-201]
	_ = x[RejectNullsLeftJoin-202]
	_ = x[RejectNullsRightJoin-203]
	_ = x[RejectNullsGroupBy-204]
	_ = x[RejectNullsUnderJoinLeft-205]
	_ = x[RejectNullsUnderJoinRight-206]
	_ = x[RejectNullsProject-207]
	_ = x[CommuteVar-208]
	_ = x[CommuteConst-209]
	_ = x[EliminateCoalesce-210]
	_ = x[SimplifyCoalesce-211]
	_ = x[EliminateCast-212]
	_ = x[NormalizeInConst-213]
	_ = x[FoldInNull-214]
	_ = x[SimplifyInSingleElement-215]
	_ = x[SimplifyNotInSingleElement-216]
	_ = x[UnifyComparisonTypes-217]
	_ = x[EliminateExistsZeroRows-218]
	_ = x[EliminateExistsProject-219]
	_ = x[EliminateExistsGroupBy-220]
	_ = x[InlineExistsSelectTuple-221]
	_ = x[IntroduceExistsLimit-222]
	_ = x[EliminateExistsLimit-223]
	_ = x[SimplifyCaseWhenConstValue-224]
	_ = x[InlineAnyValuesSingleCol-225]
	_ = x[InlineAnyValuesMultiCol-226]
	_ = x[SimplifyEqualsAnyTuple-227]
	_ = x[SimplifyAnyScalarArray-228]
	_ = x[FoldCollate-229]
	_ = x[NormalizeArrayFlattenToAgg-230]
	_ = x[SimplifySameVarEqualities-231]
	_ = x[SimplifySameVarInequalities-232]
	_ = x[SimplifyNotDisjoint-233]
	_ = x[SimplifySelectFilters-234]
	_ = x[ConsolidateSelectFilters-235]
	_ = x[EliminateSelect-236]
	_ = x[MergeSelects-237]
	_ = x[PushSelectIntoProject-238]
	_ = x[MergeSelectInnerJoin-239]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-240]
	_ = x[PushSelectIntoJoinLeft-241]
	_ = x[PushSelectIntoGroupBy-242]
	_ = x[RemoveNotNullCondition-243]
	_ = x[PushSelectIntoProjectSet-244]
	_ = x[PushFilterIntoSetOp-245]
	_ = x[EliminateUnionAllLeft-246]
	_ = x[EliminateUnionAllRight-247]
	_ = x[EliminateWindow-248]
	_ = x[ReduceWindowPartitionCols-249]
	_ = x[SimplifyWindowOrdering-250]
	_ = x[PushSelectIntoWindow-251]
	_ = x[PushLimitIntoWindow-252]
	_ = x[InlineWith-253]
	_ = x[startExploreRule-254]
	_ = x[ReplaceScalarMinMaxWithLimit-255]
	_ = x[ReplaceMinWithLimit-256]
	_ = x[ReplaceMaxWithLimit-257]
	_ = x[GenerateStreamingGroupBy-258]
	_ = x[ReorderJoins-259]
	_ = x[CommuteLeftJoin-260]
	_ = x[CommuteSemiJoin-261]
	_ = x[ConvertSemiToInnerJoin-262]
	_ = x[GenerateMergeJoins-263]
	_ = x[GenerateLookupJoins-264]
	_ = x[GenerateInvertedJoins-265]
	_ = x[GenerateInvertedJoinsFromSelect-266]
	_ = x[GenerateLookupJoinsWithFilter-267]
	_ = x[PushJoinIntoIndexJoin-268]
	_ = x[HoistProjectFromInnerJoin-269]
	_ = x[HoistProjectFromLeftJoin-270]
	_ = x[GenerateLocalityOptimizedAntiJoin-271]
	_ = x[GenerateLimitedScans-272]
	_ = x[PushLimitIntoFilteredScan-273]
	_ = x[PushLimitIntoIndexJoin-274]
	_ = x[SplitScanIntoUnionScans-275]
	_ = x[EliminateIndexJoinInsideProject-276]
	_ = x[GenerateIndexScans-277]
	_ = x[GenerateLocalityOptimizedScan-278]
	_ = x[GeneratePartialIndexScans-279]
	_ = x[GenerateConstrainedScans-280]
	_ = x[GenerateInvertedIndexScans-281]
	_ = x[GenerateZigzagJoins-282]
	_ = x[GenerateInvertedIndexZigzagJoins-283]
	_ = x[SplitDisjunction-284]
	_ = x[SplitDisjunctionAddKey-285]
	_ = x[NumRuleNames-286]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZFoldEqZeroSTDistanceFoldCmpSTDistanceLeftFoldCmpSTDistanceRightFoldCmpSTMaxDistanceLeftFoldCmpSTMaxDistanceRightDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionWithNullArgFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateGroupByProjectEliminateJoinUnderGroupByLeftEliminateJoinUnderGroupByRightEliminateDistinctReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsConvertRegressionCountToCountFoldGroupingOperatorsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineSelectVirtualColumnsInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinLeftAssociateJoinsLeftLeftAssociateJoinsRightRightAssociateJoinsLeftRightAssociateJoinsRightRemoveJoinNotNullConditionProjectInnerJoinValuesEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoJoinLeftPushLimitIntoJoinRightFoldLimitsAssociateLimitJoinsLeftAssociateLimitJoinsRightEliminateMax1RowSimplifyPartialIndexProjectionsFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateJoinUnderProjectLeftEliminateJoinUnderProjectRightEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesFoldJSONAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByRejectNullsUnderJoinLeftRejectNullsUnderJoinRightRejectNullsProjectCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullSimplifyInSingleElementSimplifyNotInSingleElementUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByInlineExistsSelectTupleIntroduceExistsLimitEliminateExistsLimitSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifyNotDisjointSimplifySelectFiltersConsolidateSelectFiltersEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByReorderJoinsCommuteLeftJoinCommuteSemiJoinConvertSemiToInnerJoinGenerateMergeJoinsGenerateLookupJoinsGenerateInvertedJoinsGenerateInvertedJoinsFromSelectGenerateLookupJoinsWithFilterPushJoinIntoIndexJoinHoistProjectFromInnerJoinHoistProjectFromLeftJoinGenerateLocalityOptimizedAntiJoinGenerateLimitedScansPushLimitIntoFilteredScanPushLimitIntoIndexJoinSplitScanIntoUnionScansEliminateIndexJoinInsideProjectGenerateIndexScansGenerateLocalityOptimizedScanGeneratePartialIndexScansGenerateConstrainedScansGenerateInvertedIndexScansGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 815, 836, 858, 882, 907, 922, 943, 963, 984, 1011, 1041, 1064, 1091, 1112, 1139, 1161, 1183, 1207, 1227, 1248, 1265, 1285, 1304, 1324, 1341, 1360, 1383, 1407, 1429, 1456, 1481, 1493, 1506, 1524, 1543, 1561, 1572, 1586, 1595, 1605, 1614, 1628, 1636, 1651, 1667, 1690, 1702, 1719, 1743, 1766, 1795, 1825, 1842, 1860, 1885, 1912, 1947, 1973, 2005, 2030, 2056, 2086, 2109, 2138, 2159, 2173, 2195, 2216, 2239, 2263, 2293, 2319, 2341, 2357, 2376, 2399, 2429, 2450, 2472, 2503, 2525, 2548, 2564, 2581, 2598, 2629, 2646, 2677, 2700, 2724, 2745, 2765, 2792, 2813, 2830, 2852, 2875, 2898, 2922, 2948, 2970, 2984, 2999, 3019, 3040, 3059, 3082, 3103, 3125, 3135, 3158, 3182, 3198, 3229, 3241, 3253, 3266, 3277, 3288, 3298, 3309, 3328, 3349, 3371, 3394, 3420, 3443, 3472, 3502, 3518, 3531, 3553, 3582, 3607, 3631, 3655, 3671, 3684, 3699, 3713, 3728, 3745, 3763, 3789, 3801, 3817, 3832, 3851, 3867, 3886, 3907, 3927, 3949, 3971, 3994, 4011, 4024, 4041, 4060, 4080, 4098, 4122, 4147, 4165, 4175, 4187, 4204, 4220, 4233, 4249, 4259, 4282, 4308, 4328, 4351, 4373, 4395, 4418, 4438, 4458, 4484, 4508, 4531, 4553, 4575, 4586, 4612, 4637, 4664, 4683, 4704, 4728, 4743, 4755, 4776, 4796, 4834, 4856, 4877, 4899, 4923, 4942, 4963, 4985, 5000, 5025, 5047, 5067, 5086, 5096, 5112, 5140, 5159, 5178, 5202, 5214, 5229, 5244, 5266, 5284, 5303, 5324, 5355, 5384, 5405, 5430, 5454, 5487, 5507, 5532, 5554, 5577, 5608, 5626, 5655, 5680, 5704, 5730, 5749, 5781, 5797, 5819, 5831}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
