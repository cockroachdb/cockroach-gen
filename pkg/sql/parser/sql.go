// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:923
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14491

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1712,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	270, 441,
	-2, 0,
	-1, 71,
	8, 896,
	29, 896,
	618, 896,
	619, 896,
	-2, 0,
	-1, 72,
	8, 896,
	29, 896,
	618, 896,
	619, 896,
	-2, 0,
	-1, 79,
	252, 266,
	540, 266,
	-2, 0,
	-1, 93,
	240, 1445,
	254, 1445,
	270, 437,
	408, 437,
	419, 1192,
	460, 437,
	474, 1192,
	524, 1192,
	552, 437,
	579, 1192,
	-2, 0,
	-1, 99,
	137, 1712,
	247, 1712,
	563, 1712,
	564, 1712,
	-2, 0,
	-1, 117,
	156, 1683,
	176, 1683,
	189, 1683,
	250, 1683,
	283, 1683,
	357, 1683,
	368, 1683,
	558, 1683,
	-2, 1654,
	-1, 159,
	164, 1023,
	269, 1023,
	411, 984,
	479, 984,
	523, 984,
	543, 1023,
	545, 984,
	-2, 0,
	-1, 164,
	4, 1714,
	21, 1714,
	22, 1714,
	23, 1714,
	24, 1714,
	25, 1714,
	26, 1714,
	27, 1714,
	28, 1714,
	30, 1714,
	31, 1714,
	37, 1714,
	41, 1714,
	43, 1714,
	44, 1714,
	46, 1714,
	47, 1714,
	48, 1714,
	49, 1714,
	50, 1714,
	51, 1714,
	52, 1714,
	53, 1714,
	54, 1714,
	56, 1714,
	57, 1714,
	58, 1714,
	59, 1714,
	61, 1714,
	62, 1714,
	63, 1714,
	64, 1714,
	65, 1714,
	66, 1714,
	67, 1714,
	71, 1714,
	72, 1714,
	73, 1714,
	74, 1714,
	76, 1714,
	77, 1714,
	78, 1714,
	82, 1714,
	83, 1714,
	84, 1714,
	85, 1714,
	86, 1714,
	87, 1714,
	88, 1714,
	89, 1714,
	92, 1714,
	93, 1714,
	94, 1714,
	95, 1714,
	96, 1714,
	98, 1714,
	100, 1714,
	101, 1714,
	102, 1714,
	103, 1714,
	104, 1714,
	105, 1714,
	107, 1714,
	108, 1714,
	109, 1714,
	111, 1714,
	112, 1714,
	113, 1714,
	121, 1714,
	122, 1714,
	123, 1714,
	124, 1714,
	125, 1714,
	127, 1714,
	128, 1714,
	129, 1714,
	130, 1714,
	132, 1714,
	133, 1714,
	134, 1714,
	136, 1714,
	137, 1714,
	138, 1714,
	140, 1714,
	141, 1714,
	142, 1714,
	145, 1714,
	146, 1714,
	147, 1714,
	149, 1714,
	150, 1714,
	151, 1714,
	153, 1714,
	154, 1714,
	155, 1714,
	157, 1714,
	158, 1714,
	159, 1714,
	160, 1714,
	161, 1714,
	162, 1714,
	163, 1714,
	164, 1714,
	165, 1714,
	166, 1714,
	167, 1714,
	168, 1714,
	169, 1714,
	170, 1714,
	171, 1714,
	172, 1714,
	173, 1714,
	175, 1714,
	181, 1714,
	182, 1714,
	183, 1714,
	184, 1714,
	188, 1714,
	190, 1714,
	191, 1714,
	192, 1714,
	194, 1714,
	197, 1714,
	198, 1714,
	199, 1714,
	200, 1714,
	201, 1714,
	202, 1714,
	203, 1714,
	204, 1714,
	205, 1714,
	206, 1714,
	207, 1714,
	208, 1714,
	209, 1714,
	210, 1714,
	212, 1714,
	213, 1714,
	215, 1714,
	216, 1714,
	218, 1714,
	219, 1714,
	220, 1714,
	221, 1714,
	222, 1714,
	223, 1714,
	224, 1714,
	225, 1714,
	226, 1714,
	227, 1714,
	229, 1714,
	230, 1714,
	232, 1714,
	233, 1714,
	234, 1714,
	235, 1714,
	236, 1714,
	240, 1714,
	241, 1714,
	242, 1714,
	243, 1714,
	246, 1714,
	247, 1714,
	248, 1714,
	249, 1714,
	251, 1714,
	253, 1714,
	254, 1714,
	256, 1714,
	258, 1714,
	259, 1714,
	260, 1714,
	262, 1714,
	266, 1714,
	267, 1714,
	268, 1714,
	269, 1714,
	270, 1714,
	271, 1714,
	273, 1714,
	274, 1714,
	275, 1714,
	277, 1714,
	278, 1714,
	280, 1714,
	281, 1714,
	284, 1714,
	285, 1714,
	286, 1714,
	287, 1714,
	288, 1714,
	289, 1714,
	290, 1714,
	293, 1714,
	294, 1714,
	295, 1714,
	296, 1714,
	298, 1714,
	299, 1714,
	300, 1714,
	301, 1714,
	302, 1714,
	303, 1714,
	304, 1714,
	305, 1714,
	306, 1714,
	307, 1714,
	308, 1714,
	309, 1714,
	310, 1714,
	311, 1714,
	312, 1714,
	313, 1714,
	314, 1714,
	315, 1714,
	316, 1714,
	317, 1714,
	318, 1714,
	319, 1714,
	320, 1714,
	322, 1714,
	324, 1714,
	325, 1714,
	326, 1714,
	327, 1714,
	328, 1714,
	329, 1714,
	330, 1714,
	331, 1714,
	332, 1714,
	333, 1714,
	334, 1714,
	335, 1714,
	336, 1714,
	337, 1714,
	338, 1714,
	339, 1714,
	340, 1714,
	342, 1714,
	343, 1714,
	345, 1714,
	347, 1714,
	348, 1714,
	349, 1714,
	350, 1714,
	352, 1714,
	353, 1714,
	354, 1714,
	355, 1714,
	356, 1714,
	359, 1714,
	361, 1714,
	363, 1714,
	364, 1714,
	365, 1714,
	366, 1714,
	369, 1714,
	370, 1714,
	371, 1714,
	373, 1714,
	375, 1714,
	376, 1714,
	377, 1714,
	378, 1714,
	379, 1714,
	380, 1714,
	381, 1714,
	382, 1714,
	383, 1714,
	384, 1714,
	385, 1714,
	386, 1714,
	387, 1714,
	389, 1714,
	390, 1714,
	391, 1714,
	392, 1714,
	393, 1714,
	394, 1714,
	395, 1714,
	396, 1714,
	397, 1714,
	398, 1714,
	399, 1714,
	400, 1714,
	401, 1714,
	402, 1714,
	403, 1714,
	405, 1714,
	406, 1714,
	407, 1714,
	409, 1714,
	410, 1714,
	411, 1714,
	412, 1714,
	413, 1714,
	414, 1714,
	415, 1714,
	416, 1714,
	417, 1714,
	418, 1714,
	419, 1714,
	420, 1714,
	421, 1714,
	423, 1714,
	425, 1714,
	426, 1714,
	427, 1714,
	433, 1714,
	434, 1714,
	435, 1714,
	437, 1714,
	438, 1714,
	439, 1714,
	440, 1714,
	441, 1714,
	442, 1714,
	443, 1714,
	444, 1714,
	445, 1714,
	446, 1714,
	448, 1714,
	449, 1714,
	450, 1714,
	452, 1714,
	453, 1714,
	454, 1714,
	455, 1714,
	456, 1714,
	457, 1714,
	458, 1714,
	460, 1714,
	461, 1714,
	462, 1714,
	463, 1714,
	464, 1714,
	465, 1714,
	466, 1714,
	467, 1714,
	468, 1714,
	469, 1714,
	470, 1714,
	471, 1714,
	472, 1714,
	474, 1714,
	475, 1714,
	476, 1714,
	477, 1714,
	478, 1714,
	479, 1714,
	481, 1714,
	482, 1714,
	483, 1714,
	484, 1714,
	485, 1714,
	486, 1714,
	488, 1714,
	489, 1714,
	490, 1714,
	491, 1714,
	492, 1714,
	493, 1714,
	494, 1714,
	495, 1714,
	497, 1714,
	499, 1714,
	500, 1714,
	501, 1714,
	502, 1714,
	503, 1714,
	504, 1714,
	505, 1714,
	506, 1714,
	507, 1714,
	508, 1714,
	509, 1714,
	510, 1714,
	511, 1714,
	512, 1714,
	513, 1714,
	514, 1714,
	515, 1714,
	516, 1714,
	517, 1714,
	519, 1714,
	520, 1714,
	522, 1714,
	523, 1714,
	525, 1714,
	526, 1714,
	527, 1714,
	528, 1714,
	529, 1714,
	530, 1714,
	532, 1714,
	533, 1714,
	535, 1714,
	536, 1714,
	537, 1714,
	538, 1714,
	539, 1714,
	541, 1714,
	543, 1714,
	544, 1714,
	545, 1714,
	546, 1714,
	547, 1714,
	548, 1714,
	549, 1714,
	551, 1714,
	552, 1714,
	553, 1714,
	554, 1714,
	556, 1714,
	557, 1714,
	560, 1714,
	561, 1714,
	562, 1714,
	563, 1714,
	564, 1714,
	565, 1714,
	566, 1714,
	567, 1714,
	569, 1714,
	572, 1714,
	573, 1714,
	574, 1714,
	575, 1714,
	576, 1714,
	577, 1714,
	579, 1714,
	580, 1714,
	581, 1714,
	582, 1714,
	583, 1714,
	584, 1714,
	585, 1714,
	586, 1714,
	591, 1714,
	592, 1714,
	593, 1714,
	594, 1714,
	595, 1714,
	596, 1714,
	-2, 0,
	-1, 165,
	1, 1562,
	135, 1562,
	258, 1562,
	344, 1562,
	406, 1562,
	415, 1562,
	600, 1562,
	631, 1562,
	-2, 0,
	-1, 167,
	1, 1562,
	631, 1562,
	-2, 0,
	-1, 168,
	1, 1562,
	631, 1562,
	-2, 0,
	-1, 169,
	1, 1562,
	540, 1562,
	631, 1562,
	-2, 0,
	-1, 201,
	156, 1682,
	176, 1682,
	189, 1682,
	250, 1682,
	283, 1682,
	357, 1682,
	368, 1682,
	558, 1682,
	-2, 1657,
	-1, 251,
	4, 1721,
	5, 1721,
	6, 1721,
	7, 1721,
	8, 1721,
	9, 1721,
	10, 1721,
	21, 1721,
	22, 1721,
	23, 1721,
	24, 1721,
	25, 1721,
	26, 1721,
	27, 1721,
	28, 1721,
	30, 1721,
	31, 1721,
	37, 1721,
	38, 1721,
	41, 1721,
	43, 1721,
	44, 1721,
	45, 1721,
	46, 1721,
	47, 1721,
	48, 1721,
	49, 1721,
	50, 1721,
	51, 1721,
	52, 1721,
	53, 1721,
	54, 1721,
	56, 1721,
	57, 1721,
	58, 1721,
	59, 1721,
	61, 1721,
	62, 1721,
	63, 1721,
	64, 1721,
	65, 1721,
	66, 1721,
	67, 1721,
	68, 1721,
	69, 1721,
	70, 1721,
	71, 1721,
	72, 1721,
	73, 1721,
	74, 1721,
	76, 1721,
	77, 1721,
	78, 1721,
	80, 1721,
	82, 1721,
	83, 1721,
	84, 1721,
	85, 1721,
	86, 1721,
	87, 1721,
	88, 1721,
	89, 1721,
	92, 1721,
	93, 1721,
	94, 1721,
	95, 1721,
	96, 1721,
	98, 1721,
	100, 1721,
	101, 1721,
	102, 1721,
	103, 1721,
	104, 1721,
	105, 1721,
	107, 1721,
	108, 1721,
	109, 1721,
	110, 1721,
	111, 1721,
	112, 1721,
	113, 1721,
	114, 1721,
	115, 1721,
	116, 1721,
	117, 1721,
	118, 1721,
	119, 1721,
	120, 1721,
	121, 1721,
	122, 1721,
	123, 1721,
	124, 1721,
	125, 1721,
	126, 1721,
	127, 1721,
	128, 1721,
	129, 1721,
	130, 1721,
	131, 1721,
	132, 1721,
	133, 1721,
	134, 1721,
	136, 1721,
	137, 1721,
	138, 1721,
	140, 1721,
	141, 1721,
	142, 1721,
	145, 1721,
	146, 1721,
	147, 1721,
	149, 1721,
	150, 1721,
	151, 1721,
	153, 1721,
	154, 1721,
	155, 1721,
	157, 1721,
	158, 1721,
	159, 1721,
	160, 1721,
	161, 1721,
	162, 1721,
	163, 1721,
	164, 1721,
	165, 1721,
	166, 1721,
	167, 1721,
	168, 1721,
	169, 1721,
	170, 1721,
	171, 1721,
	172, 1721,
	173, 1721,
	174, 1721,
	175, 1721,
	181, 1721,
	182, 1721,
	183, 1721,
	184, 1721,
	188, 1721,
	190, 1721,
	191, 1721,
	192, 1721,
	194, 1721,
	196, 1721,
	197, 1721,
	198, 1721,
	199, 1721,
	200, 1721,
	201, 1721,
	202, 1721,
	203, 1721,
	204, 1721,
	205, 1721,
	206, 1721,
	207, 1721,
	208, 1721,
	209, 1721,
	210, 1721,
	212, 1721,
	213, 1721,
	215, 1721,
	216, 1721,
	218, 1721,
	219, 1721,
	220, 1721,
	221, 1721,
	222, 1721,
	223, 1721,
	224, 1721,
	225, 1721,
	226, 1721,
	227, 1721,
	228, 1721,
	229, 1721,
	230, 1721,
	232, 1721,
	233, 1721,
	234, 1721,
	235, 1721,
	236, 1721,
	240, 1721,
	241, 1721,
	242, 1721,
	243, 1721,
	245, 1721,
	246, 1721,
	247, 1721,
	248, 1721,
	249, 1721,
	251, 1721,
	253, 1721,
	254, 1721,
	255, 1721,
	256, 1721,
	257, 1721,
	258, 1721,
	259, 1721,
	260, 1721,
	261, 1721,
	262, 1721,
	266, 1721,
	267, 1721,
	268, 1721,
	269, 1721,
	270, 1721,
	271, 1721,
	273, 1721,
	274, 1721,
	275, 1721,
	277, 1721,
	278, 1721,
	279, 1721,
	280, 1721,
	281, 1721,
	282, 1721,
	284, 1721,
	285, 1721,
	286, 1721,
	287, 1721,
	288, 1721,
	289, 1721,
	290, 1721,
	291, 1721,
	292, 1721,
	293, 1721,
	294, 1721,
	295, 1721,
	296, 1721,
	298, 1721,
	299, 1721,
	300, 1721,
	301, 1721,
	302, 1721,
	303, 1721,
	304, 1721,
	305, 1721,
	306, 1721,
	307, 1721,
	308, 1721,
	309, 1721,
	310, 1721,
	311, 1721,
	312, 1721,
	313, 1721,
	314, 1721,
	315, 1721,
	316, 1721,
	317, 1721,
	318, 1721,
	319, 1721,
	320, 1721,
	322, 1721,
	323, 1721,
	324, 1721,
	325, 1721,
	326, 1721,
	327, 1721,
	328, 1721,
	329, 1721,
	330, 1721,
	331, 1721,
	332, 1721,
	333, 1721,
	334, 1721,
	335, 1721,
	336, 1721,
	337, 1721,
	338, 1721,
	339, 1721,
	340, 1721,
	341, 1721,
	342, 1721,
	343, 1721,
	344, 1721,
	345, 1721,
	346, 1721,
	347, 1721,
	348, 1721,
	349, 1721,
	350, 1721,
	351, 1721,
	352, 1721,
	353, 1721,
	354, 1721,
	355, 1721,
	356, 1721,
	359, 1721,
	361, 1721,
	364, 1721,
	365, 1721,
	366, 1721,
	369, 1721,
	370, 1721,
	371, 1721,
	372, 1721,
	373, 1721,
	374, 1721,
	375, 1721,
	376, 1721,
	377, 1721,
	378, 1721,
	379, 1721,
	380, 1721,
	381, 1721,
	382, 1721,
	383, 1721,
	384, 1721,
	385, 1721,
	386, 1721,
	387, 1721,
	389, 1721,
	390, 1721,
	391, 1721,
	392, 1721,
	393, 1721,
	394, 1721,
	395, 1721,
	396, 1721,
	397, 1721,
	398, 1721,
	399, 1721,
	400, 1721,
	401, 1721,
	402, 1721,
	403, 1721,
	405, 1721,
	406, 1721,
	407, 1721,
	409, 1721,
	410, 1721,
	411, 1721,
	412, 1721,
	413, 1721,
	414, 1721,
	415, 1721,
	416, 1721,
	417, 1721,
	418, 1721,
	419, 1721,
	420, 1721,
	421, 1721,
	423, 1721,
	425, 1721,
	426, 1721,
	427, 1721,
	433, 1721,
	434, 1721,
	435, 1721,
	437, 1721,
	438, 1721,
	439, 1721,
	440, 1721,
	441, 1721,
	442, 1721,
	443, 1721,
	444, 1721,
	445, 1721,
	446, 1721,
	448, 1721,
	449, 1721,
	450, 1721,
	451, 1721,
	452, 1721,
	453, 1721,
	454, 1721,
	455, 1721,
	456, 1721,
	457, 1721,
	458, 1721,
	460, 1721,
	461, 1721,
	462, 1721,
	463, 1721,
	464, 1721,
	465, 1721,
	466, 1721,
	467, 1721,
	468, 1721,
	469, 1721,
	470, 1721,
	471, 1721,
	472, 1721,
	474, 1721,
	475, 1721,
	476, 1721,
	477, 1721,
	478, 1721,
	479, 1721,
	480, 1721,
	481, 1721,
	482, 1721,
	483, 1721,
	484, 1721,
	485, 1721,
	486, 1721,
	487, 1721,
	488, 1721,
	489, 1721,
	490, 1721,
	491, 1721,
	492, 1721,
	493, 1721,
	494, 1721,
	495, 1721,
	497, 1721,
	499, 1721,
	500, 1721,
	501, 1721,
	502, 1721,
	503, 1721,
	504, 1721,
	505, 1721,
	506, 1721,
	507, 1721,
	508, 1721,
	509, 1721,
	510, 1721,
	511, 1721,
	512, 1721,
	513, 1721,
	514, 1721,
	515, 1721,
	516, 1721,
	517, 1721,
	519, 1721,
	520, 1721,
	521, 1721,
	522, 1721,
	523, 1721,
	525, 1721,
	526, 1721,
	527, 1721,
	528, 1721,
	529, 1721,
	530, 1721,
	532, 1721,
	533, 1721,
	535, 1721,
	536, 1721,
	537, 1721,
	538, 1721,
	539, 1721,
	541, 1721,
	543, 1721,
	544, 1721,
	545, 1721,
	546, 1721,
	547, 1721,
	548, 1721,
	549, 1721,
	550, 1721,
	551, 1721,
	552, 1721,
	553, 1721,
	554, 1721,
	556, 1721,
	557, 1721,
	559, 1721,
	560, 1721,
	561, 1721,
	562, 1721,
	563, 1721,
	564, 1721,
	565, 1721,
	566, 1721,
	567, 1721,
	568, 1721,
	569, 1721,
	572, 1721,
	573, 1721,
	574, 1721,
	575, 1721,
	576, 1721,
	577, 1721,
	579, 1721,
	580, 1721,
	581, 1721,
	582, 1721,
	583, 1721,
	584, 1721,
	585, 1721,
	586, 1721,
	591, 1721,
	592, 1721,
	593, 1721,
	594, 1721,
	595, 1721,
	596, 1721,
	597, 1721,
	611, 1721,
	618, 1721,
	619, 1721,
	620, 1721,
	628, 1721,
	632, 1721,
	-2, 0,
	-1, 793,
	4, 1443,
	21, 1443,
	22, 1443,
	23, 1443,
	24, 1443,
	25, 1443,
	26, 1443,
	27, 1443,
	28, 1443,
	30, 1443,
	31, 1443,
	37, 1443,
	41, 1443,
	43, 1443,
	44, 1443,
	46, 1443,
	47, 1443,
	48, 1443,
	49, 1443,
	50, 1443,
	51, 1443,
	52, 1443,
	53, 1443,
	54, 1443,
	56, 1443,
	57, 1443,
	58, 1443,
	59, 1443,
	61, 1443,
	62, 1443,
	63, 1443,
	64, 1443,
	65, 1443,
	66, 1443,
	67, 1443,
	71, 1443,
	72, 1443,
	73, 1443,
	74, 1443,
	76, 1443,
	77, 1443,
	78, 1443,
	82, 1443,
	83, 1443,
	84, 1443,
	85, 1443,
	86, 1443,
	87, 1443,
	88, 1443,
	89, 1443,
	92, 1443,
	93, 1443,
	94, 1443,
	95, 1443,
	96, 1443,
	98, 1443,
	100, 1443,
	101, 1443,
	102, 1443,
	103, 1443,
	104, 1443,
	105, 1443,
	107, 1443,
	108, 1443,
	109, 1443,
	111, 1443,
	112, 1443,
	113, 1443,
	121, 1443,
	122, 1443,
	123, 1443,
	124, 1443,
	125, 1443,
	127, 1443,
	128, 1443,
	129, 1443,
	130, 1443,
	132, 1443,
	133, 1443,
	134, 1443,
	136, 1443,
	137, 1443,
	138, 1443,
	140, 1443,
	141, 1443,
	142, 1443,
	145, 1443,
	146, 1443,
	147, 1443,
	149, 1443,
	150, 1443,
	151, 1443,
	153, 1443,
	154, 1443,
	155, 1443,
	157, 1443,
	158, 1443,
	159, 1443,
	160, 1443,
	161, 1443,
	162, 1443,
	163, 1443,
	164, 1443,
	165, 1443,
	166, 1443,
	167, 1443,
	168, 1443,
	169, 1443,
	170, 1443,
	171, 1443,
	172, 1443,
	173, 1443,
	175, 1443,
	181, 1443,
	182, 1443,
	183, 1443,
	184, 1443,
	188, 1443,
	190, 1443,
	191, 1443,
	192, 1443,
	194, 1443,
	197, 1443,
	198, 1443,
	199, 1443,
	200, 1443,
	201, 1443,
	202, 1443,
	203, 1443,
	204, 1443,
	205, 1443,
	206, 1443,
	207, 1443,
	208, 1443,
	209, 1443,
	210, 1443,
	212, 1443,
	213, 1443,
	215, 1443,
	216, 1443,
	218, 1443,
	219, 1443,
	220, 1443,
	221, 1443,
	222, 1443,
	223, 1443,
	224, 1443,
	225, 1443,
	226, 1443,
	227, 1443,
	229, 1443,
	230, 1443,
	232, 1443,
	233, 1443,
	234, 1443,
	235, 1443,
	236, 1443,
	240, 1443,
	241, 1443,
	242, 1443,
	243, 1443,
	246, 1443,
	247, 1443,
	248, 1443,
	249, 1443,
	251, 1443,
	253, 1443,
	254, 1443,
	256, 1443,
	258, 1443,
	259, 1443,
	260, 1443,
	262, 1443,
	266, 1443,
	267, 1443,
	268, 1443,
	269, 1443,
	270, 1443,
	271, 1443,
	273, 1443,
	274, 1443,
	275, 1443,
	277, 1443,
	278, 1443,
	280, 1443,
	281, 1443,
	284, 1443,
	285, 1443,
	286, 1443,
	287, 1443,
	288, 1443,
	289, 1443,
	290, 1443,
	293, 1443,
	294, 1443,
	295, 1443,
	296, 1443,
	298, 1443,
	299, 1443,
	300, 1443,
	301, 1443,
	302, 1443,
	303, 1443,
	304, 1443,
	305, 1443,
	306, 1443,
	307, 1443,
	308, 1443,
	309, 1443,
	310, 1443,
	311, 1443,
	312, 1443,
	313, 1443,
	314, 1443,
	315, 1443,
	316, 1443,
	317, 1443,
	318, 1443,
	319, 1443,
	320, 1443,
	322, 1443,
	324, 1443,
	325, 1443,
	326, 1443,
	327, 1443,
	328, 1443,
	329, 1443,
	330, 1443,
	331, 1443,
	332, 1443,
	333, 1443,
	334, 1443,
	335, 1443,
	336, 1443,
	337, 1443,
	338, 1443,
	339, 1443,
	340, 1443,
	342, 1443,
	343, 1443,
	345, 1443,
	347, 1443,
	348, 1443,
	349, 1443,
	350, 1443,
	352, 1443,
	353, 1443,
	354, 1443,
	355, 1443,
	356, 1443,
	359, 1443,
	361, 1443,
	364, 1443,
	365, 1443,
	366, 1443,
	369, 1443,
	370, 1443,
	371, 1443,
	373, 1443,
	375, 1443,
	376, 1443,
	377, 1443,
	378, 1443,
	379, 1443,
	380, 1443,
	381, 1443,
	382, 1443,
	383, 1443,
	384, 1443,
	385, 1443,
	386, 1443,
	387, 1443,
	389, 1443,
	390, 1443,
	391, 1443,
	392, 1443,
	393, 1443,
	394, 1443,
	395, 1443,
	396, 1443,
	397, 1443,
	398, 1443,
	399, 1443,
	400, 1443,
	401, 1443,
	402, 1443,
	403, 1443,
	405, 1443,
	406, 1443,
	407, 1443,
	409, 1443,
	410, 1443,
	411, 1443,
	412, 1443,
	413, 1443,
	414, 1443,
	415, 1443,
	416, 1443,
	417, 1443,
	418, 1443,
	419, 1443,
	420, 1443,
	421, 1443,
	423, 1443,
	425, 1443,
	426, 1443,
	427, 1443,
	433, 1443,
	434, 1443,
	435, 1443,
	437, 1443,
	438, 1443,
	439, 1443,
	440, 1443,
	441, 1443,
	442, 1443,
	443, 1443,
	444, 1443,
	445, 1443,
	446, 1443,
	448, 1443,
	449, 1443,
	450, 1443,
	452, 1443,
	453, 1443,
	454, 1443,
	455, 1443,
	456, 1443,
	457, 1443,
	458, 1443,
	460, 1443,
	461, 1443,
	462, 1443,
	463, 1443,
	464, 1443,
	465, 1443,
	466, 1443,
	467, 1443,
	468, 1443,
	469, 1443,
	470, 1443,
	471, 1443,
	472, 1443,
	474, 1443,
	475, 1443,
	476, 1443,
	477, 1443,
	478, 1443,
	479, 1443,
	481, 1443,
	482, 1443,
	483, 1443,
	484, 1443,
	485, 1443,
	486, 1443,
	488, 1443,
	489, 1443,
	490, 1443,
	491, 1443,
	492, 1443,
	493, 1443,
	494, 1443,
	495, 1443,
	497, 1443,
	499, 1443,
	500, 1443,
	501, 1443,
	502, 1443,
	503, 1443,
	504, 1443,
	505, 1443,
	506, 1443,
	507, 1443,
	508, 1443,
	509, 1443,
	510, 1443,
	511, 1443,
	512, 1443,
	513, 1443,
	514, 1443,
	515, 1443,
	516, 1443,
	517, 1443,
	519, 1443,
	520, 1443,
	522, 1443,
	523, 1443,
	525, 1443,
	526, 1443,
	527, 1443,
	528, 1443,
	529, 1443,
	530, 1443,
	532, 1443,
	533, 1443,
	535, 1443,
	536, 1443,
	537, 1443,
	538, 1443,
	539, 1443,
	541, 1443,
	543, 1443,
	544, 1443,
	545, 1443,
	546, 1443,
	547, 1443,
	548, 1443,
	549, 1443,
	551, 1443,
	552, 1443,
	553, 1443,
	554, 1443,
	556, 1443,
	557, 1443,
	560, 1443,
	561, 1443,
	562, 1443,
	563, 1443,
	564, 1443,
	565, 1443,
	566, 1443,
	567, 1443,
	569, 1443,
	572, 1443,
	573, 1443,
	574, 1443,
	575, 1443,
	576, 1443,
	577, 1443,
	579, 1443,
	580, 1443,
	581, 1443,
	582, 1443,
	583, 1443,
	584, 1443,
	585, 1443,
	586, 1443,
	591, 1443,
	592, 1443,
	593, 1443,
	594, 1443,
	595, 1443,
	596, 1443,
	-2, 0,
	-1, 812,
	195, 2517,
	540, 2517,
	610, 2517,
	630, 2517,
	-2, 0,
	-1, 813,
	195, 2503,
	540, 2503,
	610, 2503,
	630, 2503,
	-2, 0,
	-1, 815,
	195, 2781,
	540, 2781,
	610, 2781,
	630, 2781,
	-2, 0,
	-1, 818,
	195, 2631,
	540, 2631,
	610, 2631,
	630, 2631,
	-2, 0,
	-1, 819,
	195, 2825,
	540, 2825,
	610, 2825,
	630, 2825,
	-2, 0,
	-1, 827,
	195, 2659,
	540, 2659,
	610, 2659,
	630, 2659,
	-2, 762,
	-1, 843,
	8, 895,
	29, 895,
	618, 895,
	619, 895,
	-2, 900,
	-1, 847,
	1, 2571,
	631, 2571,
	-2, 900,
	-1, 848,
	1, 2619,
	631, 2619,
	-2, 900,
	-1, 851,
	1, 2664,
	631, 2664,
	-2, 893,
	-1, 852,
	1, 2720,
	631, 2720,
	-2, 894,
	-1, 853,
	1, 2576,
	631, 2576,
	-2, 897,
	-1, 854,
	1, 2490,
	631, 2490,
	-2, 898,
	-1, 889,
	630, 2449,
	633, 2449,
	-2, 1109,
	-1, 890,
	630, 2451,
	633, 2451,
	-2, 1110,
	-1, 891,
	630, 2450,
	633, 2450,
	-2, 1111,
	-1, 892,
	633, 2375,
	-2, 1112,
	-1, 917,
	189, 285,
	-2, 0,
	-1, 941,
	45, 2422,
	-2, 0,
	-1, 942,
	579, 1421,
	-2, 1193,
	-1, 958,
	4, 1855,
	21, 1855,
	22, 1855,
	23, 1855,
	24, 1855,
	25, 1855,
	26, 1855,
	27, 1855,
	28, 1855,
	30, 1855,
	31, 1855,
	37, 1855,
	41, 1855,
	43, 1855,
	44, 1855,
	46, 1855,
	47, 1855,
	48, 1855,
	49, 1855,
	50, 1855,
	51, 1855,
	52, 1855,
	53, 1855,
	54, 1855,
	56, 1855,
	57, 1855,
	58, 1855,
	59, 1855,
	61, 1855,
	62, 1855,
	63, 1855,
	64, 1855,
	65, 1855,
	66, 1855,
	67, 1855,
	71, 1855,
	72, 1855,
	73, 1855,
	74, 1855,
	76, 1855,
	77, 1855,
	78, 1855,
	82, 1855,
	83, 1855,
	84, 1855,
	85, 1855,
	86, 1855,
	87, 1855,
	88, 1855,
	89, 1855,
	92, 1855,
	93, 1855,
	94, 1855,
	95, 1855,
	96, 1855,
	98, 1855,
	100, 1855,
	101, 1855,
	102, 1855,
	103, 1855,
	104, 1855,
	105, 1855,
	107, 1855,
	108, 1855,
	109, 1855,
	111, 1855,
	112, 1855,
	113, 1855,
	121, 1855,
	122, 1855,
	123, 1855,
	124, 1855,
	125, 1855,
	127, 1855,
	128, 1855,
	129, 1855,
	130, 1855,
	132, 1855,
	133, 1855,
	134, 1855,
	136, 1855,
	137, 1855,
	138, 1855,
	140, 1855,
	141, 1855,
	142, 1855,
	145, 1855,
	146, 1855,
	147, 1855,
	149, 1855,
	150, 1855,
	151, 1855,
	153, 1855,
	154, 1855,
	155, 1855,
	157, 1855,
	158, 1855,
	159, 1855,
	160, 1855,
	161, 1855,
	162, 1855,
	163, 1855,
	164, 1855,
	165, 1855,
	166, 1855,
	167, 1855,
	168, 1855,
	169, 1855,
	170, 1855,
	171, 1855,
	172, 1855,
	173, 1855,
	175, 1855,
	181, 1855,
	182, 1855,
	183, 1855,
	184, 1855,
	188, 1855,
	190, 1855,
	191, 1855,
	192, 1855,
	194, 1855,
	197, 1855,
	198, 1855,
	199, 1855,
	200, 1855,
	201, 1855,
	202, 1855,
	203, 1855,
	204, 1855,
	205, 1855,
	206, 1855,
	207, 1855,
	208, 1855,
	209, 1855,
	210, 1855,
	212, 1855,
	213, 1855,
	215, 1855,
	216, 1855,
	218, 1855,
	219, 1855,
	220, 1855,
	221, 1855,
	222, 1855,
	223, 1855,
	224, 1855,
	225, 1855,
	226, 1855,
	227, 1855,
	229, 1855,
	230, 1855,
	232, 1855,
	233, 1855,
	234, 1855,
	235, 1855,
	236, 1855,
	240, 1855,
	241, 1855,
	242, 1855,
	243, 1855,
	246, 1855,
	247, 1855,
	248, 1855,
	249, 1855,
	251, 1855,
	253, 1855,
	254, 1855,
	256, 1855,
	258, 1855,
	259, 1855,
	260, 1855,
	262, 1855,
	266, 1855,
	267, 1855,
	268, 1855,
	269, 1855,
	270, 1855,
	271, 1855,
	273, 1855,
	274, 1855,
	275, 1855,
	277, 1855,
	278, 1855,
	280, 1855,
	281, 1855,
	284, 1855,
	285, 1855,
	286, 1855,
	287, 1855,
	288, 1855,
	289, 1855,
	290, 1855,
	293, 1855,
	294, 1855,
	295, 1855,
	296, 1855,
	298, 1855,
	299, 1855,
	300, 1855,
	301, 1855,
	302, 1855,
	303, 1855,
	304, 1855,
	305, 1855,
	306, 1855,
	307, 1855,
	308, 1855,
	309, 1855,
	310, 1855,
	311, 1855,
	312, 1855,
	313, 1855,
	314, 1855,
	315, 1855,
	316, 1855,
	317, 1855,
	318, 1855,
	319, 1855,
	320, 1855,
	322, 1855,
	324, 1855,
	325, 1855,
	326, 1855,
	327, 1855,
	328, 1855,
	329, 1855,
	330, 1855,
	331, 1855,
	332, 1855,
	333, 1855,
	334, 1855,
	335, 1855,
	336, 1855,
	337, 1855,
	338, 1855,
	339, 1855,
	340, 1855,
	342, 1855,
	343, 1855,
	345, 1855,
	347, 1855,
	348, 1855,
	349, 1855,
	350, 1855,
	352, 1855,
	353, 1855,
	354, 1855,
	355, 1855,
	356, 1855,
	359, 1855,
	361, 1855,
	364, 1855,
	365, 1855,
	366, 1855,
	369, 1855,
	370, 1855,
	371, 1855,
	373, 1855,
	375, 1855,
	376, 1855,
	377, 1855,
	378, 1855,
	379, 1855,
	380, 1855,
	381, 1855,
	382, 1855,
	383, 1855,
	384, 1855,
	385, 1855,
	386, 1855,
	387, 1855,
	389, 1855,
	390, 1855,
	391, 1855,
	392, 1855,
	393, 1855,
	394, 1855,
	395, 1855,
	396, 1855,
	397, 1855,
	398, 1855,
	399, 1855,
	400, 1855,
	401, 1855,
	402, 1855,
	403, 1855,
	405, 1855,
	406, 1855,
	407, 1855,
	409, 1855,
	410, 1855,
	411, 1855,
	412, 1855,
	413, 1855,
	414, 1855,
	415, 1855,
	416, 1855,
	417, 1855,
	418, 1855,
	419, 1855,
	420, 1855,
	421, 1855,
	423, 1855,
	425, 1855,
	426, 1855,
	427, 1855,
	433, 1855,
	434, 1855,
	435, 1855,
	437, 1855,
	438, 1855,
	439, 1855,
	440, 1855,
	441, 1855,
	442, 1855,
	443, 1855,
	444, 1855,
	445, 1855,
	446, 1855,
	448, 1855,
	449, 1855,
	450, 1855,
	452, 1855,
	453, 1855,
	454, 1855,
	455, 1855,
	456, 1855,
	457, 1855,
	458, 1855,
	460, 1855,
	461, 1855,
	462, 1855,
	463, 1855,
	464, 1855,
	465, 1855,
	466, 1855,
	467, 1855,
	468, 1855,
	469, 1855,
	470, 1855,
	471, 1855,
	472, 1855,
	474, 1855,
	475, 1855,
	476, 1855,
	477, 1855,
	478, 1855,
	479, 1855,
	481, 1855,
	482, 1855,
	483, 1855,
	484, 1855,
	485, 1855,
	486, 1855,
	488, 1855,
	489, 1855,
	490, 1855,
	491, 1855,
	492, 1855,
	493, 1855,
	494, 1855,
	495, 1855,
	497, 1855,
	499, 1855,
	500, 1855,
	501, 1855,
	502, 1855,
	503, 1855,
	504, 1855,
	505, 1855,
	506, 1855,
	507, 1855,
	508, 1855,
	509, 1855,
	510, 1855,
	511, 1855,
	512, 1855,
	513, 1855,
	514, 1855,
	515, 1855,
	516, 1855,
	517, 1855,
	519, 1855,
	520, 1855,
	522, 1855,
	523, 1855,
	525, 1855,
	526, 1855,
	527, 1855,
	528, 1855,
	529, 1855,
	530, 1855,
	532, 1855,
	533, 1855,
	535, 1855,
	536, 1855,
	537, 1855,
	538, 1855,
	539, 1855,
	541, 1855,
	543, 1855,
	544, 1855,
	545, 1855,
	546, 1855,
	547, 1855,
	548, 1855,
	549, 1855,
	551, 1855,
	552, 1855,
	553, 1855,
	554, 1855,
	556, 1855,
	557, 1855,
	560, 1855,
	561, 1855,
	562, 1855,
	563, 1855,
	564, 1855,
	565, 1855,
	566, 1855,
	567, 1855,
	569, 1855,
	572, 1855,
	573, 1855,
	574, 1855,
	575, 1855,
	576, 1855,
	577, 1855,
	579, 1855,
	580, 1855,
	581, 1855,
	582, 1855,
	583, 1855,
	584, 1855,
	585, 1855,
	586, 1855,
	591, 1855,
	592, 1855,
	593, 1855,
	594, 1855,
	595, 1855,
	596, 1855,
	-2, 0,
	-1, 968,
	270, 441,
	-2, 0,
	-1, 1047,
	411, 985,
	479, 985,
	523, 985,
	545, 985,
	-2, 0,
	-1, 1048,
	411, 984,
	479, 984,
	523, 984,
	545, 984,
	-2, 913,
	-1, 1052,
	1, 1037,
	627, 1037,
	629, 1037,
	631, 1037,
	-2, 0,
	-1, 1054,
	1, 959,
	627, 959,
	629, 959,
	631, 959,
	-2, 0,
	-1, 1055,
	1, 963,
	627, 963,
	629, 963,
	631, 963,
	-2, 0,
	-1, 1056,
	1, 1108,
	189, 1108,
	627, 1108,
	629, 1108,
	631, 1108,
	-2, 0,
	-1, 1064,
	1, 990,
	627, 990,
	629, 990,
	631, 990,
	-2, 0,
	-1, 1071,
	1, 1037,
	627, 1037,
	629, 1037,
	631, 1037,
	-2, 0,
	-1, 1072,
	1, 1039,
	627, 1039,
	629, 1039,
	631, 1039,
	-2, 0,
	-1, 1073,
	1, 1042,
	627, 1042,
	629, 1042,
	631, 1042,
	-2, 0,
	-1, 1081,
	1, 1072,
	627, 1072,
	629, 1072,
	631, 1072,
	-2, 0,
	-1, 1082,
	1, 1074,
	627, 1074,
	629, 1074,
	631, 1074,
	-2, 0,
	-1, 1087,
	1, 1102,
	627, 1102,
	629, 1102,
	631, 1102,
	-2, 0,
	-1, 1141,
	176, 1725,
	189, 1725,
	283, 1725,
	357, 1725,
	-2, 1661,
	-1, 1157,
	176, 1724,
	189, 1724,
	283, 1724,
	357, 1724,
	-2, 1658,
	-1, 1184,
	630, 2448,
	-2, 770,
	-1, 1213,
	5, 2440,
	628, 2438,
	-2, 2429,
	-1, 1221,
	5, 2461,
	628, 2458,
	-2, 2449,
	-1, 1222,
	5, 2462,
	628, 2459,
	-2, 2450,
	-1, 1230,
	630, 2446,
	-2, 2428,
	-1, 1231,
	628, 2913,
	-2, 2447,
	-1, 1254,
	628, 2912,
	-2, 2463,
	-1, 1255,
	5, 1930,
	-2, 2883,
	-1, 1256,
	5, 1931,
	-2, 2884,
	-1, 1257,
	5, 1932,
	-2, 2898,
	-1, 1258,
	5, 1933,
	-2, 2862,
	-1, 1259,
	5, 1934,
	-2, 2896,
	-1, 1260,
	5, 1942,
	-2, 2875,
	-1, 1261,
	5, 1929,
	-2, 2871,
	-1, 1262,
	5, 1929,
	-2, 2870,
	-1, 1263,
	5, 1929,
	-2, 2889,
	-1, 1264,
	5, 1940,
	-2, 2864,
	-1, 1265,
	5, 1945,
	-2, 2863,
	-1, 1266,
	5, 1947,
	-2, 2908,
	-1, 1269,
	5, 1969,
	-2, 2901,
	-1, 1270,
	5, 1961,
	-2, 2902,
	-1, 1271,
	5, 1969,
	-2, 2903,
	-1, 1272,
	5, 1965,
	-2, 2904,
	-1, 1273,
	5, 1915,
	-2, 2876,
	-1, 1274,
	5, 1916,
	-2, 2877,
	-1, 1275,
	5, 1917,
	-2, 2865,
	-1, 1303,
	5, 1952,
	-2, 2909,
	-1, 1304,
	5, 1953,
	-2, 2899,
	-1, 1305,
	5, 1954,
	580, 1954,
	-2, 2866,
	-1, 1306,
	5, 1955,
	580, 1955,
	-2, 2867,
	-1, 1344,
	628, 2458,
	-2, 2449,
	-1, 1345,
	628, 2459,
	-2, 2450,
	-1, 1443,
	195, 2825,
	540, 2825,
	610, 2825,
	630, 2825,
	-2, 0,
	-1, 1448,
	1, 746,
	631, 746,
	-2, 1570,
	-1, 1595,
	377, 2423,
	437, 2423,
	481, 2423,
	620, 2423,
	-2, 2413,
	-1, 1601,
	195, 145,
	277, 145,
	342, 145,
	586, 145,
	-2, 2821,
	-1, 1602,
	195, 146,
	277, 146,
	342, 146,
	586, 146,
	-2, 2562,
	-1, 1603,
	195, 147,
	277, 147,
	342, 147,
	586, 147,
	-2, 2742,
	-1, 1609,
	632, 2423,
	-2, 2425,
	-1, 1633,
	1, 1418,
	442, 1373,
	481, 1373,
	603, 1373,
	627, 1418,
	629, 1418,
	631, 1418,
	-2, 1710,
	-1, 1639,
	211, 1515,
	231, 1515,
	450, 1515,
	-2, 0,
	-1, 1688,
	419, 1192,
	579, 1192,
	-2, 436,
	-1, 1705,
	45, 2421,
	-2, 1155,
	-1, 1712,
	1, 1418,
	627, 1418,
	629, 1418,
	631, 1418,
	-2, 1710,
	-1, 1720,
	4, 1443,
	21, 1443,
	22, 1443,
	23, 1443,
	24, 1443,
	25, 1443,
	26, 1443,
	27, 1443,
	28, 1443,
	30, 1443,
	31, 1443,
	37, 1443,
	41, 1443,
	43, 1443,
	44, 1443,
	46, 1443,
	47, 1443,
	48, 1443,
	49, 1443,
	50, 1443,
	51, 1443,
	52, 1443,
	53, 1443,
	54, 1443,
	56, 1443,
	57, 1443,
	58, 1443,
	59, 1443,
	61, 1443,
	62, 1443,
	63, 1443,
	64, 1443,
	65, 1443,
	66, 1443,
	67, 1443,
	71, 1443,
	72, 1443,
	73, 1443,
	74, 1443,
	76, 1443,
	77, 1443,
	78, 1443,
	82, 1443,
	83, 1443,
	84, 1443,
	85, 1443,
	86, 1443,
	87, 1443,
	88, 1443,
	89, 1443,
	92, 1443,
	93, 1443,
	94, 1443,
	95, 1443,
	96, 1443,
	98, 1443,
	100, 1443,
	101, 1443,
	102, 1443,
	103, 1443,
	104, 1443,
	105, 1443,
	107, 1443,
	108, 1443,
	109, 1443,
	111, 1443,
	112, 1443,
	113, 1443,
	121, 1443,
	122, 1443,
	123, 1443,
	124, 1443,
	125, 1443,
	127, 1443,
	128, 1443,
	129, 1443,
	130, 1443,
	132, 1443,
	133, 1443,
	134, 1443,
	136, 1443,
	137, 1443,
	138, 1443,
	140, 1443,
	141, 1443,
	142, 1443,
	145, 1443,
	146, 1443,
	147, 1443,
	149, 1443,
	150, 1443,
	151, 1443,
	153, 1443,
	154, 1443,
	155, 1443,
	157, 1443,
	158, 1443,
	159, 1443,
	160, 1443,
	161, 1443,
	162, 1443,
	163, 1443,
	164, 1443,
	165, 1443,
	166, 1443,
	167, 1443,
	168, 1443,
	169, 1443,
	170, 1443,
	171, 1443,
	172, 1443,
	173, 1443,
	181, 1443,
	182, 1443,
	183, 1443,
	184, 1443,
	188, 1443,
	190, 1443,
	191, 1443,
	192, 1443,
	194, 1443,
	197, 1443,
	198, 1443,
	199, 1443,
	200, 1443,
	201, 1443,
	202, 1443,
	203, 1443,
	204, 1443,
	205, 1443,
	206, 1443,
	207, 1443,
	208, 1443,
	209, 1443,
	210, 1443,
	212, 1443,
	213, 1443,
	215, 1443,
	216, 1443,
	218, 1443,
	219, 1443,
	220, 1443,
	221, 1443,
	222, 1443,
	223, 1443,
	224, 1443,
	225, 1443,
	226, 1443,
	227, 1443,
	229, 1443,
	230, 1443,
	232, 1443,
	233, 1443,
	234, 1443,
	235, 1443,
	236, 1443,
	241, 1443,
	242, 1443,
	243, 1443,
	246, 1443,
	247, 1443,
	248, 1443,
	249, 1443,
	251, 1443,
	253, 1443,
	254, 1443,
	256, 1443,
	258, 1443,
	259, 1443,
	260, 1443,
	262, 1443,
	266, 1443,
	267, 1443,
	268, 1443,
	269, 1443,
	270, 1443,
	271, 1443,
	273, 1443,
	274, 1443,
	275, 1443,
	277, 1443,
	278, 1443,
	280, 1443,
	281, 1443,
	284, 1443,
	285, 1443,
	286, 1443,
	287, 1443,
	288, 1443,
	289, 1443,
	290, 1443,
	293, 1443,
	294, 1443,
	295, 1443,
	296, 1443,
	298, 1443,
	299, 1443,
	300, 1443,
	301, 1443,
	302, 1443,
	303, 1443,
	304, 1443,
	305, 1443,
	306, 1443,
	307, 1443,
	308, 1443,
	309, 1443,
	310, 1443,
	311, 1443,
	312, 1443,
	313, 1443,
	314, 1443,
	315, 1443,
	316, 1443,
	317, 1443,
	318, 1443,
	319, 1443,
	320, 1443,
	322, 1443,
	324, 1443,
	325, 1443,
	326, 1443,
	327, 1443,
	328, 1443,
	329, 1443,
	330, 1443,
	331, 1443,
	332, 1443,
	333, 1443,
	334, 1443,
	335, 1443,
	336, 1443,
	337, 1443,
	338, 1443,
	339, 1443,
	340, 1443,
	342, 1443,
	343, 1443,
	347, 1443,
	348, 1443,
	349, 1443,
	350, 1443,
	352, 1443,
	353, 1443,
	354, 1443,
	355, 1443,
	356, 1443,
	359, 1443,
	361, 1443,
	362, 1443,
	364, 1443,
	365, 1443,
	366, 1443,
	369, 1443,
	370, 1443,
	371, 1443,
	373, 1443,
	375, 1443,
	376, 1443,
	377, 1443,
	378, 1443,
	379, 1443,
	380, 1443,
	381, 1443,
	382, 1443,
	383, 1443,
	384, 1443,
	385, 1443,
	386, 1443,
	387, 1443,
	389, 1443,
	390, 1443,
	391, 1443,
	392, 1443,
	393, 1443,
	394, 1443,
	395, 1443,
	396, 1443,
	397, 1443,
	398, 1443,
	399, 1443,
	400, 1443,
	401, 1443,
	402, 1443,
	403, 1443,
	405, 1443,
	406, 1443,
	407, 1443,
	409, 1443,
	410, 1443,
	411, 1443,
	412, 1443,
	413, 1443,
	414, 1443,
	415, 1443,
	416, 1443,
	417, 1443,
	418, 1443,
	419, 1443,
	420, 1443,
	421, 1443,
	423, 1443,
	425, 1443,
	426, 1443,
	427, 1443,
	433, 1443,
	434, 1443,
	435, 1443,
	437, 1443,
	438, 1443,
	439, 1443,
	440, 1443,
	441, 1443,
	442, 1443,
	443, 1443,
	444, 1443,
	445, 1443,
	446, 1443,
	448, 1443,
	449, 1443,
	450, 1443,
	452, 1443,
	453, 1443,
	454, 1443,
	455, 1443,
	456, 1443,
	457, 1443,
	458, 1443,
	460, 1443,
	461, 1443,
	462, 1443,
	463, 1443,
	464, 1443,
	465, 1443,
	466, 1443,
	467, 1443,
	468, 1443,
	469, 1443,
	470, 1443,
	471, 1443,
	472, 1443,
	474, 1443,
	475, 1443,
	476, 1443,
	477, 1443,
	478, 1443,
	479, 1443,
	481, 1443,
	482, 1443,
	483, 1443,
	484, 1443,
	485, 1443,
	486, 1443,
	488, 1443,
	489, 1443,
	490, 1443,
	491, 1443,
	492, 1443,
	493, 1443,
	494, 1443,
	495, 1443,
	497, 1443,
	499, 1443,
	500, 1443,
	501, 1443,
	502, 1443,
	503, 1443,
	504, 1443,
	505, 1443,
	506, 1443,
	507, 1443,
	508, 1443,
	509, 1443,
	510, 1443,
	511, 1443,
	512, 1443,
	513, 1443,
	514, 1443,
	515, 1443,
	516, 1443,
	517, 1443,
	519, 1443,
	520, 1443,
	522, 1443,
	523, 1443,
	525, 1443,
	526, 1443,
	527, 1443,
	528, 1443,
	529, 1443,
	530, 1443,
	532, 1443,
	533, 1443,
	535, 1443,
	536, 1443,
	537, 1443,
	538, 1443,
	539, 1443,
	541, 1443,
	543, 1443,
	544, 1443,
	545, 1443,
	546, 1443,
	547, 1443,
	548, 1443,
	549, 1443,
	551, 1443,
	552, 1443,
	553, 1443,
	554, 1443,
	556, 1443,
	557, 1443,
	560, 1443,
	561, 1443,
	562, 1443,
	563, 1443,
	564, 1443,
	565, 1443,
	566, 1443,
	567, 1443,
	569, 1443,
	572, 1443,
	573, 1443,
	574, 1443,
	575, 1443,
	576, 1443,
	577, 1443,
	579, 1443,
	580, 1443,
	581, 1443,
	582, 1443,
	583, 1443,
	584, 1443,
	585, 1443,
	586, 1443,
	591, 1443,
	592, 1443,
	593, 1443,
	594, 1443,
	595, 1443,
	596, 1443,
	-2, 0,
	-1, 1743,
	1, 581,
	627, 581,
	629, 581,
	631, 581,
	-2, 1681,
	-1, 1746,
	4, 2907,
	11, 2907,
	12, 2907,
	14, 2907,
	15, 2907,
	16, 2907,
	17, 2907,
	18, 2907,
	19, 2907,
	21, 2907,
	22, 2907,
	23, 2907,
	24, 2907,
	25, 2907,
	26, 2907,
	27, 2907,
	28, 2907,
	30, 2907,
	31, 2907,
	34, 2907,
	35, 2907,
	37, 2907,
	39, 2907,
	41, 2907,
	43, 2907,
	44, 2907,
	46, 2907,
	47, 2907,
	48, 2907,
	49, 2907,
	50, 2907,
	51, 2907,
	52, 2907,
	53, 2907,
	54, 2907,
	56, 2907,
	57, 2907,
	58, 2907,
	59, 2907,
	61, 2907,
	62, 2907,
	63, 2907,
	64, 2907,
	65, 2907,
	66, 2907,
	67, 2907,
	70, 2907,
	71, 2907,
	72, 2907,
	73, 2907,
	74, 2907,
	76, 2907,
	77, 2907,
	78, 2907,
	79, 2907,
	82, 2907,
	83, 2907,
	84, 2907,
	85, 2907,
	86, 2907,
	87, 2907,
	88, 2907,
	89, 2907,
	90, 2907,
	92, 2907,
	93, 2907,
	94, 2907,
	95, 2907,
	96, 2907,
	98, 2907,
	99, 2907,
	100, 2907,
	101, 2907,
	102, 2907,
	103, 2907,
	104, 2907,
	105, 2907,
	107, 2907,
	108, 2907,
	109, 2907,
	110, 2907,
	111, 2907,
	112, 2907,
	113, 2907,
	121, 2907,
	122, 2907,
	123, 2907,
	124, 2907,
	125, 2907,
	127, 2907,
	128, 2907,
	129, 2907,
	130, 2907,
	132, 2907,
	133, 2907,
	134, 2907,
	136, 2907,
	137, 2907,
	138, 2907,
	140, 2907,
	141, 2907,
	142, 2907,
	145, 2907,
	146, 2907,
	147, 2907,
	149, 2907,
	150, 2907,
	151, 2907,
	153, 2907,
	154, 2907,
	155, 2907,
	157, 2907,
	158, 2907,
	159, 2907,
	160, 2907,
	161, 2907,
	162, 2907,
	163, 2907,
	164, 2907,
	165, 2907,
	166, 2907,
	167, 2907,
	168, 2907,
	169, 2907,
	170, 2907,
	171, 2907,
	172, 2907,
	173, 2907,
	177, 2907,
	178, 2907,
	179, 2907,
	180, 2907,
	181, 2907,
	182, 2907,
	183, 2907,
	184, 2907,
	187, 2907,
	188, 2907,
	190, 2907,
	191, 2907,
	192, 2907,
	194, 2907,
	196, 2907,
	197, 2907,
	198, 2907,
	199, 2907,
	200, 2907,
	201, 2907,
	202, 2907,
	203, 2907,
	204, 2907,
	205, 2907,
	206, 2907,
	207, 2907,
	208, 2907,
	209, 2907,
	210, 2907,
	212, 2907,
	213, 2907,
	215, 2907,
	216, 2907,
	218, 2907,
	219, 2907,
	220, 2907,
	221, 2907,
	222, 2907,
	223, 2907,
	224, 2907,
	225, 2907,
	226, 2907,
	227, 2907,
	228, 2907,
	229, 2907,
	230, 2907,
	231, 2907,
	232, 2907,
	233, 2907,
	234, 2907,
	235, 2907,
	236, 2907,
	238, 2907,
	239, 2907,
	241, 2907,
	242, 2907,
	243, 2907,
	245, 2907,
	246, 2907,
	247, 2907,
	248, 2907,
	249, 2907,
	251, 2907,
	253, 2907,
	254, 2907,
	255, 2907,
	256, 2907,
	257, 2907,
	258, 2907,
	259, 2907,
	260, 2907,
	261, 2907,
	262, 2907,
	264, 2907,
	265, 2907,
	266, 2907,
	267, 2907,
	268, 2907,
	269, 2907,
	270, 2907,
	271, 2907,
	273, 2907,
	274, 2907,
	275, 2907,
	277, 2907,
	278, 2907,
	279, 2907,
	280, 2907,
	281, 2907,
	282, 2907,
	284, 2907,
	285, 2907,
	286, 2907,
	287, 2907,
	288, 2907,
	289, 2907,
	290, 2907,
	293, 2907,
	294, 2907,
	295, 2907,
	296, 2907,
	297, 2907,
	298, 2907,
	299, 2907,
	300, 2907,
	301, 2907,
	302, 2907,
	303, 2907,
	304, 2907,
	305, 2907,
	306, 2907,
	307, 2907,
	308, 2907,
	309, 2907,
	310, 2907,
	311, 2907,
	312, 2907,
	313, 2907,
	314, 2907,
	315, 2907,
	316, 2907,
	317, 2907,
	318, 2907,
	319, 2907,
	320, 2907,
	322, 2907,
	323, 2907,
	324, 2907,
	325, 2907,
	326, 2907,
	327, 2907,
	328, 2907,
	329, 2907,
	330, 2907,
	331, 2907,
	332, 2907,
	333, 2907,
	334, 2907,
	335, 2907,
	336, 2907,
	337, 2907,
	338, 2907,
	339, 2907,
	340, 2907,
	342, 2907,
	343, 2907,
	346, 2907,
	347, 2907,
	348, 2907,
	349, 2907,
	350, 2907,
	352, 2907,
	353, 2907,
	354, 2907,
	355, 2907,
	356, 2907,
	359, 2907,
	361, 2907,
	364, 2907,
	365, 2907,
	366, 2907,
	367, 2907,
	369, 2907,
	370, 2907,
	371, 2907,
	373, 2907,
	375, 2907,
	376, 2907,
	377, 2907,
	378, 2907,
	379, 2907,
	380, 2907,
	381, 2907,
	382, 2907,
	383, 2907,
	384, 2907,
	385, 2907,
	386, 2907,
	387, 2907,
	389, 2907,
	390, 2907,
	391, 2907,
	392, 2907,
	393, 2907,
	394, 2907,
	395, 2907,
	396, 2907,
	397, 2907,
	398, 2907,
	399, 2907,
	400, 2907,
	401, 2907,
	402, 2907,
	403, 2907,
	405, 2907,
	406, 2907,
	407, 2907,
	409, 2907,
	410, 2907,
	411, 2907,
	412, 2907,
	413, 2907,
	414, 2907,
	415, 2907,
	416, 2907,
	417, 2907,
	418, 2907,
	419, 2907,
	420, 2907,
	421, 2907,
	423, 2907,
	425, 2907,
	426, 2907,
	427, 2907,
	433, 2907,
	434, 2907,
	435, 2907,
	436, 2907,
	437, 2907,
	438, 2907,
	439, 2907,
	440, 2907,
	441, 2907,
	442, 2907,
	443, 2907,
	444, 2907,
	445, 2907,
	446, 2907,
	448, 2907,
	449, 2907,
	450, 2907,
	451, 2907,
	452, 2907,
	453, 2907,
	454, 2907,
	455, 2907,
	456, 2907,
	457, 2907,
	458, 2907,
	459, 2907,
	460, 2907,
	461, 2907,
	462, 2907,
	463, 2907,
	464, 2907,
	465, 2907,
	466, 2907,
	467, 2907,
	468, 2907,
	469, 2907,
	470, 2907,
	471, 2907,
	472, 2907,
	474, 2907,
	475, 2907,
	476, 2907,
	477, 2907,
	478, 2907,
	479, 2907,
	481, 2907,
	482, 2907,
	483, 2907,
	484, 2907,
	485, 2907,
	486, 2907,
	487, 2907,
	488, 2907,
	489, 2907,
	490, 2907,
	491, 2907,
	492, 2907,
	493, 2907,
	494, 2907,
	495, 2907,
	497, 2907,
	499, 2907,
	500, 2907,
	501, 2907,
	502, 2907,
	503, 2907,
	504, 2907,
	505, 2907,
	506, 2907,
	507, 2907,
	508, 2907,
	509, 2907,
	510, 2907,
	511, 2907,
	512, 2907,
	513, 2907,
	514, 2907,
	515, 2907,
	516, 2907,
	517, 2907,
	519, 2907,
	520, 2907,
	521, 2907,
	522, 2907,
	523, 2907,
	525, 2907,
	526, 2907,
	527, 2907,
	528, 2907,
	529, 2907,
	530, 2907,
	532, 2907,
	533, 2907,
	535, 2907,
	536, 2907,
	537, 2907,
	538, 2907,
	539, 2907,
	541, 2907,
	543, 2907,
	544, 2907,
	545, 2907,
	546, 2907,
	547, 2907,
	548, 2907,
	549, 2907,
	551, 2907,
	552, 2907,
	553, 2907,
	554, 2907,
	556, 2907,
	557, 2907,
	560, 2907,
	561, 2907,
	562, 2907,
	563, 2907,
	564, 2907,
	565, 2907,
	566, 2907,
	567, 2907,
	569, 2907,
	572, 2907,
	573, 2907,
	574, 2907,
	575, 2907,
	576, 2907,
	577, 2907,
	579, 2907,
	580, 2907,
	581, 2907,
	582, 2907,
	583, 2907,
	584, 2907,
	585, 2907,
	586, 2907,
	591, 2907,
	592, 2907,
	593, 2907,
	594, 2907,
	595, 2907,
	596, 2907,
	597, 2907,
	599, 2907,
	608, 2907,
	609, 2907,
	610, 2907,
	611, 2907,
	612, 2907,
	613, 2907,
	615, 2907,
	616, 2907,
	617, 2907,
	618, 2907,
	619, 2907,
	620, 2907,
	621, 2907,
	622, 2907,
	623, 2907,
	626, 2907,
	629, 2907,
	630, 2907,
	632, 2907,
	633, 2907,
	-2, 0,
	-1, 1751,
	195, 2781,
	540, 2781,
	610, 2781,
	630, 2781,
	-2, 0,
	-1, 1805,
	411, 985,
	479, 985,
	523, 985,
	545, 985,
	-2, 0,
	-1, 1816,
	1, 1515,
	627, 1515,
	629, 1515,
	631, 1515,
	-2, 0,
	-1, 1833,
	1, 980,
	627, 980,
	629, 980,
	631, 980,
	-2, 0,
	-1, 1834,
	1, 1024,
	627, 1024,
	629, 1024,
	631, 1024,
	-2, 0,
	-1, 1835,
	1, 1032,
	627, 1032,
	629, 1032,
	631, 1032,
	-2, 0,
	-1, 1838,
	1, 989,
	627, 989,
	629, 989,
	631, 989,
	-2, 0,
	-1, 1840,
	1, 995,
	627, 995,
	629, 995,
	631, 995,
	-2, 0,
	-1, 1843,
	1, 991,
	627, 991,
	629, 991,
	631, 991,
	-2, 0,
	-1, 1848,
	1, 1005,
	627, 1005,
	629, 1005,
	631, 1005,
	-2, 0,
	-1, 1882,
	1, 2763,
	627, 2763,
	629, 2763,
	630, 2763,
	631, 2763,
	-2, 0,
	-1, 1886,
	1, 1083,
	627, 1083,
	629, 1083,
	631, 1083,
	-2, 0,
	-1, 1903,
	1, 1565,
	631, 1565,
	-2, 1570,
	-1, 1906,
	176, 1724,
	189, 1724,
	283, 1724,
	357, 1724,
	-2, 1662,
	-1, 2006,
	156, 1683,
	176, 1683,
	189, 1683,
	250, 1683,
	283, 1683,
	357, 1683,
	368, 1683,
	558, 1683,
	-2, 2134,
	-1, 2067,
	629, 2309,
	-2, 0,
	-1, 2103,
	156, 1683,
	176, 1683,
	189, 1683,
	250, 1683,
	283, 1683,
	357, 1683,
	368, 1683,
	558, 1683,
	-2, 1816,
	-1, 2143,
	540, 2778,
	630, 2778,
	633, 2778,
	-2, 0,
	-1, 2160,
	628, 1957,
	-2, 1945,
	-1, 2192,
	195, 2778,
	630, 2778,
	633, 2778,
	-2, 0,
	-1, 2235,
	1, 748,
	631, 748,
	-2, 1570,
	-1, 2409,
	231, 280,
	-2, 2457,
	-1, 2410,
	231, 281,
	-2, 336,
	-1, 2521,
	1, 982,
	627, 982,
	629, 982,
	631, 982,
	-2, 0,
	-1, 2522,
	1, 1026,
	627, 1026,
	629, 1026,
	631, 1026,
	-2, 0,
	-1, 2523,
	1, 1034,
	627, 1034,
	629, 1034,
	631, 1034,
	-2, 0,
	-1, 2524,
	1, 1085,
	627, 1085,
	629, 1085,
	631, 1085,
	-2, 0,
	-1, 2565,
	1, 1007,
	627, 1007,
	629, 1007,
	631, 1007,
	-2, 0,
	-1, 2587,
	1, 1068,
	627, 1068,
	629, 1068,
	631, 1068,
	-2, 0,
	-1, 2634,
	457, 1751,
	458, 1751,
	-2, 1990,
	-1, 2665,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2010,
	-1, 2666,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2011,
	-1, 2667,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2012,
	-1, 2668,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2013,
	-1, 2669,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2014,
	-1, 2670,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2015,
	-1, 2671,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2016,
	-1, 2672,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2017,
	-1, 2684,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2029,
	-1, 2685,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2030,
	-1, 2686,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2031,
	-1, 2690,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2038,
	-1, 2696,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2042,
	-1, 2698,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2050,
	-1, 2699,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2051,
	-1, 2700,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2052,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2053,
	-1, 2875,
	5, 2461,
	195, 2320,
	628, 2458,
	-2, 2449,
	-1, 2876,
	195, 2321,
	-2, 2858,
	-1, 2877,
	195, 2322,
	-2, 2657,
	-1, 2878,
	195, 2323,
	-2, 2535,
	-1, 2879,
	195, 2324,
	-2, 2595,
	-1, 2880,
	195, 2325,
	-2, 2642,
	-1, 2881,
	195, 2326,
	-2, 2776,
	-1, 2882,
	195, 2327,
	-2, 2117,
	-1, 2954,
	1, 1817,
	2, 1817,
	110, 1817,
	156, 1817,
	176, 1817,
	189, 1817,
	196, 1817,
	214, 1817,
	217, 1817,
	245, 1817,
	250, 1817,
	261, 1817,
	279, 1817,
	283, 1817,
	323, 1817,
	357, 1817,
	362, 1817,
	368, 1817,
	447, 1817,
	451, 1817,
	558, 1817,
	570, 1817,
	588, 1817,
	589, 1817,
	590, 1817,
	600, 1817,
	627, 1817,
	629, 1817,
	631, 1817,
	633, 1817,
	-2, 1816,
	-1, 2967,
	628, 2430,
	-2, 2444,
	-1, 2969,
	1, 353,
	588, 353,
	-2, 1710,
	-1, 2999,
	628, 1956,
	-2, 1946,
	-1, 3213,
	1, 1418,
	442, 1373,
	481, 1373,
	603, 1373,
	627, 1418,
	629, 1418,
	631, 1418,
	-2, 1710,
	-1, 3390,
	363, 1754,
	-2, 2897,
	-1, 3391,
	363, 1755,
	-2, 2760,
	-1, 3395,
	457, 2386,
	458, 2386,
	-2, 2115,
	-1, 3396,
	457, 2390,
	458, 2390,
	-2, 2116,
	-1, 3397,
	457, 2387,
	458, 2387,
	-2, 2115,
	-1, 3398,
	457, 2391,
	458, 2391,
	-2, 2116,
	-1, 3411,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2040,
	-1, 3412,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2044,
	-1, 3418,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2046,
	-1, 3645,
	1, 743,
	627, 743,
	629, 743,
	631, 743,
	-2, 1570,
	-1, 3840,
	45, 2421,
	-2, 1156,
	-1, 3845,
	1, 1418,
	627, 1418,
	629, 1418,
	631, 1418,
	-2, 1710,
	-1, 3951,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2048,
	-1, 3958,
	255, 0,
	257, 0,
	346, 0,
	-2, 2067,
	-1, 4026,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2096,
	-1, 4027,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2097,
	-1, 4028,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2098,
	-1, 4032,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2102,
	-1, 4033,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2103,
	-1, 4034,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2104,
	-1, 4082,
	628, 2431,
	-2, 2445,
	-1, 4290,
	630, 3014,
	-2, 1636,
	-1, 4346,
	255, 0,
	257, 0,
	346, 0,
	-2, 2068,
	-1, 4349,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2071,
	-1, 4350,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2073,
	-1, 4464,
	630, 2446,
	-2, 1453,
	-1, 4626,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2072,
	-1, 4627,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2074,
	-1, 4638,
	255, 0,
	-2, 2107,
	-1, 4827,
	255, 0,
	-2, 2108,
	-1, 5047,
	53, 0,
	228, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2861,
}

const sqlPrivate = 57344

const sqlLast = 145631

var sqlAct = [...]int{
	291, 5238, 4982, 3167, 1424, 4695, 3829, 5109, 5165, 3549,
	5093, 3286, 5046, 4981, 4919, 4875, 5033, 5059, 5179, 5015,
	3137, 4938, 2406, 4996, 4972, 1649, 3828, 5060, 2484, 4993,
	5061, 4329, 3991, 4796, 4867, 5118, 2295, 1480, 4677, 4773,
	4092, 1421, 4760, 4460, 5057, 4744, 4831, 4585, 5045, 4580,
	4574, 4541, 4700, 1348, 4514, 1337, 1769, 3256, 1416, 3943,
	3671, 4647, 2644, 4615, 3862, 2496, 4274, 4282, 1619, 4565,
	4779, 4567, 4904, 2494, 4198, 2907, 1414, 3404, 2204, 752,
	891, 3674, 4461, 4441, 1158, 2713, 1167, 4590, 3071, 4248,
	3802, 3856, 1915, 3734, 4231, 3813, 2109, 2217, 4229, 3677,
	3892, 3890, 2652, 1499, 3275, 2147, 4643, 2304, 891, 3817,
	3272, 3820, 3245, 3070, 3659, 3661, 3660, 2981, 3818, 3795,
	3794, 3595, 3270, 4085, 3572, 3532, 3564, 4328, 2457, 970,
	3308, 2148, 3555, 2645, 2492, 3303, 763, 1813, 3602, 1767,
	3553, 2078, 966, 4, 3220, 3287, 2393, 1592, 2395, 3168,
	2382, 2332, 3531, 5094, 2316, 3698, 4052, 4832, 4385, 2947,
	285, 2791, 2014, 284, 888, 1984, 2726, 2649, 3388, 961,
	3302, 1419, 2053, 1328, 116, 2949, 1707, 2394, 3249, 824,
	820, 2380, 3182, 886, 2353, 2372, 2360, 2283, 3257, 1463,
	2287, 1217, 2079, 1903, 1166, 191, 2215, 1393, 2904, 2616,
	1482, 2927, 1478, 2782, 2710, 1222, 1407, 2633, 2614, 797,
	1213, 2444, 3152, 1404, 2982, 3280, 1744, 1710, 3096, 892,
	2443, 2375, 2946, 893, 1041, 2127, 4939, 739, 3095, 3821,
	3056, 761, 1450, 2048, 2095, 3010, 2098, 2088, 2785, 1621,
	897, 2793, 1331, 900, 2763, 1310, 2936, 1185, 2871, 1998,
	1916, 201, 2615, 1917, 1345, 2617, 202, 1848, 805, 2917,
	2837, 816, 2470, 1327, 2403, 1643, 1833, 120, 897, 1735,
	2384, 900, 987, 1742, 106, 1600, 5110, 2638, 840, 5166,
	1198, 780, 756, 1475, 46, 45, 43, 34, 881, 942,
	753, 32, 765, 30, 191, 1308, 1333, 1922, 1902, 3441,
	1062, 1655, 4066, 943, 4067, 5249, 3435, 2206, 2206, 2926,
	2206, 5241, 3551, 5055, 2206, 3775, 5229, 2206, 2206, 5228,
	2926, 78, 5198, 2926, 5196, 5139, 4699, 4093, 4699, 2415,
	1930, 1931, 4667, 1963, 1964, 1965, 1974, 1975, 1976, 79,
	5095, 5085, 5083, 5080, 5096, 2926, 2926, 5081, 833, 836,
	4664, 5077, 4661, 1967, 1961, 5078, 84, 3871, 1459, 5043,
	5042, 5041, 1933, 2415, 2415, 3313, 1162, 3872, 1162, 5031,
	2227, 1220, 1980, 4699, 3630, 5029, 5024, 5019, 1163, 4699,
	4782, 4699, 1839, 5018, 4991, 3627, 1325, 4699, 4699, 1986,
	4958, 2493, 2919, 1371, 2990, 1930, 1931, 93, 1932, 4951,
	4950, 4943, 4918, 2926, 2926, 2415, 2415, 4915, 4897, 1952,
	4829, 4699, 4531, 4810, 2990, 3775, 4775, 4308, 1949, 1961,
	4126, 1311, 1311, 4412, 1151, 4718, 4717, 1933, 4706, 2415,
	2415, 4705, 2415, 4698, 2415, 4699, 4654, 4699, 968, 3612,
	2415, 3450, 4628, 1142, 2227, 2224, 2990, 3451, 1141, 3403,
	2926, 51, 4601, 115, 1986, 4959, 3313, 4598, 4509, 99,
	112, 3775, 2926, 1932, 1343, 4488, 2227, 4348, 4298, 2926,
	4292, 2990, 3885, 4245, 3885, 4157, 4125, 4246, 4077, 4158,
	4126, 1459, 4078, 4075, 3012, 1930, 1931, 4076, 1963, 1964,
	1965, 1974, 1975, 1976, 1363, 4833, 1955, 1956, 1957, 1958,
	4059, 3975, 1157, 1219, 2926, 2415, 1938, 3971, 1967, 1961,
	4824, 2926, 3884, 4812, 4056, 3548, 3885, 1933, 3543, 2926,
	3542, 100, 2926, 2986, 2926, 3493, 3491, 1980, 4782, 3494,
	3492, 3313, 2224, 3483, 3481, 3502, 3503, 3484, 2926, 3452,
	4056, 3312, 1312, 2926, 1986, 3313, 251, 1971, 3297, 2918,
	1981, 3296, 2480, 1932, 4578, 2480, 3035, 1960, 1962, 4531,
	2926, 2989, 2224, 2788, 1952, 2990, 2227, 4489, 2979, 1657,
	4308, 1938, 2926, 1949, 1977, 2971, 1978, 2227, 2925, 2415,
	4247, 2479, 2926, 1947, 1948, 2480, 1314, 1364, 1315, 3502,
	3503, 3144, 3520, 3521, 3522, 1779, 3055, 253, 2309, 2241,
	2205, 1969, 2221, 3251, 1364, 2414, 3162, 3046, 2074, 1642,
	4175, 3946, 4344, 3918, 3517, 2096, 1953, 2365, 3873, 1815,
	2963, 2962, 1960, 1962, 2961, 1340, 2960, 2959, 1316, 1648,
	1313, 2926, 1150, 3440, 1149, 1930, 1931, 1148, 3874, 251,
	1147, 1648, 1146, 1145, 1144, 1760, 1140, 1139, 252, 1138,
	1137, 1955, 1956, 1957, 1958, 1136, 1135, 1134, 2789, 3359,
	4403, 1938, 1133, 245, 1132, 1979, 1131, 1933, 3517, 1130,
	1129, 1128, 246, 1127, 1126, 104, 1125, 1124, 1123, 1122,
	1121, 1953, 1103, 1039, 2207, 2207, 1968, 2207, 1038, 1037,
	253, 2207, 1036, 1035, 2207, 2207, 1034, 1983, 1033, 1032,
	1031, 203, 1971, 1932, 4360, 1981, 1030, 1029, 1028, 1027,
	1026, 3508, 1960, 1962, 1025, 1024, 1023, 1022, 1021, 1656,
	1020, 1019, 1018, 1196, 1017, 1016, 1015, 1014, 1013, 1977,
	1012, 1978, 1011, 199, 107, 1010, 1009, 111, 1947, 1948,
	2790, 252, 2787, 1008, 1007, 1006, 1005, 1004, 1003, 2820,
	992, 2224, 991, 1669, 990, 1959, 1969, 1339, 985, 984,
	977, 976, 1983, 975, 251, 3508, 960, 959, 3265, 916,
	2224, 1953, 969, 915, 914, 913, 904, 159, 1954, 903,
	902, 901, 1657, 863, 862, 831, 3502, 3503, 2224, 3520,
	3521, 3522, 830, 829, 203, 811, 279, 4592, 1426, 1222,
	278, 99, 277, 5070, 276, 3871, 1972, 275, 274, 4343,
	3063, 1938, 1364, 1663, 273, 253, 272, 271, 3502, 3503,
	1979, 3518, 270, 2224, 269, 268, 1222, 1222, 1222, 4102,
	2918, 1364, 1657, 3524, 267, 1224, 266, 265, 3502, 3503,
	1985, 1968, 164, 1954, 264, 263, 262, 3283, 261, 260,
	259, 258, 1983, 251, 257, 256, 255, 254, 204, 4071,
	3886, 3598, 3463, 3446, 3437, 3517, 252, 1502, 3339, 3230,
	2099, 1222, 3063, 2227, 3022, 3518, 2205, 1222, 1624, 1222,
	2224, 245, 1426, 2221, 2609, 2056, 1633, 2994, 2056, 2968,
	246, 2953, 2055, 1454, 200, 2055, 2606, 2818, 3546, 2268,
	1929, 2804, 1983, 2226, 253, 1985, 1657, 1222, 2792, 1222,
	1959, 1222, 1467, 1468, 1469, 2802, 1970, 2122, 1624, 203,
	2025, 2059, 1897, 5069, 2054, 1651, 5066, 1944, 1945, 1951,
	1973, 1950, 1946, 1954, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 3547, 1426, 1471, 1347, 5044, 1712, 1610,
	5028, 4923, 4368, 4836, 2016, 252, 1983, 4821, 4642, 4815,
	4813, 1972, 3508, 4690, 1624, 2557, 4599, 1841, 4577, 1605,
	245, 1624, 4418, 3502, 3503, 1668, 4383, 1341, 4382, 246,
	1222, 4376, 1222, 3519, 4375, 4374, 4367, 1624, 4163, 1398,
	1401, 4366, 1646, 4364, 3508, 1985, 1222, 4359, 1222, 1446,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 203, 2460,
	1411, 4356, 4355, 1448, 3508, 4594, 4244, 4106, 4258, 4105,
	4104, 4081, 1716, 1719, 4047, 4046, 4045, 3967, 3267, 3962,
	3524, 2786, 3593, 3539, 3530, 1662, 3501, 3519, 3498, 1495,
	3497, 1589, 1594, 1783, 3495, 3490, 3489, 1624, 1485, 1486,
	3061, 1764, 1631, 3488, 3485, 897, 3482, 3462, 900, 3445,
	3438, 3436, 3298, 2954, 3003, 1432, 251, 1222, 2775, 2023,
	1222, 1970, 3518, 3502, 3503, 1929, 1597, 1440, 2422, 2420,
	2016, 1928, 1944, 1945, 1951, 1973, 1950, 1946, 5244, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 1324, 2018,
	5187, 5186, 4838, 4370, 3518, 5108, 251, 4369, 5106, 3502,
	3503, 1349, 3993, 1705, 1645, 4983, 251, 253, 1644, 159,
	1474, 3502, 3503, 2017, 3518, 2015, 1627, 1477, 4259, 1784,
	4902, 1487, 1488, 4887, 1747, 1749, 4173, 4883, 1163, 3513,
	3511, 3512, 3504, 3505, 3506, 3507, 3509, 3510, 3060, 3508,
	4882, 4881, 1736, 1983, 4861, 1722, 4860, 253, 4858, 191,
	191, 4835, 4834, 4808, 1165, 2716, 4794, 253, 252, 4791,
	4790, 4783, 4771, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1454, 4770, 245, 1454, 1983, 3514, 3515, 3516, 251,
	251, 4714, 246, 3513, 3511, 3512, 3504, 3505, 3506, 3507,
	3509, 3510, 4685, 1745, 4640, 1983, 1222, 4623, 252, 1857,
	3060, 4622, 1222, 4561, 4557, 4554, 4532, 4402, 252, 1171,
	78, 203, 1738, 245, 251, 4381, 1907, 3544, 4309, 4161,
	4160, 4141, 246, 245, 3519, 4140, 4138, 3060, 79, 4062,
	253, 253, 246, 3266, 1936, 1937, 1939, 1940, 4050, 3508,
	3590, 2722, 2992, 3957, 2003, 84, 3887, 3881, 3848, 3518,
	3755, 203, 3709, 3676, 3621, 3619, 3519, 1789, 3467, 3466,
	3461, 203, 3427, 3244, 3088, 253, 2062, 2061, 1901, 1930,
	1931, 4593, 1759, 2060, 251, 3508, 3519, 4259, 2057, 2049,
	2047, 252, 252, 3001, 3000, 2965, 93, 3508, 1778, 2958,
	2005, 2924, 2800, 2002, 2121, 2077, 245, 245, 2071, 2070,
	2069, 1933, 2068, 2067, 2066, 246, 246, 2065, 1222, 1222,
	1222, 2064, 2063, 2044, 1222, 2043, 252, 2042, 2041, 2040,
	2039, 1345, 2038, 1345, 2037, 253, 41, 968, 2036, 2035,
	1983, 245, 2034, 2033, 3282, 203, 2032, 1932, 1502, 1806,
	246, 2031, 115, 2030, 2029, 2018, 2004, 2001, 99, 112,
	1222, 1996, 1439, 891, 1426, 2076, 1842, 1368, 1359, 2165,
	891, 4837, 1426, 4564, 1426, 2125, 2819, 1908, 4662, 203,
	1163, 4414, 4352, 3514, 3515, 3516, 252, 4101, 4074, 4065,
	3513, 3511, 3512, 3504, 3505, 3506, 3507, 3509, 3510, 2085,
	3449, 245, 1741, 2956, 4416, 2144, 4100, 3518, 2017, 1904,
	246, 1912, 3617, 2194, 1911, 2196, 1999, 3877, 1142, 1481,
	100, 3519, 2117, 1141, 3512, 3504, 3505, 3506, 3507, 3509,
	3510, 1466, 3712, 4491, 1426, 2138, 251, 2133, 1481, 203,
	1222, 1906, 1481, 1464, 2058, 3504, 3505, 3506, 3507, 3509,
	3510, 3138, 2132, 5178, 4891, 1938, 4884, 4784, 1925, 1926,
	2082, 2083, 4597, 1479, 1222, 2106, 1481, 4535, 4534, 4533,
	3502, 3503, 1502, 4490, 4405, 2229, 1983, 2211, 4316, 4315,
	2213, 4314, 4313, 4312, 4311, 1311, 2218, 253, 1983, 4310,
	2220, 4127, 4069, 1930, 1931, 2223, 2050, 2051, 2298, 4068,
	2259, 1465, 3889, 3888, 3779, 5058, 3777, 1163, 3776, 5062,
	5135, 5133, 2343, 1741, 251, 2233, 1459, 1454, 1899, 283,
	2099, 3114, 251, 897, 2817, 1933, 900, 2139, 2803, 191,
	897, 4780, 2056, 900, 2188, 3944, 251, 3745, 252, 2055,
	4189, 1343, 2801, 1343, 3487, 2130, 4262, 2039, 2039, 1460,
	2266, 3180, 2247, 245, 2988, 3486, 1459, 2126, 4816, 4814,
	3409, 1932, 246, 2097, 2131, 253, 1805, 3099, 1462, 3519,
	2107, 4156, 3678, 253, 104, 2104, 1119, 3513, 3511, 3512,
	3504, 3505, 3506, 3507, 3509, 3510, 3831, 253, 3830, 4689,
	1459, 203, 4121, 1858, 4122, 2209, 2027, 1814, 2461, 4854,
	2485, 4774, 5091, 4853, 4575, 2075, 3309, 3803, 2362, 2253,
	2252, 4521, 1815, 1481, 2261, 2397, 252, 2232, 4266, 2116,
	2115, 2114, 2112, 4854, 252, 1120, 2111, 2101, 2110, 4252,
	2396, 245, 199, 107, 4241, 251, 111, 2235, 252, 245,
	246, 1624, 1624, 4195, 2513, 4186, 1983, 2145, 246, 2231,
	4166, 3915, 1502, 245, 2999, 3643, 2578, 2490, 2428, 3455,
	4644, 3551, 246, 251, 3995, 1740, 2783, 5067, 2072, 203,
	4709, 969, 1456, 2342, 2052, 3159, 159, 203, 4681, 3811,
	2454, 1715, 3506, 3507, 3509, 3510, 253, 2309, 1638, 3156,
	1435, 203, 2024, 1397, 5082, 5079, 4501, 2407, 2412, 3097,
	3867, 2788, 1340, 3154, 1340, 2339, 4132, 2347, 4876, 1793,
	4581, 4990, 3140, 2357, 253, 3681, 3504, 3505, 3506, 3507,
	3509, 3510, 2349, 4151, 1323, 1772, 3511, 3512, 3504, 3505,
	3506, 3507, 3509, 3510, 3279, 3338, 2256, 252, 3786, 5068,
	2262, 164, 2376, 2254, 5136, 4712, 2236, 5137, 4708, 1624,
	4687, 1624, 245, 1624, 2273, 3073, 2274, 204, 1461, 2307,
	3938, 246, 2275, 2276, 2352, 252, 2281, 2282, 4739, 2279,
	2280, 1624, 1624, 2303, 4208, 4477, 1740, 2352, 1099, 1682,
	245, 2315, 3647, 2248, 1690, 1624, 1856, 2352, 1466, 246,
	203, 3036, 5170, 200, 5240, 4892, 2789, 1624, 4732, 1624,
	1624, 1624, 5115, 897, 955, 4456, 900, 1117, 3649, 1115,
	4720, 1113, 2401, 1161, 2399, 2400, 2571, 1111, 203, 2350,
	1457, 2569, 3222, 891, 2337, 4524, 2512, 1180, 1108, 1458,
	1466, 1640, 4523, 3059, 1339, 4206, 1339, 4135, 4205, 4197,
	2993, 4449, 4181, 4180, 4178, 1222, 4207, 1449, 4177, 3057,
	4165, 3059, 4124, 4123, 3792, 3791, 2258, 2450, 1465, 2455,
	3711, 3747, 1645, 3611, 2377, 3460, 1644, 3057, 3459, 3458,
	3457, 2467, 3413, 3076, 2336, 2348, 1691, 2333, 2790, 1460,
	2787, 2356, 3178, 1222, 3618, 2488, 1934, 1935, 1936, 1937,
	1939, 1940, 3177, 1855, 2257, 2386, 1791, 4450, 2386, 3161,
	1465, 2389, 2385, 3150, 4710, 2385, 3142, 1160, 2413, 4475,
	3132, 2498, 4682, 2475, 956, 3743, 3131, 4472, 3124, 1222,
	803, 1222, 3123, 1163, 1267, 1163, 3122, 3104, 1222, 2833,
	3103, 2165, 2165, 1502, 2464, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 2436, 1222, 2477, 1222, 1222, 1222, 1222, 2435, 2608,
	1460, 3678, 2517, 897, 3064, 2832, 900, 2542, 1745, 2397,
	1745, 2980, 2317, 1738, 2505, 2472, 2473, 2472, 1854, 2469,
	1222, 3118, 1456, 2485, 1222, 1222, 2504, 803, 2351, 2626,
	5171, 2697, 1222, 1440, 1459, 1905, 1222, 2321, 1222, 1222,
	5116, 2351, 2481, 2654, 2482, 1162, 1502, 2073, 2308, 1483,
	1484, 2351, 1222, 1222, 1222, 1222, 3276, 5173, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 2792, 2434, 1483, 1484,
	4423, 4492, 1483, 1484, 1341, 3007, 1341, 2305, 2984, 1728,
	4456, 1727, 2650, 2651, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 2521, 1222, 2318, 1483, 1484, 1222, 2764,
	2765, 2532, 3510, 1837, 3075, 1807, 3744, 2624, 1461, 2613,
	1345, 1686, 2301, 2764, 2780, 3916, 4449, 1502, 2783, 751,
	4442, 1215, 1726, 1456, 1725, 1940, 1345, 1383, 2565, 2604,
	4445, 4621, 1898, 2587, 3101, 2712, 2584, 4446, 4440, 1641,
	2828, 2637, 1222, 1502, 1105, 2306, 746, 4444, 4451, 3043,
	4471, 2624, 4433, 2596, 3316, 2509, 1431, 1786, 5174, 2874,
	2874, 2888, 1895, 2764, 1699, 2712, 2908, 2910, 4473, 2622,
	1457, 2522, 4450, 2916, 2345, 2302, 4749, 2288, 802, 1458,
	2612, 1704, 2289, 2611, 2610, 2970, 2625, 2618, 2728, 2786,
	4448, 3158, 2585, 5136, 1142, 3127, 1163, 1142, 1142, 2641,
	2779, 1815, 2642, 2643, 3386, 1815, 1163, 2322, 4452, 1461,
	1163, 3354, 1868, 2622, 3087, 1836, 4443, 2966, 2378, 4432,
	2983, 2586, 2576, 2708, 2159, 3157, 3367, 3401, 2563, 2720,
	3925, 1872, 5202, 2117, 3125, 1159, 2718, 2523, 1803, 3155,
	1874, 4469, 2933, 2263, 2264, 3924, 5172, 3086, 1426, 1426,
	958, 957, 3030, 3153, 2706, 1837, 2620, 2387, 2106, 3074,
	2474, 3356, 4844, 2792, 1654, 802, 1661, 2724, 1667, 3006,
	1311, 1457, 5176, 3646, 2323, 2324, 1438, 3652, 4869, 1787,
	1458, 3050, 2777, 1910, 2526, 3128, 2520, 3984, 5182, 1502,
	3031, 1001, 1853, 3009, 804, 4148, 2388, 1792, 2087, 2290,
	1163, 2319, 2379, 1850, 3028, 5064, 2309, 5148, 3017, 2987,
	2932, 2830, 4162, 4522, 3021, 4179, 2831, 2294, 3025, 2834,
	1343, 2835, 2836, 1834, 3126, 4176, 2623, 3005, 3032, 2941,
	3058, 4109, 2899, 2883, 1454, 1415, 1343, 1758, 2165, 1763,
	2914, 2912, 3370, 2870, 4096, 4447, 4221, 3798, 2934, 2320,
	2955, 3790, 2940, 1777, 2945, 1782, 2944, 2951, 2952, 2938,
	2939, 191, 2922, 2923, 1459, 3424, 3400, 1836, 2104, 1109,
	2623, 1109, 2058, 1109, 3741, 2390, 3160, 2570, 2307, 1110,
	3033, 804, 2568, 2334, 2091, 4445, 1502, 4457, 4458, 1835,
	1109, 4474, 4446, 3121, 2291, 2296, 3422, 953, 3728, 952,
	2702, 1711, 1624, 4451, 2621, 4871, 4222, 3102, 1595, 2599,
	2605, 1609, 1415, 2995, 2529, 4620, 3027, 4146, 3100, 1426,
	3049, 1840, 3002, 3213, 2703, 3171, 3016, 3065, 2050, 2051,
	3019, 2704, 3020, 2094, 4750, 2709, 5204, 2595, 3981, 3720,
	1222, 1222, 3034, 1222, 5157, 4448, 3024, 4748, 2621, 2089,
	4220, 3011, 2309, 4746, 4467, 2792, 1709, 3026, 3729, 3062,
	5156, 2340, 4955, 4452, 3217, 1459, 2978, 2092, 891, 3107,
	1426, 5123, 4470, 4334, 3255, 2325, 2329, 2312, 3919, 5175,
	2292, 1340, 3151, 3369, 4333, 1415, 1415, 1869, 3248, 5065,
	3106, 993, 3799, 3037, 3091, 3119, 3864, 1340, 3363, 3721,
	2206, 1624, 3727, 4745, 2890, 2335, 3865, 747, 3105, 3299,
	1688, 2090, 1685, 3796, 1624, 3366, 1624, 2694, 994, 4967,
	3982, 3120, 1624, 3136, 3218, 2598, 2392, 978, 1382, 3705,
	2530, 3263, 4747, 2299, 1624, 860, 2330, 2313, 3068, 3130,
	3078, 3081, 3419, 3719, 3112, 3113, 3115, 3116, 3117, 5180,
	3566, 3172, 3319, 3320, 983, 2419, 2418, 2326, 1426, 5035,
	1426, 5036, 3225, 3326, 3327, 3328, 3179, 3227, 3216, 4877,
	3310, 3214, 3215, 3420, 3051, 3052, 3665, 3425, 3053, 3054,
	2328, 2311, 1222, 3393, 3394, 3129, 2391, 3141, 3134, 3703,
	4672, 3864, 748, 2363, 2297, 897, 2363, 5063, 900, 3340,
	4447, 3341, 3902, 3259, 3740, 3148, 3737, 2288, 3290, 3139,
	4899, 3415, 2289, 1339, 3902, 3900, 3164, 3165, 3166, 3342,
	1711, 3304, 4468, 3307, 3306, 3893, 3368, 3900, 897, 1339,
	2705, 900, 3253, 3704, 3223, 1870, 3301, 3893, 3648, 2093,
	2707, 2711, 4457, 4458, 749, 1866, 750, 2308, 3336, 2359,
	1222, 858, 3758, 3314, 1645, 3311, 1222, 1222, 3228, 4953,
	3321, 3317, 3322, 801, 3693, 5181, 1106, 1816, 1639, 3294,
	2288, 1366, 3292, 3242, 4551, 2289, 2358, 3252, 5122, 1788,
	2564, 2346, 3615, 3059, 2045, 3333, 4870, 2344, 2792, 2969,
	1002, 2113, 2692, 2087, 191, 2695, 5101, 3783, 2719, 3079,
	3274, 3344, 5183, 3346, 4954, 3348, 5102, 3350, 3351, 3285,
	3904, 2354, 1222, 1222, 3372, 1867, 3374, 3295, 1222, 1802,
	1804, 2363, 3904, 3692, 4617, 2293, 1629, 3895, 1091, 2290,
	3360, 1222, 1222, 3293, 1871, 2331, 3039, 1222, 1222, 3895,
	1745, 1873, 3894, 1222, 2306, 2344, 2691, 2294, 995, 996,
	4330, 4147, 3797, 1155, 3894, 2299, 3335, 1437, 3565, 3041,
	2366, 4633, 2346, 3223, 1909, 2373, 2525, 5146, 2519, 5001,
	3699, 3345, 3421, 3347, 2355, 3349, 3343, 4503, 1153, 2091,
	1091, 5200, 3423, 770, 979, 980, 2159, 2159, 1222, 1222,
	1222, 1353, 2290, 3666, 1222, 2341, 1790, 3042, 1091, 3903,
	2343, 3416, 4234, 3381, 1222, 1155, 2091, 1355, 1995, 2597,
	2294, 3903, 4232, 2774, 2528, 2387, 3465, 2937, 3040, 5205,
	3448, 1222, 3392, 1155, 2291, 2296, 3375, 3701, 2094, 3377,
	2950, 4234, 3383, 1341, 1350, 1162, 4568, 3135, 3997, 2338,
	3382, 4232, 5189, 4563, 2089, 4323, 4659, 4335, 1092, 1341,
	2637, 3940, 3891, 1154, 2388, 2094, 4569, 3387, 3402, 4527,
	4097, 1372, 2092, 1370, 3443, 3444, 3384, 4616, 4920, 3447,
	3439, 2935, 1821, 5007, 2345, 4937, 4793, 2207, 4526, 859,
	1356, 4525, 2367, 4280, 3852, 3629, 2977, 2291, 2296, 2092,
	5121, 2442, 2084, 1369, 1609, 3700, 1362, 4236, 738, 2411,
	1092, 4740, 4257, 4552, 1920, 1919, 2090, 1357, 2575, 4331,
	2292, 1163, 2640, 1222, 1222, 1222, 1222, 2310, 1092, 3414,
	2249, 1919, 1222, 1222, 1222, 4707, 4236, 1222, 3672, 4235,
	3603, 861, 5210, 4802, 1914, 857, 4851, 4281, 4201, 1222,
	1345, 1502, 4379, 4182, 1609, 1222, 4921, 1222, 4087, 4133,
	1354, 2693, 3558, 3559, 997, 998, 1345, 4036, 4235, 2286,
	4131, 2342, 5100, 2299, 3901, 3896, 3897, 3898, 3899, 3853,
	2246, 3980, 3844, 2292, 1502, 3668, 3901, 3896, 3897, 3898,
	3899, 3264, 3258, 3246, 2468, 2462, 1345, 2456, 2448, 1502,
	981, 982, 2427, 2426, 3175, 2928, 4787, 4117, 1097, 1096,
	1679, 1426, 3541, 4088, 3905, 3454, 3080, 1374, 810, 3063,
	4051, 2165, 1918, 4618, 4973, 1502, 3905, 2630, 3108, 2284,
	3560, 3941, 1919, 3583, 2297, 1426, 2299, 4230, 1918, 4940,
	4089, 2931, 4086, 1426, 2093, 2577, 2242, 3631, 4283, 4586,
	3243, 3596, 3610, 1385, 4766, 4764, 1093, 2244, 4336, 4684,
	1097, 1096, 3684, 2008, 3680, 1222, 3679, 2013, 3407, 3570,
	2510, 2093, 3385, 2285, 4064, 3563, 3625, 1222, 1097, 1096,
	3562, 3597, 2930, 2502, 4091, 3592, 2491, 2929, 2298, 1844,
	1843, 4566, 3654, 2976, 2424, 1426, 1920, 2297, 3568, 3667,
	1838, 2165, 2975, 2974, 2245, 2973, 2972, 1720, 1093, 1734,
	1732, 4240, 1920, 1000, 3250, 1160, 4864, 4253, 1222, 2272,
	4233, 1721, 2370, 4542, 2298, 3633, 1093, 4696, 3635, 3636,
	3536, 3537, 3538, 3639, 1426, 3640, 3655, 3641, 3717, 1918,
	1454, 3552, 3605, 3606, 3607, 3608, 4337, 3589, 3601, 4233,
	3637, 3644, 3616, 1426, 3582, 1426, 3084, 3731, 1995, 3733,
	1343, 4922, 5209, 3650, 4380, 2293, 3567, 4139, 4037, 2466,
	2634, 2631, 3806, 1222, 1222, 5143, 1343, 2362, 4670, 4038,
	4128, 1502, 2368, 2159, 2362, 4668, 1094, 4768, 1351, 2383,
	3746, 3683, 1426, 3569, 3688, 849, 3769, 3690, 3581, 3221,
	3656, 3657, 3912, 3628, 3584, 3585, 1343, 3109, 3110, 1426,
	2558, 4786, 4118, 3781, 1095, 3613, 3669, 3315, 3226, 3224,
	2495, 3587, 3682, 3588, 3774, 3686, 2369, 2396, 2293, 3714,
	1796, 850, 3675, 1500, 3696, 4979, 4697, 4865, 1094, 4679,
	3759, 1624, 1822, 4692, 1352, 4691, 3634, 4427, 4426, 4987,
	3638, 3738, 4970, 4090, 1426, 1624, 1094, 1624, 4386, 2453,
	3645, 1502, 4767, 3718, 1152, 4053, 1095, 2799, 891, 1624,
	1098, 4660, 3622, 3623, 4409, 3624, 3653, 1891, 5009, 1893,
	2591, 1624, 5147, 5145, 1095, 5084, 3604, 4895, 4680, 4885,
	4666, 1890, 4639, 1426, 2567, 3800, 1888, 3845, 3761, 4420,
	3763, 3732, 1862, 3767, 4378, 4239, 2534, 3773, 3836, 3702,
	1345, 3801, 4752, 3804, 3533, 809, 2891, 3664, 3860, 3710,
	3956, 1340, 1098, 2162, 2271, 1860, 1832, 3858, 4980, 3913,
	4866, 1830, 1624, 3723, 3910, 1828, 1826, 1340, 3726, 1824,
	1098, 3748, 3626, 3843, 1624, 3496, 1624, 3724, 4129, 3426,
	3247, 3725, 2131, 3149, 905, 3143, 3098, 3880, 3716, 1733,
	1731, 3751, 1818, 999, 3004, 2600, 3757, 1340, 1812, 3742,
	2501, 2486, 2124, 2120, 1894, 1810, 3851, 3730, 3770, 1730,
	3869, 912, 1771, 2405, 3917, 3778, 4425, 3534, 3816, 3936,
	3788, 3130, 3935, 3756, 3782, 2381, 3927, 1502, 1914, 3358,
	1502, 3357, 3324, 2619, 1849, 2537, 2447, 2425, 2195, 4913,
	2193, 2028, 1785, 1703, 1307, 2798, 3768, 5056, 4504, 3928,
	4188, 3789, 4187, 3793, 4508, 4487, 3304, 3854, 897, 2583,
	1107, 900, 4969, 3780, 1222, 3304, 4579, 3977, 4584, 4513,
	1222, 1222, 3106, 4500, 1222, 1222, 1222, 4438, 1222, 3787,
	3861, 3808, 4437, 1339, 4279, 4270, 3840, 1222, 2165, 3760,
	4204, 3841, 3839, 3857, 4905, 4184, 1222, 2593, 4154, 1339,
	4152, 1222, 1892, 2592, 4130, 3908, 3906, 1502, 4906, 3847,
	4409, 2566, 3911, 3866, 1889, 3909, 1222, 1163, 5119, 1887,
	3868, 3842, 3875, 2533, 1502, 1861, 3878, 3879, 3934, 1339,
	2153, 3832, 3277, 3933, 2165, 2165, 1222, 1222, 3269, 1222,
	1222, 1222, 4907, 3921, 3859, 3922, 3262, 3923, 1859, 1831,
	1343, 191, 191, 3254, 1829, 1923, 3239, 1222, 1827, 1825,
	3238, 1222, 1823, 2165, 2165, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1817, 1222, 3969, 3970, 3219,
	4009, 1811, 4010, 3959, 1222, 1222, 2165, 3942, 1809, 3023,
	2404, 1222, 1729, 3018, 2423, 2421, 2398, 2364, 2327, 4909,
	2314, 2300, 1222, 2228, 2225, 2222, 3939, 2219, 2214, 2212,
	2208, 2199, 5114, 1345, 1345, 1320, 5040, 1222, 1112, 1114,
	1116, 3771, 3574, 4908, 3931, 4568, 2373, 2137, 5137, 3405,
	2250, 906, 907, 3937, 4863, 2238, 2239, 3378, 3376, 3212,
	5021, 4910, 1321, 4931, 4600, 4569, 2603, 4520, 4424, 1502,
	3305, 3651, 3964, 3966, 2267, 2650, 4000, 1684, 3059, 1924,
	4083, 4804, 1426, 1426, 3976, 3085, 4048, 3059, 4797, 4291,
	3983, 3985, 3986, 3992, 3057, 2309, 2524, 1426, 1426, 2465,
	891, 1426, 1405, 3082, 2650, 4015, 4070, 1885, 1886, 1406,
	2561, 3999, 2556, 1341, 2601, 5020, 3176, 2531, 4478, 4515,
	1222, 1340, 4012, 4094, 4095, 1154, 1808, 4040, 4007, 1341,
	1415, 4823, 4008, 1930, 1931, 1476, 3089, 4044, 4107, 4108,
	4014, 3575, 4114, 838, 4694, 1930, 1931, 1222, 3406, 4387,
	4365, 3697, 3090, 3111, 2123, 4041, 1927, 4049, 4055, 1341,
	5131, 2602, 1433, 3772, 1373, 4060, 4061, 1473, 4200, 5092,
	3090, 280, 3237, 3987, 4267, 2449, 1322, 1933, 1444, 1415,
	1222, 1222, 2237, 4115, 3156, 4057, 4058, 4116, 1406, 3154,
	3163, 1406, 4199, 3573, 3580, 3145, 4006, 3092, 1865, 4978,
	3147, 1932, 4960, 909, 908, 4930, 4924, 841, 841, 191,
	3094, 1415, 1415, 1932, 3146, 4862, 855, 4072, 1222, 1222,
	735, 4788, 4759, 4671, 3093, 3231, 1222, 1617, 3234, 3579,
	3236, 4277, 4269, 4134, 4256, 4153, 4080, 4155, 3846, 3284,
	2915, 2234, 2146, 1343, 1343, 5177, 5011, 1624, 1624, 4693,
	1624, 5012, 3133, 1339, 1624, 4167, 1637, 1624, 1636, 1630,
	897, 1156, 1426, 900, 4110, 3614, 4218, 1674, 2383, 5208,
	910, 911, 5150, 3502, 3503, 1930, 1931, 3281, 2269, 5011,
	3281, 4073, 4926, 1648, 5012, 2278, 3045, 2165, 2277, 3044,
	4357, 4172, 4174, 2721, 1795, 1647, 2159, 2794, 4099, 1648,
	1794, 4196, 3361, 2829, 2278, 2277, 4212, 4276, 4202, 2008,
	4190, 1864, 4203, 4789, 1863, 4733, 4517, 1595, 4512, 3389,
	1753, 4511, 4353, 4159, 4911, 2162, 2162, 4226, 4164, 1624,
	4912, 4327, 4098, 4103, 3988, 1222, 1768, 3765, 3762, 3364,
	3576, 3577, 3578, 1345, 1222, 2022, 4223, 4224, 4284, 2021,
	4293, 3106, 4249, 1624, 1609, 4299, 3380, 2607, 1624, 1624,
	1624, 4171, 5193, 3352, 1629, 5158, 4238, 5026, 4964, 4963,
	4962, 1629, 4894, 4893, 4840, 4762, 2159, 4263, 4724, 4663,
	4657, 1624, 4301, 1624, 4559, 4539, 4476, 4415, 4304, 1502,
	4297, 4219, 4243, 4150, 4142, 4209, 1797, 4285, 4288, 3172,
	2891, 2891, 4264, 3850, 1340, 1340, 4228, 4255, 3849, 4237,
	4242, 4216, 3689, 3632, 4227, 4287, 4251, 1502, 3675, 3365,
	1222, 1222, 3355, 4305, 3332, 3331, 1222, 1222, 2165, 3330,
	3329, 1222, 1222, 3268, 1222, 3241, 3240, 4319, 3083, 1222,
	3014, 3008, 2997, 2996, 2985, 2723, 4273, 2594, 2562, 2555,
	1222, 2554, 2553, 2552, 2551, 3290, 2463, 2437, 2416, 2433,
	4268, 2432, 4271, 2431, 2430, 2429, 1222, 2202, 2201, 3304,
	2200, 2198, 2136, 1341, 2135, 1884, 4289, 1883, 4286, 1819,
	1698, 1697, 1696, 4295, 4302, 1695, 4217, 4294, 1694, 1693,
	1692, 4303, 1687, 4338, 1683, 1681, 1680, 1614, 1613, 1612,
	1493, 1492, 2153, 2153, 1491, 1490, 1489, 4317, 1436, 4351,
	1392, 1391, 4320, 1390, 4318, 1389, 1388, 1387, 1386, 1384,
	1609, 1379, 4321, 1378, 1377, 1376, 1375, 1345, 967, 8,
	1302, 1415, 4332, 4347, 4326, 1345, 1339, 1339, 2240, 1502,
	1502, 1118, 1502, 1104, 4868, 4455, 4454, 4453, 2590, 1345,
	98, 1689, 929, 1343, 92, 2371, 4149, 1068, 4392, 5008,
	1624, 1624, 4898, 1672, 937, 4989, 4265, 3691, 3181, 2536,
	1820, 2538, 3591, 1502, 2957, 4952, 4361, 3464, 4830, 4632,
	2797, 2026, 2891, 2891, 2891, 2891, 1609, 3545, 1609, 94,
	1206, 1252, 4550, 4549, 4439, 4136, 3819, 4546, 1222, 4545,
	2150, 2152, 1170, 1505, 3596, 4410, 4411, 5034, 4377, 1345,
	2251, 1345, 5199, 1212, 2265, 2260, 2998, 2873, 1229, 1226,
	2154, 2156, 1228, 1227, 1230, 4413, 2155, 2046, 1225, 4339,
	2149, 4275, 3288, 3876, 1739, 1737, 1426, 4466, 4419, 1070,
	4486, 4422, 2255, 4400, 2717, 2781, 1502, 3453, 1426, 2019,
	1186, 1426, 4495, 1208, 4465, 4498, 4482, 4483, 4391, 4388,
	2778, 4394, 1367, 4384, 4462, 1222, 4462, 4393, 1502, 1197,
	4401, 3571, 287, 287, 287, 3550, 741, 742, 4404, 757,
	741, 757, 768, 3863, 4431, 808, 4389, 4390, 4079, 828,
	2629, 947, 3499, 4434, 835, 835, 835, 835, 2784, 4421,
	4408, 1358, 2896, 2889, 287, 2885, 4480, 4428, 4429, 3642,
	1624, 1624, 2162, 4430, 1340, 191, 3278, 1900, 4646, 4436,
	1997, 3289, 1896, 1470, 1190, 974, 2715, 2010, 3431, 2639,
	3870, 3594, 287, 2159, 2991, 5014, 4479, 1343, 1426, 2653,
	3996, 3362, 4570, 2441, 4481, 1343, 1319, 1318, 4502, 1365,
	1502, 4395, 4397, 1317, 4519, 1624, 1341, 1341, 4995, 1343,
	4992, 2361, 4553, 3814, 3815, 2243, 4540, 4538, 3038, 2727,
	3833, 1202, 1608, 2582, 4587, 4537, 3929, 4496, 3556, 2159,
	2159, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 4516, 4530,
	4518, 4254, 1700, 4701, 1214, 1982, 4571, 4576, 4536, 4499,
	3208, 1502, 3207, 4857, 1455, 1453, 1452, 1451, 2159, 2159,
	5167, 3174, 2374, 1222, 1222, 1222, 4145, 4529, 4528, 1343,
	4144, 1343, 4143, 4588, 250, 3399, 1921, 4548, 4544, 1913,
	4543, 1502, 2795, 247, 4556, 249, 1222, 248, 4605, 1222,
	1222, 2159, 4609, 4562, 4560, 4555, 1339, 3695, 4596, 1222,
	4591, 4084, 2165, 3600, 5090, 4169, 3805, 1222, 1222, 4485,
	25, 4589, 842, 843, 844, 3048, 2270, 1472, 4120, 4573,
	741, 741, 4494, 24, 1502, 4497, 1624, 23, 287, 4602,
	4510, 4603, 22, 21, 121, 44, 20, 4624, 163, 2153,
	161, 1426, 138, 158, 157, 130, 156, 155, 1340, 3706,
	3707, 154, 3708, 153, 4619, 152, 1340, 160, 151, 4629,
	150, 145, 149, 1502, 148, 147, 146, 144, 142, 4611,
	1340, 1222, 143, 137, 4612, 141, 4613, 1629, 140, 2967,
	139, 136, 4665, 135, 1222, 134, 133, 132, 131, 129,
	162, 128, 127, 1222, 205, 126, 125, 124, 2165, 123,
	122, 821, 3752, 3753, 822, 3754, 63, 4641, 1222, 62,
	118, 1222, 4582, 4655, 119, 4656, 4652, 4653, 19, 4635,
	42, 14, 67, 68, 18, 13, 1222, 37, 97, 1222,
	1340, 110, 1340, 109, 108, 38, 1502, 4704, 105, 36,
	4674, 17, 4675, 16, 1426, 15, 103, 4727, 4742, 102,
	101, 35, 33, 11, 1624, 1624, 1624, 9, 1629, 1629,
	39, 2108, 1609, 1609, 2298, 4676, 12, 4683, 5, 196,
	195, 198, 194, 197, 96, 1345, 4673, 289, 4715, 4716,
	1339, 193, 192, 95, 31, 10, 188, 4778, 1339, 4261,
	87, 190, 4751, 189, 4738, 187, 186, 4723, 4761, 185,
	88, 85, 1339, 4772, 184, 1502, 91, 183, 1624, 4777,
	4765, 4756, 4757, 4734, 4726, 4736, 1341, 4737, 4769, 86,
	90, 4725, 89, 29, 6, 3047, 66, 4798, 7, 4713,
	4462, 4614, 3914, 113, 114, 40, 83, 82, 4735, 4803,
	81, 1609, 80, 1222, 1222, 28, 4753, 4785, 4807, 4758,
	4809, 4754, 2483, 4763, 2891, 2891, 65, 4781, 27, 180,
	1222, 2165, 1339, 2453, 1339, 229, 228, 227, 226, 225,
	2497, 2499, 2159, 4743, 224, 4801, 4799, 4776, 223, 222,
	217, 221, 1426, 219, 2503, 1426, 218, 1426, 1426, 4721,
	220, 216, 241, 240, 239, 3816, 2511, 238, 2514, 2515,
	2516, 4800, 232, 4806, 4805, 231, 1222, 237, 1222, 4591,
	1222, 4852, 236, 235, 234, 233, 230, 244, 4819, 4820,
	1345, 76, 215, 4839, 214, 213, 4841, 211, 4842, 4843,
	4728, 207, 210, 1222, 212, 1345, 209, 4822, 4850, 4818,
	1629, 1629, 1629, 1629, 2891, 2891, 2891, 2891, 2891, 2891,
	2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
	2891, 2891, 2891, 2891, 4811, 2891, 4828, 208, 4741, 206,
	243, 242, 77, 178, 179, 4462, 75, 177, 4880, 4849,
	176, 175, 1184, 4848, 4845, 1343, 174, 173, 4879, 172,
	4462, 1345, 1345, 4903, 171, 74, 182, 181, 26, 4873,
	1341, 2, 4872, 1, 0, 1222, 0, 4901, 1341, 1415,
	0, 0, 1345, 2159, 0, 1345, 0, 4795, 0, 1624,
	0, 0, 1341, 0, 0, 0, 0, 0, 4888, 1624,
	0, 0, 0, 0, 4916, 4917, 4890, 4889, 0, 0,
	0, 0, 0, 0, 1222, 1222, 4462, 4462, 0, 0,
	0, 0, 4896, 0, 1222, 4934, 0, 0, 4936, 0,
	4948, 4914, 4949, 0, 0, 0, 0, 4462, 0, 4925,
	4462, 0, 4781, 4928, 4927, 0, 0, 4933, 0, 0,
	0, 0, 1341, 0, 1341, 0, 0, 4941, 4942, 0,
	4945, 0, 0, 0, 4946, 0, 4947, 0, 0, 0,
	4965, 0, 4986, 0, 1222, 1222, 4944, 4957, 1222, 0,
	1609, 0, 1624, 1426, 0, 4961, 1426, 0, 1360, 4956,
	0, 0, 0, 4966, 0, 0, 0, 0, 0, 4968,
	1343, 0, 0, 4994, 4997, 2162, 5013, 0, 4976, 4977,
	0, 0, 5010, 0, 0, 1343, 1340, 4985, 0, 0,
	0, 5017, 1381, 4984, 5005, 0, 0, 5006, 0, 0,
	0, 0, 0, 0, 287, 5003, 287, 287, 5004, 1410,
	287, 1420, 0, 5039, 1222, 1222, 1222, 0, 0, 4998,
	0, 5037, 1434, 5002, 0, 0, 0, 0, 0, 0,
	828, 4999, 0, 828, 0, 5022, 0, 0, 0, 0,
	0, 1343, 1343, 5027, 0, 5030, 0, 5071, 0, 0,
	5038, 1222, 0, 5054, 0, 2162, 835, 0, 0, 0,
	0, 0, 1343, 5051, 5052, 1343, 5053, 5076, 0, 5072,
	0, 0, 0, 0, 0, 0, 5016, 0, 0, 0,
	287, 0, 287, 287, 1410, 2298, 287, 287, 0, 0,
	0, 0, 5073, 5099, 5098, 1420, 0, 0, 0, 0,
	0, 0, 5074, 0, 0, 5105, 5087, 0, 1222, 287,
	0, 1650, 5097, 5089, 0, 5111, 1426, 0, 1339, 4761,
	5120, 0, 0, 5104, 5130, 5103, 5107, 1670, 0, 0,
	5117, 1340, 5113, 0, 1677, 5112, 0, 0, 0, 0,
	0, 5138, 5086, 5141, 0, 5088, 1340, 5126, 5127, 5134,
	0, 5132, 2153, 1702, 0, 5129, 1420, 5128, 0, 5140,
	287, 287, 5151, 1410, 0, 5144, 5155, 1345, 5142, 1345,
	4994, 5153, 0, 4997, 0, 5149, 5152, 0, 0, 5160,
	0, 5163, 0, 0, 828, 0, 287, 287, 0, 0,
	5159, 0, 0, 5154, 0, 5169, 0, 5168, 1765, 0,
	5161, 0, 1340, 1340, 0, 0, 0, 0, 1426, 1773,
	5162, 0, 5164, 0, 974, 0, 5184, 0, 5185, 0,
	5190, 0, 4462, 1340, 4462, 5192, 1340, 0, 5191, 0,
	5197, 0, 2153, 0, 5194, 5195, 0, 0, 1222, 1222,
	0, 0, 0, 4272, 5203, 0, 5201, 1222, 1222, 5188,
	5206, 5211, 0, 5215, 0, 3428, 3429, 0, 5218, 0,
	5217, 0, 5220, 1339, 0, 5219, 0, 5222, 0, 5225,
	5016, 0, 5221, 5227, 5226, 0, 0, 2159, 1339, 0,
	5230, 5224, 0, 0, 0, 1426, 0, 0, 5231, 5235,
	5232, 5239, 0, 5223, 5236, 287, 5237, 5234, 0, 0,
	0, 5243, 1629, 1629, 0, 1222, 0, 5242, 0, 5245,
	4322, 5250, 5239, 5246, 0, 5248, 5233, 3557, 0, 287,
	0, 3173, 5212, 5213, 0, 0, 0, 5214, 0, 0,
	0, 0, 0, 0, 1339, 1339, 0, 0, 1341, 0,
	0, 1415, 0, 0, 0, 0, 3290, 0, 0, 0,
	3586, 0, 0, 0, 0, 1339, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 3599, 0, 0, 0, 0,
	0, 0, 0, 2159, 0, 0, 3290, 1343, 0, 1343,
	5247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3620, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629,
	1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629,
	1629, 1629, 2162, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 2453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3526, 3527, 3528,
	3529, 3318, 0, 1184, 1184, 1184, 0, 0, 0, 0,
	0, 0, 0, 3325, 0, 0, 0, 0, 2162, 2162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1341, 1586, 0, 0, 2162, 2162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 0, 3502, 3503, 0, 3520, 3521, 3522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2162, 0, 0, 0, 741, 3961, 0, 0, 0, 1930,
	1931, 0, 0, 0, 0, 0, 2159, 0, 1340, 0,
	1340, 0, 0, 0, 0, 287, 0, 287, 0, 0,
	0, 287, 0, 1961, 1341, 1341, 0, 0, 0, 0,
	0, 1933, 0, 0, 1650, 1410, 2128, 287, 0, 287,
	2134, 0, 0, 0, 0, 1341, 0, 287, 1341, 757,
	0, 3517, 0, 0, 287, 0, 0, 0, 1986, 2153,
	4506, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	2203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 3599, 0, 0,
	0, 0, 0, 0, 0, 2153, 2153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 0, 828, 4558, 0, 0, 0, 0, 2891, 0,
	0, 0, 0, 0, 2153, 2153, 4572, 0, 0, 0,
	1339, 0, 1339, 1961, 0, 0, 0, 0, 3508, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 4595,
	835, 1415, 835, 0, 0, 0, 0, 2153, 0, 0,
	0, 0, 835, 835, 0, 1938, 0, 0, 1986, 0,
	0, 0, 0, 962, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 965, 964, 0, 3524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 1962, 0, 79,
	0, 2453, 0, 3930, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 3518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 93, 0, 0,
	0, 0, 4669, 0, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 287, 968, 0,
	3989, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 51, 0, 115, 0, 0, 1960, 1962, 0, 99,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 0, 1341, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 287, 2891,
	0, 0, 0, 0, 287, 0, 0, 0, 1177, 0,
	287, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 100, 2162, 0, 0, 0, 287, 0, 287, 0,
	3519, 0, 741, 0, 287, 0, 0, 0, 0, 3952,
	3953, 0, 0, 0, 0, 1586, 828, 2891, 0, 0,
	974, 0, 0, 0, 0, 0, 0, 1954, 2153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2891, 0, 0, 4082, 0, 0, 0, 0,
	287, 0, 1410, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 828, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 2535, 0, 0, 0, 0, 287, 287, 1985,
	287, 0, 287, 0, 287, 0, 287, 0, 0, 4016,
	4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026,
	4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 0,
	4039, 2572, 0, 0, 2573, 0, 2574, 0, 0, 0,
	0, 1184, 0, 0, 0, 0, 0, 0, 0, 1586,
	0, 287, 287, 287, 287, 104, 0, 1954, 0, 3514,
	3515, 3516, 0, 0, 0, 0, 3513, 3511, 3512, 3504,
	3505, 3506, 3507, 3509, 3510, 0, 0, 0, 0, 2153,
	808, 0, 0, 0, 828, 0, 0, 4886, 0, 0,
	0, 0, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	3784, 0, 0, 199, 107, 0, 4900, 111, 0, 1985,
	0, 0, 0, 0, 1930, 1931, 0, 0, 0, 0,
	1974, 1975, 1976, 0, 0, 0, 0, 0, 3809, 0,
	0, 0, 0, 0, 251, 4932, 0, 0, 1961, 0,
	3837, 0, 969, 0, 0, 0, 1933, 159, 0, 0,
	0, 1609, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2729, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 253, 0, 0, 0, 0,
	0, 3883, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 3907, 0, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 164, 0, 0, 0, 1629, 0, 0, 1586,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 287, 0, 0, 0, 0, 0,
	246, 0, 0, 741, 200, 0, 0, 0, 0, 1415,
	287, 5023, 741, 0, 0, 0, 0, 5025, 0, 0,
	1955, 1956, 1957, 1958, 287, 0, 0, 0, 1629, 963,
	1938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 1420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 1420, 0, 0, 757, 0,
	757, 0, 0, 0, 3013, 0, 0, 1947, 1948, 0,
	287, 0, 0, 287, 0, 0, 0, 287, 0, 287,
	0, 0, 0, 0, 1410, 1969, 287, 287, 0, 1420,
	1420, 3029, 0, 0, 0, 0, 287, 0, 0, 78,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2162, 0, 0, 0, 0, 79, 4399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	835, 835, 0, 0, 835, 835, 0, 170, 0, 4417,
	0, 0, 0, 3072, 0, 0, 78, 0, 48, 47,
	0, 0, 0, 0, 0, 287, 0, 0, 3502, 3503,
	0, 3520, 3521, 3522, 79, 93, 0, 1629, 165, 287,
	0, 1983, 0, 0, 3502, 3503, 0, 3520, 3521, 3522,
	0, 84, 287, 2153, 0, 0, 0, 0, 0, 0,
	1586, 0, 69, 828, 0, 0, 0, 3960, 0, 50,
	0, 167, 0, 0, 0, 0, 968, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 287,
	49, 115, 93, 0, 0, 0, 0, 99, 112, 1959,
	0, 287, 287, 3169, 1650, 0, 0, 3517, 0, 0,
	1629, 3502, 3503, 0, 3520, 3521, 3522, 0, 0, 52,
	70, 0, 1954, 3517, 0, 0, 0, 0, 53, 0,
	0, 0, 0, 59, 0, 2162, 0, 0, 168, 287,
	3229, 0, 0, 0, 0, 0, 51, 0, 115, 2153,
	1972, 0, 0, 1586, 99, 112, 0, 0, 0, 100,
	0, 0, 71, 0, 0, 0, 0, 1650, 0, 0,
	287, 0, 287, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 3273,
	3517, 0, 0, 0, 0, 0, 0, 54, 0, 3072,
	0, 741, 0, 0, 3508, 0, 0, 0, 0, 0,
	3169, 974, 3072, 0, 0, 0, 100, 0, 0, 0,
	3508, 0, 0, 0, 1586, 0, 4210, 4211, 0, 0,
	0, 0, 0, 4213, 287, 0, 4214, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3525, 0,
	1586, 0, 0, 287, 1410, 287, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 1420, 287, 4630, 0, 1410,
	0, 1410, 3524, 1410, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 3508, 3524, 0,
	0, 0, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4630, 0, 2153, 104, 3518, 0, 0, 0, 0, 0,
	287, 287, 287, 287, 1410, 0, 0, 1410, 0, 287,
	3518, 0, 4300, 0, 287, 0, 0, 2497, 4306, 4307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2653,
	0, 0, 0, 0, 0, 3524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	104, 199, 107, 287, 0, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 0, 0, 0, 0, 1983, 1586, 3518, 0, 0,
	0, 0, 251, 0, 58, 0, 0, 0, 0, 61,
	969, 1983, 0, 0, 0, 159, 0, 0, 0, 73,
	0, 0, 2653, 0, 0, 0, 0, 60, 199, 107,
	0, 0, 111, 4638, 0, 0, 56, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 64, 0, 0,
	0, 0, 159, 0, 0, 0, 3519, 0, 1983, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 3519, 1586, 0, 0, 204, 0, 0, 1650,
	0, 0, 0, 0, 252, 4686, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 2739, 2740, 2741, 2758, 2759, 2760, 246, 0,
	0, 0, 200, 0, 0, 0, 0, 164, 0, 4406,
	4407, 0, 0, 2761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 203, 0, 3519,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 1986, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 2751, 0,
	0, 0, 0, 0, 0, 0, 0, 2747, 1966, 0,
	0, 0, 0, 0, 203, 0, 0, 3, 0, 0,
	0, 0, 0, 0, 0, 3514, 3515, 3516, 0, 0,
	0, 0, 3513, 3511, 3512, 3504, 3505, 3506, 3507, 3509,
	3510, 3514, 3515, 3516, 287, 0, 0, 0, 3513, 3511,
	3512, 3504, 3505, 3506, 3507, 3509, 3510, 0, 0, 0,
	287, 0, 0, 0, 0, 741, 0, 0, 0, 0,
	741, 0, 0, 741, 0, 0, 741, 741, 0, 0,
	0, 0, 741, 0, 0, 2752, 2753, 2754, 2755, 2497,
	287, 0, 0, 0, 4827, 2746, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 3514, 3515,
	3516, 0, 0, 0, 0, 3513, 3511, 3512, 3504, 3505,
	3506, 3507, 3509, 3510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4856, 287, 0, 0, 0, 287, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4604, 0, 4606, 4607, 4608, 0, 4610, 4878, 0, 0,
	0, 0, 2756, 2757, 0, 0, 0, 0, 0, 0,
	78, 3072, 3072, 287, 0, 3662, 2128, 0, 0, 0,
	1930, 1931, 3072, 0, 2134, 0, 0, 0, 79, 0,
	0, 0, 0, 3072, 2134, 2749, 3072, 2134, 0, 0,
	2134, 0, 0, 3662, 1961, 84, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 287, 287, 2128, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2128, 0, 287, 1986,
	3736, 0, 3736, 0, 0, 4658, 93, 1410, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 3072,
	0, 3072, 0, 3766, 3072, 2128, 0, 0, 3072, 0,
	0, 0, 0, 0, 0, 0, 0, 968, 0, 0,
	0, 0, 2128, 0, 0, 828, 0, 0, 0, 0,
	51, 0, 115, 0, 0, 0, 0, 0, 99, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4342, 0, 0, 1410, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	0, 0, 287, 0, 3810, 0, 1938, 2750, 3812, 3072,
	0, 0, 287, 0, 0, 0, 287, 0, 0, 1420,
	100, 0, 0, 4755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 3273,
	0, 0, 1410, 0, 287, 0, 0, 3072, 0, 741,
	0, 0, 0, 0, 0, 0, 3072, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 0, 1947, 1948, 0, 0, 0, 1586, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3920, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 1586, 0, 0, 3926, 0, 0, 0, 1650, 0,
	0, 1966, 1410, 287, 0, 287, 1586, 1966, 0, 0,
	0, 1410, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2736, 2737, 2738, 2762,
	2748, 2742, 1586, 2744, 2745, 2743, 2730, 2731, 2732, 2733,
	2734, 2735, 287, 0, 104, 0, 0, 78, 0, 1930,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 1931, 79, 0, 1983, 0, 0,
	0, 0, 1184, 1961, 0, 0, 0, 0, 0, 0,
	0, 1933, 84, 0, 1184, 0, 0, 1961, 0, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	3994, 0, 199, 107, 0, 1966, 111, 0, 1986, 0,
	1966, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 1986, 93, 1966, 1959, 0, 0, 1952, 1966,
	0, 1932, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 969, 1952, 0, 0, 0, 159, 0, 1954, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 2497, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 0, 115,
	0, 0, 0, 0, 253, 99, 112, 0, 1586, 0,
	0, 0, 0, 0, 1966, 0, 0, 287, 287, 0,
	1966, 0, 0, 0, 0, 0, 0, 3955, 0, 0,
	1985, 164, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 741, 741, 0, 1938, 0, 204, 0, 1955,
	1956, 1957, 1958, 0, 0, 252, 0, 0, 0, 1938,
	0, 0, 2086, 0, 0, 0, 0, 100, 3502, 3503,
	245, 3520, 3521, 3522, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 200, 287, 0, 0, 0, 1586, 0,
	0, 0, 0, 0, 0, 0, 1960, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	1960, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3517, 0, 0,
	0, 0, 0, 0, 0, 1953, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 0, 0, 828, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 1966, 0, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 1966,
	0, 0, 4183, 0, 0, 4185, 0, 0, 0, 0,
	0, 3736, 0, 1967, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 287, 0, 0, 0,
	0, 104, 1980, 0, 1586, 0, 0, 1586, 0, 0,
	3169, 0, 0, 0, 0, 2895, 1983, 0, 0, 1986,
	0, 0, 0, 0, 3508, 2128, 0, 287, 1932, 1966,
	1983, 757, 757, 1420, 0, 1966, 0, 0, 3199, 1952,
	0, 0, 0, 0, 0, 0, 287, 1169, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 3273, 199,
	107, 3273, 2134, 111, 0, 0, 0, 287, 0, 0,
	0, 0, 3189, 3187, 1959, 0, 0, 287, 0, 3191,
	3193, 3183, 287, 0, 1586, 0, 0, 287, 1959, 0,
	251, 0, 0, 0, 0, 0, 0, 1954, 969, 0,
	0, 1586, 0, 159, 0, 0, 3072, 287, 0, 0,
	0, 1954, 0, 0, 0, 0, 3169, 0, 0, 974,
	3072, 0, 3209, 0, 0, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 3518, 0, 1938, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 1985, 0, 0, 0, 1971, 0, 0,
	1981, 0, 0, 0, 204, 0, 0, 1960, 1962, 0,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 1978, 245, 0, 0,
	0, 0, 0, 1947, 1948, 1983, 246, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 4362, 0,
	0, 1969, 0, 0, 0, 0, 1586, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 1953, 0, 0, 0,
	0, 0, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 1950, 1946, 3185, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 3201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 1979, 3519, 1650, 0, 287,
	0, 3200, 3190, 3188, 3192, 3194, 3184, 3186, 3202, 3204,
	0, 0, 0, 287, 0, 0, 1968, 0, 0, 3196,
	3198, 3206, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 1420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1420, 0, 287, 1420, 0, 0,
	0, 0, 0, 0, 0, 3210, 0, 0, 3072, 3072,
	0, 3662, 0, 0, 3736, 3072, 0, 0, 0, 0,
	0, 0, 0, 4464, 0, 4464, 1650, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 3072, 0, 2134,
	0, 0, 0, 3662, 0, 1650, 1650, 287, 2128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 2128, 0, 287, 2128, 0, 287, 0, 0, 3736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 3072,
	0, 3072, 287, 0, 0, 3514, 3515, 3516, 0, 0,
	0, 0, 3513, 3511, 3512, 3504, 3505, 3506, 3507, 3509,
	3510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 3203, 0, 0, 0, 0, 0, 0,
	0, 3072, 3072, 0, 0, 0, 0, 3273, 3273, 0,
	0, 0, 0, 0, 3662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 1966, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 3211, 0, 1970, 0, 0, 0,
	0, 0, 0, 3195, 3197, 3205, 1586, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 0, 1966, 3477, 0,
	0, 1966, 3478, 0, 1586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 1966, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	0, 1429, 0, 0, 0, 1966, 0, 1966, 1966, 1966,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 2895,
	2895, 0, 0, 0, 0, 0, 0, 0, 1169, 1169,
	1169, 0, 3072, 2134, 1966, 2134, 0, 0, 4678, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4702, 0, 4702,
	0, 0, 0, 0, 0, 0, 1586, 1586, 0, 1586,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 1615,
	0, 0, 0, 0, 828, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3736, 1650, 0, 1410, 0,
	1586, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 1658, 0, 1664, 0, 1966, 0, 2128, 1966, 287,
	0, 1966, 0, 0, 1966, 1184, 0, 0, 0, 0,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4678, 0, 0, 4464,
	0, 0, 1650, 0, 0, 0, 3072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1586, 0, 0, 4792, 0, 0, 0,
	0, 0, 1756, 0, 1761, 0, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 1586, 1966, 0, 1775, 3523,
	1780, 2895, 2895, 2895, 2895, 0, 0, 1966, 0, 1966,
	0, 0, 0, 0, 1966, 287, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3736, 4847, 0, 0, 1845,
	0, 0, 1851, 0, 4678, 0, 1961, 1586, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4464, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4464,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 0, 0, 0, 4464, 4464, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 0, 0, 0, 4464, 0, 287, 4464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2134,
	0, 1586, 0, 0, 0, 0, 0, 0, 2007, 1650,
	0, 1650, 0, 0, 2020, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1420,
	1586, 0, 1967, 1961, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 4974, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 4702,
	0, 0, 287, 0, 0, 0, 0, 0, 1986, 1960,
	1962, 0, 0, 0, 0, 0, 0, 1932, 1184, 2866,
	2867, 2868, 2869, 2862, 2863, 2864, 2865, 3072, 1952, 0,
	0, 0, 1930, 1931, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 1586, 0, 0, 0, 0, 0, 0,
	2080, 2080, 2080, 0, 0, 0, 1961, 0, 0, 0,
	0, 0, 287, 0, 1933, 0, 0, 0, 1953, 0,
	0, 1966, 1966, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3994, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 2842, 2843, 2844, 2845, 0, 0, 1650, 0,
	0, 1952, 1586, 0, 0, 1955, 1956, 1957, 1958, 0,
	1949, 0, 0, 0, 0, 1938, 2854, 2855, 2856, 2857,
	2850, 2851, 2852, 2853, 2858, 2859, 2860, 2861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 1960, 1962, 0, 0,
	0, 4678, 0, 0, 0, 0, 0, 0, 0, 0,
	1218, 0, 1966, 1977, 0, 1978, 1169, 0, 1955, 1956,
	1957, 1958, 1947, 1948, 0, 0, 0, 0, 1938, 2838,
	2839, 2840, 2841, 2846, 2847, 2848, 2849, 0, 0, 0,
	1969, 3072, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 4464, 0, 4464, 0, 1953, 1650, 0, 286, 286,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 1966, 0, 2895, 2895, 0, 0, 1966, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 3523, 3523, 0,
	898, 1966, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 0, 0, 1979, 1947, 1948, 0, 0, 0,
	0, 0, 1985, 0, 0, 1966, 0, 3072, 898, 0,
	0, 0, 0, 0, 0, 1968, 0, 1966, 0, 0,
	0, 0, 0, 0, 3169, 0, 1983, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 3072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1254, 3169, 0, 2895, 2895, 2895, 2895, 2895, 2895, 2895,
	2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895,
	2895, 2895, 2895, 0, 2895, 3523, 3523, 3523, 3523, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 1954, 0, 1983,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 1970, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 0, 0, 2772, 0, 0,
	0, 2773, 0, 0, 0, 0, 0, 2559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 1966,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 0,
	0, 2628, 0, 2632, 0, 0, 0, 0, 0, 0,
	2646, 0, 0, 0, 0, 0, 0, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 0, 2696, 0, 2698, 2699, 2700, 2701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 2776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2806, 2809, 2812, 2815, 0, 0,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1966, 0, 0,
	1966, 3523, 3523, 1966, 0, 0, 0, 1966, 2887, 0,
	2898, 2900, 2905, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 1966, 1966, 1966, 1966, 0, 0, 0, 0, 0,
	1966, 0, 1966, 0, 0, 3523, 3523, 3523, 3523, 3523,
	3523, 3523, 3523, 3523, 3523, 3523, 3523, 3523, 3523, 3523,
	3523, 3523, 3523, 3523, 3523, 0, 0, 0, 3523, 0,
	0, 1966, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 877, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 876, 1966, 0, 0, 0,
	286, 0, 286, 286, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 869, 0,
	1966, 1966, 0, 0, 0, 885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 0, 286, 0, 286, 286,
	0, 0, 286, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 898, 0, 0, 0, 0,
	0, 788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 0, 0, 0, 772, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 286, 286, 0, 0,
	0, 0, 0, 0, 871, 0, 0, 0, 0, 0,
	0, 0, 3232, 3233, 0, 3235, 0, 0, 773, 0,
	0, 0, 286, 286, 0, 0, 0, 0, 0, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	1966, 0, 0, 0, 1966, 1966, 0, 0, 1966, 1966,
	0, 775, 0, 1966, 0, 0, 0, 1966, 0, 0,
	0, 0, 1966, 884, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 794, 0, 0, 0, 2895, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 776, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 0, 0, 0, 0, 0, 1346, 777,
	0, 0, 0, 0, 0, 1967, 1961, 0, 0, 0,
	0, 286, 0, 0, 1933, 0, 1930, 1931, 0, 0,
	0, 0, 778, 0, 1980, 866, 779, 0, 0, 2895,
	0, 0, 0, 0, 3353, 286, 0, 0, 0, 0,
	1961, 1986, 0, 803, 1346, 0, 0, 0, 1933, 0,
	1932, 1346, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 1346, 0, 793,
	1949, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 802, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 1987, 1988,
	0, 0, 880, 0, 0, 0, 0, 0, 868, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 0,
	3950, 0, 0, 0, 3411, 3412, 0, 0, 865, 0,
	3418, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 3432,
	3433, 0, 1938, 0, 0, 2776, 0, 872, 0, 1971,
	0, 0, 1981, 0, 1966, 1966, 1966, 781, 0, 1960,
	1962, 0, 804, 0, 0, 1966, 1966, 3523, 2895, 0,
	0, 0, 0, 867, 1966, 0, 1977, 1966, 1978, 0,
	0, 0, 0, 0, 0, 1947, 1948, 801, 0, 782,
	3442, 0, 0, 1960, 1962, 0, 0, 0, 882, 883,
	0, 879, 0, 1969, 0, 0, 3456, 0, 0, 0,
	0, 2102, 0, 1342, 0, 3523, 2895, 286, 1953, 1947,
	1948, 0, 0, 3468, 0, 0, 0, 0, 0, 0,
	0, 802, 1966, 286, 2102, 286, 0, 0, 0, 783,
	1966, 2895, 0, 898, 798, 799, 0, 796, 1966, 0,
	898, 0, 1953, 791, 0, 0, 784, 0, 1966, 0,
	1966, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 785, 0, 792, 0, 0, 0, 0, 0, 0,
	0, 0, 786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2905, 2905, 2905, 787, 0, 0,
	0, 0, 795, 1983, 0, 0, 0, 0, 0, 0,
	0, 2080, 0, 0, 0, 0, 0, 804, 0, 3561,
	0, 0, 0, 0, 0, 0, 3523, 1959, 789, 0,
	0, 1346, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	1954, 0, 0, 0, 1966, 3523, 0, 0, 1966, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 2166,
	0, 0, 0, 0, 0, 0, 0, 3523, 1972, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1169, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	3694, 0, 0, 0, 0, 0, 0, 0, 1970, 286,
	0, 0, 0, 898, 0, 0, 0, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3963, 0, 0, 1930, 1931, 0,
	0, 0, 0, 0, 0, 3749, 3750, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 1966,
	286, 1961, 0, 0, 286, 0, 0, 0, 0, 1933,
	286, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 1966, 1207, 117, 0, 0, 0,
	0, 0, 286, 0, 286, 0, 1986, 0, 0, 0,
	286, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 286,
	0, 1346, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3949, 0, 898, 286, 117, 286, 0, 286, 0,
	286, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 1956, 1957, 1958, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 286, 286,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 1346, 0, 1346, 1960, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1143, 0, 0,
	0, 1346, 1346, 0, 0, 0, 0, 0, 0, 1164,
	1947, 1948, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2646, 1346, 0, 1346,
	1346, 1346, 3947, 3948, 0, 0, 3951, 0, 0, 0,
	3954, 0, 0, 1953, 0, 0, 0, 0, 0, 3958,
	0, 0, 0, 0, 0, 0, 0, 0, 3965, 1329,
	0, 0, 0, 3561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3978, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4001, 4002,
	0, 4003, 4004, 4005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4011,
	0, 0, 0, 4013, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4042, 4043, 0, 0,
	0, 2166, 2166, 1346, 0, 0, 0, 0, 0, 0,
	1342, 0, 0, 0, 4054, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 1342, 0, 0, 4063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	286, 0, 4119, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 286, 0, 0, 286,
	0, 0, 0, 286, 0, 286, 0, 0, 0, 4137,
	0, 0, 286, 286, 0, 0, 0, 0, 0, 1986,
	0, 0, 286, 0, 0, 0, 0, 0, 1932, 0,
	1346, 0, 0, 0, 0, 0, 0, 1346, 0, 1952,
	0, 0, 0, 4168, 0, 0, 1346, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	4191, 4192, 0, 1930, 1931, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3417, 286, 0, 1961, 0, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 1952, 0, 0, 0, 0, 286, 286, 0,
	0, 1949, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 2080, 0, 1967,
	1961, 0, 0, 0, 0, 898, 4296, 0, 1933, 1346,
	0, 0, 0, 1947, 1948, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 3410, 0, 0,
	0, 0, 0, 0, 0, 1986, 286, 0, 898, 0,
	0, 0, 0, 0, 1932, 286, 1953, 0, 0, 1955,
	1956, 1957, 1958, 0, 0, 1952, 0, 0, 2166, 1938,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4340, 4341, 0, 0, 0, 0, 4345, 4346,
	0, 0, 0, 4349, 4350, 0, 0, 0, 0, 0,
	286, 4354, 0, 0, 0, 0, 1346, 0, 0, 0,
	1960, 1962, 4358, 0, 0, 117, 0, 0, 0, 286,
	0, 286, 1346, 0, 0, 0, 0, 1983, 4363, 0,
	0, 0, 286, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 286, 286, 286, 286,
	0, 0, 0, 1971, 0, 286, 1981, 0, 0, 0,
	286, 0, 0, 1960, 1962, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 1346, 1978, 117, 0, 117, 0, 117, 0, 1947,
	1948, 286, 0, 0, 1346, 0, 1346, 0, 0, 286,
	0, 0, 1346, 0, 0, 0, 0, 1969, 0, 0,
	1983, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	1169, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	117, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 1979, 117, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4507, 0, 0,
	0, 1954, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1231, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 288,
	288, 0, 0, 0, 0, 4625, 4626, 4627, 0, 0,
	0, 0, 1143, 0, 1950, 1946, 1985, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 2646, 0,
	288, 4636, 4637, 2000, 0, 0, 0, 0, 0, 0,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 4645,
	4648, 2006, 0, 0, 0, 2012, 1342, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2102, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 0, 0, 0, 0, 4703, 0, 3480, 0,
	0, 0, 0, 0, 1335, 4711, 0, 0, 0, 286,
	0, 0, 0, 286, 286, 0, 0, 0, 0, 0,
	4719, 0, 0, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4729, 0,
	0, 4731, 0, 0, 0, 788, 2100, 0, 2103, 286,
	117, 0, 282, 282, 737, 0, 0, 0, 0, 0,
	1346, 1346, 0, 0, 0, 0, 771, 0, 0, 0,
	0, 772, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 286, 0, 1346, 286, 0, 0, 0, 0,
	0, 0, 2102, 0, 0, 0, 1346, 0, 0, 1346,
	0, 0, 773, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 774, 0, 0, 0, 0, 0, 0,
	0, 2166, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 2166, 0, 777, 0, 0, 0, 0, 4855, 0,
	0, 0, 4859, 0, 0, 0, 0, 0, 898, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 286, 0,
	779, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 793, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 790, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 2646, 0, 286,
	0, 286, 0, 0, 0, 1346, 4648, 1346, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976,
	0, 1346, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 1967, 1961, 0, 0, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 1169, 0, 800,
	1346, 781, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 1346, 0, 0, 0, 0, 0, 0, 1932,
	0, 801, 0, 782, 1346, 0, 1346, 0, 0, 0,
	1952, 0, 0, 0, 1164, 0, 1164, 0, 0, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5050, 5050, 5050, 0,
	0, 0, 0, 0, 0, 802, 0, 0, 0, 0,
	0, 0, 0, 783, 0, 0, 0, 1346, 798, 799,
	1346, 796, 0, 0, 0, 0, 0, 791, 0, 0,
	784, 0, 0, 5075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 1956, 1957,
	1958, 0, 0, 1342, 1342, 0, 0, 1938, 0, 117,
	0, 0, 0, 0, 0, 785, 0, 792, 2166, 0,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	5050, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 787, 0, 0, 0, 0, 795, 0, 1971, 0,
	0, 1981, 0, 0, 1346, 0, 0, 0, 1960, 1962,
	288, 804, 288, 288, 2166, 2166, 288, 0, 0, 0,
	898, 0, 789, 0, 0, 1977, 0, 1978, 0, 0,
	0, 0, 0, 0, 1947, 1948, 0, 0, 1143, 0,
	0, 1143, 1143, 2166, 2166, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 2166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 1506, 288, 288,
	0, 0, 288, 288, 0, 0, 0, 2714, 1506, 0,
	0, 0, 0, 1346, 1346, 0, 0, 0, 0, 0,
	5050, 5207, 0, 0, 0, 288, 1979, 1164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 2006, 0, 0, 0, 0, 0, 1968, 1506, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 1506, 0, 0, 0, 0, 0,
	0, 1506, 288, 288, 1396, 0, 1396, 1396, 0, 0,
	0, 0, 286, 0, 0, 1329, 1959, 1506, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 2103, 0, 286, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 286, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 0, 1972, 0, 0,
	0, 0, 117, 1342, 0, 0, 0, 1506, 0, 0,
	1497, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 0,
	1346, 0, 0, 0, 1346, 288, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 890, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2166, 0, 0,
	0, 0, 0, 890, 0, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 1755, 1944, 1945,
	1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 3479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 1346, 1346,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 1346, 0, 1346, 0, 1342, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2166, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2102,
	0, 2102, 0, 0, 117, 0, 0, 117, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 286,
	0, 0, 286, 288, 288, 288, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 117, 0, 0, 117,
	288, 0, 0, 0, 0, 117, 0, 1346, 286, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 1346,
	1346, 0, 1346, 0, 0, 0, 0, 0, 288, 1346,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	1346, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 117, 0, 0, 0, 0, 0, 0, 1346,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 2118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2129, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1396, 0, 0, 0, 0, 0, 0, 1607,
	0, 2714, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 1346, 1346, 1346, 1346, 1346, 1346, 1346, 0, 288,
	0, 1506, 1506, 288, 0, 0, 0, 0, 0, 0,
	0, 1346, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	288, 0, 2166, 0, 288, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 1346, 2102, 1346, 0, 0, 0,
	0, 0, 288, 0, 288, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 1506, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 1506, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 288, 0, 0, 288,
	0, 286, 286, 0, 0, 0, 0, 1506, 2166, 1506,
	1506, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 1329, 0, 0, 0, 0,
	0, 0, 0, 288, 288, 0, 288, 0, 288, 0,
	288, 1329, 288, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 1346, 0, 288, 288, 288,
	288, 0, 0, 0, 2439, 2102, 0, 0, 2446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2459, 0, 1503, 0, 0, 1346, 0, 0, 1346, 0,
	286, 0, 0, 1625, 0, 0, 2471, 0, 2471, 0,
	0, 0, 0, 0, 2478, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 2102, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 2166, 2102, 0, 286, 2102, 0, 0, 0, 0,
	2446, 0, 0, 2507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 117,
	0, 117, 0, 0, 2527, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 1625, 0, 2543, 0,
	2545, 0, 2547, 0, 2549, 0, 2550, 0, 0, 0,
	1346, 0, 1625, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 117, 117, 0, 117, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2579, 2580, 2581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 1346, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 1346, 0, 0, 1346, 0, 0, 0, 1346,
	288, 0, 0, 1506, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 0, 1329, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 117, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 288,
	0, 0, 1346, 288, 0, 288, 0, 0, 0, 0,
	0, 0, 288, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 1506,
	0, 0, 0, 0, 0, 0, 1933, 2102, 0, 2102,
	0, 0, 0, 0, 1930, 1931, 1980, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 1986, 2964, 0, 0, 0, 1961, 0,
	0, 0, 1932, 0, 0, 288, 1933, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 1980, 0, 288, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 288, 1506, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 288, 288, 0,
	0, 0, 1506, 1503, 0, 0, 0, 0, 0, 0,
	3015, 0, 0, 1396, 0, 0, 0, 1396, 890, 1396,
	0, 0, 0, 0, 0, 890, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 288, 2459, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 0, 1346, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 288, 0, 288, 0,
	1955, 1956, 1957, 1958, 0, 288, 0, 0, 1329, 1329,
	1938, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 0, 0, 1506, 0, 1506, 1947, 1948, 0,
	0, 1971, 1506, 0, 1981, 0, 0, 1503, 0, 0,
	288, 1960, 1962, 0, 1506, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	1953, 288, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 2446, 2446, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 288, 288, 288,
	1968, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	288, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2446, 0, 0, 0, 0, 0, 0, 0, 0, 2459,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 1625, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 1954, 0, 3323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 3334, 0, 3337, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 1329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3371, 1607, 3373, 1607, 1625, 0, 1625, 0, 1625, 3379,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 1625, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 1396, 0, 0, 0, 0,
	1970, 0, 1625, 3408, 1625, 1625, 1625, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 890, 0,
	0, 0, 0, 0, 0, 0, 3476, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 1040, 0, 1091, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1063, 1506, 1046, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1065, 117, 0, 0, 0,
	0, 1047, 1329, 0, 1506, 0, 1050, 0, 0, 0,
	1329, 1102, 0, 1075, 0, 0, 0, 0, 1503, 1506,
	0, 1060, 1061, 0, 0, 0, 0, 0, 288, 0,
	1080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 1092, 1052,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 288,
	0, 0, 0, 288, 288, 0, 0, 0, 1054, 0,
	0, 0, 1967, 1961, 1504, 0, 0, 1089, 0, 0,
	0, 1933, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 1503, 0, 0, 0, 0, 0, 0, 1986, 0,
	1090, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 1626, 1056, 0, 1952, 117,
	0, 0, 0, 0, 1044, 0, 0, 1949, 0, 0,
	0, 288, 288, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 288, 0, 1057, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 1626, 1503, 1066, 1064, 0, 0, 0, 1626, 0,
	0, 1059, 0, 0, 0, 1076, 0, 0, 1097, 1096,
	0, 1506, 117, 0, 1626, 0, 0, 0, 1503, 0,
	0, 0, 3609, 1099, 1088, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 1396, 0, 0, 0, 1607, 1607, 0,
	0, 1506, 0, 0, 1626, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 1506, 1971, 1506, 0, 1981,
	0, 1506, 0, 0, 0, 0, 1960, 1962, 288, 1506,
	0, 0, 0, 3658, 0, 0, 0, 0, 288, 0,
	0, 1506, 288, 1977, 0, 1978, 1051, 0, 0, 1101,
	0, 0, 1947, 1948, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 1049, 0, 3713, 3715, 1084, 1085, 2459,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 1087, 1506, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 1506, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 1094, 1082, 0, 0,
	0, 0, 0, 0, 0, 1100, 1077, 0, 0, 1069,
	1067, 0, 0, 1072, 1979, 0, 0, 0, 0, 1073,
	0, 0, 1042, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 1506, 0, 288,
	1506, 288, 0, 0, 0, 0, 1983, 0, 1043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1086, 0, 1074, 0, 0, 0, 0, 0, 1071,
	0, 1503, 0, 0, 0, 0, 0, 0, 288, 0,
	1098, 0, 0, 0, 0, 0, 0, 1625, 1078, 0,
	1079, 0, 0, 0, 0, 0, 0, 0, 1055, 0,
	0, 0, 3834, 0, 1959, 0, 3838, 0, 0, 0,
	0, 0, 0, 1081, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 890, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 2714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 1625, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 1625, 0, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 3932, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3945, 0, 0, 1970, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 0, 117, 0, 0, 0,
	288, 3475, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 1506, 0,
	1506, 0, 0, 0, 1506, 0, 0, 1506, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 1626,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 1504,
	117, 0, 0, 288, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 1506, 1506,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 1506, 0, 0, 1626, 288, 1626, 1506,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 1626,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 1626, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 1626, 1626, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 2459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 2459, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 4250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 2459, 0, 0, 0, 0, 4278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	1506, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 4324, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 288,
	0, 0, 288, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 1506, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 1625, 0, 1504, 0, 1503, 0, 0, 0,
	0, 288, 0, 890, 1625, 0, 0, 0, 0, 0,
	1506, 288, 0, 0, 0, 1506, 1625, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	0, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 0, 0,
	0, 0, 0, 1967, 1961, 0, 0, 0, 0, 0,
	0, 1506, 1933, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 4484, 0, 1625,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 1506, 0, 2459, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 1506, 1503, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 2459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4583, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 1971, 0, 0,
	1981, 0, 0, 0, 0, 288, 0, 1960, 1962, 0,
	0, 0, 0, 1504, 1506, 1506, 1506, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 1978, 0, 0, 1626,
	0, 0, 0, 1947, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 1953, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 1979, 0, 4688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 1626, 0, 1626, 0, 890, 0, 1983, 0, 1626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 2459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 1961, 0, 1959, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 1980, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 4817, 1607, 0, 0, 1506,
	1985, 0, 1625, 1625, 0, 1625, 0, 0, 0, 1625,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 1506, 0, 1625, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 1971, 0, 1625, 1981,
	0, 0, 3474, 1625, 1625, 1625, 1960, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 1977, 0, 1978, 1625, 0, 1625, 0,
	0, 0, 1947, 1948, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 4935, 0,
	0, 0, 1503, 0, 0, 1953, 0, 0, 1930, 1931,
	0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1961, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 1968, 1932, 0, 0, 0,
	0, 0, 4988, 0, 0, 0, 1983, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 1503, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 5032, 0, 1959, 1625, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 1955, 1956, 1957, 1958, 0, 0,
	0, 0, 1504, 0, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 1971, 0, 0, 1981, 1985,
	0, 1503, 0, 0, 0, 1960, 1962, 1967, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 1977, 1503, 1978, 0, 1980, 0, 0, 0,
	0, 1947, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 1969,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 1953, 1625, 1625, 0, 0, 0,
	0, 0, 1949, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 1503, 0, 0, 1504, 0,
	1625, 2773, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 1625, 1625, 1625, 1625,
	1625, 1625, 1625, 0, 0, 1983, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 1503, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 0, 1626, 0, 1503, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 1971, 0, 1959, 1981, 0, 0, 0, 1626, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 1977, 1503,
	1978, 1625, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 1969, 0, 0, 0, 1626,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	1953, 1626, 0, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 1504, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1968, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 1625,
	1625, 1625, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 0, 0, 0, 4975, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 1959,
	1503, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 1961, 1985, 0, 0, 0, 0, 1930,
	1931, 1933, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 1961, 0, 0, 0, 0, 1986, 0,
	0, 1933, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 1504, 1949, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 1952, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 1949, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	0, 0, 4971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1625, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 1960, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 1978, 1971, 1625, 0, 1981,
	0, 0, 1947, 1948, 0, 0, 1960, 1962, 0, 0,
	0, 0, 0, 0, 1626, 1626, 0, 1626, 0, 0,
	1969, 1626, 0, 1977, 1626, 1978, 0, 0, 0, 0,
	0, 0, 1947, 1948, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 1983, 0, 0, 0,
	1626, 0, 0, 0, 0, 1626, 1626, 1626, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 1626, 0,
	1626, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1504, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 1626, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 1970, 0, 4874, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 0, 0, 4826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 918, 0, 0, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	0, 0, 0, 0, 0, 1504, 920, 0, 0, 0,
	0, 921, 0, 1967, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 1626, 1986,
	0, 0, 922, 0, 939, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	923, 0, 0, 0, 0, 924, 0, 1504, 0, 0,
	0, 0, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 0, 0,
	0, 0, 0, 0, 925, 0, 0, 0, 1626, 1626,
	1626, 1626, 1626, 1626, 1626, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 919, 0, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 0, 0, 1938, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 950, 0, 0, 0, 0, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	1981, 1504, 0, 1626, 0, 0, 0, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 1978, 0, 0, 0,
	0, 0, 0, 1947, 1948, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 1626, 1626, 0, 0, 1968, 0, 0, 0,
	928, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 931, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 802, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 917, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 933, 0, 0, 0, 934,
	953, 0, 952, 0, 0, 0, 935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 936, 0, 0, 0, 0, 945, 0, 0, 0,
	0, 0, 954, 0, 951, 0, 0, 0, 0, 0,
	0, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 1501, 0, 1626, 0, 4825, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 1507,
	304, 305, 1508, 1509, 1510, 0, 1511, 683, 1512, 1513,
	1514, 306, 1515, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	1516, 688, 318, 319, 320, 321, 322, 323, 1517, 1518,
	0, 324, 689, 690, 691, 1519, 325, 326, 692, 1520,
	1587, 1521, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1522, 336, 337, 338, 335, 339, 1523, 340, 1626,
	341, 342, 343, 344, 345, 346, 1524, 347, 348, 349,
	1286, 350, 351, 352, 1525, 1526, 1528, 1527, 1529, 1530,
	1531, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 1532, 363, 359, 361, 1533, 364, 362, 365, 1534,
	366, 367, 368, 1535, 1536, 369, 370, 371, 1537, 372,
	373, 374, 1538, 375, 376, 377, 1539, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 1540, 293, 1541, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 1542,
	396, 397, 398, 1543, 399, 1544, 1287, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 1545, 412, 701, 1546, 702, 413, 1547, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 1289, 420,
	421, 1548, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 1549, 1288, 509, 430, 706, 707,
	1550, 708, 1551, 431, 432, 1290, 709, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 1552, 443, 445, 444, 1553, 446, 710, 1293,
	447, 448, 1294, 1554, 449, 450, 451, 452, 453, 454,
	457, 1555, 1556, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1557, 295, 1297, 503, 504, 505,
	506, 1558, 711, 507, 712, 510, 511, 1559, 0, 512,
	0, 513, 1560, 1561, 515, 516, 517, 1562, 1563, 518,
	519, 713, 1298, 520, 1299, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 1564, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 1565, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 1566, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 1567, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 1568, 601, 602, 600, 603, 604, 605,
	1569, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 1570, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 1571, 636,
	637, 0, 632, 623, 1572, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 1573, 646, 724, 725, 726, 727,
	1574, 656, 1575, 647, 648, 649, 650, 728, 651, 729,
	1576, 652, 653, 654, 655, 0, 657, 658, 1577, 1578,
	659, 660, 662, 664, 665, 661, 663, 666, 1579, 667,
	1580, 0, 668, 669, 670, 730, 731, 732, 1581, 672,
	671, 673, 674, 675, 733, 676, 677, 1582, 1583, 1584,
	1585, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 2942, 0, 0, 0,
	0, 0, 0, 0, 2943, 296, 297, 299, 298, 300,
	301, 302, 303, 1507, 304, 305, 1508, 1509, 1510, 0,
	1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 1516, 688, 318, 319, 320, 321,
	322, 323, 1517, 1518, 0, 324, 689, 690, 691, 1519,
	325, 326, 692, 1520, 1587, 1521, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1522, 336, 337, 338, 335,
	339, 1523, 340, 0, 341, 342, 343, 344, 345, 346,
	1524, 347, 348, 349, 1286, 350, 351, 352, 1525, 1526,
	1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 1532, 363, 359, 361, 1533,
	364, 362, 365, 1534, 366, 367, 368, 1535, 1536, 369,
	370, 371, 1537, 372, 373, 374, 1538, 375, 376, 377,
	1539, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 1540, 293,
	1541, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 1542, 396, 397, 398, 1543, 399, 1544,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 1545, 412, 701, 1546, 702,
	413, 1547, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 1548, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 1549, 1288,
	509, 430, 706, 707, 1550, 708, 1551, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1552, 443, 445, 444,
	1553, 446, 710, 1293, 447, 448, 1294, 1554, 449, 450,
	451, 452, 453, 454, 457, 1555, 1556, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1557, 295,
	1297, 503, 504, 505, 506, 1558, 711, 507, 712, 510,
	511, 1559, 0, 512, 0, 513, 1560, 1561, 515, 516,
	517, 1562, 1563, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 1564, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 1565, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 1566, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 1567, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 1568, 601, 602,
	600, 603, 604, 605, 1569, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 1570, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 1571, 636, 637, 0, 632, 623, 1572, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 1573, 646,
	724, 725, 726, 727, 1574, 656, 1575, 647, 648, 649,
	650, 728, 651, 729, 1576, 652, 653, 654, 655, 0,
	657, 658, 1577, 1578, 659, 660, 662, 664, 665, 661,
	663, 666, 1579, 667, 1580, 0, 668, 669, 670, 730,
	731, 732, 1581, 672, 671, 673, 674, 675, 733, 676,
	677, 1582, 1583, 1584, 1585, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 3972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3974, 296, 297, 299,
	298, 300, 301, 302, 303, 1507, 304, 305, 1508, 1509,
	1510, 0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 1516, 688, 318, 319,
	320, 321, 322, 323, 1517, 1518, 0, 324, 689, 690,
	691, 1519, 325, 326, 692, 1520, 1587, 1521, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1522, 336, 337,
	338, 335, 339, 1523, 340, 0, 341, 342, 343, 344,
	345, 346, 1524, 347, 348, 349, 1286, 350, 351, 352,
	1525, 1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 1532, 363, 359,
	361, 1533, 364, 362, 365, 1534, 366, 367, 368, 1535,
	1536, 369, 370, 371, 1537, 372, 373, 374, 1538, 375,
	376, 377, 1539, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	1540, 293, 1541, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 1542, 396, 397, 398, 1543,
	399, 1544, 1287, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 1545, 412, 701,
	1546, 702, 413, 1547, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 1289, 420, 421, 1548, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	1549, 1288, 509, 430, 706, 707, 1550, 708, 1551, 431,
	432, 1290, 709, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 1552, 443,
	445, 444, 1553, 446, 710, 1293, 447, 448, 1294, 1554,
	449, 450, 451, 452, 453, 454, 457, 1555, 1556, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1557, 295, 1297, 503, 504, 505, 506, 1558, 711, 507,
	712, 510, 511, 1559, 0, 512, 0, 513, 1560, 1561,
	515, 516, 517, 1562, 1563, 518, 519, 713, 1298, 520,
	1299, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 1564, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	1565, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 1566, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 1567, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 1568,
	601, 602, 600, 603, 604, 605, 1569, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 1570, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 1571, 636, 637, 0, 632, 623,
	1572, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	1573, 646, 724, 725, 726, 727, 1574, 656, 1575, 647,
	648, 649, 650, 728, 651, 729, 1576, 652, 653, 654,
	655, 0, 657, 658, 1577, 1578, 659, 660, 662, 664,
	665, 661, 663, 666, 1579, 667, 1580, 0, 668, 669,
	670, 730, 731, 732, 1581, 672, 671, 673, 674, 675,
	733, 676, 677, 1582, 1583, 1584, 1585, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4398, 296, 297, 299, 298, 300, 301, 302,
	303, 1507, 304, 305, 1508, 1509, 1510, 0, 1511, 683,
	1512, 1513, 1514, 306, 1515, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 1516, 688, 318, 319, 320, 321, 322, 323,
	1517, 1518, 0, 324, 689, 690, 691, 1519, 325, 326,
	692, 1520, 1587, 1521, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 1522, 336, 337, 338, 335, 339, 1523,
	340, 0, 341, 342, 343, 344, 345, 346, 1524, 347,
	348, 349, 1286, 350, 351, 352, 1525, 1526, 1528, 1527,
	1529, 1530, 1531, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 1532, 363, 359, 361, 1533, 364, 362,
	365, 1534, 366, 367, 368, 1535, 1536, 369, 370, 371,
	1537, 372, 373, 374, 1538, 375, 376, 377, 1539, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 1540, 293, 1541, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 1542, 396, 397, 398, 1543, 399, 1544, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 1545, 412, 701, 1546, 702, 413, 1547,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	1289, 420, 421, 1548, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 1549, 1288, 509, 430,
	706, 707, 1550, 708, 1551, 431, 432, 1290, 709, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 1552, 443, 445, 444, 1553, 446,
	710, 1293, 447, 448, 1294, 1554, 449, 450, 451, 452,
	453, 454, 457, 1555, 1556, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1557, 295, 1297, 503,
	504, 505, 506, 1558, 711, 507, 712, 510, 511, 1559,
	0, 512, 0, 513, 1560, 1561, 515, 516, 517, 1562,
	1563, 518, 519, 713, 1298, 520, 1299, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	1564, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 1565, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 1566, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 1567,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 1568, 601, 602, 600, 603,
	604, 605, 1569, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	1570, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	1571, 636, 637, 0, 632, 623, 1572, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 1573, 646, 724, 725,
	726, 727, 1574, 656, 1575, 647, 648, 649, 650, 728,
	651, 729, 1576, 652, 653, 654, 655, 0, 657, 658,
	1577, 1578, 659, 660, 662, 664, 665, 661, 663, 666,
	1579, 667, 1580, 0, 668, 669, 670, 730, 731, 732,
	1581, 672, 671, 673, 674, 675, 733, 676, 677, 1582,
	1583, 1584, 1585, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4396, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4631, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4493, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4325, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3990, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3807, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2796, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	1498, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2417, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	1507, 304, 305, 1508, 1509, 1510, 0, 1511, 683, 1512,
	1513, 1514, 306, 1515, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 1516, 688, 318, 319, 320, 321, 322, 323, 1517,
	1518, 0, 324, 689, 690, 691, 1519, 325, 326, 692,
	1520, 1587, 1521, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 1522, 336, 337, 338, 335, 339, 1523, 340,
	0, 341, 342, 343, 344, 345, 346, 1524, 347, 348,
	349, 1286, 350, 351, 352, 1525, 1526, 1528, 1527, 1529,
	1530, 1531, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 1532, 363, 359, 361, 1533, 364, 362, 365,
	1534, 366, 367, 368, 1535, 1536, 369, 370, 371, 1537,
	372, 373, 374, 1538, 375, 376, 377, 1539, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 1540, 293, 1541, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	1542, 396, 397, 398, 1543, 399, 1544, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 1545, 412, 701, 1546, 702, 413, 1547, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 1289,
	420, 421, 1548, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 1549, 1288, 509, 430, 706,
	707, 1550, 708, 1551, 431, 432, 1290, 709, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 1552, 443, 445, 444, 1553, 446, 710,
	1293, 447, 448, 1294, 1554, 449, 450, 451, 452, 453,
	454, 457, 1555, 1556, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1557, 295, 1297, 503, 504,
	505, 506, 1558, 711, 507, 712, 510, 511, 1559, 0,
	512, 0, 513, 1560, 1561, 515, 516, 517, 1562, 1563,
	518, 519, 713, 1298, 520, 1299, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 1564,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 1565, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 1566, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 1567, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 1568, 601, 602, 600, 603, 604,
	605, 1569, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 1570,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 1571,
	636, 637, 0, 632, 623, 1572, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 1573, 646, 724, 725, 726,
	727, 1574, 656, 1575, 647, 648, 649, 650, 728, 651,
	729, 1576, 652, 653, 654, 655, 0, 657, 658, 1577,
	1578, 659, 660, 662, 664, 665, 661, 663, 666, 1579,
	667, 1580, 0, 668, 669, 670, 730, 731, 732, 1581,
	672, 671, 673, 674, 675, 733, 676, 677, 1582, 1583,
	1584, 1585, 678, 679, 734, 680, 681, 682, 2771, 0,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 2768, 304, 305, 0, 0,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 2769,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 2767, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 2770, 0, 0, 0,
	0, 0, 0, 0, 1205, 2766, 0, 1165, 1203, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 251, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 253,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	1746, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 245, 678, 679, 734, 680,
	681, 682, 1179, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 2011, 2009, 0, 0, 1203, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 251, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 253, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 1746, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 245, 678, 679, 734, 680, 681, 682, 1179, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 2011,
	3430, 0, 0, 1203, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	251, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 253, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 1746, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 245, 678, 679,
	734, 680, 681, 682, 1179, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 2011, 2009, 0, 0, 1203,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 2901, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 2906, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 2902,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 2903, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 2816, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	1205, 2814, 0, 2813, 1203, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	2811, 0, 2810, 1203, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	0, 0, 0, 0, 0, 0, 0, 0, 1205, 2808,
	0, 2807, 1203, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 2805, 0,
	1847, 1203, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1846, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 1168,
	0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 1183,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 0, 0,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 296, 297, 299,
	298, 300, 301, 302, 303, 1205, 304, 305, 0, 1203,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	5000, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 1183, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 0, 0, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 2648, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 2647,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 0, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 4722, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 1183, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 0, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 1183, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 0, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 4290, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 2081, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	1205, 0, 0, 0, 1203, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 3968, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	0, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 2081, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 1205, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	2906, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 0, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 0, 0, 0, 0, 0, 0,
	0, 0, 1205, 2009, 0, 2911, 1203, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 2909, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 2897, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 2886, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 2884, 0, 2875, 2882, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 2878, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 2879, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 2880, 467, 2877, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 2881, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 2876, 682, 1179, 0, 0, 0,
	2872, 0, 2875, 2882, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 2878, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	2879, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 2880, 467, 2877, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	2881, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 2876, 682, 1179, 0, 0, 0, 0,
	0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 0, 0, 0,
	0, 0, 0, 2017, 0, 1205, 0, 0, 0, 1203,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 2627, 304, 305, 0, 0,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 2589, 0, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 2560, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 1852, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 1781, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 1776, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 1762, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 1757, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	1666, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1665, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 1660,
	0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1659, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 1653, 0,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 296, 297, 299,
	298, 300, 301, 302, 303, 1205, 304, 305, 0, 1203,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 1616, 0, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 1598, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	1602, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 1603,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 1601, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 1430, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 0, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 5049, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 5048, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 5047, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 5049, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 5048, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 4650, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 4651, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 4649, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	0, 0, 1221, 1193, 1194, 1195, 3397, 3398, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 0,
	0, 1221, 1193, 1194, 1195, 3395, 3396, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 0, 0,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 296, 297, 299,
	298, 300, 301, 302, 303, 1205, 304, 305, 0, 1203,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 0, 0, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 2635, 2636, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 0, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 0,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 2894, 0, 0, 0,
	0, 0, 0, 2892, 2893, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 0, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 0, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 3390, 3391, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 2263, 2264, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 0, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 5049, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 0, 1248,
	0, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 0,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 5048,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 2913, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	0, 1244, 0, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	1628, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	1205, 0, 0, 0, 1203, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 0, 1244, 0, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 0, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 1165, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 1205, 0, 0, 0,
	1203, 1245, 0, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 1244, 0, 324, 689, 690, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1330, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 0, 295,
	1297, 503, 504, 505, 506, 0, 1249, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 1336, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 1338, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 251, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 253, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 1746,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 245, 678, 679, 734, 680, 681,
	682, 1344, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	1334, 0, 2105, 0, 1245, 0, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 1244, 0, 324, 689,
	690, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 1330,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 0, 295, 1297, 503, 504, 505, 506, 0, 1249,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	1336, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 1338, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	251, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 253, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 1746, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 245, 678, 679,
	734, 680, 681, 682, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3554, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 2105, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 1244, 0, 324, 689, 690, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 1330, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 0,
	295, 1297, 503, 504, 505, 506, 0, 1249, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 1336, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 1338, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 1326, 0, 1344, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1245, 0,
	0, 1334, 306, 1332, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	1244, 0, 324, 689, 690, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 1330, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 295, 1297, 503, 504,
	505, 506, 0, 1249, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 1336, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 1338,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 1344, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1245, 0, 0, 1334, 306, 1332,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 1244, 0, 324, 689,
	690, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 1330,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 0, 295, 1297, 503, 504, 505, 506, 0, 1249,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	1336, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 1338, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 1344, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1245, 0, 0, 1334, 306, 1332, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 1244, 0, 324, 689, 690, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 0, 295, 1297,
	503, 504, 505, 506, 0, 1249, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 1344, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	306, 4463, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 1244, 0,
	324, 689, 690, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 0, 295, 1297, 503, 504, 505, 506,
	0, 1249, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 720, 1338, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 2739, 2740, 2741, 2758,
	2759, 2760, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 2761, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 2001, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 1986, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 2751, 0, 336, 337, 338, 335, 339, 0,
	340, 2747, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 2752,
	2753, 2754, 2755, 392, 393, 394, 698, 0, 0, 2746,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 2756, 2757, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 2749,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 2750, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 1985, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 1165, 0, 1623,
	2736, 2737, 2738, 2762, 2748, 2742, 0, 2744, 2745, 2743,
	2730, 2731, 2732, 2733, 2734, 2735, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 1587, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	1288, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 0,
	0, 1297, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 251, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 253,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	1746, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 245, 678, 679, 734, 680,
	681, 682, 0, 1743, 246, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 203, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 1587, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 709, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 0, 1297, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 251, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 253, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 1746, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 245, 678, 679, 734, 680, 681, 682, 1623, 1622,
	246, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 203,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 1587, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 1288,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 0, 0,
	1297, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1623, 1622, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 1770, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 1587, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 1288, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 1290, 709, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 0, 0, 1297, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1623, 1622, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 3882, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	1587, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 1288, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 1290, 709, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 0, 0, 1297, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	2500, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1623, 2409, 0,
	0, 0, 0, 2410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 1770, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 1587, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 1288, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 1290, 709,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 2408, 445, 444, 0,
	446, 710, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 0, 0, 1297,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1623, 1622, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 1770, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 1587, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 1288, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 1290, 709, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	0, 0, 1297, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 1165, 0, 290, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 1752, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 251, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 253, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 1746, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 245, 678, 679, 734, 680, 681, 682, 0,
	0, 246, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	203, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 3170, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 2119, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 5216, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 290,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 3835, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 290, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 1740, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 1344,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 306, 3291, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 1244, 0, 324, 689, 690, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 0,
	295, 1297, 503, 504, 505, 506, 0, 1249, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 3993, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 989,
	0, 889, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 2487,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 896, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 986, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 988, 0, 632,
	623, 894, 638, 639, 640, 641, 642, 895, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 2164, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 899, 0, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 0, 2170, 0, 316, 2160, 317, 2176,
	0, 2183, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 2186, 2187, 0, 0, 325, 326, 0, 0,
	1587, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 1268, 358, 360, 2174,
	2173, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 0,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 0, 0, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 2172, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	2181, 2182, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 0, 0, 0, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 1288, 509, 430, 2167, 2168,
	0, 2163, 0, 431, 432, 1290, 0, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 0, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 0, 0, 1297, 503, 504, 505,
	506, 0, 0, 507, 2175, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 0, 1298, 520, 1299, 0, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 2157, 534, 535, 536, 2158, 537, 538, 539, 0,
	540, 0, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 2171, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 0, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 2169, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 2185,
	626, 627, 628, 629, 0, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 2177, 2178, 2179, 2180,
	0, 656, 0, 647, 648, 649, 650, 0, 651, 0,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 0, 2161, 2184, 0, 672,
	671, 673, 674, 675, 0, 676, 677, 0, 0, 0,
	0, 678, 679, 0, 680, 681, 682, 889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 4113, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 2151, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 896, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 4112, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 894, 638, 639,
	640, 641, 642, 895, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 4111, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 889, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 2191, 304, 305, 0,
	0, 0, 0, 899, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 896, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 2190, 596, 597, 598, 599,
	0, 2192, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 894, 638, 639, 640, 641, 642, 895, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	2189, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 889, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	2142, 304, 305, 0, 0, 0, 0, 899, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 896, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 2141,
	596, 597, 598, 599, 0, 2143, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 894, 638, 639, 640, 641,
	642, 895, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 2140, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 887, 0,
	889, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 899, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	896, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	894, 638, 639, 640, 641, 642, 895, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 889, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 899, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 896, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 894, 638, 639, 640, 641, 642,
	895, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 889, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	899, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 896, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 2539, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 2540, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 894, 638,
	639, 640, 641, 642, 895, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 2541, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 290, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 899, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 1623, 1622, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 899, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 1587, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 1288, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 0, 0, 1297, 503, 504, 505, 506, 4215,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1623, 1622, 0, 0, 0,
	0, 1620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 1587, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 709, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 0, 1297, 503, 504,
	505, 506, 3785, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1801, 0,
	1623, 1622, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 1587, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 1800, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 1288, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 1290, 709, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	0, 0, 1297, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	1799, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 1798, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1673, 0, 1623, 1622, 0, 0, 0,
	0, 1620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 1587, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1675, 704, 705, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 709, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 0, 1297, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1618, 0,
	1623, 1622, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 1587, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 1288, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 1290, 709, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	0, 0, 1297, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1623, 1622, 0, 0, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 1587,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 1288, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 1290, 709, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 0, 0, 1297, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1623, 1622, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 1587, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 1288, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 1290, 709, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 0, 1297, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 1623,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 1587, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	1288, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 0,
	0, 1297, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 3073, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 3827, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 3077, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 3826, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 3076, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 3823, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 3825, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	3822, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 3075, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 3824, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 3073, 325, 326, 692,
	0, 0, 3067, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 3069, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 3077, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 3076, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 3066, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 3075, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	3074, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 1881, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 1880, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	1879, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 1882, 587, 588, 595, 596, 597, 598, 599, 0,
	1878, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	1876, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 1877, 671, 673, 674, 675,
	733, 676, 677, 1591, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1593, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 1336, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 1588, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	1590, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 1336,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 1494, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1496, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 1336, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 767, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 766, 302, 303, 755, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 758, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 764, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 760,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 754, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	755, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 758, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 759, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 760, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 755, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	758, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 759, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 760, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 755, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 758, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 4225, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	760, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 1336, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 3722, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	3261, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 3260, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 2445, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 2508, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 2452, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 2451, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 2438, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	2440, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 2402, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 1336, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1718, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1717, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1611, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1604, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1606, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1413, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 1412, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1403, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1402, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1400, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 1399, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1395, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1394, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 736, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 281, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 758, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 759, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 760, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 2548, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	2546, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 2544, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 2458, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 2216,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 2210, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 973, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 972, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 971, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	856, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	845, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 854, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 847, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 853, 849, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 850,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 848,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 851, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 852, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 846, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 839, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 845, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 854, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 847, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 853, 849, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 850, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 848, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	851, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 852, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 846, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 3826, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	4547, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 1441, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 1444, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 1442, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 827, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 826, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 825,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 1445,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 823, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 1441, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 1444, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	1442, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 827, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 826, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 825, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 1445, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 823, 725, 726, 727, 0, 656, 0, 647,
	1443, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 834, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	832, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 745, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 744, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 743, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 3170, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 4846, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	3663, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 4435, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 4170, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 2948, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 3170, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 3300, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 2346, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 826, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 825, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 823, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 2518, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	2506, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1774, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	1766, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 817, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	813, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 818, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 827, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 826, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 825, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 1751, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 823,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	1724, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 1723, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1708, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 1706, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	1701, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1678, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 1676, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	1671, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1632, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	1596, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1447, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 826, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 825, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 823,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	1418, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 1417, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1409, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 1408, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 1361, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 837, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 817, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 813, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 812, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 818, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 827, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 826, 579,
	580, 581, 582, 814, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 825, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 815, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 823, 725, 726, 727, 0, 656, 0, 647,
	819, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 806, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 807, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 769, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 762, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 740, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 3855, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 826, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 825, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 823, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 3764, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 3739, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 3735, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 3687, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 3685, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 3673, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	3670, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 3271, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 807, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 2476, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 0, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 1380, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	1309, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	0, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 0, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 0, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 0, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1714, 0, 1425, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 317, 0, 0,
	0, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 0, 0, 0, 0, 325, 326, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 1427,
	353, 354, 355, 356, 357, 0, 358, 360, 0, 0,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 0, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 0, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 1713, 0, 0, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 0, 0, 0,
	0, 0, 431, 432, 0, 0, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 0, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 0, 507, 0, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	0, 0, 520, 0, 0, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 0, 540,
	0, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 0, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 0, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1428,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 0, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 0, 626,
	627, 628, 629, 0, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 0, 0, 0, 0, 0,
	656, 0, 647, 648, 649, 650, 0, 651, 0, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 0, 0, 0, 0, 672, 671,
	673, 674, 675, 0, 676, 677, 1635, 0, 1425, 0,
	678, 679, 0, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 0, 317, 0, 0, 0, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 0, 0, 0, 0,
	325, 326, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 1427, 353, 354, 355, 356, 357,
	0, 358, 360, 0, 0, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 0, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 0, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 1634, 0,
	0, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 0, 0, 0, 0, 0, 431, 432, 0,
	0, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 0, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 0, 507, 0, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 0, 0, 520, 0, 0,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 0, 540, 0, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 0, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1428, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 0,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 0, 626, 627, 628, 629, 0, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	0, 0, 0, 0, 0, 656, 0, 647, 648, 649,
	650, 0, 651, 0, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 0,
	0, 0, 0, 672, 671, 673, 674, 675, 0, 676,
	677, 1423, 0, 1425, 0, 678, 679, 0, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 317, 0, 0,
	0, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 0, 0, 0, 0, 325, 326, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 1427,
	353, 354, 355, 356, 357, 0, 358, 360, 0, 0,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 0, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 0, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 1422, 0, 0, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 0, 0, 0,
	0, 0, 431, 432, 0, 0, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 0, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 0, 507, 0, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	0, 0, 520, 0, 0, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 0, 540,
	0, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 0, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 0, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1428,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 0, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 0, 626,
	627, 628, 629, 0, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 0, 0, 0, 0, 0,
	656, 0, 647, 648, 649, 650, 0, 651, 0, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 0, 0, 0, 0, 672, 671,
	673, 674, 675, 0, 676, 677, 2230, 0, 1425, 0,
	678, 679, 0, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 0, 317, 0, 0, 0, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 0, 0, 0, 0,
	325, 326, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 1427, 353, 354, 355, 356, 357,
	0, 358, 360, 0, 0, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 0, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 0, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 0, 0,
	0, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 0, 0, 0, 0, 0, 431, 432, 0,
	0, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 0, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 0, 507, 0, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 0, 0, 520, 0, 0,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 0, 540, 0, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 0, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1428, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 0,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 0, 626, 627, 628, 629, 0, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	0, 0, 0, 0, 0, 656, 0, 647, 648, 649,
	650, 0, 651, 0, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 0,
	0, 0, 0, 672, 671, 673, 674, 675, 0, 676,
	677, 2197, 0, 1425, 0, 678, 679, 0, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 317, 0, 0,
	0, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 0, 0, 0, 0, 325, 326, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 1427,
	353, 354, 355, 356, 357, 0, 358, 360, 0, 0,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 0, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 0, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 0, 0, 0, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 0, 0, 0,
	0, 0, 431, 432, 0, 0, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 0, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 0, 507, 0, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	0, 0, 520, 0, 0, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 0, 540,
	0, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 0, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 0, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1428,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 0, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 0, 626,
	627, 628, 629, 0, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 0, 0, 0, 0, 0,
	656, 0, 647, 648, 649, 650, 0, 651, 0, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 0, 0, 0, 0, 672, 671,
	673, 674, 675, 1425, 676, 677, 0, 0, 0, 0,
	678, 679, 0, 680, 681, 682, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 317, 0, 0,
	0, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 0, 0, 0, 0, 325, 326, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 1427,
	353, 354, 355, 356, 357, 0, 358, 360, 0, 0,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 0, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 0, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 0, 0, 0, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 0, 0, 0,
	0, 0, 431, 432, 0, 0, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 0, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 0, 507, 0, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	0, 0, 520, 0, 0, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 0, 540,
	0, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 0, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 0, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1428,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 0, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 0, 626,
	627, 628, 629, 0, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 0, 0, 0, 0, 0,
	656, 0, 647, 648, 649, 650, 0, 651, 0, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 0, 0, 0, 0, 672, 671,
	673, 674, 675, 0, 676, 677, 0, 0, 0, 0,
	678, 679, 0, 680, 681, 682, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 0, 0, 0, 0, 0, 1930, 1931, 1933, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 0, 0, 0, 0, 1986, 0, 0, 1933, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 1978, 1971, 0, 0, 1981, 0, 0, 1947,
	1948, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	1977, 0, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 1953, 0, 0, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 1961, 1953, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 1968, 0, 0, 1932, 0, 0, 0, 0,
	0, 1979, 0, 1983, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 1959, 0, 1955, 1956, 1957, 1958, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 1972, 0, 1971, 0, 1985, 1981, 0, 0,
	0, 0, 0, 0, 1960, 1962, 1967, 1961, 0, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 1977, 0, 1978, 0, 1980, 1985, 0, 0, 0,
	1947, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 1969, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 1953, 0, 0, 0, 0, 0, 0,
	0, 1949, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 1970, 0, 4634, 0, 0, 0, 0, 0,
	0, 0, 1979, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 0, 1968, 4459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0,
	1971, 0, 1959, 1981, 0, 0, 0, 0, 0, 0,
	1960, 1962, 1967, 1961, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 1954, 0, 1977, 0, 1978,
	0, 1980, 0, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1972, 1969, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 1953,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 1970, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 4373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 1959, 1981,
	0, 0, 0, 0, 0, 0, 1960, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 1977, 0, 1978, 0, 0, 0, 0,
	0, 0, 1947, 1948, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 1972,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 1961, 0, 1953, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	0, 4372, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 1959, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 0, 0, 1938, 0, 1967, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 1972, 1971, 0, 0, 1981,
	0, 0, 1932, 0, 0, 0, 1960, 1962, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 1977, 0, 1978, 0, 0, 0, 1985,
	0, 0, 1947, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 1970, 0, 0, 0, 0,
	1938, 0, 0, 0, 1979, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 1968, 0, 4371, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 1959, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 0,
	1953, 0, 0, 0, 0, 0, 1933, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 1972, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 1985,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1955, 1956, 1957, 1958, 0, 1970, 0, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 1954, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 0, 0, 3998, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	1972, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 1967, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 1980, 0, 1985, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 1969, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	1953, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	1968, 0, 3472, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 1971, 0, 1959,
	1981, 0, 0, 0, 0, 0, 0, 1960, 1962, 1967,
	1961, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 1954, 0, 1977, 0, 1978, 0, 1980, 0,
	0, 0, 0, 1947, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	1972, 1969, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	1970, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	0, 0, 3471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 1959, 1981, 0, 0, 0,
	0, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	1977, 0, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 1972, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 0, 1953, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 0, 0, 3470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 1971, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 1978, 0, 0, 0, 1985, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0,
	0, 2376, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 1961, 1970, 0, 0, 0, 0, 0, 0, 1933,
	0, 1979, 0, 1944, 1945, 1951, 1973, 1950, 1946, 1980,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 1968, 0, 3469, 0, 1986, 0, 0, 0,
	0, 0, 0, 1983, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1961, 2377, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 1956, 1957, 1958, 1986, 0, 0,
	0, 0, 1972, 1938, 0, 0, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 2309, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 1960, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 1978, 0, 0, 0, 0, 0, 0,
	1947, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2307, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 1955, 1956, 1957, 1958, 0, 0,
	0, 0, 1970, 1953, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 3434, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 1971, 0, 0, 1981, 0,
	0, 0, 1979, 0, 0, 1960, 1962, 1967, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 1977, 1968, 1978, 0, 1980, 0, 0, 0,
	0, 1947, 1948, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 1969,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 1953, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 2378, 0, 0,
	0, 0, 0, 1972, 0, 1983, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 0, 0,
	1938, 5125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 2308, 1959, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 2379, 0, 0, 0, 0, 1954, 0, 1977, 0,
	1978, 0, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 1972, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	1953, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1985, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0, 2306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 0, 0, 0, 0, 0, 0, 0, 1933, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1968, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 1983, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 1952, 0, 0, 0, 0,
	0, 0, 0, 5124, 1949, 1944, 1945, 1951, 1973, 1950,
	1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 0, 0, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 1961, 0, 0, 0, 0, 3405, 0, 0, 1933,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 1986, 0, 0, 0,
	1972, 0, 1938, 0, 3534, 1932, 0, 0, 0, 0,
	3533, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3406, 0, 0, 0, 0,
	1977, 0, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 1955, 1956, 1957, 1958, 0, 0, 0,
	1970, 0, 1953, 1938, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 1981, 0, 0,
	0, 1979, 0, 0, 1960, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 1968, 1978, 0, 0, 0, 0, 0, 0,
	1947, 1948, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 2921, 0, 0,
	0, 0, 0, 1953, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 0,
	0, 1959, 2920, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 1979, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 1952, 1983, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 1971, 0, 0, 1981, 0, 0, 1985, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	1953, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 1967, 1961, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	1933, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 0,
	1968, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 1983, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 1959,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 1954, 0, 1955, 1956, 1957, 1958, 0, 0,
	0, 0, 0, 1986, 1938, 0, 4730, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 1981, 0,
	0, 0, 0, 0, 1985, 1960, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 1978, 0, 0, 0, 0, 0,
	0, 1947, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 1953, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	0, 1971, 0, 1979, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 1977, 0,
	1978, 0, 0, 0, 0, 1983, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	1953, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1961, 1959, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 1954, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 0,
	1968, 1162, 0, 0, 1972, 0, 0, 1952, 0, 0,
	0, 1983, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 1955, 1956, 1957, 1958, 0, 0,
	0, 0, 0, 0, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 0, 0, 1971, 0, 0, 1981, 0,
	0, 0, 0, 0, 1985, 1960, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 1978, 0, 0, 0, 0, 0,
	0, 1947, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 1933, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 1980, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1983, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 0, 0, 1959, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 1986, 0, 0, 0, 0,
	0, 1938, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 1981, 0, 0, 1985, 0,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4505, 0, 1977,
	0, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 1953, 1938, 0, 4193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 1971, 0, 0, 1981, 0, 0, 0,
	1979, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 1968, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 1961, 0, 0,
	1959, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 1979, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 1952, 1983, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4194, 0, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	1971, 0, 0, 1981, 0, 0, 1985, 0, 0, 0,
	1960, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 1978,
	0, 0, 0, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 1953,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	1967, 1961, 0, 1944, 1945, 1951, 1973, 1950, 1946, 1933,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	1983, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 1955, 1956, 1957, 1958, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 0, 0, 0, 0,
	0, 3540, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 0, 1971, 0, 0, 1981, 0, 0,
	0, 0, 0, 1985, 1960, 1962, 1967, 1961, 0, 0,
	0, 3535, 0, 0, 0, 1933, 3979, 0, 0, 0,
	0, 1977, 0, 1978, 0, 1980, 0, 0, 0, 0,
	1947, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 1969, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 1953, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0,
	1971, 0, 1959, 1981, 0, 0, 0, 0, 0, 0,
	1960, 1962, 1967, 1961, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 1954, 0, 1977, 0, 1978,
	0, 1980, 0, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1972, 1969, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 1953,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 1970, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 1971, 0, 1959, 1981,
	0, 0, 0, 0, 0, 0, 1960, 1962, 1967, 1961,
	0, 0, 0, 3473, 0, 0, 0, 1933, 0, 0,
	0, 1954, 0, 1977, 0, 1978, 0, 1980, 0, 0,
	0, 0, 1947, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 1972,
	1969, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1953, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 3500, 0, 0, 1970,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976,
	0, 0, 1971, 0, 1959, 1981, 0, 0, 0, 0,
	0, 0, 1960, 1962, 1967, 1961, 0, 0, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 1954, 0, 1977,
	0, 1978, 0, 1980, 0, 0, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 1972, 1969, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 1953, 0, 0, 0, 0, 0, 0, 0, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 1955, 1956, 1957,
	1958, 0, 0, 0, 0, 1970, 0, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 1971, 0,
	1959, 1981, 0, 0, 0, 0, 0, 0, 1960, 1962,
	1967, 1961, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 1954, 0, 1977, 0, 1978, 0, 1980,
	0, 0, 0, 0, 1947, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 1972, 1969, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 1953, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 1955, 1956, 1957, 1958, 0, 0, 0,
	0, 1970, 0, 1938, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 1959, 1981, 0, 0,
	0, 0, 0, 0, 1960, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 1977, 0, 1978, 0, 0, 0, 0, 0, 0,
	1947, 1948, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 0, 0, 0, 0, 1972, 1969, 0,
	0, 0, 0, 0, 0, 1967, 1961, 0, 0, 0,
	0, 0, 0, 1953, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 1979, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	2489, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 1945,
	1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 1959, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 1971,
	0, 0, 1981, 1972, 0, 0, 0, 0, 0, 1960,
	1962, 0, 1961, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 1977, 0, 1978, 0,
	1980, 0, 0, 0, 0, 1947, 1948, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 1969, 0, 0, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 1953, 0,
	0, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 1955, 1956, 1957, 1958, 0, 0,
	0, 0, 0, 0, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 1959, 1981, 0,
	0, 0, 0, 0, 0, 1960, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 1977, 0, 1978, 0, 0, 0, 0, 0,
	0, 1947, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940,
}

var sqlPact = [...]int{
	6416, -1000, -1000, -1000, -1000, 226, -1000, -1000, 225, 224,
	223, 220, 219, 218, 217, 215, 214, 213, 206, -1000,
	-1000, 205, 203, 194, 193, -1000, -1000, 191, -1000, -1000,
	186, -1000, 185, 183, 177, -1000, -1000, 176, -1000, 173,
	-1000, -1000, -1000, -1000, 171, 169, 165, 98204, 97619, 98787,
	2516, 125076, 107546, 2097, 87101, 124491, 86516, 123906, 2387, 12273,
	123321, 2986, 164, -1000, 122736, 162, 161, 154, -1000, 106961,
	122151, 104623, 104038, 2391, -1000, 153, 152, -1000, 9934, 75936,
	150, 149, 148, 145, 3322, 144, -1000, 143, 142, -1000,
	-1000, 138, -1000, 18393, 1667, -1000, 136, 135, -1000, 5651,
	103453, 132, 130, 129, 2505, 128, 127, 73007, 123, 121,
	119, 2469, 3081, -1000, -1000, 2200, -1000, -1000, 117, 116,
	115, 114, 113, 112, 105, 104, 101, 99, 97, 96,
	95, -1000, 94, 93, 91, 90, 89, -1000, 87, 86,
	85, -1000, 84, -1000, 83, 79, 78, 77, 76, 75,
	69, 68, 67, 65, 62, 61, 58, 57, 52, 14924,
	-1000, -1000, 51, -1000, 2122, 1826, 1815, 1809, 1807, 1805,
	1032, 49, 48, 47, 46, 45, 43, 42, 40, 39,
	38, 35, 33, 31, 26, 25, 24, 19, 18, 16,
	15, 166, 13, 12, 11, 9, 6, 3, 1, 2756,
	3762, -1000, 1657, 1162, 33027, 3195, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 133821, 125659, -1, -45, -3,
	-1000, 3563, 1096, 60661, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 316, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 483, 2690, 740,
	-1000, -1000, -1000, 121566, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2514, -46, -1000, 2244, -1000, -1000, -1000, -1000,
	-1000, 739, -1000, 2511, 2478, 198, 2476, -1000, -1000, -1000,
	3631, 2684, 4054, 4053, 4052, 4051, 4049, 133238, 1984, 4047,
	2753, 4046, 4045, 4044, 4043, 4041, 4039, 4038, -1000, 97034,
	1114, 96449, 95864, 3630, 120983, 95279, 120398, 136159, 51093, 1063,
	3629, -1000, -1000, -1000, -1000, -1000, -1000, 125659, -1000, 1111,
	-1000, -1000, 4036, 2254, 734, 106376, -1000, -1000, 119813, 1845,
	-1000, -1000, -1000, 972, 1248, 35423, 35423, 35423, 315, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3641, -1000, -1000, -1000,
	-1000, 125659, 2970, 2970, 1434, 1430, 1430, 2970, 2970, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4034, 4033, 4032,
	4029, 4028, -1000, -1000, -1000, 85931, 25648, 85346, 84761, 119228,
	50494, 94694, 94109, 4027, 4026, 4025, 49895, 80666, 58278, 3760,
	118643, 135574, 3759, 3757, 1109, 2241, 1579, -1000, -1000, -1000,
	-1000, -1000, -1000, -24, 77688, 3821, 125659, -1000, 295, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 49296, 717, 48697, 811,
	48098, 751, 118058, -1000, -1000, -1000, -1000, 80071, -1000, 117473,
	2677, 4024, 4023, 1231, 4022, 3505, 1968, 4020, 2051, 1324,
	4018, 4017, 4016, 4013, 4010, 4009, 4008, 1620, 116888, 3194,
	1654, 116303, 1962, 134989, 1102, 93524, 98787, 2837, 115718, 1575,
	1532, -1000, -1000, -1000, -1000, 3347, 3078, 3077, 1150, -1000,
	-1000, -1000, -1000, 64201, 7537, 7180, -1000, -1000, 10119, 115133,
	67166, 98787, 98787, -1000, -1000, -1000, -1000, -1000, -1000, 47499,
	643, 46900, 1049, 114548, -1000, -1000, 64794, 3157, 1156, -1000,
	-1000, -1000, -1000, -1000, 113963, 46301, 593, 45702, 1041, 125659,
	-1000, 3193, 2135, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2774, 1707, 3822, 2969, 79476, 2216, 1489, 3579,
	3343, 3336, 1595, 2240, 3330, 4007, 2850, 3307, 3304, 3303,
	3299, 3294, 1824, 2810, 380, 2800, 32428, 3185, 1817, 45103,
	1729, 1591, 3293, 3270, 3839, 3685, 2213, 2190, 2209, 2218,
	84176, 4005, 4003, 3545, 3264, 3259, 3037, 3247, -1000, 3149,
	1618, 292, -1000, -1000, -1000, -1000, -1000, -1000, 1516, -1000,
	-1000, -1000, -1000, -1000, 88850, -1000, -1000, 1414, -1000, -1000,
	1414, -1000, -1000, -1000, -1000, -1000, 1475, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1657, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2704, -1000, 2261, -1000, -1000, -1000, 2725, 3466,
	3466, 3466, 3623, 452, 446, -1000, 166, -1000, -1000, 144546,
	-1000, -1000, 51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692,
	2414, -1000, 733, -1000, -1000, 790, -1000, 729, 675, 626,
	-1000, -1000, -1000, -1000, -1000, -1000, 728, -1000, -1000, -1000,
	-1000, -1000, -1000, 3805, -1000, 28697, -1000, -1000, -1000, 497,
	727, 51692, -1000, -1000, 3874, 3870, 1064, -1000, 290, 1005,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3192, 726, 725, -1000, 723, 718, 715, 714,
	711, -1000, 710, -1000, 706, 704, 702, 701, 700, 699,
	697, 695, -1000, 2263, -1000, -1000, -1000, -1000, -1000, -1000,
	662, 661, 661, 661, -1000, 1094, -1000, -1000, -1000, 296,
	660, 293, 655, 649, 648, -1000, 694, 693, 689, 686,
	685, 684, 682, 681, 680, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1088, -1000, -1000, -1000, -1000, 1497, -25, 125659,
	-1000, 483, -25, -1000, -1000, 677, -1000, 37238, 37238, 37238,
	-1000, -1000, 2510, 51692, -1000, 2563, -1000, -17, -17, 921,
	62419, -1000, 59467, 921, 633, 802, 68335, -1000, 3148, -1000,
	-1000, 676, 287, -1000, -1000, -1000, -1000, 26241, 3147, 125659,
	125659, 125659, 98787, 98787, 98787, 125659, 4002, 4000, 3435, 51692,
	-1000, -1000, 75351, 137909, 99370, -1000, -1000, 3733, 73590, 74767,
	3191, 137909, 3189, 137329, 3999, -1000, -1000, -1000, -1000, -1000,
	3402, 3998, 3996, 3995, -1000, 125659, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 243, 3401, -1000, -1000, 102868, 243, 3400,
	-1000, 243, 3399, -1000, 102285, -1000, -1000, 2413, 3398, -1000,
	-1000, 250, 3396, -1000, -1000, -1000, 247, 3395, -1000, -1000,
	273, -189, 3394, -1000, -1000, -1000, -1000, -1000, -1000, 144546,
	-1000, -1000, -1000, 136744, -1000, 3548, -1000, 125659, -1000, 51692,
	-1000, -1000, 3732, 1744, 3581, 3663, -1000, -1000, -34, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2735, 2731, 1189, 2545,
	-1000, 3445, 1605, 35423, 3491, -1000, -1000, -1000, -1000, -1000,
	269, 26241, 3048, -1000, -1000, 125659, -1000, 125659, 2970, 2970,
	-1000, -1000, -1000, 3827, 3826, 2970, 2970, 125659, 125659, -1000,
	-1000, -1000, -1000, -1000, -1000, 2562, 3392, 1593, -1000, 2542,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2080,
	3391, -1000, 1953, 3389, 2079, -1000, -1000, 2338, -1000, 140957,
	1445, -1000, -1000, -1000, -1000, 2192, 3388, -15, -1000, -1000,
	2715, -1000, -1000, -1000, -1000, 140846, -1000, 3134, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1795, -1000, -1000,
	2353, 2129, -1000, 1399, 3387, -1000, 2966, 2966, 92939, 3351,
	66573, 64794, 77688, -28, -1000, -1000, -1000, -1000, -1000, -199,
	-1000, 25048, 144546, -1000, -1000, -1000, -1000, 2070, 144546, 920,
	-1000, -1000, 3386, -1000, 144546, 919, -1000, -1000, 3385, -1000,
	2804, -1000, 3188, -1000, -1000, 2629, 2628, 1068, -1000, 3993,
	-1000, -1000, 3992, -1000, 3991, 3989, 3987, -1000, 1850, 2235,
	3985, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 92356,
	2509, -1000, -1000, 90601, 3187, -1000, 2624, 3660, -1000, 91771,
	1101, -1000, 1025, 2623, -1000, 101702, 970, 2621, -1000, 3984,
	3627, 2899, 1025, 2620, -1000, -1000, -1000, -1000, -1000, 1039,
	-1000, 70085, -1000, 70085, -1000, 1759, -1000, 132655, -17, 98787,
	3805, -1000, -48, -1000, -1000, -1000, 1096, -1000, 63605, -1000,
	63605, 105791, 81259, 1010, 3146, 72421, 144340, -1000, 1067, -1000,
	-1000, 144546, -1000, -1000, -1000, 2796, -1000, -242, 2959, -1000,
	81259, 65980, 3145, 2793, -1000, 144546, -1000, -1000, -1000, -1000,
	144546, -1000, -1000, -1000, 81259, 90601, -1000, 113378, 91186, -1000,
	-1000, 1611, 2778, -1000, -1000, -1000, 81259, 1413, 81259, 81259,
	81259, -1000, 112793, -1000, -1000, 2264, 1672, 3533, 2262, 98787,
	-1000, 2270, -1000, -1000, -1000, 3564, 3274, 125659, -1000, -1000,
	3186, -1000, 77104, 101119, -1000, 100536, -1000, 99953, -1000, 98787,
	-1000, 98787, -1000, 3982, 3981, 3980, -1000, -1000, 3979, -1000,
	3977, 3554, -1000, 963, 44504, 144546, 3552, -1000, 3976, 2160,
	3185, 144546, -1000, 3262, 1819, 1814, 125659, -1000, -1000, 125659,
	-1000, 125659, -1000, -1000, -1000, 2531, 1698, -1000, -1000, 2734,
	-1000, -1000, -1000, 1066, -1000, -1000, 98787, 98787, 98787, 98787,
	1647, -1000, 43905, -1000, -1000, 3248, 3975, 1893, -1000, 2265,
	-1000, 3140, 3567, -1000, 1585, 1927, 266, 3883, -1000, -1000,
	251, -1000, -1000, -34, -1000, 132072, -1000, 2725, -1000, 125659,
	-1000, 2709, 3179, 3184, 1821, 2527, 2826, -1000, 43306, 2814,
	55286, 2537, 166, -1000, -1000, 166, 166, 34225, -1000, -1000,
	73590, 73590, 26241, 1487, 51692, 51692, 51692, 51692, 51692, 51692,
	51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692,
	51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692,
	51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692, 51692,
	2444, 51692, 1471, 51692, 51692, 51692, 51692, 2060, -1000, -1000,
	2103, 537, 2180, 675, -1000, -1000, -1000, 3794, 3794, 3794,
	1268, 1268, 1268, 145007, 145007, 623, 3973, 790, -1000, 51692,
	-1000, 73, 63002, 51692, 26836, -1000, 446, 8968, 2754, -1000,
	439, 27465, -1000, -1000, -1000, 28697, 626, 42677, 51692, 1079,
	144546, -1000, -1000, 1574, 3819, 24448, 3203, 3023, 674, 913,
	899, 31799, 31170, 30541, 29912, 895, 747, 51692, 51692, 51692,
	51692, 51692, 51692, 51692, 51692, -1000, -1000, 3825, -1000, 3819,
	-1000, -1000, -1000, -1000, 3819, 1449, 1393, 3819, -1000, 3819,
	3819, 8848, 8848, 42078, 41479, 40880, 55885, 40281, 51692, 29313,
	39682, 39083, -1000, 57682, 125659, -25, 3731, 51692, 197, -1000,
	141863, -1000, 197, 197, 673, -51, 144546, 2757, 2757, 61247,
	2590, 2425, 2425, 2425, -1000, 921, 19010, 921, 111044, 2441,
	921, 921, 261, 271, 434, 58874, 2563, 111044, 776, 671,
	-4, -5, -7, -1000, -1000, -10, -11, -1000, -1000, 98787,
	667, 26836, 26241, 259, 2163, -54, 2821, 2820, -1000, 2818,
	2817, -1000, 2808, 2504, -1000, -1000, -1000, 1988, -61, 1451,
	98787, 125659, 1533, 3972, -67, -1000, 1190, -68, -1000, 1214,
	257, 3819, -1000, -1000, -1000, -1000, -1000, 3971, 3970, -1000,
	1074, 666, 665, 436, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 662, 661, 661, 661, -1000, 296, 660, 293,
	655, 649, 648, -1000, -1000, -1000, -1000, -1000, 3139, 98787,
	125659, 1530, 3969, 87684, -189, 99370, -56, -1000, -1000, 125659,
	-1000, -1000, -1000, 3968, -1000, 98787, -1000, -1000, 98787, 243,
	3384, -1000, 98787, -1000, 98787, 241, 3380, -1000, -1000, 125659,
	-1000, 98787, 98787, -1000, 125659, 125659, 125659, 137909, 137909, 240,
	-1000, 98787, 891, -73, 1247, -34, -1000, -1000, -1000, -1000,
	1414, -1000, 2301, -1000, -1000, -1000, -1000, -1000, -1000, 1609,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1064, -1000,
	-1000, -1000, -1000, 3810, 3807, -26, -1000, -1000, 26241, -1000,
	1933, -1000, -1000, -1000, -1000, 125659, 125659, -1000, -1000, 125659,
	125659, -1000, -1000, -37, 1770, 582, 1444, -1000, 83591, 2582,
	3536, 3966, 2884, 3518, 1746, -1000, 1690, 646, -1000, 3637,
	88850, 3684, 3711, 1422, -1000, 3131, -1000, -1000, -1000, 971,
	1874, 1919, 1390, 1387, 88850, 1953, -1000, 73590, -1000, 2876,
	3620, 1430, 1458, 1430, 1430, 1411, -1000, 88850, 1905, 1386,
	1382, 1378, -1000, -1000, 1789, 1750, -1000, -1000, 112210, -1000,
	1376, 1370, 3753, 2704, 2372, 841, 2164, -1000, 1435, 1366,
	3130, -1000, -1000, -42, 3682, 3701, 1422, -1000, 3128, 1363,
	-1000, -1000, -1000, 3619, 98787, 26241, 1659, 1645, 1631, 1888,
	1359, -27, -1000, 3676, 1717, -1000, 90601, 90601, 108129, 125659,
	3773, 81259, -1000, 2648, -1000, -1000, -1000, 3578, 3569, -1000,
	-1000, 1352, 1342, -1000, 1070, 7892, 3465, -1000, 137909, 1070,
	1070, 2067, 3370, 2938, 1793, -1000, 2958, 916, 2957, -1000,
	-1000, -1000, 916, -28, 77688, 125659, 239, -1000, 73, 51692,
	51692, 73, 51692, 73, -1000, 3654, 3341, 3337, 3964, -1000,
	-1000, -1000, -1000, -1000, 3963, 2181, 2750, -1000, -1000, 645,
	2619, 3125, 125659, 2832, -30, 98787, -1000, 76520, 3334, 137909,
	1953, 2618, -1000, -1000, 90018, -1000, 3327, 483, 2617, -1000,
	615, 3961, 3319, -1000, 131489, -1000, 3548, 1508, 3313, 1164,
	716, 3730, -1000, 716, 70669, -1000, 125659, -1000, -17, 291,
	82425, -78, -81, 433, -1000, 111627, 125659, 125659, 3477, 2187,
	2186, -1000, 1016, 64794, -1000, 64794, -88, -1000, -242, 2956,
	1627, 64794, -1000, 1010, 1010, 916, -1000, 916, -1000, 98787,
	3183, -1000, -1000, 81259, 1010, 1010, 1010, -1000, -1000, -1000,
	-1000, 3958, 3957, 3953, 3952, -1000, -1000, 1022, 98787, 125659,
	98787, -1000, -1000, 1706, -1000, 238, -1000, 137909, -1000, 137909,
	125659, 98787, -1000, 1022, 125659, 1022, 125659, 1022, 125659, 1022,
	1022, -1000, -1000, -1000, -1000, -1000, 73, -1000, -1000, 144546,
	-1000, 51692, -1000, -1000, 1687, 3950, 1763, -1000, 3182, -1000,
	3180, -1000, 29, -1000, -1000, 3824, 2031, -1000, 3864, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3947, 144546, -1000,
	2082, -1000, -1000, -1000, -1000, 98787, 98787, 98787, 98787, 125659,
	3464, -1000, 125659, 3462, 98787, -1000, 3882, -1000, -1000, 88850,
	-1000, 2709, 3179, -1000, -1000, -1000, -1000, -1000, -1000, 1865,
	2483, -1000, 2776, -1000, 1699, -1000, -1000, -1000, 144546, 56484,
	-1000, -1000, 144546, 2106, -1000, 54687, 54088, -1000, -1000, 1857,
	98787, 2835, -1000, 2835, -184, -1000, 141576, 2772, 98787, -1000,
	-1000, -1000, -1000, -1000, 964, 624, 624, 1482, 1482, 1482,
	1482, 3664, 5578, 8801, 384, 6093, 6093, 7558, 7558, 7558,
	7558, 7558, 6093, 5458, 1268, 1268, 5458, 5458, 5458, 5458,
	5458, 1268, 1268, 1268, 6093, 6093, 6093, 1268, 145007, 144801,
	11502, 51692, 51692, 1332, 2073, 537, 11379, 51692, 9051, 9051,
	9051, 9051, -1000, 2202, -1000, -1000, -1000, -1000, 3124, 644,
	55885, 55885, -1000, -1000, -1000, -1000, 28081, 51692, -1000, -1000,
	-1000, -1000, 38454, -1000, -1000, 140545, -330, 432, -1000, 234,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 431, -183, 0, -1000, 51692, 51692, 51692,
	430, -1000, 233, 51692, 125659, -1000, 16738, 773, -186, -1000,
	-90, 1511, -1000, 51692, -1000, -1000, 1330, -1000, 1329, 1328,
	1325, -1000, 642, 428, -1000, 232, -1000, 2423, 641, 640,
	51692, -1000, -1000, -1000, -1000, -1000, 140285, -1000, -1000, 140079,
	-1000, -1000, 139873, -1000, -1000, 139613, -1000, -1000, -1000, -1000,
	-1000, 144134, 16339, 15048, 14283, 7869, 12600, 11595, -95, 427,
	-96, 425, 959, 948, 424, 417, 416, -103, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-104, 415, -1000, 3120, -183, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 411, -1000, 409, -1000, 143928, -183, 407,
	6447, -1000, 55885, 55885, 55885, 55885, 405, -1000, 141465, -1000,
	143722, 37855, 37855, 37855, 404, 143516, 51692, -183, -109, -1000,
	-111, -1000, -1000, -1000, -1000, 599, -114, 1073, 37238, 60075,
	26241, -1000, 1073, 1073, 51692, -1000, 51692, 2789, -1000, -1000,
	-1000, -1000, 2784, 2168, 2757, 61247, -1000, -1000, -1000, -1000,
	111044, -1000, 3805, 3532, -1000, 111044, -1000, -1000, 125659, 483,
	-1000, 111044, 111044, 26241, 921, -1000, 921, 111044, 621, -1000,
	-1000, -1000, -1000, -1000, 403, 71255, 0, 231, 26241, 1025,
	-1000, -1000, 2905, 2905, 2905, 2905, 2905, 98787, -1000, -1000,
	137909, 1323, -31, -101, 2954, -1000, 3769, -1000, 2273, -1000,
	73590, -1000, 786, 1257, 26241, -1000, -1000, -1000, 636, -1000,
	3819, 3819, -1000, 3819, 137909, 3117, 190, 2942, -1000, 2503,
	-29, 179, 137909, 3941, -1000, -1000, 243, -1000, 98787, 243,
	243, -1000, 98787, 98787, 2413, -1000, 250, -1000, 247, -1000,
	-1000, -189, -1000, 1065, 35423, -1000, 1414, -1000, -1000, 1696,
	-1000, 2203, -1000, 1272, -1000, -1000, 35423, -1000, 3480, -1000,
	1790, -1000, -1000, -1000, -1000, 2625, 125659, 125659, 98787, -1000,
	109295, 125659, -1000, 2347, 137909, -1000, 2611, 130906, 2564, 130323,
	73590, -1000, -1000, 635, 980, 2770, 2768, 1145, 125659, 125659,
	2766, 129740, 129157, -1000, 3940, 125659, 2288, 51692, 109295, 3618,
	2462, 2132, 73, 73, -1000, 73, -1000, -1000, 634, 1290,
	98787, 98787, 125659, 137909, 98787, 2042, -1000, -1000, -1000, -1000,
	-1000, 89433, -1000, -1000, 1430, -1000, -1000, -1000, 1430, 1953,
	2001, 125659, 137909, 98787, 137909, 128574, 2161, 127991, 2159, -1000,
	-1000, 1886, 125659, -1000, -1000, -1000, -1000, 1490, -1000, 841,
	1321, 3116, 51692, 51692, 2320, 73, 73, -1000, 73, 632,
	26241, 2195, -1000, 3205, 125659, 3863, 127408, 3862, 125659, 125659,
	125659, 137909, 3546, 125659, -1000, 1010, -1000, -218, -1000, 898,
	896, -199, -1000, 3773, -1000, 894, 2254, 125659, 137909, -1000,
	126825, 7892, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2294,
	78881, 1172, 125659, 1399, -1000, -1000, 1863, 1315, 1314, 88850,
	2282, 1859, 2019, 137909, 64794, 1017, 64794, 2907, -1000, -1000,
	23848, -1000, 144546, 144546, -1000, 144546, -1000, 76520, 81259, 125659,
	-1000, -1000, 1100, 125659, 83008, 996, 3312, 69501, -199, 1010,
	81259, 98787, -30, 2832, 125659, -1000, -1000, 1953, 3302, 483,
	2608, -1000, 137909, 3729, 3290, 630, 3936, 3931, -1000, 98787,
	2502, 2605, -1000, -1000, 126242, 3284, 841, 125659, 1073, 61247,
	2124, -1000, 67752, 1125, 125659, 2029, 172, -1000, -1000, -1000,
	8, 125659, -1000, 797, -1000, -1000, 291, 291, 1010, -218,
	629, 65387, -117, -1000, 230, 628, 893, 892, -1000, 2466,
	-1000, -242, -1000, 81259, 1016, 64794, 3109, -242, 2941, 3104,
	-1000, -1000, 1061, -1000, 1571, 1010, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -19, 2005, 125659,
	-189, -189, -71, -31, -1000, 1022, -1000, 1022, -1000, 1022,
	-1000, -1000, -1000, 144546, -1000, -1000, -1000, 1747, 1732, 125659,
	-1000, 3177, -1000, 125659, -1000, -1000, 26241, 125659, 98787, 26241,
	98787, 3173, 3170, -1000, -1000, -1000, 125659, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1197, -1000, 2106, 2468, -1000,
	626, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2708, -1000, -33, 34225, 937, -1000, -1000, 98787, -21, 51692,
	51692, 10886, 10295, 51692, 55885, 55885, -1000, 51692, 7572, -1000,
	-1000, -1000, -1000, -1000, 3095, 625, 51692, 73590, 6463, 5431,
	-1000, 400, 10261, 5458, -1000, 51692, -1000, 6938, -1000, 398,
	36639, -1000, 142263, -2, -122, -1000, 19624, -183, -128, -1000,
	-1000, 782, -1000, 3255, -1000, 51692, 143232, 2645, 2196, 1963,
	1771, 3819, 3859, 23248, -1000, 71838, 1076, 2450, 139458, -1000,
	-1000, -1000, -1000, 73590, 73590, 51692, 51692, -1000, 51692, 51692,
	51692, -1000, -1000, -1000, 3819, 940, -1000, -1000, -1000, 940,
	-1000, -1000, 1430, -1000, 1430, -1000, 51692, -1000, -1000, 3089,
	51692, -1000, 73590, 73590, 55885, 55885, 55885, 55885, 55885, 55885,
	55885, 55885, 55885, 55885, 55885, 55885, 55885, 55885, 55885, 55885,
	55885, 55885, 55885, 55885, 2794, 55885, 3792, 3792, 3792, 1098,
	-1000, 3168, 3089, 51692, 51692, 73590, 397, 396, 395, -1000,
	51692, -183, -1000, -1000, 6359, 620, -1000, 2691, -1000, 3021,
	-1000, 51692, -1000, -119, -1000, 2563, -1000, -1000, 3021, 3021,
	-129, 144546, 61247, 61247, -1000, 611, 51692, 2783, -1000, -1000,
	762, -331, -1000, 889, -1000, -1000, -1000, -1000, -1000, -1000,
	882, -1000, 483, -1000, -1000, -1000, 229, 111044, 111044, 761,
	-1000, -146, -1000, -1000, -151, -1000, 3727, 392, 26241, -1000,
	1073, 2872, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2799,
	-263, 137909, 137909, 1856, 2475, 3857, -1000, 3820, 780, 760,
	199, 3819, 391, 390, 388, -189, 137909, 137909, 1843, 74183,
	137909, -1000, -1000, -1000, 243, -1000, -1000, -1000, 241, -1000,
	-1000, -1000, -1000, 2854, -1000, -34, -1000, -1000, -1000, 51692,
	-1000, 1002, -1000, -1000, 3527, 609, 1313, 1312, -1000, -153,
	-1000, 881, -1000, -1000, -1000, -1000, 3087, -1000, 3285, -1000,
	2596, -1000, 1134, 2585, 1680, -1000, 51692, 608, 2897, 607,
	603, 3922, 2250, 3921, 1153, 3281, 2413, 3279, 2413, -1000,
	-1000, -1000, 977, -1000, 144546, -154, -1000, 2462, -1000, 602,
	601, -1000, -37, 1752, 520, 1310, 1060, -1000, -1000, 51692,
	51692, 110461, -1000, 504, 3531, -22, -1000, -1000, -1000, 1837,
	1308, 1304, -1000, -1000, -1000, -1000, 1953, 1827, 1303, 1302,
	-1000, -1000, -1000, -1000, -1000, 2579, -1000, 125659, -1000, 3276,
	125659, 1055, -1000, 3219, 3217, 944, 125659, 51692, 51692, 142945,
	142834, -1000, 1053, -1000, -1000, 51692, -1000, -42, 1299, 3671,
	2574, 98787, -1000, 2413, 3271, 1298, -1000, 1295, -1000, -1000,
	-1000, 3675, 3670, 1293, -1000, 108129, 81259, 81259, 3773, 64794,
	-1000, -1000, -1000, 81259, -1000, -1000, 78288, -1000, -1000, 1070,
	125659, 137909, 98787, 1949, -1000, -1000, 87684, 88267, 125659, 2938,
	-189, 916, -1000, 2641, 916, 1017, 3080, -1000, 2829, -1000,
	1044, 98787, 3920, 387, -156, -53, 73590, -1000, -1000, -1000,
	-1000, 2564, 98787, 125659, 1389, 2847, 125659, 125659, 3725, -1000,
	2523, 659, 98787, 956, -1000, 3805, -1000, -1000, -1000, 1028,
	-1000, 3659, 98787, 3723, 3266, 1025, 73, 98787, 3832, -1000,
	-1000, 3722, 98787, 3265, 2501, 2573, 2743, 841, 81842, 1025,
	2447, -93, -1000, 2029, 36022, 3524, -159, -1000, -1000, -1000,
	1073, 70669, 61247, 51692, 3918, -161, -1000, -1000, -1000, -1000,
	-1000, 108129, 81259, 1010, 125659, 125659, 3916, 81259, 81259, 81259,
	-63, 600, -1000, 879, 874, 873, -1000, -1000, -1000, -1000,
	-1000, -1000, 872, 871, 869, 868, 1016, -1000, -1000, -242,
	64794, 1016, 64794, 73, -1000, 2459, 98787, -1000, 22648, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1022, 3856, -199, -1000,
	-1000, -1000, 2349, 2534, 2349, 2007, 1996, -1000, -1000, 2464,
	-1000, -1000, -1000, -1000, 2845, 3539, 26241, 3652, 9051, 51692,
	51692, 7209, 775, 578, 9051, 51692, 51692, 73590, 14323, -162,
	51692, 51692, -1000, 51692, 755, 144546, -1000, 3847, 51692, 383,
	382, -1000, -1000, -1000, 3812, -1000, -1000, -1000, 144546, 51692,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 368, -1000, 74,
	-1000, -1000, -1000, 134404, -1000, 51692, 364, 3617, -1000, 362,
	357, 319, 474, 139198, 138992, 138786, 356, -1000, -1000, 355,
	352, 144546, 3168, 144546, -1000, -1000, 1062, 1062, 1459, 1459,
	1459, 1459, 3792, 807, 827, 1110, 524, 524, 524, 962,
	1098, 1098, 524, 524, 524, 1098, 3079, 2779, 597, 6530,
	-1000, -1000, 144546, 144546, 349, -1000, -1000, -1000, -183, 347,
	6359, -1000, 3011, 3616, 144546, -1000, 61247, 3011, 3011, -1000,
	-1000, 2168, 125659, 144546, 61247, -1000, 3532, -1000, 20842, 20236,
	-1000, 26241, -1000, -1000, -1000, -1000, 3805, -1000, 71255, -1000,
	589, -1000, 30, -1000, 2872, -1000, 864, -1000, -1000, 81259,
	81259, 2905, -1000, 3033, -263, -167, 125659, -1000, -1000, 754,
	3915, 778, 26241, 343, -1000, -1000, -1000, -189, -189, 125659,
	3074, 98787, 125659, 1525, -189, -1000, -1000, -1000, 3475, 144546,
	3167, 2997, 2996, 125659, 125659, -1000, 109295, 35423, 1675, 109878,
	125659, 3263, -1000, 3258, -1000, 1145, 2021, 138525, 61833, -1000,
	61833, 125659, -1000, -1000, -1000, -1000, 2090, 1786, 3914, 1222,
	-1000, 3566, 125659, -1000, 125659, -1000, -1000, -1000, 109295, -1000,
	125659, 125659, 98787, 125659, -1000, 137909, 3228, -164, 144546, -66,
	-1000, 863, -1000, 1431, -1000, 22048, 125659, 137909, 98787, 125659,
	137909, 98787, 3254, 1121, 125659, -1000, 2378, -1000, -1000, 3215,
	-1000, 144546, 142547, 73, 51692, 3227, -171, 26241, -1000, 3846,
	3843, 3250, 3570, -1000, 125659, 3841, 125659, 98787, 3474, -1000,
	-1000, -1000, 1021, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1825, 1292, 1285, 2499, 2496, 2474, -71, 2282, 1017, -74,
	588, -1000, 859, -1000, -1000, 858, 857, 1017, -1000, 81259,
	64794, 3913, 483, -1000, 2851, -1000, 105206, 83008, 2479, -1000,
	-1000, 587, 125659, 125659, 586, -1000, 73, -1000, 3912, 109295,
	585, -1000, 2457, -1000, 746, -1000, 2695, 137909, 1953, 73,
	98787, -1000, 1014, 483, 339, -79, -1000, 3253, 1140, 26241,
	98787, 3249, 2745, 841, 81842, -1000, 1508, 2826, -1000, -84,
	-1000, 653, 73, 2447, -1000, -93, 144546, -1000, 852, -172,
	337, -1000, 3471, -1000, -1000, -177, -1000, -1000, 2454, 2454,
	81259, 64794, 81259, 81259, 81259, 64794, 81259, -1000, 1016, 916,
	-1000, -242, -1000, 2607, -1000, -1000, -1000, -1000, -1000, -1000,
	26241, 1871, -1000, 583, 579, -1000, -1000, -1000, -1000, 3539,
	9051, 9051, 51692, 51692, 51692, 9051, 14323, -187, -1000, 9051,
	9051, -183, -1000, -1000, 142263, -1000, -1000, -1000, 144546, -1000,
	21448, 2360, -1000, 138495, -1000, 34225, -1000, -1000, 51692, 51692,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55885, 3067,
	576, 73590, -1000, -1000, 329, 1071, 51692, 53489, 2563, 1071,
	1071, -1000, -193, -1000, -1000, -1000, 3805, -1000, 3805, 30,
	-1000, -1000, 3908, 26241, -1000, 81259, -1000, -1000, -1000, 2461,
	-1000, -1000, 3239, -188, 752, -1000, 3907, -1000, -1000, 155,
	137909, 3065, 137, 2924, -1000, 73, -1000, -1000, -1000, -1000,
	-1000, -1000, 2917, 3714, -1000, 2145, -1000, 125659, 125659, -1000,
	125659, -1000, 26241, 125659, 3034, 1327, -1000, 980, 2763, 574,
	55885, 1187, 98787, 961, 2992, 2990, -1000, 3748, 3611, 2962,
	-196, -1000, 125659, 51692, 125659, -198, -201, 2554, -1000, -1000,
	1185, 1319, 51692, 1182, -1000, -1000, -1000, 73590, 563, 2413,
	2413, -1000, -203, -204, -1000, -1000, -1000, 51692, 1270, 125659,
	34824, -1000, 3906, 3531, -1000, -1000, -1000, -1000, -1000, -1000,
	125659, 125659, -1000, 125659, -1000, 51692, -1000, 142147, 51692, 1258,
	-1000, -1000, -1000, 3840, 2413, 26241, 2413, -1000, 2413, 3570,
	1215, 2520, 125659, 137909, 98787, 1958, 1958, 3093, -1000, -1000,
	-1000, 2670, 2670, 81259, 64794, 64794, -1000, -102, 1017, -1000,
	3713, 2354, 3903, -1000, -1000, -1000, -1000, 2759, -1000, -1000,
	-1000, 125659, 2758, 2999, 61833, 554, 544, 125659, 1011, -1000,
	-213, 83008, 996, 990, -1000, -105, 543, -1000, 847, -1000,
	-1000, -1000, -1000, 483, -1000, 2853, 3712, -1000, 3838, 542,
	541, 125659, 2494, 538, 26241, 3522, 841, 81842, -1000, 3284,
	2029, -1000, 2568, 125659, 3514, -1000, 2826, 537, -1000, 1010,
	535, 1010, -1000, -216, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1016, -120, -1000, 931, 930, -1000, -1000,
	98787, 98787, 51692, 51692, -1000, 9051, 9051, 9051, -1000, 328,
	-1000, -1000, 2447, 3598, -1000, -123, 18389, 17748, 7757, 55885,
	73590, -219, -1000, -1000, 125659, 144546, -138, -1000, 144546, 534,
	533, 471, -1000, -1000, -1000, 744, 475, -1000, -1000, -1000,
	-1000, 137909, 3902, -1000, 137909, -189, 137909, 137909, 1774, -1000,
	108712, 125659, -1000, -1000, 1680, 1766, -1000, -1000, -1000, 125659,
	2572, -1000, -1000, -1000, 1033, 51692, 6530, 55885, 530, 51692,
	-1000, 528, 526, 3706, 3453, -1000, 2842, 3071, 2153, 61833,
	-1000, 3539, -1000, 17718, -1000, 1138, 2127, -1000, -1000, -1000,
	-1000, 144546, 55885, 3570, 61833, -1000, -1000, 523, 522, 144546,
	509, 846, 3064, -1000, -1000, -1000, -1000, -199, -1000, 144546,
	73, 144546, 505, 3671, -1000, -1000, -1000, -1000, 2413, 98787,
	844, -1000, -1000, -1000, 1255, -1000, -1000, -1000, -1000, 3901,
	3900, 3062, 87684, -1000, -221, -1000, -1000, -1000, 2170, 73,
	996, -1000, -1000, 2479, 502, -1000, 1009, 3350, 3350, -222,
	61833, 61833, -227, 2486, 2803, -1000, 322, 3697, 990, -1000,
	3803, -1000, 3454, 3454, 51692, 3696, 3470, -1000, 73, -1000,
	3832, 61833, -1000, 98787, 61833, 2493, 2257, 2726, 81842, -1000,
	2743, -1000, -1000, -228, 125659, 2029, -1000, -1000, 81259, -1000,
	-1000, -1000, 2607, -1000, 125659, -1000, 125659, -1000, -1000, -229,
	-230, -1000, 2226, 51692, 34225, -1000, -1000, 7757, -239, -1000,
	-178, -1000, 3693, 53489, 3898, 3897, 3896, -1000, -1000, -263,
	-1000, -189, -189, -189, 125659, -1000, 2074, -1000, 2564, -1000,
	-1000, 3243, -1000, 3004, 500, 17233, 6530, 2696, 125659, 17027,
	1953, 1953, -1000, 3690, 3069, -1000, -1000, 2320, 487, -1000,
	-1000, -1000, -1000, 937, 125659, 1009, 3001, 98787, 6530, 1141,
	-245, 2349, 2349, 51692, 33626, 2370, -1000, 51692, -1000, -1000,
	3570, 64794, 137909, -1000, -1000, 137909, 2491, -1000, 3052, 3804,
	-1000, 2486, 125659, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1138, -246, -252, -1000, -1000,
	3560, -1000, 3467, 2851, 73, -1000, -1000, -1000, -253, 144546,
	73, 3895, 1014, 321, -254, 1140, -260, 98787, 2114, -1000,
	841, -1000, 2745, 1073, 3422, -1000, -268, -1000, -269, -270,
	-1000, -1000, 318, 52890, 52890, 52890, -183, -184, -1000, 125659,
	484, -1000, -1000, -1000, -1000, -1000, 118, -1000, -1000, 3212,
	906, -1000, 903, 2089, 297, 1155, 294, 174, -1000, -1000,
	-1000, 2962, -1000, 125659, -1000, -1000, -1000, 906, 483, -1000,
	51692, 1138, -278, -1000, 1120, -286, -1000, 1119, -287, -1000,
	3060, -1000, -288, 2413, -1000, -263, 240, 1958, 1012, 3651,
	-1000, -1000, -1000, 2699, -289, -1000, -1000, 2153, 1138, 2320,
	2539, -1000, 2354, 1011, -1000, -1000, -1000, -1000, -1000, 1138,
	480, 2153, 477, 1638, 841, -1000, -1000, 1430, 3522, 3418,
	1457, 1010, -1000, -1000, -1000, 3301, -1000, 57083, 2470, 1994,
	141163, 3301, 3301, -1000, -1000, 137909, 125659, 1009, 3632, -1000,
	905, 904, 1610, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1073, -304, -1000, 2696, 144546, 1009, -1000, 2349, 2914,
	-1000, 2349, 3058, -1000, 2368, -1000, -1000, -1000, -1000, 3057,
	-1000, 1822, 3771, -1000, -1000, 1009, 125659, 2320, 2153, 1009,
	1982, 1966, 3893, 996, 2486, 2153, 61833, 2320, 61833, 2280,
	-1000, 125659, -1000, 2257, 1447, -1000, 1745, -1000, -1000, 1924,
	3741, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -189, -1000,
	-1000, 843, -1000, 3441, -1000, 1181, 2201, 2201, -1000, -1000,
	903, -1000, -1000, 473, -1000, 472, -1000, 137909, 2456, -1000,
	-1000, -1000, -1000, 1009, 2320, 1073, -1000, 3890, -1000, 2486,
	-1000, 2320, -305, 1009, -307, 2384, -1000, -1000, -199, 2114,
	-1000, 1731, 70669, 1959, -1000, -1000, 2429, 52291, 51692, -1000,
	3775, -1000, -1000, 2781, -1000, 2962, 51692, 51692, 240, 68918,
	1073, 1009, -1000, -1000, 2699, 1009, 1138, 1073, 2153, -1000,
	841, 1638, 70669, -276, -1000, -1000, -1000, 144546, -1000, -1000,
	-1000, -1000, -310, -313, -1000, -218, 108129, -1000, 1073, -1000,
	1073, 2153, -1000, 2320, 137909, 2280, -276, -1000, 2320, 1254,
	-318, -1000, -1000, 2320, 1009, -1000, -1000, -1000, -1000, -1000,
	460, -1000, 1009, 1073, 51692, 1073, -1000, -324, -1000, 2320,
	-1000,
}

var sqlPgo = [...]int{
	0, 4783, 4781, 4778, 4777, 4776, 4775, 4774, 4769, 4767,
	4766, 4761, 4760, 4757, 4756, 151, 4754, 4753, 4752, 4751,
	4750, 4749, 4747, 4716, 4714, 4712, 4711, 4707, 4705, 4704,
	4702, 4701, 4697, 4696, 4695, 4694, 4693, 4692, 4687, 4685,
	4682, 4677, 4674, 4673, 4672, 4671, 4670, 4666, 4663, 4661,
	4660, 4659, 4658, 4654, 4649, 4648, 4647, 4646, 4645, 4639,
	4638, 4636, 4625, 4622, 4620, 4617, 4616, 4615, 4614, 4613,
	4612, 4611, 63, 4608, 4606, 4604, 4603, 4602, 4600, 4599,
	4587, 4586, 4584, 4581, 4580, 4579, 4576, 4575, 4573, 4571,
	4570, 4569, 4567, 70, 4566, 293, 4565, 4564, 4563, 4562,
	4561, 4554, 4553, 4552, 4551, 4550, 4549, 4548, 291, 4546,
	142, 169, 4541, 4540, 4058, 4537, 4533, 287, 4532, 4531,
	4530, 4529, 4526, 301, 4525, 4523, 4521, 4519, 4518, 274,
	4515, 4514, 4513, 4511, 4508, 4507, 56, 139, 4505, 4504,
	1336, 4503, 4502, 4501, 4500, 4498, 4494, 4490, 267, 270,
	4489, 4486, 4484, 261, 180, 4481, 286, 4480, 4479, 4477,
	4476, 4475, 4474, 4472, 4471, 4470, 4469, 4468, 4467, 4466,
	4465, 4463, 4461, 4460, 4458, 4455, 4453, 4452, 4448, 4447,
	4446, 4445, 4444, 4442, 4441, 4440, 4438, 4437, 4435, 4433,
	4431, 4427, 4426, 4425, 4424, 4423, 4422, 4420, 4418, 266,
	224, 138, 4416, 4415, 285, 284, 4414, 4413, 4412, 4407,
	4403, 3673, 4398, 4397, 4396, 4395, 4394, 4393, 4392, 4390,
	4386, 149, 3, 28, 4385, 4384, 90, 94, 98, 130,
	100, 101, 4383, 123, 4381, 129, 115, 4377, 116, 114,
	26, 6, 174, 256, 10945, 251, 4367, 4365, 4363, 255,
	199, 4359, 253, 4356, 4355, 4354, 4352, 4350, 4346, 77,
	59, 221, 4342, 4341, 150, 181, 190, 187, 186, 184,
	78, 60, 104, 91, 67, 47, 16, 93, 226, 21,
	8, 279, 4340, 276, 7, 153, 10, 33, 4337, 4336,
	4335, 4334, 4154, 110, 4333, 282, 258, 182, 4332, 4330,
	4325, 723, 4324, 4323, 54, 278, 206, 212, 122, 113,
	135, 4322, 157, 177, 38, 4321, 175, 81, 4308, 4306,
	103, 102, 9220, 12234, 4303, 4302, 147, 76, 128, 1519,
	163, 160, 214, 225, 171, 176, 58, 223, 219, 191,
	210, 4301, 262, 4300, 3701, 97, 196, 165, 5868, 4299,
	4298, 4295, 95, 4294, 112, 4293, 4292, 72, 14, 1,
	2, 155, 42, 36, 13, 4291, 31, 127, 51, 29,
	4290, 23, 4288, 4283, 4279, 4277, 50, 4276, 53, 170,
	4273, 4271, 299, 4270, 84, 62, 43, 4265, 25, 235,
	4264, 259, 140, 4261, 4260, 265, 211, 197, 4259, 75,
	244, 4258, 4257, 4256, 4254, 4253, 4252, 141, 11, 145,
	4251, 4250, 156, 4248, 61, 252, 208, 4247, 64, 4246,
	4239, 188, 57, 154, 297, 137, 246, 126, 237, 201,
	248, 4235, 4233, 4232, 198, 4231, 4228, 238, 161, 4222,
	4221, 213, 300, 99, 49, 92, 250, 87, 207, 168,
	4220, 215, 4218, 4213, 298, 193, 232, 44, 15, 34,
	118, 109, 4205, 9, 249, 166, 234, 124, 4201, 7762,
	2484, 1219, 247, 4199, 152, 125, 85, 158, 162, 280,
	105, 4192, 4190, 1827, 4183, 4180, 4179, 4177, 203, 4175,
	4174, 4172, 159, 222, 236, 4169, 133, 82, 52, 19,
	132, 263, 296, 121, 242, 173, 269, 4165, 4164, 4163,
	192, 4162, 73, 134, 178, 216, 273, 66, 4161, 131,
	4160, 167, 2101, 74, 172, 4158, 233, 4157, 4156, 4153,
	4152, 4151, 4150, 4149, 1924, 260, 4148, 4147, 4146, 37,
	200, 4145, 277, 241, 202, 96, 86, 4144, 179, 2336,
	4143, 835, 239, 68, 4, 4142, 41, 4140, 2879, 65,
	4137, 0, 14217, 9370, 12050, 13085, 4133, 4557, 4132, 4131,
	4130, 229, 88, 4129, 4127, 4126, 111, 4125, 89, 4124,
	4123, 83, 4122, 24, 17, 18, 30, 27, 503, 371,
	4121, 4120, 55, 148, 194, 4119, 295, 245, 4117, 4111,
	4110, 4109, 106, 4108, 46, 4107, 32, 4106, 4105, 48,
	12, 35, 4104, 4102, 164, 4101, 117, 220, 4100, 183,
	4099, 79, 146, 4098, 4097, 4096, 71, 69, 275, 228,
	218, 107, 4095, 289, 4094, 209, 4093, 4092, 22, 4089,
	4087, 257, 120, 119, 40, 264, 144, 45, 189, 230,
	4086, 4085, 185, 4084, 4082, 4081, 281, 4080, 3665, 283,
	4078, 39, 4077, 4076, 4075, 5, 4074, 4073, 217, 3400,
	4071, 4068, 20, 4060, 204,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 56, 56, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	40, 42, 41, 35, 35, 36, 36, 37, 38, 38,
	43, 44, 12, 12, 12, 8, 8, 8, 8, 8,
	8, 8, 8, 21, 21, 45, 45, 22, 22, 47,
	47, 23, 23, 48, 48, 628, 628, 628, 629, 629,
	630, 630, 630, 26, 50, 19, 20, 20, 20, 20,
	631, 631, 631, 631, 39, 27, 51, 32, 32, 32,
	32, 32, 224, 224, 224, 224, 25, 25, 46, 46,
	267, 267, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 624, 624, 269, 269, 268, 256, 256, 257,
	257, 258, 258, 632, 632, 270, 270, 270, 271, 271,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	523, 523, 523, 554, 554, 554, 554, 556, 556, 651,
	651, 652, 652, 652, 652, 652, 139, 139, 420, 420,
	420, 60, 60, 60, 60, 60, 619, 619, 226, 226,
	226, 228, 228, 227, 227, 227, 227, 227, 84, 84,
	638, 638, 637, 636, 636, 636, 639, 639, 639, 225,
	225, 225, 135, 135, 135, 135, 135, 135, 135, 135,
	136, 136, 137, 137, 229, 229, 229, 231, 231, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 235, 18, 18, 18, 118, 118, 118, 118,
	118, 118, 118, 113, 113, 558, 558, 559, 559, 220,
	220, 221, 221, 221, 221, 222, 222, 223, 223, 223,
	75, 75, 232, 232, 234, 234, 233, 233, 233, 233,
	233, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	63, 63, 63, 63, 63, 64, 64, 64, 64, 64,
	64, 65, 65, 65, 65, 65, 65, 66, 66, 73,
	73, 73, 73, 73, 73, 73, 73, 201, 201, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 81, 81, 81, 81, 81, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 653, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 654, 654, 655, 655,
	656, 656, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 90, 90,
	380, 380, 343, 343, 91, 91, 91, 92, 92, 93,
	93, 77, 77, 617, 617, 396, 396, 514, 514, 78,
	625, 625, 625, 627, 627, 626, 626, 95, 95, 419,
	419, 96, 96, 96, 96, 96, 96, 97, 97, 97,
	97, 97, 97, 97, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 105, 105,
	105, 105, 105, 106, 106, 106, 103, 103, 103, 100,
	100, 100, 99, 99, 99, 104, 104, 104, 616, 332,
	332, 102, 102, 102, 101, 101, 101, 397, 397, 107,
	107, 107, 107, 344, 108, 108, 108, 108, 108, 108,
	108, 108, 111, 111, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 516, 516, 4,
	4, 262, 262, 261, 261, 261, 261, 5, 5, 5,
	265, 265, 264, 263, 109, 109, 109, 481, 481, 114,
	114, 114, 435, 435, 115, 115, 115, 115, 115, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	621, 621, 389, 389, 295, 295, 295, 295, 127, 127,
	127, 127, 128, 128, 128, 128, 129, 129, 206, 206,
	145, 145, 145, 145, 144, 144, 144, 144, 144, 144,
	144, 144, 67, 67, 67, 68, 68, 69, 69, 70,
	70, 71, 71, 72, 72, 72, 72, 72, 148, 148,
	31, 31, 31, 31, 149, 149, 648, 648, 151, 147,
	147, 147, 147, 147, 146, 146, 150, 150, 150, 150,
	152, 154, 154, 154, 154, 154, 153, 153, 153, 153,
	153, 155, 155, 548, 548, 405, 405, 546, 546, 568,
	568, 547, 547, 350, 350, 350, 350, 350, 351, 351,
	351, 557, 557, 557, 557, 557, 557, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 207, 207, 207, 208, 208, 213, 213,
	214, 214, 214, 215, 215, 215, 212, 212, 212, 209,
	209, 210, 210, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 218, 218, 216, 216, 217, 217, 659,
	659, 658, 658, 219, 219, 219, 219, 219, 182, 182,
	182, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 406, 406, 185, 185, 185, 169, 169, 157,
	157, 157, 157, 157, 157, 157, 162, 162, 162, 162,
	162, 162, 162, 162, 163, 163, 163, 158, 158, 171,
	171, 171, 171, 171, 164, 164, 165, 165, 165, 166,
	166, 166, 166, 193, 193, 168, 168, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 159, 159, 159, 159,
	173, 173, 173, 173, 442, 442, 442, 199, 199, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 196, 196, 196, 196, 196,
	196, 640, 640, 641, 641, 641, 189, 189, 189, 189,
	189, 189, 495, 495, 183, 183, 183, 183, 188, 188,
	188, 188, 191, 191, 191, 191, 425, 425, 180, 180,
	180, 181, 181, 181, 186, 186, 198, 187, 381, 381,
	184, 184, 190, 190, 190, 190, 192, 192, 192, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 161, 161,
	161, 161, 194, 194, 179, 179, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 660, 660, 175,
	175, 175, 174, 174, 174, 174, 177, 177, 178, 178,
	178, 178, 178, 178, 176, 167, 197, 618, 618, 614,
	614, 614, 614, 614, 614, 614, 614, 614, 615, 615,
	615, 615, 620, 620, 119, 119, 119, 119, 119, 119,
	119, 130, 130, 130, 130, 130, 130, 130, 133, 133,
	120, 120, 120, 120, 120, 120, 120, 123, 123, 121,
	121, 121, 121, 122, 122, 85, 85, 85, 85, 85,
	17, 17, 17, 86, 86, 286, 286, 240, 240, 240,
	368, 368, 241, 241, 358, 358, 358, 358, 236, 236,
	237, 237, 238, 239, 239, 87, 87, 661, 661, 661,
	633, 633, 633, 634, 634, 634, 634, 634, 634, 352,
	352, 353, 353, 461, 461, 461, 461, 461, 356, 356,
	356, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	366, 367, 367, 359, 359, 365, 364, 364, 363, 363,
	362, 362, 360, 361, 361, 361, 370, 370, 369, 372,
	372, 371, 460, 577, 577, 579, 579, 579, 579, 579,
	579, 579, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 443,
	443, 662, 662, 663, 664, 575, 575, 575, 576, 571,
	571, 572, 572, 572, 572, 572, 354, 354, 355, 355,
	355, 355, 573, 574, 387, 387, 499, 578, 578, 580,
	580, 582, 665, 665, 665, 665, 665, 665, 666, 666,
	666, 459, 459, 458, 458, 457, 457, 378, 378, 583,
	583, 583, 583, 584, 584, 584, 584, 584, 587, 586,
	585, 585, 585, 585, 585, 89, 89, 89, 422, 422,
	421, 421, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 203, 203, 298,
	298, 298, 83, 83, 83, 14, 14, 14, 14, 14,
	14, 14, 313, 313, 15, 15, 15, 635, 635, 635,
	88, 88, 88, 88, 88, 88, 376, 376, 376, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 623, 623, 622, 622, 299,
	299, 668, 668, 94, 94, 94, 94, 94, 94, 94,
	94, 517, 517, 518, 518, 82, 82, 82, 82, 82,
	444, 444, 441, 441, 440, 440, 386, 386, 497, 497,
	497, 498, 303, 303, 304, 304, 259, 259, 259, 34,
	33, 24, 24, 28, 28, 29, 29, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 30, 30, 53, 53,
	53, 53, 54, 54, 54, 54, 57, 57, 58, 58,
	52, 52, 52, 52, 55, 55, 49, 49, 59, 59,
	59, 59, 59, 642, 644, 644, 643, 643, 647, 647,
	647, 647, 647, 647, 645, 645, 646, 646, 649, 649,
	650, 650, 126, 126, 131, 131, 131, 131, 131, 132,
	132, 132, 132, 134, 134, 134, 134, 143, 143, 202,
	202, 202, 202, 202, 202, 202, 61, 61, 61, 61,
	74, 74, 74, 74, 141, 670, 670, 670, 142, 142,
	142, 669, 669, 296, 296, 454, 454, 455, 455, 671,
	671, 456, 456, 456, 456, 456, 289, 288, 290, 290,
	291, 291, 80, 80, 80, 279, 279, 278, 280, 280,
	281, 281, 276, 276, 560, 560, 283, 283, 283, 284,
	284, 272, 272, 273, 273, 274, 274, 275, 275, 287,
	287, 555, 555, 672, 672, 117, 117, 117, 205, 205,
	342, 342, 342, 451, 451, 451, 379, 379, 310, 310,
	453, 453, 453, 453, 453, 418, 418, 418, 204, 204,
	394, 394, 408, 408, 409, 409, 511, 511, 410, 124,
	124, 125, 125, 140, 140, 244, 244, 242, 242, 242,
	242, 242, 242, 242, 242, 249, 249, 250, 250, 251,
	251, 252, 253, 253, 253, 253, 398, 398, 254, 254,
	254, 243, 243, 243, 245, 245, 245, 245, 245, 245,
	245, 248, 248, 248, 248, 255, 255, 255, 247, 247,
	594, 594, 594, 596, 596, 598, 598, 597, 597, 593,
	593, 595, 595, 667, 667, 424, 424, 424, 375, 377,
	373, 373, 374, 374, 384, 384, 382, 383, 383, 385,
	385, 496, 496, 496, 260, 260, 260, 415, 415, 415,
	415, 416, 416, 447, 447, 445, 445, 445, 445, 446,
	446, 448, 448, 448, 449, 449, 450, 450, 412, 412,
	413, 413, 414, 414, 414, 414, 477, 477, 246, 246,
	246, 391, 391, 391, 392, 392, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 468, 468, 466,
	466, 466, 466, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 501, 502, 502, 393, 393, 503, 452, 452,
	612, 612, 612, 613, 613, 494, 494, 504, 504, 504,
	504, 504, 504, 492, 492, 493, 493, 512, 513, 513,
	428, 428, 428, 428, 426, 426, 429, 429, 429, 429,
	429, 427, 427, 505, 505, 505, 505, 417, 417, 506,
	506, 506, 506, 507, 508, 508, 509, 509, 462, 463,
	463, 519, 519, 519, 519, 521, 390, 390, 390, 390,
	390, 570, 569, 569, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 536, 536, 536, 536, 536,
	536, 536, 522, 522, 522, 522, 522, 526, 526, 526,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 527, 527, 532, 532, 533, 533, 533, 528, 529,
	534, 534, 534, 534, 673, 673, 538, 538, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 524, 524, 524,
	531, 531, 531, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 436, 436, 438, 438,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 471, 471, 471, 471, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	588, 588, 588, 588, 588, 588, 588, 588, 473, 473,
	591, 591, 592, 592, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 599, 599, 600, 600, 602,
	602, 603, 603, 604, 605, 605, 605, 606, 607, 607,
	601, 601, 608, 608, 608, 608, 609, 609, 610, 610,
	610, 610, 610, 611, 611, 611, 611, 611, 483, 483,
	484, 484, 490, 490, 490, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	349, 349, 348, 300, 300, 300, 300, 300, 300, 403,
	403, 401, 401, 401, 404, 404, 402, 402, 400, 400,
	399, 399, 480, 480, 478, 478, 482, 482, 430, 430,
	537, 537, 537, 537, 537, 537, 537, 537, 431, 431,
	431, 439, 432, 432, 433, 433, 433, 433, 433, 474,
	475, 434, 434, 434, 476, 476, 485, 489, 489, 488,
	487, 487, 486, 486, 464, 464, 465, 465, 411, 411,
	674, 674, 407, 407, 510, 510, 510, 510, 346, 346,
	395, 395, 345, 345, 337, 337, 338, 338, 338, 338,
	388, 388, 491, 491, 539, 539, 540, 540, 541, 541,
	542, 542, 543, 544, 545, 479, 479, 321, 320, 307,
	308, 319, 318, 317, 306, 309, 314, 315, 316, 311,
	312, 328, 327, 326, 277, 282, 333, 334, 334, 336,
	336, 335, 335, 323, 324, 325, 515, 305, 339, 339,
	340, 340, 340, 341, 341, 341, 341, 301, 301, 302,
	302, 329, 329, 330, 331, 331, 322, 322, 322, 292,
	292, 292, 293, 293, 294, 294, 553, 553, 550, 550,
	550, 551, 551, 551, 552, 552, 552, 552, 549, 549,
	549, 549, 549, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 562, 562, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 564, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 567, 567,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	6, 4, 4, 6, 9, 6, 8, 4, 4, 5,
	9, 7, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 6, 6, 9, 6,
	9, 6, 5, 6, 5, 1, 1, 1, 1, 1,
	1, 0, 1, 6, 6, 4, 8, 7, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	4, 4, 2, 1, 1, 3, 1, 3, 2, 4,
	3, 2, 3, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 1, 1, 1, 1, 3, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 3, 12, 3,
	1, 1, 2, 1, 4, 0, 3, 3, 0, 4,
	6, 0, 5, 7, 6, 8, 7, 9, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 5, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 4, 3, 6,
	6, 6, 6, 6, 8, 4, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 5, 3, 4, 3, 3,
	4, 3, 4, 4, 4, 3, 5, 7, 3, 3,
	4, 3, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 4, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 2, 1, 3, 2, 0, 7,
	2, 5, 0, 1, 3, 3, 1, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 4,
	3, 1, 2, 3, 2, 2, 2, 4, 6, 3,
	1, 2, 2, 7, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 7,
	4, 7, 8, 8, 9, 11, 5, 2, 6, 9,
	4, 7, 7, 10, 7, 10, 10, 13, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	4, 4, 3, 4, 1, 1, 1, 1, 5, 3,
	3, 2, 2, 6, 3, 3, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 2, 1, 3, 3, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 1, 2, 2, 2, 9, 2, 1, 0,
	1, 1, 0, 1, 2, 0, 2, 2, 0, 2,
	2, 2, 2, 1, 2, 3, 3, 4, 4, 4,
	4, 3, 3, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 3, 5, 7, 3, 3, 3, 4,
	4, 6, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 1, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 6, 4, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 5, 3, 5, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 7, 5, 2, 0,
	3, 3, 4, 3, 3, 3, 5, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 7, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 12, 15, 1, 0, 1, 2, 3,
	0, 2, 0, 4, 0, 4, 5, 4, 1, 1,
	1, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 3, 6, 4, 2,
	3, 5, 5, 5, 2, 5, 5, 2, 2, 2,
	0, 1, 1, 3, 4, 10, 11, 9, 5, 3,
	1, 5, 9, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 6, 1, 3, 1, 2, 0, 1,
	2, 3, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 3, 0, 4, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 3,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 8, 11, 5, 4, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 16, 19, 15, 18, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	8, 8, 4, 7, 3, 0, 7, 10, 1, 1,
	1, 1, 2, 2, 3, 0, 3, 0, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 14, 16, 3, 1, 0, 4, 1, 0,
	2, 2, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 7, 10, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 631, -110, -107, -75, -73, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -60, -62, -76,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-67, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 211, 402, 450, 462, 418, 147,
	441, 423, -150, -151, 481, -61, -74, -142, -141, 76,
	134, 176, 307, 433, -6, -14, -31, -18, 30, 48,
	-63, -64, -65, -66, 65, -83, -79, -90, -84, -77,
	-78, -81, -653, 106, -595, -98, -101, -134, -657, 168,
	230, -120, -121, -122, 384, -128, -129, 443, -131, -132,
	-133, 446, 169, -69, -68, 162, -242, -244, -147, -146,
	-148, -206, -157, -158, -159, -160, -161, -163, -164, -166,
	-193, -167, -168, -169, -170, -171, -172, -176, -196, -173,
	-174, -175, -178, -177, -179, -184, -180, -181, -182, -183,
	-185, -186, -188, -189, -190, -191, -192, -194, -195, 486,
	-187, -197, -165, -198, 551, 52, 502, 85, 152, 454,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-59, -4, -5, -80, -82, -85, -86, -87, -94, -88,
	-89, -594, -99, -100, -103, -105, -106, -102, -104, 442,
	603, -245, -243, 628, 567, -162, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -45, -50, -47, -48,
	-46, -49, -51, -52, -53, -54, -55, -56, -57, -58,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -19, -20, -32, 590, 599, -248, -246, -247,
	-255, 473, 575, 524, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	-344, 2, -323, -329, -330, -331, -322, -292, -564, -567,
	4, -561, -565, 175, 240, 345, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 46,
	47, 48, 49, 50, 51, 52, 56, 58, 62, 63,
	64, 65, 66, 67, 71, 76, 77, 82, 83, 84,
	85, 86, 87, 88, 89, 95, 92, 93, 94, 96,
	98, 100, 101, 102, 103, 104, 105, 107, 108, 109,
	111, 112, 113, 121, 122, 123, 124, 125, 127, 133,
	128, 134, 137, 132, 136, 138, 140, 141, 142, 145,
	146, 147, 149, 150, 151, 153, 154, 155, 157, 158,
	160, 161, 162, 165, 163, 166, 164, 167, 168, 169,
	170, 173, 181, 182, 183, 188, 190, 191, 192, 194,
	197, 198, 199, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 212, 216, 218, 219, 220, 221, 222, 223,
	229, 230, 232, 233, 234, 235, 236, 241, 242, 243,
	247, 253, 254, 258, 259, 260, 262, 266, 267, 268,
	269, 270, 271, 273, 275, 274, 277, 280, 281, 284,
	285, 286, 287, 288, 289, 293, 294, 290, 295, 296,
	298, 299, 302, 300, 303, 304, 301, 305, 308, 309,
	310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
	306, 307, 322, 320, 324, 325, 326, 327, 328, 343,
	338, 339, 340, 332, 333, 329, 334, 330, 331, 335,
	336, 342, 337, 347, 348, 349, 350, 353, 227, 246,
	355, 356, 359, 361, 378, 364, 365, 366, 369, 370,
	373, 376, 377, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 389, 390, 392, 393, 394, 396, 397, 398,
	400, 402, 403, 405, 406, 407, 409, 410, 411, 412,
	413, 414, 415, 417, 418, 420, 419, 421, 423, 425,
	426, 427, 433, 434, 441, 435, 437, 438, 439, 440,
	442, 443, 444, 445, 446, 448, 449, 450, 452, 453,
	454, 455, 456, 458, 460, 461, 465, 466, 467, 483,
	484, 505, 462, 463, 464, 468, 469, 470, 471, 472,
	476, 474, 475, 477, 478, 479, 481, 482, 485, 486,
	488, 489, 490, 491, 492, 493, 494, 497, 499, 500,
	501, 502, 503, 523, 504, 506, 510, 511, 512, 513,
	507, 508, 522, 515, 516, 517, 519, 520, 525, 526,
	527, 528, 529, 530, 532, 533, 535, 543, 544, 545,
	546, 548, 551, 552, 553, 554, 541, 556, 557, 560,
	561, 565, 562, 566, 563, 564, 567, 569, 572, 573,
	574, 580, 579, 581, 582, 583, 585, 586, 591, 592,
	594, 595, 596, 37, 53, 54, 57, 59, 61, 72,
	73, 74, 78, 129, 130, 159, 171, 172, 184, 200,
	201, 213, 215, 224, 225, 226, 248, 249, 251, 256,
	278, 352, 354, 371, 375, 391, 395, 399, 401, 416,
	457, 495, 509, 514, 536, 537, 538, 539, 547, 549,
	575, 576, 577, 584, 593, -344, 2, -323, 362, -316,
	2, -292, -292, 402, 29, 2, 29, 390, 475, 527,
	529, 2, -621, -389, 2, 29, -295, -292, 106, 211,
	473, -316, 2, -621, 211, -389, 26, 2, -292, 2,
	376, 23, 28, 69, 80, 102, 145, 170, 193, 197,
	-656, 378, 410, 460, 477, 522, 533, 548, 2, 579,
	299, 474, 524, 240, 124, 553, 468, -635, 465, 466,
	376, 408, 452, 214, 568, -296, 2, 462, -292, 299,
	2, 631, 98, 77, 457, 478, -153, 2, 289, 544,
	-154, -155, -152, 536, -548, 468, 452, 322, -292, 631,
	631, 631, 29, -305, 2, -292, -305, 2, -211, 2,
	-305, -658, -218, -217, -216, 22, 434, 183, 271, 195,
	231, 327, 405, 194, 50, -211, 2, 524, 240, 468,
	124, 520, 631, 631, 2, 524, 381, 579, 474, 124,
	413, 240, 553, 197, 145, 28, 71, 48, 530, 607,
	468, -635, 604, 605, 299, 131, -619, 2, -614, 4,
	-565, -561, -338, -337, 524, 530, 124, -331, -322, 620,
	-330, 631, 631, 631, 631, 2, 259, 260, 412, 411,
	478, 479, 29, 631, 631, 631, 631, 465, 2, 170,
	23, 28, 69, 97, 102, 131, 193, 197, 367, -654,
	378, 410, 477, 522, 526, 533, 548, -634, 504, 71,
	440, 468, -633, -635, 299, 553, 145, -440, 124, 289,
	209, 561, 529, 527, 559, 137, 247, 564, 563, 631,
	631, -111, 2, 628, 33, 32, -110, -114, 147, 481,
	-235, 524, 252, 2, -292, 631, 631, 631, 2, 259,
	260, 465, 466, 29, 631, 631, 195, -614, 520, 2,
	631, 631, 631, 2, 29, 259, 260, 465, 466, 252,
	2, 71, 470, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	2, -200, 478, 504, 220, 49, 48, 77, 29, 409,
	82, 382, 125, 131, 154, 554, 212, 240, 241, 267,
	97, 98, -442, 46, 260, 71, 259, 466, -640, 465,
	-495, 525, 469, 475, 519, 89, 271, 462, 544, 546,
	106, 569, 453, 596, 413, 414, 517, 427, 290, 163,
	196, 4, 124, 322, 452, 480, 275, 274, 536, 289,
	461, 385, 87, 631, -667, 2, 524, -669, 2, 544,
	544, 2, -669, 2, -669, 2, -669, 2, -670, 544,
	593, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, -243, -245, -244, 631, 631, 631, 631, 631, 631,
	631, -200, 478, 2, 77, 29, 29, -382, -384, 558,
	250, 156, 368, -242, -244, 2, -594, -546, 2, -469,
	-568, -471, 618, 619, 611, 521, 70, -348, 344, 597,
	-483, 131, 559, 362, -567, -472, -485, 159, 378, 457,
	-404, 8, 9, 5, 6, 7, -301, -473, -479, 550,
	174, 351, -341, 632, 10, 628, -591, -244, -484, 38,
	215, 68, -550, -340, -302, -522, 251, -339, -322, -588,
	-589, 4, -561, -562, -551, -525, -533, -529, -530, -536,
	-292, -564, 80, 115, 116, 114, 119, 118, 292, 291,
	120, 117, 480, 568, 69, 37, 224, 225, 256, 352,
	226, 78, -590, 146, -563, 248, 249, 495, 54, 416,
	184, 130, 129, 354, 59, 57, 576, -534, 126, 536,
	537, 538, 539, 200, 201, 61, 171, 172, 375, 399,
	514, 547, 549, 213, 278, 45, 110, 196, 245, 228,
	255, 257, 261, 279, 282, 323, 341, 346, 372, 374,
	451, 487, -673, 577, 509, 72, 73, 189, -596, 419,
	-597, -316, -596, 631, 631, 633, 631, -373, -375, -377,
	2, 29, 143, 628, 2, -500, 2, -501, -505, -244,
	272, -504, 628, -502, 626, -323, 363, -592, 458, -588,
	-589, -301, -322, -340, 4, -561, -563, 630, -378, 628,
	124, 468, 524, 81, 240, 97, 170, 197, -435, 628,
	-292, 29, 362, 540, 633, -374, 407, -481, 628, 362,
	365, 195, 365, 63, 303, 2, 2, 2, 2, 2,
	224, -292, 524, 123, 2, 270, 2, 2, 2, 2,
	2, 2, 2, -397, 224, 2, -323, 579, -397, 224,
	2, -397, 224, 2, -441, 2, 91, -306, 224, 2,
	-292, -332, 224, 2, -327, -329, -336, 224, 2, -334,
	-292, -556, 224, 2, -554, 4, -561, 120, 480, -469,
	2, -140, 2, 63, -292, 579, 2, 483, 2, 628,
	-153, 2, 74, 544, 45, 478, -154, 2, -455, 2,
	-456, -288, -289, -290, -512, -291, 258, 406, 415, 600,
	135, 344, 596, -648, 195, 610, 540, -546, -546, -546,
	-405, 630, -213, 56, -305, -659, -658, -659, -544, 29,
	-539, 8, -540, 618, 619, -544, -544, -659, -659, 2,
	2, 2, 2, 2, 2, -505, 224, -323, 2, -320,
	-549, 4, -561, -565, -562, -566, -564, 29, 32, 33,
	34, 36, 38, 39, 40, 42, 60, 68, 69, 75,
	79, 81, 91, 97, 106, 114, 115, 117, 116, 118,
	119, 120, 131, 135, 139, 143, 144, 148, 152, 156,
	174, 176, 189, 193, 195, 211, 214, 217, 231, 244,
	250, 252, 272, 276, 283, 291, 292, 344, 351, 357,
	362, 363, 367, 368, 388, 404, 422, 447, 473, 480,
	498, 518, 524, 534, 540, 542, 550, 558, 559, 568,
	570, 578, 587, 588, 589, 590, -567, 80, 2, -505,
	224, 2, -326, 224, -505, -329, 2, -306, 2, -469,
	-628, 532, 166, 435, 2, -345, 224, -323, -325, -329,
	-327, 2, 2, 2, 2, -469, 2, -558, 2, -553,
	10, -552, 5, 4, -561, -565, -562, -472, 2, -483,
	29, -334, 2, -554, 224, 2, 29, 29, 579, 407,
	252, 540, 633, -395, -337, -338, -545, 4, 8, -388,
	-292, 630, -469, 2, -140, -123, 2, 189, -469, 224,
	2, -140, 224, 2, -469, 224, 2, -140, 224, 2,
	-292, 2, -636, 2, -558, 224, 224, -292, 2, 303,
	2, 2, 548, 2, 102, 524, 123, 2, 439, -655,
	460, 552, 2, 2, 2, 2, 2, 2, 2, 524,
	-311, 2, -292, 189, 507, -334, 224, -335, 2, 474,
	-668, 419, -554, 224, 2, 579, -327, 224, 2, -327,
	240, 254, -306, 224, 2, 529, 527, 529, 527, 195,
	2, 252, 2, 252, 2, -506, 2, -507, -501, -508,
	626, 363, -516, 2, -515, -552, 575, -111, 628, -111,
	628, 478, 628, -558, -323, -323, -469, 2, -140, -123,
	2, -469, 2, -140, 2, -292, 2, -137, -558, -136,
	628, 195, 569, -292, 2, -469, 2, -140, -123, 2,
	-469, 2, -140, 2, -235, 189, 2, 124, 524, -200,
	2, 189, 570, 2, 8, 2, 231, -558, 469, 414,
	181, 2, 483, 2, 484, 77, -442, 596, 77, 195,
	2, 195, 2, -425, 2, 590, 407, 195, 2, 2,
	-618, 2, 362, 195, 2, 195, 2, 195, 2, 195,
	2, 195, 2, -199, 479, 545, 523, 411, 260, 2,
	-140, 587, -123, 260, 259, -469, 587, 2, -641, 189,
	466, -469, 2, 543, 269, 164, 195, -425, 2, 195,
	2, 195, 2, 5, 2, 43, 412, 505, 2, 258,
	406, 505, 2, 503, 2, -323, 524, 579, 474, 124,
	29, 2, 465, 2, 2, 92, 93, 195, 2, 195,
	2, 210, 195, 2, 195, 524, -406, 630, 596, 2,
	-417, -505, -454, -455, -454, 540, -382, -384, -200, 483,
	2, -249, -415, -251, 189, -445, -446, -252, 283, 176,
	357, -253, -424, 29, 143, -424, -424, 63, 629, 629,
	11, 12, 79, 43, 618, 619, 620, 621, 187, 622,
	623, 616, 617, 615, 608, 609, 613, 264, 265, 99,
	612, 610, 90, 297, 459, 177, 178, 179, 180, 436,
	238, 35, 239, 14, 15, 16, -348, 34, 367, 282,
	597, 228, 487, 611, 17, 18, 19, 255, 257, 346,
	53, 231, -300, 378, -347, 521, 70, -469, -469, -469,
	-469, -469, -469, -469, -469, 374, 628, -411, -464, 626,
	-244, 628, 628, 628, 628, -545, -244, -469, -483, 629,
	-402, 628, -244, -483, -478, 628, 457, 626, 628, -486,
	-469, 5, 5, 5, 628, 630, -599, 591, 189, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 401, -527, 628, -526, 628,
	-526, -526, 580, -524, 628, 599, 592, 628, -524, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 580, 530, 633, -596, -378, 628, -407, -510,
	-469, 620, -407, -407, 362, -399, -469, 110, -428, 261,
	323, 196, 279, 451, 245, -466, 632, -466, -494, 599,
	-244, -502, -322, -244, -504, 628, -500, -494, -112, -545,
	-95, -108, -117, -140, -156, -204, -205, 620, -323, 628,
	195, 628, 630, -549, 195, -388, -306, -333, -292, -323,
	-339, -340, -345, -317, -292, 2, 2, 142, -399, -614,
	553, 468, 29, 474, -556, -295, 39, -480, -519, -520,
	-570, 632, -569, -522, -532, -528, -531, 391, 395, -551,
	57, 576, -534, 251, 4, -561, -563, 248, 249, 495,
	54, 416, 184, 130, 129, 354, 59, 536, 537, 538,
	539, 200, 201, 61, 577, 509, 72, 73, -614, 553,
	468, 29, 474, 189, -556, 189, -556, 2, 2, 159,
	2, 2, 2, -292, -270, 633, 67, 444, 159, -397,
	224, -270, 159, -270, 159, -346, 224, -345, -270, 159,
	-270, 633, 159, -270, 633, 159, 630, 633, 159, -556,
	2, -441, -548, -399, 39, -455, 2, 131, 4, 5,
	-671, 633, 281, -351, 296, 343, 219, 363, 594, 355,
	135, -557, 5, 4, -479, -491, 131, 289, 251, -539,
	-541, 9, -542, 618, 619, -547, -546, 113, 630, -549,
	-214, 246, 41, -305, -305, -659, -659, 8, 8, -659,
	-659, -305, -305, -267, 437, 481, 377, -266, 25, 30,
	147, 242, 328, 573, 165, -363, 243, 442, -360, 381,
	159, 499, 562, -628, -631, 464, 532, 166, 435, 94,
	355, 481, 377, 437, 159, -421, -423, 39, 122, 328,
	376, 64, 234, 301, 302, 502, 584, 159, 481, 377,
	437, 377, -15, -281, 25, 147, -283, -278, 481, -631,
	103, 437, 603, 442, 387, 516, 404, -631, -628, 277,
	-630, 586, 342, -269, 499, 562, -628, -631, 464, 437,
	-268, -365, -360, 381, 159, 632, 25, 147, 437, 481,
	377, -651, -652, 30, -262, -261, 25, 147, 481, 565,
	-265, 231, -264, 25, -149, -129, -148, 442, 481, -149,
	2, 437, 377, -622, -313, -593, 231, 590, 159, -313,
	-313, -505, 224, -645, 189, 2, -638, -136, 273, 5,
	10, -558, -136, -395, 633, 633, -549, 620, 466, 465,
	159, 159, 159, 159, 260, 189, 344, 344, 590, 2,
	2, 2, 2, 2, 197, -633, -656, 2, 2, -323,
	224, -380, 362, -617, -396, 524, -323, 189, 344, 45,
	-326, 224, 2, -329, 579, -622, 344, -328, 224, -323,
	39, 628, 344, 2, -441, 2, 240, -593, 344, -506,
	-342, -323, -501, -342, 481, -316, 39, -466, -323, 629,
	633, -516, -516, -558, -223, 590, 195, 628, -235, 590,
	590, 260, -513, 633, -512, 231, -559, -558, -137, -558,
	440, 195, 260, -558, -617, -306, 2, -323, 2, 524,
	262, -558, -223, 231, -558, -558, -558, -548, 29, 484,
	2, -199, 479, 545, 93, 484, 2, -323, 524, 124,
	240, 83, -645, 189, 2, -292, -620, 189, -615, 452,
	468, 553, -614, -323, 124, -323, 124, -323, 124, -323,
	-323, 2, 2, 2, 2, 2, 88, 2, -140, -469,
	2, 88, 2, 48, 500, -641, 189, 2, 543, 2,
	543, 2, -292, -292, -292, 357, 504, 281, 590, -323,
	-323, -323, -324, -329, 469, 525, 554, 466, -469, 2,
	-660, 2, 195, 189, 2, 524, 240, 524, 240, 124,
	195, 77, 124, 29, 524, 463, 630, 4, -270, 633,
	-296, -249, -415, -548, -416, -415, -250, -249, -252, 189,
	415, 563, 328, 485, 266, -446, -445, 29, -469, -450,
	183, 327, -469, -448, -471, 618, 619, -540, -542, -398,
	355, -243, -243, -243, -385, -496, -469, 404, 240, -521,
	-519, -519, -321, -549, 536, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, 282, 228, 487, 53, 231, -469, 540, -469, -469,
	-469, -469, 320, 344, 351, 550, 174, 560, 143, 355,
	-674, 518, 42, -476, -244, -403, 628, -490, 36, 498,
	29, -483, 628, 2, -464, -469, -465, -349, -347, -292,
	618, 619, 620, 621, 622, 623, 608, 609, 610, 14,
	15, 16, 613, 617, 615, 616, 187, 99, 612, 297,
	459, 90, 177, 178, 179, 180, 264, 265, 17, 18,
	19, 35, 611, -400, -399, -399, 629, 578, 29, 143,
	620, 2, 629, 633, 39, 629, -469, -400, -482, -478,
	-399, -489, -488, 587, -436, -437, 595, 306, 127, 222,
	304, -438, 472, -543, 8, -549, 620, -600, 182, 214,
	628, 629, 2, 629, 2, 629, -469, 2, 629, -469,
	2, 629, -469, 2, 629, -469, 2, 629, 2, 629,
	2, -469, -469, -469, -469, -469, -469, -469, -399, 8,
	-543, -543, 536, 536, -543, -543, -543, -535, 391, 392,
	393, 394, 284, 285, 286, 287, 395, 396, 397, 398,
	312, 313, 314, 315, 308, 309, 310, 311, 316, 317,
	318, 319, 205, 206, 207, 208, 201, 202, 203, 204,
	-535, -430, 2, -537, -399, 4, 595, 306, 127, 222,
	304, 472, 5, -430, 2, -431, 2, -469, -399, -432,
	-470, -471, 618, 619, 611, -348, -433, 2, -469, -400,
	-469, 60, 276, 542, -434, -469, 195, -399, -399, 2,
	-399, 2, -472, 2, -597, 39, -399, -391, 633, 195,
	39, 4, -391, -391, 628, 629, 633, -429, 218, 300,
	295, 254, -429, -500, -428, 261, -426, 372, -426, -426,
	-494, -307, 626, 634, -549, -494, -493, -492, 39, -316,
	369, -494, -494, 630, 629, -493, 627, -612, 628, 631,
	631, 631, 631, 631, -323, 628, -399, -549, 630, 506,
	2, 629, 255, 255, 255, 255, 255, 362, 458, 629,
	540, -616, -332, -336, 525, 2, 590, -110, 364, 629,
	633, -390, 38, 626, 630, -543, 2, 2, -538, 580,
	628, 628, -437, 628, 195, -616, -336, 525, 2, -621,
	-389, -389, 540, -292, 2, -323, -397, -270, 159, -397,
	-397, -270, 633, 159, -306, -327, -332, -334, -336, -292,
	-554, -556, -270, -328, -648, 629, 544, -456, -350, 415,
	497, 438, 476, 520, 9, 9, 633, -549, -215, 467,
	328, -305, -305, -305, -305, 633, -649, 97, 540, 81,
	628, 468, -285, 290, 540, -460, 224, 81, -571, 97,
	-309, -572, -292, 75, 559, 404, 193, 157, -649, 97,
	404, -649, 97, 2, 242, 97, 481, 504, 628, 29,
	63, -505, 43, 43, 29, -629, -630, 277, 195, 596,
	524, 240, 468, 540, 540, -505, -423, -519, 122, 301,
	302, 63, -544, -544, 63, -544, -544, -544, 590, -326,
	-505, 468, 540, 540, 540, 425, 515, 425, 515, -278,
	-154, 540, 540, 29, -200, 445, 131, -672, 610, 425,
	277, -630, 540, 195, 633, 43, 43, 29, -629, 195,
	540, -345, -307, 574, 44, 574, 44, 574, 540, 44,
	468, 540, 633, 44, -261, -617, -617, -222, -221, -292,
	5, -388, -264, -558, -263, 326, 77, 540, 540, -15,
	481, -623, -297, 109, 334, 294, 335, 101, 331, 100,
	330, 107, 332, 108, 333, 581, 347, 582, 348, 66,
	329, 305, 336, 501, 337, 583, 349, -298, -299, 150,
	383, 572, 124, -554, -15, -15, 481, 377, 437, 159,
	-646, 231, 29, -635, 231, -513, 231, -513, -337, -292,
	630, -140, -469, -469, -140, -469, -140, 48, 159, 159,
	2, 2, -668, 270, 628, -354, 344, 195, -388, -514,
	252, 633, -396, -614, 159, -554, -422, -421, 344, -328,
	224, 2, 159, -378, 344, 153, 628, 413, 2, 159,
	-308, 224, -293, -292, -441, -272, 528, 159, -419, 570,
	-451, -140, 628, 131, 39, -451, -408, -409, -511, -410,
	-309, 628, -316, -466, -111, -515, 629, 629, 629, -222,
	366, -235, -379, -310, -309, 123, 417, 417, -229, 590,
	-136, -137, 629, 633, -513, 231, 507, -137, -558, -223,
	-223, -513, -513, -323, 189, -558, -223, -223, -223, 2,
	2, 2, 2, -425, -323, -306, -345, -323, 29, 630,
	-556, -556, -336, -332, -425, -306, -425, -306, -425, -306,
	-425, -425, -140, -469, 504, 2, 478, 189, 189, 630,
	-425, 8, -381, 447, 5, 2, 413, 124, 524, 381,
	240, -323, -345, -323, -345, -306, 124, -306, 125, -323,
	4, -505, -416, -250, 363, 266, 485, -448, -449, -471,
	457, 458, -449, 457, 458, 8, 9, 8, 9, -254,
	489, 350, -397, 633, -259, 40, 139, 266, -323, 596,
	155, -469, -469, 540, -674, 518, -476, 155, -469, 320,
	351, 550, 174, 560, 143, 355, 195, 628, -470, -470,
	629, -401, -469, -469, 627, 636, 629, 630, 629, -384,
	633, -382, -469, -399, -399, 629, 630, -399, -388, 627,
	627, 633, 629, -487, -488, 148, -469, 540, 540, 540,
	540, 628, 629, 630, -605, 373, 628, 628, -469, 629,
	629, 629, 629, 39, 633, 633, 633, 629, 633, 633,
	633, 629, 629, 629, 633, 629, 596, 596, 629, 629,
	629, 629, 633, 629, 633, 629, 195, 629, 629, -439,
	388, 629, 11, 12, 618, 619, 620, 621, 187, 622,
	623, 616, 617, 615, 608, 609, 610, 90, 297, 459,
	14, 15, 16, -348, 255, 231, -470, -470, -470, -470,
	629, -474, -475, 195, 189, 39, -434, -434, -434, 629,
	195, -399, 629, 629, 628, -598, 299, 344, 629, -463,
	-462, 588, -510, -392, 2, -500, -318, -549, -463, -463,
	-399, -469, 261, 261, -427, 570, 362, -429, -500, -493,
	-545, -468, -467, 191, 40, 139, 338, 339, 340, 227,
	192, -493, -316, -378, -493, -493, -549, -494, -494, -492,
	629, -613, -545, 629, -393, -503, -592, -384, 630, -549,
	-232, -593, -201, 5, 351, -201, -201, -201, -201, -323,
	-556, 540, 540, 231, 26, 389, -519, 626, 627, 8,
	-549, 628, -543, -543, -543, -556, 195, 195, 231, 362,
	195, -554, 2, -270, -397, -270, -270, -345, -346, -270,
	-270, -270, -420, 590, -546, -455, 557, 86, 415, 536,
	-546, 121, 467, -266, 437, 481, -309, -309, -323, -239,
	-238, -236, -292, 5, -333, 209, 426, -554, 344, -460,
	224, -271, 344, 224, -317, -519, 628, -443, 592, 266,
	266, 570, -309, -317, 266, 224, -309, 224, -317, 2,
	-317, -624, 415, 356, -469, -237, -236, 63, -361, 288,
	413, 345, -267, 437, 481, 377, -140, -140, -140, 628,
	-648, 570, 142, -323, -345, -323, -333, -554, -328, 481,
	377, 437, 341, -339, -544, -544, -421, 481, 377, 437,
	-333, -554, -326, -554, -277, 224, -292, 425, -277, 224,
	425, 468, -306, 425, 596, 47, -672, 540, 195, -469,
	-469, -268, -140, -140, -140, 628, -307, -269, 437, 5,
	224, -309, 5, -309, 224, 5, -292, -309, -333, -554,
	-652, 25, 147, -309, -223, 633, 610, 610, -265, 610,
	-333, -554, -297, 383, -558, 351, 566, -306, -622, -313,
	468, 540, 540, -505, -642, -643, 211, 450, 468, 453,
	-556, -136, -226, 590, -136, -220, 235, 620, -619, -558,
	-292, 579, -292, -352, -355, -353, -309, -461, -460, -575,
	-576, -571, 282, 240, 559, 254, 175, 97, -240, -241,
	592, 590, 159, -343, -323, 626, -223, -558, -323, -514,
	-334, -335, 159, -378, 344, -554, 39, 159, 628, 2,
	2, -327, 362, 344, -308, 224, -273, 149, -672, -306,
	-463, -392, -418, -453, 447, 362, -379, 575, -316, -418,
	-394, 633, 195, 610, 630, -379, -509, 620, -111, -111,
	-223, 628, 628, -558, 629, 633, 630, 628, 610, 610,
	-231, 366, -230, 151, 268, 253, 491, 492, 493, 494,
	141, 490, 128, 325, 236, 530, -513, -558, -229, -137,
	195, -513, 231, 195, -70, 590, 524, -223, 632, 453,
	-292, -425, -425, -425, 478, 478, -292, 189, -388, -319,
	-549, -306, -323, -320, -345, 189, 189, -306, 563, -449,
	363, 293, -496, -260, 598, -323, 632, -469, -469, 155,
	155, -469, -470, -470, -469, 155, 195, 628, -469, -480,
	34, 34, 629, 633, -465, -469, -347, 629, 578, -384,
	-384, 629, 620, -549, 632, 629, -478, 152, -469, 534,
	306, 222, 304, -438, 304, -438, -438, -543, 5, -549,
	620, -606, -312, 628, -292, 588, -383, 368, 629, -521,
	-519, -469, -469, -469, -469, -469, -543, -524, -524, -539,
	-539, -469, -474, -469, -521, -519, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, 143, 344, 355, -470,
	-475, -474, -469, -469, -519, 629, 629, 629, -399, -110,
	628, 299, -412, 214, -469, -513, 633, -412, -412, 629,
	-500, -500, 628, -469, 261, 627, 633, 635, 610, 610,
	-378, 630, -492, -493, 627, 629, 633, 629, 633, -452,
	39, 629, -549, -463, -234, -233, 140, 56, 111, 138,
	351, 255, -644, 590, -556, -556, 468, 365, 5, 8,
	626, 627, 630, -543, 629, 629, 629, -556, -556, 468,
	-614, 553, 468, 29, -556, -270, -270, 123, 328, -469,
	-212, 590, 592, 540, 540, 629, 633, 610, 63, 231,
	159, 344, 572, 344, -572, 157, -577, -469, 628, 240,
	628, 628, 2, -256, -257, -258, 147, 481, 25, -650,
	2, 570, 159, -270, 159, -270, 594, 629, 633, -361,
	628, 628, 540, 468, -285, 540, 590, -399, -469, -224,
	131, -548, -631, 632, -631, 632, 468, 540, 540, 468,
	540, 540, 344, -292, 159, -292, 590, 173, 173, 596,
	-277, -469, -469, 189, 540, 590, -399, 540, -523, 51,
	27, 344, -327, -270, 159, 540, 540, 553, 481, -221,
	-558, -558, -136, -558, -558, 351, -15, -333, -554, -328,
	481, 377, 437, -621, -621, 211, -336, -646, -513, -228,
	366, -227, 151, 449, 141, 268, 236, -513, -226, 195,
	252, 590, -328, 2, 629, 629, 633, 633, -578, -271,
	-323, -308, 240, 240, -315, -293, 39, 359, 359, 628,
	-323, -91, 590, -512, -545, -625, 590, 45, -326, 39,
	159, -622, -140, -328, -517, -518, 5, 39, -323, 159,
	362, 344, -274, 275, -672, -553, -593, -384, -418, -407,
	345, 95, 629, -463, -409, -392, -469, 2, 629, -222,
	-558, -223, -235, -310, 2, -559, -558, -558, 633, 628,
	610, 610, 610, 610, 610, 610, 610, -229, -513, -136,
	-229, -137, -140, 366, -323, 620, -425, 5, -367, -366,
	381, 355, -367, 457, 457, 363, 183, 271, -259, -307,
	-469, -469, 155, 34, 34, -469, -469, -480, 629, -469,
	-469, -399, 627, 5, -469, 629, 629, 8, -469, 629,
	630, -607, -292, -469, 629, 63, 629, 629, 633, 633,
	629, 629, 629, 629, 629, 629, 629, -475, 195, 143,
	355, 628, 629, 629, -110, -477, 217, 63, -500, -477,
	-477, -427, -388, -500, -467, -307, 626, -307, 626, -549,
	-545, -503, 628, 630, -233, 610, -558, -558, -201, 211,
	-644, -644, 590, -336, 627, 2, 626, -549, 629, -336,
	195, -616, -336, 525, 123, 189, 221, 221, -309, -309,
	-238, -546, 524, 457, -277, 404, -460, 159, 159, -579,
	97, -581, 79, 175, 106, 344, 351, 559, 404, 75,
	131, 362, 422, -662, -663, -664, 39, 601, 602, 629,
	-386, -497, -592, 628, -292, -386, -388, 344, 512, 131,
	362, 344, 131, 362, 585, 123, 2, 553, 82, -309,
	-317, -236, -388, -388, -323, -333, -554, 167, 629, 633,
	610, 2, 620, 620, -333, -554, -328, -333, -554, -326,
	159, 575, -277, 379, 173, 540, -140, -469, 167, 629,
	-307, 5, 5, 159, -304, 79, -309, 5, -309, -327,
	123, 590, 468, 540, 540, 362, 362, 365, -642, -643,
	-226, 633, 628, 610, 610, 610, -226, -559, -136, 2,
	-378, -368, 242, -309, -576, -573, -574, 404, -461, -580,
	-582, 175, 404, -356, 628, -308, -293, 628, -140, 2,
	-239, 628, -354, 366, 627, -627, 366, -626, 121, 141,
	-554, -422, -140, -328, -376, 590, -378, 629, 633, 153,
	-444, 570, -307, -323, 159, -275, 274, -672, -553, -272,
	-447, -445, 144, 628, 362, -140, -384, 610, 629, 629,
	123, 629, -230, -231, -558, -136, -558, -558, -558, -136,
	-558, -229, -513, -513, -71, -72, 240, 97, 386, -320,
	524, 240, 628, 628, -259, -469, -469, -469, 629, -384,
	-549, 620, -601, 381, 629, -496, -469, -469, -470, 195,
	628, -480, 629, -602, 589, -469, -413, -414, -469, 455,
	112, 215, -602, -602, 629, -545, -545, 2, -558, 365,
	2, 540, 626, 2, 195, -556, 195, 195, 231, -140,
	231, 39, 425, -460, -317, -317, -321, -314, -292, 175,
	224, 351, 585, -443, 266, 628, -470, 563, -323, 628,
	2, 223, 223, 31, 63, -665, 135, 244, 629, 633,
	-498, -303, -292, -469, -498, 629, 629, 351, 563, 351,
	585, -469, 563, -519, 628, -270, -270, 629, 629, -469,
	540, -548, 104, -546, 2, -631, -277, -388, -306, -469,
	189, -469, 540, 5, -270, -321, -270, -270, -304, 553,
	361, -333, -554, -328, -647, 525, 475, 554, 469, 198,
	456, -647, 189, -227, -228, -558, -136, -136, -226, 39,
	-362, -363, 2, -578, 266, -314, 266, 233, 158, -386,
	628, 628, -388, -661, 590, 629, -352, -240, -92, -93,
	541, -512, 633, 628, 610, -378, 328, 123, 39, 5,
	628, 628, -292, 362, 628, -307, -287, 96, -672, -553,
	-273, -418, 345, -388, 97, -447, -476, -223, 628, -223,
	629, -229, 633, 29, 628, 29, 628, -323, -345, -399,
	-399, 629, -384, 63, 633, 629, 629, -470, -480, 629,
	-603, -604, -312, 633, 628, 628, 482, 627, 627, -556,
	2, -556, -556, -556, 468, -277, 404, -292, -572, -581,
	-314, 344, -241, 570, 590, -469, -470, -294, 628, -469,
	628, 628, 39, 131, 244, 136, 229, -459, -666, 105,
	513, 232, -497, -259, 629, -458, 570, 422, -470, -304,
	-386, 628, 628, 628, 610, 195, -140, 628, -523, -270,
	-327, 610, 540, 2, 2, 195, -621, 629, -637, 420,
	-140, -240, 628, -241, -357, 84, 98, 132, 223, 199,
	241, 504, 510, 29, -357, 629, -386, -386, 629, -358,
	362, 123, 328, 629, 39, -93, 9, -626, -627, -469,
	39, 123, -140, -517, -386, -323, -386, 362, -279, -278,
	283, -553, -274, 629, -317, -418, -559, -72, -388, -388,
	629, 629, -608, 413, 458, 216, -399, -385, 629, 633,
	39, -414, 2, 2, 2, -644, -336, 425, -271, 159,
	218, 629, -583, 298, -292, 629, -422, -422, 39, 136,
	229, -364, -360, 628, -260, -498, -241, 218, -323, -632,
	570, 629, -370, -369, -366, -372, -371, -366, -399, -546,
	104, 379, -399, -304, -136, -556, -556, 362, -639, 196,
	-638, 5, 10, -358, -387, -499, -309, -458, 629, 629,
	85, 123, -368, -140, 629, -140, 2, -376, 629, 629,
	-444, 629, -323, -276, -560, 425, 427, -672, -275, -463,
	144, 629, 629, 629, 629, -609, -610, 53, 556, 113,
	-469, -609, -609, -604, -606, 195, 175, -457, 599, -584,
	-587, -586, 606, 488, 196, 380, 629, 512, 584, 629,
	629, -665, -388, -457, -378, -469, -458, 629, 633, 575,
	629, 633, 575, 629, 195, 629, -270, -644, -270, -647,
	-225, 590, 48, -286, -285, 629, 633, -459, -458, -364,
	403, 137, 147, -362, -661, -458, 628, -459, 628, -284,
	-283, -672, -539, -287, 144, 345, 563, -223, -611, 157,
	-610, 400, 188, 457, 400, 188, -611, -611, -556, -314,
	-241, 58, -586, 606, -587, 606, 563, 137, -463, 629,
	-583, -241, -369, 231, -371, 195, 379, 195, 465, -638,
	31, -241, -499, -364, -459, -241, 458, 458, 2, -240,
	-358, -459, -386, -364, -386, -280, -281, -282, -388, -279,
	345, 563, 481, 113, 214, 535, 328, 34, 610, -585,
	328, 444, 67, 481, -585, -584, 628, 628, -556, 366,
	-241, -364, -463, 2, -358, -364, 629, -241, 629, -555,
	377, -276, 481, -408, 457, 370, -610, -469, 24, 351,
	131, -665, -399, -399, -270, -222, 628, -463, -241, -286,
	-241, -458, -463, -459, -672, -284, -408, -463, 629, 629,
	-222, -463, -463, -459, -364, -554, -280, -463, -359, -360,
	540, 629, -364, -241, 628, -241, -463, -399, -463, 629,
	-359,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 584, 585, 587, 588,
	589, 591, 592, 594, 596, 598, 599, 600, 602, 603,
	605, 606, 607, 608, 609, 611, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 700, 702, 0, 1539, 1541, 1543, 1545, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	361, 363, 365, 367, 0, 399, 401, 402, 404, 406,
	407, 408, 410, -2, 0, 517, 518, 520, 522, -2,
	0, 1124, 1126, 1128, 0, 688, 690, 0, 1131, 1133,
	1135, 0, 0, 712, 713, 0, 1653, -2, 704, 706,
	708, 710, 787, 789, 791, 793, 795, 797, 799, 801,
	803, 805, 806, 808, 810, 812, 814, 816, 817, 819,
	821, 823, 824, 826, 827, 829, 831, 833, 835, 837,
	839, 841, 843, 845, 847, 849, 851, 853, 855, -2,
	858, 859, 860, 862, -2, -2, 0, -2, -2, -2,
	1557, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 461, 463, 465, 467, 469, 472, 474,
	476, 1711, 524, 526, 528, 530, 532, 534, 536, 0,
	0, -2, 1725, 0, 0, 944, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 125, 126, 127, 128,
	129, 130, 131, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 122, 123, 84, 0, 0, 1684, 1686, 1688,
	1690, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 33, 35, 37, 39,
	586, 590, 593, 595, 597, 601, 604, 610, 612, 614,
	569, 570, 573, 2423, 2441, 2442, 2443, 2446, 2447, 2448,
	2449, 2450, 2451, 2932, 3013, 3014, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746,
	2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756,
	2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766,
	2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776,
	2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786,
	2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796,
	2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806,
	2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816,
	2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826,
	2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836,
	2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856,
	2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866,
	2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876,
	2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886,
	2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896,
	2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906,
	2907, 2908, 2909, 2910, 2911, 571, 572, 1318, 0, 653,
	651, 2408, 654, 2718, 656, 658, 511, 512, 513, 514,
	515, 516, 0, 681, 667, 1723, 682, 684, 685, 686,
	687, 648, 646, 0, 686, 681, 2478, 679, 1537, 1538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 440, 1377, 1378, 1379, 1522, 1523, 2769, 1564, 0,
	257, 701, -2, -2, 2897, -2, 741, 742, -2, -2,
	756, 760, 751, 2901, 0, 2772, 2755, -2, 763, 1540,
	1542, 1544, 863, 864, 865, 2427, 869, 867, 879, 880,
	883, 0, 900, -2, 0, 2474, 2740, -2, -2, 901,
	902, -2, -2, -2, -2, 881, 882, 0, 0, 0,
	0, 0, 44, 46, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, -2,
	-2, -2, -2, 0, 0, 2820, 2533, 2376, 2443, 2379,
	2374, 362, 364, 366, 368, 369, 0, 0, 0, 0,
	0, 0, 0, 400, 403, 405, 409, -2, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1198, 1190, 1191, 1444, 0, 0, 0, -2, 519,
	521, 574, 575, 0, 1712, 1712, 582, 583, -2, 0,
	0, 0, 0, 332, 322, 1125, 1127, 1129, 1130, 0,
	0, 0, 0, 0, 689, 691, 0, 0, 2814, 299,
	1132, 1134, 1136, 1137, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 705, 707, 709, 711, 788, 790, 792,
	794, 796, 798, 800, 802, 804, 807, 809, 811, 813,
	815, 818, 820, 822, 825, 828, 830, 832, 834, 836,
	838, 840, 842, 844, 846, 848, 850, 852, 854, 856,
	857, 908, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 1013, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 1104, 0,
	0, 911, 914, 915, 916, 917, 918, 919, 0, 986,
	1011, 1012, 1022, 861, 0, 1358, 1713, 1566, 1547, 1561,
	1566, 1549, 1550, 1551, 1552, 1553, 1558, 1560, 1554, 1555,
	1556, 50, 52, 54, 56, 58, 60, 62, 64, 66,
	68, 70, 72, 462, 464, 466, 468, 470, 473, 475,
	477, -2, 1682, 1683, 525, 527, 529, 531, 533, 535,
	537, 692, 0, 695, 0, 913, 694, -2, 0, 1717,
	1717, 1717, 0, 0, 1683, 1681, 0, 698, 699, 767,
	768, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	2250, 2078, 0, 769, -2, 2111, 2113, 2872, 2691, 2897,
	2249, 2115, 2116, 2117, 2118, 2119, 0, 2121, 2122, 2123,
	2124, 2125, 2126, 0, 2128, 0, 2133, 2134, 2135, 0,
	2879, 2353, 2437, -2, 0, 0, 2885, 2433, 0, 2216,
	2151, -2, -2, 2460, 2439, 1922, 1923, 1924, 1925, 1926,
	-2, -2, 2915, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 0, 2860, 2880, 2881, 2886, 2888,
	2882, 2869, 2176, 2547, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1949, 1958, -2,
	-2, -2, -2, -2, -2, -2, 2873, 2874, 2891, 2894,
	2900, 2905, 2906, 2878, 2887, 2914, 2916, 2917, 2918, 2919,
	2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929,
	2930, 2931, 1950, -2, -2, -2, -2, 0, 1700, 2733,
	1703, 1318, 1701, 1685, 1687, 0, 1689, 0, 0, 0,
	1694, 1720, 1718, 0, 1769, 1698, 1699, 1792, 1792, 1816,
	0, 1797, 0, 1816, 1712, 1843, 0, 1803, 2760, 2152,
	2153, 0, 2443, 2438, -2, -2, 2912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 649, 0,
	655, 657, 0, 0, 0, 680, 1722, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 444, 445, 446, 447,
	2880, 0, 0, 0, 452, 0, 454, 455, 456, 457,
	458, 459, 460, 227, 2880, 542, 567, 0, 227, 2880,
	545, 227, 2880, 548, 0, 551, 1442, 227, 2880, 554,
	2404, 227, 2880, 557, 559, 2412, 227, 2880, 563, 2419,
	2417, 564, 0, 566, 247, 243, 244, 245, 246, 1533,
	1534, 1535, 1536, 0, 1563, 1443, 703, 0, 729, 0,
	739, 740, 2868, -2, 0, 2781, 744, 745, -2, 747,
	1567, 1571, 1572, 1573, 1574, 1575, 0, 0, 0, 0,
	1580, 0, 0, 0, 0, 736, 737, 754, 755, 761,
	764, 0, 872, 868, 884, 0, 899, 0, 900, 900,
	2393, 2384, 2385, 0, 0, 900, 900, 0, 0, 903,
	904, 905, 906, 907, 83, 0, 2880, 1843, 85, 0,
	2398, 2468, 2469, 2470, 2471, 2472, 2913, 2933, 2934, 2935,
	2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945,
	2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955,
	2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965,
	2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
	2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985,
	2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995,
	2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005,
	3006, 3007, 3008, 3009, 3010, 3011, 3012, 2915, 89, 0,
	2880, 94, 0, 2880, 0, -2, 109, 0, 124, 0,
	151, -2, -2, -2, 132, 0, 2880, 0, 2373, -2,
	0, 239, 323, 324, 325, 0, 630, 0, 639, 335,
	336, 2456, 2457, 2464, 2465, 2466, 2467, 0, 732, 2250,
	0, 0, 1162, -2, 0, 1371, 1373, 1373, 0, -2,
	0, 0, 0, 1114, 2370, 2375, 1115, 1116, 2394, 1117,
	2380, 0, 370, 371, 372, 373, 374, 0, 375, 2880,
	377, 378, 0, 380, 381, 2880, 383, 384, 0, 386,
	0, 388, 0, 279, 283, 2880, 2880, 413, 416, 0,
	418, 419, 0, 421, 0, 0, 0, 425, -2, 441,
	0, 438, 428, 429, 431, 432, 433, 434, 435, 0,
	481, 479, 2409, 0, 0, -2, 2880, 0, 1159, 0,
	0, 1422, -2, 0, 1364, 0, 1429, 2880, 1425, 0,
	-2, 0, 1710, 2880, 1584, 1194, 1195, 1196, 1197, 1855,
	508, 0, 1617, 0, 1619, 0, 1639, 1849, 1792, 0,
	0, 1854, 0, -2, 627, 2426, -2, 577, 0, 578,
	0, -2, 0, 349, 0, 0, 1140, 1142, 1143, 1145,
	1146, 1149, 1150, 1151, 1152, 0, 1154, 1829, 300, 302,
	0, 0, 0, 0, 1139, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 0, 0, 714, 0, 0, 909,
	910, 0, 0, 926, 927, 928, 0, 349, 2773, 2728,
	2569, 935, 0, 938, 941, -2, 0, 0, 0, 0,
	948, 0, 953, 954, 955, 0, -2, 0, 962, 964,
	1123, 966, 0, 0, 968, 0, 972, 0, 975, 0,
	977, 0, 979, -2, -2, -2, 987, 988, -2, 993,
	-2, 0, 997, -2, 0, 1000, 0, 1003, -2, 0,
	1013, 1009, 1010, 0, 0, 0, 0, 1030, 1031, 0,
	1040, 0, 1043, 1044, 1045, 0, 0, 1050, 1051, 0,
	1053, 1054, 1055, 1057, 1058, 1059, 0, 2849, 2778, 2533,
	0, 1067, -2, 1073, 1075, 0, -2, 0, 1091, 0,
	1095, 0, 0, 1103, 0, 0, 912, 0, 920, 921,
	227, 1847, 1546, -2, 1548, 0, -2, 0, 693, 0,
	697, 1742, 1668, 1665, 0, 1739, 1740, 1669, 0, 0,
	0, 1676, 0, 1715, 1716, 0, 0, 0, 1655, 1656,
	0, 0, 0, 0, 2255, 2256, 2257, 2258, 2271, 2259,
	2260, 2270, 2268, 2269, 2261, 2262, 2267, 2281, 2282, 2272,
	2273, 2263, 2276, 2274, 2275, 2277, 2278, 2279, 2280, 0,
	0, 2286, 0, 2264, 2265, 2266, 2294, 0, 0, 2295,
	0, 2297, 0, 2287, 2283, 2284, 2285, 0, 2057, 2059,
	2361, 0, 0, 0, 2293, 2288, 2289, 1995, 1996, 1997,
	1998, 1999, 2032, 2036, 2037, 0, 0, 2112, 2358, 2357,
	2114, 0, 0, 2309, 0, 2127, -2, 0, 2250, 2304,
	0, 0, 2136, 2137, 2138, 0, 0, 2309, 0, 0,
	2352, 2148, 2149, 1987, 0, 0, 2218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1936, 1935, 0, 1937, 0,
	1938, 1939, 1946, 1959, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 2333, -2, 0, 0,
	0, 0, 1951, 0, 0, 1702, 0, 0, 1773, 2362,
	2366, 2367, 1773, 1773, 0, 0, 2310, 1840, 1840, 0,
	0, 1835, 1835, 1835, 1833, 1816, 0, 1816, 1826, 0,
	1816, 1816, 0, -2, 1797, 0, 0, 1826, 0, 1810,
	615, 617, 619, 621, 622, 623, 625, 1844, 1845, 0,
	0, 0, 0, 2444, 0, 0, 0, 0, 2416, 0,
	0, 2429, 0, 0, 2403, 395, 396, 0, 0, 0,
	2831, 2772, 0, -2, 660, 683, 1712, 0, 2312, 1870,
	1874, 0, 1876, 1877, 1878, 1879, 1880, 0, 0, 1871,
	-2, 1947, 1949, 1970, 2461, 2462, 2463, 1930, 1931, 1932,
	1933, 1934, 1942, 1929, 1929, 1929, 1940, 1969, 1961, 1969,
	1965, 1915, 1916, 1917, 1952, 1953, 1954, 1955, 0, 2831,
	2772, 0, -2, 0, 670, 0, 0, 1650, 442, 0,
	449, 450, 451, 0, 538, 0, 225, 226, 0, 227,
	2880, 543, 0, 546, 0, 227, 2880, 2368, 552, 0,
	555, 0, 0, 561, 0, 0, 0, 0, 0, 227,
	1652, 0, 0, 0, 0, -2, 749, 757, 758, 759,
	0, 1569, 0, 1576, 778, 779, 780, 1578, 1579, 0,
	1581, 752, 781, 782, 783, 784, 785, 786, 0, 2382,
	2383, 2388, 2389, 0, 0, 750, 771, 753, 0, 765,
	875, 870, 871, 885, 886, 0, 0, 2386, 2387, 0,
	0, 891, 892, 133, 1519, 0, 0, 180, 0, 1519,
	1519, 0, 0, 0, 0, 208, 0, 0, 1228, 0,
	0, 0, 0, 151, 165, 176, 145, 146, 147, 0,
	0, 0, 0, 0, 0, 95, 1340, 0, 1343, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 111, 112, 0, 0, 117, 118, 0, 164,
	0, 0, 0, 0, 0, 1614, 0, 155, 151, 0,
	0, 150, 152, 135, 0, 0, 151, 166, 178, 0,
	214, 216, 1225, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 249, 0, 629, 631, 0, 0, 0, 0,
	637, 0, 640, 0, 730, 734, 735, 0, 0, 731,
	733, 0, 0, 1365, 0, 0, 0, 1709, 0, 0,
	0, 0, 2880, 1517, 0, 1502, 0, 1829, 2620, -2,
	-2, 300, 1829, 1113, 0, 0, 2444, 2378, 0, 0,
	0, 0, 0, 0, 387, 0, 0, 0, 0, 417,
	420, 422, 423, 424, 0, 1421, 0, 430, 471, 1287,
	2880, 0, 0, 498, 493, 0, 495, 0, 0, 0,
	1339, 2880, 1337, 2413, 0, 1362, 0, 1318, 2880, 2411,
	0, 0, 0, 1430, 2453, 1439, 1443, 1602, 0, 510,
	0, 1620, 1622, 0, 0, 1850, 0, 1852, 1792, 1712,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 1153, 306, 0, 1828, 0, 0, 337, 1829, 300,
	2746, 0, 1138, 349, 349, 1829, 716, 1829, 718, 0,
	0, 929, 930, 0, 349, 349, 349, 936, 937, 939,
	940, -2, -2, -2, -2, 942, 943, 1037, 0, 0,
	0, 1036, 956, 0, 958, 961, 965, 0, 1107, 2755,
	2772, 2831, 1121, 1037, 2533, 1037, 2533, 1037, 2533, 1037,
	1037, 981, 1025, 1033, 992, 999, 0, 994, 998, 1001,
	1004, 0, 1006, 1014, 0, -2, 0, 1017, 0, 1019,
	0, 1021, 1037, 1038, 1041, 0, 1049, 1052, 0, 1060,
	1061, 1062, 1063, 2424, 1064, 1065, 1066, -2, 1070, 1071,
	0, 1082, 1087, 1088, 1084, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 0, 1106, 0, 922, 1357, 0,
	1559, 1742, 1668, 696, 1659, 1741, 1660, 1667, 1670, 0,
	0, 1672, 0, 1674, 0, 1737, 1738, 1745, 1746, 0,
	1756, 1757, 1749, 0, -2, 0, 0, 1752, 1753, 1678,
	0, 1695, 1696, 1697, 1726, 1729, 1458, 0, 3013, 1991,
	1865, 1992, 1993, 2397, 0, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, -2, -2, -2, -2, -2,
	-2, -2, -2, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, -2, -2, -2, 2033, 2034, 2035,
	-2, 2296, 2298, 0, 2361, 0, -2, 0, -2, -2,
	-2, -2, 2054, 0, 2056, 2061, 2063, 2065, 0, 0,
	0, 0, 2360, 2075, 2344, 2345, 0, 0, 2252, 2253,
	2254, 2060, 0, 2079, 2359, 2356, 0, 0, 2290, 0,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 0, 2308, 1725, 2140, 0, 0, 0,
	0, 2147, 2132, 2306, 0, 2305, 0, 0, 0, 2316,
	0, 2351, 2347, 0, 2395, 1986, 1973, 1974, 1975, 1976,
	1977, 1978, 1988, 0, 2392, 2430, 2436, 2226, 0, 0,
	0, 2177, 2178, 2179, 2180, 2181, 0, 2183, 2184, 0,
	2186, 2187, 0, 2189, 2190, 0, 2192, 2193, 2194, 2195,
	2196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	0, 0, 2198, 0, 2319, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2200, 0, 2202, 2310, 2330, 0,
	0, 2080, 0, 0, 0, 0, 0, 2205, 2310, 2338,
	0, 0, 0, 0, 0, 2310, 0, 2343, 0, 2212,
	0, 2214, 945, 946, 1704, 0, 0, 1860, 0, 0,
	0, 2365, 1860, 1860, 0, 1768, 0, 0, 1836, 1837,
	1838, 1839, 0, 0, 1840, 0, 1830, 1834, 1831, 1832,
	1826, 1789, 0, 0, 2399, 1826, 1795, 1825, 0, 1318,
	1815, 1826, 1826, 0, -2, 1799, 1816, 0, 0, 616,
	618, 620, 624, 626, 0, 0, 1725, -2, 0, -2,
	351, 1317, 0, 0, 0, 0, 0, 0, 650, 652,
	0, 0, 558, 0, 0, 666, 0, 644, 0, 647,
	0, 1861, 1864, 0, 0, 1875, 1881, 1882, 0, -2,
	0, 0, 1971, 0, 0, 0, 0, 0, 678, 0,
	681, 0, 0, 0, 453, 568, 227, 540, 0, 227,
	227, 549, 0, 0, 227, 560, 227, 2420, 227, 2418,
	248, 565, 1651, 260, 0, 738, 0, 1568, 1577, 0,
	775, 0, 777, 0, 2390, 2391, 0, 766, 0, 873,
	0, 887, 888, 889, 890, 0, 0, 0, 0, 1518,
	0, 0, 1465, 0, 0, 184, 2880, 0, 229, 0,
	0, 1280, 2405, 0, 1270, 0, 0, 2555, 0, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 148, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 1341, 1342, 1344, 1351,
	1353, 0, 1347, 1348, 0, 1350, 1352, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	1374, 0, 0, 1375, 1376, 1590, 1591, 0, 1613, 1614,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 2372, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 349, 634, 635, 345, 342,
	344, 636, 641, 0, 642, 0, 0, 0, 0, 1367,
	0, 1417, 1415, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 0,
	0, 0, 0, -2, 1369, 1370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 340, 2371, 2381,
	0, 1147, 1148, 376, 379, 382, 385, 266, 0, 0,
	415, 426, 0, 0, 1200, 1172, 0, 0, 480, 349,
	0, 0, 494, 498, 2422, 1157, 1335, 1338, 0, 1318,
	2880, 1385, 0, 0, 0, 0, 0, 0, 1428, 0,
	0, 2880, 2400, 2452, 2453, 1604, 1614, 0, 1860, 0,
	1637, 1623, 0, 0, 0, 1637, 1641, 1642, 1644, 1645,
	0, 0, 1851, 1857, 576, 628, 1712, 1712, 349, 347,
	2694, 0, 0, 1626, 1628, 0, 0, 0, 292, 0,
	303, 1829, 301, 0, 306, 0, 0, 1829, 300, 0,
	492, 715, 720, 924, 0, 349, 932, 933, 934, 983,
	1027, 1035, 1086, 947, 949, 950, 951, 0, 0, 0,
	1122, 1118, 1119, 1120, 967, 1037, 970, 1037, 973, 1037,
	976, 978, 996, 1002, 1015, 1008, 1016, 0, 0, 0,
	1029, 0, 1047, 0, 1056, 1069, 0, 0, 0, 0,
	0, 0, 0, 1092, 1093, 1094, 1096, 1101, 1100, 1105,
	923, 1848, 1663, 1664, 1666, 0, 1675, 0, 0, 1751,
	-2, -2, 1750, 1754, 1755, -2, -2, -2, -2, 1671,
	0, 1680, 1677, 0, 1736, 1456, 1457, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 2076, 0, -2, 2055,
	2058, 2062, 2064, 2066, 0, 0, 0, 0, 0, 0,
	2299, 0, 2301, 2077, 2354, 2357, 2292, 0, 2248, 0,
	0, 1724, 1725, 1725, 0, 2146, 0, 2307, 0, 2314,
	2315, 0, 2139, 0, 2348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2150, 0, 0, 0, 0, 2182,
	2185, 2188, 2191, 0, 0, 0, 0, 2171, 0, 0,
	0, 2175, 1941, 1927, 0, 1969, 1967, 1968, 1962, 1969,
	1966, 1919, 0, 1918, 0, 2197, 0, 2199, 2201, 0,
	0, 2203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2083, 2084, 2085, 2105,
	2204, 2336, 2337, 0, 0, 0, 0, 0, 0, 2210,
	0, 2342, 2211, 2213, 1712, 0, 1705, 0, 1770, 1759,
	1859, 0, 2363, 1829, 1772, 1774, 2364, 2402, 1759, 1759,
	0, 2311, 0, 0, 1820, 0, 0, 0, 1822, 1793,
	0, 0, 1787, 0, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1794, 1318, 1824, 1796, 1800, 2430, 0, 1826, 0,
	1811, 0, 1813, 1846, 0, 1805, 1808, 0, 0, 2445,
	1860, 0, 389, 397, 398, 390, 391, 392, 393, 0,
	1505, 0, 0, 0, 0, 0, 2313, 0, 1866, 0,
	1872, 0, 0, 0, 0, 668, 0, 0, 0, 0,
	0, 1649, 448, 539, 227, 544, 547, 2369, 227, 553,
	556, 562, 256, 0, 728, -2, 773, 774, 776, 0,
	772, 878, 874, 181, 1519, 0, 0, 0, 1461, 0,
	1183, 0, 1178, 1179, 1463, 1467, 1473, 1476, 0, 186,
	2880, 198, 0, 2880, 0, 1244, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 2880, 227, 2880, 227, 202,
	204, 207, 0, 213, 209, 0, 1180, 0, 1232, 0,
	0, 1235, 134, 1519, 0, 0, 137, 141, 153, 0,
	0, 0, 163, 0, 0, 0, 1478, 1482, 1490, 0,
	0, 0, 1345, 1346, 1349, 1355, 96, 0, 0, 0,
	1486, 1488, 1494, 110, 113, 2880, 2414, 0, 115, 2880,
	0, 0, 1460, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 139, 143, 154, 0, 1496, 136, 0, 242,
	0, 0, 232, 227, 2880, 0, 234, 0, 235, 236,
	250, 0, 0, 0, 633, 0, 0, 0, 638, 0,
	1160, 1161, 1416, 0, 1360, 1361, 0, 1372, 1366, 0,
	0, 0, 0, 0, 1498, 1499, 0, 0, 0, 1517,
	1514, 1829, 262, 0, 1829, 270, 0, 2377, 0, 284,
	412, 0, 0, 0, 0, 1199, 1298, 1201, 1203, 1204,
	1205, 229, 0, 2453, 1270, 2609, 2453, 0, 0, 1167,
	0, 0, 0, 486, 482, 0, 491, 497, 496, 502,
	-2, 0, 0, 0, 0, -2, 0, 0, 1432, 1426,
	1427, 0, 0, 0, 0, 2880, 1606, 1614, 0, 1710,
	1725, 509, 1615, 1637, 0, 0, 0, 1625, 1621, 1618,
	1860, 0, 0, 0, 0, 0, 1853, 1856, 579, 580,
	326, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	304, 0, 307, 0, 0, 0, 312, 313, 314, 315,
	316, 317, 0, 0, 0, 0, 306, 338, 294, 1829,
	0, 306, 0, 0, 717, 0, 0, 931, 0, 957,
	960, 969, 971, 974, 1018, 1020, 1037, 0, 1048, 1076,
	2401, 1077, 1222, 0, 1222, 0, 0, 1097, 1673, 0,
	1748, 1679, 1730, 1731, 0, 1458, 0, 1994, 2039, 0,
	0, -2, 0, 0, 2043, 0, 0, 0, -2, 0,
	0, 0, 2300, 2302, 0, 2356, 2291, 2141, 0, 0,
	0, 2145, 2129, 2130, 0, 2251, 2317, 2346, 2350, 0,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 0, 2396, 2431,
	2435, 2224, 2225, 2229, 2410, 0, 0, 0, 2154, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 1964, 0,
	0, 2318, 2329, 2331, 2081, 2082, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, -2, -2, -2, 2099,
	2100, 2101, -2, -2, -2, 2106, 0, 0, 0, 2332,
	2334, 2335, 2339, 2340, 0, 2207, 2208, 2209, 2341, 0,
	1712, 1706, 1767, 0, 1858, 1771, 0, 1767, 1767, 1719,
	1818, 0, 0, 1842, 0, 1790, 0, 1791, 0, 0,
	1823, 0, 1798, 1801, 1802, 1812, 0, 1804, 0, 1807,
	0, 2141, -2, 350, 352, 354, 0, 357, 358, 0,
	0, 0, 659, 0, 1505, 1505, 0, 661, 645, 0,
	0, 1868, 0, 0, 1944, 1948, 1972, 672, 674, 0,
	0, 2831, 2772, 0, 671, 541, 550, 258, 0, 1827,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 228, 0, 1279, 0, 1242, 0, 0, 1269,
	0, 0, 1285, 188, 189, 190, 0, 0, 0, 0,
	200, 0, 0, 196, 0, 206, 212, 211, 0, 1229,
	0, 0, 0, 0, 1466, 0, 0, 0, 160, 161,
	162, 0, 167, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 1596, 1597, 0,
	1587, 157, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 1455, 252, 0, 0, 0, 0, 0, 346,
	341, 343, 0, 1359, 1419, 1420, 1368, 1479, 1483, 1491,
	0, 0, 0, 0, 0, 686, 1516, 0, 270, 268,
	0, 271, 0, 274, 275, 0, 0, 270, 264, 0,
	0, 0, 1318, 427, 1170, 1286, 0, 0, 1288, 1206,
	1210, 0, 2453, 2453, 0, 2407, 0, 1168, 0, 0,
	1287, 478, 0, 485, 0, 499, 0, 0, 1339, 0,
	0, 1363, 1388, 1318, 0, 1431, 1433, 0, 1441, 0,
	0, 0, 1608, 1614, 0, 1601, 1602, 1744, 1616, 1635,
	-2, 0, 0, 1725, 1643, 1640, 1646, 1647, 0, 0,
	0, 329, 0, 1627, 1629, 0, 1141, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 306, 1829,
	296, 1829, 333, 0, 925, 952, 1028, 1046, 1078, 1221,
	0, 0, 1080, 0, 0, 1747, 1734, 1735, 1732, 1458,
	2041, 2045, 0, 0, 0, 2047, -2, 0, 2069, -2,
	-2, 2303, 2355, 2120, 1725, 2142, 2144, 2131, 2349, 1989,
	0, 2231, 2228, 0, 2215, 0, 2166, 2167, 0, 0,
	2170, 2172, 2173, 2174, 1928, 1921, 1920, 2328, 0, 0,
	0, 0, 2206, 1707, 0, 2220, 0, 0, 1775, 2220,
	2220, 1819, 0, 1821, 1788, 1776, 0, 1785, 0, 2431,
	1814, 1806, 0, 0, 355, 0, 359, 360, 394, 0,
	662, 663, 0, 0, 1862, 1867, 0, 1873, 1943, 0,
	0, 0, 0, 0, 259, 0, 876, 877, 182, 183,
	1184, 1182, 1470, 1474, 1471, 0, 185, 0, 0, 1243,
	0, 1246, 0, 0, 0, 0, 1253, 1270, 0, 0,
	0, 0, 0, 0, 1272, 0, 1271, 0, 0, 1302,
	0, 1446, 1453, 0, -2, 0, 0, 0, 192, 218,
	0, 0, 0, 0, 221, 1520, 194, 0, 0, 227,
	227, 1181, 0, 0, 1462, 1464, 1477, 0, 0, 0,
	0, 170, 0, 0, 1480, 1484, 1492, 1487, 1489, 1495,
	0, 0, 116, 0, 1598, 0, 156, 0, 0, 0,
	1497, 240, 241, 0, 227, 0, 227, 233, 227, 1455,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 1501,
	261, 0, 0, 0, 0, 0, 263, 339, 270, 414,
	0, 1231, 0, 1298, 1290, 1291, 1292, 0, 1202, 1297,
	1299, 0, 0, 1207, 0, 0, 0, 0, 1187, 1169,
	0, 1200, 1172, 0, 483, 500, 0, 503, 0, 506,
	1158, 1336, 1380, 1318, 1383, 0, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 1610, 1614, 0, 1603, 1604,
	1637, 1743, 0, 0, 0, 1624, 1744, 0, 348, 349,
	0, 349, 308, 0, 309, 310, 311, 318, 319, 320,
	321, 295, 298, 306, 719, 721, 0, 0, 727, 1220,
	0, 0, 0, 0, 1733, 2049, -2, -2, 2070, 0,
	2432, 2434, 1725, 0, 2217, 1727, 0, 0, -2, 0,
	0, 0, 1708, 1691, 0, 1766, 1758, 1760, 1762, 2758,
	2528, 2879, 1692, 1693, 1841, 0, 0, 1809, 356, 1504,
	664, 0, 0, 1869, 0, 669, 0, 0, 0, 866,
	0, 0, 1472, 187, 0, 0, 1247, 1248, 2406, 1250,
	0, 1252, 1254, 1255, 1172, 0, 1259, 0, 2455, 0,
	1264, 1267, 1268, 0, 0, 1281, 1303, 0, 1312, 0,
	1448, 1458, 1452, 0, 1450, 1314, 0, 191, 220, 193,
	222, 217, 0, 1455, 0, 195, 205, 0, 0, 138,
	0, 0, 2522, 173, 171, 169, 114, 120, 1459, 159,
	0, 140, 0, 242, 251, 1454, 253, 237, 227, 0,
	0, 1481, 1485, 1493, 0, 1508, 1509, 1510, 1511, 0,
	0, 0, 0, 272, 0, 273, 276, 277, 0, 0,
	1172, 1230, 1171, 1289, 0, 1300, 1172, 0, 0, 0,
	0, 0, 0, 1174, 0, 1173, 0, 0, 484, 487,
	0, 490, 0, 0, 0, 0, 0, 1387, 0, 1434,
	1432, 0, 1440, 0, 0, 0, 1586, 0, 0, 1605,
	1606, 507, 1630, 0, 0, 1637, 1648, 328, 0, 331,
	305, 297, 0, 723, 0, 725, 0, 1079, 1081, 0,
	0, 2143, 2235, 0, 0, 2168, 2169, -2, 0, 2109,
	2219, 2221, 0, 0, 0, 0, 0, 1777, 1786, 1505,
	1863, 676, 673, 675, 0, 1468, 0, 1475, 229, 1245,
	1249, 0, 1256, 0, 0, 0, 1260, 1322, 0, 0,
	1339, 1339, 1273, 0, 0, 1306, 1307, 1227, 0, 1308,
	1309, 1310, 1447, 1736, 1453, 1172, 0, 0, 219, 224,
	0, 0, 0, 0, 0, 0, 158, 0, 231, 254,
	1455, 0, 0, 1512, 1513, 0, 0, 269, 288, 0,
	1381, 1174, 0, 1301, 1208, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1209, 1314, 0, 0, 1278, 1185,
	0, 1188, 0, 1170, 0, 488, 489, 504, 0, 505,
	0, 0, 1388, 0, 0, 1441, 0, 0, 1593, 1585,
	1614, 1607, 1608, 1860, 0, 1638, 0, 722, 0, 0,
	1089, 1090, 0, 0, 0, 0, 2230, 1728, 2110, 0,
	0, 1761, 1763, 1764, 1765, 665, 0, 1469, 199, 0,
	1316, 1258, 1327, 0, 0, 0, 0, 0, 1274, 1304,
	1305, 1302, 1226, 0, 1451, 1449, 1283, 1316, 1318, 197,
	0, 1314, 0, 1236, 0, 0, 1239, 0, 0, 174,
	2522, 172, 0, 227, 643, 1505, 227, 0, 291, 0,
	282, 280, 281, 1166, 0, 1294, 1296, 1312, 1314, 1227,
	0, 1189, 1231, 1187, 501, 1382, 1386, 1384, 1424, 1314,
	0, 1312, 0, 1600, 1614, 1594, 1595, 0, 1610, 0,
	0, 349, 724, 726, 2227, 2247, 2236, -2, 2834, 2529,
	0, 2247, 2247, 2222, 2223, 0, 0, 1172, 0, 1261,
	1323, 1324, 0, 1319, 1320, 1321, 2454, 1262, 1263, 1265,
	1266, 1860, 0, 1313, 1322, 223, 1172, 1233, 0, 0,
	1234, 0, 0, 177, 0, 179, 255, 1503, 1506, 0,
	278, 0, 0, 1163, 1165, 1172, 0, 1227, 1312, 1172,
	0, 0, 0, 1172, 1174, 1312, 0, 1227, 0, 1589,
	1599, 0, 1609, 1586, 0, 1633, 0, 330, 2232, 0,
	0, 2238, 2239, 2240, 2241, 2242, 2233, 2234, 677, 1251,
	1257, 0, 1325, 0, 1326, 0, 0, 0, 1282, 1311,
	1327, 203, 1237, 0, 1240, 0, 175, 0, 0, 286,
	287, 1293, 1295, 1172, 1227, 1860, 1175, 0, 1177, 1174,
	1186, 1227, 0, 1172, 0, 1612, 1588, 1592, 2415, 1593,
	1631, 0, 0, 0, 2244, 2245, 0, 0, 0, 1328,
	0, 1331, 1332, 0, 1329, 1302, 0, 0, 227, 0,
	1860, 1172, 1277, 1176, 1166, 1172, 1314, 1860, 1312, 1582,
	1614, 1600, 0, 1860, 2243, 2246, 2237, 1315, 1330, 1333,
	1334, 1284, 0, 0, 1507, 289, 0, 1275, 1860, 1164,
	1860, 1312, 1437, 1227, 0, 1589, 1860, 1634, 1224, 0,
	0, 1276, 1435, 1227, 1172, 1611, 1583, 1632, 1238, 1223,
	0, 290, 1172, 1860, 0, 1860, 1438, 0, 1436, 1224,
	1241,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 616, 3, 622, 617, 3,
	628, 629, 620, 618, 633, 619, 630, 621, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 636, 3,
	608, 610, 609, 613, 632, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 626, 3, 627, 623, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 634, 615, 635, 611,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 612, 57951, 614, 57952, 624, 57953, 625, 57954, 631,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1553
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1558
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1560
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1582
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1597
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1598
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1602
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1604
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1728
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1770
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1781
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1793
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1853
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1934
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1938
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1958
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1967
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1988
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1996
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2032
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2043
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2055
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2076
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2138
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2147
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2158
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2177
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2187
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2197
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2206
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2217
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2223
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2249
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2254
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2345
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2389
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2399
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2402
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2408
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2460
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = nil
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = true
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = false
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2655
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2659
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2843
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2847
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2851
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = nil
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3162
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3320
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3329
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3335
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3340
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3345
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = nil
		}
	case 350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3453
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3649
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3670
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3671
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3675
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3699
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "CREATE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3714
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3717
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3720
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "create access method")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplemented(sqllex, "create cast")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplemented(sqllex, "create publication")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplemented(sqllex, "create rule")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplemented(sqllex, "create server")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3739
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
		}
	case 437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3745
		{
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3748
		{
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3749
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3752
		{
		}
	case 441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3753
		{
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3756
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3758
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3763
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3764
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3765
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3766
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3767
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplemented(sqllex, "drop server")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3844
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3900
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3935
		{

			sqlVAL.union.val = nil
		}
	case 499:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3982
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4018
		{
			return helpWith(sqllex, "DELETE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4022
		{
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4033
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4034
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4037
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4048
		{
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "DROP")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4253
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4314
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4330
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4338
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4346
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "DELETE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "INSERT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "DELETE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "INSERT")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4536
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4569
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4660
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4676
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "GRANT")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4772
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4785
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "RESET")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "RESET")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
			return helpWith(sqllex, "USE")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4863
		{
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4864
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "USE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4931
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4995
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5003
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5066
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5100
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			return unimplemented(sqllex, "set from current")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5127
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5132
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5141
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5162
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5167
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = tree.Low
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = tree.Normal
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = tree.High
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = true
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = false
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = true
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = false
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = false
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "FETCH")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5457
		{
			return helpWith(sqllex, "MOVE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5496
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = int64(1)
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = int64(-1)
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = int64(1)
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = int64(1)
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = int64(-1)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5551
		{
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5552
		{
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5555
		{
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5556
		{
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5570
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5580
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5592
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.str = "client_encoding"
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.str = "timezone"
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5614
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5642
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5646
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5705
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5714
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5744
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5759
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5773
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5784
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5834
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5864
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5887
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5955
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5960
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = true
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = true
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = false
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5996
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5997
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5998
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6015
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6041
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6042
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6058
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6066
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6074
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6110
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6117
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6121
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = true
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = false
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6136
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6141
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6172
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6182
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6187
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = true
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = false
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6205
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6226
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6234
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6244
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6255
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6277
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6291
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6305
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6321
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6326
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6331
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6336
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6365
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6370
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6381
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6410
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6418
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6439
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6444
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6449
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6453
		{
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6462
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6476
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6485
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6497
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6556
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6566
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6579
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6712
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6755
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6766
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6774
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6824
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6825
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6827
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6837
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6838
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6839
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6851
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6892
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6979
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7007
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7043
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7058
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7086
		{

			sqlVAL.union.val = nil
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.str = ""
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7102
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = nil
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7125
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7129
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7165
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7178
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7192
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7193
		{
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7194
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7249
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7275
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7289
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7292
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.str = ""
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7431
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7538
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{

			sqlVAL.union.val = true
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = false
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7597
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7600
		{
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7697
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7708
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7725
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7735
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7818
		{
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7819
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7820
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7822
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7823
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7905
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7990
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7999
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8007
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8018
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8031
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8041
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8043
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8045
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8053
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8055
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8068
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8072
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8099
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8133
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.str = ""
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = true
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8167
		{

			sqlVAL.union.val = true
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = false
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8182
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8196
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8208
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8220
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8230
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8240
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8244
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = true
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = true
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = nil
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8387
		{
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8388
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8413
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8415
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8417
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8419
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8421
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8423
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8458
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8475
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8493
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8509
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8525
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8529
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = false
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = true
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = false
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = true
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = false
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8583
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8589
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8603
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.str = ""
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.str = ""
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8662
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8668
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8893
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8899
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8911
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8917
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8931
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8937
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8996
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = true
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = false
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = tree.Types
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9056
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9085
		{
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9089
		{
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9127
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9177
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9200
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9201
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9239
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9253
		{
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9254
		{
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9255
		{
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9272
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9276
		{
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9304
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9317
		{
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9319
		{
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9413
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.str = ""
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9441
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{

		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9473
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.str = ""
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.str = ""
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.str = ""
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.str = ""
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9528
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9553
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9554
		{
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9601
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9605
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9663
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9708
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9799
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9814
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9958
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9993
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9994
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9995
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10056
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10100
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10116
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = true
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = false
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10170
		{
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = nil
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10184
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = true
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = false
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = false
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = true
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10213
		{
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10214
		{
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10217
		{
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10218
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10271
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10276
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10302
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10335
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10390
		{
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10430
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10461
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10463
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10478
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10500
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10547
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10578
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10620
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10630
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10676
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10706
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10739
		{
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10741
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = nil
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = true
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = false
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.str = tree.AstFull
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.str = tree.AstRight
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.str = tree.AstInner
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10859
		{
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.str = tree.AstHash
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.str = ""
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10928
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10933
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10951
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10963
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10973
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = true
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = false
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = true
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = false
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11022
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11035
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11043
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11044
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11062
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11072
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11092
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11101
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11141
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11153
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11154
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = types.Geography
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11203
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11211
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11245
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = nil
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = types.Int2
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = types.Int
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = types.Float4
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = types.Float
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11288
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11296
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11304
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = types.Bool
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = types.Float
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11337
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11343
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11365
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = types.String
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = true
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = false
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = types.Date
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11414
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11422
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11436
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11445
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11453
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11470
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = true
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = false
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = false
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = types.Interval
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11494
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11578
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = nil
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11623
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11683
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11832
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12027
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12049
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12157
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12165
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12261
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12266
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12292
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12316
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12350
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12361
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12362
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12377
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12386
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12452
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12577
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12582
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12591
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12600
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12609
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12618
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12623
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12628
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12633
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12638
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12643
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12652
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12653
		{
			return unimplemented(sqllex, "treat")
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12674
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12679
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12726
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12749
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12769
		{
			sqlVAL.str = ""
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12809
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12815
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12828
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12896
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12901
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12918
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12925
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12966
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12974
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12982
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12983
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12987
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12990
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13001
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13024
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13100
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13116
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13198
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13223
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13237
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13257
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13275
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13282
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13292
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13319
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13326
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13332
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13336
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13341
		{
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13342
		{
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13346
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13350
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13356
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13365
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13369
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13373
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13381
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13391
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13414
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13422
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13445
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13472
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13476
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13491
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13495
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13507
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13511
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13520
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13531
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13540
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13548
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13565
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13650
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13658
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13662
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13668
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13680
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13707
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13714
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13718
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13722
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13736
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13740
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13744
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13757
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13766
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13784
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13797
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13804
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.str = ""
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13835
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13839
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
