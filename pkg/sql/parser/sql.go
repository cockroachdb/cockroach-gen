// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:875
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NOSQLLOGIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13729

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1598,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	264, 419,
	-2, 0,
	-1, 74,
	246, 243,
	524, 243,
	-2, 0,
	-1, 87,
	234, 1334,
	248, 1334,
	264, 415,
	396, 415,
	408, 1082,
	447, 415,
	460, 1082,
	508, 1082,
	535, 415,
	561, 1082,
	-2, 0,
	-1, 93,
	133, 1598,
	241, 1598,
	546, 1598,
	547, 1598,
	-2, 0,
	-1, 109,
	152, 1569,
	171, 1569,
	184, 1569,
	244, 1569,
	277, 1569,
	347, 1569,
	357, 1569,
	541, 1569,
	-2, 1540,
	-1, 150,
	160, 931,
	263, 931,
	399, 892,
	465, 892,
	507, 892,
	527, 931,
	529, 892,
	-2, 0,
	-1, 154,
	4, 1600,
	21, 1600,
	22, 1600,
	23, 1600,
	24, 1600,
	25, 1600,
	26, 1600,
	27, 1600,
	29, 1600,
	30, 1600,
	36, 1600,
	41, 1600,
	42, 1600,
	44, 1600,
	45, 1600,
	46, 1600,
	47, 1600,
	48, 1600,
	49, 1600,
	50, 1600,
	51, 1600,
	53, 1600,
	54, 1600,
	55, 1600,
	56, 1600,
	58, 1600,
	59, 1600,
	60, 1600,
	61, 1600,
	62, 1600,
	63, 1600,
	64, 1600,
	68, 1600,
	69, 1600,
	70, 1600,
	71, 1600,
	73, 1600,
	74, 1600,
	75, 1600,
	79, 1600,
	80, 1600,
	81, 1600,
	82, 1600,
	83, 1600,
	84, 1600,
	85, 1600,
	88, 1600,
	89, 1600,
	90, 1600,
	91, 1600,
	92, 1600,
	94, 1600,
	96, 1600,
	97, 1600,
	98, 1600,
	99, 1600,
	100, 1600,
	101, 1600,
	103, 1600,
	104, 1600,
	105, 1600,
	107, 1600,
	108, 1600,
	109, 1600,
	117, 1600,
	118, 1600,
	119, 1600,
	120, 1600,
	121, 1600,
	123, 1600,
	124, 1600,
	125, 1600,
	126, 1600,
	128, 1600,
	129, 1600,
	130, 1600,
	132, 1600,
	133, 1600,
	134, 1600,
	136, 1600,
	137, 1600,
	138, 1600,
	141, 1600,
	142, 1600,
	143, 1600,
	145, 1600,
	146, 1600,
	147, 1600,
	149, 1600,
	150, 1600,
	151, 1600,
	153, 1600,
	154, 1600,
	155, 1600,
	156, 1600,
	157, 1600,
	158, 1600,
	159, 1600,
	160, 1600,
	161, 1600,
	162, 1600,
	163, 1600,
	164, 1600,
	165, 1600,
	166, 1600,
	167, 1600,
	168, 1600,
	170, 1600,
	176, 1600,
	177, 1600,
	178, 1600,
	179, 1600,
	183, 1600,
	185, 1600,
	186, 1600,
	188, 1600,
	191, 1600,
	192, 1600,
	193, 1600,
	194, 1600,
	195, 1600,
	196, 1600,
	197, 1600,
	198, 1600,
	199, 1600,
	200, 1600,
	201, 1600,
	202, 1600,
	203, 1600,
	204, 1600,
	206, 1600,
	207, 1600,
	209, 1600,
	210, 1600,
	212, 1600,
	213, 1600,
	214, 1600,
	215, 1600,
	216, 1600,
	217, 1600,
	218, 1600,
	219, 1600,
	220, 1600,
	221, 1600,
	223, 1600,
	224, 1600,
	226, 1600,
	227, 1600,
	228, 1600,
	229, 1600,
	230, 1600,
	234, 1600,
	235, 1600,
	236, 1600,
	237, 1600,
	238, 1600,
	241, 1600,
	242, 1600,
	243, 1600,
	245, 1600,
	247, 1600,
	248, 1600,
	250, 1600,
	252, 1600,
	253, 1600,
	254, 1600,
	256, 1600,
	260, 1600,
	261, 1600,
	262, 1600,
	263, 1600,
	264, 1600,
	265, 1600,
	267, 1600,
	268, 1600,
	269, 1600,
	271, 1600,
	272, 1600,
	274, 1600,
	275, 1600,
	278, 1600,
	279, 1600,
	280, 1600,
	281, 1600,
	282, 1600,
	283, 1600,
	284, 1600,
	287, 1600,
	288, 1600,
	289, 1600,
	290, 1600,
	292, 1600,
	293, 1600,
	294, 1600,
	295, 1600,
	296, 1600,
	297, 1600,
	298, 1600,
	299, 1600,
	300, 1600,
	301, 1600,
	302, 1600,
	303, 1600,
	304, 1600,
	305, 1600,
	306, 1600,
	307, 1600,
	308, 1600,
	309, 1600,
	310, 1600,
	311, 1600,
	312, 1600,
	313, 1600,
	315, 1600,
	317, 1600,
	318, 1600,
	319, 1600,
	320, 1600,
	321, 1600,
	322, 1600,
	323, 1600,
	324, 1600,
	325, 1600,
	326, 1600,
	327, 1600,
	328, 1600,
	329, 1600,
	330, 1600,
	331, 1600,
	333, 1600,
	334, 1600,
	336, 1600,
	338, 1600,
	339, 1600,
	340, 1600,
	342, 1600,
	343, 1600,
	344, 1600,
	345, 1600,
	346, 1600,
	349, 1600,
	352, 1600,
	353, 1600,
	354, 1600,
	355, 1600,
	358, 1600,
	359, 1600,
	360, 1600,
	362, 1600,
	364, 1600,
	365, 1600,
	366, 1600,
	367, 1600,
	368, 1600,
	369, 1600,
	370, 1600,
	371, 1600,
	372, 1600,
	373, 1600,
	374, 1600,
	375, 1600,
	376, 1600,
	378, 1600,
	379, 1600,
	380, 1600,
	381, 1600,
	382, 1600,
	383, 1600,
	384, 1600,
	385, 1600,
	386, 1600,
	387, 1600,
	388, 1600,
	389, 1600,
	390, 1600,
	391, 1600,
	392, 1600,
	394, 1600,
	395, 1600,
	397, 1600,
	398, 1600,
	399, 1600,
	400, 1600,
	401, 1600,
	402, 1600,
	403, 1600,
	404, 1600,
	405, 1600,
	406, 1600,
	407, 1600,
	408, 1600,
	409, 1600,
	410, 1600,
	412, 1600,
	414, 1600,
	415, 1600,
	416, 1600,
	422, 1600,
	424, 1600,
	425, 1600,
	426, 1600,
	427, 1600,
	428, 1600,
	429, 1600,
	430, 1600,
	431, 1600,
	432, 1600,
	433, 1600,
	435, 1600,
	436, 1600,
	437, 1600,
	439, 1600,
	440, 1600,
	441, 1600,
	442, 1600,
	443, 1600,
	444, 1600,
	445, 1600,
	447, 1600,
	448, 1600,
	449, 1600,
	450, 1600,
	451, 1600,
	452, 1600,
	453, 1600,
	454, 1600,
	455, 1600,
	456, 1600,
	457, 1600,
	458, 1600,
	460, 1600,
	461, 1600,
	462, 1600,
	463, 1600,
	464, 1600,
	465, 1600,
	467, 1600,
	468, 1600,
	469, 1600,
	470, 1600,
	471, 1600,
	472, 1600,
	474, 1600,
	475, 1600,
	476, 1600,
	477, 1600,
	478, 1600,
	479, 1600,
	480, 1600,
	481, 1600,
	483, 1600,
	485, 1600,
	486, 1600,
	487, 1600,
	488, 1600,
	489, 1600,
	490, 1600,
	491, 1600,
	492, 1600,
	493, 1600,
	494, 1600,
	495, 1600,
	496, 1600,
	497, 1600,
	498, 1600,
	499, 1600,
	500, 1600,
	501, 1600,
	503, 1600,
	504, 1600,
	506, 1600,
	507, 1600,
	509, 1600,
	510, 1600,
	511, 1600,
	512, 1600,
	513, 1600,
	514, 1600,
	515, 1600,
	516, 1600,
	517, 1600,
	519, 1600,
	520, 1600,
	521, 1600,
	522, 1600,
	523, 1600,
	525, 1600,
	527, 1600,
	528, 1600,
	529, 1600,
	530, 1600,
	531, 1600,
	532, 1600,
	534, 1600,
	535, 1600,
	536, 1600,
	537, 1600,
	538, 1600,
	539, 1600,
	540, 1600,
	543, 1600,
	544, 1600,
	545, 1600,
	546, 1600,
	547, 1600,
	548, 1600,
	549, 1600,
	551, 1600,
	554, 1600,
	555, 1600,
	556, 1600,
	557, 1600,
	558, 1600,
	559, 1600,
	561, 1600,
	562, 1600,
	563, 1600,
	564, 1600,
	565, 1600,
	566, 1600,
	567, 1600,
	572, 1600,
	573, 1600,
	574, 1600,
	575, 1600,
	576, 1600,
	577, 1600,
	-2, 0,
	-1, 155,
	1, 1451,
	131, 1451,
	252, 1451,
	335, 1451,
	394, 1451,
	404, 1451,
	581, 1451,
	611, 1451,
	-2, 0,
	-1, 157,
	1, 1451,
	611, 1451,
	-2, 0,
	-1, 158,
	1, 1451,
	611, 1451,
	-2, 0,
	-1, 159,
	1, 1451,
	524, 1451,
	611, 1451,
	-2, 0,
	-1, 188,
	152, 1568,
	171, 1568,
	184, 1568,
	244, 1568,
	277, 1568,
	347, 1568,
	357, 1568,
	541, 1568,
	-2, 1543,
	-1, 237,
	4, 1607,
	5, 1607,
	6, 1607,
	7, 1607,
	8, 1607,
	9, 1607,
	10, 1607,
	21, 1607,
	22, 1607,
	23, 1607,
	24, 1607,
	25, 1607,
	26, 1607,
	27, 1607,
	29, 1607,
	30, 1607,
	36, 1607,
	37, 1607,
	41, 1607,
	42, 1607,
	43, 1607,
	44, 1607,
	45, 1607,
	46, 1607,
	47, 1607,
	48, 1607,
	49, 1607,
	50, 1607,
	51, 1607,
	53, 1607,
	54, 1607,
	55, 1607,
	56, 1607,
	58, 1607,
	59, 1607,
	60, 1607,
	61, 1607,
	62, 1607,
	63, 1607,
	64, 1607,
	65, 1607,
	66, 1607,
	67, 1607,
	68, 1607,
	69, 1607,
	70, 1607,
	71, 1607,
	73, 1607,
	74, 1607,
	75, 1607,
	77, 1607,
	79, 1607,
	80, 1607,
	81, 1607,
	82, 1607,
	83, 1607,
	84, 1607,
	85, 1607,
	88, 1607,
	89, 1607,
	90, 1607,
	91, 1607,
	92, 1607,
	94, 1607,
	96, 1607,
	97, 1607,
	98, 1607,
	99, 1607,
	100, 1607,
	101, 1607,
	103, 1607,
	104, 1607,
	105, 1607,
	106, 1607,
	107, 1607,
	108, 1607,
	109, 1607,
	110, 1607,
	111, 1607,
	112, 1607,
	113, 1607,
	114, 1607,
	115, 1607,
	116, 1607,
	117, 1607,
	118, 1607,
	119, 1607,
	120, 1607,
	121, 1607,
	122, 1607,
	123, 1607,
	124, 1607,
	125, 1607,
	126, 1607,
	127, 1607,
	128, 1607,
	129, 1607,
	130, 1607,
	132, 1607,
	133, 1607,
	134, 1607,
	136, 1607,
	137, 1607,
	138, 1607,
	141, 1607,
	142, 1607,
	143, 1607,
	145, 1607,
	146, 1607,
	147, 1607,
	149, 1607,
	150, 1607,
	151, 1607,
	153, 1607,
	154, 1607,
	155, 1607,
	156, 1607,
	157, 1607,
	158, 1607,
	159, 1607,
	160, 1607,
	161, 1607,
	162, 1607,
	163, 1607,
	164, 1607,
	165, 1607,
	166, 1607,
	167, 1607,
	168, 1607,
	169, 1607,
	170, 1607,
	176, 1607,
	177, 1607,
	178, 1607,
	179, 1607,
	183, 1607,
	185, 1607,
	186, 1607,
	188, 1607,
	190, 1607,
	191, 1607,
	192, 1607,
	193, 1607,
	194, 1607,
	195, 1607,
	196, 1607,
	197, 1607,
	198, 1607,
	199, 1607,
	200, 1607,
	201, 1607,
	202, 1607,
	203, 1607,
	204, 1607,
	206, 1607,
	207, 1607,
	209, 1607,
	210, 1607,
	212, 1607,
	213, 1607,
	214, 1607,
	215, 1607,
	216, 1607,
	217, 1607,
	218, 1607,
	219, 1607,
	220, 1607,
	221, 1607,
	222, 1607,
	223, 1607,
	224, 1607,
	226, 1607,
	227, 1607,
	228, 1607,
	229, 1607,
	230, 1607,
	234, 1607,
	235, 1607,
	236, 1607,
	237, 1607,
	238, 1607,
	240, 1607,
	241, 1607,
	242, 1607,
	243, 1607,
	245, 1607,
	247, 1607,
	248, 1607,
	249, 1607,
	250, 1607,
	251, 1607,
	252, 1607,
	253, 1607,
	254, 1607,
	255, 1607,
	256, 1607,
	260, 1607,
	261, 1607,
	262, 1607,
	263, 1607,
	264, 1607,
	265, 1607,
	267, 1607,
	268, 1607,
	269, 1607,
	271, 1607,
	272, 1607,
	273, 1607,
	274, 1607,
	275, 1607,
	276, 1607,
	278, 1607,
	279, 1607,
	280, 1607,
	281, 1607,
	282, 1607,
	283, 1607,
	284, 1607,
	285, 1607,
	286, 1607,
	287, 1607,
	288, 1607,
	289, 1607,
	290, 1607,
	292, 1607,
	293, 1607,
	294, 1607,
	295, 1607,
	296, 1607,
	297, 1607,
	298, 1607,
	299, 1607,
	300, 1607,
	301, 1607,
	302, 1607,
	303, 1607,
	304, 1607,
	305, 1607,
	306, 1607,
	307, 1607,
	308, 1607,
	309, 1607,
	310, 1607,
	311, 1607,
	312, 1607,
	313, 1607,
	315, 1607,
	316, 1607,
	317, 1607,
	318, 1607,
	319, 1607,
	320, 1607,
	321, 1607,
	322, 1607,
	323, 1607,
	324, 1607,
	325, 1607,
	326, 1607,
	327, 1607,
	328, 1607,
	329, 1607,
	330, 1607,
	331, 1607,
	332, 1607,
	333, 1607,
	334, 1607,
	335, 1607,
	336, 1607,
	337, 1607,
	338, 1607,
	339, 1607,
	340, 1607,
	341, 1607,
	342, 1607,
	343, 1607,
	344, 1607,
	345, 1607,
	346, 1607,
	349, 1607,
	353, 1607,
	354, 1607,
	355, 1607,
	358, 1607,
	359, 1607,
	360, 1607,
	361, 1607,
	362, 1607,
	363, 1607,
	364, 1607,
	365, 1607,
	366, 1607,
	367, 1607,
	368, 1607,
	369, 1607,
	370, 1607,
	371, 1607,
	372, 1607,
	373, 1607,
	374, 1607,
	375, 1607,
	376, 1607,
	378, 1607,
	379, 1607,
	380, 1607,
	381, 1607,
	382, 1607,
	383, 1607,
	384, 1607,
	385, 1607,
	386, 1607,
	387, 1607,
	388, 1607,
	389, 1607,
	390, 1607,
	391, 1607,
	392, 1607,
	394, 1607,
	395, 1607,
	397, 1607,
	398, 1607,
	399, 1607,
	400, 1607,
	401, 1607,
	402, 1607,
	403, 1607,
	404, 1607,
	405, 1607,
	406, 1607,
	407, 1607,
	408, 1607,
	409, 1607,
	410, 1607,
	412, 1607,
	414, 1607,
	415, 1607,
	416, 1607,
	422, 1607,
	424, 1607,
	425, 1607,
	426, 1607,
	427, 1607,
	428, 1607,
	429, 1607,
	430, 1607,
	431, 1607,
	432, 1607,
	433, 1607,
	435, 1607,
	436, 1607,
	437, 1607,
	438, 1607,
	439, 1607,
	440, 1607,
	441, 1607,
	442, 1607,
	443, 1607,
	444, 1607,
	445, 1607,
	447, 1607,
	448, 1607,
	449, 1607,
	450, 1607,
	451, 1607,
	452, 1607,
	453, 1607,
	454, 1607,
	455, 1607,
	456, 1607,
	457, 1607,
	458, 1607,
	460, 1607,
	461, 1607,
	462, 1607,
	463, 1607,
	464, 1607,
	465, 1607,
	466, 1607,
	467, 1607,
	468, 1607,
	469, 1607,
	470, 1607,
	471, 1607,
	472, 1607,
	473, 1607,
	474, 1607,
	475, 1607,
	476, 1607,
	477, 1607,
	478, 1607,
	479, 1607,
	480, 1607,
	481, 1607,
	483, 1607,
	485, 1607,
	486, 1607,
	487, 1607,
	488, 1607,
	489, 1607,
	490, 1607,
	491, 1607,
	492, 1607,
	493, 1607,
	494, 1607,
	495, 1607,
	496, 1607,
	497, 1607,
	498, 1607,
	499, 1607,
	500, 1607,
	501, 1607,
	503, 1607,
	504, 1607,
	505, 1607,
	506, 1607,
	507, 1607,
	509, 1607,
	510, 1607,
	511, 1607,
	512, 1607,
	513, 1607,
	514, 1607,
	515, 1607,
	516, 1607,
	517, 1607,
	519, 1607,
	520, 1607,
	521, 1607,
	522, 1607,
	523, 1607,
	525, 1607,
	527, 1607,
	528, 1607,
	529, 1607,
	530, 1607,
	531, 1607,
	532, 1607,
	533, 1607,
	534, 1607,
	535, 1607,
	536, 1607,
	537, 1607,
	538, 1607,
	539, 1607,
	540, 1607,
	542, 1607,
	543, 1607,
	544, 1607,
	545, 1607,
	546, 1607,
	547, 1607,
	548, 1607,
	549, 1607,
	550, 1607,
	551, 1607,
	554, 1607,
	555, 1607,
	556, 1607,
	557, 1607,
	558, 1607,
	559, 1607,
	561, 1607,
	562, 1607,
	563, 1607,
	564, 1607,
	565, 1607,
	566, 1607,
	567, 1607,
	572, 1607,
	573, 1607,
	574, 1607,
	575, 1607,
	576, 1607,
	577, 1607,
	578, 1607,
	592, 1607,
	599, 1607,
	600, 1607,
	601, 1607,
	608, 1607,
	612, 1607,
	-2, 0,
	-1, 757,
	4, 1332,
	21, 1332,
	22, 1332,
	23, 1332,
	24, 1332,
	25, 1332,
	26, 1332,
	27, 1332,
	29, 1332,
	30, 1332,
	36, 1332,
	41, 1332,
	42, 1332,
	44, 1332,
	45, 1332,
	46, 1332,
	47, 1332,
	48, 1332,
	49, 1332,
	50, 1332,
	51, 1332,
	53, 1332,
	54, 1332,
	55, 1332,
	56, 1332,
	58, 1332,
	59, 1332,
	60, 1332,
	61, 1332,
	62, 1332,
	63, 1332,
	64, 1332,
	68, 1332,
	69, 1332,
	70, 1332,
	71, 1332,
	73, 1332,
	74, 1332,
	75, 1332,
	79, 1332,
	80, 1332,
	81, 1332,
	82, 1332,
	83, 1332,
	84, 1332,
	85, 1332,
	88, 1332,
	89, 1332,
	90, 1332,
	91, 1332,
	92, 1332,
	94, 1332,
	96, 1332,
	97, 1332,
	98, 1332,
	99, 1332,
	100, 1332,
	101, 1332,
	103, 1332,
	104, 1332,
	105, 1332,
	107, 1332,
	108, 1332,
	109, 1332,
	117, 1332,
	118, 1332,
	119, 1332,
	120, 1332,
	121, 1332,
	123, 1332,
	124, 1332,
	125, 1332,
	126, 1332,
	128, 1332,
	129, 1332,
	130, 1332,
	132, 1332,
	133, 1332,
	134, 1332,
	136, 1332,
	137, 1332,
	138, 1332,
	141, 1332,
	142, 1332,
	143, 1332,
	145, 1332,
	146, 1332,
	147, 1332,
	149, 1332,
	150, 1332,
	151, 1332,
	153, 1332,
	154, 1332,
	155, 1332,
	156, 1332,
	157, 1332,
	158, 1332,
	159, 1332,
	160, 1332,
	161, 1332,
	162, 1332,
	163, 1332,
	164, 1332,
	165, 1332,
	166, 1332,
	167, 1332,
	168, 1332,
	170, 1332,
	176, 1332,
	177, 1332,
	178, 1332,
	179, 1332,
	183, 1332,
	185, 1332,
	186, 1332,
	188, 1332,
	191, 1332,
	192, 1332,
	193, 1332,
	194, 1332,
	195, 1332,
	196, 1332,
	197, 1332,
	198, 1332,
	199, 1332,
	200, 1332,
	201, 1332,
	202, 1332,
	203, 1332,
	204, 1332,
	206, 1332,
	207, 1332,
	209, 1332,
	210, 1332,
	212, 1332,
	213, 1332,
	214, 1332,
	215, 1332,
	216, 1332,
	217, 1332,
	218, 1332,
	219, 1332,
	220, 1332,
	221, 1332,
	223, 1332,
	224, 1332,
	226, 1332,
	227, 1332,
	228, 1332,
	229, 1332,
	230, 1332,
	234, 1332,
	235, 1332,
	236, 1332,
	237, 1332,
	238, 1332,
	241, 1332,
	242, 1332,
	243, 1332,
	245, 1332,
	247, 1332,
	248, 1332,
	250, 1332,
	252, 1332,
	253, 1332,
	254, 1332,
	256, 1332,
	260, 1332,
	261, 1332,
	262, 1332,
	263, 1332,
	264, 1332,
	265, 1332,
	267, 1332,
	268, 1332,
	269, 1332,
	271, 1332,
	272, 1332,
	274, 1332,
	275, 1332,
	278, 1332,
	279, 1332,
	280, 1332,
	281, 1332,
	282, 1332,
	283, 1332,
	284, 1332,
	287, 1332,
	288, 1332,
	289, 1332,
	290, 1332,
	292, 1332,
	293, 1332,
	294, 1332,
	295, 1332,
	296, 1332,
	297, 1332,
	298, 1332,
	299, 1332,
	300, 1332,
	301, 1332,
	302, 1332,
	303, 1332,
	304, 1332,
	305, 1332,
	306, 1332,
	307, 1332,
	308, 1332,
	309, 1332,
	310, 1332,
	311, 1332,
	312, 1332,
	313, 1332,
	315, 1332,
	317, 1332,
	318, 1332,
	319, 1332,
	320, 1332,
	321, 1332,
	322, 1332,
	323, 1332,
	324, 1332,
	325, 1332,
	326, 1332,
	327, 1332,
	328, 1332,
	329, 1332,
	330, 1332,
	331, 1332,
	333, 1332,
	334, 1332,
	336, 1332,
	338, 1332,
	339, 1332,
	340, 1332,
	342, 1332,
	343, 1332,
	344, 1332,
	345, 1332,
	346, 1332,
	349, 1332,
	353, 1332,
	354, 1332,
	355, 1332,
	358, 1332,
	359, 1332,
	360, 1332,
	362, 1332,
	364, 1332,
	365, 1332,
	366, 1332,
	367, 1332,
	368, 1332,
	369, 1332,
	370, 1332,
	371, 1332,
	372, 1332,
	373, 1332,
	374, 1332,
	375, 1332,
	376, 1332,
	378, 1332,
	379, 1332,
	380, 1332,
	381, 1332,
	382, 1332,
	383, 1332,
	384, 1332,
	385, 1332,
	386, 1332,
	387, 1332,
	388, 1332,
	389, 1332,
	390, 1332,
	391, 1332,
	392, 1332,
	394, 1332,
	395, 1332,
	397, 1332,
	398, 1332,
	399, 1332,
	400, 1332,
	401, 1332,
	402, 1332,
	403, 1332,
	404, 1332,
	405, 1332,
	406, 1332,
	407, 1332,
	408, 1332,
	409, 1332,
	410, 1332,
	412, 1332,
	414, 1332,
	415, 1332,
	416, 1332,
	422, 1332,
	424, 1332,
	425, 1332,
	426, 1332,
	427, 1332,
	428, 1332,
	429, 1332,
	430, 1332,
	431, 1332,
	432, 1332,
	433, 1332,
	435, 1332,
	436, 1332,
	437, 1332,
	439, 1332,
	440, 1332,
	441, 1332,
	442, 1332,
	443, 1332,
	444, 1332,
	445, 1332,
	447, 1332,
	448, 1332,
	449, 1332,
	450, 1332,
	451, 1332,
	452, 1332,
	453, 1332,
	454, 1332,
	455, 1332,
	456, 1332,
	457, 1332,
	458, 1332,
	460, 1332,
	461, 1332,
	462, 1332,
	463, 1332,
	464, 1332,
	465, 1332,
	467, 1332,
	468, 1332,
	469, 1332,
	470, 1332,
	471, 1332,
	472, 1332,
	474, 1332,
	475, 1332,
	476, 1332,
	477, 1332,
	478, 1332,
	479, 1332,
	480, 1332,
	481, 1332,
	483, 1332,
	485, 1332,
	486, 1332,
	487, 1332,
	488, 1332,
	489, 1332,
	490, 1332,
	491, 1332,
	492, 1332,
	493, 1332,
	494, 1332,
	495, 1332,
	496, 1332,
	497, 1332,
	498, 1332,
	499, 1332,
	500, 1332,
	501, 1332,
	503, 1332,
	504, 1332,
	506, 1332,
	507, 1332,
	509, 1332,
	510, 1332,
	511, 1332,
	512, 1332,
	513, 1332,
	514, 1332,
	515, 1332,
	516, 1332,
	517, 1332,
	519, 1332,
	520, 1332,
	521, 1332,
	522, 1332,
	523, 1332,
	525, 1332,
	527, 1332,
	528, 1332,
	529, 1332,
	530, 1332,
	531, 1332,
	532, 1332,
	534, 1332,
	535, 1332,
	536, 1332,
	537, 1332,
	538, 1332,
	539, 1332,
	540, 1332,
	543, 1332,
	544, 1332,
	545, 1332,
	546, 1332,
	547, 1332,
	548, 1332,
	549, 1332,
	551, 1332,
	554, 1332,
	555, 1332,
	556, 1332,
	557, 1332,
	558, 1332,
	559, 1332,
	561, 1332,
	562, 1332,
	563, 1332,
	564, 1332,
	565, 1332,
	566, 1332,
	567, 1332,
	572, 1332,
	573, 1332,
	574, 1332,
	575, 1332,
	576, 1332,
	577, 1332,
	-2, 0,
	-1, 776,
	189, 2396,
	524, 2396,
	591, 2396,
	610, 2396,
	-2, 0,
	-1, 777,
	189, 2383,
	524, 2383,
	591, 2383,
	610, 2383,
	-2, 0,
	-1, 779,
	189, 2651,
	524, 2651,
	591, 2651,
	610, 2651,
	-2, 0,
	-1, 782,
	189, 2510,
	524, 2510,
	591, 2510,
	610, 2510,
	-2, 0,
	-1, 783,
	189, 2694,
	524, 2694,
	591, 2694,
	610, 2694,
	-2, 0,
	-1, 791,
	189, 2537,
	524, 2537,
	591, 2537,
	610, 2537,
	-2, 715,
	-1, 826,
	610, 2332,
	613, 2332,
	-2, 1011,
	-1, 827,
	610, 2334,
	613, 2334,
	-2, 1012,
	-1, 828,
	610, 2333,
	613, 2333,
	-2, 1013,
	-1, 829,
	613, 2258,
	-2, 1014,
	-1, 852,
	184, 264,
	-2, 0,
	-1, 876,
	43, 2305,
	-2, 0,
	-1, 877,
	561, 1310,
	-2, 1083,
	-1, 893,
	4, 1738,
	21, 1738,
	22, 1738,
	23, 1738,
	24, 1738,
	25, 1738,
	26, 1738,
	27, 1738,
	29, 1738,
	30, 1738,
	36, 1738,
	41, 1738,
	42, 1738,
	44, 1738,
	45, 1738,
	46, 1738,
	47, 1738,
	48, 1738,
	49, 1738,
	50, 1738,
	51, 1738,
	53, 1738,
	54, 1738,
	55, 1738,
	56, 1738,
	58, 1738,
	59, 1738,
	60, 1738,
	61, 1738,
	62, 1738,
	63, 1738,
	64, 1738,
	68, 1738,
	69, 1738,
	70, 1738,
	71, 1738,
	73, 1738,
	74, 1738,
	75, 1738,
	79, 1738,
	80, 1738,
	81, 1738,
	82, 1738,
	83, 1738,
	84, 1738,
	85, 1738,
	88, 1738,
	89, 1738,
	90, 1738,
	91, 1738,
	92, 1738,
	94, 1738,
	96, 1738,
	97, 1738,
	98, 1738,
	99, 1738,
	100, 1738,
	101, 1738,
	103, 1738,
	104, 1738,
	105, 1738,
	107, 1738,
	108, 1738,
	109, 1738,
	117, 1738,
	118, 1738,
	119, 1738,
	120, 1738,
	121, 1738,
	123, 1738,
	124, 1738,
	125, 1738,
	126, 1738,
	128, 1738,
	129, 1738,
	130, 1738,
	132, 1738,
	133, 1738,
	134, 1738,
	136, 1738,
	137, 1738,
	138, 1738,
	141, 1738,
	142, 1738,
	143, 1738,
	145, 1738,
	146, 1738,
	147, 1738,
	149, 1738,
	150, 1738,
	151, 1738,
	153, 1738,
	154, 1738,
	155, 1738,
	156, 1738,
	157, 1738,
	158, 1738,
	159, 1738,
	160, 1738,
	161, 1738,
	162, 1738,
	163, 1738,
	164, 1738,
	165, 1738,
	166, 1738,
	167, 1738,
	168, 1738,
	170, 1738,
	176, 1738,
	177, 1738,
	178, 1738,
	179, 1738,
	183, 1738,
	185, 1738,
	186, 1738,
	188, 1738,
	191, 1738,
	192, 1738,
	193, 1738,
	194, 1738,
	195, 1738,
	196, 1738,
	197, 1738,
	198, 1738,
	199, 1738,
	200, 1738,
	201, 1738,
	202, 1738,
	203, 1738,
	204, 1738,
	206, 1738,
	207, 1738,
	209, 1738,
	210, 1738,
	212, 1738,
	213, 1738,
	214, 1738,
	215, 1738,
	216, 1738,
	217, 1738,
	218, 1738,
	219, 1738,
	220, 1738,
	221, 1738,
	223, 1738,
	224, 1738,
	226, 1738,
	227, 1738,
	228, 1738,
	229, 1738,
	230, 1738,
	234, 1738,
	235, 1738,
	236, 1738,
	237, 1738,
	238, 1738,
	241, 1738,
	242, 1738,
	243, 1738,
	245, 1738,
	247, 1738,
	248, 1738,
	250, 1738,
	252, 1738,
	253, 1738,
	254, 1738,
	256, 1738,
	260, 1738,
	261, 1738,
	262, 1738,
	263, 1738,
	264, 1738,
	265, 1738,
	267, 1738,
	268, 1738,
	269, 1738,
	271, 1738,
	272, 1738,
	274, 1738,
	275, 1738,
	278, 1738,
	279, 1738,
	280, 1738,
	281, 1738,
	282, 1738,
	283, 1738,
	284, 1738,
	287, 1738,
	288, 1738,
	289, 1738,
	290, 1738,
	292, 1738,
	293, 1738,
	294, 1738,
	295, 1738,
	296, 1738,
	297, 1738,
	298, 1738,
	299, 1738,
	300, 1738,
	301, 1738,
	302, 1738,
	303, 1738,
	304, 1738,
	305, 1738,
	306, 1738,
	307, 1738,
	308, 1738,
	309, 1738,
	310, 1738,
	311, 1738,
	312, 1738,
	313, 1738,
	315, 1738,
	317, 1738,
	318, 1738,
	319, 1738,
	320, 1738,
	321, 1738,
	322, 1738,
	323, 1738,
	324, 1738,
	325, 1738,
	326, 1738,
	327, 1738,
	328, 1738,
	329, 1738,
	330, 1738,
	331, 1738,
	333, 1738,
	334, 1738,
	336, 1738,
	338, 1738,
	339, 1738,
	340, 1738,
	342, 1738,
	343, 1738,
	344, 1738,
	345, 1738,
	346, 1738,
	349, 1738,
	353, 1738,
	354, 1738,
	355, 1738,
	358, 1738,
	359, 1738,
	360, 1738,
	362, 1738,
	364, 1738,
	365, 1738,
	366, 1738,
	367, 1738,
	368, 1738,
	369, 1738,
	370, 1738,
	371, 1738,
	372, 1738,
	373, 1738,
	374, 1738,
	375, 1738,
	376, 1738,
	378, 1738,
	379, 1738,
	380, 1738,
	381, 1738,
	382, 1738,
	383, 1738,
	384, 1738,
	385, 1738,
	386, 1738,
	387, 1738,
	388, 1738,
	389, 1738,
	390, 1738,
	391, 1738,
	392, 1738,
	394, 1738,
	395, 1738,
	397, 1738,
	398, 1738,
	399, 1738,
	400, 1738,
	401, 1738,
	402, 1738,
	403, 1738,
	404, 1738,
	405, 1738,
	406, 1738,
	407, 1738,
	408, 1738,
	409, 1738,
	410, 1738,
	412, 1738,
	414, 1738,
	415, 1738,
	416, 1738,
	422, 1738,
	424, 1738,
	425, 1738,
	426, 1738,
	427, 1738,
	428, 1738,
	429, 1738,
	430, 1738,
	431, 1738,
	432, 1738,
	433, 1738,
	435, 1738,
	436, 1738,
	437, 1738,
	439, 1738,
	440, 1738,
	441, 1738,
	442, 1738,
	443, 1738,
	444, 1738,
	445, 1738,
	447, 1738,
	448, 1738,
	449, 1738,
	450, 1738,
	451, 1738,
	452, 1738,
	453, 1738,
	454, 1738,
	455, 1738,
	456, 1738,
	457, 1738,
	458, 1738,
	460, 1738,
	461, 1738,
	462, 1738,
	463, 1738,
	464, 1738,
	465, 1738,
	467, 1738,
	468, 1738,
	469, 1738,
	470, 1738,
	471, 1738,
	472, 1738,
	474, 1738,
	475, 1738,
	476, 1738,
	477, 1738,
	478, 1738,
	479, 1738,
	480, 1738,
	481, 1738,
	483, 1738,
	485, 1738,
	486, 1738,
	487, 1738,
	488, 1738,
	489, 1738,
	490, 1738,
	491, 1738,
	492, 1738,
	493, 1738,
	494, 1738,
	495, 1738,
	496, 1738,
	497, 1738,
	498, 1738,
	499, 1738,
	500, 1738,
	501, 1738,
	503, 1738,
	504, 1738,
	506, 1738,
	507, 1738,
	509, 1738,
	510, 1738,
	511, 1738,
	512, 1738,
	513, 1738,
	514, 1738,
	515, 1738,
	516, 1738,
	517, 1738,
	519, 1738,
	520, 1738,
	521, 1738,
	522, 1738,
	523, 1738,
	525, 1738,
	527, 1738,
	528, 1738,
	529, 1738,
	530, 1738,
	531, 1738,
	532, 1738,
	534, 1738,
	535, 1738,
	536, 1738,
	537, 1738,
	538, 1738,
	539, 1738,
	540, 1738,
	543, 1738,
	544, 1738,
	545, 1738,
	546, 1738,
	547, 1738,
	548, 1738,
	549, 1738,
	551, 1738,
	554, 1738,
	555, 1738,
	556, 1738,
	557, 1738,
	558, 1738,
	559, 1738,
	561, 1738,
	562, 1738,
	563, 1738,
	564, 1738,
	565, 1738,
	566, 1738,
	567, 1738,
	572, 1738,
	573, 1738,
	574, 1738,
	575, 1738,
	576, 1738,
	577, 1738,
	-2, 0,
	-1, 903,
	264, 419,
	-2, 0,
	-1, 976,
	399, 893,
	465, 893,
	507, 893,
	529, 893,
	-2, 0,
	-1, 977,
	399, 892,
	465, 892,
	507, 892,
	529, 892,
	-2, 825,
	-1, 981,
	1, 945,
	607, 945,
	609, 945,
	611, 945,
	-2, 0,
	-1, 983,
	1, 867,
	607, 867,
	609, 867,
	611, 867,
	-2, 0,
	-1, 984,
	1, 871,
	607, 871,
	609, 871,
	611, 871,
	-2, 0,
	-1, 985,
	1, 1010,
	184, 1010,
	607, 1010,
	609, 1010,
	611, 1010,
	-2, 0,
	-1, 993,
	1, 898,
	607, 898,
	609, 898,
	611, 898,
	-2, 0,
	-1, 1000,
	1, 945,
	607, 945,
	609, 945,
	611, 945,
	-2, 0,
	-1, 1001,
	1, 947,
	607, 947,
	609, 947,
	611, 947,
	-2, 0,
	-1, 1002,
	1, 950,
	607, 950,
	609, 950,
	611, 950,
	-2, 0,
	-1, 1008,
	1, 974,
	607, 974,
	609, 974,
	611, 974,
	-2, 0,
	-1, 1009,
	1, 976,
	607, 976,
	609, 976,
	611, 976,
	-2, 0,
	-1, 1014,
	1, 1004,
	607, 1004,
	609, 1004,
	611, 1004,
	-2, 0,
	-1, 1067,
	171, 1611,
	184, 1611,
	277, 1611,
	347, 1611,
	-2, 1547,
	-1, 1082,
	171, 1610,
	184, 1610,
	277, 1610,
	347, 1610,
	-2, 1544,
	-1, 1111,
	610, 2331,
	-2, 723,
	-1, 1140,
	5, 2323,
	608, 2321,
	-2, 2312,
	-1, 1148,
	5, 2344,
	608, 2341,
	-2, 2332,
	-1, 1149,
	5, 2345,
	608, 2342,
	-2, 2333,
	-1, 1157,
	610, 2329,
	-2, 2311,
	-1, 1158,
	608, 2779,
	-2, 2330,
	-1, 1181,
	608, 2778,
	-2, 2346,
	-1, 1182,
	5, 1813,
	-2, 2749,
	-1, 1183,
	5, 1814,
	-2, 2750,
	-1, 1184,
	5, 1815,
	-2, 2764,
	-1, 1185,
	5, 1816,
	-2, 2728,
	-1, 1186,
	5, 1817,
	-2, 2762,
	-1, 1187,
	5, 1825,
	-2, 2741,
	-1, 1188,
	5, 1812,
	-2, 2737,
	-1, 1189,
	5, 1812,
	-2, 2736,
	-1, 1190,
	5, 1812,
	-2, 2755,
	-1, 1191,
	5, 1823,
	-2, 2730,
	-1, 1192,
	5, 1828,
	-2, 2729,
	-1, 1193,
	5, 1830,
	-2, 2774,
	-1, 1196,
	5, 1852,
	-2, 2767,
	-1, 1197,
	5, 1844,
	-2, 2768,
	-1, 1198,
	5, 1852,
	-2, 2769,
	-1, 1199,
	5, 1848,
	-2, 2770,
	-1, 1200,
	5, 1798,
	-2, 2742,
	-1, 1201,
	5, 1799,
	-2, 2743,
	-1, 1202,
	5, 1800,
	-2, 2731,
	-1, 1230,
	5, 1835,
	-2, 2775,
	-1, 1231,
	5, 1836,
	-2, 2765,
	-1, 1232,
	5, 1837,
	562, 1837,
	-2, 2732,
	-1, 1233,
	5, 1838,
	562, 1838,
	-2, 2733,
	-1, 1270,
	608, 2341,
	-2, 2332,
	-1, 1271,
	608, 2342,
	-2, 2333,
	-1, 1372,
	189, 2694,
	524, 2694,
	591, 2694,
	610, 2694,
	-2, 0,
	-1, 1377,
	1, 700,
	611, 700,
	-2, 1459,
	-1, 1505,
	366, 2306,
	424, 2306,
	467, 2306,
	601, 2306,
	-2, 2296,
	-1, 1516,
	612, 2306,
	-2, 2308,
	-1, 1524,
	1, 1307,
	429, 1266,
	467, 1266,
	584, 1266,
	588, 1266,
	607, 1307,
	609, 1307,
	611, 1307,
	-2, 1596,
	-1, 1530,
	205, 1404,
	225, 1404,
	437, 1404,
	-2, 0,
	-1, 1576,
	408, 1082,
	561, 1082,
	-2, 414,
	-1, 1593,
	43, 2304,
	-2, 1048,
	-1, 1600,
	1, 1307,
	607, 1307,
	609, 1307,
	611, 1307,
	-2, 1596,
	-1, 1608,
	4, 1332,
	21, 1332,
	22, 1332,
	23, 1332,
	24, 1332,
	25, 1332,
	26, 1332,
	27, 1332,
	29, 1332,
	30, 1332,
	36, 1332,
	41, 1332,
	42, 1332,
	44, 1332,
	45, 1332,
	46, 1332,
	47, 1332,
	48, 1332,
	49, 1332,
	50, 1332,
	51, 1332,
	53, 1332,
	54, 1332,
	55, 1332,
	56, 1332,
	58, 1332,
	59, 1332,
	60, 1332,
	61, 1332,
	62, 1332,
	63, 1332,
	64, 1332,
	68, 1332,
	69, 1332,
	70, 1332,
	71, 1332,
	73, 1332,
	74, 1332,
	75, 1332,
	79, 1332,
	80, 1332,
	81, 1332,
	82, 1332,
	83, 1332,
	84, 1332,
	85, 1332,
	88, 1332,
	89, 1332,
	90, 1332,
	91, 1332,
	92, 1332,
	94, 1332,
	96, 1332,
	97, 1332,
	98, 1332,
	99, 1332,
	100, 1332,
	101, 1332,
	103, 1332,
	104, 1332,
	105, 1332,
	107, 1332,
	108, 1332,
	109, 1332,
	117, 1332,
	118, 1332,
	119, 1332,
	120, 1332,
	121, 1332,
	123, 1332,
	124, 1332,
	125, 1332,
	126, 1332,
	128, 1332,
	129, 1332,
	130, 1332,
	132, 1332,
	133, 1332,
	134, 1332,
	136, 1332,
	137, 1332,
	138, 1332,
	141, 1332,
	142, 1332,
	143, 1332,
	145, 1332,
	146, 1332,
	147, 1332,
	149, 1332,
	150, 1332,
	151, 1332,
	153, 1332,
	154, 1332,
	155, 1332,
	156, 1332,
	157, 1332,
	158, 1332,
	159, 1332,
	160, 1332,
	161, 1332,
	162, 1332,
	163, 1332,
	164, 1332,
	165, 1332,
	166, 1332,
	167, 1332,
	168, 1332,
	176, 1332,
	177, 1332,
	178, 1332,
	179, 1332,
	183, 1332,
	185, 1332,
	186, 1332,
	188, 1332,
	191, 1332,
	192, 1332,
	193, 1332,
	194, 1332,
	195, 1332,
	196, 1332,
	197, 1332,
	198, 1332,
	199, 1332,
	200, 1332,
	201, 1332,
	202, 1332,
	203, 1332,
	204, 1332,
	206, 1332,
	207, 1332,
	209, 1332,
	210, 1332,
	212, 1332,
	213, 1332,
	214, 1332,
	215, 1332,
	216, 1332,
	217, 1332,
	218, 1332,
	219, 1332,
	220, 1332,
	221, 1332,
	223, 1332,
	224, 1332,
	226, 1332,
	227, 1332,
	228, 1332,
	229, 1332,
	230, 1332,
	235, 1332,
	236, 1332,
	237, 1332,
	238, 1332,
	241, 1332,
	242, 1332,
	243, 1332,
	245, 1332,
	247, 1332,
	248, 1332,
	250, 1332,
	252, 1332,
	253, 1332,
	254, 1332,
	256, 1332,
	260, 1332,
	261, 1332,
	262, 1332,
	263, 1332,
	264, 1332,
	265, 1332,
	267, 1332,
	268, 1332,
	269, 1332,
	271, 1332,
	272, 1332,
	274, 1332,
	275, 1332,
	278, 1332,
	279, 1332,
	280, 1332,
	281, 1332,
	282, 1332,
	283, 1332,
	284, 1332,
	287, 1332,
	288, 1332,
	289, 1332,
	290, 1332,
	292, 1332,
	293, 1332,
	294, 1332,
	295, 1332,
	296, 1332,
	297, 1332,
	298, 1332,
	299, 1332,
	300, 1332,
	301, 1332,
	302, 1332,
	303, 1332,
	304, 1332,
	305, 1332,
	306, 1332,
	307, 1332,
	308, 1332,
	309, 1332,
	310, 1332,
	311, 1332,
	312, 1332,
	313, 1332,
	315, 1332,
	317, 1332,
	318, 1332,
	319, 1332,
	320, 1332,
	321, 1332,
	322, 1332,
	323, 1332,
	324, 1332,
	325, 1332,
	326, 1332,
	327, 1332,
	328, 1332,
	329, 1332,
	330, 1332,
	331, 1332,
	333, 1332,
	334, 1332,
	338, 1332,
	339, 1332,
	340, 1332,
	342, 1332,
	343, 1332,
	344, 1332,
	345, 1332,
	346, 1332,
	349, 1332,
	351, 1332,
	353, 1332,
	354, 1332,
	355, 1332,
	358, 1332,
	359, 1332,
	360, 1332,
	362, 1332,
	364, 1332,
	365, 1332,
	366, 1332,
	367, 1332,
	368, 1332,
	369, 1332,
	370, 1332,
	371, 1332,
	372, 1332,
	373, 1332,
	374, 1332,
	375, 1332,
	376, 1332,
	378, 1332,
	379, 1332,
	380, 1332,
	381, 1332,
	382, 1332,
	383, 1332,
	384, 1332,
	385, 1332,
	386, 1332,
	387, 1332,
	388, 1332,
	389, 1332,
	390, 1332,
	391, 1332,
	392, 1332,
	394, 1332,
	395, 1332,
	397, 1332,
	398, 1332,
	399, 1332,
	400, 1332,
	401, 1332,
	402, 1332,
	403, 1332,
	404, 1332,
	405, 1332,
	406, 1332,
	407, 1332,
	408, 1332,
	409, 1332,
	410, 1332,
	412, 1332,
	414, 1332,
	415, 1332,
	416, 1332,
	422, 1332,
	424, 1332,
	425, 1332,
	426, 1332,
	427, 1332,
	428, 1332,
	429, 1332,
	430, 1332,
	431, 1332,
	432, 1332,
	433, 1332,
	435, 1332,
	436, 1332,
	437, 1332,
	439, 1332,
	440, 1332,
	441, 1332,
	442, 1332,
	443, 1332,
	444, 1332,
	445, 1332,
	447, 1332,
	448, 1332,
	449, 1332,
	450, 1332,
	451, 1332,
	452, 1332,
	453, 1332,
	454, 1332,
	455, 1332,
	456, 1332,
	457, 1332,
	458, 1332,
	460, 1332,
	461, 1332,
	462, 1332,
	463, 1332,
	464, 1332,
	465, 1332,
	467, 1332,
	468, 1332,
	469, 1332,
	470, 1332,
	471, 1332,
	472, 1332,
	474, 1332,
	475, 1332,
	476, 1332,
	477, 1332,
	478, 1332,
	479, 1332,
	480, 1332,
	481, 1332,
	483, 1332,
	485, 1332,
	486, 1332,
	487, 1332,
	488, 1332,
	489, 1332,
	490, 1332,
	491, 1332,
	492, 1332,
	493, 1332,
	494, 1332,
	495, 1332,
	496, 1332,
	497, 1332,
	498, 1332,
	499, 1332,
	500, 1332,
	501, 1332,
	503, 1332,
	504, 1332,
	506, 1332,
	507, 1332,
	509, 1332,
	510, 1332,
	511, 1332,
	512, 1332,
	513, 1332,
	514, 1332,
	515, 1332,
	516, 1332,
	517, 1332,
	519, 1332,
	520, 1332,
	521, 1332,
	522, 1332,
	523, 1332,
	525, 1332,
	527, 1332,
	528, 1332,
	529, 1332,
	530, 1332,
	531, 1332,
	532, 1332,
	534, 1332,
	535, 1332,
	536, 1332,
	537, 1332,
	538, 1332,
	539, 1332,
	540, 1332,
	543, 1332,
	544, 1332,
	545, 1332,
	546, 1332,
	547, 1332,
	548, 1332,
	549, 1332,
	551, 1332,
	554, 1332,
	555, 1332,
	556, 1332,
	557, 1332,
	558, 1332,
	559, 1332,
	561, 1332,
	562, 1332,
	563, 1332,
	564, 1332,
	565, 1332,
	566, 1332,
	567, 1332,
	572, 1332,
	573, 1332,
	574, 1332,
	575, 1332,
	576, 1332,
	577, 1332,
	-2, 0,
	-1, 1631,
	1, 559,
	607, 559,
	609, 559,
	611, 559,
	-2, 1567,
	-1, 1634,
	4, 2773,
	11, 2773,
	12, 2773,
	14, 2773,
	15, 2773,
	16, 2773,
	17, 2773,
	18, 2773,
	19, 2773,
	21, 2773,
	22, 2773,
	23, 2773,
	24, 2773,
	25, 2773,
	26, 2773,
	27, 2773,
	29, 2773,
	30, 2773,
	33, 2773,
	34, 2773,
	36, 2773,
	38, 2773,
	41, 2773,
	42, 2773,
	44, 2773,
	45, 2773,
	46, 2773,
	47, 2773,
	48, 2773,
	49, 2773,
	50, 2773,
	51, 2773,
	53, 2773,
	54, 2773,
	55, 2773,
	56, 2773,
	58, 2773,
	59, 2773,
	60, 2773,
	61, 2773,
	62, 2773,
	63, 2773,
	64, 2773,
	67, 2773,
	68, 2773,
	69, 2773,
	70, 2773,
	71, 2773,
	73, 2773,
	74, 2773,
	75, 2773,
	76, 2773,
	79, 2773,
	80, 2773,
	81, 2773,
	82, 2773,
	83, 2773,
	84, 2773,
	85, 2773,
	86, 2773,
	88, 2773,
	89, 2773,
	90, 2773,
	91, 2773,
	92, 2773,
	94, 2773,
	95, 2773,
	96, 2773,
	97, 2773,
	98, 2773,
	99, 2773,
	100, 2773,
	101, 2773,
	103, 2773,
	104, 2773,
	105, 2773,
	106, 2773,
	107, 2773,
	108, 2773,
	109, 2773,
	117, 2773,
	118, 2773,
	119, 2773,
	120, 2773,
	121, 2773,
	123, 2773,
	124, 2773,
	125, 2773,
	126, 2773,
	128, 2773,
	129, 2773,
	130, 2773,
	132, 2773,
	133, 2773,
	134, 2773,
	136, 2773,
	137, 2773,
	138, 2773,
	141, 2773,
	142, 2773,
	143, 2773,
	145, 2773,
	146, 2773,
	147, 2773,
	149, 2773,
	150, 2773,
	151, 2773,
	153, 2773,
	154, 2773,
	155, 2773,
	156, 2773,
	157, 2773,
	158, 2773,
	159, 2773,
	160, 2773,
	161, 2773,
	162, 2773,
	163, 2773,
	164, 2773,
	165, 2773,
	166, 2773,
	167, 2773,
	168, 2773,
	172, 2773,
	173, 2773,
	174, 2773,
	175, 2773,
	176, 2773,
	177, 2773,
	178, 2773,
	179, 2773,
	182, 2773,
	183, 2773,
	185, 2773,
	186, 2773,
	188, 2773,
	190, 2773,
	191, 2773,
	192, 2773,
	193, 2773,
	194, 2773,
	195, 2773,
	196, 2773,
	197, 2773,
	198, 2773,
	199, 2773,
	200, 2773,
	201, 2773,
	202, 2773,
	203, 2773,
	204, 2773,
	206, 2773,
	207, 2773,
	209, 2773,
	210, 2773,
	212, 2773,
	213, 2773,
	214, 2773,
	215, 2773,
	216, 2773,
	217, 2773,
	218, 2773,
	219, 2773,
	220, 2773,
	221, 2773,
	222, 2773,
	223, 2773,
	224, 2773,
	225, 2773,
	226, 2773,
	227, 2773,
	228, 2773,
	229, 2773,
	230, 2773,
	232, 2773,
	233, 2773,
	235, 2773,
	236, 2773,
	237, 2773,
	238, 2773,
	240, 2773,
	241, 2773,
	242, 2773,
	243, 2773,
	245, 2773,
	247, 2773,
	248, 2773,
	249, 2773,
	250, 2773,
	251, 2773,
	252, 2773,
	253, 2773,
	254, 2773,
	255, 2773,
	256, 2773,
	258, 2773,
	259, 2773,
	260, 2773,
	261, 2773,
	262, 2773,
	263, 2773,
	264, 2773,
	265, 2773,
	267, 2773,
	268, 2773,
	269, 2773,
	271, 2773,
	272, 2773,
	273, 2773,
	274, 2773,
	275, 2773,
	276, 2773,
	278, 2773,
	279, 2773,
	280, 2773,
	281, 2773,
	282, 2773,
	283, 2773,
	284, 2773,
	287, 2773,
	288, 2773,
	289, 2773,
	290, 2773,
	291, 2773,
	292, 2773,
	293, 2773,
	294, 2773,
	295, 2773,
	296, 2773,
	297, 2773,
	298, 2773,
	299, 2773,
	300, 2773,
	301, 2773,
	302, 2773,
	303, 2773,
	304, 2773,
	305, 2773,
	306, 2773,
	307, 2773,
	308, 2773,
	309, 2773,
	310, 2773,
	311, 2773,
	312, 2773,
	313, 2773,
	315, 2773,
	316, 2773,
	317, 2773,
	318, 2773,
	319, 2773,
	320, 2773,
	321, 2773,
	322, 2773,
	323, 2773,
	324, 2773,
	325, 2773,
	326, 2773,
	327, 2773,
	328, 2773,
	329, 2773,
	330, 2773,
	331, 2773,
	333, 2773,
	334, 2773,
	337, 2773,
	338, 2773,
	339, 2773,
	340, 2773,
	342, 2773,
	343, 2773,
	344, 2773,
	345, 2773,
	346, 2773,
	349, 2773,
	353, 2773,
	354, 2773,
	355, 2773,
	356, 2773,
	358, 2773,
	359, 2773,
	360, 2773,
	362, 2773,
	364, 2773,
	365, 2773,
	366, 2773,
	367, 2773,
	368, 2773,
	369, 2773,
	370, 2773,
	371, 2773,
	372, 2773,
	373, 2773,
	374, 2773,
	375, 2773,
	376, 2773,
	378, 2773,
	379, 2773,
	380, 2773,
	381, 2773,
	382, 2773,
	383, 2773,
	384, 2773,
	385, 2773,
	386, 2773,
	387, 2773,
	388, 2773,
	389, 2773,
	390, 2773,
	391, 2773,
	392, 2773,
	394, 2773,
	395, 2773,
	397, 2773,
	398, 2773,
	399, 2773,
	400, 2773,
	401, 2773,
	402, 2773,
	403, 2773,
	404, 2773,
	405, 2773,
	406, 2773,
	407, 2773,
	408, 2773,
	409, 2773,
	410, 2773,
	412, 2773,
	414, 2773,
	415, 2773,
	416, 2773,
	422, 2773,
	423, 2773,
	424, 2773,
	425, 2773,
	426, 2773,
	427, 2773,
	428, 2773,
	429, 2773,
	430, 2773,
	431, 2773,
	432, 2773,
	433, 2773,
	435, 2773,
	436, 2773,
	437, 2773,
	438, 2773,
	439, 2773,
	440, 2773,
	441, 2773,
	442, 2773,
	443, 2773,
	444, 2773,
	445, 2773,
	446, 2773,
	447, 2773,
	448, 2773,
	449, 2773,
	450, 2773,
	451, 2773,
	452, 2773,
	453, 2773,
	454, 2773,
	455, 2773,
	456, 2773,
	457, 2773,
	458, 2773,
	460, 2773,
	461, 2773,
	462, 2773,
	463, 2773,
	464, 2773,
	465, 2773,
	467, 2773,
	468, 2773,
	469, 2773,
	470, 2773,
	471, 2773,
	472, 2773,
	473, 2773,
	474, 2773,
	475, 2773,
	476, 2773,
	477, 2773,
	478, 2773,
	479, 2773,
	480, 2773,
	481, 2773,
	483, 2773,
	485, 2773,
	486, 2773,
	487, 2773,
	488, 2773,
	489, 2773,
	490, 2773,
	491, 2773,
	492, 2773,
	493, 2773,
	494, 2773,
	495, 2773,
	496, 2773,
	497, 2773,
	498, 2773,
	499, 2773,
	500, 2773,
	501, 2773,
	503, 2773,
	504, 2773,
	505, 2773,
	506, 2773,
	507, 2773,
	509, 2773,
	510, 2773,
	511, 2773,
	512, 2773,
	513, 2773,
	514, 2773,
	515, 2773,
	516, 2773,
	517, 2773,
	519, 2773,
	520, 2773,
	521, 2773,
	522, 2773,
	523, 2773,
	525, 2773,
	527, 2773,
	528, 2773,
	529, 2773,
	530, 2773,
	531, 2773,
	532, 2773,
	534, 2773,
	535, 2773,
	536, 2773,
	537, 2773,
	538, 2773,
	539, 2773,
	540, 2773,
	543, 2773,
	544, 2773,
	545, 2773,
	546, 2773,
	547, 2773,
	548, 2773,
	549, 2773,
	551, 2773,
	554, 2773,
	555, 2773,
	556, 2773,
	557, 2773,
	558, 2773,
	559, 2773,
	561, 2773,
	562, 2773,
	563, 2773,
	564, 2773,
	565, 2773,
	566, 2773,
	567, 2773,
	572, 2773,
	573, 2773,
	574, 2773,
	575, 2773,
	576, 2773,
	577, 2773,
	578, 2773,
	580, 2773,
	589, 2773,
	590, 2773,
	591, 2773,
	592, 2773,
	593, 2773,
	594, 2773,
	596, 2773,
	597, 2773,
	598, 2773,
	599, 2773,
	600, 2773,
	601, 2773,
	602, 2773,
	603, 2773,
	604, 2773,
	606, 2773,
	609, 2773,
	610, 2773,
	612, 2773,
	613, 2773,
	-2, 0,
	-1, 1639,
	189, 2651,
	524, 2651,
	591, 2651,
	610, 2651,
	-2, 0,
	-1, 1688,
	399, 893,
	465, 893,
	507, 893,
	529, 893,
	-2, 0,
	-1, 1699,
	1, 1404,
	607, 1404,
	609, 1404,
	611, 1404,
	-2, 0,
	-1, 1716,
	1, 888,
	607, 888,
	609, 888,
	611, 888,
	-2, 0,
	-1, 1717,
	1, 932,
	607, 932,
	609, 932,
	611, 932,
	-2, 0,
	-1, 1718,
	1, 940,
	607, 940,
	609, 940,
	611, 940,
	-2, 0,
	-1, 1721,
	1, 897,
	607, 897,
	609, 897,
	611, 897,
	-2, 0,
	-1, 1723,
	1, 903,
	607, 903,
	609, 903,
	611, 903,
	-2, 0,
	-1, 1726,
	1, 899,
	607, 899,
	609, 899,
	611, 899,
	-2, 0,
	-1, 1731,
	1, 913,
	607, 913,
	609, 913,
	611, 913,
	-2, 0,
	-1, 1762,
	1, 2634,
	607, 2634,
	609, 2634,
	610, 2634,
	611, 2634,
	-2, 0,
	-1, 1766,
	1, 985,
	607, 985,
	609, 985,
	611, 985,
	-2, 0,
	-1, 1781,
	1, 1454,
	611, 1454,
	-2, 1459,
	-1, 1784,
	171, 1610,
	184, 1610,
	277, 1610,
	347, 1610,
	-2, 1548,
	-1, 1886,
	152, 1569,
	171, 1569,
	184, 1569,
	244, 1569,
	277, 1569,
	347, 1569,
	357, 1569,
	541, 1569,
	-2, 2017,
	-1, 1947,
	609, 2192,
	-2, 0,
	-1, 1982,
	152, 1569,
	171, 1569,
	184, 1569,
	244, 1569,
	277, 1569,
	347, 1569,
	357, 1569,
	541, 1569,
	-2, 1699,
	-1, 2019,
	524, 2648,
	610, 2648,
	613, 2648,
	-2, 0,
	-1, 2036,
	608, 1840,
	-2, 1828,
	-1, 2068,
	189, 2648,
	610, 2648,
	613, 2648,
	-2, 0,
	-1, 2110,
	1, 702,
	611, 702,
	-2, 1459,
	-1, 2251,
	225, 259,
	-2, 2340,
	-1, 2252,
	225, 260,
	-2, 312,
	-1, 2359,
	1, 890,
	607, 890,
	609, 890,
	611, 890,
	-2, 0,
	-1, 2360,
	1, 934,
	607, 934,
	609, 934,
	611, 934,
	-2, 0,
	-1, 2361,
	1, 942,
	607, 942,
	609, 942,
	611, 942,
	-2, 0,
	-1, 2362,
	1, 987,
	607, 987,
	609, 987,
	611, 987,
	-2, 0,
	-1, 2403,
	1, 915,
	607, 915,
	609, 915,
	611, 915,
	-2, 0,
	-1, 2421,
	1, 970,
	607, 970,
	609, 970,
	611, 970,
	-2, 0,
	-1, 2466,
	444, 1637,
	445, 1637,
	-2, 1873,
	-1, 2499,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1893,
	-1, 2500,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1894,
	-1, 2501,
	95, 0,
	258, 0,
	259, 0,
	593, 0,
	594, 0,
	-2, 1895,
	-1, 2502,
	95, 0,
	258, 0,
	259, 0,
	593, 0,
	594, 0,
	-2, 1896,
	-1, 2503,
	95, 0,
	258, 0,
	259, 0,
	593, 0,
	594, 0,
	-2, 1897,
	-1, 2504,
	95, 0,
	258, 0,
	259, 0,
	593, 0,
	594, 0,
	-2, 1898,
	-1, 2505,
	95, 0,
	258, 0,
	259, 0,
	593, 0,
	594, 0,
	-2, 1899,
	-1, 2506,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1900,
	-1, 2518,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1912,
	-1, 2519,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1913,
	-1, 2520,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1914,
	-1, 2524,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1921,
	-1, 2530,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1925,
	-1, 2532,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1933,
	-1, 2533,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1934,
	-1, 2534,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1935,
	-1, 2535,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1936,
	-1, 2709,
	5, 2344,
	189, 2203,
	608, 2341,
	-2, 2332,
	-1, 2710,
	189, 2204,
	-2, 2724,
	-1, 2711,
	189, 2205,
	-2, 2536,
	-1, 2712,
	189, 2206,
	-2, 2414,
	-1, 2713,
	189, 2207,
	-2, 2473,
	-1, 2714,
	189, 2208,
	-2, 2521,
	-1, 2715,
	189, 2209,
	-2, 2646,
	-1, 2716,
	189, 2210,
	-2, 2000,
	-1, 2787,
	1, 1700,
	2, 1700,
	106, 1700,
	152, 1700,
	171, 1700,
	184, 1700,
	190, 1700,
	208, 1700,
	211, 1700,
	240, 1700,
	244, 1700,
	255, 1700,
	273, 1700,
	277, 1700,
	316, 1700,
	347, 1700,
	351, 1700,
	357, 1700,
	434, 1700,
	438, 1700,
	541, 1700,
	552, 1700,
	569, 1700,
	570, 1700,
	571, 1700,
	581, 1700,
	607, 1700,
	609, 1700,
	611, 1700,
	613, 1700,
	-2, 1699,
	-1, 2800,
	608, 2313,
	-2, 2327,
	-1, 2802,
	1, 329,
	569, 329,
	-2, 1596,
	-1, 2831,
	608, 1839,
	-2, 1829,
	-1, 3022,
	1, 1307,
	429, 1266,
	467, 1266,
	584, 1266,
	588, 1266,
	607, 1307,
	609, 1307,
	611, 1307,
	-2, 1596,
	-1, 3208,
	352, 1640,
	-2, 2763,
	-1, 3209,
	352, 1641,
	-2, 2631,
	-1, 3213,
	444, 2269,
	445, 2269,
	-2, 1998,
	-1, 3214,
	444, 2273,
	445, 2273,
	-2, 1999,
	-1, 3215,
	444, 2270,
	445, 2270,
	-2, 1998,
	-1, 3216,
	444, 2274,
	445, 2274,
	-2, 1999,
	-1, 3230,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1923,
	-1, 3231,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1927,
	-1, 3237,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1929,
	-1, 3461,
	1, 697,
	607, 697,
	609, 697,
	611, 697,
	-2, 1459,
	-1, 3627,
	43, 2304,
	-2, 1049,
	-1, 3632,
	1, 1307,
	607, 1307,
	609, 1307,
	611, 1307,
	-2, 1596,
	-1, 3743,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1931,
	-1, 3750,
	249, 0,
	251, 0,
	337, 0,
	-2, 1950,
	-1, 3818,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1979,
	-1, 3819,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1980,
	-1, 3820,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1981,
	-1, 3824,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1985,
	-1, 3825,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1986,
	-1, 3826,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1987,
	-1, 3873,
	608, 2314,
	-2, 2328,
	-1, 4055,
	610, 2880,
	-2, 1522,
	-1, 4116,
	249, 0,
	251, 0,
	337, 0,
	-2, 1951,
	-1, 4119,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1954,
	-1, 4120,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1956,
	-1, 4227,
	610, 2329,
	-2, 1342,
	-1, 4381,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1955,
	-1, 4382,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 1957,
	-1, 4393,
	249, 0,
	-2, 1990,
	-1, 4585,
	249, 0,
	-2, 1991,
	-1, 4786,
	50, 0,
	222, 0,
	276, 0,
	473, 0,
	578, 0,
	592, 0,
	-2, 2727,
}

const sqlPrivate = 57344

const sqlLast = 134937

var sqlAct = [...]int{
	273, 4779, 3616, 4982, 4890, 4507, 4627, 4903, 3368, 3110,
	3097, 4447, 4844, 4778, 4785, 4767, 4919, 4619, 4796, 3615,
	4676, 4754, 4099, 4732, 4655, 4712, 2079, 4735, 4797, 4538,
	4798, 4429, 1263, 4651, 2160, 2963, 2937, 4514, 4492, 4589,
	3783, 2324, 4857, 4223, 4336, 4272, 2248, 1274, 4784, 4331,
	4452, 3067, 4297, 3735, 4402, 2476, 3482, 4370, 1348, 1344,
	4039, 3649, 4047, 4318, 3974, 2144, 4523, 4320, 4311, 4224,
	4204, 4552, 3222, 2893, 717, 828, 1337, 1793, 2976, 2092,
	2742, 3542, 2547, 3643, 4341, 4020, 4002, 2486, 4004, 3485,
	2168, 3611, 3119, 2477, 4398, 3690, 1411, 3121, 2335, 3692,
	3134, 828, 788, 1083, 2023, 3593, 2333, 3086, 1988, 3053,
	3592, 3876, 3413, 3391, 4155, 1502, 3383, 3600, 1350, 2024,
	4098, 3351, 3374, 1091, 179, 3118, 3081, 1339, 1655, 728,
	3129, 2297, 901, 4, 3112, 3063, 3083, 1696, 3098, 905,
	1957, 2179, 2237, 2235, 4891, 3504, 3029, 2627, 3372, 2195,
	2895, 3844, 2779, 2483, 3350, 2780, 1933, 1864, 4590, 1894,
	2560, 39, 3206, 2006, 3479, 896, 1509, 3128, 823, 2236,
	2212, 784, 2782, 1342, 1140, 1595, 2993, 1254, 2231, 3057,
	2219, 2148, 1316, 1144, 2625, 2090, 2152, 3420, 3068, 1392,
	2760, 1781, 2616, 1149, 2143, 1958, 267, 1330, 2465, 2138,
	2448, 2814, 266, 1653, 2544, 2446, 3613, 761, 1632, 2284,
	1977, 3091, 1598, 829, 830, 2918, 4677, 179, 3122, 2881,
	970, 825, 704, 1379, 1974, 3996, 726, 2813, 2936, 1928,
	2769, 2619, 2739, 2750, 1257, 1967, 2597, 2705, 1236, 1794,
	1271, 1878, 188, 2671, 189, 769, 1795, 1731, 2447, 2449,
	1716, 1327, 1630, 2245, 2310, 1623, 1151, 2283, 1094, 1534,
	780, 2167, 4845, 4904, 2470, 721, 3064, 1125, 1259, 44,
	108, 834, 1800, 43, 41, 744, 32, 837, 718, 30,
	729, 818, 877, 1253, 28, 1234, 3260, 1780, 991, 1545,
	3858, 3254, 3859, 3370, 4995, 878, 4825, 834, 2759, 2081,
	1538, 2081, 4985, 837, 1087, 2081, 3668, 4969, 160, 4422,
	2081, 2759, 4419, 2081, 4185, 2081, 73, 4968, 46, 45,
	4958, 2759, 920, 4939, 2257, 4937, 4876, 4451, 4833, 4451,
	2257, 4822, 4834, 74, 3659, 2759, 155, 3658, 2257, 4820,
	4817, 4814, 4782, 2759, 4818, 4815, 2257, 4781, 4780, 78,
	3429, 2257, 2102, 4775, 3321, 3322, 2257, 2102, 3446, 4774,
	67, 4765, 1251, 2102, 4763, 4451, 4760, 48, 4451, 157,
	4526, 4730, 4701, 4694, 4693, 4451, 2822, 2759, 2759, 4688,
	4687, 4681, 4647, 4451, 4451, 2257, 4288, 47, 4587, 87,
	4569, 4566, 2822, 4563, 4084, 2257, 4516, 4451, 4470, 4469,
	4517, 2099, 2257, 2257, 1237, 1237, 4458, 4457, 1077, 4450,
	2257, 4451, 1388, 4451, 1269, 4409, 50, 68, 3444, 2257,
	3668, 2257, 1068, 4383, 1067, 51, 1559, 2822, 4360, 4349,
	57, 1087, 2102, 3668, 4267, 158, 4250, 4118, 2759, 2099,
	2759, 2822, 4063, 49, 2334, 107, 3685, 1388, 4057, 4018,
	93, 104, 3685, 4019, 3868, 93, 3866, 2842, 3869, 3851,
	3867, 1088, 3767, 2759, 3763, 3684, 2257, 2752, 2759, 3685,
	3321, 3322, 2818, 3675, 3367, 1287, 1082, 3676, 2759, 3848,
	3362, 3361, 3312, 3310, 2759, 2759, 3313, 3311, 1294, 3221,
	3302, 3300, 52, 73, 3303, 2759, 3271, 3269, 3138, 1240,
	2759, 1241, 2102, 3270, 3108, 3321, 3322, 2759, 2320, 3107,
	74, 94, 2865, 2320, 2257, 2821, 2759, 2811, 1238, 2822,
	2804, 2759, 4702, 2758, 2257, 3327, 78, 2759, 2319, 4591,
	3321, 3322, 2320, 3339, 3340, 3341, 4582, 237, 4570, 4526,
	2102, 3094, 3848, 2751, 4329, 4288, 2257, 2099, 1288, 4251,
	4084, 3676, 4114, 2966, 2880, 3321, 3322, 2172, 2117, 2878,
	2759, 2080, 2096, 3059, 1288, 2256, 87, 2986, 1953, 1533,
	3957, 3321, 3322, 3738, 3339, 3340, 3341, 3712, 1975, 2224,
	1698, 2796, 2795, 3660, 2794, 2793, 239, 2792, 1242, 1239,
	1076, 237, 1075, 4113, 1074, 1073, 3321, 3322, 1072, 3339,
	3340, 3341, 3661, 4807, 1071, 3336, 1070, 903, 3321, 3322,
	1066, 1065, 1064, 1063, 1062, 1061, 1060, 1059, 3753, 3180,
	1147, 1058, 107, 1057, 1056, 1055, 1054, 93, 104, 1053,
	3336, 1052, 1810, 1811, 3337, 238, 1051, 1050, 1146, 1049,
	239, 3327, 1558, 1031, 968, 967, 3336, 966, 965, 231,
	964, 963, 962, 961, 960, 959, 958, 957, 232, 956,
	97, 955, 1813, 954, 953, 952, 2082, 951, 2082, 950,
	949, 3336, 2082, 948, 947, 946, 3327, 2082, 53, 945,
	2082, 944, 2082, 943, 942, 4171, 190, 3259, 94, 238,
	941, 940, 939, 938, 56, 937, 936, 1812, 935, 59,
	934, 3327, 933, 923, 922, 918, 917, 911, 910, 69,
	1863, 895, 894, 851, 850, 58, 187, 100, 1810, 1811,
	103, 849, 1722, 848, 54, 840, 3327, 839, 159, 838,
	804, 4806, 795, 2099, 1553, 794, 55, 793, 1123, 775,
	190, 261, 3327, 1538, 260, 259, 237, 258, 1813, 257,
	3337, 237, 256, 255, 62, 254, 2654, 253, 3658, 150,
	252, 251, 1353, 1149, 150, 250, 249, 3327, 3343, 1662,
	248, 247, 2395, 246, 1648, 156, 245, 244, 243, 3327,
	2652, 242, 1288, 1812, 1546, 3337, 241, 240, 4130, 3338,
	1149, 1149, 1149, 3897, 3862, 239, 3686, 3416, 3365, 4343,
	239, 1666, 3282, 1818, 3265, 3256, 3321, 3322, 1414, 3343,
	3337, 3162, 1414, 3039, 3076, 2826, 2801, 1539, 2786, 1353,
	2638, 154, 2636, 1978, 2146, 2101, 1863, 2001, 1905, 1541,
	1400, 2327, 1273, 4803, 3343, 3337, 192, 97, 1896, 1936,
	3366, 4783, 2099, 1149, 238, 1149, 1935, 1149, 2257, 238,
	2852, 3337, 1807, 1353, 2080, 1396, 1397, 1398, 231, 2099,
	1266, 1863, 2096, 231, 2441, 4762, 1652, 232, 4662, 4579,
	4397, 4594, 232, 237, 1939, 191, 3337, 4573, 1265, 1353,
	1936, 4571, 1383, 237, 4350, 4442, 1863, 1935, 3337, 1818,
	1517, 2751, 1512, 187, 100, 190, 1250, 103, 3, 1353,
	190, 1903, 4328, 4191, 1547, 3338, 1353, 4153, 2300, 4152,
	4146, 1863, 1288, 4145, 1149, 1934, 1149, 4144, 2326, 4137,
	1353, 4136, 239, 237, 4134, 1360, 1149, 1863, 1149, 4129,
	4126, 904, 239, 4125, 4017, 3901, 150, 3900, 1321, 1324,
	3338, 1537, 3323, 3324, 3325, 3326, 3328, 3329, 3899, 4023,
	1552, 1547, 1863, 3872, 1375, 3839, 1547, 1604, 1607, 3838,
	3837, 1334, 3759, 3754, 1863, 3338, 1547, 3411, 3358, 1361,
	3349, 238, 239, 3320, 3317, 1377, 1353, 3327, 1267, 3316,
	3314, 238, 3309, 3308, 1407, 231, 1499, 1504, 1863, 3307,
	3338, 1522, 3304, 1090, 232, 231, 1149, 3301, 154, 1149,
	1897, 3281, 1895, 2264, 232, 1544, 3338, 1551, 1507, 1557,
	4345, 1898, 2262, 192, 3264, 3257, 3255, 1633, 3109, 2787,
	2609, 238, 3093, 179, 179, 1807, 1896, 1806, 834, 4989,
	4929, 3338, 190, 4928, 837, 231, 3321, 3322, 73, 4024,
	1369, 4892, 2622, 3338, 232, 1536, 1535, 4843, 4841, 1275,
	1593, 3785, 191, 4722, 4654, 74, 3330, 3331, 3323, 3324,
	3325, 3326, 3328, 3329, 4638, 1635, 1637, 3078, 4635, 1667,
	4634, 78, 190, 4633, 4613, 3436, 1646, 4612, 1651, 3955,
	4610, 1610, 4593, 4592, 4567, 4551, 4550, 2550, 1660, 4536,
	1665, 4533, 3331, 3323, 3324, 3325, 3326, 3328, 3329, 4532,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 3333, 3334,
	3335, 87, 4527, 3363, 4466, 3332, 3330, 3331, 3323, 3324,
	3325, 3326, 3328, 3329, 4437, 4395, 4378, 1624, 4377, 4357,
	4356, 4314, 4289, 1149, 1383, 2623, 4170, 1383, 1740, 1149,
	3332, 3330, 3331, 3323, 3324, 3325, 3326, 3328, 3329, 3333,
	3334, 3335, 903, 4151, 4085, 1723, 3332, 3330, 3331, 3323,
	3324, 3325, 3326, 3328, 3329, 49, 4077, 107, 4595, 1088,
	4074, 1785, 93, 104, 3333, 3334, 3335, 1626, 3943, 237,
	3942, 3332, 3330, 3331, 3323, 3324, 3325, 3326, 3328, 3329,
	2556, 237, 1672, 3332, 3330, 3331, 3323, 3324, 3325, 3326,
	3328, 3329, 3925, 3924, 1647, 4420, 3922, 3327, 4024, 3854,
	1779, 3842, 3749, 1883, 3687, 3669, 1661, 2624, 3635, 2621,
	1814, 1815, 1816, 1817, 1819, 1820, 237, 3559, 239, 237,
	3517, 237, 3484, 94, 3438, 3286, 3285, 3280, 3246, 1885,
	239, 237, 3052, 1942, 1149, 1149, 1149, 1941, 1940, 1937,
	1149, 1929, 1927, 2833, 2832, 2798, 2791, 1271, 237, 1271,
	2757, 2634, 1882, 2000, 1956, 1951, 1689, 4344, 1950, 1949,
	1948, 1947, 1946, 3077, 1414, 239, 1945, 238, 239, 1944,
	239, 1943, 1808, 1725, 1149, 1955, 1924, 828, 1724, 238,
	239, 231, 1923, 2041, 828, 1922, 1921, 1920, 1919, 1786,
	232, 1918, 1917, 231, 1916, 1915, 1914, 239, 1816, 1817,
	1819, 1820, 232, 1913, 1912, 1629, 1911, 1910, 1909, 1898,
	1884, 1881, 1876, 237, 238, 1368, 1782, 238, 190, 238,
	1964, 1292, 1790, 1789, 1068, 1283, 1067, 2328, 231, 238,
	190, 231, 2824, 231, 3408, 4317, 4187, 232, 2086, 4122,
	232, 2088, 232, 231, 1784, 1938, 238, 2093, 1803, 1804,
	2011, 2095, 232, 2653, 2014, 3896, 2098, 3865, 3857, 1149,
	231, 3268, 239, 2789, 1353, 190, 2137, 2626, 190, 232,
	190, 1985, 97, 4189, 179, 1961, 1962, 2651, 3664, 3895,
	190, 1897, 1863, 1149, 1810, 1811, 3325, 3326, 3328, 3329,
	3434, 1414, 1879, 1088, 1996, 1393, 1395, 190, 1237, 2162,
	4926, 3321, 3322, 2129, 2128, 2137, 4918, 2137, 2139, 1930,
	1931, 238, 1992, 2137, 1813, 2964, 237, 2637, 2135, 2635,
	4219, 1269, 4636, 1269, 4528, 231, 4519, 4253, 187, 100,
	1388, 4518, 103, 4348, 232, 4291, 4290, 4252, 1777, 2108,
	237, 4173, 4089, 4088, 2010, 4799, 1919, 4574, 4087, 1812,
	4086, 4572, 3860, 2009, 4212, 1919, 3689, 2941, 237, 2107,
	1986, 1383, 190, 1394, 2005, 239, 904, 1629, 2301, 1976,
	3520, 150, 3688, 834, 3671, 4872, 3670, 4870, 2207, 837,
	834, 4441, 2114, 1983, 4524, 2620, 837, 4027, 1936, 239,
	1978, 3736, 1249, 2084, 1904, 1935, 3969, 1388, 2015, 3551,
	1688, 3306, 3305, 1389, 2221, 2064, 3228, 239, 2923, 4213,
	1391, 1954, 2123, 3940, 238, 1980, 2991, 2835, 1047, 1088,
	1995, 3680, 1353, 1353, 1994, 1993, 2132, 1991, 231, 3618,
	1990, 3617, 1414, 154, 3486, 1989, 1907, 232, 238, 2035,
	1388, 1697, 1741, 4855, 2021, 2325, 4515, 4829, 192, 4810,
	4795, 3601, 231, 3135, 2110, 1698, 238, 2172, 2239, 1628,
	2238, 232, 4031, 4014, 1048, 190, 3971, 3966, 3948, 3709,
	231, 3459, 2332, 2351, 4399, 3370, 3787, 3274, 2617, 232,
	2972, 2920, 2831, 1952, 4804, 1932, 3609, 191, 2202, 190,
	2211, 2294, 2622, 2216, 1603, 1529, 1364, 1320, 2983, 4819,
	4816, 3654, 3917, 2980, 2978, 4628, 2106, 190, 1676, 4873,
	265, 4332, 4729, 4606, 3323, 3324, 3325, 3326, 3328, 3329,
	3489, 3935, 3116, 3090, 1385, 3584, 4464, 1353, 4874, 1353,
	2113, 1353, 4238, 2206, 4461, 4460, 890, 2205, 4439, 3730,
	4235, 3463, 2971, 2919, 2134, 1809, 2140, 1353, 1353, 2130,
	2249, 2254, 4805, 1093, 4488, 3984, 4240, 1570, 1353, 2866,
	2456, 1578, 1045, 4908, 3435, 2197, 4984, 1531, 1043, 4433,
	1353, 2409, 1353, 1353, 1353, 3161, 1738, 1041, 1039, 4642,
	2884, 2178, 2133, 2407, 3465, 2623, 1036, 2241, 2242, 4481,
	4472, 4281, 3031, 2884, 4280, 2882, 828, 2243, 3982, 3981,
	3973, 3963, 1086, 2290, 3962, 3960, 2337, 1390, 2882, 1027,
	3959, 3947, 2350, 2667, 2200, 3912, 3911, 4208, 1149, 2454,
	834, 1628, 3590, 4209, 3983, 3589, 837, 1092, 2111, 1739,
	1395, 2172, 3428, 4214, 2295, 2124, 1378, 1536, 1535, 4497,
	2203, 3279, 3278, 2307, 891, 1633, 3277, 1633, 3276, 1579,
	3232, 2989, 2988, 1149, 2985, 2974, 2957, 2956, 2951, 2950,
	2199, 2196, 2949, 2928, 2215, 2927, 1386, 2624, 2888, 2621,
	2812, 2531, 1783, 2330, 2542, 4211, 1387, 2666, 2355, 1737,
	2488, 3087, 2839, 2255, 2198, 2724, 4376, 1149, 2315, 1149,
	1674, 2816, 1033, 4215, 1085, 2440, 1149, 1394, 1574, 1149,
	3710, 2041, 2041, 1414, 2540, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 2317, 1149, 2276, 1149, 1149, 1149, 1149, 4234, 2275,
	2304, 2338, 1616, 2925, 1615, 767, 1395, 1389, 2343, 4462,
	3486, 4197, 2458, 2309, 4236, 1389, 2313, 1266, 3549, 1266,
	1149, 2455, 767, 4909, 1149, 1149, 2921, 2921, 2396, 2321,
	2445, 2322, 1149, 2430, 3519, 1265, 1149, 1265, 1149, 1149,
	1369, 1626, 834, 2312, 4434, 2312, 1414, 1088, 837, 1088,
	2274, 2825, 1149, 1149, 1149, 1149, 2239, 1087, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 2342, 2380, 2169, 2325,
	2484, 2485, 2438, 1394, 4210, 4196, 1614, 2626, 1613, 2945,
	2359, 2347, 1306, 4913, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 2370, 1720, 1532, 2453, 1149, 2536, 2180,
	802, 1775, 2165, 1388, 2598, 2599, 1966, 2938, 2939, 1271,
	1587, 2873, 2433, 2546, 4220, 4221, 1414, 3141, 2598, 2614,
	2537, 2403, 2184, 2367, 2546, 1271, 2538, 1820, 1385, 2209,
	2543, 2897, 2170, 2171, 1592, 1267, 1385, 1267, 2469, 2482,
	4498, 1149, 1414, 2481, 3329, 2662, 2938, 2939, 2141, 2142,
	3175, 2617, 4496, 1690, 2938, 2939, 4621, 2194, 4494, 2911,
	2360, 2413, 2166, 1776, 2708, 2708, 2722, 2208, 2598, 2442,
	3204, 2743, 2745, 2457, 2444, 2443, 4254, 2749, 2450, 2181,
	2562, 3550, 4914, 1068, 2210, 2473, 1068, 1068, 2474, 2475,
	1970, 4873, 2803, 1736, 2774, 2620, 1669, 2613, 4941, 893,
	892, 1750, 1719, 1720, 2153, 2401, 4493, 2035, 2035, 2154,
	4375, 1390, 3920, 4801, 800, 2204, 2456, 2664, 1996, 1390,
	2207, 2799, 2665, 3719, 2361, 2668, 2432, 2669, 2670, 4237,
	2982, 2766, 1788, 2004, 4495, 2364, 766, 2368, 2358, 3219,
	1973, 1084, 1686, 1353, 1353, 2020, 2900, 1985, 3462, 1367,
	4232, 2847, 2069, 766, 2071, 1968, 2421, 2851, 2201, 2558,
	1698, 1698, 2981, 1279, 3718, 2910, 1237, 2979, 2977, 1717,
	1386, 2862, 1194, 1971, 2611, 2454, 3944, 2924, 1386, 2788,
	1387, 4623, 3932, 1269, 2528, 2815, 179, 1414, 1387, 2883,
	2185, 2209, 1088, 4916, 3186, 2819, 3177, 2554, 2765, 1269,
	2314, 2626, 1088, 2861, 2552, 1276, 1088, 2429, 1675, 1754,
	4279, 1719, 2420, 2855, 1670, 2827, 1969, 1599, 2539, 3961,
	2104, 2041, 2717, 2155, 2734, 2773, 2704, 2778, 2541, 924,
	2784, 2785, 2747, 1718, 2838, 2755, 2756, 1573, 1037, 2172,
	716, 2159, 2771, 2772, 1037, 2767, 2408, 768, 931, 3776,
	1281, 3385, 1938, 1037, 1038, 1383, 2186, 2187, 2406, 1983,
	2452, 3958, 1037, 1142, 768, 1414, 711, 1018, 2858, 1597,
	888, 1673, 887, 1018, 3218, 2206, 3904, 3891, 2863, 2205,
	2182, 1353, 3596, 2869, 2153, 3588, 2889, 3547, 2984, 2154,
	2887, 1081, 4802, 2948, 1733, 1088, 2926, 1081, 4561, 4887,
	4922, 3930, 1149, 1149, 2871, 1149, 2846, 2439, 3189, 3773,
	2849, 2834, 2850, 2857, 2887, 4219, 2156, 2161, 2225, 1280,
	1930, 1931, 4895, 2232, 3713, 912, 2183, 2455, 828, 4698,
	1353, 4894, 2854, 2837, 801, 2886, 2841, 2864, 1972, 2856,
	2931, 2872, 3243, 2975, 2810, 2153, 2946, 3597, 1034, 4212,
	2154, 4553, 2899, 4205, 2261, 2260, 2526, 1388, 4230, 2529,
	2930, 1353, 2870, 4944, 4554, 1388, 3211, 3212, 4862, 4104,
	4203, 1305, 3241, 4103, 4233, 1353, 3651, 1353, 3652, 4207,
	2867, 3594, 2914, 1019, 803, 3074, 3183, 841, 799, 1019,
	4972, 3774, 1353, 4915, 1576, 2929, 3034, 4800, 4555, 2157,
	2431, 3036, 2453, 2155, 4213, 2081, 2962, 4708, 2947, 2626,
	2525, 2366, 2892, 2955, 2902, 2905, 4425, 2958, 2222, 2965,
	1338, 2159, 2953, 3142, 3143, 4769, 2990, 4770, 3101, 2952,
	4629, 3023, 3024, 3993, 3149, 3150, 3151, 2226, 3473, 1599,
	1149, 4649, 2234, 3130, 3188, 3133, 3511, 4206, 2114, 2188,
	2163, 3132, 3384, 4622, 2940, 2942, 2943, 2944, 2954, 1751,
	3945, 3651, 3040, 4557, 2155, 3043, 3070, 3045, 2960, 3536,
	1505, 2970, 3562, 1516, 1338, 3234, 3185, 2035, 1748, 1633,
	925, 926, 2159, 179, 2885, 3139, 2545, 4556, 3159, 4306,
	3144, 3994, 3145, 834, 3032, 3464, 2156, 2161, 765, 837,
	2233, 2898, 1149, 3136, 3509, 4558, 3115, 2884, 1149, 1149,
	1536, 3037, 3092, 1699, 2210, 3092, 3238, 1530, 1290, 2222,
	4231, 4696, 2903, 1149, 834, 3105, 2189, 3537, 3050, 3103,
	837, 1024, 1023, 4861, 3992, 3060, 3528, 1024, 1023, 1277,
	1925, 1338, 1338, 3156, 3239, 2402, 3165, 3510, 3244, 3061,
	3191, 2626, 3193, 3026, 2208, 4920, 2192, 2156, 2161, 3167,
	3432, 3169, 2222, 3171, 4697, 3096, 1149, 1149, 3581, 3106,
	3535, 1966, 1149, 2218, 3501, 3117, 913, 914, 1020, 2157,
	3137, 2802, 3187, 3104, 1020, 1149, 1149, 2163, 3181, 1749,
	2253, 1149, 1149, 1278, 3529, 3505, 3173, 1149, 3085, 1787,
	2217, 1752, 1671, 2363, 4100, 3158, 2357, 2527, 2175, 1685,
	1687, 3027, 4208, 3595, 2193, 4388, 1366, 712, 4209, 3032,
	3168, 3166, 3170, 4836, 3172, 3931, 2151, 1970, 4214, 1266,
	2163, 4007, 3500, 4837, 2213, 2158, 932, 3527, 842, 843,
	2157, 4005, 1149, 1149, 1149, 1266, 4884, 1265, 1149, 3507,
	3474, 4752, 3235, 2553, 3025, 1970, 4372, 2191, 1149, 3199,
	2229, 4740, 4007, 1265, 2170, 2171, 2176, 4921, 3210, 4264,
	4211, 3194, 4005, 734, 3196, 1149, 3284, 1973, 1875, 927,
	928, 2770, 2608, 4945, 2149, 3201, 2783, 2777, 4215, 3200,
	1087, 2163, 2768, 3789, 2214, 3220, 4930, 1753, 4182, 713,
	3205, 2469, 1021, 4923, 4183, 1973, 4321, 4932, 1021, 2174,
	1971, 2961, 4307, 4316, 4094, 3506, 4284, 3227, 2227, 3892,
	1968, 4009, 1295, 3262, 3263, 4105, 4322, 2150, 3266, 1022,
	3732, 3202, 1704, 1098, 4656, 1022, 3240, 3878, 1971, 4860,
	4745, 4675, 4535, 3258, 4283, 3468, 3242, 1267, 4282, 714,
	4045, 715, 4009, 3639, 2282, 1963, 4008, 4973, 1293, 4559,
	1286, 2228, 703, 1267, 4181, 4560, 4022, 1149, 1149, 1149,
	1149, 1798, 2082, 3233, 4149, 915, 916, 1149, 1149, 1149,
	4101, 1969, 1149, 1026, 845, 844, 2472, 4008, 1797, 1026,
	2173, 3879, 1149, 1271, 1414, 2125, 1107, 4371, 1149, 3421,
	1149, 1025, 4459, 1797, 3377, 3378, 3828, 1025, 4950, 1271,
	4415, 4544, 2122, 4605, 4046, 2158, 1792, 3977, 3880, 4210,
	3877, 3964, 2904, 3916, 3702, 2462, 3480, 1414, 3640, 3888,
	3631, 3476, 3075, 3069, 3054, 3886, 2308, 3700, 2302, 1271,
	2296, 2288, 1414, 2268, 2267, 3772, 4657, 3693, 3273, 846,
	847, 2761, 3908, 1567, 2932, 1297, 774, 3843, 4713, 4220,
	4221, 1088, 3360, 2041, 3733, 2887, 3702, 1414, 1797, 3887,
	3401, 3414, 3883, 4678, 2414, 1972, 2158, 2118, 3379, 3700,
	4003, 4048, 4835, 1353, 4337, 3051, 4106, 2764, 2120, 3693,
	1308, 4513, 3856, 4511, 1796, 1085, 4436, 3884, 3492, 2348,
	3488, 3487, 3225, 1972, 3382, 1149, 3203, 3381, 1721, 1796,
	1727, 1726, 2809, 3449, 2808, 2807, 3451, 3452, 2806, 1149,
	2805, 3455, 2162, 3456, 3389, 3457, 4013, 1622, 2763, 1353,
	4006, 3387, 2121, 2762, 2041, 1608, 3058, 4616, 4373, 1620,
	3410, 1516, 4448, 3415, 4319, 930, 3923, 3695, 4508, 1609,
	4298, 2908, 1149, 3681, 2306, 3393, 2162, 4881, 3604, 3913,
	4653, 4006, 3694, 4423, 1798, 2463, 3388, 1269, 1353, 4354,
	3460, 3399, 3453, 4107, 1796, 3030, 3445, 3402, 3403, 1798,
	4150, 3430, 3433, 1269, 3466, 3419, 3407, 3371, 1516, 3695,
	1353, 3140, 1353, 3035, 3400, 3469, 3470, 3033, 3386, 2336,
	3491, 2114, 3829, 3496, 3694, 1383, 3498, 1875, 2221, 3355,
	3356, 3357, 3830, 1269, 2238, 1414, 3490, 2221, 3447, 3494,
	3439, 3440, 4949, 3441, 3477, 3881, 1353, 1679, 3563, 4431,
	1353, 2933, 2934, 3882, 3423, 3424, 3425, 3426, 3405, 4444,
	3406, 3552, 4719, 4353, 4443, 3522, 4658, 2114, 4726, 4710,
	4449, 3394, 3909, 3481, 4617, 3691, 4156, 3845, 2633, 1771,
	1353, 4885, 4747, 4886, 3475, 4883, 2425, 1773, 4821, 1770,
	1768, 3450, 4645, 1745, 1353, 3545, 1353, 4432, 1743, 3454,
	1414, 1705, 4637, 4394, 4148, 3885, 2114, 828, 1353, 3472,
	4012, 3352, 3565, 3560, 3567, 1715, 3748, 3571, 3461, 1353,
	3526, 3577, 3392, 3525, 3707, 1713, 3540, 3467, 2114, 1711,
	2114, 1709, 1707, 3706, 1353, 1701, 1695, 3512, 3513, 2035,
	3514, 3515, 3516, 3443, 3914, 3539, 4500, 3541, 3315, 1693,
	3524, 1271, 1618, 4720, 3245, 3422, 3508, 3398, 3647, 3623,
	3056, 3055, 2973, 2922, 2114, 4618, 2836, 773, 2114, 2434,
	2010, 2003, 3538, 3518, 1999, 1774, 1353, 1353, 3630, 3531,
	1657, 3573, 2405, 3645, 3353, 3579, 3614, 2372, 3728, 3554,
	3555, 1621, 3556, 3557, 3558, 3534, 3701, 3696, 3697, 3698,
	3699, 1353, 3727, 1619, 1792, 3179, 3561, 3553, 3572, 929,
	2035, 3667, 3578, 3178, 3147, 3548, 2451, 3638, 3656, 1732,
	2375, 2287, 3599, 2955, 3602, 3574, 3586, 3130, 2266, 3580,
	3532, 2070, 1908, 1668, 3533, 2247, 3130, 1591, 3701, 3696,
	3697, 3698, 3699, 2632, 4794, 4265, 1414, 3968, 3967, 1414,
	3711, 4266, 3587, 3163, 4249, 3164, 4709, 4335, 4271, 4262,
	4201, 3564, 4044, 1035, 3395, 3396, 3591, 3397, 2427, 4035,
	2930, 3980, 3641, 2426, 1772, 3606, 1769, 1767, 2293, 3585,
	1744, 3965, 1149, 3938, 3769, 1742, 3936, 3915, 4858, 1149,
	1149, 179, 179, 1149, 1149, 1149, 3627, 1149, 3628, 3648,
	3704, 3626, 1714, 834, 3703, 4330, 1149, 2041, 3634, 837,
	3629, 3679, 1712, 3619, 3088, 1149, 1710, 3080, 1708, 1706,
	1149, 3653, 1700, 1694, 3683, 1269, 1414, 3073, 3655, 3726,
	3662, 3062, 3048, 3665, 3666, 1149, 1692, 3047, 3028, 1617,
	4849, 2853, 2848, 1414, 2265, 3725, 3646, 3677, 2263, 2240,
	2223, 2190, 2177, 2041, 2041, 1149, 1149, 2164, 1149, 1149,
	1149, 2103, 2100, 2097, 2404, 2094, 3715, 2089, 3716, 2371,
	3717, 2087, 1347, 2083, 2074, 3734, 1149, 3644, 2013, 4874,
	1149, 1246, 2041, 2041, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 1149, 3705, 1149, 1801, 1247, 3801, 3223,
	3802, 3751, 3722, 1149, 1149, 2041, 4321, 2246, 2126, 4615,
	1149, 1040, 1042, 1044, 1088, 3761, 3762, 3575, 3731, 1524,
	3197, 1149, 2232, 1266, 3195, 2437, 4322, 3021, 4757, 4359,
	2419, 4352, 1271, 1271, 3723, 4351, 1149, 4278, 4193, 1266,
	3131, 1265, 2145, 3729, 1572, 2884, 4546, 2909, 4539, 4056,
	2362, 2884, 2172, 1562, 1765, 1766, 2399, 1265, 2305, 1328,
	2882, 1329, 2484, 3792, 3758, 3756, 2906, 1414, 2394, 1266,
	4756, 2435, 2369, 4241, 4273, 2038, 3267, 3874, 3779, 1600,
	3768, 1691, 1810, 1811, 4581, 4446, 2912, 1265, 4157, 4135,
	3840, 2484, 3807, 3784, 3503, 3224, 3791, 2913, 3861, 2935,
	1805, 3798, 1810, 1811, 1362, 1412, 1641, 1802, 1248, 1510,
	1296, 3799, 3775, 3777, 3778, 3800, 1149, 2436, 2913, 4877,
	1654, 4868, 3832, 3804, 3836, 3806, 3976, 3906, 262, 3847,
	4830, 3907, 1813, 3046, 2980, 1149, 3576, 179, 4032, 2289,
	1373, 1267, 2967, 1329, 1329, 2978, 3841, 1812, 3975, 2987,
	2969, 2917, 2915, 2035, 3852, 3853, 3833, 1267, 4718, 4703,
	4445, 4917, 4669, 2968, 2916, 4663, 2029, 1812, 1149, 1149,
	4614, 3937, 4530, 3939, 4506, 700, 1680, 4424, 4042, 3849,
	3850, 4034, 4021, 3871, 3633, 3095, 2748, 1267, 2109, 2022,
	4749, 2959, 1528, 1527, 3431, 4750, 4948, 3321, 3322, 2035,
	2035, 1810, 1811, 4749, 2876, 2877, 1269, 1269, 4750, 3864,
	1149, 3863, 2874, 2875, 4665, 4889, 1678, 1538, 4127, 2628,
	3894, 2876, 1677, 1157, 2874, 2663, 4041, 1747, 2035, 2035,
	1746, 4531, 1353, 4482, 4275, 1353, 3898, 4270, 4269, 4184,
	1353, 4180, 4179, 4123, 3979, 3893, 3780, 3569, 3949, 3566,
	1902, 1901, 4934, 4896, 4707, 4706, 4705, 4644, 4643, 4598,
	4596, 2035, 3954, 3956, 4509, 2041, 4476, 4421, 4418, 269,
	269, 269, 3953, 706, 707, 4417, 722, 706, 722, 732,
	3427, 4416, 772, 3919, 3970, 4414, 792, 1338, 4413, 4411,
	3972, 798, 3978, 4309, 4295, 4239, 1353, 4188, 269, 3941,
	4178, 4177, 1149, 4176, 3442, 3946, 4080, 4062, 4016, 3934,
	1271, 1149, 3926, 3637, 3636, 3497, 4058, 3448, 909, 3995,
	3997, 1353, 1353, 1353, 269, 3184, 2930, 3176, 3155, 4065,
	4049, 3154, 3153, 3152, 3079, 3049, 1338, 2907, 1353, 1353,
	1353, 2844, 2840, 2829, 2828, 2817, 2557, 2428, 2400, 2393,
	2392, 2391, 2390, 2389, 4050, 2303, 4001, 1353, 2114, 4010,
	2277, 1266, 4053, 1414, 2273, 4069, 2272, 1338, 1338, 4028,
	2271, 4011, 3991, 2270, 3999, 3990, 2269, 2077, 2076, 1265,
	2075, 4029, 3101, 2073, 3481, 2012, 1764, 3988, 1763, 1414,
	1702, 4015, 1149, 1149, 4000, 4033, 1586, 4081, 1149, 1149,
	2041, 4052, 3989, 1149, 1149, 1585, 1149, 1584, 1583, 3130,
	1582, 1149, 1581, 1580, 1575, 1571, 4038, 1569, 1568, 1521,
	1520, 1519, 1149, 1405, 1404, 1403, 4036, 1402, 1401, 1365,
	1315, 1314, 1313, 1312, 1311, 1310, 1309, 1307, 1149, 4051,
	1302, 1301, 4054, 1300, 1299, 4037, 1298, 4059, 902, 8,
	1229, 2116, 4072, 4064, 4090, 706, 706, 4075, 4060, 1046,
	4108, 1505, 4091, 269, 4070, 4071, 4079, 4109, 4076, 1032,
	4620, 4218, 4217, 4216, 4078, 2424, 92, 1577, 864, 1267,
	86, 2230, 3933, 4824, 1269, 4092, 4121, 997, 4746, 4648,
	1560, 872, 4728, 4030, 1516, 3499, 2992, 4102, 2374, 1271,
	3598, 1703, 2376, 3409, 4117, 2790, 4695, 1271, 4097, 4131,
	3283, 1414, 4588, 1414, 4387, 2631, 1906, 3364, 88, 4093,
	1271, 2035, 1133, 1179, 4305, 4304, 4202, 3918, 3120, 4302,
	4301, 1353, 1353, 2026, 2028, 1097, 1417, 4768, 2127, 1888,
	1139, 2136, 2830, 1893, 2707, 1156, 1153, 2030, 1414, 2032,
	1155, 1154, 3414, 2031, 1926, 1152, 2025, 4040, 3099, 3663,
	1627, 1625, 999, 2131, 2551, 2615, 3272, 1899, 1113, 1135,
	2612, 2002, 1291, 1271, 1124, 1271, 4147, 1112, 3390, 3369,
	3650, 3870, 2461, 882, 3318, 2618, 1282, 2731, 2723, 4165,
	2719, 3458, 3089, 2038, 2038, 1778, 4401, 1877, 1353, 3100,
	1399, 1117, 2549, 1890, 3250, 4225, 2471, 4225, 1414, 3657,
	1353, 3412, 2823, 1353, 4159, 4160, 179, 4753, 4228, 3788,
	4161, 4158, 4164, 3182, 1414, 4154, 4168, 2281, 1245, 4163,
	1244, 1289, 4169, 1243, 4734, 4194, 4195, 4172, 4731, 1516,
	2220, 4073, 3612, 2119, 2868, 4243, 4198, 2561, 3620, 1129,
	1338, 3721, 1266, 1266, 1515, 2418, 2035, 3375, 4200, 3682,
	4242, 1588, 797, 1353, 1353, 4453, 1141, 1862, 3017, 4186,
	1265, 1265, 3016, 1269, 4609, 1384, 1382, 1381, 1380, 4905,
	4971, 1269, 4192, 1353, 2029, 2029, 3929, 3928, 3927, 236,
	3217, 1799, 1791, 233, 1269, 1414, 235, 4263, 2147, 234,
	1353, 1516, 4268, 1516, 4274, 4310, 4276, 3875, 3418, 4828,
	4277, 3951, 3603, 4296, 23, 22, 2114, 21, 113, 42,
	20, 152, 4293, 130, 149, 1271, 148, 122, 2114, 4261,
	147, 2114, 146, 4248, 4338, 4324, 4327, 1353, 1353, 1353,
	1353, 145, 4258, 4299, 144, 4257, 151, 1269, 4260, 1269,
	143, 1414, 142, 137, 141, 140, 4286, 4225, 4339, 4247,
	139, 4285, 138, 1149, 1149, 1149, 136, 4300, 4355, 4287,
	1267, 1267, 4256, 4333, 134, 4259, 135, 129, 4292, 133,
	4342, 1414, 132, 131, 128, 4315, 1149, 127, 126, 1149,
	1149, 125, 4294, 124, 123, 121, 153, 120, 119, 1149,
	118, 2114, 2041, 117, 116, 115, 114, 1149, 1149, 4340,
	785, 786, 4347, 61, 60, 112, 110, 4326, 4323, 111,
	19, 40, 1414, 14, 1353, 65, 66, 18, 13, 35,
	91, 4362, 4379, 4308, 4361, 102, 101, 36, 99, 2258,
	98, 2323, 4367, 34, 17, 16, 4325, 4374, 15, 4368,
	96, 95, 33, 31, 11, 9, 1414, 1347, 2339, 37,
	1987, 12, 5, 184, 1149, 183, 4364, 186, 2341, 4346,
	182, 185, 90, 181, 180, 89, 29, 1149, 4384, 4390,
	2349, 10, 2352, 2353, 2354, 176, 1149, 4522, 4026, 81,
	178, 2041, 177, 175, 174, 173, 3889, 3890, 82, 1269,
	1149, 79, 172, 1149, 4407, 4408, 4396, 85, 171, 80,
	4427, 3902, 3903, 84, 3905, 83, 27, 1149, 6, 4467,
	4468, 64, 7, 4369, 1414, 4410, 3708, 105, 4456, 106,
	1266, 1353, 1284, 38, 77, 76, 75, 26, 63, 25,
	170, 1353, 1353, 4428, 4426, 218, 217, 216, 1265, 4483,
	4435, 4485, 215, 4486, 214, 213, 212, 211, 206, 205,
	210, 208, 207, 2038, 209, 1304, 204, 228, 4475, 227,
	221, 220, 4499, 4487, 226, 225, 224, 269, 223, 269,
	269, 222, 1333, 269, 1343, 4521, 1414, 219, 4512, 1353,
	3247, 3248, 230, 203, 4478, 1363, 4477, 202, 201, 199,
	195, 194, 198, 792, 4473, 200, 792, 1271, 1271, 197,
	4465, 4484, 196, 193, 229, 72, 168, 169, 71, 167,
	166, 165, 164, 4540, 4529, 163, 4502, 4501, 1149, 1149,
	269, 162, 269, 269, 1333, 4510, 269, 269, 3614, 4225,
	4225, 1343, 4549, 161, 70, 1149, 2041, 4541, 1267, 2114,
	4564, 4565, 4568, 4543, 2029, 269, 4520, 1540, 2035, 24,
	2, 1, 4505, 4491, 4537, 4525, 4490, 0, 0, 0,
	4504, 0, 0, 0, 4542, 4342, 4562, 0, 1565, 0,
	0, 4548, 4547, 0, 0, 0, 0, 0, 1149, 0,
	1149, 0, 1149, 4489, 0, 0, 0, 1590, 0, 0,
	1343, 0, 1271, 0, 269, 269, 4576, 1333, 4577, 4578,
	2487, 0, 4479, 4604, 0, 1149, 0, 1271, 0, 1266,
	0, 0, 0, 1516, 1516, 0, 0, 1266, 792, 0,
	269, 269, 0, 0, 4225, 0, 0, 1265, 0, 0,
	1266, 4580, 2466, 0, 0, 1265, 0, 2035, 4603, 4225,
	4586, 0, 0, 909, 0, 4600, 0, 0, 1265, 2162,
	4632, 4631, 0, 0, 4640, 0, 0, 0, 0, 1149,
	1149, 4624, 3345, 3346, 3347, 3348, 4625, 0, 0, 1149,
	0, 1269, 1269, 0, 1271, 0, 0, 1271, 0, 0,
	0, 1353, 4652, 1266, 0, 1266, 1516, 4639, 0, 0,
	0, 1353, 1353, 2629, 0, 0, 0, 0, 0, 0,
	0, 1265, 0, 1265, 0, 4641, 4225, 0, 1353, 4225,
	4686, 2293, 0, 0, 0, 4646, 0, 4672, 0, 0,
	4674, 269, 1149, 1149, 4660, 4661, 4659, 1267, 0, 4664,
	0, 4667, 1149, 4671, 4666, 1267, 0, 0, 0, 4679,
	0, 0, 0, 4682, 0, 4680, 269, 0, 1267, 4683,
	4684, 4685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4525, 0, 0, 0, 4721, 1269, 4689, 4690, 0,
	0, 0, 2555, 4725, 0, 0, 1149, 1149, 4700, 1149,
	2725, 1269, 0, 0, 0, 0, 4704, 0, 1888, 2800,
	0, 0, 2035, 2860, 1347, 0, 4733, 4736, 0, 0,
	0, 1267, 4699, 1267, 4716, 4717, 0, 0, 4650, 0,
	0, 4751, 4162, 0, 0, 0, 0, 4724, 0, 4723,
	0, 0, 0, 0, 0, 0, 0, 4742, 0, 0,
	4773, 0, 4670, 0, 4777, 1266, 4748, 1149, 1149, 1149,
	0, 1338, 4738, 2730, 4776, 0, 0, 0, 1269, 0,
	0, 1269, 0, 1265, 4771, 4758, 4737, 0, 0, 4741,
	0, 0, 0, 4764, 0, 4772, 0, 0, 4755, 0,
	1149, 0, 0, 0, 0, 4808, 0, 4813, 0, 0,
	0, 0, 4792, 4229, 4793, 0, 4790, 4791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4244, 4245, 0, 0, 4838, 0, 0, 0, 0, 4823,
	4840, 4826, 0, 0, 0, 4811, 4831, 0, 0, 0,
	0, 4854, 4852, 4842, 4827, 0, 0, 1149, 0, 0,
	0, 3022, 0, 0, 2879, 4853, 0, 4839, 0, 0,
	0, 4859, 4848, 0, 4846, 0, 0, 0, 4847, 706,
	1516, 0, 0, 1267, 0, 0, 4850, 4851, 0, 4879,
	4875, 0, 4856, 0, 0, 4759, 4867, 4871, 4869, 0,
	269, 4761, 269, 4865, 4866, 0, 269, 4878, 4733, 4880,
	2162, 4736, 1271, 0, 1271, 0, 4882, 0, 4901, 1540,
	1333, 2007, 269, 0, 269, 0, 4893, 0, 4899, 4911,
	269, 1540, 722, 4912, 4898, 0, 4910, 269, 1540, 4907,
	1540, 0, 4897, 4652, 4225, 0, 4225, 4888, 0, 0,
	0, 0, 2078, 0, 4925, 4900, 0, 4902, 0, 0,
	0, 4924, 0, 0, 269, 4358, 0, 4927, 0, 271,
	0, 269, 3148, 0, 0, 4936, 0, 0, 4755, 0,
	0, 0, 0, 4942, 0, 4938, 0, 4935, 1149, 1149,
	0, 0, 0, 4940, 0, 4943, 0, 1149, 0, 1149,
	1149, 0, 4946, 0, 0, 0, 1540, 0, 0, 4952,
	792, 4962, 4956, 0, 4961, 0, 4967, 0, 0, 0,
	4960, 4966, 4965, 4964, 0, 2038, 0, 4963, 4955, 0,
	4959, 0, 0, 4975, 4974, 0, 0, 4970, 0, 4978,
	4983, 4977, 4979, 0, 4980, 0, 4981, 1266, 1266, 4976,
	0, 0, 4987, 0, 4986, 0, 0, 0, 0, 0,
	1149, 4991, 4988, 4993, 0, 1265, 1265, 4983, 0, 4997,
	4994, 4990, 4996, 0, 0, 0, 0, 0, 0, 4953,
	4954, 0, 0, 0, 0, 3101, 1269, 0, 1269, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 3744,
	3745, 0, 1079, 0, 1018, 0, 0, 0, 0, 0,
	3321, 3322, 0, 3339, 3340, 3341, 2029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1081, 0,
	0, 0, 3752, 0, 0, 0, 0, 0, 0, 0,
	4992, 0, 1266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1266, 0, 0,
	1265, 0, 1111, 0, 0, 1267, 1267, 0, 0, 0,
	0, 0, 0, 269, 1080, 1265, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 3336, 0, 2029, 0, 3808,
	3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818,
	3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 0,
	3831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1019, 0, 0, 0, 1266, 3207, 0, 1266, 0, 0,
	0, 269, 4545, 0, 0, 269, 0, 0, 0, 0,
	0, 269, 1265, 0, 0, 1265, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	1267, 0, 0, 269, 0, 269, 0, 0, 0, 706,
	0, 269, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 3327, 0, 792, 0, 0, 0, 909, 2730, 0,
	0, 0, 0, 2573, 2574, 2575, 2592, 2593, 2594, 0,
	0, 0, 0, 0, 0, 0, 0, 4597, 2725, 2725,
	4599, 0, 269, 2595, 1333, 269, 0, 0, 0, 0,
	2293, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 1267, 0, 2373, 1267, 1866, 0, 3343, 269,
	269, 0, 269, 0, 269, 0, 269, 0, 269, 0,
	0, 0, 0, 0, 0, 2585, 0, 0, 1024, 1023,
	0, 2730, 2730, 0, 2581, 0, 0, 0, 0, 0,
	0, 0, 0, 2410, 0, 0, 2411, 0, 2412, 0,
	3337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 269, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1020, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 772, 0, 0,
	0, 792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 2586, 2587, 2588, 2589, 0, 0, 0, 0, 0,
	4691, 2580, 4692, 0, 0, 0, 1863, 0, 0, 0,
	0, 3376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2725, 2725, 2725, 2725, 0, 2038, 2038, 0, 0, 0,
	0, 0, 0, 0, 3404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3417,
	0, 0, 0, 0, 2038, 2038, 2563, 0, 0, 0,
	4743, 0, 1266, 4744, 1266, 0, 0, 2590, 2591, 1021,
	2029, 0, 0, 0, 3437, 3338, 0, 0, 0, 0,
	1265, 0, 1265, 2730, 2730, 2730, 2730, 2038, 0, 0,
	0, 0, 0, 0, 1078, 0, 1022, 0, 0, 0,
	2583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2029, 2029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4809, 0, 269, 0, 0, 2029, 2029, 0, 0, 0,
	1026, 706, 0, 0, 0, 0, 0, 0, 269, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	3582, 0, 269, 0, 0, 0, 0, 0, 2029, 0,
	1267, 0, 1267, 0, 2293, 0, 0, 0, 0, 0,
	269, 1343, 0, 0, 0, 0, 0, 0, 3607, 0,
	0, 0, 0, 0, 1338, 0, 0, 3321, 3322, 3624,
	3339, 3340, 3341, 0, 0, 0, 0, 0, 3333, 3334,
	3335, 0, 0, 0, 3632, 3332, 3330, 3331, 3323, 3324,
	3325, 3326, 3328, 3329, 0, 0, 0, 0, 0, 269,
	1343, 0, 0, 0, 722, 0, 0, 0, 2843, 0,
	0, 0, 0, 0, 269, 2584, 0, 269, 0, 0,
	0, 269, 0, 269, 4906, 0, 3673, 3674, 1333, 0,
	269, 269, 0, 1343, 1343, 2859, 0, 0, 0, 0,
	269, 0, 3336, 0, 0, 0, 0, 3417, 0, 1111,
	1111, 1111, 0, 0, 0, 0, 897, 0, 0, 0,
	0, 0, 0, 0, 4931, 0, 0, 1497, 0, 0,
	4933, 1497, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 900, 899, 2896, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	74, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 269, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 792, 0, 0, 3327, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 269, 2570, 2571,
	2572, 2596, 2582, 2576, 0, 2578, 2579, 2577, 2564, 2565,
	2566, 2567, 2568, 2569, 0, 0, 0, 0, 0, 0,
	0, 3344, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 3038, 0, 1510, 0, 0, 1412, 903, 2029, 0,
	0, 0, 0, 0, 0, 3343, 0, 0, 0, 0,
	49, 0, 107, 0, 0, 0, 1540, 93, 104, 269,
	0, 269, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3084, 0,
	0, 0, 2038, 0, 0, 0, 0, 3337, 2896, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 3113,
	909, 0, 2896, 2896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3765, 0, 0, 0, 0, 94, 0,
	0, 269, 0, 0, 0, 0, 0, 2725, 2725, 0,
	3781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 1333, 269, 0, 4393, 0, 0, 0, 0, 1540,
	0, 1540, 1343, 269, 0, 0, 1333, 0, 1333, 0,
	1333, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2730, 2730, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 269, 269, 269, 269, 1333, 0, 4438,
	1333, 0, 269, 0, 0, 269, 0, 2725, 2725, 2725,
	2725, 2725, 2725, 2725, 2725, 2725, 2725, 2725, 2725, 2725,
	2725, 2725, 2725, 2725, 2725, 2725, 2725, 0, 2725, 0,
	0, 0, 3338, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 1104, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3873, 0, 0, 97, 0, 0,
	0, 0, 0, 3010, 0, 0, 0, 0, 0, 0,
	2730, 2730, 2730, 2730, 2730, 2730, 2730, 2730, 2730, 2730,
	2730, 2730, 2730, 2730, 2730, 2730, 2730, 2730, 2730, 2730,
	0, 2730, 0, 0, 0, 0, 3000, 2998, 0, 1338,
	0, 0, 0, 3002, 3004, 2994, 0, 0, 0, 0,
	0, 0, 0, 187, 100, 0, 0, 103, 0, 0,
	0, 0, 3985, 0, 0, 3986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 3018, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 0, 3333, 3334, 3335, 0, 0,
	4585, 0, 3332, 3330, 3331, 3323, 3324, 3325, 3326, 3328,
	3329, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4066, 4067, 4068, 0, 1810, 1811, 0, 154, 0,
	0, 0, 0, 0, 0, 4608, 0, 0, 1347, 4082,
	4083, 0, 0, 192, 0, 1810, 1811, 0, 1841, 0,
	0, 238, 0, 0, 0, 1813, 0, 0, 0, 0,
	4630, 0, 0, 0, 0, 231, 0, 0, 1841, 0,
	0, 0, 0, 0, 232, 1813, 0, 0, 0, 0,
	0, 1866, 191, 0, 2038, 0, 0, 0, 0, 0,
	1812, 0, 1111, 0, 0, 0, 0, 0, 2996, 0,
	1497, 1866, 898, 0, 0, 0, 0, 0, 0, 3012,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 269, 0, 0, 1829,
	3011, 3001, 2999, 3003, 3005, 2995, 2997, 3013, 0, 0,
	3015, 0, 269, 0, 0, 0, 0, 706, 3007, 3009,
	0, 0, 706, 0, 0, 706, 0, 0, 706, 706,
	0, 0, 0, 0, 706, 0, 0, 0, 0, 0,
	0, 0, 269, 2038, 0, 2029, 0, 0, 0, 0,
	0, 0, 3019, 0, 0, 4112, 1540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	1540, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 269, 269, 0, 0,
	0, 4174, 4175, 0, 0, 0, 0, 0, 0, 0,
	0, 1497, 0, 0, 0, 0, 1840, 1842, 0, 0,
	0, 0, 0, 0, 0, 2896, 2896, 269, 0, 2007,
	0, 0, 0, 0, 2029, 2896, 1840, 1842, 3483, 0,
	0, 0, 0, 1810, 1811, 0, 2896, 3483, 0, 2896,
	3483, 0, 0, 3483, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 1841, 3014, 269, 269,
	2007, 0, 269, 1813, 0, 1833, 0, 0, 0, 0,
	4167, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 2007, 0, 269, 1833, 3544, 3544, 2038, 1866,
	0, 1333, 0, 74, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 4190, 0, 0, 0, 78,
	0, 0, 2896, 0, 2896, 0, 3570, 2896, 2007, 0,
	0, 2896, 2007, 1347, 3020, 792, 0, 0, 0, 0,
	0, 0, 0, 3006, 3008, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 1863, 269, 0, 0, 0, 1540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2029,
	269, 0, 3608, 0, 0, 3610, 2896, 0, 0, 269,
	903, 0, 0, 269, 0, 1261, 1343, 4363, 0, 4365,
	4366, 0, 0, 0, 1818, 107, 0, 0, 0, 0,
	93, 104, 0, 0, 269, 0, 0, 1839, 0, 3084,
	1834, 0, 1333, 0, 269, 0, 0, 2896, 0, 706,
	0, 0, 0, 0, 0, 0, 2896, 0, 0, 0,
	1834, 264, 264, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 269, 3084, 0,
	0, 3084, 0, 0, 0, 0, 0, 0, 1111, 0,
	0, 94, 1497, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 4412, 0, 1810, 1811, 0, 1843,
	1844, 1845, 1854, 1855, 1856, 0, 3714, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 1841,
	0, 0, 0, 1833, 3720, 0, 1813, 1540, 0, 0,
	1333, 269, 0, 269, 0, 1860, 0, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 4385, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 1832, 0, 0, 0, 1497, 0, 0, 0, 0,
	1829, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 4385,
	0, 0, 0, 0, 0, 0, 0, 1830, 1826, 1863,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	2820, 4503, 2725, 0, 0, 0, 0, 0, 1810, 1811,
	0, 0, 0, 2487, 0, 0, 0, 0, 3786, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 1810, 1811,
	0, 1841, 0, 0, 0, 1497, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 1836, 1837,
	1838, 1841, 0, 0, 0, 0, 0, 1818, 1813, 0,
	0, 1497, 0, 0, 1866, 2730, 0, 2725, 1834, 0,
	0, 0, 0, 1812, 0, 0, 187, 100, 0, 0,
	103, 2487, 0, 1832, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 1851, 0, 0,
	1861, 0, 0, 1832, 0, 0, 237, 1840, 1842, 0,
	0, 0, 1829, 0, 904, 269, 269, 0, 0, 150,
	0, 0, 0, 0, 1857, 0, 1858, 1865, 0, 0,
	2730, 0, 0, 1827, 1828, 0, 0, 0, 0, 706,
	706, 3321, 3322, 0, 3339, 3340, 3341, 0, 0, 0,
	0, 1849, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 1540, 1540, 0, 0, 1833, 0, 3747, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 1540, 1540, 1818,
	1540, 154, 0, 0, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 192, 0, 0, 1818,
	0, 0, 0, 0, 238, 0, 1497, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 3336, 0, 231, 0,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 232, 0, 1840,
	1842, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 2725, 1840,
	1842, 0, 0, 792, 0, 190, 0, 0, 0, 0,
	0, 1347, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 1347, 0,
	0, 0, 0, 0, 1497, 0, 3544, 0, 1833, 0,
	0, 0, 0, 2725, 0, 0, 0, 0, 1839, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	1846, 2730, 3327, 0, 0, 0, 0, 0, 2725, 0,
	0, 1834, 2007, 0, 269, 0, 0, 0, 722, 722,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 269, 0, 0, 2730, 0, 0, 0,
	0, 0, 0, 269, 1863, 0, 0, 0, 269, 0,
	0, 0, 0, 269, 73, 0, 0, 0, 0, 3343,
	1865, 2730, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 74, 2896, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 3113, 3113, 0, 0, 0, 78, 909, 909,
	2896, 0, 0, 0, 3084, 3084, 0, 0, 909, 2896,
	1839, 3337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 1834, 269, 0, 0, 87, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 49, 1865, 107, 0, 0, 0, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4132,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1111, 0, 0, 0, 0, 0, 0, 1319,
	0, 1319, 1319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 1846, 0, 0, 0, 3338, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 1540, 0,
	269, 0, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 1409, 269, 0, 0, 0, 0, 1514, 0,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 0, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1343, 0,
	0, 0, 0, 0, 0, 2896, 2896, 0, 3544, 2896,
	0, 0, 0, 0, 0, 0, 4227, 0, 4227, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2896, 0, 3483, 0, 0, 0, 1540, 1540, 269, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 269, 2007, 0, 269, 0, 3544,
	0, 0, 1642, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2896, 0, 2896, 269, 97, 3333,
	3334, 3335, 0, 0, 0, 0, 3332, 3330, 3331, 3323,
	3324, 3325, 3326, 3328, 3329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2896, 0, 0, 1846, 0, 4312, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 1846, 269,
	0, 0, 0, 0, 187, 100, 0, 73, 103, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 237, 0, 0, 0, 4227, 0,
	78, 1540, 904, 1497, 0, 1810, 1811, 150, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 1841, 0,
	0, 0, 0, 0, 0, 1813, 1497, 0, 0, 0,
	87, 0, 0, 239, 1860, 0, 0, 0, 1846, 0,
	0, 1497, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 1866, 1846, 0, 0, 0, 0, 1846, 0, 154,
	1812, 0, 0, 0, 0, 0, 1497, 0, 0, 0,
	1832, 903, 0, 0, 192, 0, 0, 0, 0, 1829,
	0, 0, 238, 0, 49, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 1111, 232, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 2896, 0, 3483, 1111, 0,
	4430, 0, 1846, 0, 0, 0, 0, 0, 1846, 269,
	0, 0, 0, 1638, 0, 0, 0, 0, 0, 4454,
	0, 4454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 792, 1818, 0, 0, 0,
	0, 1965, 0, 0, 0, 0, 3544, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 1861,
	0, 0, 0, 0, 1497, 0, 1840, 1842, 0, 0,
	4430, 0, 0, 0, 0, 0, 0, 0, 2896, 0,
	0, 0, 0, 1857, 0, 1858, 0, 0, 1997, 0,
	0, 0, 1827, 1828, 0, 0, 4534, 0, 0, 0,
	0, 0, 0, 0, 2008, 0, 1514, 0, 1540, 0,
	1849, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 0,
	4227, 4227, 0, 0, 0, 1833, 0, 0, 0, 1497,
	0, 1846, 0, 0, 0, 1810, 1811, 0, 0, 269,
	269, 0, 0, 0, 1846, 0, 1319, 0, 0, 0,
	0, 97, 0, 1514, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 3786, 0, 1813, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 0, 0, 1540, 3544, 4602, 0,
	2729, 1866, 0, 0, 0, 4430, 0, 0, 0, 0,
	1812, 1863, 0, 1846, 0, 0, 0, 187, 100, 1846,
	0, 103, 0, 0, 1096, 4227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4227, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	150, 0, 269, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1497, 0, 0, 1497, 0,
	1834, 4312, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4227, 0, 269,
	4227, 0, 0, 0, 0, 0, 1818, 1852, 0, 0,
	3483, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 238, 1540, 0, 1540, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 1497, 1840, 1842, 232, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 1497, 0, 4714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	4454, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 0, 0, 1540,
	0, 0, 1850, 2279, 0, 1833, 0, 2286, 2896, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 2299,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 269,
	1810, 1811, 0, 0, 0, 2311, 0, 2311, 0, 0,
	0, 0, 0, 2318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 3786, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 0, 0, 1810,
	1811, 1863, 0, 0, 2286, 0, 1866, 2345, 0, 0,
	0, 0, 0, 0, 0, 1812, 1497, 0, 0, 0,
	0, 0, 1841, 0, 0, 1832, 269, 0, 2365, 1813,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 2381, 0, 2383, 0, 2385, 0, 2387, 0,
	2388, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 4430, 0,
	3321, 3322, 0, 3339, 3340, 3341, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3742, 0, 2415, 2416, 2417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2896, 0,
	0, 1835, 1836, 1837, 1838, 4227, 0, 4227, 0, 0,
	1540, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 3336, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1540, 0, 0, 0, 0, 0, 1540, 0, 0, 0,
	1818, 1840, 1842, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	0, 0, 0, 0, 0, 0, 3113, 0, 0, 0,
	0, 0, 0, 0, 1846, 2896, 0, 0, 1846, 0,
	1840, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 3113, 1846, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 3327, 0, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1833,
	0, 0, 0, 0, 1846, 0, 1846, 1846, 1846, 1846,
	0, 0, 0, 0, 1358, 0, 0, 0, 2729, 2729,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 1497, 1846, 0, 0, 0, 0, 0, 0,
	0, 1096, 1096, 1096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2797, 0, 0, 0, 1497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3337, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 1839, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1542, 0, 1548, 0, 1554, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 1846, 0, 0,
	1846, 0, 0, 1846, 0, 0, 0, 0, 0, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 2845, 0, 0, 1319,
	0, 0, 0, 1319, 0, 1319, 1863, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 2299, 0, 1865, 1644, 0, 1649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 1663,
	1497, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 3342, 0,
	2729, 2729, 2729, 2729, 0, 0, 0, 1846, 0, 1846,
	0, 0, 0, 1865, 1846, 0, 0, 1497, 0, 0,
	0, 0, 0, 0, 0, 3338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	1734, 0, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1497, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 805, 0,
	0, 2286, 0, 0, 0, 0, 0, 0, 0, 0,
	2299, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 0,
	0, 0, 0, 816, 1497, 0, 0, 0, 3333, 3334,
	3335, 0, 0, 0, 0, 3332, 3330, 3331, 3323, 3324,
	3325, 3326, 3328, 3329, 1887, 0, 0, 0, 0, 0,
	1900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1497, 0, 3157, 0, 3160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 0, 0,
	0, 0, 1854, 1855, 1856, 0, 0, 0, 0, 0,
	1497, 0, 0, 0, 0, 0, 810, 0, 0, 1841,
	0, 0, 0, 822, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 815, 0, 0,
	0, 0, 0, 0, 0, 3190, 1514, 3192, 1514, 0,
	0, 1497, 1866, 0, 3198, 1959, 1959, 1959, 0, 0,
	0, 1812, 2700, 2701, 2702, 2703, 2696, 2697, 2698, 2699,
	0, 1832, 0, 1181, 0, 1846, 1846, 0, 1846, 0,
	1829, 0, 0, 0, 0, 1497, 0, 814, 1319, 0,
	0, 0, 0, 0, 0, 0, 3226, 0, 0, 0,
	0, 0, 0, 0, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	812, 0, 1111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2676, 2677, 2678, 2679, 0,
	0, 0, 0, 1497, 0, 0, 0, 1835, 1836, 1837,
	1838, 0, 0, 0, 0, 0, 0, 1818, 2688, 2689,
	2690, 2691, 2684, 2685, 2686, 2687, 2692, 2693, 2694, 2695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1096, 0, 0, 1851, 1846, 0,
	1861, 0, 0, 0, 0, 1497, 0, 1840, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 2672, 2673, 2674,
	2675, 2680, 2681, 2682, 2683, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 1846, 1846, 807, 2729, 2729, 0,
	0, 1846, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 3342, 3342, 0, 0, 1846, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	817, 0, 1863, 0, 0, 0, 809, 2729, 2729, 2729,
	2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
	2729, 2729, 2729, 2729, 2729, 2729, 2729, 0, 2729, 3342,
	3342, 3342, 3342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1111, 1111,
	0, 0, 0, 0, 806, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 808, 1852, 0,
	0, 0, 0, 0, 1319, 0, 0, 0, 1514, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 819, 820, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 3471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1811, 1846, 0, 0, 2397,
	3521, 3523, 0, 0, 2299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 1850, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2422, 0, 0, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 2460, 1832,
	2464, 0, 0, 0, 0, 0, 0, 2478, 1829, 0,
	1096, 0, 0, 0, 0, 0, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 0, 2530, 0, 2532, 2533, 2534, 2535, 0,
	0, 3621, 0, 0, 3741, 3625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2559, 0, 0, 0, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 1887, 0, 1818, 0, 2610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2640, 2643, 2646, 2649, 0, 0, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 0, 0, 0, 3678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1842, 2721, 0, 2733,
	2735, 2740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 1846, 0, 0, 1846, 3342, 3342,
	1846, 1827, 1828, 0, 1846, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3724, 1846, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 1846, 1846,
	1846, 1846, 0, 0, 0, 1272, 0, 1846, 0, 1846,
	0, 3737, 3342, 3342, 3342, 3342, 3342, 3342, 3342, 3342,
	3342, 3342, 3342, 3342, 3342, 3342, 3342, 3342, 3342, 3342,
	3342, 3342, 0, 0, 0, 3342, 0, 0, 1846, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 1272, 0, 0, 0, 1272, 0, 0, 0, 1846,
	1863, 0, 1272, 1810, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 1272, 0, 0, 0,
	1810, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 1839, 0, 0, 1866,
	0, 0, 1272, 1841, 0, 1846, 0, 0, 1812, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 1832, 1834,
	0, 0, 1272, 0, 0, 0, 0, 1829, 0, 1272,
	0, 0, 0, 0, 1846, 0, 1866, 0, 0, 0,
	0, 0, 0, 1272, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 3236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	3229, 0, 0, 3041, 3042, 0, 3044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 1836, 1837, 1838, 1846, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1842, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 1846, 1846, 0, 0, 0, 1846,
	1846, 1840, 1842, 1846, 1846, 0, 0, 0, 1846, 0,
	0, 0, 1846, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 1827, 1828, 0,
	0, 0, 2729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2299, 0, 0, 0,
	1833, 3174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2299, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 4025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2729, 0, 1863,
	2299, 0, 0, 735, 0, 4043, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	1868, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 1096, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4095, 0, 1834, 739,
	1272, 0, 1272, 0, 0, 0, 0, 3230, 3231, 0,
	0, 0, 1839, 3237, 0, 0, 0, 1272, 0, 0,
	0, 758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3251, 3252, 0, 1834, 2042, 0, 2610, 0,
	0, 0, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3261, 1846, 1846, 1846, 0, 742, 0,
	0, 0, 743, 0, 1865, 1846, 1846, 3342, 2729, 3275,
	0, 0, 0, 0, 1846, 0, 0, 1846, 0, 767,
	0, 0, 0, 0, 0, 0, 3287, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 757, 0, 0, 752, 0,
	0, 0, 3342, 2729, 1272, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 735, 1846,
	0, 0, 0, 736, 0, 0, 0, 1846, 2729, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 1830, 1826, 1846, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 754, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 738, 0, 0, 0, 0, 2740, 2740,
	2740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4246, 0, 0, 1959, 739, 0, 0, 0, 0, 0,
	0, 3380, 0, 0, 0, 0, 2299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 764, 0, 745, 0,
	0, 0, 0, 0, 0, 1272, 1272, 740, 0, 0,
	0, 0, 0, 0, 0, 1272, 0, 0, 0, 3342,
	0, 0, 0, 0, 0, 0, 0, 765, 0, 746,
	0, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 3342, 0, 0, 1846, 0, 0, 0, 0,
	0, 2299, 0, 742, 0, 0, 0, 743, 0, 0,
	0, 4334, 0, 0, 3342, 0, 0, 0, 0, 0,
	766, 0, 0, 0, 767, 0, 1096, 0, 747, 0,
	0, 0, 0, 762, 763, 760, 0, 0, 0, 0,
	1096, 755, 0, 0, 748, 0, 0, 0, 0, 0,
	757, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 1272, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 3502, 0, 0, 0, 0, 0, 0,
	1272, 1272, 0, 0, 0, 0, 0, 749, 0, 756,
	0, 1272, 0, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 1272, 0, 1272, 1272, 1272, 0, 754,
	0, 0, 751, 0, 0, 0, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 753, 0, 0, 0, 0, 0, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 1841, 0, 1846, 0, 0, 0, 0, 1813, 0,
	0, 4440, 0, 745, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 765, 1812, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 2042, 2042, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2299, 0, 0,
	0, 0, 0, 0, 0, 766, 0, 0, 0, 0,
	0, 0, 0, 747, 0, 0, 0, 0, 762, 763,
	760, 0, 0, 0, 0, 0, 755, 0, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 749, 0, 756, 0, 0, 0, 0, 1272,
	0, 1846, 0, 750, 0, 1846, 0, 0, 0, 0,
	0, 4575, 1514, 0, 0, 0, 0, 751, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 1861, 0, 0, 0, 768, 0, 0, 1840,
	1842, 0, 0, 0, 0, 0, 0, 753, 0, 0,
	0, 0, 0, 2478, 0, 0, 1857, 0, 1858, 0,
	3739, 3740, 1272, 0, 3743, 1827, 1828, 0, 3746, 1272,
	0, 0, 0, 0, 0, 0, 0, 3750, 1272, 0,
	0, 0, 0, 1849, 0, 0, 3757, 0, 0, 0,
	0, 3380, 0, 0, 0, 1272, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 3770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3793, 3794, 0, 3795,
	3796, 3797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 3803, 0, 0,
	0, 3805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 4673, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3834, 3835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1272, 1272, 0, 0,
	0, 0, 3846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4727, 0, 0, 0, 0,
	0, 0, 0, 0, 2042, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4766, 1865, 0, 0, 0, 3921, 0, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 1850, 0, 0, 4832, 0,
	0, 0, 0, 0, 0, 0, 1824, 1825, 1831, 1853,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 1272, 0, 4140, 0, 0, 0,
	4139, 0, 0, 0, 0, 0, 0, 0, 1272, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1272, 1810, 1811, 0, 1843,
	1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 1841,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 1959, 0, 1860, 0, 0, 0, 0,
	0, 0, 4061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1145, 0, 0, 0, 0,
	0, 0, 0, 4110, 4111, 0, 0, 0, 0, 4115,
	4116, 0, 0, 0, 4119, 4120, 0, 0, 0, 0,
	0, 0, 4124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4128, 0, 0, 0, 1835, 1836, 1837,
	1838, 268, 268, 268, 0, 0, 0, 1818, 0, 4133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1811, 0, 0, 0, 0, 0, 1851, 0, 0,
	1861, 0, 0, 0, 0, 0, 835, 1840, 1842, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 1849, 0, 1810, 1811, 1812, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 1832, 1833, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 1841, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 1859, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 1848, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 1863, 0, 0, 1268, 0, 0, 0, 0,
	0, 1835, 1836, 1837, 1838, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1272, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1842, 0, 1835, 1836, 1837, 1838, 0, 0,
	1272, 1834, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 1272, 0, 1827, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	1272, 0, 0, 0, 1851, 0, 0, 1861, 0, 0,
	1833, 0, 0, 0, 1840, 1842, 1272, 0, 0, 0,
	1865, 0, 0, 0, 4380, 4381, 4382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 0, 0, 2478, 0, 0,
	4391, 4392, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 1272, 0, 0, 0, 0, 2042, 4400, 4403,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 0, 1272, 3296, 1272, 0, 0, 3297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4455, 0,
	0, 0, 1839, 0, 0, 0, 0, 4463, 1272, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 4471, 0, 1272, 1096, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 1272, 0, 1272,
	0, 0, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 0, 1865, 0, 0, 0, 1834, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 1272,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 1826, 1272, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4607,
	0, 0, 0, 4611, 0, 0, 0, 0, 0, 1272,
	1850, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 268, 268, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 1096, 0, 0, 0, 0, 0, 0, 0, 1272,
	4668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 268, 268, 1272, 0, 268, 268,
	0, 0, 0, 0, 0, 0, 2042, 2042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2478, 2042, 2042, 0, 0, 0,
	0, 0, 0, 4403, 853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1134, 109, 0,
	0, 0, 0, 0, 855, 0, 268, 268, 2042, 856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1096, 0,
	0, 0, 268, 268, 0, 1272, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 857, 0,
	874, 0, 0, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 858, 0, 1847, 1841, 0,
	859, 0, 0, 0, 0, 1813, 0, 0, 4789, 4789,
	4789, 109, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 883, 0, 0, 0, 0, 0, 0, 860,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 4812, 0, 881, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 268, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 854, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 861,
	0, 0, 0, 862, 0, 0, 0, 1069, 4789, 0,
	0, 0, 0, 0, 0, 885, 0, 0, 1089, 0,
	767, 0, 0, 0, 0, 270, 270, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 270, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 1272, 0, 1255, 1272, 0,
	0, 0, 0, 1272, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 884, 1851, 0, 2042, 1861,
	0, 0, 0, 0, 0, 879, 1840, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1858, 0, 0, 0, 1272,
	0, 0, 1827, 1828, 0, 0, 0, 0, 0, 4789,
	4947, 0, 0, 1272, 0, 0, 0, 0, 4951, 0,
	1849, 0, 0, 0, 1272, 1272, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 863, 0,
	0, 1272, 1272, 1272, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	866, 1859, 1981, 0, 1268, 0, 0, 0, 268, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 2042, 268, 1981, 268, 0, 0, 875,
	0, 1863, 835, 0, 0, 0, 0, 0, 0, 835,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 852, 0, 876, 0, 0, 0,
	0, 0, 0, 0, 0, 867, 268, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 868, 0,
	1834, 0, 869, 888, 0, 887, 0, 0, 0, 870,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 871, 1272, 0, 1272, 1852, 880, 0,
	0, 0, 0, 1272, 889, 0, 886, 0, 0, 0,
	0, 0, 768, 0, 1272, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1272, 0, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 1272, 0, 0, 1272, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 2606, 0, 268, 0, 2607, 0, 835,
	0, 0, 0, 0, 0, 0, 1272, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1272, 0,
	0, 0, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 1272, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 1272, 1272, 1272, 0, 268, 0, 268, 0, 0,
	0, 0, 0, 268, 1272, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 1272, 0, 1272, 0, 0,
	0, 835, 268, 0, 268, 0, 268, 0, 268, 0,
	268, 109, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 268, 268, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 2042, 0, 1089, 109, 109, 0,
	0, 0, 0, 270, 0, 270, 270, 0, 0, 270,
	0, 1356, 109, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 109, 1272, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 1356, 270, 270,
	0, 1356, 270, 270, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 109, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	1272, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 0,
	270, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 2042,
	0, 0, 0, 0, 0, 1356, 270, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1069,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1272, 0, 0, 0, 0,
	1268, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 268, 1356, 0, 0, 0, 0,
	1886, 0, 0, 0, 1892, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 1272, 0, 0,
	1272, 268, 0, 969, 1272, 1018, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 1272, 268, 0, 0, 268,
	0, 0, 0, 268, 0, 268, 0, 0, 0, 977,
	0, 1272, 268, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 992, 0, 975, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 1982, 0, 109, 994,
	0, 0, 0, 0, 0, 976, 0, 0, 0, 0,
	979, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 989, 990, 0, 0, 0, 0,
	268, 0, 0, 1007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 1019, 981, 0, 0, 0, 268, 0, 982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 983, 0, 0, 0, 0, 0, 0, 0, 268,
	1016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1017, 835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 985, 0, 0,
	0, 0, 0, 0, 0, 0, 973, 0, 0, 0,
	0, 268, 270, 835, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 1356, 0, 986, 987, 0, 270, 270,
	270, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 270, 995, 993, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 1004, 0, 0, 1024,
	1023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 268, 1027, 1015, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 268, 1272, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 268, 1020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 268, 268, 268, 268, 0,
	0, 0, 980, 0, 268, 1029, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 0, 0, 1011, 1012, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 268, 1014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1021, 1009, 0, 0, 1089, 0, 1089, 0, 0, 1028,
	1005, 0, 0, 998, 996, 0, 1001, 0, 0, 0,
	0, 0, 1002, 0, 0, 971, 0, 1022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	972, 1356, 1356, 270, 0, 0, 0, 0, 0, 0,
	0, 1356, 1013, 0, 1003, 0, 0, 0, 0, 0,
	1000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 0, 1006,
	0, 0, 0, 0, 109, 0, 0, 0, 984, 1025,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 270, 1008, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1010, 270,
	0, 270, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 1356, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 1069, 0,
	0, 1069, 1069, 0, 0, 0, 1356, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 1356, 270, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 1356, 1356, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 270, 0, 270, 2548,
	270, 0, 270, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1886,
	0, 827, 0, 1886, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 270, 270, 270,
	0, 0, 0, 0, 0, 0, 0, 827, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 268, 268,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 268, 0, 0, 268, 1356, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 1356, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 835, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 1268, 0, 0, 0,
	1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	270, 0, 0, 270, 0, 0, 0, 270, 0, 270,
	0, 0, 1847, 1841, 0, 0, 270, 270, 0, 268,
	1813, 0, 1356, 1356, 0, 0, 270, 0, 109, 1860,
	0, 109, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 1356, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 109, 0,
	0, 109, 0, 268, 270, 268, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 1356, 0, 0, 0, 0, 0,
	0, 1835, 1836, 1837, 1838, 0, 0, 0, 0, 0,
	1356, 1818, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 1861, 270, 0, 270, 0, 1356,
	0, 1840, 1842, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	1858, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1356, 1849, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	1833, 1356, 0, 0, 0, 0, 0, 1268, 1268, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 2548, 0, 270,
	0, 0, 1150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 1886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 1354, 270,
	270, 270, 270, 0, 0, 0, 0, 0, 270, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 1415, 0, 0, 0, 1415, 0,
	270, 0, 1839, 0, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 1354, 268, 0, 0, 0,
	0, 0, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	1255, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 268, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1268, 0, 1850, 0, 0,
	0, 0, 1354, 0, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 4138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 109, 0, 109, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 109, 0, 109, 109,
	109, 0, 0, 0, 1268, 0, 1356, 0, 0, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 1981, 0, 0, 270, 0,
	0, 0, 270, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1981, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 270, 270, 0, 1356, 270, 0,
	0, 0, 0, 0, 0, 270, 268, 0, 1255, 268,
	1415, 1089, 0, 0, 0, 0, 0, 0, 0, 1356,
	270, 1356, 0, 827, 0, 109, 109, 0, 0, 268,
	827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 268, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 1356, 0, 1356, 0, 0, 0, 1356,
	1354, 0, 0, 0, 0, 0, 270, 1356, 0, 0,
	1981, 0, 0, 0, 0, 270, 0, 0, 1356, 270,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 1356, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 270, 1356, 270,
	1416, 268, 0, 0, 1416, 0, 0, 0, 1354, 1354,
	0, 1355, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 109, 0, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 270, 0, 0, 0, 1255,
	1255, 0, 0, 0, 0, 1355, 0, 1847, 1841, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 268, 0, 0,
	0, 1355, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 1355, 1356, 0, 0, 0, 0, 0, 1355, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 1355, 1354, 0, 1354, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 1354, 0, 0, 0, 0, 0,
	0, 0, 1981, 1981, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 1354, 1354,
	1354, 268, 268, 0, 0, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1981, 0, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	1849, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1255, 0, 1981,
	0, 268, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 1863, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 1356, 0, 0, 0, 0, 1356,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 270,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 270,
	0, 0, 1415, 0, 0, 1356, 0, 0, 0, 0,
	1834, 268, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 0,
	1356, 1356, 1356, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 1356, 1356,
	109, 0, 0, 0, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 0, 1255, 0, 1356, 0, 0, 1865,
	270, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 3253, 0, 1415, 0, 0, 0, 1981, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 1356, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 1356, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 1354, 0, 0,
	0, 0, 0, 0, 1355, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 827, 0, 1354, 1356, 0, 1356,
	270, 0, 1356, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 1356, 0, 0, 0, 0, 1354, 1355,
	0, 1355, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 270, 0, 0, 0, 1355,
	1355, 0, 0, 0, 1356, 270, 0, 0, 0, 1356,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 1355, 1355, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 1356, 1356, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 0, 1843,
	1844, 1845, 1854, 1855, 1856, 1416, 2548, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 1847, 1841,
	0, 0, 0, 0, 0, 270, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	1356, 270, 0, 0, 0, 0, 0, 0, 1416, 0,
	1356, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 1836, 1837,
	1838, 0, 0, 0, 109, 0, 0, 1818, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 270, 0, 109, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 1355, 0, 270, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 109, 1859, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 1848, 0, 0, 0, 270, 0, 0, 0, 0,
	1356, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	1356, 1356, 0, 0, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1354, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 1354, 0,
	0, 1834, 0, 1355, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 1354, 0, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 270, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1354, 0, 1354, 1355, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 827, 1354, 0, 0, 1355, 0, 1355,
	0, 0, 0, 0, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 1354, 1354, 0, 0, 0, 0, 3755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 1841, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 1415, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 1841, 0,
	0, 0, 0, 0, 1859, 1813, 1416, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 1863, 0, 0, 0, 0, 1416,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 1416, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 1354, 0,
	0, 1354, 0, 0, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	1852, 1355, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 1354, 0, 0, 0, 1851, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 0, 0,
	0, 0, 1355, 0, 1355, 0, 0, 1354, 1354, 1354,
	0, 0, 0, 1857, 0, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 1354, 1354, 1354, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 0,
	1849, 0, 1355, 1354, 0, 1850, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 1833, 1824, 1825, 1831, 1853,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 1355, 0, 0, 1415, 0, 0, 0, 0,
	3299, 0, 0, 0, 0, 0, 1355, 0, 1355, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	1355, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 1355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 1355, 0, 0, 0, 1415, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 1354, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 0, 0, 1852, 1416, 0,
	0, 1416, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 1841, 0, 0, 0, 1865,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 0, 1354, 0, 1866, 1354,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 1832, 1416, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 1354,
	1354, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 1354,
	0, 0, 0, 0, 0, 0, 0, 3298, 0, 0,
	0, 1415, 0, 0, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 1354, 1354, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 0, 1415, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 1415, 0,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 1354, 0,
	0, 0, 0, 0, 1355, 0, 0, 1355, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 1354, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 1355, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	1847, 1841, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1355, 1355, 1355, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1355, 1355, 1355, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 1355,
	0, 0, 0, 1832, 0, 1416, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 3295, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 1861, 0, 1354, 0, 0, 0, 0, 1840,
	1842, 0, 0, 1416, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 1858, 0,
	0, 0, 0, 1355, 1355, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 1849, 0, 0, 0, 1810, 1811, 0,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	1841, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 1355, 1866, 1859, 1355, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 1832, 1848, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	1839, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 1836,
	1837, 1838, 0, 1834, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1355,
	1355, 1355, 1355, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 0, 1865, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 1416, 0, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 1824, 1825, 1831, 1853,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 1859, 0, 0, 0, 0, 0, 0,
	3294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	0, 1355, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 3293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 1355, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 1418, 285, 286, 1419, 1420, 1421,
	1355, 1422, 648, 1423, 1424, 1425, 1426, 287, 288, 1212,
	289, 290, 291, 292, 293, 294, 649, 650, 0, 295,
	651, 296, 652, 1427, 653, 297, 298, 299, 300, 301,
	302, 1428, 1429, 0, 303, 654, 655, 656, 1430, 304,
	305, 657, 1431, 1357, 1432, 306, 307, 308, 309, 310,
	311, 312, 0, 1433, 314, 315, 316, 313, 317, 1434,
	318, 0, 319, 320, 321, 322, 323, 324, 1435, 325,
	326, 327, 1213, 328, 329, 330, 1436, 1437, 1439, 1438,
	1440, 1441, 1442, 331, 332, 333, 334, 335, 0, 336,
	338, 658, 659, 1443, 341, 337, 339, 1444, 342, 340,
	343, 1445, 344, 345, 346, 1446, 1447, 347, 348, 349,
	1448, 350, 351, 352, 1449, 353, 354, 355, 1450, 356,
	357, 660, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 661, 662, 369, 1451, 275, 1452, 0, 0,
	0, 0, 370, 371, 372, 663, 0, 0, 0, 373,
	1453, 374, 375, 1454, 376, 1455, 1214, 377, 378, 379,
	664, 665, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 1456, 389, 666, 1457, 667, 390, 1458, 391, 392,
	393, 394, 395, 396, 668, 669, 670, 482, 1216, 397,
	398, 1459, 399, 400, 401, 402, 403, 0, 0, 0,
	276, 404, 405, 406, 408, 1460, 1215, 407, 671, 672,
	1461, 673, 1462, 409, 410, 1217, 674, 1218, 411, 412,
	413, 1219, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1463, 421, 423, 422, 1464, 424, 675, 1220,
	425, 426, 1221, 1465, 427, 428, 429, 430, 431, 432,
	435, 1466, 1467, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1222, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 477, 467, 1223, 476,
	464, 1468, 277, 1224, 478, 479, 480, 1469, 676, 481,
	677, 483, 484, 1470, 0, 485, 0, 1471, 1472, 487,
	488, 489, 1473, 1474, 490, 491, 678, 1225, 492, 1226,
	679, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 1475, 504, 505, 680, 506, 507, 508,
	681, 509, 510, 511, 682, 512, 683, 513, 514, 1476,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 1477, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 0,
	536, 537, 538, 539, 535, 540, 541, 542, 543, 544,
	1478, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	685, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 1479, 570, 571, 569, 572,
	573, 574, 1480, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 686, 0, 586,
	1481, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	687, 594, 595, 596, 597, 688, 601, 602, 1482, 603,
	604, 0, 600, 591, 1483, 605, 606, 607, 608, 609,
	610, 611, 363, 612, 1484, 613, 689, 690, 691, 692,
	1485, 623, 1486, 614, 616, 617, 693, 618, 694, 1487,
	619, 620, 621, 622, 615, 624, 625, 1488, 1489, 626,
	627, 628, 630, 631, 629, 632, 1490, 633, 1491, 0,
	634, 635, 636, 695, 696, 697, 1492, 638, 637, 639,
	640, 698, 641, 642, 1493, 1494, 1495, 1496, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 2775, 0, 0, 0, 0, 0, 0, 0,
	2776, 278, 280, 279, 281, 282, 283, 284, 1418, 285,
	286, 1419, 1420, 1421, 0, 1422, 648, 1423, 1424, 1425,
	1426, 287, 288, 1212, 289, 290, 291, 292, 293, 294,
	649, 650, 0, 295, 651, 296, 652, 1427, 653, 297,
	298, 299, 300, 301, 302, 1428, 1429, 0, 303, 654,
	655, 656, 1430, 304, 305, 657, 1431, 1357, 1432, 306,
	307, 308, 309, 310, 311, 312, 0, 1433, 314, 315,
	316, 313, 317, 1434, 318, 0, 319, 320, 321, 322,
	323, 324, 1435, 325, 326, 327, 1213, 328, 329, 330,
	1436, 1437, 1439, 1438, 1440, 1441, 1442, 331, 332, 333,
	334, 335, 0, 336, 338, 658, 659, 1443, 341, 337,
	339, 1444, 342, 340, 343, 1445, 344, 345, 346, 1446,
	1447, 347, 348, 349, 1448, 350, 351, 352, 1449, 353,
	354, 355, 1450, 356, 357, 660, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 661, 662, 369, 1451,
	275, 1452, 0, 0, 0, 0, 370, 371, 372, 663,
	0, 0, 0, 373, 1453, 374, 375, 1454, 376, 1455,
	1214, 377, 378, 379, 664, 665, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 1456, 389, 666, 1457, 667,
	390, 1458, 391, 392, 393, 394, 395, 396, 668, 669,
	670, 482, 1216, 397, 398, 1459, 399, 400, 401, 402,
	403, 0, 0, 0, 276, 404, 405, 406, 408, 1460,
	1215, 407, 671, 672, 1461, 673, 1462, 409, 410, 1217,
	674, 1218, 411, 412, 413, 1219, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1463, 421, 423, 422,
	1464, 424, 675, 1220, 425, 426, 1221, 1465, 427, 428,
	429, 430, 431, 432, 435, 1466, 1467, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1222, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	477, 467, 1223, 476, 464, 1468, 277, 1224, 478, 479,
	480, 1469, 676, 481, 677, 483, 484, 1470, 0, 485,
	0, 1471, 1472, 487, 488, 489, 1473, 1474, 490, 491,
	678, 1225, 492, 1226, 679, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1475, 504, 505,
	680, 506, 507, 508, 681, 509, 510, 511, 682, 512,
	683, 513, 514, 1476, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 1477, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 0, 536, 537, 538, 539, 535, 540,
	541, 542, 543, 544, 1478, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 685, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1479,
	570, 571, 569, 572, 573, 574, 1480, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 686, 0, 586, 1481, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 687, 594, 595, 596, 597, 688,
	601, 602, 1482, 603, 604, 0, 600, 591, 1483, 605,
	606, 607, 608, 609, 610, 611, 363, 612, 1484, 613,
	689, 690, 691, 692, 1485, 623, 1486, 614, 616, 617,
	693, 618, 694, 1487, 619, 620, 621, 622, 615, 624,
	625, 1488, 1489, 626, 627, 628, 630, 631, 629, 632,
	1490, 633, 1491, 0, 634, 635, 636, 695, 696, 697,
	1492, 638, 637, 639, 640, 698, 641, 642, 1493, 1494,
	1495, 1496, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 3764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3766, 278, 280, 279, 281, 282, 283, 284,
	1418, 285, 286, 1419, 1420, 1421, 0, 1422, 648, 1423,
	1424, 1425, 1426, 287, 288, 1212, 289, 290, 291, 292,
	293, 294, 649, 650, 0, 295, 651, 296, 652, 1427,
	653, 297, 298, 299, 300, 301, 302, 1428, 1429, 0,
	303, 654, 655, 656, 1430, 304, 305, 657, 1431, 1357,
	1432, 306, 307, 308, 309, 310, 311, 312, 0, 1433,
	314, 315, 316, 313, 317, 1434, 318, 0, 319, 320,
	321, 322, 323, 324, 1435, 325, 326, 327, 1213, 328,
	329, 330, 1436, 1437, 1439, 1438, 1440, 1441, 1442, 331,
	332, 333, 334, 335, 0, 336, 338, 658, 659, 1443,
	341, 337, 339, 1444, 342, 340, 343, 1445, 344, 345,
	346, 1446, 1447, 347, 348, 349, 1448, 350, 351, 352,
	1449, 353, 354, 355, 1450, 356, 357, 660, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 661, 662,
	369, 1451, 275, 1452, 0, 0, 0, 0, 370, 371,
	372, 663, 0, 0, 0, 373, 1453, 374, 375, 1454,
	376, 1455, 1214, 377, 378, 379, 664, 665, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 1456, 389, 666,
	1457, 667, 390, 1458, 391, 392, 393, 394, 395, 396,
	668, 669, 670, 482, 1216, 397, 398, 1459, 399, 400,
	401, 402, 403, 0, 0, 0, 276, 404, 405, 406,
	408, 1460, 1215, 407, 671, 672, 1461, 673, 1462, 409,
	410, 1217, 674, 1218, 411, 412, 413, 1219, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1463, 421,
	423, 422, 1464, 424, 675, 1220, 425, 426, 1221, 1465,
	427, 428, 429, 430, 431, 432, 435, 1466, 1467, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1222, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 477, 467, 1223, 476, 464, 1468, 277, 1224,
	478, 479, 480, 1469, 676, 481, 677, 483, 484, 1470,
	0, 485, 0, 1471, 1472, 487, 488, 489, 1473, 1474,
	490, 491, 678, 1225, 492, 1226, 679, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 1475,
	504, 505, 680, 506, 507, 508, 681, 509, 510, 511,
	682, 512, 683, 513, 514, 1476, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 1477, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 0, 536, 537, 538, 539,
	535, 540, 541, 542, 543, 544, 1478, 545, 546, 547,
	1227, 548, 549, 550, 551, 552, 685, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 1479, 570, 571, 569, 572, 573, 574, 1480, 575,
	576, 558, 559, 577, 578, 1228, 579, 580, 581, 582,
	583, 584, 585, 686, 0, 586, 1481, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 687, 594, 595, 596,
	597, 688, 601, 602, 1482, 603, 604, 0, 600, 591,
	1483, 605, 606, 607, 608, 609, 610, 611, 363, 612,
	1484, 613, 689, 690, 691, 692, 1485, 623, 1486, 614,
	616, 617, 693, 618, 694, 1487, 619, 620, 621, 622,
	615, 624, 625, 1488, 1489, 626, 627, 628, 630, 631,
	629, 632, 1490, 633, 1491, 0, 634, 635, 636, 695,
	696, 697, 1492, 638, 637, 639, 640, 698, 641, 642,
	1493, 1494, 1495, 1496, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4166, 278,
	280, 279, 281, 282, 283, 284, 1418, 285, 286, 1419,
	1420, 1421, 0, 1422, 648, 1423, 1424, 1425, 1426, 287,
	288, 1212, 289, 290, 291, 292, 293, 294, 649, 650,
	0, 295, 651, 296, 652, 1427, 653, 297, 298, 299,
	300, 301, 302, 1428, 1429, 0, 303, 654, 655, 656,
	1430, 304, 305, 657, 1431, 1357, 1432, 306, 307, 308,
	309, 310, 311, 312, 0, 1433, 314, 315, 316, 313,
	317, 1434, 318, 0, 319, 320, 321, 322, 323, 324,
	1435, 325, 326, 327, 1213, 328, 329, 330, 1436, 1437,
	1439, 1438, 1440, 1441, 1442, 331, 332, 333, 334, 335,
	0, 336, 338, 658, 659, 1443, 341, 337, 339, 1444,
	342, 340, 343, 1445, 344, 345, 346, 1446, 1447, 347,
	348, 349, 1448, 350, 351, 352, 1449, 353, 354, 355,
	1450, 356, 357, 660, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 661, 662, 369, 1451, 275, 1452,
	0, 0, 0, 0, 370, 371, 372, 663, 0, 0,
	0, 373, 1453, 374, 375, 1454, 376, 1455, 1214, 377,
	378, 379, 664, 665, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 1456, 389, 666, 1457, 667, 390, 1458,
	391, 392, 393, 394, 395, 396, 668, 669, 670, 482,
	1216, 397, 398, 1459, 399, 400, 401, 402, 403, 0,
	0, 0, 276, 404, 405, 406, 408, 1460, 1215, 407,
	671, 672, 1461, 673, 1462, 409, 410, 1217, 674, 1218,
	411, 412, 413, 1219, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1463, 421, 423, 422, 1464, 424,
	675, 1220, 425, 426, 1221, 1465, 427, 428, 429, 430,
	431, 432, 435, 1466, 1467, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1222, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 477, 467,
	1223, 476, 464, 1468, 277, 1224, 478, 479, 480, 1469,
	676, 481, 677, 483, 484, 1470, 0, 485, 0, 1471,
	1472, 487, 488, 489, 1473, 1474, 490, 491, 678, 1225,
	492, 1226, 679, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 1475, 504, 505, 680, 506,
	507, 508, 681, 509, 510, 511, 682, 512, 683, 513,
	514, 1476, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 1477,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 0, 536, 537, 538, 539, 535, 540, 541, 542,
	543, 544, 1478, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 685, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 1479, 570, 571,
	569, 572, 573, 574, 1480, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 686,
	0, 586, 1481, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 687, 594, 595, 596, 597, 688, 601, 602,
	1482, 603, 604, 0, 600, 591, 1483, 605, 606, 607,
	608, 609, 610, 611, 363, 612, 1484, 613, 689, 690,
	691, 692, 1485, 623, 1486, 614, 616, 617, 693, 618,
	694, 1487, 619, 620, 621, 622, 615, 624, 625, 1488,
	1489, 626, 627, 628, 630, 631, 629, 632, 1490, 633,
	1491, 0, 634, 635, 636, 695, 696, 697, 1492, 638,
	637, 639, 640, 698, 641, 642, 1493, 1494, 1495, 1496,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4386,
	278, 280, 279, 281, 282, 283, 284, 1418, 285, 286,
	1419, 1420, 1421, 0, 1422, 648, 1423, 1424, 1425, 1426,
	287, 288, 1212, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 1427, 653, 297, 298,
	299, 300, 301, 302, 1428, 1429, 0, 303, 654, 655,
	656, 1430, 304, 305, 657, 1431, 1357, 1432, 306, 307,
	308, 309, 310, 311, 312, 0, 1433, 314, 315, 316,
	313, 317, 1434, 318, 0, 319, 320, 321, 322, 323,
	324, 1435, 325, 326, 327, 1213, 328, 329, 330, 1436,
	1437, 1439, 1438, 1440, 1441, 1442, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 1443, 341, 337, 339,
	1444, 342, 340, 343, 1445, 344, 345, 346, 1446, 1447,
	347, 348, 349, 1448, 350, 351, 352, 1449, 353, 354,
	355, 1450, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 1451, 275,
	1452, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 1453, 374, 375, 1454, 376, 1455, 1214,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 1456, 389, 666, 1457, 667, 390,
	1458, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 1216, 397, 398, 1459, 399, 400, 401, 402, 403,
	0, 0, 0, 276, 404, 405, 406, 408, 1460, 1215,
	407, 671, 672, 1461, 673, 1462, 409, 410, 1217, 674,
	1218, 411, 412, 413, 1219, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1463, 421, 423, 422, 1464,
	424, 675, 1220, 425, 426, 1221, 1465, 427, 428, 429,
	430, 431, 432, 435, 1466, 1467, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1222, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 1223, 476, 464, 1468, 277, 1224, 478, 479, 480,
	1469, 676, 481, 677, 483, 484, 1470, 0, 485, 0,
	1471, 1472, 487, 488, 489, 1473, 1474, 490, 491, 678,
	1225, 492, 1226, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1475, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 1476, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	1477, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 1478, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1479, 570,
	571, 569, 572, 573, 574, 1480, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 1481, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 1482, 603, 604, 0, 600, 591, 1483, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 1484, 613, 689,
	690, 691, 692, 1485, 623, 1486, 614, 616, 617, 693,
	618, 694, 1487, 619, 620, 621, 622, 615, 624, 625,
	1488, 1489, 626, 627, 628, 630, 631, 629, 632, 1490,
	633, 1491, 0, 634, 635, 636, 695, 696, 697, 1492,
	638, 637, 639, 640, 698, 641, 642, 1493, 1494, 1495,
	1496, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4255, 278, 280, 279, 281, 282, 283, 284, 1418, 285,
	286, 1419, 1420, 1421, 0, 1422, 648, 1423, 1424, 1425,
	1426, 287, 288, 1212, 289, 290, 291, 292, 293, 294,
	649, 650, 0, 295, 651, 296, 652, 1427, 653, 297,
	298, 299, 300, 301, 302, 1428, 1429, 0, 303, 654,
	655, 656, 1430, 304, 305, 657, 1431, 1357, 1432, 306,
	307, 308, 309, 310, 311, 312, 0, 1433, 314, 315,
	316, 313, 317, 1434, 318, 0, 319, 320, 321, 322,
	323, 324, 1435, 325, 326, 327, 1213, 328, 329, 330,
	1436, 1437, 1439, 1438, 1440, 1441, 1442, 331, 332, 333,
	334, 335, 0, 336, 338, 658, 659, 1443, 341, 337,
	339, 1444, 342, 340, 343, 1445, 344, 345, 346, 1446,
	1447, 347, 348, 349, 1448, 350, 351, 352, 1449, 353,
	354, 355, 1450, 356, 357, 660, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 661, 662, 369, 1451,
	275, 1452, 0, 0, 0, 0, 370, 371, 372, 663,
	0, 0, 0, 373, 1453, 374, 375, 1454, 376, 1455,
	1214, 377, 378, 379, 664, 665, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 1456, 389, 666, 1457, 667,
	390, 1458, 391, 392, 393, 394, 395, 396, 668, 669,
	670, 482, 1216, 397, 398, 1459, 399, 400, 401, 402,
	403, 0, 0, 0, 276, 404, 405, 406, 408, 1460,
	1215, 407, 671, 672, 1461, 673, 1462, 409, 410, 1217,
	674, 1218, 411, 412, 413, 1219, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1463, 421, 423, 422,
	1464, 424, 675, 1220, 425, 426, 1221, 1465, 427, 428,
	429, 430, 431, 432, 435, 1466, 1467, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1222, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	477, 467, 1223, 476, 464, 1468, 277, 1224, 478, 479,
	480, 1469, 676, 481, 677, 483, 484, 1470, 0, 485,
	0, 1471, 1472, 487, 488, 489, 1473, 1474, 490, 491,
	678, 1225, 492, 1226, 679, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1475, 504, 505,
	680, 506, 507, 508, 681, 509, 510, 511, 682, 512,
	683, 513, 514, 1476, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 1477, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 0, 536, 537, 538, 539, 535, 540,
	541, 542, 543, 544, 1478, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 685, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1479,
	570, 571, 569, 572, 573, 574, 1480, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 686, 0, 586, 1481, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 687, 594, 595, 596, 597, 688,
	601, 602, 1482, 603, 604, 0, 600, 591, 1483, 605,
	606, 607, 608, 609, 610, 611, 363, 612, 1484, 613,
	689, 690, 691, 692, 1485, 623, 1486, 614, 616, 617,
	693, 618, 694, 1487, 619, 620, 621, 622, 615, 624,
	625, 1488, 1489, 626, 627, 628, 630, 631, 629, 632,
	1490, 633, 1491, 0, 634, 635, 636, 695, 696, 697,
	1492, 638, 637, 639, 640, 698, 641, 642, 1493, 1494,
	1495, 1496, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4096, 278, 280, 279, 281, 282, 283, 284, 1418,
	285, 286, 1419, 1420, 1421, 0, 1422, 648, 1423, 1424,
	1425, 1426, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 1427, 653,
	297, 298, 299, 300, 301, 302, 1428, 1429, 0, 303,
	654, 655, 656, 1430, 304, 305, 657, 1431, 1357, 1432,
	306, 307, 308, 309, 310, 311, 312, 0, 1433, 314,
	315, 316, 313, 317, 1434, 318, 0, 319, 320, 321,
	322, 323, 324, 1435, 325, 326, 327, 1213, 328, 329,
	330, 1436, 1437, 1439, 1438, 1440, 1441, 1442, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 1443, 341,
	337, 339, 1444, 342, 340, 343, 1445, 344, 345, 346,
	1446, 1447, 347, 348, 349, 1448, 350, 351, 352, 1449,
	353, 354, 355, 1450, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	1451, 275, 1452, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 1453, 374, 375, 1454, 376,
	1455, 1214, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 1456, 389, 666, 1457,
	667, 390, 1458, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 1216, 397, 398, 1459, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	1460, 1215, 407, 671, 672, 1461, 673, 1462, 409, 410,
	1217, 674, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1463, 421, 423,
	422, 1464, 424, 675, 1220, 425, 426, 1221, 1465, 427,
	428, 429, 430, 431, 432, 435, 1466, 1467, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 1468, 277, 1224, 478,
	479, 480, 1469, 676, 481, 677, 483, 484, 1470, 0,
	485, 0, 1471, 1472, 487, 488, 489, 1473, 1474, 490,
	491, 678, 1225, 492, 1226, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1475, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 1476, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 1477, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 1478, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1479, 570, 571, 569, 572, 573, 574, 1480, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 1481, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 1482, 603, 604, 0, 600, 591, 1483,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 1484,
	613, 689, 690, 691, 692, 1485, 623, 1486, 614, 616,
	617, 693, 618, 694, 1487, 619, 620, 621, 622, 615,
	624, 625, 1488, 1489, 626, 627, 628, 630, 631, 629,
	632, 1490, 633, 1491, 0, 634, 635, 636, 695, 696,
	697, 1492, 638, 637, 639, 640, 698, 641, 642, 1493,
	1494, 1495, 1496, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3782, 278, 280, 279, 281, 282, 283, 284,
	1418, 285, 286, 1419, 1420, 1421, 0, 1422, 648, 1423,
	1424, 1425, 1426, 287, 288, 1212, 289, 290, 291, 292,
	293, 294, 649, 650, 0, 295, 651, 296, 652, 1427,
	653, 297, 298, 299, 300, 301, 302, 1428, 1429, 0,
	303, 654, 655, 656, 1430, 304, 305, 657, 1431, 1357,
	1432, 306, 307, 308, 309, 310, 311, 312, 0, 1433,
	314, 315, 316, 313, 317, 1434, 318, 0, 319, 320,
	321, 322, 323, 324, 1435, 325, 326, 327, 1213, 328,
	329, 330, 1436, 1437, 1439, 1438, 1440, 1441, 1442, 331,
	332, 333, 334, 335, 0, 336, 338, 658, 659, 1443,
	341, 337, 339, 1444, 342, 340, 343, 1445, 344, 345,
	346, 1446, 1447, 347, 348, 349, 1448, 350, 351, 352,
	1449, 353, 354, 355, 1450, 356, 357, 660, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 661, 662,
	369, 1451, 275, 1452, 0, 0, 0, 0, 370, 371,
	372, 663, 0, 0, 0, 373, 1453, 374, 375, 1454,
	376, 1455, 1214, 377, 378, 379, 664, 665, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 1456, 389, 666,
	1457, 667, 390, 1458, 391, 392, 393, 394, 395, 396,
	668, 669, 670, 482, 1216, 397, 398, 1459, 399, 400,
	401, 402, 403, 0, 0, 0, 276, 404, 405, 406,
	408, 1460, 1215, 407, 671, 672, 1461, 673, 1462, 409,
	410, 1217, 674, 1218, 411, 412, 413, 1219, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1463, 421,
	423, 422, 1464, 424, 675, 1220, 425, 426, 1221, 1465,
	427, 428, 429, 430, 431, 432, 435, 1466, 1467, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1222, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 477, 467, 1223, 476, 464, 1468, 277, 1224,
	478, 479, 480, 1469, 676, 481, 677, 483, 484, 1470,
	0, 485, 0, 1471, 1472, 487, 488, 489, 1473, 1474,
	490, 491, 678, 1225, 492, 1226, 679, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 1475,
	504, 505, 680, 506, 507, 508, 681, 509, 510, 511,
	682, 512, 683, 513, 514, 1476, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 1477, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 0, 536, 537, 538, 539,
	535, 540, 541, 542, 543, 544, 1478, 545, 546, 547,
	1227, 548, 549, 550, 551, 552, 685, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 1479, 570, 571, 569, 572, 573, 574, 1480, 575,
	576, 558, 559, 577, 578, 1228, 579, 580, 581, 582,
	583, 584, 585, 686, 0, 586, 1481, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 687, 594, 595, 596,
	597, 688, 601, 602, 1482, 603, 604, 0, 600, 591,
	1483, 605, 606, 607, 608, 609, 610, 611, 363, 612,
	1484, 613, 689, 690, 691, 692, 1485, 623, 1486, 614,
	616, 617, 693, 618, 694, 1487, 619, 620, 621, 622,
	615, 624, 625, 1488, 1489, 626, 627, 628, 630, 631,
	629, 632, 1490, 633, 1491, 0, 634, 635, 636, 695,
	696, 697, 1492, 638, 637, 639, 640, 698, 641, 642,
	1493, 1494, 1495, 1496, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3605, 278, 280, 279, 281, 282, 283,
	284, 1418, 285, 286, 1419, 1420, 1421, 0, 1422, 648,
	1423, 1424, 1425, 1426, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	1427, 653, 297, 298, 299, 300, 301, 302, 1428, 1429,
	0, 303, 654, 655, 656, 1430, 304, 305, 657, 1431,
	1357, 1432, 306, 307, 308, 309, 310, 311, 312, 0,
	1433, 314, 315, 316, 313, 317, 1434, 318, 0, 319,
	320, 321, 322, 323, 324, 1435, 325, 326, 327, 1213,
	328, 329, 330, 1436, 1437, 1439, 1438, 1440, 1441, 1442,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	1443, 341, 337, 339, 1444, 342, 340, 343, 1445, 344,
	345, 346, 1446, 1447, 347, 348, 349, 1448, 350, 351,
	352, 1449, 353, 354, 355, 1450, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 1451, 275, 1452, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 1453, 374, 375,
	1454, 376, 1455, 1214, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 1456, 389,
	666, 1457, 667, 390, 1458, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 1216, 397, 398, 1459, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 1460, 1215, 407, 671, 672, 1461, 673, 1462,
	409, 410, 1217, 674, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1463,
	421, 423, 422, 1464, 424, 675, 1220, 425, 426, 1221,
	1465, 427, 428, 429, 430, 431, 432, 435, 1466, 1467,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1468, 277,
	1224, 478, 479, 480, 1469, 676, 481, 677, 483, 484,
	1470, 0, 485, 0, 1471, 1472, 487, 488, 489, 1473,
	1474, 490, 491, 678, 1225, 492, 1226, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	1475, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 1476, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 1477, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 1478, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 1479, 570, 571, 569, 572, 573, 574, 1480,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 1481, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 1482, 603, 604, 0, 600,
	591, 1483, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 1484, 613, 689, 690, 691, 692, 1485, 623, 1486,
	614, 616, 617, 693, 618, 694, 1487, 619, 620, 621,
	622, 615, 624, 625, 1488, 1489, 626, 627, 628, 630,
	631, 629, 632, 1490, 633, 1491, 0, 634, 635, 636,
	695, 696, 697, 1492, 638, 637, 639, 640, 698, 641,
	642, 1493, 1494, 1495, 1496, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2630, 278, 280, 279, 281, 282,
	283, 284, 1418, 285, 286, 1419, 1420, 1421, 0, 1422,
	648, 1423, 1424, 1425, 1426, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 650, 0, 295, 651, 296,
	652, 1427, 653, 297, 298, 299, 300, 301, 302, 1428,
	1429, 0, 303, 654, 655, 656, 1430, 304, 305, 657,
	1431, 1357, 1432, 306, 307, 308, 309, 310, 311, 312,
	0, 1433, 314, 315, 316, 313, 317, 1434, 318, 0,
	319, 320, 321, 322, 323, 324, 1435, 325, 326, 327,
	1213, 328, 329, 330, 1436, 1437, 1439, 1438, 1440, 1441,
	1442, 331, 332, 333, 334, 335, 0, 336, 338, 658,
	659, 1443, 341, 337, 339, 1444, 342, 340, 343, 1445,
	344, 345, 346, 1446, 1447, 347, 348, 349, 1448, 350,
	351, 352, 1449, 353, 354, 355, 1450, 356, 357, 660,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	661, 662, 369, 1451, 275, 1452, 0, 0, 0, 0,
	370, 371, 372, 663, 0, 0, 0, 373, 1453, 374,
	375, 1454, 376, 1455, 1214, 377, 378, 379, 664, 665,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 1456,
	389, 666, 1457, 667, 390, 1458, 391, 392, 393, 394,
	395, 396, 668, 669, 670, 482, 1216, 397, 398, 1459,
	399, 400, 401, 402, 403, 0, 0, 0, 276, 404,
	405, 406, 408, 1460, 1215, 407, 671, 672, 1461, 673,
	1462, 409, 410, 1217, 674, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1463, 421, 423, 422, 1464, 424, 675, 1220, 425, 426,
	1221, 1465, 427, 428, 429, 430, 431, 432, 435, 1466,
	1467, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 1468,
	277, 1224, 478, 479, 480, 1469, 676, 481, 677, 483,
	484, 1470, 0, 485, 0, 1471, 1472, 487, 488, 489,
	1473, 1474, 490, 491, 678, 1225, 492, 1226, 679, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 1475, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 682, 512, 683, 513, 514, 1476, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 1477, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 1478, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 685, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 1479, 570, 571, 569, 572, 573, 574,
	1480, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 686, 0, 586, 1481, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 687, 594,
	595, 596, 597, 688, 601, 602, 1482, 603, 604, 0,
	600, 591, 1483, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 1484, 613, 689, 690, 691, 692, 1485, 623,
	1486, 614, 616, 617, 693, 618, 694, 1487, 619, 620,
	621, 622, 615, 624, 625, 1488, 1489, 626, 627, 628,
	630, 631, 629, 632, 1490, 633, 1491, 0, 634, 635,
	636, 695, 696, 697, 1492, 638, 637, 639, 640, 698,
	641, 642, 1493, 1494, 1495, 1496, 643, 644, 699, 645,
	646, 647, 0, 0, 0, 0, 0, 1508, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2259, 278, 280, 279, 281,
	282, 283, 284, 1418, 285, 286, 1419, 1420, 1421, 0,
	1422, 648, 1423, 1424, 1425, 1426, 287, 288, 1212, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 1427, 653, 297, 298, 299, 300, 301, 302,
	1428, 1429, 0, 303, 654, 655, 656, 1430, 304, 305,
	657, 1431, 1357, 1432, 306, 307, 308, 309, 310, 311,
	312, 0, 1433, 314, 315, 316, 313, 317, 1434, 318,
	0, 319, 320, 321, 322, 323, 324, 1435, 325, 326,
	327, 1213, 328, 329, 330, 1436, 1437, 1439, 1438, 1440,
	1441, 1442, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 1443, 341, 337, 339, 1444, 342, 340, 343,
	1445, 344, 345, 346, 1446, 1447, 347, 348, 349, 1448,
	350, 351, 352, 1449, 353, 354, 355, 1450, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 1451, 275, 1452, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 1453,
	374, 375, 1454, 376, 1455, 1214, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	1456, 389, 666, 1457, 667, 390, 1458, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 1216, 397, 398,
	1459, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 1460, 1215, 407, 671, 672, 1461,
	673, 1462, 409, 410, 1217, 674, 1218, 411, 412, 413,
	1219, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1463, 421, 423, 422, 1464, 424, 675, 1220, 425,
	426, 1221, 1465, 427, 428, 429, 430, 431, 432, 435,
	1466, 1467, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1222, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 1223, 476, 464,
	1468, 277, 1224, 478, 479, 480, 1469, 676, 481, 677,
	483, 484, 1470, 0, 485, 0, 1471, 1472, 487, 488,
	489, 1473, 1474, 490, 491, 678, 1225, 492, 1226, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1475, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 1476, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 1477, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 1478,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1479, 570, 571, 569, 572, 573,
	574, 1480, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 1481,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 1482, 603, 604,
	0, 600, 591, 1483, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 1484, 613, 689, 690, 691, 692, 1485,
	623, 1486, 614, 616, 617, 693, 618, 694, 1487, 619,
	620, 621, 622, 615, 624, 625, 1488, 1489, 626, 627,
	628, 630, 631, 629, 632, 1490, 633, 1491, 0, 634,
	635, 636, 695, 696, 697, 1492, 638, 637, 639, 640,
	698, 641, 642, 1493, 1494, 1495, 1496, 643, 644, 699,
	645, 646, 647, 1410, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 1418,
	285, 286, 1419, 1420, 1421, 0, 1422, 648, 1423, 1424,
	1425, 1426, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 1427, 653,
	297, 298, 299, 300, 301, 302, 1428, 1429, 0, 303,
	654, 655, 656, 1430, 304, 305, 657, 1431, 1357, 1432,
	306, 307, 308, 309, 310, 311, 312, 0, 1433, 314,
	315, 316, 313, 317, 1434, 318, 0, 319, 320, 321,
	322, 323, 324, 1435, 325, 326, 327, 1213, 328, 329,
	330, 1436, 1437, 1439, 1438, 1440, 1441, 1442, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 1443, 341,
	337, 339, 1444, 342, 340, 343, 1445, 344, 345, 346,
	1446, 1447, 347, 348, 349, 1448, 350, 351, 352, 1449,
	353, 354, 355, 1450, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	1451, 275, 1452, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 1453, 374, 375, 1454, 376,
	1455, 1214, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 1456, 389, 666, 1457,
	667, 390, 1458, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 1216, 397, 398, 1459, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	1460, 1215, 407, 671, 672, 1461, 673, 1462, 409, 410,
	1217, 674, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1463, 421, 423,
	422, 1464, 424, 675, 1220, 425, 426, 1221, 1465, 427,
	428, 429, 430, 431, 432, 435, 1466, 1467, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 1468, 277, 1224, 478,
	479, 480, 1469, 676, 481, 677, 483, 484, 1470, 0,
	485, 0, 1471, 1472, 487, 488, 489, 1473, 1474, 490,
	491, 678, 1225, 492, 1226, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1475, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 1476, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 1477, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 1478, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1479, 570, 571, 569, 572, 573, 574, 1480, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 1481, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 1482, 603, 604, 0, 600, 591, 1483,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 1484,
	613, 689, 690, 691, 692, 1485, 623, 1486, 614, 616,
	617, 693, 618, 694, 1487, 619, 620, 621, 622, 615,
	624, 625, 1488, 1489, 626, 627, 628, 630, 631, 629,
	632, 1490, 633, 1491, 0, 634, 635, 636, 695, 696,
	697, 1492, 638, 637, 639, 640, 698, 641, 642, 1493,
	1494, 1495, 1496, 643, 644, 699, 645, 646, 647, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 1418, 285, 286, 1419, 1420, 1421, 0,
	1422, 648, 1423, 1424, 1425, 1426, 287, 288, 1212, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 1427, 653, 297, 298, 299, 300, 301, 302,
	1428, 1429, 0, 303, 654, 655, 656, 1430, 304, 305,
	657, 1431, 1357, 1432, 306, 307, 308, 309, 310, 311,
	312, 0, 1433, 314, 315, 316, 313, 317, 1434, 318,
	0, 319, 320, 321, 322, 323, 324, 1435, 325, 326,
	327, 1213, 328, 329, 330, 1436, 1437, 1439, 1438, 1440,
	1441, 1442, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 1443, 341, 337, 339, 1444, 342, 340, 343,
	1445, 344, 345, 346, 1446, 1447, 347, 348, 349, 1448,
	350, 351, 352, 1449, 353, 354, 355, 1450, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 1451, 275, 1452, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 1453,
	374, 375, 1454, 376, 1455, 1214, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	1456, 389, 666, 1457, 667, 390, 1458, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 1216, 397, 398,
	1459, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 1460, 1215, 407, 671, 672, 1461,
	673, 1462, 409, 410, 1217, 674, 1218, 411, 412, 413,
	1219, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1463, 421, 423, 422, 1464, 424, 675, 1220, 425,
	426, 1221, 1465, 427, 428, 429, 430, 431, 432, 435,
	1466, 1467, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1222, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 1223, 476, 464,
	1468, 277, 1224, 478, 479, 480, 1469, 676, 481, 677,
	483, 484, 1470, 0, 485, 0, 1471, 1472, 487, 488,
	489, 1473, 1474, 490, 491, 678, 1225, 492, 1226, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1475, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 1476, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 1477, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 1478,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1479, 570, 571, 569, 572, 573,
	574, 1480, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 1481,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 1482, 603, 604,
	0, 600, 591, 1483, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 1484, 613, 689, 690, 691, 692, 1485,
	623, 1486, 614, 616, 617, 693, 618, 694, 1487, 619,
	620, 621, 622, 615, 624, 625, 1488, 1489, 626, 627,
	628, 630, 631, 629, 632, 1490, 633, 1491, 0, 634,
	635, 636, 695, 696, 697, 1492, 638, 637, 639, 640,
	698, 641, 642, 1493, 1494, 1495, 1496, 643, 644, 699,
	645, 646, 647, 2605, 0, 1148, 1120, 1121, 1122, 1118,
	1119, 1131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 2602,
	285, 286, 0, 0, 0, 0, 0, 1172, 1136, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 1185, 0, 295, 1192, 296, 1191, 0, 1202,
	297, 298, 299, 300, 301, 302, 1138, 1171, 1103, 303,
	1232, 1233, 656, 0, 304, 305, 1178, 0, 1159, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 331, 332,
	333, 334, 335, 1195, 336, 338, 1189, 1188, 1108, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	2603, 0, 347, 1180, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 1114, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1203, 1204, 369,
	1127, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	1187, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 1200, 1201, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 1210, 0,
	1137, 390, 0, 391, 392, 393, 394, 395, 396, 1173,
	1174, 1177, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 1215, 407, 1182, 1183, 0, 1143, 0, 409, 410,
	1217, 1175, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1211, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 1166, 1165, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 1105, 277, 1224, 478,
	479, 480, 1128, 1176, 481, 1190, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 1205, 493, 494, 1115, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 1206,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 1186, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 1116, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 1184, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1231, 594, 595, 596, 597,
	1207, 601, 602, 0, 603, 604, 1102, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 1196, 1197, 1198, 1199, 0, 623, 0, 614, 616,
	617, 1208, 618, 1209, 1126, 619, 620, 621, 622, 615,
	624, 625, 0, 1109, 626, 627, 628, 630, 631, 629,
	632, 1170, 633, 0, 0, 634, 635, 636, 695, 1193,
	1230, 2601, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1101, 0, 0, 0, 0, 0, 0,
	1099, 1100, 2604, 0, 0, 0, 0, 0, 0, 1132,
	2600, 0, 1090, 1130, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 1172, 1136, 0, 0,
	0, 287, 288, 1212, 289, 290, 291, 292, 293, 294,
	649, 1185, 0, 295, 1192, 296, 1191, 0, 1202, 297,
	298, 299, 300, 301, 302, 1138, 1171, 1103, 303, 1232,
	1233, 656, 0, 304, 305, 1178, 0, 1159, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1213, 328, 329, 330,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 331, 332, 333,
	334, 335, 1195, 336, 338, 1189, 1188, 1108, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 1180, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 1114, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 1203, 1204, 369, 1127,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 1187,
	0, 0, 0, 373, 0, 374, 375, 0, 376, 0,
	1214, 377, 378, 379, 1200, 1201, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 1210, 0, 1137,
	390, 0, 391, 392, 393, 394, 395, 396, 1173, 1174,
	1177, 482, 1216, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 276, 404, 405, 406, 408, 0,
	1215, 407, 1182, 1183, 0, 1143, 0, 409, 410, 1217,
	1175, 1218, 411, 412, 413, 1219, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1211, 1220, 425, 426, 1221, 0, 427, 428,
	429, 430, 431, 432, 435, 1166, 1165, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1222, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	477, 467, 1223, 476, 464, 1105, 277, 1224, 478, 479,
	480, 1128, 1176, 481, 1190, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	678, 1225, 492, 1226, 1205, 493, 494, 1115, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	680, 506, 507, 508, 681, 509, 510, 511, 1206, 512,
	683, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 1186, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 0, 536, 537, 538, 539, 535, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 1116, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 237,
	570, 571, 569, 572, 573, 574, 1169, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 1184, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1231, 594, 595, 596, 597, 1207,
	601, 602, 0, 603, 604, 1102, 600, 591, 239, 605,
	606, 607, 608, 609, 610, 611, 363, 612, 0, 613,
	1196, 1197, 1198, 1199, 0, 623, 0, 614, 616, 617,
	1208, 618, 1209, 1126, 619, 620, 621, 622, 615, 624,
	625, 0, 1109, 626, 627, 628, 630, 631, 629, 632,
	1170, 633, 0, 0, 634, 635, 636, 1634, 1193, 1230,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 231, 643, 644, 699, 645, 646, 647, 1106, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1101, 0, 0, 0, 0, 0, 0, 1099,
	1100, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 1891, 1889,
	0, 0, 1130, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 1172, 1136, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 1185, 0,
	295, 1192, 296, 1191, 0, 1202, 297, 298, 299, 300,
	301, 302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 1195,
	336, 338, 1189, 1188, 1108, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1180,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1114, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 1127, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1187, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 1200, 1201, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 1137, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 1215, 407, 1182,
	1183, 0, 1143, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 1105, 277, 1224, 478, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 1186, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 237, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1231, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 1102, 600, 591, 239, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 1196, 1197, 1198,
	1199, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	1126, 619, 620, 621, 622, 615, 624, 625, 0, 1109,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 1634, 1193, 1230, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 231, 643,
	644, 699, 645, 646, 647, 1106, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 1891, 3249, 0, 0, 1130,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	1172, 1136, 0, 0, 0, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 1185, 0, 295, 1192, 296,
	1191, 0, 1202, 297, 298, 299, 300, 301, 302, 1138,
	1171, 1103, 303, 1232, 1233, 656, 0, 304, 305, 1178,
	0, 1159, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 331, 332, 333, 334, 335, 1195, 336, 338, 1189,
	1188, 1108, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1180, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1114,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1203, 1204, 369, 1127, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1187, 0, 0, 0, 373, 0, 374,
	375, 0, 376, 0, 1214, 377, 378, 379, 1200, 1201,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1210, 0, 1137, 390, 0, 391, 392, 393, 394,
	395, 396, 1173, 1174, 1177, 482, 1216, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 276, 404,
	405, 406, 408, 0, 1215, 407, 1182, 1183, 0, 1143,
	0, 409, 410, 1217, 1175, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1211, 1220, 425, 426,
	1221, 0, 427, 428, 429, 430, 431, 432, 435, 1166,
	1165, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 1105,
	277, 1224, 478, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 678, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 1206, 512, 683, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 1186,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 237, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1231, 594,
	595, 596, 597, 1207, 601, 602, 0, 603, 604, 1102,
	600, 591, 239, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 0, 613, 1196, 1197, 1198, 1199, 0, 623,
	0, 614, 616, 617, 1208, 618, 1209, 1126, 619, 620,
	621, 622, 615, 624, 625, 0, 1109, 626, 627, 628,
	630, 631, 629, 632, 1170, 633, 0, 0, 634, 635,
	636, 1634, 1193, 1230, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 231, 643, 644, 699, 645,
	646, 647, 1106, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 1148, 1120, 1121, 1122, 1118,
	1119, 1131, 1891, 1889, 0, 0, 1130, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 1172, 1136, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 1185, 0, 295, 1192, 296, 1191, 2736, 1202,
	297, 298, 299, 300, 301, 302, 1138, 1171, 1103, 303,
	1232, 1233, 656, 0, 304, 305, 1178, 0, 1159, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 331, 332,
	333, 334, 335, 1195, 336, 338, 1189, 1188, 1108, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 1180, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 1114, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1203, 1204, 369,
	1127, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	1187, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	2741, 1214, 377, 378, 379, 1200, 1201, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 1210, 0,
	1137, 390, 0, 391, 392, 393, 394, 395, 396, 1173,
	1174, 1177, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 1215, 407, 1182, 1183, 0, 1143, 0, 409, 410,
	1217, 1175, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 2737, 424, 1211, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 1166, 1165, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 1105, 277, 1224, 478,
	479, 480, 1128, 1176, 481, 1190, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 1205, 493, 494, 1115, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 1206,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 1186, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 1116, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 1184, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1231, 594, 595, 596, 597,
	1207, 601, 602, 0, 603, 604, 1102, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 1196, 1197, 1198, 1199, 0, 623, 2738, 614, 616,
	617, 1208, 618, 1209, 1126, 619, 620, 621, 622, 615,
	624, 625, 0, 1109, 626, 627, 628, 630, 631, 629,
	632, 1170, 633, 0, 0, 634, 635, 636, 695, 1193,
	1230, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1106,
	0, 0, 0, 2650, 0, 1148, 1120, 1121, 1122, 1118,
	1119, 1131, 0, 1101, 0, 0, 0, 0, 0, 0,
	1099, 1100, 278, 280, 279, 281, 282, 283, 284, 1132,
	285, 286, 0, 1130, 0, 0, 0, 1172, 1136, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 1185, 0, 295, 1192, 296, 1191, 0, 1202,
	297, 298, 299, 300, 301, 302, 1138, 1171, 1103, 303,
	1232, 1233, 656, 0, 304, 305, 1178, 0, 1159, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 331, 332,
	333, 334, 335, 1195, 336, 338, 1189, 1188, 1108, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 1180, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 1114, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1203, 1204, 369,
	1127, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	1187, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 1200, 1201, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 1210, 0,
	1137, 390, 0, 391, 392, 393, 394, 395, 396, 1173,
	1174, 1177, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 1215, 407, 1182, 1183, 0, 1143, 0, 409, 410,
	1217, 1175, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1211, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 1166, 1165, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 1105, 277, 1224, 478,
	479, 480, 1128, 1176, 481, 1190, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 1205, 493, 494, 1115, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 1206,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 1186, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 1116, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 1184, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1231, 594, 595, 596, 597,
	1207, 601, 602, 0, 603, 604, 1102, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 1196, 1197, 1198, 1199, 0, 623, 0, 614, 616,
	617, 1208, 618, 1209, 1126, 619, 620, 621, 622, 615,
	624, 625, 0, 1109, 626, 627, 628, 630, 631, 629,
	632, 1170, 633, 0, 0, 634, 635, 636, 695, 1193,
	1230, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1101, 0, 0, 0, 0, 0, 0,
	1099, 1100, 0, 0, 0, 0, 0, 0, 0, 1132,
	2648, 0, 2647, 1130, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 1172, 1136, 0, 0,
	0, 287, 288, 1212, 289, 290, 291, 292, 293, 294,
	649, 1185, 0, 295, 1192, 296, 1191, 0, 1202, 297,
	298, 299, 300, 301, 302, 1138, 1171, 1103, 303, 1232,
	1233, 656, 0, 304, 305, 1178, 0, 1159, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1213, 328, 329, 330,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 331, 332, 333,
	334, 335, 1195, 336, 338, 1189, 1188, 1108, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 1180, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 1114, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 1203, 1204, 369, 1127,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 1187,
	0, 0, 0, 373, 0, 374, 375, 0, 376, 0,
	1214, 377, 378, 379, 1200, 1201, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 1210, 0, 1137,
	390, 0, 391, 392, 393, 394, 395, 396, 1173, 1174,
	1177, 482, 1216, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 276, 404, 405, 406, 408, 0,
	1215, 407, 1182, 1183, 0, 1143, 0, 409, 410, 1217,
	1175, 1218, 411, 412, 413, 1219, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1211, 1220, 425, 426, 1221, 0, 427, 428,
	429, 430, 431, 432, 435, 1166, 1165, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1222, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	477, 467, 1223, 476, 464, 1105, 277, 1224, 478, 479,
	480, 1128, 1176, 481, 1190, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	678, 1225, 492, 1226, 1205, 493, 494, 1115, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	680, 506, 507, 508, 681, 509, 510, 511, 1206, 512,
	683, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 1186, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 0, 536, 537, 538, 539, 535, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 1116, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1169, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 1184, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1231, 594, 595, 596, 597, 1207,
	601, 602, 0, 603, 604, 1102, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 363, 612, 0, 613,
	1196, 1197, 1198, 1199, 0, 623, 0, 614, 616, 617,
	1208, 618, 1209, 1126, 619, 620, 621, 622, 615, 624,
	625, 0, 1109, 626, 627, 628, 630, 631, 629, 632,
	1170, 633, 0, 0, 634, 635, 636, 695, 1193, 1230,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 1106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1101, 0, 0, 0, 0, 0, 0, 1099,
	1100, 0, 0, 0, 0, 0, 0, 0, 1132, 2645,
	0, 2644, 1130, 1148, 1120, 1121, 1122, 1118, 1119, 1131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 1172, 1136, 0, 0, 0,
	287, 288, 1212, 289, 290, 291, 292, 293, 294, 649,
	1185, 0, 295, 1192, 296, 1191, 0, 1202, 297, 298,
	299, 300, 301, 302, 1138, 1171, 1103, 303, 1232, 1233,
	656, 0, 304, 305, 1178, 0, 1159, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1213, 328, 329, 330, 1162,
	1160, 1161, 1168, 1164, 1163, 1167, 331, 332, 333, 334,
	335, 1195, 336, 338, 1189, 1188, 1108, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 1180, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 1114, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 1203, 1204, 369, 1127, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 1187, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 1214,
	377, 378, 379, 1200, 1201, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 1210, 0, 1137, 390,
	0, 391, 392, 393, 394, 395, 396, 1173, 1174, 1177,
	482, 1216, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 276, 404, 405, 406, 408, 0, 1215,
	407, 1182, 1183, 0, 1143, 0, 409, 410, 1217, 1175,
	1218, 411, 412, 413, 1219, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1211, 1220, 425, 426, 1221, 0, 427, 428, 429,
	430, 431, 432, 435, 1166, 1165, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1222, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 1223, 476, 464, 1105, 277, 1224, 478, 479, 480,
	1128, 1176, 481, 1190, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	1225, 492, 1226, 1205, 493, 494, 1115, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 1206, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 1186, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 1116, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1169, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	1184, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1231, 594, 595, 596, 597, 1207, 601,
	602, 0, 603, 604, 1102, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 1196,
	1197, 1198, 1199, 0, 623, 0, 614, 616, 617, 1208,
	618, 1209, 1126, 619, 620, 621, 622, 615, 624, 625,
	0, 1109, 626, 627, 628, 630, 631, 629, 632, 1170,
	633, 0, 0, 634, 635, 636, 695, 1193, 1230, 0,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 0, 0, 0, 0, 0, 0, 1099, 1100,
	0, 0, 0, 0, 0, 0, 0, 1132, 2642, 0,
	2641, 1130, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 1172, 1136, 0, 0, 0, 287,
	288, 1212, 289, 290, 291, 292, 293, 294, 649, 1185,
	0, 295, 1192, 296, 1191, 0, 1202, 297, 298, 299,
	300, 301, 302, 1138, 1171, 1103, 303, 1232, 1233, 656,
	0, 304, 305, 1178, 0, 1159, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 1213, 328, 329, 330, 1162, 1160,
	1161, 1168, 1164, 1163, 1167, 331, 332, 333, 334, 335,
	1195, 336, 338, 1189, 1188, 1108, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	1180, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 1114, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 1203, 1204, 369, 1127, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 1187, 0, 0,
	0, 373, 0, 374, 375, 0, 376, 0, 1214, 377,
	378, 379, 1200, 1201, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 389, 1210, 0, 1137, 390, 0,
	391, 392, 393, 394, 395, 396, 1173, 1174, 1177, 482,
	1216, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 276, 404, 405, 406, 408, 0, 1215, 407,
	1182, 1183, 0, 1143, 0, 409, 410, 1217, 1175, 1218,
	411, 412, 413, 1219, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1211, 1220, 425, 426, 1221, 0, 427, 428, 429, 430,
	431, 432, 435, 1166, 1165, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1222, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 477, 467,
	1223, 476, 464, 1105, 277, 1224, 478, 479, 480, 1128,
	1176, 481, 1190, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 678, 1225,
	492, 1226, 1205, 493, 494, 1115, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 680, 506,
	507, 508, 681, 509, 510, 511, 1206, 512, 683, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 1186, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 0, 536, 537, 538, 539, 535, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 1116, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1169, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 1184,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1231, 594, 595, 596, 597, 1207, 601, 602,
	0, 603, 604, 1102, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 363, 612, 0, 613, 1196, 1197,
	1198, 1199, 0, 623, 0, 614, 616, 617, 1208, 618,
	1209, 1126, 619, 620, 621, 622, 615, 624, 625, 0,
	1109, 626, 627, 628, 630, 631, 629, 632, 1170, 633,
	0, 0, 634, 635, 636, 695, 1193, 1230, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1101, 0, 0, 0, 0, 0, 0, 1099, 1100, 0,
	0, 0, 0, 0, 0, 0, 1132, 2639, 0, 1730,
	1130, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 1172, 1136, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 1185, 0,
	295, 1192, 296, 1191, 0, 1202, 297, 298, 299, 300,
	301, 302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 1195,
	336, 338, 1189, 1188, 1108, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1180,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1114, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 1127, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1187, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 1200, 1201, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 1137, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 1215, 407, 1182,
	1183, 0, 1143, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 1105, 277, 1224, 478, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 1186, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1231, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 1102, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 1196, 1197, 1198,
	1199, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	1126, 619, 620, 621, 622, 615, 624, 625, 0, 1109,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 695, 1193, 1230, 0, 638, 637,
	639, 640, 698, 641, 642, 1729, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1106, 0, 0, 0, 1095,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 278, 280,
	279, 281, 282, 283, 284, 1132, 285, 286, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 1185, 0,
	295, 1192, 296, 1191, 0, 1202, 297, 298, 299, 300,
	301, 302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 1195,
	336, 338, 1189, 1188, 1108, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1180,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1114, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 1127, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1187, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 1200, 1201, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 1137, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 1215, 407, 1182,
	1183, 0, 1143, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 1105, 277, 1224, 478, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 1110, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 1186, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1231, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 1102, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 1196, 1197, 1198,
	1199, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	1126, 619, 620, 621, 622, 615, 624, 625, 0, 1109,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 695, 1193, 1230, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1106, 0, 0, 0, 0,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 278, 280,
	279, 281, 282, 283, 284, 1132, 285, 286, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 1185, 0,
	295, 1192, 296, 1191, 0, 1202, 297, 298, 299, 300,
	301, 302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 4739, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 1195,
	336, 338, 1189, 1188, 1108, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1180,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1114, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 1127, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1187, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 1200, 1201, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 1137, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 1215, 407, 1182,
	1183, 0, 1143, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 1105, 277, 1224, 478, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 1110, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 1186, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1231, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 1102, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 1196, 1197, 1198,
	1199, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	1126, 619, 620, 621, 622, 615, 624, 625, 0, 1109,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 695, 1193, 1230, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1106, 0, 0, 0, 0,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 278, 280,
	279, 281, 282, 283, 284, 1132, 285, 286, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 1185, 0,
	295, 1192, 296, 1191, 0, 1202, 297, 298, 299, 300,
	301, 302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 1195,
	336, 338, 1189, 1188, 1108, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1180,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1114, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 1127, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1187, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 1200, 1201, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 1137, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 2480, 404, 405, 406, 408, 0, 1215, 407, 1182,
	1183, 0, 1143, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 1105, 277, 1224, 478, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	2479, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 1186, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1231, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 1102, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 1196, 1197, 1198,
	1199, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	1126, 619, 620, 621, 622, 615, 624, 625, 0, 1109,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 695, 1193, 1230, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1106, 0, 0, 0, 0,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 278, 280,
	279, 281, 282, 283, 284, 1132, 285, 286, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 1185, 0,
	295, 1192, 296, 1191, 0, 1202, 297, 298, 299, 300,
	301, 302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 1195,
	336, 338, 1189, 1188, 1108, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1180,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1114, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 1127, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1187, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 1200, 1201, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 1137, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 1215, 407, 1182,
	1183, 0, 1143, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 1105, 277, 1224, 478, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 1110, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 1186, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1231, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 1102, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 1196, 1197, 1198,
	1199, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	1126, 619, 620, 621, 622, 615, 624, 625, 0, 1109,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 695, 1193, 1230, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1106, 0, 0, 0, 0,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 278, 280,
	279, 281, 282, 283, 284, 1132, 285, 286, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 1185, 0,
	295, 1192, 296, 1191, 0, 1202, 297, 298, 299, 300,
	301, 302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 4474, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 1195,
	336, 338, 1189, 1188, 1108, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1180,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1114, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 1127, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1187, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 1200, 1201, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 1137, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 1215, 407, 1182,
	1183, 0, 1143, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 1105, 277, 1224, 478, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 1110, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 1186, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1231, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 1102, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 1196, 1197, 1198,
	1199, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	1126, 619, 620, 621, 622, 615, 624, 625, 0, 1109,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 695, 1193, 1230, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1106, 0, 0, 0, 0,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 278, 280,
	279, 281, 282, 283, 284, 1132, 285, 286, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 1185, 0,
	295, 1192, 296, 1191, 0, 1202, 297, 298, 299, 300,
	301, 302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 1195,
	336, 338, 1189, 1188, 1108, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1180,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1114, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 1127, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1187, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 1200, 1201, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 1137, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 1215, 407, 1182,
	1183, 0, 1143, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 1105, 4055, 1224, 478, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 1186, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1231, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 1102, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 1196, 1197, 1198,
	1199, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	1126, 619, 620, 621, 622, 615, 624, 625, 0, 1109,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 695, 1193, 1230, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 1960, 0,
	0, 0, 0, 0, 0, 1132, 0, 0, 0, 1130,
	1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 1172, 1136, 0, 0, 0, 287, 288, 1212,
	289, 290, 291, 292, 293, 294, 649, 1185, 0, 295,
	1192, 296, 1191, 0, 1202, 297, 298, 299, 300, 301,
	302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0, 304,
	305, 1178, 0, 1159, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1213, 328, 329, 330, 1162, 1160, 1161, 1168,
	1164, 1163, 1167, 331, 332, 333, 334, 335, 1195, 336,
	338, 1189, 1188, 1108, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 1180, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 1114, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 1203, 1204, 369, 1127, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 1187, 0, 0, 0, 373,
	0, 374, 375, 0, 376, 0, 1214, 377, 378, 379,
	1200, 1201, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 1210, 0, 1137, 390, 0, 391, 392,
	393, 394, 395, 396, 1173, 1174, 1177, 482, 1216, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	276, 404, 405, 406, 408, 0, 1215, 407, 1182, 1183,
	0, 1143, 0, 409, 410, 1217, 1175, 1218, 411, 412,
	413, 1219, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1211, 1220,
	425, 426, 1221, 0, 427, 428, 429, 430, 431, 432,
	435, 1166, 1165, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1222, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 477, 467, 1223, 476,
	464, 1105, 277, 1224, 478, 479, 480, 1128, 1176, 481,
	1190, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 678, 1225, 492, 1226,
	1205, 493, 494, 1115, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 680, 506, 507, 508,
	681, 509, 510, 511, 1206, 512, 683, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 1186, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 0,
	536, 537, 538, 539, 535, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	1116, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1169, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 1184, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1231, 594, 595, 596, 597, 1207, 601, 602, 0, 603,
	604, 1102, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 363, 612, 0, 613, 1196, 1197, 1198, 1199,
	0, 623, 0, 614, 616, 617, 1208, 618, 1209, 1126,
	619, 620, 621, 622, 615, 624, 625, 0, 1109, 626,
	627, 628, 630, 631, 629, 632, 1170, 633, 0, 0,
	634, 635, 636, 695, 1193, 1230, 3760, 638, 637, 639,
	640, 698, 641, 642, 0, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 1106, 0, 0, 0, 0, 0,
	1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101, 0,
	0, 0, 0, 0, 0, 1099, 1100, 278, 280, 279,
	281, 282, 283, 284, 1132, 285, 286, 0, 1130, 0,
	0, 0, 1172, 1136, 0, 0, 0, 287, 288, 1212,
	289, 290, 291, 292, 293, 294, 649, 1185, 0, 295,
	1192, 296, 1191, 0, 1202, 297, 298, 299, 300, 301,
	302, 1138, 1171, 1103, 303, 1232, 1233, 656, 0, 304,
	305, 1178, 0, 1159, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1213, 328, 329, 330, 1162, 1160, 1161, 1168,
	1164, 1163, 1167, 331, 332, 333, 334, 335, 1195, 336,
	338, 1189, 1188, 1108, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 1180, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 1114, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 1203, 1204, 369, 1127, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 1187, 0, 0, 0, 373,
	0, 374, 375, 0, 376, 0, 1214, 377, 378, 379,
	1200, 1201, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 0, 389, 1210, 0, 1137, 390, 0, 391, 392,
	393, 394, 395, 396, 1173, 1174, 1177, 482, 1216, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	276, 404, 405, 406, 408, 0, 1215, 407, 1182, 1183,
	0, 1143, 0, 409, 410, 1217, 1175, 1218, 411, 412,
	413, 1219, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1211, 1220,
	425, 426, 1221, 0, 427, 428, 429, 430, 431, 432,
	435, 1166, 1165, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1222, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 477, 467, 1223, 476,
	464, 1105, 277, 1224, 478, 479, 480, 1128, 1176, 481,
	1190, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 678, 1225, 492, 1226,
	1205, 493, 494, 1115, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 680, 506, 507, 508,
	681, 509, 510, 511, 1206, 512, 683, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 1186, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 0,
	536, 537, 538, 539, 535, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	1116, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1169, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 1184, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1231, 594, 595, 596, 597, 1207, 601, 602, 0, 603,
	604, 1102, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 363, 612, 0, 613, 1196, 1197, 1198, 1199,
	0, 623, 0, 614, 616, 617, 1208, 618, 1209, 1126,
	619, 620, 621, 622, 615, 624, 625, 0, 1109, 626,
	627, 628, 630, 631, 629, 632, 1170, 633, 0, 0,
	634, 635, 636, 695, 1193, 1230, 0, 638, 637, 639,
	640, 698, 641, 642, 0, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1101, 0,
	0, 0, 0, 0, 0, 1099, 1100, 1960, 0, 0,
	0, 0, 0, 0, 1132, 0, 0, 0, 1130, 1148,
	1120, 1121, 1122, 1118, 1119, 1131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 1172, 1136, 0, 0, 0, 287, 288, 1212, 289,
	290, 291, 292, 293, 294, 649, 1185, 0, 295, 1192,
	296, 1191, 0, 1202, 297, 298, 299, 300, 301, 302,
	1138, 1171, 1103, 303, 1232, 1233, 656, 0, 304, 305,
	1178, 0, 1159, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164,
	1163, 1167, 331, 332, 333, 334, 335, 1195, 336, 338,
	1189, 1188, 1108, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 1180, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	1114, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 1203, 1204, 369, 1127, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 1187, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 2741, 1214, 377, 378, 379, 1200,
	1201, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1210, 0, 1137, 390, 0, 391, 392, 393,
	394, 395, 396, 1173, 1174, 1177, 482, 1216, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 1215, 407, 1182, 1183, 0,
	1143, 0, 409, 410, 1217, 1175, 1218, 411, 412, 413,
	1219, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1211, 1220, 425,
	426, 1221, 0, 427, 428, 429, 430, 431, 432, 435,
	1166, 1165, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1222, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 1223, 476, 464,
	1105, 277, 1224, 478, 479, 480, 1128, 1176, 481, 1190,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 1225, 492, 1226, 1205,
	493, 494, 1115, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 1206, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	1186, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 1116,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1169, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 1184, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1231,
	594, 595, 596, 597, 1207, 601, 602, 0, 603, 604,
	1102, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 1196, 1197, 1198, 1199, 0,
	623, 0, 614, 616, 617, 1208, 618, 1209, 1126, 619,
	620, 621, 622, 615, 624, 625, 0, 1109, 626, 627,
	628, 630, 631, 629, 632, 1170, 633, 0, 0, 634,
	635, 636, 695, 1193, 1230, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1106, 0, 0, 0, 0, 0, 1148,
	1120, 1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0,
	0, 0, 0, 0, 1099, 1100, 278, 280, 279, 281,
	282, 283, 284, 1132, 285, 286, 0, 1130, 0, 0,
	0, 1172, 1136, 0, 0, 0, 287, 288, 1212, 289,
	290, 291, 292, 293, 294, 649, 1185, 0, 295, 1192,
	296, 1191, 0, 1202, 297, 298, 299, 300, 301, 302,
	1138, 1171, 1103, 303, 1232, 1233, 656, 0, 304, 305,
	1178, 0, 1159, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164,
	1163, 1167, 331, 332, 333, 334, 335, 1195, 336, 338,
	1189, 1188, 1108, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 1180, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	1114, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 1203, 1204, 369, 1127, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 1187, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 1214, 377, 378, 379, 1200,
	1201, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1210, 0, 1137, 390, 0, 391, 392, 393,
	394, 395, 396, 1173, 1174, 1177, 482, 1216, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 1215, 407, 1182, 1183, 0,
	1143, 0, 409, 410, 1217, 1175, 1218, 411, 412, 413,
	1219, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1211, 1220, 425,
	426, 1221, 0, 427, 428, 429, 430, 431, 432, 435,
	1166, 1165, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1222, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 1223, 476, 464,
	1105, 277, 1224, 478, 479, 480, 1128, 1176, 481, 1190,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 1225, 492, 1226, 1205,
	493, 494, 1115, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 1206, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	1186, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 1116,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1169, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 1184, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1231,
	594, 595, 596, 597, 1207, 601, 602, 0, 603, 604,
	1102, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 1196, 1197, 1198, 1199, 0,
	623, 0, 614, 616, 617, 1208, 618, 1209, 1126, 619,
	620, 621, 622, 615, 624, 625, 0, 1109, 626, 627,
	628, 630, 631, 629, 632, 1170, 633, 0, 0, 634,
	635, 636, 695, 1193, 1230, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1101, 0, 0,
	0, 0, 0, 0, 1099, 1100, 0, 0, 0, 0,
	0, 0, 0, 1132, 1889, 0, 2746, 1130, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	1172, 1136, 0, 0, 0, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 1185, 0, 295, 1192, 296,
	1191, 0, 1202, 297, 298, 299, 300, 301, 302, 1138,
	1171, 1103, 303, 1232, 1233, 656, 0, 304, 305, 1178,
	0, 1159, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 331, 332, 333, 334, 335, 1195, 336, 338, 1189,
	1188, 1108, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1180, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1114,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1203, 1204, 369, 1127, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1187, 0, 0, 0, 373, 0, 374,
	375, 0, 376, 0, 1214, 377, 378, 379, 1200, 1201,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1210, 0, 1137, 390, 0, 391, 392, 393, 394,
	395, 396, 1173, 1174, 1177, 482, 1216, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 276, 404,
	405, 406, 408, 0, 1215, 407, 1182, 1183, 0, 1143,
	0, 409, 410, 1217, 1175, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1211, 1220, 425, 426,
	1221, 0, 427, 428, 429, 430, 431, 432, 435, 1166,
	1165, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 1105,
	277, 1224, 478, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 678, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 1206, 512, 683, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 1186,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1231, 594,
	595, 596, 597, 1207, 601, 602, 0, 603, 604, 1102,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 0, 613, 1196, 1197, 1198, 1199, 0, 623,
	0, 614, 616, 617, 1208, 618, 1209, 1126, 619, 620,
	621, 622, 615, 624, 625, 0, 1109, 626, 627, 628,
	630, 631, 629, 632, 1170, 633, 0, 0, 634, 635,
	636, 695, 1193, 1230, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 1106, 0, 0, 0, 2744, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 278, 280, 279, 281, 282,
	283, 284, 1132, 285, 286, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 1185, 0, 295, 1192, 296,
	1191, 0, 1202, 297, 298, 299, 300, 301, 302, 1138,
	1171, 1103, 303, 1232, 1233, 656, 0, 304, 305, 1178,
	0, 1159, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 331, 332, 333, 334, 335, 1195, 336, 338, 1189,
	1188, 1108, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1180, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1114,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1203, 1204, 369, 1127, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1187, 0, 0, 0, 373, 0, 374,
	375, 0, 376, 0, 1214, 377, 378, 379, 1200, 1201,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1210, 0, 1137, 390, 0, 391, 392, 393, 394,
	395, 396, 1173, 1174, 1177, 482, 1216, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 276, 404,
	405, 406, 408, 0, 1215, 407, 1182, 1183, 0, 1143,
	0, 409, 410, 1217, 1175, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1211, 1220, 425, 426,
	1221, 0, 427, 428, 429, 430, 431, 432, 435, 1166,
	1165, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 1105,
	277, 1224, 478, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 678, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 1206, 512, 683, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 1186,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1231, 594,
	595, 596, 597, 1207, 601, 602, 0, 603, 604, 1102,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 0, 613, 1196, 1197, 1198, 1199, 0, 623,
	0, 614, 616, 617, 1208, 618, 1209, 1126, 619, 620,
	621, 622, 615, 624, 625, 0, 1109, 626, 627, 628,
	630, 631, 629, 632, 1170, 633, 0, 0, 634, 635,
	636, 695, 1193, 1230, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 1106, 0, 0, 0, 2732, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 278, 280, 279, 281, 282,
	283, 284, 1132, 285, 286, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 1185, 0, 295, 1192, 296,
	1191, 0, 1202, 297, 298, 299, 300, 301, 302, 1138,
	1171, 1103, 303, 1232, 1233, 656, 0, 304, 305, 1178,
	0, 1159, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 331, 332, 333, 334, 335, 1195, 336, 338, 1189,
	1188, 1108, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1180, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1114,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1203, 1204, 369, 1127, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1187, 0, 0, 0, 373, 0, 374,
	375, 0, 376, 0, 1214, 377, 378, 379, 1200, 1201,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1210, 0, 1137, 390, 0, 391, 392, 393, 394,
	395, 396, 1173, 1174, 1177, 482, 1216, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 276, 404,
	405, 406, 408, 0, 1215, 407, 1182, 1183, 0, 1143,
	0, 409, 410, 1217, 1175, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1211, 1220, 425, 426,
	1221, 0, 427, 428, 429, 430, 431, 432, 435, 1166,
	1165, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 1105,
	277, 1224, 478, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 678, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 1206, 512, 683, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 1186,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1231, 594,
	595, 596, 597, 1207, 601, 602, 0, 603, 604, 1102,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 0, 613, 1196, 1197, 1198, 1199, 0, 623,
	0, 614, 616, 617, 1208, 618, 1209, 1126, 619, 620,
	621, 622, 615, 624, 625, 0, 1109, 626, 627, 628,
	630, 631, 629, 632, 1170, 633, 0, 0, 634, 635,
	636, 695, 1193, 1230, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 1106, 0, 0, 0, 2720, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 278, 280, 279, 281, 282,
	283, 284, 1132, 285, 286, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 1185, 0, 295, 1192, 296,
	1191, 0, 1202, 297, 298, 299, 300, 301, 302, 1138,
	1171, 1103, 303, 1232, 1233, 656, 0, 304, 305, 1178,
	0, 1159, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 331, 332, 333, 334, 335, 1195, 336, 338, 1189,
	1188, 1108, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1180, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1114,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1203, 1204, 369, 1127, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1187, 0, 0, 0, 373, 0, 374,
	375, 0, 376, 0, 1214, 377, 378, 379, 1200, 1201,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1210, 0, 1137, 390, 0, 391, 392, 393, 394,
	395, 396, 1173, 1174, 1177, 482, 1216, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 276, 404,
	405, 406, 408, 0, 1215, 407, 1182, 1183, 0, 1143,
	0, 409, 410, 1217, 1175, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1211, 1220, 425, 426,
	1221, 0, 427, 428, 429, 430, 431, 432, 435, 1166,
	1165, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 1105,
	277, 1224, 478, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 678, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 1206, 512, 683, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 1186,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1231, 594,
	595, 596, 597, 1207, 601, 602, 0, 603, 604, 1102,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 0, 613, 1196, 1197, 1198, 1199, 0, 623,
	0, 614, 616, 617, 1208, 618, 1209, 1126, 619, 620,
	621, 622, 615, 624, 625, 0, 1109, 626, 627, 628,
	630, 631, 629, 632, 1170, 633, 0, 0, 634, 635,
	636, 695, 1193, 1230, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 1106, 0, 0, 0, 2718, 0, 2709, 2716,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 278, 280, 279, 281, 282,
	283, 284, 1132, 285, 286, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 1185, 0, 295, 1192, 296,
	1191, 0, 1202, 297, 298, 299, 300, 301, 302, 1138,
	1171, 1103, 303, 1232, 1233, 656, 0, 304, 305, 1178,
	0, 1159, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 331, 332, 333, 334, 335, 1195, 2712, 338, 1189,
	1188, 1108, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1180, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1114,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1203, 1204, 369, 1127, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1187, 0, 0, 0, 373, 0, 374,
	375, 0, 376, 0, 1214, 377, 378, 379, 1200, 1201,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1210, 0, 1137, 390, 0, 391, 392, 393, 394,
	2713, 396, 1173, 1174, 1177, 482, 1216, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 276, 404,
	405, 406, 408, 0, 1215, 407, 1182, 1183, 0, 1143,
	0, 409, 410, 1217, 1175, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1211, 1220, 425, 426,
	1221, 0, 427, 428, 429, 430, 431, 432, 435, 1166,
	1165, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 2714, 445, 2711, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 1105,
	277, 1224, 478, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 678, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 1206, 512, 683, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 1186,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 2715, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1231, 594,
	595, 596, 597, 1207, 601, 602, 0, 603, 604, 1102,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 0, 613, 1196, 1197, 1198, 1199, 0, 623,
	0, 614, 616, 617, 1208, 618, 1209, 1126, 619, 620,
	621, 622, 615, 624, 625, 0, 1109, 626, 627, 628,
	630, 631, 629, 632, 1170, 633, 0, 0, 634, 635,
	636, 695, 1193, 1230, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	2710, 647, 1106, 0, 0, 0, 2706, 0, 2709, 2716,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 278, 280, 279, 281, 282,
	283, 284, 1132, 285, 286, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 1185, 0, 295, 1192, 296,
	1191, 0, 1202, 297, 298, 299, 300, 301, 302, 1138,
	1171, 1103, 303, 1232, 1233, 656, 0, 304, 305, 1178,
	0, 1159, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 331, 332, 333, 334, 335, 1195, 2712, 338, 1189,
	1188, 1108, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1180, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1114,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1203, 1204, 369, 1127, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1187, 0, 0, 0, 373, 0, 374,
	375, 0, 376, 0, 1214, 377, 378, 379, 1200, 1201,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1210, 0, 1137, 390, 0, 391, 392, 393, 394,
	2713, 396, 1173, 1174, 1177, 482, 1216, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 276, 404,
	405, 406, 408, 0, 1215, 407, 1182, 1183, 0, 1143,
	0, 409, 410, 1217, 1175, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1211, 1220, 425, 426,
	1221, 0, 427, 428, 429, 430, 431, 432, 435, 1166,
	1165, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 2714, 445, 2711, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 1105,
	277, 1224, 478, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 678, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 1206, 512, 683, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 1186,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 2715, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1231, 594,
	595, 596, 597, 1207, 601, 602, 0, 603, 604, 1102,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 0, 613, 1196, 1197, 1198, 1199, 0, 623,
	0, 614, 616, 617, 1208, 618, 1209, 1126, 619, 620,
	621, 622, 615, 624, 625, 0, 1109, 626, 627, 628,
	630, 631, 629, 632, 1170, 633, 0, 0, 634, 635,
	636, 695, 1193, 1230, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	2710, 647, 1106, 0, 0, 0, 0, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 278, 280, 279, 281, 282,
	283, 284, 1132, 285, 286, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 1185, 0, 295, 1192, 296,
	1191, 0, 1202, 297, 298, 299, 300, 301, 302, 1138,
	1171, 1103, 303, 1232, 1233, 656, 0, 304, 305, 1178,
	0, 1159, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 331, 332, 333, 334, 335, 1195, 336, 338, 1189,
	1188, 1108, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1180, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1114,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1203, 1204, 369, 1127, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1187, 0, 0, 0, 373, 0, 374,
	375, 0, 376, 0, 1214, 377, 378, 379, 1200, 1201,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 1210, 0, 1137, 390, 0, 391, 392, 393, 394,
	395, 396, 1173, 1174, 1177, 482, 1216, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 276, 404,
	405, 406, 408, 0, 1215, 407, 1182, 1183, 0, 1143,
	0, 409, 410, 1217, 1175, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1211, 1220, 425, 426,
	1221, 0, 427, 428, 429, 430, 431, 432, 435, 1166,
	1165, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 1105,
	277, 1224, 478, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 678, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 1206, 512, 683, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 1186,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1231, 594,
	595, 596, 597, 1207, 601, 602, 0, 603, 604, 1102,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 0, 613, 1196, 1197, 1198, 1199, 0, 623,
	0, 614, 616, 617, 1208, 618, 1209, 1126, 619, 620,
	621, 622, 615, 624, 625, 0, 1109, 626, 627, 628,
	630, 631, 629, 632, 1170, 633, 0, 0, 634, 635,
	636, 695, 1193, 1230, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 0, 0, 0, 0, 0,
	1897, 0, 1132, 0, 0, 0, 1130, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 2459, 285, 286, 0, 0, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 2423, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 2398, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 1735, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 1664, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 1659, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 1650, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 1645, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 1556, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1555, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 1550, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1549, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 1543, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 1359, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 4788, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 4787, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 4786, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 4788, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 4787, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 4405, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 4406, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 4404, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 3215, 3216, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 3213, 3214, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1106, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 2467, 2468, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	0, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 0, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 2728, 0, 0, 0, 0,
	0, 0, 2726, 2727, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	0, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 0, 277,
	1224, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 3208, 3209, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 0, 0, 0, 0, 0,
	0, 0, 2141, 2142, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 0, 1185, 0, 295, 1192, 296, 1191,
	0, 1202, 297, 298, 299, 300, 301, 302, 1138, 1171,
	1103, 303, 1232, 1233, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 4788, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 1195, 336, 338, 1189, 1188,
	1108, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1180, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1114, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 1127, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1187, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 1200, 1201, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 1137, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 1182, 1183, 0, 1143, 0,
	409, 410, 0, 1175, 0, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 1105, 277,
	0, 478, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 1186, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1231, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 1102, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 1196, 1197, 1198, 1199, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 1126, 619, 620, 621,
	622, 615, 4787, 625, 0, 1109, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 1193, 1230, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 1090, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 1100, 278, 280, 279, 281, 282, 283,
	284, 1132, 285, 286, 0, 1130, 0, 0, 0, 1172,
	0, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 1171,
	0, 303, 654, 655, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 671, 672, 0, 673, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1256,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 0, 277,
	1224, 478, 479, 480, 0, 1176, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 1262, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 685, 1264, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 237, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 0, 600,
	591, 239, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	1634, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 231, 643, 644, 699, 645, 646,
	647, 1270, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 1260,
	0, 1984, 0, 1172, 0, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 1171, 0, 303, 654, 655, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 1215, 407, 671,
	672, 0, 673, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1256, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 0, 277, 1224, 478, 479, 480, 0, 1176,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 1262,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 685, 1264, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 237, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 0, 600, 591, 239, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 1634, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 231, 643,
	644, 699, 645, 646, 647, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3373, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 0, 1984, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 1172, 0, 0, 0, 0, 287, 288, 1212, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 1171, 0, 303, 654, 655, 656, 0, 304, 305,
	1178, 0, 1159, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164,
	1163, 1167, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 1203, 1204, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 1214, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1210, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 1173, 1174, 1177, 482, 1216, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 1215, 407, 671, 672, 0,
	673, 0, 409, 410, 1217, 1175, 1218, 411, 412, 413,
	1219, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1256, 421, 423, 422, 0, 424, 1211, 1220, 425,
	426, 1221, 0, 427, 428, 429, 430, 431, 432, 435,
	1166, 1165, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1222, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 1223, 476, 464,
	0, 277, 1224, 478, 479, 480, 0, 1176, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 1262, 487, 488,
	489, 0, 0, 490, 491, 678, 1225, 492, 1226, 1205,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 1206, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 685,
	1264, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1169, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 1207, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 1208, 618, 1209, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 1170, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1260, 0, 1258, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 1172,
	0, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 1171,
	0, 303, 654, 655, 656, 0, 304, 305, 1178, 0,
	1159, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1203,
	1204, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	1210, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 1173, 1174, 1177, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 1215, 407, 671, 672, 0, 673, 0,
	409, 410, 1217, 1175, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1256,
	421, 423, 422, 0, 424, 1211, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 1166, 1165,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 0, 277,
	1224, 478, 479, 480, 0, 1176, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 1262, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 1205, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 1206, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 685, 1264, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 1207, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 1208, 618, 1209, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 1170, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 1260,
	0, 1258, 0, 1172, 0, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 1171, 0, 303, 654, 655, 656, 0,
	304, 305, 1178, 0, 1159, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1203, 1204, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 1210, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 1173, 1174, 1177, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 1215, 407, 671,
	672, 0, 673, 0, 409, 410, 1217, 1175, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1256, 421, 423, 422, 0, 424, 1211,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 1166, 1165, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 0, 277, 1224, 478, 479, 480, 0, 1176,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 1262,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 1205, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 1206, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 685, 1264, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 1207, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 1208, 618, 1209,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 1170, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 1260, 0, 1258, 0, 1172, 0, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 1171, 0, 303,
	654, 655, 656, 0, 304, 305, 1178, 0, 1159, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1203, 1204, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 1210, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 1173,
	1174, 1177, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 1215, 407, 671, 672, 0, 673, 0, 409, 410,
	1217, 1175, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1211, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 1166, 1165, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 0, 277, 1224, 478,
	479, 480, 0, 1176, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 1205, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 1206,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	1207, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 1208, 618, 1209, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 1170, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 4226,
	0, 1172, 0, 0, 0, 0, 287, 288, 1212, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 1171, 0, 303, 654, 655, 656, 0, 304, 305,
	1178, 0, 1159, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1213, 328, 329, 330, 1162, 1160, 1161, 1168, 1164,
	1163, 1167, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 1203, 1204, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 1214, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 1210, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 1173, 1174, 1177, 482, 1216, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 1215, 407, 671, 672, 0,
	673, 0, 409, 410, 1217, 1175, 1218, 411, 412, 413,
	1219, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1211, 1220, 425,
	426, 1221, 0, 427, 428, 429, 430, 431, 432, 435,
	1166, 1165, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1222, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 1223, 476, 464,
	0, 277, 1224, 478, 479, 480, 0, 1176, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 1225, 492, 1226, 1205,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 1206, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 685,
	1264, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1169, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 1207, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 1208, 618, 1209, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 1170, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 272, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 2573, 2574, 2575, 2592, 2593, 2594,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 2595, 0, 648, 0, 0, 0,
	0, 287, 288, 1881, 289, 290, 291, 292, 293, 294,
	649, 650, 0, 295, 651, 296, 652, 0, 653, 297,
	298, 299, 300, 301, 302, 0, 0, 1866, 303, 654,
	655, 656, 0, 304, 305, 657, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 2585, 0, 314, 315,
	316, 313, 317, 0, 318, 2581, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 658, 659, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 660, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 661, 662, 369, 0,
	0, 0, 2586, 2587, 2588, 2589, 370, 371, 372, 663,
	0, 0, 2580, 373, 0, 374, 375, 0, 376, 0,
	0, 377, 378, 379, 664, 665, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 389, 666, 0, 667,
	390, 0, 391, 392, 393, 394, 395, 396, 668, 669,
	670, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 2590, 2591,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 2583, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	477, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 676, 481, 677, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	678, 0, 492, 0, 679, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	680, 506, 507, 508, 681, 509, 510, 511, 682, 512,
	683, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 0, 536, 537, 538, 539, 535, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 685, 553, 2584, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 686, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 687, 594, 595, 596, 597, 688,
	601, 602, 0, 603, 604, 1865, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 363, 612, 0, 613,
	689, 690, 691, 692, 0, 623, 0, 614, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 615, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 1352, 2570,
	2571, 2572, 2596, 2582, 2576, 0, 2578, 2579, 2577, 2564,
	2565, 2566, 2567, 2568, 2569, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 287, 288, 1212, 289, 290,
	291, 292, 293, 294, 649, 650, 0, 295, 651, 296,
	652, 0, 653, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 654, 655, 656, 0, 304, 305, 657,
	0, 1357, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1213, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 658,
	659, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 660,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	661, 662, 369, 0, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 663, 0, 0, 0, 373, 0, 374,
	375, 0, 376, 0, 1214, 377, 378, 379, 664, 665,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	389, 666, 0, 667, 390, 0, 391, 392, 393, 394,
	395, 396, 668, 669, 670, 482, 1216, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1215, 407, 671, 672, 0, 673,
	0, 409, 410, 1217, 674, 1218, 411, 412, 413, 1219,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 675, 1220, 425, 426,
	1221, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1222, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 477, 467, 1223, 476, 464, 0,
	0, 1224, 478, 479, 480, 0, 676, 481, 677, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 678, 1225, 492, 1226, 679, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 680, 506, 507, 508, 681, 509,
	510, 511, 682, 512, 683, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 0, 536, 537,
	538, 539, 535, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 685, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 237, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 686, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 687, 594,
	595, 596, 597, 688, 601, 602, 0, 603, 604, 0,
	600, 591, 239, 605, 606, 607, 608, 609, 610, 611,
	363, 612, 0, 613, 689, 690, 691, 692, 0, 623,
	0, 614, 616, 617, 693, 618, 694, 0, 619, 620,
	621, 622, 615, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 1634, 696, 697, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 231, 643, 644, 699, 645,
	646, 647, 0, 1631, 232, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 190, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 1357, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1215, 407, 671, 672, 0, 673, 0, 409, 410,
	1217, 674, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 0, 0, 1224, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	237, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 239,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 1634, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 231, 643, 644, 699, 645, 646, 647, 1352,
	1351, 232, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 190,
	0, 648, 0, 0, 0, 0, 287, 288, 1212, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 1357, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1213, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 1214, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 1216, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1215, 407, 671, 672, 0,
	673, 0, 409, 410, 1217, 674, 1218, 411, 412, 413,
	1219, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 1220, 425,
	426, 1221, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1222, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 1223, 476, 464,
	0, 0, 1224, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 1225, 492, 1226, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1352, 1351, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 1656, 0, 648, 0, 0, 0, 0,
	287, 288, 1212, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 1357, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1213, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 1214,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 1216, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1215,
	407, 671, 672, 0, 673, 0, 409, 410, 1217, 674,
	1218, 411, 412, 413, 1219, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 1220, 425, 426, 1221, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1222, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 1223, 476, 464, 0, 0, 1224, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	1225, 492, 1226, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1352, 1351, 0,
	0, 0, 0, 1349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 3672, 0, 648,
	0, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	1357, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1215, 407, 671, 672, 0, 673, 0,
	409, 410, 1217, 674, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 0, 0,
	1224, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	2340, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1352, 2251, 0, 0, 0, 0, 2252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 1656, 0, 648, 0, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 1357, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1215, 407, 671,
	672, 0, 673, 0, 409, 410, 1217, 674, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 2250, 423, 422, 0, 424, 675,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 0, 0, 1224, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1352, 1351, 0, 0, 0,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 1656, 0, 648, 0, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 1357, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1215, 407, 671, 672, 0, 673, 0, 409, 410,
	1217, 674, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 0, 0, 1224, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1090,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 1640,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 237, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 239, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 1634, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 272, 0, 231, 643,
	644, 699, 645, 646, 647, 0, 0, 232, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 287, 288, 190, 289, 290, 291, 292,
	293, 294, 649, 650, 0, 295, 651, 296, 652, 0,
	653, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 654, 655, 656, 0, 304, 305, 657, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 658, 659, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 660, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 661, 662,
	369, 0, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 663, 0, 0, 0, 373, 0, 374, 375, 0,
	376, 0, 0, 377, 378, 379, 664, 665, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 666,
	0, 667, 390, 0, 391, 392, 393, 394, 395, 396,
	668, 669, 670, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 276, 404, 405, 406,
	408, 0, 0, 407, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 477, 467, 0, 476, 464, 0, 277, 0,
	478, 479, 480, 0, 676, 481, 677, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 678, 0, 492, 0, 679, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 680, 506, 507, 508, 681, 509, 510, 511,
	682, 512, 683, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 0, 536, 537, 538, 539,
	535, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 685, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 686, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 687, 594, 595, 596,
	597, 688, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 363, 612,
	0, 613, 689, 690, 691, 692, 0, 623, 0, 614,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	615, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 272, 3114, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	1998, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 4957, 0, 1172, 0, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 1171, 0, 303,
	654, 655, 656, 0, 304, 305, 1178, 0, 1159, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1203, 1204, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 1210, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 1173,
	1174, 1177, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 1215, 407, 671, 672, 0, 673, 0, 409, 410,
	1217, 1175, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1211, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 1166, 1165, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 0, 277, 1224, 478,
	479, 480, 0, 1176, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 1205, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 1206,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	1207, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 1208, 618, 1209, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 1170, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 277, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 272, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 3622, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 277, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 272, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 1628, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 272, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 287, 288, 3102, 289, 290, 291, 292,
	293, 294, 649, 650, 0, 295, 651, 296, 652, 0,
	653, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 654, 655, 656, 0, 304, 305, 657, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 658, 659, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 660, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 661, 662,
	369, 0, 0, 0, 0, 0, 0, 0, 370, 371,
	372, 663, 0, 0, 0, 373, 0, 374, 375, 0,
	376, 0, 0, 377, 378, 379, 664, 665, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 389, 666,
	0, 667, 390, 0, 391, 392, 393, 394, 395, 396,
	668, 669, 670, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 477, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 676, 481, 677, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 678, 0, 492, 0, 679, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 680, 506, 507, 508, 681, 509, 510, 511,
	682, 512, 683, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 0, 536, 537, 538, 539,
	535, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 685, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 686, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 687, 594, 595, 596,
	597, 688, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 363, 612,
	0, 613, 689, 690, 691, 692, 0, 623, 0, 614,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	615, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 272, 0, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	3785, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 921, 0, 826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 2329, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 833, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 919, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 277,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 831, 605, 606, 607, 608, 609, 832, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 826, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 2067, 285, 286, 0, 0,
	0, 0, 0, 648, 836, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 833, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 277, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 2066, 565, 566, 567, 568, 0, 2068, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 831, 605, 606, 607, 608,
	609, 832, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 2065, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 826, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 2018,
	285, 286, 0, 0, 0, 0, 0, 648, 836, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 833, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 277, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 2017, 565, 566, 567, 568,
	0, 2019, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 831,
	605, 606, 607, 608, 609, 832, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 2016, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 824,
	0, 826, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 836, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 833, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 277, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 831, 605, 606, 607, 608,
	609, 832, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 2040, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 836, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 0, 2046, 0, 295, 2036, 296, 2052, 0, 2059,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	2062, 2063, 0, 0, 304, 305, 0, 0, 1357, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 1195, 336, 338, 2050, 2049, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 1180, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 0, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	2048, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 2057, 2058, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 0,
	0, 0, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1215, 407, 2043, 2044, 0, 2039, 0, 409, 410,
	1217, 0, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 0, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 0, 0, 1224, 478,
	479, 480, 0, 0, 481, 2051, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 1225, 492, 1226, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 2033, 506, 507, 508, 2034, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 2047, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 2045, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 2061, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 2053, 2054, 2055, 2056, 0, 623, 0, 614, 616,
	617, 0, 618, 0, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 0, 2037,
	2060, 0, 638, 637, 639, 640, 0, 641, 642, 0,
	0, 0, 0, 643, 644, 0, 645, 646, 647, 826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 2027, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 833, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 277, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 831, 605, 606, 607, 608, 609, 832,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 826, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 836, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 833,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 276, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 277, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 2377, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 2378, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 831, 605, 606,
	607, 608, 609, 832, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 2379, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 272, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	836, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 277,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 1352, 2115, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 836, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 1357, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 3065, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1215, 407, 671,
	672, 0, 673, 0, 409, 410, 1217, 674, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 0, 0, 1224, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 3066, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1352, 1351, 0, 0, 0,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 1357, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1215, 407, 671, 672, 0, 673, 0, 409, 410,
	1217, 674, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 0, 0, 1224, 478,
	479, 480, 3987, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1352,
	1351, 0, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 1212, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 1357, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1213, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 1214, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 1216, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1215, 407, 671, 672, 0,
	673, 0, 409, 410, 1217, 674, 1218, 411, 412, 413,
	1219, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 1220, 425,
	426, 1221, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1222, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 1223, 476, 464,
	0, 0, 1224, 478, 479, 480, 3583, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 1225, 492, 1226, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1684, 0, 1352, 1351, 0, 0, 0,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 1357, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 1683, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1215, 407, 671, 672, 0, 673, 0, 409, 410,
	1217, 674, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 0, 0, 1224, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 1682, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 1681, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1602,
	0, 1352, 1351, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 1357, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 1601, 669, 670, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1215, 407, 671,
	672, 0, 673, 0, 409, 410, 1217, 674, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 0, 0, 1224, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1561, 0, 1352, 1351, 0,
	0, 0, 0, 1349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	1357, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 1563, 669, 670, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1215, 407, 671, 672, 0, 673, 0,
	409, 410, 1217, 674, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 0, 0,
	1224, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1526, 0, 1352, 1351, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 1212, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 1357, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1213, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 1214,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 1525, 669, 670,
	482, 1216, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1215,
	407, 671, 672, 0, 673, 0, 409, 410, 1217, 674,
	1218, 411, 412, 413, 1219, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 1220, 425, 426, 1221, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1222, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 1223, 476, 464, 0, 0, 1224, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	1225, 492, 1226, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1346, 0, 1352,
	1351, 0, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 1212, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 1357, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1213, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 1214, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 1345, 669, 670, 482, 1216, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1215, 407, 671, 672, 0,
	673, 0, 409, 410, 1217, 674, 1218, 411, 412, 413,
	1219, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 1220, 425,
	426, 1221, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1222, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 1223, 476, 464,
	0, 0, 1224, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 1225, 492, 1226, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1352, 1351, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 1212, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 1357, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1213, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 1214,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 1216, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1215,
	407, 671, 672, 0, 673, 0, 409, 410, 1217, 674,
	1218, 411, 412, 413, 1219, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 1220, 425, 426, 1221, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1222, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 1223, 476, 464, 0, 0, 1224, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	1225, 492, 1226, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 1352, 2115, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 1212, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	1357, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1213,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	2112, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 1214, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 1216, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1215, 407, 671, 672, 0, 673, 0,
	409, 410, 1217, 674, 1218, 411, 412, 413, 1219, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 1220, 425, 426, 1221,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1222,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 1223, 476, 464, 0, 0,
	1224, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 1225, 492, 1226, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 1352, 1351, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	1212, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 1357, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1213, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 1214, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 1216,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1215, 407, 671,
	672, 0, 673, 0, 409, 410, 1217, 674, 1218, 411,
	412, 413, 1219, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	1220, 425, 426, 1221, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1222, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 1223,
	476, 464, 0, 0, 1224, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 1225, 492,
	1226, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 1352, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 1212, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 1357, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1213, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 1214, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 1216, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1215, 407, 671, 672, 0, 673, 0, 409, 410,
	1217, 674, 1218, 411, 412, 413, 1219, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 1220, 425, 426, 1221, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1222, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 1223, 476, 464, 0, 0, 1224, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 1225, 492, 1226, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 2897, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 2894, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 2901, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 3127, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 2900, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 3124,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 3126, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 3123, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 2899, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 3125, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 2897, 304, 305, 657, 0, 0, 2891, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 2894, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 2901, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 2900, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 2890, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 2899, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 2898, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 1761, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 1760, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 1759, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 277, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 1762, 557, 564,
	565, 566, 567, 568, 0, 1758, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 1756, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 1757, 637, 639, 640,
	698, 641, 642, 1501, 0, 272, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 1503,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 277, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 1262, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 1498,
	0, 272, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 1500, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 277, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 1262,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 1406, 0, 272, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 1408, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 277,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 1262, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 731, 0, 272, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 730, 283, 284, 720, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 723, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 724, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 725, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 719, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 720, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 723, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	724, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 725, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 720, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 723, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 724, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 725, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 272, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 720, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 723, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 3998, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 725, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 272, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 277, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 1262,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 272, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 3530, 476, 464, 0, 277, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 3072,
	0, 272, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 3071, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 277, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 2346, 0, 272, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 277,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 272, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 277, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 2285, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 2292, 0, 272, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 2291, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 277,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 2278, 0, 272, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 2280, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 276, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 277, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 272, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 2244, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 277,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 1262, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 1606, 0, 272, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 1605, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 276, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 277, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 1518, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 277, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1511, 0, 272, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 1513,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 277, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 1336,
	0, 272, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 1335, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 277, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 1326, 0, 272, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 1325, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 277,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 1323, 0, 272, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 1322, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 276, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 277, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 1318, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 1317, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 277, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 701, 0, 272, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 277, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 263,
	0, 272, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 277, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 272, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 277, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 723, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	724, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 725, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 2386,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 276, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 277, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 272, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 2384, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 276, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 277,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 272, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 2382, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 276, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 277, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 272, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 2298,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 276, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 277, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 2091, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 276,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 277, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 2085, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 276, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 277, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 908, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 907, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 906, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 3127,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 4303, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 1370, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 1373, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 1371, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	791, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 790, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 789,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 1374,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 787, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1370, 0, 272, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 1373, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 1371, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 791, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	790, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 789, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 1374, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 787, 690, 691, 692, 0, 623, 0, 614, 1372,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 710,
	0, 272, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 709, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 708, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 272, 3114, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	4313, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 4601, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 272, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 4199, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 272, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 3952, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 272, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 2781,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	3114, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	3111, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 2210, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 790, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 789, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 787,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 272, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 2356, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 2344, 0, 272, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 2105, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 2072, 0, 272, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 781,
	0, 272, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 777, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	782, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 791, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 790, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 789, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 1639, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 787, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 1612, 0, 272, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 1611, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 1596, 0, 272, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 1594, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 1589, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1566, 0, 272, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 1564,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 1523,
	0, 272, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 1506, 0, 272, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 1376, 0, 272, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 790, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 789, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 787,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 1341, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 1340, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1332, 0, 272, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 1331,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 1285, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 796, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 781, 0, 272,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 777,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 776,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 782, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	791, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 790, 549, 550, 551, 552, 778,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 789,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 779,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 787, 690, 691, 692, 0,
	623, 0, 614, 783, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 770, 0, 272, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	771, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 733,
	0, 272, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 727, 0, 272, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 705, 0, 272, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 272, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 272, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 3642, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 272, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 668,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	790, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 789, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 787, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 3568, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 3546, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 272, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 3543, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 272, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 3495, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 272, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 3493,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 3478, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 390,
	0, 391, 392, 393, 394, 395, 396, 3082, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 272, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 649, 650, 0, 295, 651, 296, 652,
	0, 653, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 654, 655, 656, 0, 304, 305, 657, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 658, 659,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 660, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 661,
	662, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 663, 0, 0, 0, 373, 0, 374, 375,
	0, 376, 0, 0, 377, 378, 379, 664, 665, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 389,
	666, 0, 667, 390, 0, 391, 392, 393, 394, 395,
	396, 668, 669, 670, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 477, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 676, 481, 677, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 678, 0, 492, 0, 679, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 680, 506, 507, 508, 681, 509, 510,
	511, 682, 512, 683, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 0, 536, 537, 538,
	539, 535, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 685, 553, 0,
	554, 555, 771, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 686, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 687, 594, 595,
	596, 597, 688, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 363,
	612, 0, 613, 689, 690, 691, 692, 0, 623, 0,
	614, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 615, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 272, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 648, 0, 2316, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 649, 650, 0,
	295, 651, 296, 652, 0, 653, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 654, 655, 656, 0,
	304, 305, 657, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 658, 659, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 660, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 661, 662, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 663, 0, 0, 0,
	373, 0, 374, 375, 0, 376, 0, 0, 377, 378,
	379, 664, 665, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 0, 389, 666, 0, 667, 390, 0, 391,
	392, 393, 394, 395, 396, 668, 669, 670, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 477, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 676,
	481, 677, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 678, 0, 492,
	0, 679, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 680, 506, 507,
	508, 681, 509, 510, 511, 682, 512, 683, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	0, 536, 537, 538, 539, 535, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 685, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 0, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 686, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 687, 594, 595, 596, 597, 688, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 363, 612, 0, 613, 689, 690, 691,
	692, 0, 623, 0, 614, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 615, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 272, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 649, 650, 0, 295, 651, 296, 652, 0, 653,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	654, 655, 656, 0, 304, 305, 657, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 658, 659, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 660, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 661, 662, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	663, 0, 0, 0, 373, 0, 374, 375, 0, 376,
	0, 0, 377, 378, 379, 664, 665, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 389, 666, 0,
	667, 390, 0, 391, 392, 393, 394, 395, 396, 1303,
	669, 670, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 477, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 676, 481, 677, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 678, 0, 492, 0, 679, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 680, 506, 507, 508, 681, 509, 510, 511, 682,
	512, 683, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 0, 536, 537, 538, 539, 535,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 685, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 686, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 687, 594, 595, 596, 597,
	688, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 363, 612, 0,
	613, 689, 690, 691, 692, 0, 623, 0, 614, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 615,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 272,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 649, 650, 0, 295, 651,
	296, 652, 0, 653, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 654, 655, 656, 0, 304, 305,
	657, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	658, 659, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	660, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 661, 662, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 663, 0, 0, 0, 373, 0,
	374, 375, 0, 376, 0, 0, 377, 378, 379, 664,
	665, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 389, 666, 0, 667, 390, 0, 391, 392, 393,
	394, 395, 396, 668, 669, 670, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 477, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 676, 481, 677,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 678, 0, 492, 0, 679,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 680, 506, 507, 508, 681,
	509, 510, 511, 682, 512, 683, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 1235, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 0, 536,
	537, 538, 539, 535, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 685,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 686, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 687,
	594, 595, 596, 597, 688, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 363, 612, 0, 613, 689, 690, 691, 692, 0,
	623, 0, 614, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 615, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 272, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 649,
	650, 0, 295, 651, 296, 652, 0, 653, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 654, 655,
	656, 0, 304, 305, 657, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 658, 659, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 660, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 661, 662, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 663, 0,
	0, 0, 373, 0, 374, 375, 0, 376, 0, 0,
	377, 378, 379, 664, 665, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 389, 666, 0, 667, 0,
	0, 391, 392, 393, 394, 395, 396, 668, 669, 670,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 477,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 676, 481, 677, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 678,
	0, 492, 0, 679, 493, 494, 486, 495, 496, 0,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 680,
	506, 507, 508, 681, 509, 510, 511, 682, 512, 683,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 0, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 0, 536, 537, 538, 539, 535, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 685, 0, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	686, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 687, 594, 595, 596, 597, 688, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 363, 612, 0, 613, 689,
	690, 691, 692, 0, 623, 0, 614, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 615, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1810, 1811, 0,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	1841, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	1847, 1841, 1812, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 1832, 0, 0, 0, 0, 1860, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 1851, 1818,
	0, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 1851,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 1849, 0, 0, 0, 1810, 1811, 0, 1843,
	1844, 1845, 1854, 1855, 1856, 0, 1857, 1833, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 1847, 1841,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 1849, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 1866, 1859, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 1848, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 1836, 1837,
	1838, 0, 1834, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 1851, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 1859, 0, 0, 0, 0, 0, 0, 2607,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 1824, 1825, 1831, 1853,
	1830, 1826, 1863, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 0, 0, 4715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 1841, 0, 0, 0, 0, 0, 1839, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 1810, 1811, 1812, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 0, 1832, 0, 0, 0, 1852, 0,
	0, 0, 0, 1829, 1847, 1841, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	1851, 0, 0, 1861, 4711, 0, 0, 0, 0, 0,
	1840, 1842, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 1857, 0, 1858,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 1861, 0, 0, 1833,
	0, 0, 0, 1840, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 1847, 1841, 0,
	0, 0, 0, 0, 1839, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 1834, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 1852, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 1825, 1831,
	1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 0, 0, 4626, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 1851, 0, 0, 1861,
	4584, 0, 0, 0, 0, 0, 1840, 1842, 0, 0,
	0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 1857, 0, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 1847, 1841, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	1849, 0, 1860, 0, 1810, 1811, 0, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 1833, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 1847, 1841, 1812, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 1832, 0,
	0, 0, 0, 1860, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1859, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	1848, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1836, 1837, 1838, 0,
	1834, 0, 0, 0, 1851, 1818, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 1857, 0, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 1851, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 1840, 1842, 0, 1849, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 1833, 1858, 0, 0, 0, 0, 0,
	0, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 1863,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	1859, 0, 0, 4583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 1834, 1843,
	1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 1847, 1841,
	0, 0, 0, 0, 0, 1852, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 1810, 1811, 1834,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 1865, 0, 1847,
	1841, 1812, 0, 0, 0, 0, 1852, 1813, 0, 0,
	0, 1832, 0, 0, 0, 0, 1860, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 1865, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 1835, 1836, 1837,
	1838, 4389, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 1835, 1836,
	1837, 1838, 4222, 0, 0, 0, 0, 1851, 1818, 0,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 1851, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 1849, 0, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 1857, 1833, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 1847, 1841, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 1849, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 1866, 1859, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 1848, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 1834, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 1851, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 1857, 0, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 1859, 0, 0, 4143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 1863, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 0, 0, 4142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 1841, 0, 0, 0, 0, 0, 1839, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 1810, 1811, 1812, 1843, 1844, 1845, 1854, 1855, 1856,
	0, 0, 0, 1832, 0, 0, 0, 1852, 0, 0,
	0, 0, 1829, 1847, 1841, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 1851,
	0, 0, 1861, 4141, 0, 0, 0, 0, 0, 1840,
	1842, 0, 1835, 1836, 1837, 1838, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 1857, 0, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 1861, 0, 0, 1833, 0,
	0, 0, 1840, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 1847, 1841, 0, 0,
	0, 0, 0, 1839, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 1834, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 1852, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1825, 1831, 1853,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 0, 0, 3790, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 1851, 0, 0, 1861, 3291,
	0, 0, 0, 0, 0, 1840, 1842, 0, 0, 0,
	0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 1857, 0, 1858, 0, 0, 0, 0, 0,
	0, 1827, 1828, 0, 1847, 1841, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 1849,
	0, 1860, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 1833, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 1847, 1841, 1812, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 1832, 0, 0,
	0, 0, 1860, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1859, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 1848,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 1834,
	0, 0, 0, 1851, 1818, 0, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	1857, 0, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 1851, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 1849, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 1833, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 1863, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 1859,
	0, 0, 3290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 1834, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 1847, 1841, 0,
	0, 0, 0, 0, 1852, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 1865, 0, 0, 0,
	1812, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 1835, 1836, 1837, 1838,
	3289, 0, 0, 0, 0, 0, 1818, 4864, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0,
	0, 3288, 0, 0, 0, 0, 1851, 1810, 1811, 1861,
	1843, 1844, 1845, 1854, 1855, 1856, 1840, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	1841, 0, 0, 1857, 0, 1858, 0, 1813, 0, 0,
	0, 0, 1827, 1828, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 1836,
	1837, 1838, 0, 4863, 0, 0, 0, 0, 1818, 0,
	3353, 0, 0, 0, 0, 3352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 1833, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 1847, 1841, 0,
	0, 0, 0, 3223, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 1859, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 1848, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 1850, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 1834, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	2754, 0, 0, 0, 0, 0, 0, 1810, 1811, 0,
	1843, 1844, 1845, 1854, 1855, 1856, 1851, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 0, 1847,
	1841, 1865, 0, 0, 2753, 0, 0, 1813, 0, 0,
	0, 0, 0, 1857, 0, 1858, 1860, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	1849, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 1833, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 1835, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 1841, 1839, 1851, 0,
	0, 1861, 0, 1813, 0, 0, 0, 0, 1840, 1842,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 1857, 0, 1858, 0, 1866,
	0, 0, 0, 0, 1827, 1828, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 1832, 0,
	0, 0, 1849, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 1863, 1818, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 0, 1851, 1810, 1811, 1861, 1843, 1844,
	1845, 1854, 1855, 1856, 1840, 1842, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 1847, 1841, 0,
	0, 1857, 0, 1858, 0, 1813, 0, 0, 0, 0,
	1827, 1828, 1834, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 1852,
	1812, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 1087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 1850, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 1833, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 1847, 1841, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 1859, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	1848, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	1850, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	1834, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 3359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 1851, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 1847, 1841, 1865,
	0, 0, 3354, 0, 0, 1813, 0, 0, 0, 0,
	0, 1857, 3771, 1858, 1860, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 1849, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 1833, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 1841, 1839, 1851, 0, 0, 1861,
	0, 1813, 0, 0, 0, 0, 1840, 1842, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 1857, 0, 1858, 0, 1866, 0, 0,
	0, 0, 1827, 1828, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1832, 0, 0, 0,
	1849, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 1835, 1836, 1837, 1838, 0, 0, 0, 0,
	0, 1863, 1818, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0,
	0, 0, 1851, 1810, 1811, 1861, 1843, 1844, 1845, 1854,
	1855, 1856, 1840, 1842, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 1847, 1841, 0, 0, 1857,
	3292, 1858, 0, 1813, 0, 0, 0, 0, 1827, 1828,
	1834, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 1852, 1812, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3319, 0, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 1850, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856,
	0, 0, 0, 1833, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 1847, 1841, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 1859,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 1848, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 1850, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 1836, 1837, 1838, 0, 0, 1834, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 1851, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 1847, 1841, 1865, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 1857,
	0, 1858, 1860, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 1849, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 1833, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 1851, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 1857, 0, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 2331, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820,
}

var sqlPact = [...]int{
	287, -1000, -1000, -1000, -1000, 176, -1000, -1000, 175, 170,
	167, 166, 165, 162, 160, 159, 155, 154, 150, -1000,
	-1000, -1000, -1000, -1000, -1000, 149, -1000, -1000, 146, -1000,
	144, 142, 141, -1000, -1000, 138, -1000, 136, -1000, -1000,
	-1000, -1000, 134, 133, 130, 95637, 95071, 96201, 2371, 119369,
	102977, 2198, 84895, 118803, 84329, 118237, 2268, 10251, 117671, 2814,
	128, -1000, 117105, 126, 124, 121, -1000, 116539, -1000, 1840,
	-1000, 119, -1000, 8916, 71247, 118, 116, 114, 2345, 112,
	-1000, 110, 103, -1000, -1000, 102, -1000, 12422, 1513, -1000,
	101, 100, -1000, 5694, 100715, 97, 96, 2283, 95, 94,
	69553, 93, 92, 2187, 2903, -1000, -1000, 2140, -1000, -1000,
	91, 89, 87, 85, 84, 82, 81, 80, 79, 73,
	72, 70, 68, -1000, 64, 63, 62, 59, 58, -1000,
	56, 54, 53, -1000, 52, -1000, 50, 48, 46, 45,
	44, 43, 42, 41, 40, 39, 37, 36, 34, 33,
	13631, -1000, -1000, 32, 1800, 1694, 1686, 1685, 1676, 1670,
	1000, 28, 26, 25, 20, 18, 15, 14, 13, 12,
	10, 6, 5, 4, 3, 2, 1, 0, -1, 132,
	-5, -7, -13, -16, -17, -19, -21, 5030, -1000, 1560,
	991, 1199, 33067, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 127265, 119933, -22, -112, -23, -1000, 3319, 894, 57553,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 222, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 441, 2045, 727, -1000, -1000, -1000, 115975, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2369, -49, -1000,
	2083, -1000, -1000, -1000, -1000, -1000, 723, -1000, 2367, 299,
	2328, -1000, -1000, -1000, 3400, 2518, 3794, 3792, 3791, 3789,
	3788, 126701, 1823, 3785, 2586, 3784, 3783, 3782, 3781, 3780,
	3779, 3778, -1000, 94505, 1046, 93939, 93373, 3407, 115411, 92807,
	114845, 78105, 49423, 967, 3394, -1000, -1000, -1000, -1000, -1000,
	-1000, 119933, -1000, 1045, -1000, -1000, 3777, 2107, 717, 102411,
	-1000, -1000, 114279, 1744, -1000, -1000, -1000, 943, 1216, 34807,
	34807, 34807, 220, -1000, -1000, -1000, -1000, -1000, -1000, 3776,
	3775, 3773, 3772, 3771, -1000, -1000, 83763, 25921, 83197, 82631,
	113713, 25345, 92241, 91675, 3769, 3768, 3767, 113147, 77529, 3515,
	3514, 1044, 2082, 1431, -1000, -1000, -1000, -1000, -1000, -1000,
	-44, 73513, 3559, 119933, -1000, 219, -1000, -1000, -1000, -1000,
	-1000, -1000, 48843, 782, 48263, 732, 47683, 424, -1000, -1000,
	-1000, -1000, 76953, -1000, 112581, 2516, 3766, 3765, 1136, 3763,
	3296, 1689, 3762, 1928, 1224, 3761, 3760, 3758, 3756, 3755,
	3753, 3744, 1462, 112015, 2993, 1502, 111449, 1769, 76377, 1043,
	91109, 96201, 2661, 110883, 1425, 1351, -1000, -1000, -1000, -1000,
	3090, 2897, 2885, 1125, -1000, -1000, -1000, -1000, 61001, 7588,
	7185, -1000, -1000, 10486, 110317, 63871, 96201, 96201, -1000, -1000,
	-1000, -1000, -1000, 47103, 772, 46523, 864, -1000, -1000, 61575,
	2931, -1000, -1000, -1000, -1000, 45943, 767, 45363, 799, 119933,
	-1000, 2989, 2054, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2229, 1616, 3564, 2762, 75801, 2100, 1436, 3357, 3087,
	3074, 1549, 2078, 3073, 3738, 2690, 3070, 3069, 3067, 3063,
	3053, 1664, 2614, 720, 2617, 32487, 2975, 1801, 44783, 1526,
	1550, 3036, 3031, 3575, 2038, 2059, 2167, 82065, 3736, 3734,
	3316, 3028, 3027, 2815, 3025, -1000, 2926, 1453, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1446, -1000, -1000, -1000,
	-1000, -1000, 86587, -1000, -1000, 1382, -1000, -1000, 1382, -1000,
	-1000, -1000, -1000, -1000, 1258, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1560, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2223, -1000,
	2090, -1000, -1000, 2592, 3318, 3318, 3318, 3390, 418, 416,
	-1000, 132, 882, 1117, -1000, -1000, 134332, -1000, -1000, 50003,
	50003, 50003, 50003, 50003, 50003, 50003, 50003, 2275, -1000, 714,
	-1000, -1000, 796, -1000, 713, 654, 605, -1000, -1000, -1000,
	-1000, -1000, -1000, 712, -1000, -1000, -1000, -1000, -1000, -1000,
	3559, -1000, 28874, -1000, -1000, -1000, 394, 711, 50003, -1000,
	-1000, 3596, 3595, 896, -1000, 218, 974, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2988,
	710, 709, -1000, 708, 706, 705, 698, 697, -1000, 696,
	-1000, 694, 693, 690, 689, 688, 687, 684, 678, -1000,
	2110, -1000, -1000, -1000, -1000, -1000, -1000, 644, 643, 643,
	643, -1000, 1033, -1000, -1000, -1000, 307, 641, 266, 640,
	639, 635, -1000, 673, 671, 668, 664, 663, 662, 661,
	660, 657, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1031,
	-1000, -1000, -1000, -1000, -45, 119933, -1000, 441, -45, -1000,
	-1000, 656, -1000, 37156, 37156, 37156, -1000, -1000, 2364, 50003,
	-1000, 2425, -1000, -34, -34, 920, 59275, -1000, 56377, 920,
	292, 803, 65012, -1000, 2925, -1000, -1000, 655, 217, -1000,
	-1000, -1000, -1000, 26495, 2922, 119933, 119933, 119933, 96201, 96201,
	96201, 3733, 3180, 50003, -1000, -1000, 70681, 119933, 96765, -1000,
	-1000, 3501, 71811, 70117, 119933, 2987, 109751, 3731, -1000, -1000,
	-1000, -1000, -1000, 3159, 3728, 3726, 3725, -1000, 119933, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 241, 3158, -1000, -1000,
	100149, 241, 3156, -1000, 241, 3152, -1000, 99585, -1000, -1000,
	2301, 3150, -1000, -1000, 249, 3148, -1000, -1000, -1000, 246,
	3147, -1000, -1000, 215, -73, 3146, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 134332, -1000,
	-1000, -1000, 109185, -1000, 3324, -1000, 119933, -1000, 50003, -1000,
	-1000, 3500, 1736, 79243, 3447, -1000, -1000, -55, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2562, 2558, 1170, 2410, -1000,
	3227, 1409, 34807, 3283, -1000, -1000, -1000, -1000, -1000, 214,
	26495, -1000, -1000, -1000, -1000, -1000, -1000, 2220, 3142, 1477,
	-1000, 2405, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2202,
	3137, -1000, 1921, 3136, 2150, -1000, -1000, 1651, -1000, 3312,
	-1000, -1000, 2109, 3135, -33, -1000, -1000, 2254, -1000, -1000,
	-1000, -1000, 2036, -1000, 1345, 3134, -1000, 2749, 2749, 90543,
	3173, 63297, 61575, 73513, -48, -1000, -1000, -1000, -1000, -192,
	-1000, 24764, 134332, -1000, -1000, -1000, -1000, 1862, 134332, 857,
	-1000, -1000, 3133, -1000, 134332, 848, -1000, -1000, 3129, -1000,
	2984, -1000, -1000, 2469, 2468, -1000, -1000, 3724, -1000, -1000,
	3721, -1000, 3718, 3714, 3712, -1000, 1719, 2062, 3708, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 89979, 2363, -1000,
	-1000, 88847, 2977, -1000, 2466, 3446, -1000, 89413, 1040, -1000,
	997, 2465, -1000, 99021, 870, 2463, -1000, 3703, 3406, 2680,
	997, 2461, -1000, -1000, -1000, -1000, -1000, 963, -1000, 67281,
	-1000, 67281, -1000, 1693, -1000, 126137, -34, 96201, 3559, -1000,
	-81, -1000, -1000, -1000, 894, -1000, 60424, -1000, 60424, 101845,
	78679, 984, 729, 68977, 134130, -1000, 1011, -1000, -1000, 134332,
	-1000, -1000, -1000, -169, 2734, -1000, 78679, 62723, 134332, -1000,
	-1000, -1000, -1000, 134332, -1000, -1000, -1000, 78679, 88847, -1000,
	108619, 88283, -1000, -1000, 1433, 2603, -1000, -1000, -1000, 78679,
	1358, 78679, 78679, 78679, -1000, 108053, -1000, -1000, 2096, 1555,
	3311, 2093, 96201, -1000, 1863, -1000, -1000, -1000, 3342, 3125,
	119933, -1000, -1000, 2976, -1000, 72949, 98457, -1000, 97893, -1000,
	97329, -1000, 96201, -1000, 96201, -1000, 3701, 3700, 3699, -1000,
	-1000, 3698, -1000, 3697, 3333, -1000, 770, 44203, 134332, 3321,
	-1000, 3696, 2019, 2975, 134332, -1000, 3120, 1691, 1679, 119933,
	-1000, -1000, 119933, -1000, 119933, -1000, -1000, -1000, 1532, -1000,
	-1000, 2559, -1000, -1000, -1000, -1000, 96201, 96201, 96201, 96201,
	1663, -1000, 43623, -1000, -1000, 3024, 3695, 1659, -1000, 1852,
	-1000, 2920, 3347, -1000, 1424, 1817, -1000, -1000, 251, -1000,
	-1000, -55, -1000, 125573, -1000, 2592, -1000, 119933, -1000, 2577,
	2960, 2972, 1816, 2384, 2657, -1000, 43043, 2607, 53483, 2401,
	132, -1000, -1000, 132, 132, 34227, -1000, -1000, 34807, 882,
	71811, 71811, 26495, 1270, 50003, 50003, 50003, 50003, 50003, 50003,
	50003, 50003, 50003, 50003, 50003, 50003, 50003, 50003, 50003, 50003,
	50003, 50003, 50003, 50003, 50003, 50003, 50003, 50003, 50003, 50003,
	50003, 50003, 50003, 50003, 50003, 50003, 50003, 50003, 50003, 50003,
	2094, 50003, 1257, 50003, 50003, 50003, 50003, 1645, -1000, -1000,
	1944, 479, 2129, 654, -1000, -1000, -1000, 3540, 3540, 3540,
	621, 621, 621, 6715, 6715, 582, 3694, 796, -1000, 50003,
	-1000, 78, 59840, 50003, 27071, -1000, 416, 12484, 2604, -1000,
	411, 27680, -1000, -1000, -1000, 28874, 605, 42434, 50003, 1020,
	134332, -1000, -1000, 1479, 3561, 24183, 3006, 2810, 653, 820,
	818, 31878, 31269, 30660, 30051, 778, 754, 50003, 50003, 50003,
	50003, 50003, 50003, 50003, 50003, -1000, -1000, 3567, -1000, 3561,
	-1000, -1000, -1000, -1000, 3561, 1267, 1203, 3561, -1000, 3561,
	3561, 8887, 8887, 41854, 41274, 40694, 54063, 40114, 50003, 29471,
	39534, 38954, -1000, 119933, -45, 3498, 50003, 278, -1000, 132596,
	-1000, 278, 278, 652, -86, 134332, 2599, 2599, 58127, 2397,
	2280, 2280, 2280, -1000, 920, 19506, 920, 106361, 2288, 920,
	920, 208, 243, 410, 55803, 2425, 106361, 766, 648, -24,
	-26, -27, -1000, -1000, -29, -30, -1000, -1000, 96201, 647,
	27071, 26495, 206, 2050, -89, 2631, 2629, -1000, 2626, 2625,
	-1000, 2623, -1000, 1859, -92, 1256, 96201, 119933, 1292, 3693,
	-99, -1000, 6487, -94, -1000, 1305, 205, 3561, -1000, -1000,
	-1000, -1000, -1000, 3692, 3691, -1000, 1030, 646, 645, 919,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 644, 643,
	643, 643, -1000, 307, 641, 266, 640, 639, 635, -1000,
	-1000, -1000, -1000, -1000, 2917, 96201, 119933, 1283, 3690, -192,
	96765, -67, -1000, -1000, 119933, -1000, -1000, -1000, 3689, -1000,
	96201, -1000, -1000, 96201, 241, 3127, -1000, 96201, -1000, 96201,
	237, 3126, -1000, -1000, 119933, -1000, 96201, 96201, -1000, 119933,
	119933, 119933, 78679, 78679, 235, -1000, 96201, 882, -97, 1141,
	-55, -1000, -1000, -1000, -1000, -1000, 1382, -1000, 1839, -1000,
	-1000, -1000, -1000, -1000, -1000, 1467, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 896, -1000, -1000, -1000, -1000, -1000,
	-1000, 3554, 3546, -54, -1000, -1000, 26495, -1000, -59, 1625,
	1990, 1254, -1000, 81499, 2389, 3323, 3685, 2675, 3304, 1658,
	-1000, 1530, -1000, 3408, 86587, 3461, 3473, 1320, -1000, 2914,
	-1000, -1000, 941, 1629, 1802, 1251, 1249, 86587, 1921, -1000,
	71811, -1000, 2696, 3389, 1415, 1407, 1415, 1415, 1368, -1000,
	86587, 1799, 1248, 1245, 1244, -1000, -1000, 1975, 1968, -1000,
	-1000, 107489, -1000, 1243, 1242, 121061, 3513, 2223, 2239, 834,
	1965, -1000, -60, 3451, 3472, 1319, -1000, 2913, 1241, -1000,
	-1000, -1000, 3387, 96201, 26495, 1572, 1571, 1566, 1794, 1240,
	-46, -1000, 3457, 1238, 1237, -1000, 1059, 6010, 3257, -1000,
	78679, 1059, 1059, 2147, 3123, 2710, 1674, -1000, 2732, 859,
	2728, -1000, -1000, -1000, 859, -48, 73513, 119933, 203, -1000,
	78, 50003, 50003, 78, 50003, 78, 3437, 3122, 3117, -1000,
	-1000, -1000, -1000, -1000, 3683, 1991, 2581, -1000, -1000, 634,
	2459, 2912, 119933, 2650, -50, 96201, -1000, 72385, 3116, 74077,
	1921, 2458, -1000, -1000, 87717, -1000, 3112, 441, 2457, -1000,
	665, 3682, 3102, -1000, 125009, -1000, 3324, 1279, 3099, 1081,
	414, 3497, -1000, 414, 67847, -1000, 119933, -1000, -34, 1009,
	80371, -100, -105, 409, -1000, 106925, 119933, 1080, 80935, 119933,
	3271, 2005, 1999, 992, 61575, -1000, 61575, -111, -169, 2726,
	1485, 984, 984, 859, -1000, 859, -1000, 96201, 2970, -1000,
	-1000, 78679, 984, 984, 984, -1000, -1000, -1000, -1000, 3681,
	3680, 3679, 3676, -1000, -1000, 994, 96201, 119933, 96201, -1000,
	-1000, 1657, -1000, 201, -1000, 119933, -1000, 119933, 119933, 96201,
	-1000, 994, 119933, 994, 119933, 994, 119933, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 78, -1000, -1000, 134332, -1000, 50003,
	-1000, -1000, 1521, 3675, 1692, -1000, 2969, -1000, 2961, -1000,
	9, -1000, -1000, 1912, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3673, 134332, -1000, 2034, -1000, -1000, -1000, -1000, 96201,
	96201, 96201, 96201, 119933, 3254, -1000, 119933, 3249, 96201, -1000,
	-1000, 86587, -1000, 2577, 2960, -1000, -1000, -1000, -1000, -1000,
	-1000, 1410, 2339, -1000, 2606, -1000, 1559, -1000, -1000, -1000,
	134332, 54643, -1000, -1000, 134332, 1882, -1000, 52903, 52323, -1000,
	-1000, 1759, 96201, 2611, -1000, 2611, -124, -1000, 132394, 2602,
	96201, -54, 34807, -1000, -1000, -1000, -1000, -1000, 939, 707,
	707, 1383, 1383, 1383, 1383, 3441, 6462, 7934, 6214, 9005,
	9005, 6837, 6837, 6837, 6837, 6837, 9005, 8288, 621, 621,
	8288, 8288, 8288, 8288, 8288, 621, 621, 621, 9005, 9005,
	9005, 621, 6715, 7644, 9939, 50003, 50003, 1236, 1933, 479,
	9902, 50003, 11639, 11639, 11639, 11639, -1000, 2163, -1000, -1000,
	-1000, -1000, 2905, 630, 54063, 54063, -1000, -1000, -1000, -1000,
	28277, 50003, -1000, -1000, -1000, -1000, 38345, -1000, -1000, 15794,
	-325, 407, -1000, 195, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 406, -106, 74,
	-1000, 50003, 50003, 50003, 405, -1000, 194, 50003, 119933, -1000,
	128396, 764, -110, -1000, -113, 1443, -1000, 50003, -1000, -1000,
	1234, -1000, 1232, 1228, 1227, -1000, 629, 392, -1000, 192,
	-1000, 2274, 628, 627, 50003, -1000, -1000, -1000, -1000, -1000,
	131522, -1000, -1000, 131481, -1000, -1000, 131253, -1000, -1000, 130870,
	-1000, -1000, -1000, -1000, -1000, 133862, 18866, 18597, 18151, 11435,
	17684, 17387, -118, 388, -119, 383, 935, 934, 380, 374,
	373, -126, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -127, 371, -1000, 2899, -106, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 370, -1000, 365,
	-1000, 133650, -106, 364, 5596, -1000, 54063, 54063, 54063, 54063,
	-1000, 361, -1000, 132126, -1000, 133464, 37765, 37765, 37765, 359,
	133262, 50003, -106, -128, -1000, -129, -1000, -1000, 505, -135,
	1016, 37156, 56965, 26495, -1000, 1016, 1016, 50003, -1000, 50003,
	2612, -1000, -1000, -1000, -1000, 2609, 1860, 2599, 58127, -1000,
	-1000, -1000, -1000, 106361, -1000, 3559, 2876, -1000, 106361, -1000,
	-1000, 119933, 441, -1000, 106361, 106361, 26495, 920, -1000, 920,
	106361, 735, -1000, -1000, -1000, -1000, -1000, 358, 66151, 74,
	187, 26495, 997, -1000, -1000, 2754, 2754, 2754, 2754, 2754,
	-1000, -1000, 119933, 1218, -51, -174, 2716, -1000, 3519, -1000,
	2142, -1000, 71811, -1000, 794, 1067, 26495, -1000, -1000, -1000,
	626, -1000, 3561, 3561, -1000, 3561, 119933, 2894, 229, 2711,
	-1000, 169, 74077, 3665, -1000, -1000, 241, -1000, 96201, 241,
	241, -1000, 96201, 96201, 2301, -1000, 249, -1000, 246, -1000,
	-1000, -73, -1000, 1010, 34807, -1000, 1382, -1000, -1000, 1568,
	-1000, 2051, -1000, 1174, -1000, -1000, -1000, -1000, 34807, -1000,
	2281, 119933, 119933, 96201, -1000, 119933, -1000, 2195, 74077, -1000,
	2456, 124445, 2451, 71811, 119933, -1000, -1000, 624, 971, 2601,
	2600, 1078, 119933, 119933, 2598, 123881, 123317, -1000, 3663, 119933,
	2188, 50003, 3384, 2273, 2040, 78, 78, -1000, 78, 78,
	78, -1000, 622, 1342, 96201, 96201, 119933, 74077, 96201, 2130,
	-1000, -1000, -1000, -1000, -1000, 87151, -1000, -1000, 3566, 3563,
	-1000, 1415, -1000, -1000, -1000, 1415, 1921, 2063, 119933, 74077,
	96201, 74077, 122753, 122189, -1000, -1000, 1793, 119933, -1000, -1000,
	-1000, -1000, -1000, 1464, -1000, 834, 2152, 78, 78, -1000,
	78, 78, 78, 619, 26495, 2008, -1000, 2983, 119933, 3594,
	121625, 3592, 119933, 119933, 119933, 74077, 3343, 119933, 119933, 74077,
	-1000, 121061, 6010, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2156, 75225,
	1087, 119933, 1345, -1000, -1000, 1791, 1211, 1208, 86587, 2136,
	1788, 1867, 119933, 61575, 990, 61575, 2688, -1000, -1000, 23602,
	-1000, 134332, 134332, -1000, 134332, -1000, 72385, 78679, 119933, -1000,
	1035, 119933, 80935, 968, 3098, 66715, -192, 984, 78679, 96201,
	-50, 2650, 119933, -1000, -1000, -1000, -1000, -1000, 1921, 3095,
	441, 2455, -1000, 78679, 3496, 3093, 610, 3662, 3661, -1000,
	96201, 2362, 2453, -1000, -1000, 120497, 3172, 834, 119933, 1016,
	58127, 1987, -1000, 64447, 1054, 119933, 1902, 145, -1000, -1000,
	-1000, -8, 119933, -1000, 787, -1000, -1000, 1009, 1009, 984,
	-193, 607, -1000, 895, 893, 62149, 78679, -136, -1000, -1000,
	-1000, -1000, 2451, 96201, 119933, 1297, 2679, 119933, -144, -1000,
	186, 606, 891, 875, -1000, 2660, -1000, -169, -1000, 992,
	61575, 2884, 2875, -1000, -1000, 1008, -1000, 1302, 984, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-35, 1844, 119933, -192, -192, -66, -51, -1000, 994, -1000,
	994, -1000, 994, -1000, 134332, -1000, -1000, -1000, 1660, 1619,
	119933, -1000, -1000, 119933, -1000, 26495, 119933, 96201, 26495, 96201,
	2958, 2944, -1000, -1000, -1000, 119933, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1103, -1000, 1882, 2338, -1000, 605, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2537, -1000,
	-52, 34227, 922, -1000, -1000, 96201, -39, -54, 50003, 50003,
	9543, 8239, 50003, 54063, 54063, -1000, 50003, 6857, -1000, -1000,
	-1000, -1000, -1000, 2867, 604, 50003, 71811, 5029, 585, -1000,
	354, 16765, 8288, -1000, 50003, -1000, 5209, -1000, 353, 36576,
	-1000, 132782, -53, -145, -1000, 20100, -106, -147, -1000, -1000,
	785, -1000, 3076, -1000, 50003, 132994, 2505, 2053, 1911, 1703,
	3561, 3591, 23021, -1000, 68412, 1017, 2296, 130807, -1000, -1000,
	-1000, -1000, 71811, 71811, 50003, 50003, -1000, 50003, 50003, 50003,
	-1000, -1000, -1000, 3561, 925, -1000, -1000, -1000, 925, -1000,
	-1000, 1415, -1000, 1415, -1000, 50003, -1000, -1000, 2862, 50003,
	-1000, 71811, 71811, 54063, 54063, 54063, 54063, 54063, 54063, 54063,
	54063, 54063, 54063, 54063, 54063, 54063, 54063, 54063, 54063, 54063,
	54063, 54063, 54063, 2627, 54063, 3536, 3536, 3536, 1025, -1000,
	2940, 2862, 50003, 50003, 71811, 351, 350, 346, -1000, 50003,
	-106, -1000, -1000, 464, 603, -1000, 2524, -1000, 2809, -1000,
	50003, -1000, -134, -1000, 2425, -1000, -1000, 2809, 2809, -150,
	134332, 58127, 58127, -1000, 601, 50003, 2597, -1000, -1000, 761,
	-323, -1000, 871, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	441, -1000, -1000, -1000, 184, 106361, 106361, 760, -1000, -153,
	-1000, -1000, -155, -1000, 3495, 344, 26495, -1000, 1016, 2644,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -192, 119933, 119933,
	1783, 2325, 3590, -1000, 3562, 783, 758, 183, 3561, 339,
	328, 326, -192, 119933, 119933, 1782, 119933, -1000, -1000, -1000,
	241, -1000, -1000, -1000, 237, -1000, -1000, -1000, -1000, 2693,
	-1000, -55, -1000, -1000, -1000, 50003, -1000, -1000, 3317, 1202,
	1201, -1000, -1000, -1000, 2859, -1000, 3072, -1000, 2448, -1000,
	1058, -1000, 1919, -1000, 50003, 598, 2672, 595, 594, 3660,
	2118, 3657, 1079, 3071, 2301, 3068, 2301, -1000, -1000, -1000,
	948, -1000, 134332, 2273, -1000, 572, 570, -1000, -59, 1612,
	1966, 1197, 1007, -1000, -1000, -1000, -1000, 50003, 50003, 105797,
	-1000, 467, 3312, -42, -1000, -1000, -1000, 1767, 1196, 1191,
	-1000, -1000, -1000, -1000, 1921, 1725, 1190, 1187, -1000, -1000,
	-1000, -1000, -1000, 2446, -1000, -1000, 3066, 1006, -1000, 3020,
	3019, 929, 119933, -1000, 1005, -1000, -1000, -1000, -1000, 50003,
	-1000, -60, 1186, 3450, 2442, 96201, -1000, 2301, 3056, 1185,
	-1000, 1184, -1000, -1000, -1000, 3453, 3442, 1198, -1000, -1000,
	-1000, 78679, -1000, -1000, 74651, -1000, -1000, 1059, 119933, 74077,
	96201, 2027, -1000, -1000, 85459, 86023, 119933, 2710, -192, 859,
	-1000, 2485, 859, 990, 2861, -1000, 2640, -1000, 1002, 96201,
	3656, 325, -160, -62, 71811, 3494, -1000, 2377, 600, 96201,
	926, -1000, 3559, -1000, -1000, -1000, 1001, -1000, 3445, 96201,
	3493, 3054, 997, 78, 96201, 3571, -1000, -1000, 3490, 96201,
	3047, 2359, 2439, 2572, 834, 79807, 997, 2293, -71, -1000,
	1902, 35967, 3308, -161, -1000, -1000, -1000, 1016, 67847, 58127,
	50003, 3655, -167, -1000, -1000, -1000, -1000, -1000, 103541, 103541,
	78679, 78679, 78679, 984, 119933, 119933, 80935, -1000, -1000, 562,
	119933, 119933, 558, -1000, 119933, 119933, 3654, 78679, 78679, 78679,
	-63, 546, -1000, 869, 867, 862, -1000, -1000, -1000, -1000,
	-1000, -1000, 861, 992, -1000, -169, 61575, 78, -1000, 2319,
	96201, -1000, 22440, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	994, -192, -1000, -1000, 2194, 2395, 2194, 1889, 1885, -1000,
	-1000, 2333, -1000, -1000, -1000, -1000, 2668, 3310, 26495, 3421,
	11639, 50003, 50003, 6234, 560, 519, 11639, 50003, 50003, 71811,
	11702, -172, 50003, 50003, -1000, 50003, 742, 134332, -1000, 3588,
	50003, 324, 321, -1000, -1000, -1000, 3560, -1000, -1000, -1000,
	134332, 50003, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 320,
	-1000, 178, -1000, -1000, -1000, 127829, -1000, 50003, 315, 3379,
	-1000, 312, 310, 14649, 10807, 130424, 130196, 130155, 308, -1000,
	-1000, 304, 301, 134332, 2940, 134332, -1000, -1000, 795, 795,
	1400, 1400, 1400, 1400, 3536, 494, 343, 459, 544, 544,
	544, 597, 1025, 1025, 544, 544, 544, 1025, 2855, 2595,
	545, 6970, -1000, -1000, 134332, 134332, 300, -1000, -1000, -1000,
	-106, 298, 464, -1000, 2805, 3378, 134332, -1000, 58127, 2805,
	2805, -1000, -1000, 1860, 119933, 134332, 58127, -1000, 2876, -1000,
	20692, -1000, 26495, -1000, -1000, -1000, -1000, 3559, -1000, 66151,
	-1000, 528, -1000, 75, -1000, 2644, -1000, 860, -1000, -1000,
	78679, 78679, 3651, 3649, 3648, 3587, 3586, 2323, 3584, -192,
	-257, 119933, -1000, -1000, 739, 3645, 777, 26495, 294, -1000,
	-1000, -1000, -192, -192, 119933, -192, -1000, -1000, -1000, 3269,
	134332, 119933, 119933, 1427, 105233, 119933, 3045, -1000, 2237, -1000,
	1078, 129763, 58701, -1000, 58701, 119933, -1000, -1000, -1000, -1000,
	1983, 1523, 3643, 1130, -1000, 3344, 119933, -1000, 119933, -1000,
	-1000, -1000, 119933, 119933, 96201, 119933, -1000, 74077, 3032, -173,
	134332, -64, -1000, 856, -1000, 1435, -1000, 21859, 119933, 74077,
	96201, 119933, 74077, 96201, 3044, 119933, 2261, -1000, -1000, 3017,
	-1000, 3029, -175, 26495, -1000, 3583, 3582, 3043, 3348, -1000,
	119933, 3579, 119933, 96201, 3268, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1716, 1180, 1177, 2357, -65, 2353, 2322, -66,
	2136, 990, -68, 524, -1000, 855, -1000, -1000, 854, -1000,
	990, -1000, 78679, 61575, 3642, 441, -1000, 2674, -1000, 101279,
	2279, 78, -1000, 3641, 104105, 523, -1000, 2318, -1000, 738,
	-1000, 2549, 74077, 1921, 78, 96201, -1000, -1000, 441, 293,
	-69, -1000, 3096, 1069, 26495, 96201, 3042, 2576, 834, 79807,
	-1000, 1279, 2657, -1000, -70, -1000, 659, 78, 2293, -1000,
	-71, 134332, -1000, 852, -1000, -180, -1000, -1000, 275, -1000,
	3266, 3262, -1000, 2775, 58701, 522, 521, 119933, 3260, -1000,
	-1000, -181, -1000, -1000, 2702, 2702, 78679, 61575, 78679, 78679,
	-1000, 992, 859, -1000, 2523, -1000, -1000, -1000, -1000, -1000,
	26495, 1562, -1000, 520, 518, -1000, -1000, -1000, -1000, 3310,
	11639, 11639, 50003, 50003, 50003, 11639, 11702, -186, -1000, 11639,
	11639, -106, -1000, -1000, 132782, -1000, -1000, -1000, 134332, -1000,
	21278, 2205, -1000, 129722, -1000, 34227, -1000, -1000, 50003, 50003,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54063, 2854,
	517, 71811, -1000, -1000, 261, 1014, 50003, 51743, 2425, 1014,
	1014, -1000, -194, -1000, -1000, -1000, 3559, 75, -1000, -1000,
	3637, 26495, -1000, 78679, -1000, -1000, -1000, -1000, -1000, -1000,
	3636, 3633, 2429, 3629, 3623, 3616, -212, 599, -1000, 3615,
	-1000, -1000, 120, -1000, -1000, -1000, 2698, 3489, -1000, 1962,
	-1000, 119933, -1000, 119933, -1000, 26495, 119933, 2819, 1338, -1000,
	971, 2596, 516, 54063, 1102, 96201, 883, 2787, 2782, -1000,
	3480, 3375, 2771, -200, -1000, 119933, 50003, 119933, -202, -203,
	2421, -1000, -1000, 1099, 1303, 50003, 1090, -1000, -1000, -1000,
	71811, 506, 2301, 2301, -210, -211, -1000, -1000, -1000, 50003,
	1176, 119933, 35387, -1000, 3614, 3312, -1000, -1000, -1000, -1000,
	-1000, -1000, 119933, -1000, 119933, -1000, 50003, 1175, -1000, -1000,
	-1000, 3578, 2301, 26495, 2301, -1000, 2301, 3348, 1128, 119933,
	74077, 96201, 1557, 1557, 2902, -1000, -1000, -1000, 2454, 2454,
	78679, 61575, -1000, -73, 990, -1000, 3486, 2670, 3612, -1000,
	-1000, -1000, -1000, 2593, -1000, -1000, 119933, 2591, 985, -1000,
	-213, -1000, 850, 845, 80935, 968, 969, -1000, -74, 504,
	-1000, 843, -1000, -1000, -1000, -1000, 441, 3484, -1000, 3576,
	491, 483, 119933, 2351, 481, 26495, 3306, 834, 79807, -1000,
	3172, 1902, -1000, 2435, 119933, 3303, -1000, 2657, 479, -1000,
	984, 478, 477, 2230, 2230, -216, 58701, 58701, -218, 476,
	984, -1000, -219, -1000, -1000, -1000, -1000, -1000, -1000, -75,
	-1000, 853, 849, -1000, -1000, 96201, 96201, 50003, 50003, -1000,
	11639, 11639, 11639, -1000, 260, -1000, -1000, 2293, 3374, -1000,
	-77, 129494, 129111, 8359, 54063, 71811, -221, -1000, -1000, 119933,
	134332, -84, -1000, 134332, 475, 474, 403, -1000, -1000, -1000,
	561, -1000, -1000, -1000, -1000, 3608, -1000, -1000, -1000, 119933,
	3607, -1000, 119933, 104669, 119933, -1000, -1000, 1392, -1000, -1000,
	-1000, 119933, 2438, -1000, -1000, -1000, 1071, 50003, 6970, 54063,
	472, 50003, -1000, 469, 466, 3482, 3232, -1000, 2658, 2882,
	1915, 58701, -1000, 3310, -1000, 129048, -1000, 1063, 1979, -1000,
	-1000, -1000, -1000, 134332, 54063, 3348, 58701, -1000, -1000, 465,
	462, 134332, 460, 841, 2853, -1000, -1000, -1000, -1000, -1000,
	134332, 456, 3450, -1000, -1000, -1000, -1000, 2301, 96201, -1000,
	-1000, -1000, 1165, -1000, -1000, -1000, -1000, 3606, 3605, 2843,
	85459, -1000, -227, -1000, -1000, 1992, 78, 2177, 2695, -1000,
	2279, 446, -1000, -1000, 2343, 2687, -1000, 104105, 34807, 34807,
	259, 3477, 969, -1000, 3555, -1000, 3239, 3239, 50003, 3474,
	78, -1000, 3571, 58701, -1000, 96201, 58701, 2350, 2081, 2556,
	79807, -1000, 2572, -1000, -1000, -228, 119933, 1902, -1000, -1000,
	78679, 78679, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1063, -229, -230, -1000, 78679, -1000, -1000,
	2523, -1000, 119933, -1000, 119933, -1000, -1000, -235, -236, -1000,
	2079, 50003, 34227, -1000, -1000, 8359, -237, -1000, -91, -1000,
	3471, 51743, 3604, 3603, 3602, -1000, -1000, -192, -1000, -192,
	-1000, 1953, -1000, -1000, -1000, 3041, 2797, 128665, 6970, 2526,
	119933, 128437, 1921, 1921, -1000, 3470, 2870, -1000, -1000, 2670,
	445, -1000, -1000, -1000, -1000, 922, 119933, 2670, 2796, 96201,
	6970, 1070, -238, 2194, 2194, 50003, 33647, 2253, 50003, -1000,
	-1000, 3348, 119933, -1000, -1000, 119933, 2349, -1000, 2832, 3548,
	-1000, 968, -1000, 2243, 119933, -1000, 3338, -1000, 3259, -1000,
	-1000, -1000, 2674, 78, -1000, -1000, -1000, -243, 134332, 78,
	-1000, 256, -245, 1069, -248, 96201, 1971, -1000, 834, -1000,
	2576, 1016, -1000, -1000, -250, -256, 1915, 1063, 2152, -261,
	-1000, -262, -267, -1000, -1000, 232, 51163, 51163, 51163, -106,
	-124, -1000, 119933, 443, -1000, -1000, -1000, -1000, -1000, 3014,
	989, -1000, 868, 1883, 224, 1097, 122, -6, -1000, -1000,
	-1000, 2152, 119933, -1000, -1000, -1000, 988, 441, -1000, 50003,
	1063, -268, -1000, 1053, -269, -1000, 1052, -270, -1000, 2839,
	-1000, -278, 2301, -275, 235, 1557, 986, 3434, -1000, -1000,
	-1000, 2343, 96201, -281, -1000, -1000, 2450, -1000, 2670, 985,
	-1000, -1000, -1000, 1063, 440, 1915, 439, 1489, 834, -1000,
	-1000, 1415, 3306, 3140, 984, 984, 2670, 1915, 982, -1000,
	984, -1000, -1000, -1000, 3075, -1000, 55223, 2310, 1884, 131914,
	3075, 3075, -1000, -1000, 119933, 3416, -1000, 900, 898, 1505,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2771, -283,
	3414, 2526, 134332, 2670, -1000, 2194, 2692, -1000, 2194, 2836,
	-1000, 2238, -1000, -1000, -1000, 2816, -1000, 2834, -1000, 1807,
	3535, 2541, 433, -1000, 119933, 1846, 1837, 3601, 2177, 2343,
	1915, 58701, 2670, 58701, 2138, -1000, 119933, -1000, 2081, 1337,
	-1000, -1000, 2152, 2670, 1016, 431, -1000, -1000, 1834, 3478,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 825, -1000,
	3186, -1000, 1073, 2196, 2196, 1016, -1000, 819, 868, -1000,
	-1000, 425, -1000, 422, -1000, 2302, 119933, 2312, -1000, -1000,
	-1000, -1000, 119933, -1000, -1000, 3600, -1000, 968, -1000, 2670,
	-284, 2152, -286, -1000, -1000, -1000, -192, 1971, -1000, 1591,
	982, 2152, -1000, 1879, -1000, -1000, 2284, 50583, 50003, -1000,
	3523, -1000, -1000, 2641, -1000, -1000, 50003, 2771, 50003, 50003,
	-1000, 235, 65577, -289, -1000, 2343, 2152, 1063, 982, 1915,
	1489, 67847, 1016, 982, -1000, -1000, -1000, 134332, -1000, -1000,
	-1000, 134332, -1000, -292, -302, -1000, -193, 103541, 2286, 2541,
	982, 1915, 1016, 2670, 2138, -276, -1000, 1016, 2152, 1152,
	-307, -1000, -1000, -1000, -1000, 1016, 2670, -1000, 2152, -1000,
	-1000, -1000, -1000, -1000, 421, -1000, -1000, 2152, 982, 50003,
	982, 1016, -315, 1016, -1000, 2152, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4411, 4410, 4409, 4394, 4393, 4381, 4375, 4372, 4371,
	4370, 4369, 4368, 149, 4367, 4366, 4365, 4364, 4363, 4362,
	4359, 4355, 4352, 4351, 4350, 4349, 4348, 4347, 4343, 4342,
	4337, 4331, 4328, 4326, 4325, 4324, 4321, 4320, 4319, 4317,
	4316, 4314, 4312, 4311, 4310, 4309, 4308, 4307, 4306, 4305,
	4304, 4302, 4297, 4296, 4295, 4290, 4289, 4288, 4287, 4286,
	4285, 4284, 4283, 4279, 4277, 4276, 4273, 57, 4272, 4271,
	4268, 4266, 4265, 4263, 4259, 4258, 4257, 4252, 4251, 4248,
	4245, 4244, 4243, 4242, 4240, 4239, 4238, 4237, 66, 4235,
	284, 4231, 4226, 4225, 4224, 4223, 4222, 4221, 4220, 4217,
	4215, 4213, 4212, 279, 4211, 132, 165, 4210, 4209, 3798,
	4205, 4204, 276, 4203, 4202, 4201, 4200, 289, 4198, 4195,
	4194, 4193, 4190, 4188, 4187, 4186, 4185, 4180, 4179, 128,
	203, 4178, 4177, 161, 4176, 4175, 4173, 4171, 4170, 4169,
	4166, 4165, 4164, 4163, 4161, 260, 171, 4160, 274, 4156,
	4155, 4154, 4153, 4150, 4148, 4147, 4146, 4145, 4144, 4143,
	4141, 4138, 4137, 4134, 4133, 4132, 4129, 4127, 4126, 4124,
	4116, 4112, 4110, 4105, 4104, 4103, 4102, 4100, 4096, 4094,
	4091, 4082, 4080, 4077, 4076, 4074, 4073, 4071, 250, 220,
	187, 4070, 4069, 273, 269, 4068, 4067, 4065, 4064, 4062,
	134, 9, 41, 4061, 4059, 117, 88, 86, 100, 99,
	95, 4058, 111, 4057, 139, 68, 4055, 19, 2, 270,
	244, 12437, 242, 4049, 4046, 4043, 249, 200, 4042, 246,
	4041, 4040, 4039, 4038, 4037, 4036, 72, 53, 186, 181,
	180, 170, 26, 4030, 164, 107, 83, 62, 44, 15,
	81, 216, 20, 7, 263, 4029, 262, 12, 144, 4,
	29, 4028, 4027, 4026, 4025, 3573, 136, 4024, 265, 245,
	176, 4022, 4018, 4017, 738, 4016, 4015, 45, 4012, 197,
	78, 126, 73, 130, 4011, 158, 169, 31, 4009, 172,
	56, 4007, 166, 96, 87, 11565, 6635, 4005, 4004, 115,
	76, 131, 1620, 202, 196, 201, 163, 173, 175, 127,
	214, 213, 183, 174, 3999, 254, 3998, 3478, 79, 185,
	157, 6053, 3997, 3994, 3993, 91, 206, 109, 3992, 3991,
	71, 24, 5, 3, 1, 145, 33, 34, 13, 3990,
	22, 120, 52, 23, 3988, 27, 3984, 3983, 3981, 3980,
	3978, 47, 167, 3977, 3973, 286, 3969, 103, 55, 43,
	3967, 817, 225, 3962, 233, 148, 3961, 3959, 259, 209,
	182, 3956, 80, 236, 3954, 3953, 3952, 3951, 3950, 140,
	10, 138, 3949, 3947, 151, 3946, 54, 248, 205, 3945,
	61, 3942, 3941, 188, 51, 141, 272, 137, 230, 116,
	235, 190, 237, 3940, 3938, 3937, 232, 3936, 3935, 231,
	184, 3934, 3933, 251, 288, 89, 49, 77, 239, 84,
	198, 162, 3932, 211, 3931, 3930, 287, 191, 223, 6,
	17, 92, 125, 3929, 8, 241, 160, 224, 113, 3928,
	7831, 1795, 2693, 3927, 3924, 154, 121, 82, 114, 159,
	267, 104, 3922, 3920, 2756, 3919, 3918, 3917, 3916, 192,
	3915, 3914, 3913, 155, 152, 210, 3912, 93, 69, 50,
	21, 122, 283, 268, 112, 234, 177, 255, 3911, 3910,
	3909, 195, 3908, 98, 106, 179, 208, 252, 60, 3907,
	119, 3906, 153, 2223, 64, 156, 3905, 229, 3904, 3903,
	3901, 3900, 3899, 3897, 3896, 2132, 243, 3895, 3894, 3892,
	36, 199, 3891, 264, 147, 228, 108, 65, 194, 102,
	2647, 3890, 256, 118, 58, 266, 135, 3888, 2550, 59,
	3887, 0, 14972, 9093, 12589, 14256, 3886, 4899, 3885, 3884,
	3883, 218, 150, 3880, 3879, 3878, 97, 3877, 85, 3876,
	3875, 70, 3874, 25, 18, 16, 30, 28, 638, 620,
	3873, 3872, 32, 142, 123, 3868, 285, 238, 3867, 3866,
	3865, 3864, 94, 3862, 39, 3860, 40, 3859, 3856, 48,
	14, 42, 3855, 3853, 221, 3852, 227, 257, 3851, 168,
	3848, 74, 143, 3846, 3845, 3843, 67, 63, 261, 90,
	3842, 282, 3841, 207, 3840, 3839, 3839, 46, 3838, 3837,
	247, 110, 105, 3833, 253, 146, 38, 215, 189, 219,
	3832, 3831, 178, 3830, 3828, 3827, 275, 3826, 3825, 37,
	3823, 3822, 3821, 11, 3820, 3819, 212, 3203, 3809, 3801,
	35, 3800, 204,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 617, 617, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 621, 621, 622, 622,
	622, 622, 622, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 606, 606, 607,
	607, 605, 604, 604, 604, 608, 608, 608, 204, 204,
	204, 128, 128, 128, 128, 128, 128, 129, 129, 130,
	130, 208, 208, 208, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 214, 16, 16, 16,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 108,
	108, 528, 528, 529, 529, 199, 199, 200, 200, 200,
	200, 201, 201, 202, 202, 202, 70, 70, 211, 211,
	213, 213, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 58, 58, 58, 58,
	58, 58, 58, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 61,
	68, 68, 68, 68, 68, 68, 190, 190, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 76, 76, 76, 76, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 624, 624, 625, 625, 626, 626,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 85, 85, 353, 353,
	316, 316, 86, 86, 86, 87, 87, 88, 88, 72,
	72, 587, 587, 369, 369, 485, 485, 73, 595, 595,
	595, 597, 597, 596, 596, 90, 90, 391, 391, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 100, 100, 100, 100,
	100, 101, 101, 101, 98, 98, 98, 95, 95, 95,
	94, 94, 94, 99, 99, 99, 586, 305, 305, 97,
	97, 97, 96, 96, 96, 370, 370, 102, 102, 102,
	102, 317, 103, 103, 103, 103, 103, 103, 103, 103,
	106, 106, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 487, 487, 104, 104, 104,
	452, 452, 109, 109, 109, 407, 407, 110, 110, 110,
	110, 110, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 131, 131, 131, 131, 131, 131, 131, 131, 591,
	591, 362, 362, 268, 268, 268, 268, 121, 121, 121,
	121, 122, 122, 122, 123, 123, 195, 195, 138, 138,
	138, 138, 137, 137, 137, 137, 137, 137, 137, 137,
	62, 62, 62, 63, 63, 64, 64, 65, 65, 66,
	66, 67, 67, 67, 67, 67, 141, 141, 618, 618,
	143, 140, 140, 140, 140, 140, 140, 140, 139, 139,
	142, 142, 142, 142, 144, 146, 146, 146, 146, 146,
	145, 145, 145, 145, 147, 147, 519, 519, 378, 378,
	517, 517, 538, 538, 518, 518, 323, 323, 323, 323,
	323, 324, 324, 324, 527, 527, 527, 527, 527, 527,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 196, 196, 197, 198, 198, 198, 198,
	198, 173, 173, 173, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 176, 176, 176, 160, 160,
	149, 149, 149, 149, 149, 149, 149, 154, 154, 154,
	154, 154, 154, 154, 154, 150, 150, 162, 162, 162,
	162, 162, 155, 155, 156, 156, 156, 157, 157, 157,
	157, 183, 183, 159, 159, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 151, 151, 151, 151, 164, 164,
	164, 164, 414, 414, 414, 188, 188, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 186, 186, 186, 186, 186, 186, 609,
	609, 610, 610, 610, 180, 180, 180, 180, 180, 180,
	466, 466, 174, 174, 174, 174, 179, 179, 179, 179,
	182, 182, 182, 182, 397, 397, 171, 171, 171, 172,
	172, 172, 177, 177, 178, 354, 354, 175, 175, 181,
	181, 181, 181, 152, 152, 152, 152, 152, 152, 152,
	153, 153, 153, 153, 184, 184, 170, 170, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 628,
	628, 166, 166, 166, 165, 165, 165, 165, 168, 168,
	169, 169, 169, 169, 169, 169, 167, 158, 187, 588,
	588, 584, 584, 584, 584, 584, 584, 584, 584, 585,
	585, 585, 585, 590, 590, 114, 114, 114, 114, 114,
	124, 124, 124, 124, 124, 115, 115, 115, 115, 115,
	115, 115, 117, 117, 116, 116, 116, 116, 80, 80,
	80, 80, 80, 15, 15, 15, 81, 81, 259, 259,
	217, 217, 217, 342, 342, 218, 218, 331, 331, 331,
	331, 215, 215, 216, 216, 82, 82, 629, 629, 629,
	601, 601, 601, 602, 602, 602, 602, 602, 602, 325,
	325, 326, 326, 432, 432, 432, 432, 432, 329, 329,
	329, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	332, 332, 243, 243, 243, 340, 341, 341, 333, 333,
	339, 338, 338, 337, 337, 336, 336, 334, 335, 335,
	335, 344, 344, 343, 346, 346, 345, 431, 547, 547,
	549, 549, 549, 549, 549, 549, 549, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 415, 415, 630, 630, 631, 632,
	545, 545, 545, 546, 541, 541, 542, 542, 542, 542,
	542, 327, 327, 328, 328, 328, 328, 543, 544, 360,
	360, 470, 548, 548, 550, 550, 552, 633, 633, 633,
	633, 633, 633, 634, 634, 634, 430, 430, 429, 429,
	351, 351, 553, 553, 553, 553, 554, 554, 554, 554,
	554, 557, 556, 555, 555, 555, 555, 555, 84, 84,
	84, 394, 394, 393, 393, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	192, 192, 271, 271, 271, 78, 78, 78, 12, 12,
	12, 12, 12, 12, 12, 286, 286, 13, 13, 13,
	13, 603, 603, 603, 83, 83, 83, 83, 83, 83,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 593, 593, 592, 592, 272, 272,
	636, 636, 89, 89, 89, 89, 89, 89, 89, 89,
	488, 488, 489, 489, 77, 77, 77, 77, 77, 416,
	416, 413, 413, 412, 412, 359, 359, 468, 468, 468,
	469, 276, 276, 277, 277, 236, 236, 236, 31, 30,
	21, 21, 26, 26, 27, 27, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 28, 28, 49, 49, 49,
	49, 50, 50, 50, 50, 53, 53, 54, 54, 48,
	48, 48, 48, 51, 51, 44, 44, 55, 55, 55,
	55, 55, 611, 613, 613, 612, 612, 616, 616, 616,
	616, 616, 616, 614, 614, 615, 615, 619, 619, 620,
	620, 120, 120, 125, 125, 125, 125, 125, 126, 126,
	126, 126, 127, 127, 127, 127, 136, 136, 191, 191,
	191, 191, 191, 191, 191, 57, 57, 57, 57, 69,
	69, 69, 69, 134, 638, 638, 638, 135, 135, 135,
	637, 637, 269, 269, 426, 426, 427, 427, 639, 639,
	428, 428, 428, 428, 428, 262, 261, 263, 263, 264,
	264, 75, 75, 75, 252, 252, 251, 253, 253, 254,
	254, 249, 249, 530, 530, 256, 256, 256, 257, 257,
	245, 245, 246, 246, 247, 247, 248, 248, 260, 260,
	640, 640, 112, 112, 112, 194, 194, 315, 315, 315,
	423, 423, 423, 352, 352, 283, 283, 425, 425, 425,
	425, 390, 390, 390, 193, 193, 367, 367, 380, 380,
	381, 381, 482, 482, 382, 118, 118, 119, 119, 133,
	133, 221, 221, 219, 219, 219, 219, 219, 219, 219,
	219, 226, 226, 227, 227, 228, 228, 229, 230, 230,
	230, 230, 371, 371, 231, 231, 231, 220, 220, 220,
	222, 222, 222, 222, 222, 222, 222, 225, 225, 225,
	225, 232, 232, 232, 224, 224, 564, 564, 564, 566,
	566, 568, 568, 567, 567, 563, 563, 565, 565, 635,
	635, 396, 396, 396, 349, 350, 347, 347, 348, 348,
	357, 357, 355, 356, 356, 358, 358, 467, 467, 467,
	237, 237, 237, 387, 387, 387, 387, 388, 388, 419,
	419, 417, 417, 417, 417, 418, 418, 420, 420, 420,
	421, 421, 422, 422, 384, 384, 385, 385, 386, 386,
	386, 386, 448, 448, 223, 223, 223, 364, 364, 364,
	365, 365, 438, 438, 438, 438, 438, 438, 438, 438,
	439, 439, 437, 437, 437, 437, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 472, 473, 473, 366, 366,
	474, 424, 424, 582, 582, 582, 583, 583, 465, 465,
	475, 475, 475, 475, 475, 475, 463, 463, 464, 464,
	483, 484, 484, 400, 400, 400, 400, 398, 398, 401,
	401, 401, 401, 401, 399, 399, 476, 476, 476, 476,
	389, 389, 477, 477, 477, 477, 478, 479, 479, 480,
	480, 433, 434, 434, 490, 490, 490, 490, 492, 363,
	363, 363, 363, 363, 540, 539, 539, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 507, 507,
	507, 507, 507, 507, 507, 493, 493, 493, 493, 493,
	497, 497, 497, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 498, 498, 503, 503, 504, 504,
	504, 499, 500, 505, 505, 505, 505, 641, 641, 509,
	509, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	495, 495, 495, 502, 502, 502, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 408,
	408, 410, 410, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 442, 442, 442, 442, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 558, 558, 558, 558, 558, 558, 558,
	558, 444, 444, 561, 561, 562, 562, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 569, 569,
	570, 570, 572, 572, 573, 573, 574, 575, 575, 575,
	576, 577, 577, 571, 571, 578, 578, 578, 578, 579,
	579, 580, 580, 580, 580, 580, 581, 581, 581, 581,
	581, 454, 454, 455, 455, 461, 461, 461, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 322, 322, 321, 273, 273, 273, 273,
	273, 273, 376, 376, 374, 374, 374, 377, 377, 375,
	375, 373, 373, 372, 372, 451, 451, 449, 449, 453,
	453, 402, 402, 508, 508, 508, 508, 508, 508, 508,
	508, 403, 403, 403, 411, 404, 404, 405, 405, 405,
	405, 405, 445, 446, 406, 406, 406, 447, 447, 456,
	460, 460, 459, 458, 458, 457, 457, 435, 435, 436,
	436, 383, 383, 642, 642, 379, 379, 481, 481, 481,
	481, 319, 319, 368, 368, 318, 318, 310, 310, 311,
	311, 311, 311, 361, 361, 462, 462, 510, 510, 511,
	511, 512, 512, 513, 513, 514, 515, 516, 450, 450,
	294, 293, 280, 281, 292, 291, 290, 279, 282, 287,
	288, 289, 284, 285, 301, 300, 299, 250, 255, 306,
	307, 307, 309, 309, 308, 308, 296, 297, 298, 486,
	278, 312, 312, 313, 313, 313, 314, 314, 314, 314,
	274, 274, 275, 275, 302, 302, 303, 304, 304, 295,
	295, 295, 265, 265, 265, 266, 266, 267, 267, 524,
	524, 521, 521, 521, 522, 522, 522, 523, 523, 523,
	523, 520, 520, 520, 520, 520, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 532, 532,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 534, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 537,
	537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 2, 2, 2,
	2, 3, 3, 4, 3, 3, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	6, 6, 6, 6, 6, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 9, 10, 5,
	2, 6, 4, 7, 7, 7, 10, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 4, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 2, 2, 2, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 4, 6, 4, 2, 6, 4,
	3, 2, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 3,
	4, 3, 4, 3, 5, 3, 4, 4, 3, 4,
	5, 3, 4, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 5, 2, 0, 3, 3, 4,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 2, 3, 7, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 13, 16, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	11, 12, 9, 5, 3, 1, 5, 10, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	2, 1, 1, 1, 8, 10, 11, 7, 10, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 13, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 611, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 156,
	129, 138, 205, 391, 437, 449, 407, 143, 428, 412,
	-142, -143, 467, -57, -69, -135, -134, 73, 130, 422,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -623, 102, -565, -93,
	-96, -127, -627, 163, 224, -115, -116, 373, -122, -123,
	430, -125, -126, 433, 164, -64, -63, 158, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	472, -178, -187, -156, 534, 49, 488, 82, 148, 441,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 429, -222, -220,
	608, 588, 549, -18, -23, -24, -19, -20, -22, -25,
	-21, -26, -27, -28, -40, -45, -46, -42, -43, -41,
	-44, -47, -48, -49, -50, -51, -52, -53, -54, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-29, 571, 580, -225, -223, -224, -232, 459, 557, 508,
	611, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	611, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	611, 611, -317, 2, -296, -302, -303, -304, -295, -265,
	-534, -537, 4, -531, -535, 170, 234, 336, 21, 23,
	22, 24, 25, 26, 27, 29, 30, 41, 42, 44,
	45, 46, 47, 48, 49, 53, 55, 59, 60, 61,
	62, 63, 64, 68, 73, 74, 79, 80, 81, 82,
	83, 84, 85, 91, 88, 89, 90, 92, 94, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 107, 108,
	109, 117, 118, 119, 120, 121, 123, 129, 124, 130,
	133, 128, 132, 134, 136, 137, 138, 141, 142, 143,
	145, 146, 147, 149, 150, 151, 153, 154, 156, 157,
	158, 161, 159, 516, 160, 162, 163, 164, 165, 168,
	176, 177, 178, 183, 185, 186, 188, 191, 192, 193,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 206,
	210, 212, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 241, 238, 247,
	248, 252, 253, 254, 256, 260, 261, 262, 263, 264,
	265, 267, 269, 268, 271, 274, 275, 278, 279, 280,
	281, 282, 283, 287, 288, 284, 289, 290, 292, 293,
	296, 294, 297, 298, 295, 299, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 312, 300, 315,
	313, 317, 318, 319, 334, 328, 329, 331, 323, 324,
	320, 325, 321, 322, 326, 327, 333, 330, 338, 339,
	340, 343, 221, 345, 346, 349, 367, 353, 354, 355,
	358, 359, 362, 365, 366, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 378, 379, 381, 382, 383, 385,
	386, 387, 389, 391, 392, 394, 395, 397, 398, 399,
	400, 401, 402, 403, 404, 406, 407, 409, 408, 410,
	412, 414, 415, 416, 422, 428, 424, 425, 426, 427,
	429, 430, 431, 432, 433, 435, 436, 437, 439, 440,
	441, 442, 443, 445, 447, 448, 452, 453, 469, 470,
	490, 449, 450, 451, 454, 455, 456, 457, 458, 462,
	460, 461, 463, 464, 465, 467, 468, 471, 472, 474,
	475, 476, 477, 478, 479, 480, 483, 485, 486, 487,
	488, 507, 489, 491, 495, 496, 497, 498, 492, 493,
	506, 500, 501, 503, 504, 509, 510, 511, 512, 513,
	514, 515, 517, 519, 527, 538, 528, 529, 531, 534,
	535, 536, 537, 525, 539, 540, 543, 544, 545, 548,
	546, 547, 549, 551, 554, 555, 556, 562, 561, 563,
	564, 566, 567, 572, 573, 575, 576, 577, 36, 50,
	51, 54, 56, 58, 69, 70, 71, 75, 125, 126,
	155, 166, 167, 179, 194, 195, 207, 209, 218, 219,
	220, 242, 243, 245, 250, 272, 342, 344, 360, 364,
	380, 384, 388, 390, 405, 444, 481, 494, 499, 520,
	521, 522, 523, 530, 532, 557, 558, 559, 565, 574,
	-317, 2, -296, 351, -289, 2, -265, -265, 391, 28,
	2, 28, 379, 461, 511, 513, 2, -591, -362, 2,
	28, -268, -265, 102, 205, 459, -289, 2, -591, -362,
	25, 2, -265, 2, 365, 22, 27, 66, 77, 98,
	141, 165, 187, 191, -626, 367, 398, 447, 463, 506,
	517, 531, 2, 561, 293, 460, 508, 234, 120, 536,
	454, -603, 452, 453, 365, 396, 439, 208, 550, -269,
	2, 449, -265, 293, 2, 611, 94, 74, 444, 464,
	-145, 2, 283, 528, -146, -147, -144, 520, -519, 454,
	439, 315, -265, 611, 611, 611, 28, -278, -265, 508,
	234, 454, 120, 504, 611, 2, 508, 370, 561, 460,
	120, 402, 234, 536, 191, 141, 27, 454, -603, 585,
	586, 293, 127, -589, 2, -584, 4, -535, -531, -311,
	-310, 508, 514, 120, -304, -295, 601, -303, 611, 611,
	611, 2, 253, 254, 400, 399, 464, 465, 611, 611,
	611, 611, 452, 2, 165, 22, 27, 66, 93, 98,
	127, 187, 191, 356, -624, 367, 398, 463, 506, 510,
	517, 531, -602, 489, 68, 427, 454, -601, -603, 293,
	536, 141, -412, 120, 283, 203, 544, 513, 511, 542,
	133, 241, 547, 546, 611, 611, -106, 2, 608, 32,
	31, -105, -109, 143, 467, -214, 508, 246, 2, -265,
	611, 611, 2, 253, 254, 452, 453, 611, 611, 189,
	-584, 2, 611, 611, 2, 253, 254, 452, 453, 246,
	2, 68, 456, 611, 611, 611, 611, 611, 611, 611,
	611, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	611, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	611, 611, 611, 611, 611, 611, 611, 611, 611, 2,
	-189, 464, 489, 215, 47, 46, 74, 28, 397, 79,
	371, 121, 127, 150, 537, 206, 234, 235, 261, 93,
	94, -414, 44, 254, 68, 253, 453, -609, 452, -466,
	509, 455, 461, 503, 265, 449, 528, 102, 551, 440,
	577, 402, 403, 501, 416, 284, 159, 190, 4, 120,
	315, 439, 466, 269, 268, 538, 520, 283, 448, 374,
	84, 611, -635, 2, 508, -637, 2, 528, 528, 2,
	-637, 2, -637, 2, -637, 2, -638, 528, 574, 611,
	611, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	611, 611, 611, 611, 611, 611, 611, -220, -222, -221,
	611, 611, 611, 611, 611, 611, 611, -189, 464, 2,
	74, 28, -355, -357, 541, 244, 152, 357, -219, -221,
	2, -564, 538, 464, -517, 2, -440, -538, -442, 599,
	600, 592, 505, 67, -321, 335, 578, -454, 127, 542,
	351, -537, -443, -456, 155, 367, 444, -377, 8, 9,
	5, 6, 7, -274, -444, -450, 533, 169, 341, -314,
	612, 10, 608, -561, -221, -455, 37, 209, 65, -521,
	-313, -275, -493, 245, -312, -295, -558, -559, 4, -531,
	-532, -522, -496, -504, -500, -501, -507, -265, -534, 77,
	111, 112, 110, 115, 114, 286, 285, 116, 113, 466,
	550, 66, 36, 218, 219, 250, 342, 220, 75, -560,
	142, -533, 242, 243, 481, 51, 405, 179, 126, 125,
	344, 56, 54, 558, -505, 122, 520, 521, 522, 523,
	194, 195, 58, 166, 167, 364, 388, 499, 530, 532,
	207, 272, 43, 106, 190, 240, 222, 249, 251, 255,
	273, 276, 316, 332, 337, 361, 363, 438, 473, -641,
	559, 494, 69, 70, -566, 408, -567, -289, -566, 611,
	611, 613, 611, -347, -349, -350, 2, 28, 139, 608,
	2, -471, 2, -472, -476, -221, 266, -475, 608, -473,
	606, -296, 352, -562, 445, -558, -559, -274, -295, -313,
	4, -531, -533, 610, -351, 608, 120, 454, 508, 78,
	234, 165, -407, 608, -265, 28, 351, 524, 613, -348,
	395, -452, 608, 351, 189, 354, 60, 297, 2, 2,
	2, 2, 2, 218, -265, 508, 119, 2, 264, 2,
	2, 2, 2, 2, 2, 2, -370, 218, 2, -296,
	561, -370, 218, 2, -370, 218, 2, -413, 2, 87,
	-279, 218, 2, -265, -305, 218, 2, -300, -302, -309,
	218, 2, -307, -265, -529, 218, 2, -528, -524, 10,
	-523, 5, 4, -531, -535, -532, -534, 77, -440, 2,
	-133, 2, 60, -265, 561, 2, 469, 2, 608, -145,
	2, 71, 528, 43, 464, -146, 2, -427, 2, -428,
	-261, -262, -263, -483, -264, 252, 394, 404, 581, 131,
	335, 577, -618, 189, 591, 524, -517, -517, -517, -378,
	610, 2, 2, 2, 2, 2, 2, -476, 218, -296,
	2, -293, -520, 4, -531, -535, -532, -536, 28, 31,
	32, 33, 35, 37, 38, 39, 40, 57, 65, 66,
	72, 76, 78, 87, 93, 102, 110, 111, 113, 112,
	114, 115, 116, 127, 131, 135, 139, 140, 144, 148,
	152, 169, 171, 184, 187, 189, 205, 208, 211, 225,
	239, 244, 246, 266, 270, 277, 285, 286, 335, 341,
	347, 351, 352, 356, 357, 377, 393, 411, 434, 459,
	466, 484, 502, 508, 518, 524, 526, 533, 541, 542,
	550, 552, 560, 568, 569, 570, 571, -537, 2, -476,
	218, 2, -299, 218, -476, -302, 2, -279, 2, -292,
	-520, 2, -318, 218, -296, -298, -302, -300, 2, 2,
	2, 2, -307, 2, -528, 218, 2, 28, 28, 561,
	395, 246, 524, 613, -368, -310, -311, -516, 8, -361,
	-265, 610, -440, 2, -133, -117, 2, 184, -440, 218,
	2, -133, 218, 2, -440, 218, 2, -133, 218, 2,
	-604, 2, -528, 218, 218, -265, 2, 297, 2, 2,
	531, 2, 98, 508, 119, 2, 426, -625, 447, 535,
	2, 2, 2, 2, 2, 2, 2, 508, -284, 2,
	-265, 184, 492, -307, 218, -308, 2, 460, -636, 408,
	-528, 218, 2, 561, -300, 218, 2, -300, 234, 248,
	-279, 218, 2, 513, 511, 513, 511, 189, 2, 246,
	2, 246, 2, -477, 2, -478, -472, -479, 606, 352,
	-487, 2, -486, -523, 557, -106, 608, -106, 608, 464,
	608, -528, -296, -296, -440, 2, -133, -117, 2, -440,
	2, -133, 2, -130, -528, -129, 608, 189, -440, 2,
	-133, -117, 2, -440, 2, -133, 2, -214, 184, 2,
	120, 508, -189, 2, 184, 552, 2, 8, 2, 225,
	-528, 455, 403, 176, 2, 469, 2, 470, 74, -414,
	577, 74, 189, 2, 189, 2, -397, 2, 571, 395,
	189, 2, 2, -588, 2, 351, 189, 2, 189, 2,
	189, 2, 189, 2, 189, 2, -188, 465, 529, 507,
	399, 254, 2, -133, 568, -117, 254, 253, -440, 568,
	2, -610, 184, 453, -440, 2, 527, 263, 160, 189,
	-397, 2, 189, 2, 189, 2, 5, 2, 400, 490,
	2, 252, 394, 490, 2, -296, 508, 561, 460, 120,
	28, 2, 452, 2, 2, 88, 89, 189, 2, 189,
	2, 204, 189, 2, 189, 508, 577, 2, -389, -476,
	-426, -427, -426, 524, -355, -357, -189, 469, 2, -226,
	-387, -228, 184, -417, -418, -229, 277, 171, 347, -230,
	-396, 28, 139, -396, -396, 60, 609, 609, -618, 538,
	11, 12, 76, 41, 599, 600, 601, 602, 182, 603,
	604, 597, 598, 596, 589, 590, 594, 258, 259, 95,
	593, 591, 86, 291, 446, 172, 173, 174, 175, 423,
	232, 34, 233, 14, 15, 16, -321, 33, 356, 276,
	578, 222, 473, 592, 17, 18, 19, 249, 251, 337,
	50, 225, -273, 367, -320, 505, 67, -440, -440, -440,
	-440, -440, -440, -440, -440, 363, 608, -383, -435, 606,
	-221, 608, 608, 608, 608, -516, -221, -440, -454, 609,
	-375, 608, -221, -454, -449, 608, 444, 606, 608, -457,
	-440, 5, 5, 5, 608, 610, -569, 572, 184, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 390, -498, 608, -497, 608,
	-497, -497, 562, -495, 608, 580, 573, 608, -495, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 562, 613, -566, -351, 608, -379, -481, -440,
	601, -379, -379, 351, -372, -440, 106, -400, 255, 316,
	190, 273, 438, 240, -437, 612, -437, -465, 580, -221,
	-473, -295, -221, -475, 608, -471, -465, -107, -516, -90,
	-103, -112, -133, -148, -193, -194, 601, -296, 608, 189,
	608, 610, -520, 189, -361, -279, -306, -265, -296, -312,
	-313, -318, 2, 138, -372, -584, 536, 454, 28, 460,
	-361, -268, 38, -451, -490, -491, -540, 612, -539, -493,
	-503, -499, -502, 380, 384, -522, 54, 558, -505, 245,
	4, -531, -533, 242, 243, 481, 51, 405, 179, 126,
	125, 344, 56, 520, 521, 522, 523, 194, 195, 58,
	559, 494, 69, 70, -584, 536, 454, 28, 460, -361,
	184, -361, 2, 2, 155, 2, 2, 2, -265, -242,
	613, 64, 431, 155, -370, 218, -242, 155, -242, 155,
	-319, 218, -318, -242, 155, -242, 613, 155, -242, 613,
	155, 610, 613, 155, -361, 2, -413, -519, -372, 38,
	-427, 2, 127, -525, -523, 5, -639, 613, 275, -324,
	290, 334, 214, 352, 575, 345, 131, -527, 5, 4,
	-450, -462, 127, 283, 245, -510, -512, 8, -511, 9,
	-513, 599, 600, -518, -517, 109, 610, -520, -239, 424,
	467, 366, -238, 24, 29, 143, 236, 319, 555, 161,
	-337, 237, -334, 370, 155, 485, 545, -598, -599, 451,
	515, 516, 90, 345, 467, 366, 424, 155, -393, -395,
	38, 118, 319, 365, 61, 229, 295, 296, 488, 565,
	155, 467, 366, 424, 366, -13, -254, 24, 143, -256,
	-251, 467, -599, 99, 424, 588, 584, 429, 376, 500,
	393, -599, -241, 485, 545, -598, -599, 451, 424, -240,
	-339, -334, 370, 155, 612, 24, 143, 424, 467, 366,
	-621, -622, 29, 424, 366, -592, -286, -563, 225, 571,
	155, -286, -286, -476, 218, -614, 184, 2, -607, -129,
	267, 5, 10, -528, -129, -368, 613, 613, -520, 601,
	453, 452, 155, 155, 155, 155, 184, 335, 335, 2,
	2, 2, 2, 2, 191, -601, -626, 2, 2, -296,
	218, -353, 351, -587, -369, 508, -296, 184, 335, 43,
	-299, 218, 2, -302, 561, -592, 335, -301, 218, -296,
	38, 608, 335, 2, -413, 2, 234, -563, 335, -477,
	-315, -296, -472, -315, 467, -289, 38, -437, -296, 609,
	613, -487, -487, -528, -202, 571, 189, 102, 608, 608,
	-214, 571, 571, -484, 613, -483, 225, -529, -130, -528,
	427, -528, -587, -279, 2, -296, 2, 508, 256, -528,
	-202, 225, -528, -528, -528, -519, 28, 470, 2, -188,
	465, 529, 89, 470, 2, -296, 508, 120, 234, 80,
	-614, 184, 2, -265, -590, 184, -585, 439, 454, 536,
	-584, -296, 120, -296, 120, -296, 120, -296, -296, 2,
	2, 2, 2, 2, 85, 2, -133, -440, 2, 85,
	2, 46, 486, -610, 184, 2, 527, 2, 527, 2,
	-265, -265, -265, 489, 275, -296, -296, -296, -297, -302,
	509, 453, -440, 2, -628, 2, 189, 184, 2, 508,
	234, 508, 234, 120, 189, 74, 120, 28, 508, 450,
	-242, 613, -269, -226, -387, -519, -388, -387, -227, -226,
	-229, 184, 404, 546, 319, 471, 260, -418, -417, 28,
	-440, -422, 178, 318, -440, -420, -442, 599, 600, -511,
	-513, -371, 345, -220, -220, -220, -358, -467, -440, 393,
	234, -518, -618, -492, -490, -490, -294, -520, 520, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, 276, 222, 473, 50, 225,
	-440, 524, -440, -440, -440, -440, 313, 335, 341, 533,
	169, 543, 139, 345, -642, 502, 40, -447, -221, -376,
	608, -461, 35, 484, 28, -454, 608, 2, -435, -440,
	-436, -322, -320, -265, 599, 600, 601, 602, 603, 604,
	589, 590, 591, 14, 15, 16, 594, 598, 596, 597,
	182, 95, 593, 291, 446, 86, 172, 173, 174, 175,
	258, 259, 17, 18, 19, 34, 592, -373, -372, -372,
	609, 560, 28, 139, 601, 2, 609, 613, 38, 609,
	-440, -373, -453, -449, -372, -460, -459, 568, -408, -409,
	576, 300, 123, 216, 298, -410, 458, -514, 8, -520,
	601, -570, 177, 208, 608, 609, 2, 609, 2, 609,
	-440, 2, 609, -440, 2, 609, -440, 2, 609, -440,
	2, 609, 2, 609, 2, -440, -440, -440, -440, -440,
	-440, -440, -372, 8, -514, -514, 520, 520, -514, -514,
	-514, -506, 380, 381, 382, 383, 278, 279, 280, 281,
	384, 385, 386, 387, 305, 306, 307, 308, 301, 302,
	303, 304, 309, 310, 311, 312, 199, 200, 201, 202,
	195, 196, 197, 198, -506, -402, 2, -508, -372, 4,
	576, 300, 123, 216, 298, 458, 5, -402, 2, -403,
	2, -440, -372, -404, -441, -442, 599, 600, 592, -321,
	-454, -405, 2, -440, -373, -440, 57, 270, 526, -406,
	-440, 189, -372, -372, 2, -372, 2, -567, 38, -372,
	-364, 613, 189, 38, 4, -364, -364, 608, 609, 613,
	-401, 212, 294, 289, 248, -401, -471, -400, 255, -398,
	361, -398, -398, -465, -280, 606, 614, -520, -465, -464,
	-463, 38, -289, 358, -465, -465, 610, 609, -464, 607,
	-582, 608, 611, 611, 611, 611, 611, -296, 608, -372,
	-520, 610, 491, 2, 609, 249, 249, 249, 249, 249,
	445, 609, 524, -586, -305, -309, 509, 2, 571, -105,
	353, 609, 613, -363, 37, 606, 610, -514, 2, 2,
	-509, 562, 608, 608, -409, 608, 189, -586, -309, 509,
	2, -362, 524, -265, 2, -296, -370, -242, 155, -370,
	-370, -242, 613, 155, -279, -300, -305, -307, -309, -265,
	-528, -529, -242, -301, -618, 609, 528, -428, -323, 404,
	483, 425, 462, 504, 8, 9, 8, 9, 613, -520,
	613, -619, 93, 524, 78, 454, -258, 284, 524, -431,
	218, 78, -541, -282, 93, -542, -265, 72, 542, 393,
	187, 153, -619, 93, 393, -619, 93, 2, 236, 93,
	467, 489, 28, 60, -476, 41, 41, 28, -617, 333,
	271, 567, 189, 577, 508, 234, 454, 524, 524, -476,
	-395, -490, 118, 295, 296, 60, -515, -510, 599, 600,
	-515, 60, -515, -515, -515, 571, -299, -476, 454, 524,
	524, 524, 414, 414, -251, -146, 524, 524, -146, 28,
	-189, 432, 127, -640, 591, 414, 613, 41, 41, 28,
	-617, 333, 271, 189, 524, -318, -280, 556, 42, 556,
	42, 556, 524, 42, 454, 524, 613, 42, 524, 524,
	-13, 467, -593, -270, 105, 325, 288, 326, 97, 322,
	96, 321, 103, 323, 104, 324, 563, 338, 564, 339,
	63, 320, 299, 327, 487, 330, -271, -272, 146, 372,
	554, 120, -528, -13, -13, 467, 366, 424, 155, -615,
	225, 28, -603, 225, -484, 225, -484, -310, -265, 610,
	-133, -440, -440, -133, -440, -133, 46, 155, 155, 2,
	-636, 264, 608, -327, 335, 189, -361, -485, 246, 613,
	-369, -584, 155, -526, -525, 116, 466, -394, -393, 335,
	-301, 218, 2, 155, -351, 335, 149, 608, 402, 2,
	155, -281, 218, -266, -265, -413, -245, 512, 155, -391,
	552, -423, -133, 608, 127, 38, -423, -380, -381, -482,
	-382, -282, 608, -289, -437, -106, -486, 609, 609, 609,
	-201, 355, -200, -265, 5, -214, 552, -326, -432, -431,
	-545, -546, -541, 276, 234, 542, 248, 170, -352, -283,
	-282, 119, 406, 406, -208, 571, -129, -130, 609, -484,
	225, 492, -202, -202, -484, -484, -296, 184, -528, -202,
	-202, -202, 2, 2, 2, 2, -397, -296, -279, -318,
	-296, 28, 610, -361, -361, -309, -305, -397, -279, -397,
	-279, -397, -279, -133, -440, 489, 2, 464, 184, 184,
	610, -397, -354, 434, 2, 402, 120, 508, 370, 234,
	-296, -318, -296, -318, -279, 120, -279, 121, -296, -476,
	-388, -227, 352, 260, 471, -420, -421, -442, 444, 445,
	-421, 444, 445, 8, 9, 8, 9, -231, 475, 340,
	-370, 613, -236, 39, 135, 260, -296, -518, 577, 151,
	-440, -440, 524, -642, 502, -447, 151, -440, 313, 341,
	533, 169, 543, 139, 345, 189, 608, -441, -441, 609,
	-374, -440, -440, 607, 616, 609, 610, 609, -357, 613,
	-355, -440, -372, -372, 609, 610, -372, -361, 607, 607,
	613, 609, -458, -459, 144, -440, 524, 524, 524, 524,
	608, 609, 610, -575, 362, 608, 608, -440, 609, 609,
	609, 609, 38, 613, 613, 613, 609, 613, 613, 613,
	609, 609, 609, 613, 609, 577, 577, 609, 609, 609,
	609, 613, 609, 613, 609, 189, 609, 609, -411, 377,
	609, 11, 12, 599, 600, 601, 602, 182, 603, 604,
	597, 598, 596, 589, 590, 591, 86, 291, 446, 14,
	15, 16, -321, 249, 225, -441, -441, -441, -441, 609,
	-445, -446, 189, 184, 38, -406, -406, -406, 609, 189,
	-372, 609, 609, 608, -568, 293, 335, 609, -434, -433,
	569, -481, -365, 2, -471, -291, -520, -434, -434, -372,
	-440, 255, 255, -399, 552, 351, -401, -471, -464, -516,
	-439, -438, 186, 39, 135, 328, 329, 331, 221, -464,
	-289, -351, -464, -464, -520, -465, -465, -463, 609, -583,
	-516, 609, -366, -474, -562, -357, 610, -520, -211, -563,
	-190, 5, 341, -190, -190, -190, -190, -361, 524, 524,
	225, 25, 378, -490, 606, 607, 8, -520, 608, -514,
	-514, -514, -361, 189, 189, 225, 189, -526, 2, -242,
	-370, -242, -242, -318, -319, -242, -242, -242, -392, 571,
	-517, -427, 540, 83, 404, 520, -517, -238, 424, -282,
	-282, -296, -306, 203, 415, -526, 335, -431, 218, -244,
	335, -490, -290, -265, 608, -415, 573, 260, 260, 552,
	-282, -290, 260, 218, -282, 218, -290, 2, -290, -594,
	404, 346, -440, 60, -335, 282, 402, 336, -239, 424,
	467, 366, -133, -133, -133, -133, -133, 608, -618, 552,
	138, -296, -318, -296, -306, -526, -301, 467, 366, 424,
	332, -312, -515, -515, -393, 467, 366, 424, -306, -526,
	-299, -526, -250, 218, -265, -250, 218, 454, -279, 414,
	577, 45, -640, -240, -133, -133, -133, -133, -133, 608,
	-280, -241, 424, 5, 218, -282, 5, -282, 218, 5,
	-265, -282, -306, -526, -622, 24, 143, -282, -306, -526,
	-270, 372, -528, 341, 548, -279, -592, -286, 454, 524,
	524, -476, -611, -612, 205, 437, 454, 440, -361, -129,
	-205, 571, -129, -199, 230, 601, -589, -528, -265, 561,
	-265, -325, -328, -326, -282, -217, -218, 573, 571, 155,
	-316, -296, 606, -202, -528, -296, -485, -307, -308, 155,
	-351, 335, -528, 38, 155, 608, 2, 2, -300, 351,
	335, -281, 218, -246, 145, -640, -279, -434, -365, -390,
	-425, 434, 351, -352, 557, -289, -390, -367, 613, 189,
	591, 610, -352, -480, 601, -106, -106, -202, 613, 608,
	591, 591, 608, -528, -528, 609, 613, -244, -296, -281,
	234, 234, -288, -266, 609, 613, 610, 608, 591, 591,
	-210, 355, -209, 147, 262, 247, 477, 478, 479, 480,
	137, 476, 124, -484, -208, -130, 189, 189, -65, 571,
	508, -202, 612, 440, -265, -397, -397, -397, 464, 464,
	-265, -361, -292, -279, -296, -293, -318, 184, 184, -279,
	546, -421, 352, 287, -467, -237, 579, -296, 612, -440,
	-440, 151, 151, -440, -441, -441, -440, 151, 189, 608,
	-440, -451, 33, 33, 609, 613, -436, -440, -320, 609,
	560, -357, -357, 609, 601, -520, 612, 609, -449, 148,
	-440, 518, 300, 216, 298, -410, 298, -410, -410, -514,
	5, -520, 601, -576, -285, 608, -265, 569, -356, 357,
	609, -492, -490, -440, -440, -440, -440, -440, -514, -495,
	-495, -510, -510, -440, -445, -440, -492, -490, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, 139, 335,
	345, -441, -446, -445, -440, -440, -490, 609, 609, 609,
	-372, -105, 608, 293, -384, 208, -440, -484, 613, -384,
	-384, 609, -471, -471, 608, -440, 255, 607, 613, 615,
	591, -351, 610, -463, -464, 607, 609, 613, 609, 613,
	-424, 38, 609, -520, -434, -213, -212, 136, 53, 107,
	134, 341, 349, 188, 213, 401, 151, 185, 145, -361,
	-361, 454, 354, 5, 8, 606, 607, 610, -514, 609,
	609, 609, -361, -361, 454, -361, -242, -242, 119, 319,
	-440, 524, 524, 60, 225, 155, 335, 554, -547, -542,
	153, -440, 608, 234, 608, 608, 2, -233, -234, -235,
	143, 467, 24, -620, 2, 552, 155, -242, 155, -242,
	575, -335, 608, 608, 524, 454, -258, 524, 571, -372,
	-440, -203, 127, -519, -599, 612, -599, 612, 454, 524,
	524, 454, 524, 524, 335, 155, 571, 168, 168, 577,
	-250, 571, -372, 524, -494, 48, 26, 335, -300, -242,
	155, 524, 524, 536, 467, -528, -528, 341, -13, -306,
	-526, -301, 467, 366, 424, -591, -362, -591, 205, -309,
	-615, -484, -207, 355, -206, 147, 436, 137, 262, 227,
	-484, -205, 189, 246, 571, -301, 2, 609, 609, 613,
	-548, 38, 349, 349, 608, -296, -86, 571, -483, -516,
	-595, 571, 43, -299, 38, 155, -592, -133, -301, -488,
	-489, 5, 38, -296, 155, 351, 335, -247, 269, -640,
	-524, -563, -357, -390, -379, 336, 91, 609, -434, -381,
	-365, -440, 2, 609, -200, -201, -528, -528, -528, -202,
	-214, -214, -432, -329, 608, -281, -266, 608, -214, -283,
	2, -529, -528, -528, 613, 608, 591, 591, 591, 591,
	-208, -484, -129, -133, 355, -296, 601, -397, -341, -340,
	370, 345, -341, 444, 444, 352, 178, 265, -236, -280,
	-440, -440, 151, 33, 33, -440, -440, -451, 609, -440,
	-440, -372, 607, 5, -440, 609, 609, 8, -440, 609,
	610, -577, -265, -440, 609, 60, 609, 609, 613, 613,
	609, 609, 609, 609, 609, 609, 609, -446, 189, 139,
	345, 608, 609, 609, -105, -448, 211, 60, -471, -448,
	-448, -399, -361, -471, -438, -280, 606, -520, -516, -474,
	608, 610, -212, 591, -528, -528, 2, 2, 2, 5,
	5, 401, 335, 341, 5, 571, -309, 607, 2, 606,
	-520, 609, -309, 119, -282, -282, 508, 444, -250, 393,
	-431, 155, -549, 93, -551, 76, 170, 102, 335, 341,
	542, 393, 72, 127, 351, 411, -630, -631, -632, 38,
	582, 583, 609, -359, -468, -562, 608, -265, -359, -361,
	335, 497, 127, 351, 335, 127, 351, 566, 119, 2,
	536, 79, -282, -290, -361, -361, -296, -306, -526, 162,
	609, 613, 591, 2, 601, 601, -306, -526, -301, -306,
	-526, -299, 155, -250, 368, 168, 162, 609, -280, 5,
	5, 155, -277, 76, -282, 5, -282, -300, 119, 454,
	524, 524, 351, 351, 354, -611, -612, -205, 613, 608,
	591, 591, -205, -529, -129, 2, -351, -342, 236, -282,
	-546, -543, -544, 393, -550, -552, 170, 393, -133, 2,
	-216, -215, -265, 5, 608, -327, 355, 607, -597, 355,
	-596, 117, 137, -526, -394, -133, -301, -351, 609, 613,
	149, -416, 552, -280, -296, 155, -248, 268, -640, -524,
	-245, -419, -417, 140, 608, 351, -133, -357, 591, 609,
	609, 119, 119, 228, 154, -359, 608, 608, -361, 119,
	609, -209, -210, -528, -129, -528, -528, -208, -484, -66,
	-67, 234, 93, 375, -293, 508, 234, 608, 608, -236,
	-440, -440, -440, 609, -357, -520, 601, -571, 370, 609,
	-467, -440, -440, -441, 189, 608, -451, 609, -572, 570,
	-440, -385, -386, -440, 442, 108, 209, -572, -572, 609,
	-516, 2, -528, 2, 2, 341, 2, 2, 2, 524,
	606, 2, 189, 225, 38, 414, -431, -290, -294, -287,
	-265, 170, 218, 341, 566, -415, 260, 608, -441, 546,
	-296, 608, 2, 217, 217, 30, 60, -633, 131, 239,
	609, 613, -469, -276, -265, -440, -469, 609, 609, 341,
	546, 341, 566, -440, 546, -490, 608, -242, -242, 609,
	609, -440, 524, -519, 100, -517, 2, -599, -250, -279,
	-440, 524, 5, -242, -294, -242, -242, -277, 536, -306,
	-526, -301, -616, 509, 461, 537, 455, 192, 443, -616,
	184, -206, -207, -528, -129, -205, 38, -332, 238, 2,
	-548, 260, -287, 260, -629, 571, 609, 613, 591, 591,
	-325, -217, -87, -88, 525, -483, 613, 608, 591, -351,
	38, 5, 608, 608, -265, 351, 608, -280, -260, 92,
	-640, -524, -246, -390, 336, -361, 93, -419, -447, -202,
	608, 608, -330, 81, 94, 128, 217, 193, 235, 489,
	495, 28, -330, 609, -359, -359, 609, 608, -202, 609,
	613, 28, 608, 28, 608, -296, -318, -372, -372, 609,
	-357, 60, 613, 609, 609, -441, -451, 609, -573, -574,
	-285, 613, 608, 608, 468, 607, 2, -361, 2, -361,
	-250, 393, -265, -551, -287, 335, 552, -440, -441, -267,
	608, -440, 608, 608, 38, 127, 239, 132, 223, -430,
	-634, 101, 498, 226, -468, -236, 609, -429, 552, 411,
	-441, -277, -359, 608, 608, 608, 591, 189, 608, -494,
	-242, -300, 524, 2, 2, 189, -591, 609, -605, 409,
	-133, -336, -337, 225, 608, -331, 351, 119, 319, -215,
	-517, -517, 609, 38, -88, 9, -596, -597, -440, 38,
	-133, -488, -359, -296, -359, 351, -252, -251, 277, -524,
	-247, 609, -290, -390, -529, -529, -429, 609, 609, -529,
	-67, -361, -361, 609, 609, -578, 402, 445, 210, -372,
	-358, 609, 613, 38, -386, 2, 2, 2, 414, 155,
	212, 609, -553, 292, -265, 609, -394, -394, 38, 132,
	223, -332, 608, -237, -469, -332, 212, -296, -600, 552,
	609, -344, -343, -340, -346, -345, -340, -372, -517, 100,
	368, -372, -277, -361, -361, 351, -608, 190, -607, 5,
	10, -217, 368, -360, -470, -282, 82, 119, -342, -133,
	609, -133, 609, 609, -416, 609, -296, -249, -530, 414,
	416, -640, -248, -434, 609, 609, -430, -429, -338, -334,
	609, 609, 609, 609, -579, -580, 50, 539, 109, -440,
	-579, -579, -574, -576, 170, 571, -554, -557, -556, 587,
	474, 190, 369, 609, 497, 565, 609, 609, -338, -361,
	571, -351, -440, -429, 609, 613, 557, 609, 613, 557,
	609, 189, 609, -242, -613, 571, -242, -616, -204, 571,
	46, -331, -296, 609, 613, 392, 133, 143, -332, -629,
	-429, 608, -430, 608, -257, -256, -640, -510, -260, 140,
	-202, -202, -332, -430, -218, 571, -202, -581, 153, -580,
	389, 183, 444, 389, 183, -581, -581, -287, 55, -556,
	587, -557, 587, 546, 133, -633, 609, 55, -553, -332,
	-343, 225, -345, 189, 368, 205, 189, 452, -607, 30,
	-259, -258, 608, -470, 445, 445, 2, -336, -331, -430,
	-359, -332, -359, -253, -254, -255, -361, -252, 336, 546,
	-338, -332, -434, 109, 208, 519, 319, 33, 591, -555,
	319, 431, 64, 467, -555, -434, 591, -554, 608, 608,
	354, -361, 355, -361, 2, -217, -332, 609, -338, 609,
	-249, 467, -218, -338, 444, 359, -580, -440, 23, 341,
	127, -440, -633, -372, -372, -242, -201, 608, 609, -331,
	-338, -429, -218, -430, -257, -380, -434, -218, 609, 609,
	-201, -243, 64, 431, -259, -218, -430, -434, -332, -253,
	-434, -434, -333, -334, 524, 609, -434, -332, -338, 608,
	-338, -218, -372, -218, -434, 609, -434, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 562, 563, 565, 566, 567, 569,
	570, 572, 574, 576, 577, 578, 580, 581, 583, 584,
	585, 586, 587, 589, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	658, 660, 0, 1428, 1430, 1432, 1434, 0, 815, 0,
	36, 37, 39, 0, -2, 346, 348, 350, 0, 378,
	380, 381, 383, 385, 386, 387, 389, -2, 0, 495,
	496, 498, 500, -2, 0, 1025, 1027, 0, 647, 649,
	0, 1030, 1032, 0, 0, 670, 671, 0, 1539, -2,
	662, 664, 666, 668, 740, 742, 744, 746, 748, 750,
	752, 754, 756, 758, 759, 761, 763, 765, 767, 769,
	770, 772, 774, 776, 777, 779, 780, 782, 784, 786,
	788, 790, 792, 794, 796, 798, 800, 802, 804, 806,
	-2, 809, 810, 811, -2, -2, 0, -2, -2, -2,
	1446, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 439, 441, 443, 445, 447, 450, 452, 454, 1597,
	502, 504, 506, 508, 510, 512, 514, 0, -2, 1611,
	0, 0, 0, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 109, 110, 111, 112, 113, 114,
	115, 116, 75, 76, 77, 79, 80, 81, 82, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 107,
	73, 0, 0, 1570, 1572, 1574, 1576, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 564, 568, 571, 573, 575, 579, 582, 588,
	590, 592, 547, 548, 551, 2306, 2324, 2325, 2326, 2329,
	2330, 2331, 2332, 2333, 2334, 2798, 2879, 2880, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	549, 550, 1211, 0, 616, 614, 2291, 617, 2591, 619,
	621, 489, 490, 491, 492, 493, 494, 0, 640, 630,
	1609, 641, 643, 644, 645, 646, 611, 609, 0, 640,
	2360, 638, 1426, 1427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 418, 1271, 1272, 1273, 1411,
	1412, 2639, 1453, 0, 234, 659, -2, -2, 2763, -2,
	695, 696, -2, -2, 710, 713, 705, 2767, 0, 2642,
	2626, -2, 716, 1429, 1431, 1433, 813, 814, 2310, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 244, -2, -2, -2, -2,
	0, 0, 2688, 2412, 2259, 2326, 2262, 2257, 347, 349,
	351, 352, 0, 0, 0, 0, 0, 0, 379, 382,
	384, 388, -2, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 1080, 1081, 1333,
	0, 0, 0, -2, 497, 499, 552, 553, 0, 1598,
	1598, 560, 561, -2, 0, 0, 0, 0, 308, 296,
	1026, 1028, 1029, 0, 0, 0, 0, 648, 650, 0,
	0, 276, 1031, 1033, 1034, 0, 0, 0, 0, 0,
	310, 0, 0, 663, 665, 667, 669, 741, 743, 745,
	747, 749, 751, 753, 755, 757, 760, 762, 764, 766,
	768, 771, 773, 775, 778, 781, 783, 785, 787, 789,
	791, 793, 795, 797, 799, 801, 803, 805, 807, 808,
	821, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 921, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 1006, 0, 0, 824, 826,
	827, 828, 829, 830, 831, 832, 0, 894, 919, 920,
	930, 812, 0, 1251, 1599, 1455, 1436, 1450, 1455, 1438,
	1439, 1440, 1441, 1442, 1447, 1449, 1443, 1444, 1445, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 60, 440,
	442, 444, 446, 448, 451, 453, 455, -2, 1568, 1569,
	503, 505, 507, 509, 511, 513, 515, 651, 0, 653,
	0, 825, -2, 0, 1603, 1603, 1603, 0, 0, 1569,
	1567, 0, 0, 0, 656, 657, 720, 721, 1873, 0,
	0, 0, 0, 0, 0, 0, 0, 2133, 1961, 0,
	722, -2, 1994, 1996, 2738, 2564, 2763, 2132, 1998, 1999,
	2000, 2001, 2002, 0, 2004, 2005, 2006, 2007, 2008, 2009,
	0, 2011, 0, 2016, 2017, 2018, 0, 2745, 2236, 2320,
	-2, 0, 0, 2751, 2316, 0, 2099, 2034, -2, -2,
	2343, 2322, 1805, 1806, 1807, 1808, 1809, -2, -2, 2781,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 0, 2726, 2746, 2747, 2752, 2754, 2748, 2735, 2059,
	2426, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1832, 1841, -2, -2, -2, -2,
	-2, -2, -2, 2739, 2740, 2757, 2760, 2766, 2771, 2772,
	2744, 2753, 2780, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 1833,
	-2, -2, -2, -2, 1586, 2606, 1589, 1211, 1587, 1571,
	1573, 0, 1575, 0, 0, 0, 1580, 1606, 1604, 0,
	1655, 1584, 1585, 1675, 1675, 1699, 0, 1680, 0, 1699,
	1598, 1726, 0, 1686, 2631, 2035, 2036, 0, 2326, 2321,
	-2, -2, 2778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 612, 0, 618, 620, 0, 0, 0, 639,
	1608, 0, 0, 0, 0, 0, 0, 0, 421, 422,
	423, 424, 425, 2746, 0, 0, 0, 430, 0, 432,
	433, 434, 435, 436, 437, 438, 205, 2746, 520, 545,
	0, 205, 2746, 523, 205, 2746, 526, 0, 529, 1331,
	205, 2746, 532, 2287, 205, 2746, 535, 537, 2295, 205,
	2746, 541, 2302, 2300, 542, 2746, 544, 313, 311, 312,
	2339, 2340, 2347, 2348, 2349, 2350, 2779, 2781, 1422, 1423,
	1424, 1425, 0, 1452, 1332, 661, 0, 687, 0, 693,
	694, 2734, -2, 0, 2651, 698, 699, -2, 701, 1456,
	1460, 1461, 1462, 1463, 1464, 0, 0, 0, 0, 1469,
	0, 0, 0, 0, 688, 689, 708, 709, 714, 717,
	0, 816, 817, 818, 819, 820, 72, 0, 2746, 1726,
	74, 0, 2281, 2351, 2352, 2353, 2354, 2355, 2799, 2800,
	2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810,
	2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
	2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 78, 0,
	2746, 83, 0, 2746, 0, -2, 96, 0, 108, 0,
	2284, 117, 0, 2746, 0, 2256, -2, 0, 217, 297,
	298, 299, 0, 1055, -2, 2746, 1264, 1266, 1266, 0,
	-2, 0, 0, 0, 1016, 2253, 2258, 1017, 2277, 1018,
	2263, 0, 353, 354, 355, 356, 357, 0, 358, 2746,
	360, 361, 0, 363, 364, 2746, 366, 367, 0, 369,
	0, 256, 262, 2746, 2746, 392, 394, 0, 396, 397,
	0, 399, 0, 0, 0, 403, -2, 419, 0, 416,
	406, 407, 409, 410, 411, 412, 413, 0, 459, 457,
	2292, 0, 0, -2, 2746, 0, 1052, 0, 0, 1311,
	-2, 2746, 1257, 0, 1318, 2746, 1314, 0, -2, 0,
	1596, 2746, 1473, 1084, 1085, 1086, 1087, 1738, 486, 0,
	1504, 0, 1506, 0, 1525, 1732, 1675, 0, 0, 1737,
	0, -2, 605, 2309, -2, 555, 0, 556, 0, -2,
	0, 325, 0, 0, 1035, 1037, 1038, 1040, 1041, 1044,
	1045, 1046, 1047, 1712, 277, 279, 0, 0, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 0, 0, 672,
	0, 0, 822, 823, 0, 0, 837, 838, 839, 0,
	325, 2643, 2601, 2448, 846, 0, 849, 852, -2, 0,
	0, 0, 0, 856, 0, 861, 862, 863, 0, -2,
	0, 870, 872, 1024, 874, 0, 0, 876, 0, 880,
	0, 883, 0, 885, 0, 887, -2, -2, -2, 895,
	896, -2, 901, -2, 0, 905, -2, 0, 908, 0,
	911, -2, 0, 921, 917, 918, 0, 0, 0, 0,
	938, 939, 0, 948, 0, 951, 952, 953, 0, 957,
	958, 0, 960, 961, 962, 963, 0, 2716, 2648, 2412,
	0, 969, -2, 975, 977, 0, -2, 0, 993, 0,
	997, 0, 0, 1005, 0, 0, 833, 834, 205, 1730,
	1435, -2, 1437, 0, -2, 0, 652, 0, 655, 1628,
	1554, 1551, 0, 1625, 1626, 1555, 0, 0, 0, 1562,
	0, 1601, 1602, 0, 0, 0, 1541, 1542, 0, 0,
	0, 0, 0, 0, 2138, 2139, 2140, 2141, 2154, 2142,
	2143, 2153, 2151, 2152, 2144, 2145, 2150, 2164, 2165, 2155,
	2156, 2146, 2159, 2157, 2158, 2160, 2161, 2162, 2163, 0,
	0, 2169, 0, 2147, 2148, 2149, 2177, 0, 0, 2178,
	0, 2180, 0, 2170, 2166, 2167, 2168, 0, 1940, 1942,
	2244, 0, 0, 0, 2176, 2171, 2172, 1878, 1879, 1880,
	1881, 1882, 1915, 1919, 1920, 0, 0, 1995, 2241, 2240,
	1997, 0, 0, 2192, 0, 2010, -2, 0, 2133, 2187,
	0, 0, 2019, 2020, 2021, 0, 0, 2192, 0, 0,
	2235, 2031, 2032, 1870, 0, 0, 2101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1818, 0, 1820, 0,
	1821, 1822, 1829, 1842, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 2216, -2, 0, 0,
	0, 0, 1834, 0, 1588, 0, 0, 1659, 2245, 2249,
	2250, 1659, 1659, 0, 0, 2193, 1723, 1723, 0, 0,
	1718, 1718, 1718, 1716, 1699, 0, 1699, 1709, 0, 1699,
	1699, 0, -2, 1680, 0, 0, 1709, 0, 1693, 593,
	595, 597, 599, 600, 601, 603, 1727, 1728, 0, 0,
	0, 0, 2327, 0, 0, 0, 0, 2299, 0, 0,
	2312, 0, 375, 0, 0, 0, 2699, 2642, 0, -2,
	623, 642, 1598, 0, 2195, 1753, 1757, 0, 1759, 1760,
	1761, 1762, 1763, 0, 0, 1754, -2, 1830, 1832, 1853,
	2344, 2345, 2346, 1813, 1814, 1815, 1816, 1817, 1825, 1812,
	1812, 1812, 1823, 1852, 1844, 1852, 1848, 1798, 1799, 1800,
	1835, 1836, 1837, 1838, 0, 2699, 2642, 0, -2, 632,
	0, 0, 1536, 420, 0, 427, 428, 429, 0, 516,
	0, 203, 204, 0, 205, 2746, 521, 0, 524, 0,
	205, 2746, 2251, 530, 0, 533, 0, 0, 539, 0,
	0, 0, 0, 0, 205, 1538, 0, 0, 0, 0,
	-2, 703, 711, 712, 224, 225, 0, 1458, 0, 1465,
	731, 732, 733, 1467, 1468, 0, 1470, 706, 734, 735,
	736, 737, 738, 739, 0, 2265, 2266, 2267, 2268, 2271,
	2272, 0, 0, 704, 724, 707, 0, 718, 118, 1408,
	0, 0, 161, 0, 1408, 1408, 0, 0, 0, 0,
	188, 0, 1123, 0, 0, 0, 0, 133, 146, 157,
	130, 131, 0, 0, 0, 0, 0, 0, 84, 1233,
	0, 1236, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 98, 99, 0, 0, 104,
	105, 0, 145, 0, 0, 0, 0, 0, 0, 1501,
	0, 140, 120, 0, 0, 133, 147, 159, 0, 192,
	194, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 226, 0, 0, 0, 1258, 0, 0, 0, 1595,
	0, 0, 0, 0, 2746, 1406, 0, 1391, 0, 1712,
	2499, -2, -2, 277, 1712, 1015, 0, 0, 2327, 2261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	398, 400, 401, 402, 0, 1310, 0, 408, 449, 1182,
	2746, 0, 0, 476, 471, 0, 473, 0, 0, 0,
	1232, 2746, 1230, 2296, 0, 1255, 0, 1211, 2746, 2294,
	0, 0, 0, 1319, 2336, 1328, 1332, 1491, 0, 488,
	0, 1507, 1509, 0, 0, 1733, 0, 1735, 1675, 1598,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 1711, 0, 0, 1712, 277,
	2617, 325, 325, 1712, 674, 1712, 676, 0, 0, 840,
	841, 0, 325, 325, 325, 847, 848, 850, 851, -2,
	-2, -2, -2, 853, 854, 945, 0, 0, 0, 944,
	864, 0, 866, 869, 873, 0, 1009, 2626, 2642, 2699,
	1022, 945, 2412, 945, 2412, 945, 2412, 884, 886, 889,
	933, 941, 900, 907, 0, 902, 906, 909, 912, 0,
	914, 922, 0, -2, 0, 925, 0, 927, 0, 929,
	945, 946, 949, 956, 959, 964, 965, 966, 967, 2307,
	968, -2, 972, 973, 0, 984, 989, 990, 986, 0,
	0, 0, 0, 0, 0, 1000, 1001, 0, 0, 1008,
	1250, 0, 1448, 1628, 1554, 654, 1545, 1627, 1546, 1553,
	1556, 0, 0, 1558, 0, 1560, 0, 1623, 1624, 1631,
	1632, 0, 1642, 1643, 1635, 0, -2, 0, 0, 1638,
	1639, 1564, 0, 1581, 1582, 1583, 1612, 1615, 1347, 0,
	2879, 691, 0, 1874, 1748, 1875, 1876, 2280, 0, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, -2,
	-2, -2, -2, -2, -2, -2, -2, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, -2, -2,
	-2, 1916, 1917, 1918, -2, 2179, 2181, 0, 2244, 0,
	-2, 0, -2, -2, -2, -2, 1937, 0, 1939, 1944,
	1946, 1948, 0, 0, 0, 0, 2243, 1958, 2227, 2228,
	0, 0, 2135, 2136, 2137, 1943, 0, 1962, 2242, 2239,
	0, 0, 2173, 0, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 0, 2191, 1611,
	2023, 0, 0, 0, 0, 2030, 2015, 2189, 0, 2188,
	0, 0, 0, 2199, 0, 2234, 2230, 0, 2278, 1869,
	1856, 1857, 1858, 1859, 1860, 1861, 1871, 0, 2275, 2313,
	2319, 2109, 0, 0, 0, 2060, 2061, 2062, 2063, 2064,
	0, 2066, 2067, 0, 2069, 2070, 0, 2072, 2073, 0,
	2075, 2076, 2077, 2078, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 0, 0, 2081, 0, 2202, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 2083, 0,
	2085, 2193, 2213, 0, 0, 1963, 0, 0, 0, 0,
	2133, 0, 2088, 2193, 2221, 0, 0, 0, 0, 0,
	2193, 0, 2226, 0, 2095, 0, 2097, 1590, 0, 0,
	1743, 0, 0, 0, 2248, 1743, 1743, 0, 1654, 0,
	0, 1719, 1720, 1721, 1722, 0, 0, 1723, 0, 1713,
	1717, 1714, 1715, 1709, 1672, 0, 0, 2282, 1709, 1678,
	1708, 0, 1211, 1698, 1709, 1709, 0, -2, 1682, 1699,
	0, 0, 594, 596, 598, 602, 604, 0, 0, 1611,
	-2, 0, -2, 327, 1210, 0, 0, 0, 0, 0,
	613, 615, 0, 0, 536, 0, 0, 629, 0, 607,
	0, 610, 0, 1744, 1747, 0, 0, 1758, 1764, 1765,
	0, -2, 0, 0, 1854, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 431, 546, 205, 518, 0, 205,
	205, 527, 0, 0, 205, 538, 205, 2303, 205, 2301,
	314, 543, 1537, 237, 0, 690, 0, 1457, 1466, 0,
	728, 0, 730, 0, 2269, 2273, 2270, 2274, 0, 719,
	0, 0, 0, 0, 1407, 0, 1354, 0, 0, 165,
	2746, 0, 207, 0, 0, 1175, 2288, 0, 1165, 0,
	0, 2434, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	1234, 1235, 1237, 1244, 1246, 0, 1240, 2276, 0, 0,
	1241, 0, 1243, 1245, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 1267, 0, 0, 1268, 1269,
	1270, 1479, 1480, 0, 1500, 1501, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 2255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1260, 0, 1306, 1304, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 0, 0,
	0, 0, -2, 1262, 1263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 316, 2254, 2264, 0,
	1042, 1043, 359, 362, 365, 368, 243, 0, 0, 404,
	0, 0, 1090, 1065, 0, 0, 458, 325, 0, 0,
	472, 476, 2305, 1050, 221, 222, 223, 1228, 1231, 0,
	1211, 2746, 1279, 0, 0, 0, 0, 0, 0, 1317,
	0, 0, 2746, 2283, 2335, 2336, 1493, 1501, 0, 1743,
	0, 1523, 1510, 0, 0, 0, 1523, 1527, 1528, 1530,
	1531, 0, 0, 1734, 1740, 554, 606, 1598, 1598, 325,
	323, 2567, 321, 318, 320, 0, 0, 0, 1091, 1093,
	1094, 1095, 207, 0, 2336, 1165, 2488, 2336, 0, 1513,
	1515, 0, 0, 0, 271, 0, 280, 1712, 278, 283,
	0, 0, 0, 470, 673, 678, 835, 0, 325, 843,
	844, 845, 891, 935, 943, 988, 855, 857, 858, 859,
	0, 0, 0, 1023, 1019, 1020, 1021, 875, 945, 878,
	945, 881, 945, 904, 910, 923, 916, 924, 0, 0,
	0, 937, 954, 0, 971, 0, 0, 0, 0, 0,
	0, 0, 994, 995, 996, 998, 1003, 1002, 1007, 1731,
	1549, 1550, 1552, 0, 1561, 0, 0, 1637, -2, -2,
	1636, 1640, 1641, -2, -2, -2, -2, 1557, 0, 1566,
	1563, 0, 1622, 1345, 1346, 0, 0, 692, 0, 0,
	-2, -2, 0, 0, 0, 1959, 0, -2, 1938, 1941,
	1945, 1947, 1949, 0, 0, 0, 0, 0, 0, 2182,
	0, 2184, 1960, 2237, 2240, 2175, 0, 2131, 0, 0,
	1610, 1611, 1611, 0, 2029, 0, 2190, 0, 2197, 2198,
	0, 2022, 0, 2231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 0, 0, 2065, 2068,
	2071, 2074, 0, 0, 0, 0, 2054, 0, 0, 0,
	2058, 1824, 1810, 0, 1852, 1850, 1851, 1845, 1852, 1849,
	1802, 0, 1801, 0, 2080, 0, 2082, 2084, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 1967, 1968, 1988, 2087,
	2219, 2220, 0, 0, 0, 0, 0, 0, 2093, 0,
	2225, 2094, 2096, 1598, 0, 1591, 0, 1656, 1645, 1742,
	0, 2246, 1712, 1658, 1660, 2247, 2285, 1645, 1645, 0,
	2194, 0, 0, 1703, 0, 0, 0, 1705, 1676, 0,
	0, 1670, 0, 1664, 1665, 1666, 1667, 1668, 1669, 1677,
	1211, 1707, 1679, 1683, 2313, 0, 1709, 0, 1694, 0,
	1696, 1729, 0, 1688, 1691, 0, 0, 2328, 1743, 0,
	370, 376, 377, 371, 372, 373, 374, 622, 0, 0,
	0, 0, 0, 2196, 0, 1749, 0, 1755, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 1535, 426, 517,
	205, 522, 525, 2252, 205, 531, 534, 540, 233, 0,
	686, -2, 726, 727, 729, 0, 725, 162, 1408, 0,
	0, 1350, 1352, 1356, 1362, 1365, 0, 167, 2746, 179,
	0, 1139, 0, 2286, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 2746, 205, 2746, 205, 182, 184, 187,
	0, 191, 189, 0, 1127, 0, 0, 1130, 119, 1408,
	0, 0, 122, 126, 134, 135, 138, 0, 0, 0,
	144, 0, 0, 0, 1367, 1371, 1379, 0, 0, 0,
	1238, 1239, 1242, 1248, 85, 0, 0, 0, 1375, 1377,
	1383, 97, 100, 2746, 2297, 102, 2746, 0, 1349, 0,
	0, 0, 0, 193, 124, 128, 136, 137, 139, 0,
	1385, 121, 0, 220, 0, 0, 210, 205, 2746, 0,
	212, 0, 213, 214, 227, 0, 0, 0, 1053, 1054,
	1305, 0, 1253, 1254, 0, 1265, 1259, 0, 0, 0,
	0, 0, 1387, 1388, 0, 0, 0, 1406, 1403, 1712,
	239, 0, 1712, 247, 0, 2260, 0, 263, 391, 0,
	0, 0, 0, 1089, 1193, 0, 1060, 0, 0, 0,
	464, 460, 0, 469, 475, 474, 480, -2, 0, 0,
	0, 0, -2, 0, 0, 1321, 1315, 1316, 0, 0,
	0, 0, 2746, 1495, 1501, 0, 1596, 1611, 487, 1502,
	1523, 0, 0, 0, 1512, 1508, 1505, 1743, 0, 0,
	0, 0, 0, 1736, 1739, 557, 558, 300, 0, 0,
	0, 0, 0, 325, 0, 0, 0, 1096, 1100, 0,
	2336, 2336, 0, 2290, 0, 0, 0, 0, 0, 0,
	281, 0, 284, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 0, 283, 273, 1712, 0, 0, 675, 0,
	0, 842, 0, 865, 868, 877, 879, 882, 926, 928,
	945, 955, 978, 979, 1117, 0, 1117, 0, 0, 999,
	1559, 0, 1634, 1565, 1616, 1617, 0, 1347, 0, 1877,
	1922, 0, 0, -2, 0, 0, 1926, 0, 0, 0,
	-2, 0, 0, 0, 2183, 2185, 0, 2239, 2174, 2024,
	0, 0, 0, 2028, 2012, 2013, 0, 2134, 2200, 2229,
	2233, 0, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 0,
	2279, 2314, 2318, 2107, 2108, 2112, 2293, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1847, 0, 0, 2201, 2212, 2214, 1964, 1965, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, -2, -2,
	-2, 1982, 1983, 1984, -2, -2, -2, 1989, 0, 0,
	0, 2215, 2217, 2218, 2222, 2223, 0, 2090, 2091, 2092,
	2224, 0, 1598, 1592, 1653, 0, 1741, 1657, 0, 1653,
	1653, 1605, 1701, 0, 0, 1725, 0, 1673, 0, 1674,
	0, 1706, 0, 1681, 1684, 1685, 1695, 0, 1687, 0,
	1690, 0, 2024, -2, 326, 328, 330, 0, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 625,
	626, 0, 624, 608, 0, 0, 1751, 0, 0, 1827,
	1831, 1855, 634, 635, 0, 633, 519, 528, 235, 0,
	1710, 0, 0, 0, 0, 0, 0, 206, 1137, 1174,
	0, 0, 0, 1164, 0, 0, 1180, 169, 170, 171,
	0, 0, 0, 0, 180, 0, 0, 177, 0, 186,
	190, 1124, 0, 0, 0, 0, 1355, 0, 0, 0,
	141, 142, 143, 0, 148, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 1486, 0,
	1476, 0, 0, 0, 208, 0, 0, 0, 1344, 229,
	0, 0, 0, 0, 0, 1252, 1308, 1309, 1261, 1368,
	1372, 1380, 0, 0, 0, 0, 640, 0, 645, 1405,
	0, 247, 245, 0, 248, 0, 251, 252, 0, 254,
	247, 241, 0, 0, 0, 1211, 405, 1063, 1181, 0,
	1183, 0, 1061, 0, 0, 1182, 456, 0, 463, 0,
	477, 0, 0, 1232, 0, 0, 1256, 1277, 1211, 0,
	1320, 1322, 0, 1330, 0, 0, 0, 1497, 1501, 0,
	1490, 1491, 1630, 1503, 1521, -2, 0, 0, 1611, 1529,
	1526, 1532, 1533, 0, 322, 0, 317, 319, 0, 303,
	0, 0, 1092, 1097, 0, 0, 0, 0, 0, 1514,
	1516, 0, 1036, 1039, 0, 0, 0, 0, 0, 0,
	272, 283, 1712, 309, 0, 836, 860, 936, 980, 1116,
	0, 0, 982, 0, 0, 1633, 1620, 1621, 1618, 1347,
	1924, 1928, 0, 0, 0, 1930, -2, 0, 1952, -2,
	-2, 2186, 2238, 2003, 1611, 2025, 2027, 2014, 2232, 1872,
	0, 2114, 2111, 0, 2098, 0, 2049, 2050, 0, 0,
	2053, 2055, 2056, 2057, 1811, 1804, 1803, 2211, 0, 0,
	0, 0, 2089, 1593, 0, 2103, 0, 0, 1661, 2103,
	2103, 1702, 0, 1704, 1671, 1662, 0, 2314, 1697, 1689,
	0, 0, 331, 0, 335, 336, 337, 338, 339, 340,
	0, 0, 0, 0, 0, 0, 0, 1745, 1750, 0,
	1756, 1826, 0, 236, 163, 164, 1359, 1363, 1360, 0,
	166, 0, 1138, 0, 1141, 0, 0, 0, 0, 1148,
	1165, 0, 0, 0, 0, 0, 0, 1167, 0, 1166,
	0, 0, 1197, 0, 1335, 1342, 0, -2, 0, 0,
	0, 173, 196, 0, 0, 0, 0, 199, 1409, 175,
	0, 0, 205, 205, 0, 0, 1351, 1353, 1366, 0,
	0, 0, 0, 151, 0, 0, 1369, 1373, 1381, 1376,
	1378, 1384, 0, 103, 0, 1487, 0, 0, 1386, 218,
	219, 0, 205, 0, 205, 211, 205, 1344, 0, 0,
	0, 0, 0, 0, 0, 1389, 1390, 238, 0, 0,
	0, 0, 240, 315, 247, 393, 0, 1111, 0, 1193,
	1185, 1186, 1187, 0, 1192, 1194, 0, 0, 1077, 1062,
	0, 1073, 0, 0, 1090, 1065, 0, 461, 478, 0,
	481, 0, 484, 1051, 1229, 1274, 1211, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 1499, 1501, 0, 1492,
	1493, 1523, 1629, 0, 0, 0, 1511, 1630, 0, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 285, 0, 286, 287, 288, 295, 274, 275, 677,
	679, 0, 0, 685, 1115, 0, 0, 0, 0, 1619,
	1932, -2, -2, 1953, 0, 2315, 2317, 1611, 0, 2100,
	1613, 0, 0, -2, 0, 0, 0, 1594, 1577, 0,
	1652, 1644, 1646, 1648, 2629, 2407, 2745, 1578, 1579, 1724,
	0, 1692, 332, 341, 342, 0, 344, 345, 627, 0,
	0, 1752, 0, 0, 0, 1361, 168, 0, 1142, 1143,
	2289, 1145, 0, 1147, 1149, 1150, 1151, 0, 1154, 0,
	2338, 0, 1159, 1162, 1163, 0, 0, 1176, 1198, 0,
	1207, 0, 1337, 1347, 1341, 0, 1339, 1209, 0, 172,
	198, 174, 200, 195, 0, 1344, 0, 176, 185, 0,
	0, 123, 0, 0, 2401, 154, 152, 150, 101, 1348,
	125, 0, 220, 228, 1343, 230, 215, 205, 0, 1370,
	1374, 1382, 0, 1397, 1398, 1399, 1400, 0, 0, 0,
	0, 249, 0, 250, 253, 0, 0, 1126, 0, 1064,
	1184, 0, 1195, 1196, 1067, 0, 1066, 0, 0, 0,
	0, 0, 462, 465, 0, 468, 0, 0, 0, 0,
	0, 1323, 1321, 0, 1329, 0, 0, 0, 1475, 0,
	0, 1494, 1495, 485, 1517, 0, 0, 1523, 1534, 302,
	0, 0, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1099, 1209, 0, 0, 1173, 0, 307, 282,
	0, 681, 0, 683, 0, 981, 983, 0, 0, 2026,
	2118, 0, 0, 2051, 2052, -2, 0, 1992, 2102, 2104,
	0, 0, 0, 0, 0, 1663, 343, 628, 1746, 636,
	1357, 0, 1364, 1140, 1144, 0, 0, 0, 1155, 1215,
	0, 0, 1232, 1232, 1168, 0, 0, 1201, 1202, 1111,
	0, 1203, 1204, 1205, 1336, 1622, 1342, 1111, 0, 0,
	197, 202, 0, 0, 0, 0, 0, 0, 0, 209,
	231, 1344, 0, 1401, 1402, 0, 0, 246, 267, 0,
	1275, 1065, 1125, 0, 0, 1075, 0, 1078, 0, 1074,
	1071, 1072, 1063, 0, 466, 467, 482, 0, 483, 0,
	1278, 0, 0, 1330, 0, 0, 1482, 1474, 1501, 1496,
	1497, 1743, 1520, 1524, 0, 0, 1207, 1209, 1122, 0,
	680, 0, 0, 991, 992, 0, 0, 0, 0, 2113,
	1614, 1993, 0, 0, 1647, 1649, 1650, 1651, 1358, 0,
	0, 1153, 1220, 0, 0, 0, 0, 0, 1169, 1199,
	1200, 1122, 0, 1340, 1338, 1178, 0, 1211, 178, 0,
	1209, 0, 1131, 0, 0, 1134, 0, 0, 155, 2401,
	153, 0, 205, 1394, 205, 0, 270, 0, 261, 259,
	260, 1067, 0, 0, 1189, 1191, 0, 1079, 1111, 1077,
	479, 1276, 1313, 1209, 0, 1207, 0, 1489, 1501, 1483,
	1484, 0, 1499, 0, 325, 325, 1111, 1207, 1065, 1121,
	325, 682, 684, 2110, 2130, 2119, -2, 2702, 2408, 0,
	2130, 2130, 2105, 2106, 0, 0, 1156, 1216, 1217, 0,
	1212, 1213, 1214, 2337, 1157, 1158, 1160, 1161, 1197, 0,
	0, 1215, 201, 1111, 1128, 0, 0, 1129, 0, 0,
	158, 0, 160, 232, 1392, 0, 1395, 0, 255, 0,
	0, 1059, 0, 1188, 0, 0, 0, 0, 1126, 1067,
	1207, 0, 1111, 0, 1478, 1488, 0, 1498, 1475, 0,
	304, 305, 1122, 1111, 1743, 0, 306, 2115, 0, 0,
	2121, 2122, 2123, 2124, 2125, 2116, 2117, 1146, 0, 1218,
	0, 1219, 0, 0, 0, 1743, 1206, 0, 1220, 183,
	1132, 0, 1135, 0, 156, 0, 0, 0, 265, 266,
	1056, 1058, 0, 1190, 1068, 0, 1070, 1065, 1076, 1111,
	0, 1122, 0, 1471, 1477, 1481, 2298, 1482, 1518, 0,
	1065, 1122, 1172, 0, 2127, 2128, 0, 0, 0, 1221,
	0, 1224, 1225, 0, 1222, 1177, 0, 1197, 0, 0,
	1393, 205, 0, 0, 1069, 1067, 1122, 1209, 1065, 1207,
	1489, 0, 1743, 1065, 2126, 2129, 2120, 1152, 1223, 1226,
	1227, 1208, 1179, 0, 0, 1396, 268, 0, 1114, 1059,
	1065, 1207, 1743, 1111, 1478, 1743, 1170, 1743, 1119, 0,
	0, 1110, 1112, 1113, 1057, 1743, 1111, 1326, 1122, 1472,
	1519, 1171, 1133, 1118, 0, 269, 1324, 1122, 1065, 0,
	1065, 1743, 0, 1743, 1327, 1119, 1325, 1136,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 597, 3, 603, 598, 3,
	608, 609, 601, 599, 613, 600, 610, 602, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 616, 3,
	589, 591, 590, 594, 612, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 606, 3, 607, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 614, 596, 615, 592,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 593, 57932, 595, 57933, 605, 57934, 611,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1626
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1695
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1707
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1791
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1823
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1847
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1877
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1885
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1909
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1913
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1922
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1934
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1939
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1958
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1973
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1982
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1987
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2001
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2012
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2022
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2032
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2041
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2052
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2058
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2084
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2089
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2180
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2223
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2226
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2232
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2467
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2471
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2474
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2499
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2803
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2936
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3045
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3082
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3091
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3097
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3102
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3112
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3117
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3140
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3148
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3208
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3224
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3258
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3294
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3310
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3327
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3328
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3444
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3460
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3464
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3469
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3488
		{
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "CREATE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "create access method")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "create cast")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplemented(sqllex, "create publication")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplemented(sqllex, "create rule")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplemented(sqllex, "create server")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3522
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3523
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3528
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3532
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3535
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3536
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3545
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3546
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3547
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3548
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3550
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3553
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			return unimplemented(sqllex, "drop server")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3555
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3557
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3569
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3683
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3718
		{

			sqlVAL.union.val = nil
		}
	case 477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DELETE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3805
		{
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3832
		{
			return helpWith(sqllex, "DROP")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3836
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3841
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4031
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4097
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4105
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4113
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4121
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4129
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "DELETE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "INSERT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4175
		{
			return helpWith(sqllex, "DELETE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			return helpWith(sqllex, "INSERT")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4210
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4243
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4333
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4348
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "GRANT")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4400
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4411
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4414
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "RESET")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "RESET")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "USE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4497
		{
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			return helpWith(sqllex, "USE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4645
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4651
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4682
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4687
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4712
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4728
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			return unimplemented(sqllex, "set from current")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4750
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4772
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = tree.Low
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = tree.Normal
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.High
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4929
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4931
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4932
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4933
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "SHOW")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4948
		{
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4949
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4952
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4961
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4971
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.str = "client_encoding"
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5004
		{
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.str = "timezone"
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5025
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5088
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5097
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5122
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5147
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5250
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5282
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = true
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = true
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = false
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5421
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5437
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5473
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5480
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5484
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = true
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = false
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5504
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5545
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = true
		}
	case 945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = false
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5582
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5589
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5597
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5608
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5630
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5640
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5644
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5658
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5663
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5668
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5673
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5681
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5691
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5695
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5697
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5701
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5741
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5749
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5780
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5784
		{
		}
	case 991:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5793
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5816
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5828
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5897
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5911
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6087
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6145
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6146
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6147
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6158
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6159
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6187
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6232
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6240
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6303
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6342
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6358
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6387
		{

			sqlVAL.union.val = nil
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6393
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.str = ""
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6403
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = nil
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6426
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6430
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6456
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6470
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6485
		{
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6542
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6568
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6582
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6586
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6592
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6608
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6613
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.str = ""
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6756
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6860
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{

			sqlVAL.union.val = true
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = false
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6915
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6919
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6922
		{
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7022
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7050
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7060
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7075
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7140
		{
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7144
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7145
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7217
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7301
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7310
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7318
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7334
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7344
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7350
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7356
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7358
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7371
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7375
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7402
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7436
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.str = ""
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7456
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = true
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{

			sqlVAL.union.val = true
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = false
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7494
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7508
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7520
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7532
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7542
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7552
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = nil
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7678
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7704
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7706
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7708
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7710
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7712
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7714
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7752
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7770
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7789
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7806
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7823
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7827
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = false
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = true
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = false
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = true
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = false
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7887
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7893
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7901
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.str = ""
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.str = ""
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7960
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7966
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8191
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8197
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8209
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8215
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8229
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8235
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8294
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = true
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = false
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = tree.Types
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8354
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8358
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8383
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8387
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8398
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8446
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8454
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8483
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8500
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8524
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8537
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8552
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8553
		{
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8573
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8574
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8602
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8615
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8617
		{
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8710
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.str = ""
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8733
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8738
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{

		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8770
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.str = ""
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.str = ""
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.str = ""
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.str = ""
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8825
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8838
		{
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8839
		{
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8868
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8886
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8890
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8899
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8948
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8975
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8979
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9049
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9070
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9085
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9229
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9264
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = true
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = false
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9441
		{
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = nil
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9455
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = true
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = false
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = false
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = true
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9485
		{
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9489
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9551
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9556
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9582
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9615
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9670
		{
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9674
		{
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9709
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9711
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9741
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9743
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9758
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9780
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9842
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9883
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9893
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9928
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9939
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9969
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10002
		{
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10004
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = nil
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = true
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = false
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.str = tree.AstFull
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.str = tree.AstRight
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.str = tree.AstInner
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10122
		{
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.str = tree.AstHash
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.str = ""
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10191
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10196
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10214
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10226
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10236
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = true
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = false
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = true
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = false
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10285
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10298
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10306
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10307
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10325
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10335
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10348
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10355
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10404
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10417
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = types.Geography
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10466
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10474
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10500
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10508
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = nil
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = types.Int2
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = types.Int
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = types.Float4
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = types.Float
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10559
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10567
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = types.Bool
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10581
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = types.Float
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10600
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10606
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10628
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = types.String
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = true
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = false
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = types.Date
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10677
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10685
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10699
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10708
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10716
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10733
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = true
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = false
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = false
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = types.Interval
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10757
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = nil
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10886
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10946
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11095
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11216
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11282
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11304
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11412
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11420
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11516
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11521
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11547
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11556
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11571
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11605
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11616
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11617
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11632
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11641
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11707
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11846
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11864
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11873
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11878
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11888
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11907
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11908
		{
			return unimplemented(sqllex, "treat")
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11929
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11934
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11981
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.str = ""
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12070
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12083
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12151
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12180
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12256
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12537
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12596
		{
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12597
		{
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12669
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12677
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12750
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12766
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12775
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12786
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12795
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12803
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12820
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13039
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13052
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13059
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.str = ""
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
