// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:873
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13635

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1578,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	261, 410,
	-2, 0,
	-1, 74,
	243, 243,
	517, 243,
	-2, 0,
	-1, 87,
	231, 1314,
	245, 1314,
	261, 406,
	391, 406,
	402, 1068,
	441, 406,
	454, 1068,
	501, 1068,
	528, 406,
	554, 1068,
	-2, 0,
	-1, 93,
	133, 1578,
	238, 1578,
	539, 1578,
	540, 1578,
	-2, 0,
	-1, 109,
	151, 1549,
	170, 1549,
	183, 1549,
	241, 1549,
	274, 1549,
	342, 1549,
	352, 1549,
	534, 1549,
	-2, 1520,
	-1, 150,
	159, 917,
	260, 917,
	394, 878,
	459, 878,
	500, 878,
	520, 917,
	522, 878,
	-2, 0,
	-1, 154,
	4, 1580,
	21, 1580,
	22, 1580,
	23, 1580,
	24, 1580,
	25, 1580,
	26, 1580,
	27, 1580,
	29, 1580,
	30, 1580,
	36, 1580,
	41, 1580,
	42, 1580,
	44, 1580,
	45, 1580,
	46, 1580,
	47, 1580,
	48, 1580,
	49, 1580,
	50, 1580,
	51, 1580,
	53, 1580,
	54, 1580,
	55, 1580,
	56, 1580,
	58, 1580,
	59, 1580,
	60, 1580,
	61, 1580,
	62, 1580,
	63, 1580,
	64, 1580,
	68, 1580,
	69, 1580,
	70, 1580,
	71, 1580,
	73, 1580,
	74, 1580,
	75, 1580,
	79, 1580,
	80, 1580,
	81, 1580,
	82, 1580,
	83, 1580,
	84, 1580,
	85, 1580,
	88, 1580,
	89, 1580,
	90, 1580,
	91, 1580,
	92, 1580,
	94, 1580,
	96, 1580,
	97, 1580,
	98, 1580,
	99, 1580,
	100, 1580,
	101, 1580,
	103, 1580,
	104, 1580,
	105, 1580,
	107, 1580,
	108, 1580,
	109, 1580,
	117, 1580,
	118, 1580,
	119, 1580,
	120, 1580,
	121, 1580,
	123, 1580,
	124, 1580,
	125, 1580,
	126, 1580,
	128, 1580,
	129, 1580,
	130, 1580,
	132, 1580,
	133, 1580,
	134, 1580,
	136, 1580,
	137, 1580,
	138, 1580,
	141, 1580,
	142, 1580,
	143, 1580,
	145, 1580,
	146, 1580,
	148, 1580,
	149, 1580,
	150, 1580,
	152, 1580,
	153, 1580,
	154, 1580,
	155, 1580,
	156, 1580,
	157, 1580,
	158, 1580,
	159, 1580,
	160, 1580,
	161, 1580,
	162, 1580,
	163, 1580,
	164, 1580,
	165, 1580,
	166, 1580,
	167, 1580,
	169, 1580,
	175, 1580,
	176, 1580,
	177, 1580,
	178, 1580,
	182, 1580,
	184, 1580,
	185, 1580,
	189, 1580,
	190, 1580,
	191, 1580,
	192, 1580,
	193, 1580,
	194, 1580,
	195, 1580,
	196, 1580,
	197, 1580,
	198, 1580,
	199, 1580,
	200, 1580,
	201, 1580,
	202, 1580,
	204, 1580,
	205, 1580,
	207, 1580,
	208, 1580,
	210, 1580,
	211, 1580,
	212, 1580,
	213, 1580,
	214, 1580,
	215, 1580,
	216, 1580,
	217, 1580,
	218, 1580,
	220, 1580,
	221, 1580,
	223, 1580,
	224, 1580,
	225, 1580,
	226, 1580,
	227, 1580,
	231, 1580,
	232, 1580,
	233, 1580,
	234, 1580,
	235, 1580,
	238, 1580,
	239, 1580,
	240, 1580,
	242, 1580,
	244, 1580,
	245, 1580,
	247, 1580,
	249, 1580,
	250, 1580,
	251, 1580,
	253, 1580,
	257, 1580,
	258, 1580,
	259, 1580,
	260, 1580,
	261, 1580,
	262, 1580,
	264, 1580,
	265, 1580,
	266, 1580,
	268, 1580,
	269, 1580,
	271, 1580,
	272, 1580,
	275, 1580,
	279, 1580,
	280, 1580,
	281, 1580,
	284, 1580,
	285, 1580,
	286, 1580,
	287, 1580,
	289, 1580,
	290, 1580,
	291, 1580,
	292, 1580,
	293, 1580,
	294, 1580,
	295, 1580,
	296, 1580,
	297, 1580,
	298, 1580,
	299, 1580,
	300, 1580,
	301, 1580,
	302, 1580,
	303, 1580,
	304, 1580,
	305, 1580,
	306, 1580,
	307, 1580,
	308, 1580,
	309, 1580,
	310, 1580,
	312, 1580,
	314, 1580,
	315, 1580,
	316, 1580,
	317, 1580,
	318, 1580,
	319, 1580,
	320, 1580,
	321, 1580,
	322, 1580,
	323, 1580,
	324, 1580,
	325, 1580,
	326, 1580,
	327, 1580,
	329, 1580,
	330, 1580,
	332, 1580,
	334, 1580,
	335, 1580,
	337, 1580,
	338, 1580,
	339, 1580,
	340, 1580,
	341, 1580,
	344, 1580,
	347, 1580,
	348, 1580,
	349, 1580,
	350, 1580,
	353, 1580,
	354, 1580,
	355, 1580,
	357, 1580,
	359, 1580,
	360, 1580,
	361, 1580,
	362, 1580,
	363, 1580,
	364, 1580,
	365, 1580,
	366, 1580,
	367, 1580,
	368, 1580,
	369, 1580,
	370, 1580,
	371, 1580,
	373, 1580,
	374, 1580,
	375, 1580,
	376, 1580,
	377, 1580,
	378, 1580,
	379, 1580,
	380, 1580,
	381, 1580,
	382, 1580,
	383, 1580,
	384, 1580,
	385, 1580,
	386, 1580,
	387, 1580,
	389, 1580,
	390, 1580,
	392, 1580,
	393, 1580,
	394, 1580,
	395, 1580,
	396, 1580,
	397, 1580,
	398, 1580,
	399, 1580,
	400, 1580,
	401, 1580,
	402, 1580,
	403, 1580,
	404, 1580,
	406, 1580,
	408, 1580,
	409, 1580,
	410, 1580,
	416, 1580,
	418, 1580,
	419, 1580,
	420, 1580,
	421, 1580,
	422, 1580,
	423, 1580,
	424, 1580,
	425, 1580,
	426, 1580,
	427, 1580,
	429, 1580,
	430, 1580,
	431, 1580,
	433, 1580,
	434, 1580,
	435, 1580,
	436, 1580,
	437, 1580,
	438, 1580,
	439, 1580,
	441, 1580,
	442, 1580,
	443, 1580,
	444, 1580,
	445, 1580,
	446, 1580,
	447, 1580,
	448, 1580,
	449, 1580,
	450, 1580,
	451, 1580,
	452, 1580,
	454, 1580,
	455, 1580,
	456, 1580,
	457, 1580,
	458, 1580,
	459, 1580,
	461, 1580,
	462, 1580,
	463, 1580,
	464, 1580,
	465, 1580,
	466, 1580,
	468, 1580,
	469, 1580,
	470, 1580,
	471, 1580,
	472, 1580,
	473, 1580,
	474, 1580,
	475, 1580,
	477, 1580,
	479, 1580,
	480, 1580,
	481, 1580,
	482, 1580,
	483, 1580,
	484, 1580,
	485, 1580,
	486, 1580,
	487, 1580,
	488, 1580,
	489, 1580,
	490, 1580,
	491, 1580,
	492, 1580,
	493, 1580,
	494, 1580,
	496, 1580,
	497, 1580,
	499, 1580,
	500, 1580,
	502, 1580,
	503, 1580,
	504, 1580,
	505, 1580,
	506, 1580,
	507, 1580,
	508, 1580,
	509, 1580,
	510, 1580,
	512, 1580,
	513, 1580,
	514, 1580,
	515, 1580,
	516, 1580,
	518, 1580,
	520, 1580,
	521, 1580,
	522, 1580,
	523, 1580,
	524, 1580,
	525, 1580,
	527, 1580,
	528, 1580,
	529, 1580,
	530, 1580,
	532, 1580,
	533, 1580,
	536, 1580,
	537, 1580,
	538, 1580,
	539, 1580,
	540, 1580,
	541, 1580,
	542, 1580,
	544, 1580,
	547, 1580,
	548, 1580,
	549, 1580,
	550, 1580,
	551, 1580,
	552, 1580,
	554, 1580,
	555, 1580,
	556, 1580,
	557, 1580,
	559, 1580,
	564, 1580,
	565, 1580,
	566, 1580,
	567, 1580,
	568, 1580,
	569, 1580,
	-2, 0,
	-1, 155,
	1, 1431,
	131, 1431,
	249, 1431,
	331, 1431,
	389, 1431,
	398, 1431,
	573, 1431,
	602, 1431,
	-2, 0,
	-1, 157,
	1, 1431,
	602, 1431,
	-2, 0,
	-1, 158,
	1, 1431,
	602, 1431,
	-2, 0,
	-1, 159,
	1, 1431,
	517, 1431,
	602, 1431,
	-2, 0,
	-1, 188,
	151, 1548,
	170, 1548,
	183, 1548,
	241, 1548,
	274, 1548,
	342, 1548,
	352, 1548,
	534, 1548,
	-2, 1523,
	-1, 236,
	4, 1587,
	5, 1587,
	6, 1587,
	7, 1587,
	8, 1587,
	9, 1587,
	10, 1587,
	21, 1587,
	22, 1587,
	23, 1587,
	24, 1587,
	25, 1587,
	26, 1587,
	27, 1587,
	29, 1587,
	30, 1587,
	36, 1587,
	37, 1587,
	41, 1587,
	42, 1587,
	43, 1587,
	44, 1587,
	45, 1587,
	46, 1587,
	47, 1587,
	48, 1587,
	49, 1587,
	50, 1587,
	51, 1587,
	53, 1587,
	54, 1587,
	55, 1587,
	56, 1587,
	58, 1587,
	59, 1587,
	60, 1587,
	61, 1587,
	62, 1587,
	63, 1587,
	64, 1587,
	65, 1587,
	66, 1587,
	67, 1587,
	68, 1587,
	69, 1587,
	70, 1587,
	71, 1587,
	73, 1587,
	74, 1587,
	75, 1587,
	77, 1587,
	79, 1587,
	80, 1587,
	81, 1587,
	82, 1587,
	83, 1587,
	84, 1587,
	85, 1587,
	88, 1587,
	89, 1587,
	90, 1587,
	91, 1587,
	92, 1587,
	94, 1587,
	96, 1587,
	97, 1587,
	98, 1587,
	99, 1587,
	100, 1587,
	101, 1587,
	103, 1587,
	104, 1587,
	105, 1587,
	106, 1587,
	107, 1587,
	108, 1587,
	109, 1587,
	110, 1587,
	111, 1587,
	112, 1587,
	113, 1587,
	114, 1587,
	115, 1587,
	116, 1587,
	117, 1587,
	118, 1587,
	119, 1587,
	120, 1587,
	121, 1587,
	122, 1587,
	123, 1587,
	124, 1587,
	125, 1587,
	126, 1587,
	127, 1587,
	128, 1587,
	129, 1587,
	130, 1587,
	132, 1587,
	133, 1587,
	134, 1587,
	136, 1587,
	137, 1587,
	138, 1587,
	141, 1587,
	142, 1587,
	143, 1587,
	145, 1587,
	146, 1587,
	148, 1587,
	149, 1587,
	150, 1587,
	152, 1587,
	153, 1587,
	154, 1587,
	155, 1587,
	156, 1587,
	157, 1587,
	158, 1587,
	159, 1587,
	160, 1587,
	161, 1587,
	162, 1587,
	163, 1587,
	164, 1587,
	165, 1587,
	166, 1587,
	167, 1587,
	168, 1587,
	169, 1587,
	175, 1587,
	176, 1587,
	177, 1587,
	178, 1587,
	182, 1587,
	184, 1587,
	185, 1587,
	188, 1587,
	189, 1587,
	190, 1587,
	191, 1587,
	192, 1587,
	193, 1587,
	194, 1587,
	195, 1587,
	196, 1587,
	197, 1587,
	198, 1587,
	199, 1587,
	200, 1587,
	201, 1587,
	202, 1587,
	204, 1587,
	205, 1587,
	207, 1587,
	208, 1587,
	210, 1587,
	211, 1587,
	212, 1587,
	213, 1587,
	214, 1587,
	215, 1587,
	216, 1587,
	217, 1587,
	218, 1587,
	219, 1587,
	220, 1587,
	221, 1587,
	223, 1587,
	224, 1587,
	225, 1587,
	226, 1587,
	227, 1587,
	231, 1587,
	232, 1587,
	233, 1587,
	234, 1587,
	235, 1587,
	237, 1587,
	238, 1587,
	239, 1587,
	240, 1587,
	242, 1587,
	244, 1587,
	245, 1587,
	246, 1587,
	247, 1587,
	248, 1587,
	249, 1587,
	250, 1587,
	251, 1587,
	252, 1587,
	253, 1587,
	257, 1587,
	258, 1587,
	259, 1587,
	260, 1587,
	261, 1587,
	262, 1587,
	264, 1587,
	265, 1587,
	266, 1587,
	268, 1587,
	269, 1587,
	270, 1587,
	271, 1587,
	272, 1587,
	273, 1587,
	275, 1587,
	279, 1587,
	280, 1587,
	281, 1587,
	282, 1587,
	283, 1587,
	284, 1587,
	285, 1587,
	286, 1587,
	287, 1587,
	289, 1587,
	290, 1587,
	291, 1587,
	292, 1587,
	293, 1587,
	294, 1587,
	295, 1587,
	296, 1587,
	297, 1587,
	298, 1587,
	299, 1587,
	300, 1587,
	301, 1587,
	302, 1587,
	303, 1587,
	304, 1587,
	305, 1587,
	306, 1587,
	307, 1587,
	308, 1587,
	309, 1587,
	310, 1587,
	312, 1587,
	313, 1587,
	314, 1587,
	315, 1587,
	316, 1587,
	317, 1587,
	318, 1587,
	319, 1587,
	320, 1587,
	321, 1587,
	322, 1587,
	323, 1587,
	324, 1587,
	325, 1587,
	326, 1587,
	327, 1587,
	328, 1587,
	329, 1587,
	330, 1587,
	331, 1587,
	332, 1587,
	333, 1587,
	334, 1587,
	335, 1587,
	336, 1587,
	337, 1587,
	338, 1587,
	339, 1587,
	340, 1587,
	341, 1587,
	344, 1587,
	348, 1587,
	349, 1587,
	350, 1587,
	353, 1587,
	354, 1587,
	355, 1587,
	356, 1587,
	357, 1587,
	358, 1587,
	359, 1587,
	360, 1587,
	361, 1587,
	362, 1587,
	363, 1587,
	364, 1587,
	365, 1587,
	366, 1587,
	367, 1587,
	368, 1587,
	369, 1587,
	370, 1587,
	371, 1587,
	373, 1587,
	374, 1587,
	375, 1587,
	376, 1587,
	377, 1587,
	378, 1587,
	379, 1587,
	380, 1587,
	381, 1587,
	382, 1587,
	383, 1587,
	384, 1587,
	385, 1587,
	386, 1587,
	387, 1587,
	389, 1587,
	390, 1587,
	392, 1587,
	393, 1587,
	394, 1587,
	395, 1587,
	396, 1587,
	397, 1587,
	398, 1587,
	399, 1587,
	400, 1587,
	401, 1587,
	402, 1587,
	403, 1587,
	404, 1587,
	406, 1587,
	408, 1587,
	409, 1587,
	410, 1587,
	416, 1587,
	418, 1587,
	419, 1587,
	420, 1587,
	421, 1587,
	422, 1587,
	423, 1587,
	424, 1587,
	425, 1587,
	426, 1587,
	427, 1587,
	429, 1587,
	430, 1587,
	431, 1587,
	432, 1587,
	433, 1587,
	434, 1587,
	435, 1587,
	436, 1587,
	437, 1587,
	438, 1587,
	439, 1587,
	441, 1587,
	442, 1587,
	443, 1587,
	444, 1587,
	445, 1587,
	446, 1587,
	447, 1587,
	448, 1587,
	449, 1587,
	450, 1587,
	451, 1587,
	452, 1587,
	454, 1587,
	455, 1587,
	456, 1587,
	457, 1587,
	458, 1587,
	459, 1587,
	460, 1587,
	461, 1587,
	462, 1587,
	463, 1587,
	464, 1587,
	465, 1587,
	466, 1587,
	467, 1587,
	468, 1587,
	469, 1587,
	470, 1587,
	471, 1587,
	472, 1587,
	473, 1587,
	474, 1587,
	475, 1587,
	477, 1587,
	479, 1587,
	480, 1587,
	481, 1587,
	482, 1587,
	483, 1587,
	484, 1587,
	485, 1587,
	486, 1587,
	487, 1587,
	488, 1587,
	489, 1587,
	490, 1587,
	491, 1587,
	492, 1587,
	493, 1587,
	494, 1587,
	496, 1587,
	497, 1587,
	498, 1587,
	499, 1587,
	500, 1587,
	502, 1587,
	503, 1587,
	504, 1587,
	505, 1587,
	506, 1587,
	507, 1587,
	508, 1587,
	509, 1587,
	510, 1587,
	512, 1587,
	513, 1587,
	514, 1587,
	515, 1587,
	516, 1587,
	518, 1587,
	520, 1587,
	521, 1587,
	522, 1587,
	523, 1587,
	524, 1587,
	525, 1587,
	526, 1587,
	527, 1587,
	528, 1587,
	529, 1587,
	530, 1587,
	532, 1587,
	533, 1587,
	535, 1587,
	536, 1587,
	537, 1587,
	538, 1587,
	539, 1587,
	540, 1587,
	541, 1587,
	542, 1587,
	543, 1587,
	544, 1587,
	547, 1587,
	548, 1587,
	549, 1587,
	550, 1587,
	551, 1587,
	552, 1587,
	554, 1587,
	555, 1587,
	556, 1587,
	557, 1587,
	559, 1587,
	564, 1587,
	565, 1587,
	566, 1587,
	567, 1587,
	568, 1587,
	569, 1587,
	570, 1587,
	583, 1587,
	590, 1587,
	591, 1587,
	592, 1587,
	599, 1587,
	603, 1587,
	-2, 0,
	-1, 743,
	4, 1312,
	21, 1312,
	22, 1312,
	23, 1312,
	24, 1312,
	25, 1312,
	26, 1312,
	27, 1312,
	29, 1312,
	30, 1312,
	36, 1312,
	41, 1312,
	42, 1312,
	44, 1312,
	45, 1312,
	46, 1312,
	47, 1312,
	48, 1312,
	49, 1312,
	50, 1312,
	51, 1312,
	53, 1312,
	54, 1312,
	55, 1312,
	56, 1312,
	58, 1312,
	59, 1312,
	60, 1312,
	61, 1312,
	62, 1312,
	63, 1312,
	64, 1312,
	68, 1312,
	69, 1312,
	70, 1312,
	71, 1312,
	73, 1312,
	74, 1312,
	75, 1312,
	79, 1312,
	80, 1312,
	81, 1312,
	82, 1312,
	83, 1312,
	84, 1312,
	85, 1312,
	88, 1312,
	89, 1312,
	90, 1312,
	91, 1312,
	92, 1312,
	94, 1312,
	96, 1312,
	97, 1312,
	98, 1312,
	99, 1312,
	100, 1312,
	101, 1312,
	103, 1312,
	104, 1312,
	105, 1312,
	107, 1312,
	108, 1312,
	109, 1312,
	117, 1312,
	118, 1312,
	119, 1312,
	120, 1312,
	121, 1312,
	123, 1312,
	124, 1312,
	125, 1312,
	126, 1312,
	128, 1312,
	129, 1312,
	130, 1312,
	132, 1312,
	133, 1312,
	134, 1312,
	136, 1312,
	137, 1312,
	138, 1312,
	141, 1312,
	142, 1312,
	143, 1312,
	145, 1312,
	146, 1312,
	148, 1312,
	149, 1312,
	150, 1312,
	152, 1312,
	153, 1312,
	154, 1312,
	155, 1312,
	156, 1312,
	157, 1312,
	158, 1312,
	159, 1312,
	160, 1312,
	161, 1312,
	162, 1312,
	163, 1312,
	164, 1312,
	165, 1312,
	166, 1312,
	167, 1312,
	169, 1312,
	175, 1312,
	176, 1312,
	177, 1312,
	178, 1312,
	182, 1312,
	184, 1312,
	185, 1312,
	189, 1312,
	190, 1312,
	191, 1312,
	192, 1312,
	193, 1312,
	194, 1312,
	195, 1312,
	196, 1312,
	197, 1312,
	198, 1312,
	199, 1312,
	200, 1312,
	201, 1312,
	202, 1312,
	204, 1312,
	205, 1312,
	207, 1312,
	208, 1312,
	210, 1312,
	211, 1312,
	212, 1312,
	213, 1312,
	214, 1312,
	215, 1312,
	216, 1312,
	217, 1312,
	218, 1312,
	220, 1312,
	221, 1312,
	223, 1312,
	224, 1312,
	225, 1312,
	226, 1312,
	227, 1312,
	231, 1312,
	232, 1312,
	233, 1312,
	234, 1312,
	235, 1312,
	238, 1312,
	239, 1312,
	240, 1312,
	242, 1312,
	244, 1312,
	245, 1312,
	247, 1312,
	249, 1312,
	250, 1312,
	251, 1312,
	253, 1312,
	257, 1312,
	258, 1312,
	259, 1312,
	260, 1312,
	261, 1312,
	262, 1312,
	264, 1312,
	265, 1312,
	266, 1312,
	268, 1312,
	269, 1312,
	271, 1312,
	272, 1312,
	275, 1312,
	279, 1312,
	280, 1312,
	281, 1312,
	284, 1312,
	285, 1312,
	286, 1312,
	287, 1312,
	289, 1312,
	290, 1312,
	291, 1312,
	292, 1312,
	293, 1312,
	294, 1312,
	295, 1312,
	296, 1312,
	297, 1312,
	298, 1312,
	299, 1312,
	300, 1312,
	301, 1312,
	302, 1312,
	303, 1312,
	304, 1312,
	305, 1312,
	306, 1312,
	307, 1312,
	308, 1312,
	309, 1312,
	310, 1312,
	312, 1312,
	314, 1312,
	315, 1312,
	316, 1312,
	317, 1312,
	318, 1312,
	319, 1312,
	320, 1312,
	321, 1312,
	322, 1312,
	323, 1312,
	324, 1312,
	325, 1312,
	326, 1312,
	327, 1312,
	329, 1312,
	330, 1312,
	332, 1312,
	334, 1312,
	335, 1312,
	337, 1312,
	338, 1312,
	339, 1312,
	340, 1312,
	341, 1312,
	344, 1312,
	348, 1312,
	349, 1312,
	350, 1312,
	353, 1312,
	354, 1312,
	355, 1312,
	357, 1312,
	359, 1312,
	360, 1312,
	361, 1312,
	362, 1312,
	363, 1312,
	364, 1312,
	365, 1312,
	366, 1312,
	367, 1312,
	368, 1312,
	369, 1312,
	370, 1312,
	371, 1312,
	373, 1312,
	374, 1312,
	375, 1312,
	376, 1312,
	377, 1312,
	378, 1312,
	379, 1312,
	380, 1312,
	381, 1312,
	382, 1312,
	383, 1312,
	384, 1312,
	385, 1312,
	386, 1312,
	387, 1312,
	389, 1312,
	390, 1312,
	392, 1312,
	393, 1312,
	394, 1312,
	395, 1312,
	396, 1312,
	397, 1312,
	398, 1312,
	399, 1312,
	400, 1312,
	401, 1312,
	402, 1312,
	403, 1312,
	404, 1312,
	406, 1312,
	408, 1312,
	409, 1312,
	410, 1312,
	416, 1312,
	418, 1312,
	419, 1312,
	420, 1312,
	421, 1312,
	422, 1312,
	423, 1312,
	424, 1312,
	425, 1312,
	426, 1312,
	427, 1312,
	429, 1312,
	430, 1312,
	431, 1312,
	433, 1312,
	434, 1312,
	435, 1312,
	436, 1312,
	437, 1312,
	438, 1312,
	439, 1312,
	441, 1312,
	442, 1312,
	443, 1312,
	444, 1312,
	445, 1312,
	446, 1312,
	447, 1312,
	448, 1312,
	449, 1312,
	450, 1312,
	451, 1312,
	452, 1312,
	454, 1312,
	455, 1312,
	456, 1312,
	457, 1312,
	458, 1312,
	459, 1312,
	461, 1312,
	462, 1312,
	463, 1312,
	464, 1312,
	465, 1312,
	466, 1312,
	468, 1312,
	469, 1312,
	470, 1312,
	471, 1312,
	472, 1312,
	473, 1312,
	474, 1312,
	475, 1312,
	477, 1312,
	479, 1312,
	480, 1312,
	481, 1312,
	482, 1312,
	483, 1312,
	484, 1312,
	485, 1312,
	486, 1312,
	487, 1312,
	488, 1312,
	489, 1312,
	490, 1312,
	491, 1312,
	492, 1312,
	493, 1312,
	494, 1312,
	496, 1312,
	497, 1312,
	499, 1312,
	500, 1312,
	502, 1312,
	503, 1312,
	504, 1312,
	505, 1312,
	506, 1312,
	507, 1312,
	508, 1312,
	509, 1312,
	510, 1312,
	512, 1312,
	513, 1312,
	514, 1312,
	515, 1312,
	516, 1312,
	518, 1312,
	520, 1312,
	521, 1312,
	522, 1312,
	523, 1312,
	524, 1312,
	525, 1312,
	527, 1312,
	528, 1312,
	529, 1312,
	530, 1312,
	532, 1312,
	533, 1312,
	536, 1312,
	537, 1312,
	538, 1312,
	539, 1312,
	540, 1312,
	541, 1312,
	542, 1312,
	544, 1312,
	547, 1312,
	548, 1312,
	549, 1312,
	550, 1312,
	551, 1312,
	552, 1312,
	554, 1312,
	555, 1312,
	556, 1312,
	557, 1312,
	559, 1312,
	564, 1312,
	565, 1312,
	566, 1312,
	567, 1312,
	568, 1312,
	569, 1312,
	-2, 0,
	-1, 762,
	187, 2376,
	517, 2376,
	582, 2376,
	601, 2376,
	-2, 0,
	-1, 763,
	187, 2363,
	517, 2363,
	582, 2363,
	601, 2363,
	-2, 0,
	-1, 765,
	187, 2622,
	517, 2622,
	582, 2622,
	601, 2622,
	-2, 0,
	-1, 768,
	187, 2484,
	517, 2484,
	582, 2484,
	601, 2484,
	-2, 0,
	-1, 769,
	187, 2663,
	517, 2663,
	582, 2663,
	601, 2663,
	-2, 0,
	-1, 777,
	187, 2511,
	517, 2511,
	582, 2511,
	601, 2511,
	-2, 704,
	-1, 812,
	601, 2312,
	604, 2312,
	-2, 997,
	-1, 813,
	601, 2314,
	604, 2314,
	-2, 998,
	-1, 814,
	601, 2313,
	604, 2313,
	-2, 999,
	-1, 815,
	604, 2238,
	-2, 1000,
	-1, 838,
	183, 264,
	-2, 0,
	-1, 862,
	43, 2285,
	-2, 0,
	-1, 863,
	554, 1290,
	-2, 1069,
	-1, 879,
	4, 1718,
	21, 1718,
	22, 1718,
	23, 1718,
	24, 1718,
	25, 1718,
	26, 1718,
	27, 1718,
	29, 1718,
	30, 1718,
	36, 1718,
	41, 1718,
	42, 1718,
	44, 1718,
	45, 1718,
	46, 1718,
	47, 1718,
	48, 1718,
	49, 1718,
	50, 1718,
	51, 1718,
	53, 1718,
	54, 1718,
	55, 1718,
	56, 1718,
	58, 1718,
	59, 1718,
	60, 1718,
	61, 1718,
	62, 1718,
	63, 1718,
	64, 1718,
	68, 1718,
	69, 1718,
	70, 1718,
	71, 1718,
	73, 1718,
	74, 1718,
	75, 1718,
	79, 1718,
	80, 1718,
	81, 1718,
	82, 1718,
	83, 1718,
	84, 1718,
	85, 1718,
	88, 1718,
	89, 1718,
	90, 1718,
	91, 1718,
	92, 1718,
	94, 1718,
	96, 1718,
	97, 1718,
	98, 1718,
	99, 1718,
	100, 1718,
	101, 1718,
	103, 1718,
	104, 1718,
	105, 1718,
	107, 1718,
	108, 1718,
	109, 1718,
	117, 1718,
	118, 1718,
	119, 1718,
	120, 1718,
	121, 1718,
	123, 1718,
	124, 1718,
	125, 1718,
	126, 1718,
	128, 1718,
	129, 1718,
	130, 1718,
	132, 1718,
	133, 1718,
	134, 1718,
	136, 1718,
	137, 1718,
	138, 1718,
	141, 1718,
	142, 1718,
	143, 1718,
	145, 1718,
	146, 1718,
	148, 1718,
	149, 1718,
	150, 1718,
	152, 1718,
	153, 1718,
	154, 1718,
	155, 1718,
	156, 1718,
	157, 1718,
	158, 1718,
	159, 1718,
	160, 1718,
	161, 1718,
	162, 1718,
	163, 1718,
	164, 1718,
	165, 1718,
	166, 1718,
	167, 1718,
	169, 1718,
	175, 1718,
	176, 1718,
	177, 1718,
	178, 1718,
	182, 1718,
	184, 1718,
	185, 1718,
	189, 1718,
	190, 1718,
	191, 1718,
	192, 1718,
	193, 1718,
	194, 1718,
	195, 1718,
	196, 1718,
	197, 1718,
	198, 1718,
	199, 1718,
	200, 1718,
	201, 1718,
	202, 1718,
	204, 1718,
	205, 1718,
	207, 1718,
	208, 1718,
	210, 1718,
	211, 1718,
	212, 1718,
	213, 1718,
	214, 1718,
	215, 1718,
	216, 1718,
	217, 1718,
	218, 1718,
	220, 1718,
	221, 1718,
	223, 1718,
	224, 1718,
	225, 1718,
	226, 1718,
	227, 1718,
	231, 1718,
	232, 1718,
	233, 1718,
	234, 1718,
	235, 1718,
	238, 1718,
	239, 1718,
	240, 1718,
	242, 1718,
	244, 1718,
	245, 1718,
	247, 1718,
	249, 1718,
	250, 1718,
	251, 1718,
	253, 1718,
	257, 1718,
	258, 1718,
	259, 1718,
	260, 1718,
	261, 1718,
	262, 1718,
	264, 1718,
	265, 1718,
	266, 1718,
	268, 1718,
	269, 1718,
	271, 1718,
	272, 1718,
	275, 1718,
	279, 1718,
	280, 1718,
	281, 1718,
	284, 1718,
	285, 1718,
	286, 1718,
	287, 1718,
	289, 1718,
	290, 1718,
	291, 1718,
	292, 1718,
	293, 1718,
	294, 1718,
	295, 1718,
	296, 1718,
	297, 1718,
	298, 1718,
	299, 1718,
	300, 1718,
	301, 1718,
	302, 1718,
	303, 1718,
	304, 1718,
	305, 1718,
	306, 1718,
	307, 1718,
	308, 1718,
	309, 1718,
	310, 1718,
	312, 1718,
	314, 1718,
	315, 1718,
	316, 1718,
	317, 1718,
	318, 1718,
	319, 1718,
	320, 1718,
	321, 1718,
	322, 1718,
	323, 1718,
	324, 1718,
	325, 1718,
	326, 1718,
	327, 1718,
	329, 1718,
	330, 1718,
	332, 1718,
	334, 1718,
	335, 1718,
	337, 1718,
	338, 1718,
	339, 1718,
	340, 1718,
	341, 1718,
	344, 1718,
	348, 1718,
	349, 1718,
	350, 1718,
	353, 1718,
	354, 1718,
	355, 1718,
	357, 1718,
	359, 1718,
	360, 1718,
	361, 1718,
	362, 1718,
	363, 1718,
	364, 1718,
	365, 1718,
	366, 1718,
	367, 1718,
	368, 1718,
	369, 1718,
	370, 1718,
	371, 1718,
	373, 1718,
	374, 1718,
	375, 1718,
	376, 1718,
	377, 1718,
	378, 1718,
	379, 1718,
	380, 1718,
	381, 1718,
	382, 1718,
	383, 1718,
	384, 1718,
	385, 1718,
	386, 1718,
	387, 1718,
	389, 1718,
	390, 1718,
	392, 1718,
	393, 1718,
	394, 1718,
	395, 1718,
	396, 1718,
	397, 1718,
	398, 1718,
	399, 1718,
	400, 1718,
	401, 1718,
	402, 1718,
	403, 1718,
	404, 1718,
	406, 1718,
	408, 1718,
	409, 1718,
	410, 1718,
	416, 1718,
	418, 1718,
	419, 1718,
	420, 1718,
	421, 1718,
	422, 1718,
	423, 1718,
	424, 1718,
	425, 1718,
	426, 1718,
	427, 1718,
	429, 1718,
	430, 1718,
	431, 1718,
	433, 1718,
	434, 1718,
	435, 1718,
	436, 1718,
	437, 1718,
	438, 1718,
	439, 1718,
	441, 1718,
	442, 1718,
	443, 1718,
	444, 1718,
	445, 1718,
	446, 1718,
	447, 1718,
	448, 1718,
	449, 1718,
	450, 1718,
	451, 1718,
	452, 1718,
	454, 1718,
	455, 1718,
	456, 1718,
	457, 1718,
	458, 1718,
	459, 1718,
	461, 1718,
	462, 1718,
	463, 1718,
	464, 1718,
	465, 1718,
	466, 1718,
	468, 1718,
	469, 1718,
	470, 1718,
	471, 1718,
	472, 1718,
	473, 1718,
	474, 1718,
	475, 1718,
	477, 1718,
	479, 1718,
	480, 1718,
	481, 1718,
	482, 1718,
	483, 1718,
	484, 1718,
	485, 1718,
	486, 1718,
	487, 1718,
	488, 1718,
	489, 1718,
	490, 1718,
	491, 1718,
	492, 1718,
	493, 1718,
	494, 1718,
	496, 1718,
	497, 1718,
	499, 1718,
	500, 1718,
	502, 1718,
	503, 1718,
	504, 1718,
	505, 1718,
	506, 1718,
	507, 1718,
	508, 1718,
	509, 1718,
	510, 1718,
	512, 1718,
	513, 1718,
	514, 1718,
	515, 1718,
	516, 1718,
	518, 1718,
	520, 1718,
	521, 1718,
	522, 1718,
	523, 1718,
	524, 1718,
	525, 1718,
	527, 1718,
	528, 1718,
	529, 1718,
	530, 1718,
	532, 1718,
	533, 1718,
	536, 1718,
	537, 1718,
	538, 1718,
	539, 1718,
	540, 1718,
	541, 1718,
	542, 1718,
	544, 1718,
	547, 1718,
	548, 1718,
	549, 1718,
	550, 1718,
	551, 1718,
	552, 1718,
	554, 1718,
	555, 1718,
	556, 1718,
	557, 1718,
	559, 1718,
	564, 1718,
	565, 1718,
	566, 1718,
	567, 1718,
	568, 1718,
	569, 1718,
	-2, 0,
	-1, 889,
	261, 410,
	-2, 0,
	-1, 962,
	394, 879,
	459, 879,
	500, 879,
	522, 879,
	-2, 0,
	-1, 963,
	394, 878,
	459, 878,
	500, 878,
	522, 878,
	-2, 814,
	-1, 967,
	1, 931,
	598, 931,
	600, 931,
	602, 931,
	-2, 0,
	-1, 969,
	1, 853,
	598, 853,
	600, 853,
	602, 853,
	-2, 0,
	-1, 970,
	1, 857,
	598, 857,
	600, 857,
	602, 857,
	-2, 0,
	-1, 971,
	1, 996,
	183, 996,
	598, 996,
	600, 996,
	602, 996,
	-2, 0,
	-1, 979,
	1, 884,
	598, 884,
	600, 884,
	602, 884,
	-2, 0,
	-1, 986,
	1, 931,
	598, 931,
	600, 931,
	602, 931,
	-2, 0,
	-1, 987,
	1, 933,
	598, 933,
	600, 933,
	602, 933,
	-2, 0,
	-1, 988,
	1, 936,
	598, 936,
	600, 936,
	602, 936,
	-2, 0,
	-1, 994,
	1, 960,
	598, 960,
	600, 960,
	602, 960,
	-2, 0,
	-1, 995,
	1, 962,
	598, 962,
	600, 962,
	602, 962,
	-2, 0,
	-1, 1000,
	1, 990,
	598, 990,
	600, 990,
	602, 990,
	-2, 0,
	-1, 1050,
	170, 1591,
	183, 1591,
	274, 1591,
	342, 1591,
	-2, 1527,
	-1, 1065,
	170, 1590,
	183, 1590,
	274, 1590,
	342, 1590,
	-2, 1524,
	-1, 1092,
	601, 2311,
	-2, 712,
	-1, 1121,
	5, 2303,
	599, 2301,
	-2, 2292,
	-1, 1129,
	5, 2324,
	599, 2321,
	-2, 2312,
	-1, 1130,
	5, 2325,
	599, 2322,
	-2, 2313,
	-1, 1138,
	601, 2309,
	-2, 2291,
	-1, 1139,
	599, 2746,
	-2, 2310,
	-1, 1162,
	599, 2745,
	-2, 2326,
	-1, 1163,
	5, 1793,
	-2, 2716,
	-1, 1164,
	5, 1794,
	-2, 2717,
	-1, 1165,
	5, 1795,
	-2, 2731,
	-1, 1166,
	5, 1796,
	-2, 2695,
	-1, 1167,
	5, 1797,
	-2, 2729,
	-1, 1168,
	5, 1805,
	-2, 2708,
	-1, 1169,
	5, 1792,
	-2, 2704,
	-1, 1170,
	5, 1792,
	-2, 2703,
	-1, 1171,
	5, 1792,
	-2, 2722,
	-1, 1172,
	5, 1803,
	-2, 2697,
	-1, 1173,
	5, 1808,
	-2, 2696,
	-1, 1174,
	5, 1810,
	-2, 2741,
	-1, 1177,
	5, 1832,
	-2, 2734,
	-1, 1178,
	5, 1824,
	-2, 2735,
	-1, 1179,
	5, 1832,
	-2, 2736,
	-1, 1180,
	5, 1828,
	-2, 2737,
	-1, 1181,
	5, 1778,
	-2, 2709,
	-1, 1182,
	5, 1779,
	-2, 2710,
	-1, 1183,
	5, 1780,
	-2, 2698,
	-1, 1211,
	5, 1815,
	-2, 2742,
	-1, 1212,
	5, 1816,
	-2, 2732,
	-1, 1213,
	5, 1817,
	555, 1817,
	-2, 2699,
	-1, 1214,
	5, 1818,
	555, 1818,
	-2, 2700,
	-1, 1251,
	599, 2321,
	-2, 2312,
	-1, 1252,
	599, 2322,
	-2, 2313,
	-1, 1353,
	187, 2663,
	517, 2663,
	582, 2663,
	601, 2663,
	-2, 0,
	-1, 1358,
	1, 689,
	602, 689,
	-2, 1439,
	-1, 1487,
	361, 2286,
	418, 2286,
	461, 2286,
	592, 2286,
	-2, 2276,
	-1, 1498,
	603, 2286,
	-2, 2288,
	-1, 1506,
	1, 1287,
	423, 1251,
	461, 1251,
	576, 1251,
	598, 1287,
	600, 1287,
	602, 1287,
	-2, 1576,
	-1, 1512,
	203, 1384,
	222, 1384,
	431, 1384,
	-2, 0,
	-1, 1558,
	402, 1068,
	554, 1068,
	-2, 405,
	-1, 1575,
	43, 2284,
	-2, 1034,
	-1, 1582,
	1, 1287,
	598, 1287,
	600, 1287,
	602, 1287,
	-2, 1576,
	-1, 1590,
	4, 1312,
	21, 1312,
	22, 1312,
	23, 1312,
	24, 1312,
	25, 1312,
	26, 1312,
	27, 1312,
	29, 1312,
	30, 1312,
	36, 1312,
	41, 1312,
	42, 1312,
	44, 1312,
	45, 1312,
	46, 1312,
	47, 1312,
	48, 1312,
	49, 1312,
	50, 1312,
	51, 1312,
	53, 1312,
	54, 1312,
	55, 1312,
	56, 1312,
	58, 1312,
	59, 1312,
	60, 1312,
	61, 1312,
	62, 1312,
	63, 1312,
	64, 1312,
	68, 1312,
	69, 1312,
	70, 1312,
	71, 1312,
	73, 1312,
	74, 1312,
	75, 1312,
	79, 1312,
	80, 1312,
	81, 1312,
	82, 1312,
	83, 1312,
	84, 1312,
	85, 1312,
	88, 1312,
	89, 1312,
	90, 1312,
	91, 1312,
	92, 1312,
	94, 1312,
	96, 1312,
	97, 1312,
	98, 1312,
	99, 1312,
	100, 1312,
	101, 1312,
	103, 1312,
	104, 1312,
	105, 1312,
	107, 1312,
	108, 1312,
	109, 1312,
	117, 1312,
	118, 1312,
	119, 1312,
	120, 1312,
	121, 1312,
	123, 1312,
	124, 1312,
	125, 1312,
	126, 1312,
	128, 1312,
	129, 1312,
	130, 1312,
	132, 1312,
	133, 1312,
	134, 1312,
	136, 1312,
	137, 1312,
	138, 1312,
	141, 1312,
	142, 1312,
	143, 1312,
	145, 1312,
	146, 1312,
	148, 1312,
	149, 1312,
	150, 1312,
	152, 1312,
	153, 1312,
	154, 1312,
	155, 1312,
	156, 1312,
	157, 1312,
	158, 1312,
	159, 1312,
	160, 1312,
	161, 1312,
	162, 1312,
	163, 1312,
	164, 1312,
	165, 1312,
	166, 1312,
	167, 1312,
	175, 1312,
	176, 1312,
	177, 1312,
	178, 1312,
	182, 1312,
	184, 1312,
	185, 1312,
	189, 1312,
	190, 1312,
	191, 1312,
	192, 1312,
	193, 1312,
	194, 1312,
	195, 1312,
	196, 1312,
	197, 1312,
	198, 1312,
	199, 1312,
	200, 1312,
	201, 1312,
	202, 1312,
	204, 1312,
	205, 1312,
	207, 1312,
	208, 1312,
	210, 1312,
	211, 1312,
	212, 1312,
	213, 1312,
	214, 1312,
	215, 1312,
	216, 1312,
	217, 1312,
	218, 1312,
	220, 1312,
	221, 1312,
	223, 1312,
	224, 1312,
	225, 1312,
	226, 1312,
	227, 1312,
	232, 1312,
	233, 1312,
	234, 1312,
	235, 1312,
	238, 1312,
	239, 1312,
	240, 1312,
	242, 1312,
	244, 1312,
	245, 1312,
	247, 1312,
	249, 1312,
	250, 1312,
	251, 1312,
	253, 1312,
	257, 1312,
	258, 1312,
	259, 1312,
	260, 1312,
	261, 1312,
	262, 1312,
	264, 1312,
	265, 1312,
	266, 1312,
	268, 1312,
	269, 1312,
	271, 1312,
	272, 1312,
	275, 1312,
	279, 1312,
	280, 1312,
	281, 1312,
	284, 1312,
	285, 1312,
	286, 1312,
	287, 1312,
	289, 1312,
	290, 1312,
	291, 1312,
	292, 1312,
	293, 1312,
	294, 1312,
	295, 1312,
	296, 1312,
	297, 1312,
	298, 1312,
	299, 1312,
	300, 1312,
	301, 1312,
	302, 1312,
	303, 1312,
	304, 1312,
	305, 1312,
	306, 1312,
	307, 1312,
	308, 1312,
	309, 1312,
	310, 1312,
	312, 1312,
	314, 1312,
	315, 1312,
	316, 1312,
	317, 1312,
	318, 1312,
	319, 1312,
	320, 1312,
	321, 1312,
	322, 1312,
	323, 1312,
	324, 1312,
	325, 1312,
	326, 1312,
	327, 1312,
	329, 1312,
	330, 1312,
	334, 1312,
	335, 1312,
	337, 1312,
	338, 1312,
	339, 1312,
	340, 1312,
	341, 1312,
	344, 1312,
	346, 1312,
	348, 1312,
	349, 1312,
	350, 1312,
	353, 1312,
	354, 1312,
	355, 1312,
	357, 1312,
	359, 1312,
	360, 1312,
	361, 1312,
	362, 1312,
	363, 1312,
	364, 1312,
	365, 1312,
	366, 1312,
	367, 1312,
	368, 1312,
	369, 1312,
	370, 1312,
	371, 1312,
	373, 1312,
	374, 1312,
	375, 1312,
	376, 1312,
	377, 1312,
	378, 1312,
	379, 1312,
	380, 1312,
	381, 1312,
	382, 1312,
	383, 1312,
	384, 1312,
	385, 1312,
	386, 1312,
	387, 1312,
	389, 1312,
	390, 1312,
	392, 1312,
	393, 1312,
	394, 1312,
	395, 1312,
	396, 1312,
	397, 1312,
	398, 1312,
	399, 1312,
	400, 1312,
	401, 1312,
	402, 1312,
	403, 1312,
	404, 1312,
	406, 1312,
	408, 1312,
	409, 1312,
	410, 1312,
	416, 1312,
	418, 1312,
	419, 1312,
	420, 1312,
	421, 1312,
	422, 1312,
	423, 1312,
	424, 1312,
	425, 1312,
	426, 1312,
	427, 1312,
	429, 1312,
	430, 1312,
	431, 1312,
	433, 1312,
	434, 1312,
	435, 1312,
	436, 1312,
	437, 1312,
	438, 1312,
	439, 1312,
	441, 1312,
	442, 1312,
	443, 1312,
	444, 1312,
	445, 1312,
	446, 1312,
	447, 1312,
	448, 1312,
	449, 1312,
	450, 1312,
	451, 1312,
	452, 1312,
	454, 1312,
	455, 1312,
	456, 1312,
	457, 1312,
	458, 1312,
	459, 1312,
	461, 1312,
	462, 1312,
	463, 1312,
	464, 1312,
	465, 1312,
	466, 1312,
	468, 1312,
	469, 1312,
	470, 1312,
	471, 1312,
	472, 1312,
	473, 1312,
	474, 1312,
	475, 1312,
	477, 1312,
	479, 1312,
	480, 1312,
	481, 1312,
	482, 1312,
	483, 1312,
	484, 1312,
	485, 1312,
	486, 1312,
	487, 1312,
	488, 1312,
	489, 1312,
	490, 1312,
	491, 1312,
	492, 1312,
	493, 1312,
	494, 1312,
	496, 1312,
	497, 1312,
	499, 1312,
	500, 1312,
	502, 1312,
	503, 1312,
	504, 1312,
	505, 1312,
	506, 1312,
	507, 1312,
	508, 1312,
	509, 1312,
	510, 1312,
	512, 1312,
	513, 1312,
	514, 1312,
	515, 1312,
	516, 1312,
	518, 1312,
	520, 1312,
	521, 1312,
	522, 1312,
	523, 1312,
	524, 1312,
	525, 1312,
	527, 1312,
	528, 1312,
	529, 1312,
	530, 1312,
	532, 1312,
	533, 1312,
	536, 1312,
	537, 1312,
	538, 1312,
	539, 1312,
	540, 1312,
	541, 1312,
	542, 1312,
	544, 1312,
	547, 1312,
	548, 1312,
	549, 1312,
	550, 1312,
	551, 1312,
	552, 1312,
	554, 1312,
	555, 1312,
	556, 1312,
	557, 1312,
	559, 1312,
	564, 1312,
	565, 1312,
	566, 1312,
	567, 1312,
	568, 1312,
	569, 1312,
	-2, 0,
	-1, 1613,
	1, 550,
	598, 550,
	600, 550,
	602, 550,
	-2, 1547,
	-1, 1616,
	4, 2740,
	11, 2740,
	12, 2740,
	14, 2740,
	15, 2740,
	16, 2740,
	17, 2740,
	18, 2740,
	19, 2740,
	21, 2740,
	22, 2740,
	23, 2740,
	24, 2740,
	25, 2740,
	26, 2740,
	27, 2740,
	29, 2740,
	30, 2740,
	33, 2740,
	34, 2740,
	36, 2740,
	38, 2740,
	41, 2740,
	42, 2740,
	44, 2740,
	45, 2740,
	46, 2740,
	47, 2740,
	48, 2740,
	49, 2740,
	50, 2740,
	51, 2740,
	53, 2740,
	54, 2740,
	55, 2740,
	56, 2740,
	58, 2740,
	59, 2740,
	60, 2740,
	61, 2740,
	62, 2740,
	63, 2740,
	64, 2740,
	67, 2740,
	68, 2740,
	69, 2740,
	70, 2740,
	71, 2740,
	73, 2740,
	74, 2740,
	75, 2740,
	76, 2740,
	79, 2740,
	80, 2740,
	81, 2740,
	82, 2740,
	83, 2740,
	84, 2740,
	85, 2740,
	86, 2740,
	88, 2740,
	89, 2740,
	90, 2740,
	91, 2740,
	92, 2740,
	94, 2740,
	95, 2740,
	96, 2740,
	97, 2740,
	98, 2740,
	99, 2740,
	100, 2740,
	101, 2740,
	103, 2740,
	104, 2740,
	105, 2740,
	106, 2740,
	107, 2740,
	108, 2740,
	109, 2740,
	117, 2740,
	118, 2740,
	119, 2740,
	120, 2740,
	121, 2740,
	123, 2740,
	124, 2740,
	125, 2740,
	126, 2740,
	128, 2740,
	129, 2740,
	130, 2740,
	132, 2740,
	133, 2740,
	134, 2740,
	136, 2740,
	137, 2740,
	138, 2740,
	141, 2740,
	142, 2740,
	143, 2740,
	145, 2740,
	146, 2740,
	148, 2740,
	149, 2740,
	150, 2740,
	152, 2740,
	153, 2740,
	154, 2740,
	155, 2740,
	156, 2740,
	157, 2740,
	158, 2740,
	159, 2740,
	160, 2740,
	161, 2740,
	162, 2740,
	163, 2740,
	164, 2740,
	165, 2740,
	166, 2740,
	167, 2740,
	171, 2740,
	172, 2740,
	173, 2740,
	174, 2740,
	175, 2740,
	176, 2740,
	177, 2740,
	178, 2740,
	181, 2740,
	182, 2740,
	184, 2740,
	185, 2740,
	188, 2740,
	189, 2740,
	190, 2740,
	191, 2740,
	192, 2740,
	193, 2740,
	194, 2740,
	195, 2740,
	196, 2740,
	197, 2740,
	198, 2740,
	199, 2740,
	200, 2740,
	201, 2740,
	202, 2740,
	204, 2740,
	205, 2740,
	207, 2740,
	208, 2740,
	210, 2740,
	211, 2740,
	212, 2740,
	213, 2740,
	214, 2740,
	215, 2740,
	216, 2740,
	217, 2740,
	218, 2740,
	219, 2740,
	220, 2740,
	221, 2740,
	222, 2740,
	223, 2740,
	224, 2740,
	225, 2740,
	226, 2740,
	227, 2740,
	229, 2740,
	230, 2740,
	232, 2740,
	233, 2740,
	234, 2740,
	235, 2740,
	237, 2740,
	238, 2740,
	239, 2740,
	240, 2740,
	242, 2740,
	244, 2740,
	245, 2740,
	246, 2740,
	247, 2740,
	248, 2740,
	249, 2740,
	250, 2740,
	251, 2740,
	252, 2740,
	253, 2740,
	255, 2740,
	256, 2740,
	257, 2740,
	258, 2740,
	259, 2740,
	260, 2740,
	261, 2740,
	262, 2740,
	264, 2740,
	265, 2740,
	266, 2740,
	268, 2740,
	269, 2740,
	270, 2740,
	271, 2740,
	272, 2740,
	273, 2740,
	275, 2740,
	279, 2740,
	280, 2740,
	281, 2740,
	284, 2740,
	285, 2740,
	286, 2740,
	287, 2740,
	288, 2740,
	289, 2740,
	290, 2740,
	291, 2740,
	292, 2740,
	293, 2740,
	294, 2740,
	295, 2740,
	296, 2740,
	297, 2740,
	298, 2740,
	299, 2740,
	300, 2740,
	301, 2740,
	302, 2740,
	303, 2740,
	304, 2740,
	305, 2740,
	306, 2740,
	307, 2740,
	308, 2740,
	309, 2740,
	310, 2740,
	312, 2740,
	313, 2740,
	314, 2740,
	315, 2740,
	316, 2740,
	317, 2740,
	318, 2740,
	319, 2740,
	320, 2740,
	321, 2740,
	322, 2740,
	323, 2740,
	324, 2740,
	325, 2740,
	326, 2740,
	327, 2740,
	329, 2740,
	330, 2740,
	333, 2740,
	334, 2740,
	335, 2740,
	337, 2740,
	338, 2740,
	339, 2740,
	340, 2740,
	341, 2740,
	344, 2740,
	348, 2740,
	349, 2740,
	350, 2740,
	351, 2740,
	353, 2740,
	354, 2740,
	355, 2740,
	357, 2740,
	359, 2740,
	360, 2740,
	361, 2740,
	362, 2740,
	363, 2740,
	364, 2740,
	365, 2740,
	366, 2740,
	367, 2740,
	368, 2740,
	369, 2740,
	370, 2740,
	371, 2740,
	373, 2740,
	374, 2740,
	375, 2740,
	376, 2740,
	377, 2740,
	378, 2740,
	379, 2740,
	380, 2740,
	381, 2740,
	382, 2740,
	383, 2740,
	384, 2740,
	385, 2740,
	386, 2740,
	387, 2740,
	389, 2740,
	390, 2740,
	392, 2740,
	393, 2740,
	394, 2740,
	395, 2740,
	396, 2740,
	397, 2740,
	398, 2740,
	399, 2740,
	400, 2740,
	401, 2740,
	402, 2740,
	403, 2740,
	404, 2740,
	406, 2740,
	408, 2740,
	409, 2740,
	410, 2740,
	416, 2740,
	417, 2740,
	418, 2740,
	419, 2740,
	420, 2740,
	421, 2740,
	422, 2740,
	423, 2740,
	424, 2740,
	425, 2740,
	426, 2740,
	427, 2740,
	429, 2740,
	430, 2740,
	431, 2740,
	432, 2740,
	433, 2740,
	434, 2740,
	435, 2740,
	436, 2740,
	437, 2740,
	438, 2740,
	439, 2740,
	440, 2740,
	441, 2740,
	442, 2740,
	443, 2740,
	444, 2740,
	445, 2740,
	446, 2740,
	447, 2740,
	448, 2740,
	449, 2740,
	450, 2740,
	451, 2740,
	452, 2740,
	454, 2740,
	455, 2740,
	456, 2740,
	457, 2740,
	458, 2740,
	459, 2740,
	461, 2740,
	462, 2740,
	463, 2740,
	464, 2740,
	465, 2740,
	466, 2740,
	467, 2740,
	468, 2740,
	469, 2740,
	470, 2740,
	471, 2740,
	472, 2740,
	473, 2740,
	474, 2740,
	475, 2740,
	477, 2740,
	479, 2740,
	480, 2740,
	481, 2740,
	482, 2740,
	483, 2740,
	484, 2740,
	485, 2740,
	486, 2740,
	487, 2740,
	488, 2740,
	489, 2740,
	490, 2740,
	491, 2740,
	492, 2740,
	493, 2740,
	494, 2740,
	496, 2740,
	497, 2740,
	498, 2740,
	499, 2740,
	500, 2740,
	502, 2740,
	503, 2740,
	504, 2740,
	505, 2740,
	506, 2740,
	507, 2740,
	508, 2740,
	509, 2740,
	510, 2740,
	512, 2740,
	513, 2740,
	514, 2740,
	515, 2740,
	516, 2740,
	518, 2740,
	520, 2740,
	521, 2740,
	522, 2740,
	523, 2740,
	524, 2740,
	525, 2740,
	527, 2740,
	528, 2740,
	529, 2740,
	530, 2740,
	532, 2740,
	533, 2740,
	536, 2740,
	537, 2740,
	538, 2740,
	539, 2740,
	540, 2740,
	541, 2740,
	542, 2740,
	544, 2740,
	547, 2740,
	548, 2740,
	549, 2740,
	550, 2740,
	551, 2740,
	552, 2740,
	554, 2740,
	555, 2740,
	556, 2740,
	557, 2740,
	559, 2740,
	564, 2740,
	565, 2740,
	566, 2740,
	567, 2740,
	568, 2740,
	569, 2740,
	570, 2740,
	572, 2740,
	580, 2740,
	581, 2740,
	582, 2740,
	583, 2740,
	584, 2740,
	585, 2740,
	587, 2740,
	588, 2740,
	589, 2740,
	590, 2740,
	591, 2740,
	592, 2740,
	593, 2740,
	594, 2740,
	595, 2740,
	597, 2740,
	600, 2740,
	601, 2740,
	603, 2740,
	604, 2740,
	-2, 0,
	-1, 1621,
	187, 2622,
	517, 2622,
	582, 2622,
	601, 2622,
	-2, 0,
	-1, 1670,
	394, 879,
	459, 879,
	500, 879,
	522, 879,
	-2, 0,
	-1, 1681,
	1, 1384,
	598, 1384,
	600, 1384,
	602, 1384,
	-2, 0,
	-1, 1698,
	1, 874,
	598, 874,
	600, 874,
	602, 874,
	-2, 0,
	-1, 1699,
	1, 918,
	598, 918,
	600, 918,
	602, 918,
	-2, 0,
	-1, 1700,
	1, 926,
	598, 926,
	600, 926,
	602, 926,
	-2, 0,
	-1, 1703,
	1, 883,
	598, 883,
	600, 883,
	602, 883,
	-2, 0,
	-1, 1705,
	1, 889,
	598, 889,
	600, 889,
	602, 889,
	-2, 0,
	-1, 1708,
	1, 885,
	598, 885,
	600, 885,
	602, 885,
	-2, 0,
	-1, 1713,
	1, 899,
	598, 899,
	600, 899,
	602, 899,
	-2, 0,
	-1, 1744,
	1, 2605,
	598, 2605,
	600, 2605,
	601, 2605,
	602, 2605,
	-2, 0,
	-1, 1748,
	1, 971,
	598, 971,
	600, 971,
	602, 971,
	-2, 0,
	-1, 1763,
	1, 1434,
	602, 1434,
	-2, 1439,
	-1, 1766,
	170, 1590,
	183, 1590,
	274, 1590,
	342, 1590,
	-2, 1528,
	-1, 1866,
	151, 1549,
	170, 1549,
	183, 1549,
	241, 1549,
	274, 1549,
	342, 1549,
	352, 1549,
	534, 1549,
	-2, 1997,
	-1, 1927,
	600, 2172,
	-2, 0,
	-1, 1962,
	151, 1549,
	170, 1549,
	183, 1549,
	241, 1549,
	274, 1549,
	342, 1549,
	352, 1549,
	534, 1549,
	-2, 1679,
	-1, 1999,
	517, 2619,
	601, 2619,
	604, 2619,
	-2, 0,
	-1, 2016,
	599, 1820,
	-2, 1808,
	-1, 2048,
	187, 2619,
	601, 2619,
	604, 2619,
	-2, 0,
	-1, 2090,
	1, 691,
	602, 691,
	-2, 1439,
	-1, 2230,
	222, 259,
	-2, 2320,
	-1, 2231,
	222, 260,
	-2, 312,
	-1, 2338,
	1, 876,
	598, 876,
	600, 876,
	602, 876,
	-2, 0,
	-1, 2339,
	1, 920,
	598, 920,
	600, 920,
	602, 920,
	-2, 0,
	-1, 2340,
	1, 928,
	598, 928,
	600, 928,
	602, 928,
	-2, 0,
	-1, 2341,
	1, 973,
	598, 973,
	600, 973,
	602, 973,
	-2, 0,
	-1, 2382,
	1, 901,
	598, 901,
	600, 901,
	602, 901,
	-2, 0,
	-1, 2400,
	1, 956,
	598, 956,
	600, 956,
	602, 956,
	-2, 0,
	-1, 2445,
	438, 1617,
	439, 1617,
	-2, 1853,
	-1, 2476,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1873,
	-1, 2477,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1874,
	-1, 2478,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1875,
	-1, 2479,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1876,
	-1, 2480,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1877,
	-1, 2481,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1878,
	-1, 2482,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1879,
	-1, 2483,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1880,
	-1, 2495,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1892,
	-1, 2496,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1893,
	-1, 2497,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1894,
	-1, 2501,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1901,
	-1, 2507,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1905,
	-1, 2509,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1913,
	-1, 2510,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1914,
	-1, 2511,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1915,
	-1, 2512,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1916,
	-1, 2686,
	5, 2324,
	187, 2183,
	599, 2321,
	-2, 2312,
	-1, 2687,
	187, 2184,
	-2, 2691,
	-1, 2688,
	187, 2185,
	-2, 2510,
	-1, 2689,
	187, 2186,
	-2, 2394,
	-1, 2690,
	187, 2187,
	-2, 2450,
	-1, 2691,
	187, 2188,
	-2, 2495,
	-1, 2692,
	187, 2189,
	-2, 2617,
	-1, 2693,
	187, 2190,
	-2, 1980,
	-1, 2764,
	1, 1680,
	2, 1680,
	106, 1680,
	151, 1680,
	170, 1680,
	183, 1680,
	188, 1680,
	206, 1680,
	209, 1680,
	237, 1680,
	241, 1680,
	252, 1680,
	270, 1680,
	274, 1680,
	313, 1680,
	342, 1680,
	346, 1680,
	352, 1680,
	428, 1680,
	432, 1680,
	534, 1680,
	545, 1680,
	561, 1680,
	562, 1680,
	563, 1680,
	573, 1680,
	598, 1680,
	600, 1680,
	602, 1680,
	604, 1680,
	-2, 1679,
	-1, 2777,
	599, 2293,
	-2, 2307,
	-1, 2779,
	1, 329,
	561, 329,
	-2, 1576,
	-1, 2808,
	599, 1819,
	-2, 1809,
	-1, 2993,
	1, 1287,
	423, 1251,
	461, 1251,
	576, 1251,
	598, 1287,
	600, 1287,
	602, 1287,
	-2, 1576,
	-1, 3179,
	347, 1620,
	-2, 2730,
	-1, 3180,
	347, 1621,
	-2, 2602,
	-1, 3184,
	438, 2249,
	439, 2249,
	-2, 1978,
	-1, 3185,
	438, 2253,
	439, 2253,
	-2, 1979,
	-1, 3186,
	438, 2250,
	439, 2250,
	-2, 1978,
	-1, 3187,
	438, 2254,
	439, 2254,
	-2, 1979,
	-1, 3200,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1903,
	-1, 3201,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1907,
	-1, 3207,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1909,
	-1, 3431,
	1, 686,
	598, 686,
	600, 686,
	602, 686,
	-2, 1439,
	-1, 3596,
	43, 2284,
	-2, 1035,
	-1, 3601,
	1, 1287,
	598, 1287,
	600, 1287,
	602, 1287,
	-2, 1576,
	-1, 3712,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1911,
	-1, 3719,
	246, 0,
	248, 0,
	333, 0,
	-2, 1930,
	-1, 3787,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1959,
	-1, 3788,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1960,
	-1, 3789,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1961,
	-1, 3793,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1965,
	-1, 3794,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1966,
	-1, 3795,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1967,
	-1, 3842,
	599, 2294,
	-2, 2308,
	-1, 4016,
	601, 2848,
	-2, 1502,
	-1, 4077,
	246, 0,
	248, 0,
	333, 0,
	-2, 1931,
	-1, 4080,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1934,
	-1, 4081,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1936,
	-1, 4179,
	601, 2309,
	-2, 1322,
	-1, 4333,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1935,
	-1, 4334,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1937,
	-1, 4345,
	246, 0,
	-2, 1970,
	-1, 4532,
	246, 0,
	-2, 1971,
	-1, 4732,
	50, 0,
	219, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 2694,
}

const sqlPrivate = 57344

const sqlLast = 132614

var sqlAct = [...]int{
	272, 4849, 4928, 4836, 4724, 3338, 4725, 4565, 2870, 3068,
	4394, 4742, 4454, 4790, 4573, 4731, 3081, 4713, 4865, 3584,
	4622, 3585, 2227, 4597, 2140, 4601, 4658, 4744, 4681, 1244,
	4060, 4743, 4700, 4461, 2914, 4678, 4376, 4803, 4485, 3752,
	4439, 4730, 4175, 4288, 4536, 4283, 4249, 4399, 3038, 4224,
	3704, 4354, 4322, 4008, 2939, 4000, 3452, 2455, 2314, 1325,
	2303, 4270, 4263, 1255, 4272, 3618, 1075, 4470, 3193, 703,
	1318, 3936, 4176, 1329, 2719, 814, 4156, 4499, 4293, 1775,
	2524, 2072, 3512, 2952, 3612, 3965, 3580, 3455, 3981, 2456,
	3963, 1392, 1637, 2148, 3569, 2463, 1066, 3105, 774, 3659,
	3090, 814, 4350, 2312, 2003, 3661, 1968, 3057, 3024, 3092,
	3562, 3561, 3344, 3845, 3361, 1320, 1484, 3383, 3321, 4059,
	4116, 3353, 3083, 3054, 714, 887, 4, 891, 3100, 3342,
	3052, 3069, 2216, 3089, 1678, 2276, 2214, 3000, 2159, 4837,
	3474, 1937, 2175, 4537, 2872, 2757, 2460, 1844, 1874, 1635,
	1913, 2537, 2602, 882, 3320, 3177, 3449, 1491, 2756, 108,
	1323, 3813, 1577, 3099, 3028, 809, 770, 1074, 179, 2969,
	1235, 2191, 2210, 2215, 2198, 1986, 2759, 1373, 2128, 2132,
	1957, 1521, 3039, 266, 1763, 2070, 2737, 1125, 1938, 3390,
	2593, 1297, 1130, 1132, 2521, 265, 2118, 2059, 2004, 2444,
	2427, 2791, 3034, 2425, 1175, 2913, 747, 3582, 1614, 2716,
	2263, 2858, 3062, 1580, 4623, 815, 2895, 816, 956, 3093,
	811, 1360, 1238, 3957, 1947, 2790, 690, 2596, 1311, 1954,
	712, 2746, 1908, 1217, 2682, 2727, 2574, 2648, 1858, 1252,
	1308, 188, 1776, 1777, 2426, 2428, 189, 1713, 755, 1698,
	1234, 2224, 766, 2289, 1612, 2262, 1516, 2147, 820, 1605,
	4791, 179, 2449, 1106, 4850, 3035, 707, 1240, 44, 43,
	823, 1782, 1215, 730, 41, 32, 704, 1123, 715, 30,
	804, 863, 3230, 1527, 820, 28, 1762, 977, 3827, 3224,
	3828, 4941, 3340, 4369, 864, 2736, 823, 2061, 2061, 4931,
	2061, 4771, 3628, 3637, 4915, 2061, 160, 2061, 2736, 2061,
	1070, 4914, 1070, 1520, 73, 2736, 46, 45, 4904, 4885,
	4883, 906, 2236, 4398, 4398, 4822, 1121, 3416, 4779, 2236,
	3414, 74, 4780, 4768, 155, 3627, 2604, 2736, 2729, 4766,
	4366, 4763, 2236, 2736, 1128, 4764, 3637, 78, 4760, 4728,
	1071, 1232, 4761, 2236, 2236, 1275, 4727, 4726, 67, 1704,
	2236, 2082, 4721, 4137, 4720, 48, 2082, 157, 2082, 4711,
	4709, 4706, 4676, 4398, 4398, 4473, 4398, 4647, 4640, 4639,
	4634, 2799, 2736, 2736, 4398, 47, 4633, 87, 4627, 4593,
	4398, 4534, 2236, 4240, 4516, 2799, 4513, 4510, 4045, 4463,
	2236, 4398, 3192, 4464, 2236, 4417, 1060, 1218, 1218, 2236,
	3399, 2736, 4416, 4405, 50, 68, 2236, 2236, 4404, 4648,
	1644, 1051, 4398, 51, 4538, 4397, 1050, 2079, 57, 4398,
	4361, 4335, 158, 4312, 2236, 2799, 4529, 2082, 1369, 4301,
	49, 4219, 107, 3637, 1541, 2736, 1369, 93, 104, 4202,
	1630, 4079, 4024, 2736, 883, 2799, 3654, 4018, 3979, 3837,
	3835, 3654, 3980, 3838, 3836, 2819, 3820, 93, 1268, 2313,
	2736, 3736, 1065, 3239, 3732, 2236, 3653, 3817, 2736, 3240,
	3654, 73, 3644, 886, 885, 1221, 3645, 1222, 52, 2550,
	2551, 2552, 2569, 2570, 2571, 3337, 3332, 2079, 74, 2736,
	2736, 3331, 4517, 3282, 1219, 2736, 94, 3283, 2795, 2572,
	4473, 1127, 3291, 3292, 78, 3280, 3272, 3270, 3241, 3281,
	3273, 2736, 2736, 1790, 1791, 3109, 39, 3079, 3078, 2082,
	2842, 2299, 2299, 2798, 2736, 2788, 2082, 2799, 3817, 2736,
	1529, 2781, 1846, 1790, 1791, 2236, 1821, 2735, 2728, 2236,
	4281, 2736, 2236, 1793, 87, 1269, 4240, 236, 2079, 3291,
	3292, 2562, 2736, 2298, 3229, 1250, 1269, 2299, 4203, 4045,
	2558, 3645, 2942, 1793, 2857, 3291, 3292, 2097, 2060, 1846,
	2076, 3030, 2235, 1247, 2152, 2962, 2855, 1933, 1792, 1515,
	3919, 3707, 3681, 1955, 2203, 889, 1680, 3629, 2773, 2772,
	2771, 1529, 2770, 2769, 1223, 238, 1220, 49, 1792, 107,
	1059, 1058, 1057, 1056, 93, 104, 3630, 4295, 1055, 1054,
	1053, 3291, 3292, 1049, 3309, 3310, 3311, 236, 1048, 1047,
	1046, 1529, 1790, 1791, 3151, 2631, 1045, 1044, 1043, 1042,
	1041, 1040, 1039, 4075, 1038, 1037, 2563, 2564, 2565, 2566,
	1036, 1035, 1034, 97, 237, 1821, 2557, 1540, 2062, 2062,
	1033, 2062, 1793, 1032, 1014, 954, 2062, 230, 2062, 1104,
	2062, 53, 953, 94, 952, 238, 231, 951, 950, 949,
	948, 947, 3297, 946, 1535, 945, 56, 944, 1846, 943,
	942, 59, 941, 1798, 940, 939, 3306, 1792, 938, 937,
	936, 69, 935, 190, 934, 933, 4132, 58, 187, 100,
	2079, 932, 103, 1798, 931, 930, 54, 1520, 929, 3627,
	159, 928, 927, 2374, 237, 926, 925, 924, 55, 3297,
	2567, 2568, 923, 922, 921, 920, 919, 909, 236, 908,
	904, 1820, 1822, 903, 1269, 3297, 62, 2079, 1334, 1130,
	1246, 150, 897, 2629, 896, 2728, 881, 880, 236, 837,
	836, 835, 834, 2560, 826, 825, 156, 824, 790, 781,
	4091, 150, 1269, 190, 780, 779, 1130, 1130, 1130, 761,
	260, 259, 258, 2599, 1648, 257, 238, 256, 255, 3307,
	254, 3297, 253, 252, 1395, 251, 250, 249, 1395, 248,
	1813, 247, 1798, 246, 245, 1334, 238, 3065, 244, 243,
	236, 242, 154, 241, 240, 239, 1528, 3859, 3831, 3655,
	97, 3386, 3252, 4297, 3235, 3335, 3226, 191, 1364, 1130,
	3133, 1130, 3010, 1130, 2615, 237, 3307, 2236, 2829, 1334,
	2060, 2803, 1377, 1378, 1379, 2079, 2613, 2076, 230, 2420,
	1820, 1822, 3307, 2778, 1916, 237, 3313, 231, 238, 2763,
	2306, 1915, 3047, 1843, 2126, 1334, 3336, 1634, 230, 2081,
	1499, 236, 1342, 2600, 1843, 187, 100, 231, 1981, 103,
	1494, 1885, 1916, 1958, 190, 1334, 1073, 3, 1919, 1915,
	4541, 1523, 1334, 1381, 1843, 236, 1254, 1534, 3307, 4753,
	1130, 236, 1130, 4752, 190, 236, 1334, 237, 1248, 1813,
	1843, 1789, 1130, 890, 1130, 2561, 1914, 1706, 150, 238,
	230, 4749, 4729, 4708, 4608, 1519, 1843, 4526, 4520, 231,
	4349, 4518, 4389, 1302, 1305, 1356, 4302, 1586, 1589, 4280,
	4143, 3308, 4114, 238, 4113, 2305, 4107, 1315, 4106, 238,
	4105, 4098, 1814, 238, 1358, 2601, 190, 2598, 3291, 3292,
	4097, 4095, 1334, 1388, 1504, 1481, 1486, 4090, 237, 4087,
	4086, 3978, 1843, 1845, 3291, 3292, 3863, 3862, 3861, 154,
	3841, 230, 1130, 1843, 3984, 1130, 3808, 1876, 3308, 3807,
	231, 3806, 237, 3728, 191, 3723, 3381, 1529, 237, 3328,
	3319, 820, 237, 3290, 3308, 230, 3287, 3286, 1790, 1791,
	1845, 230, 3284, 823, 231, 230, 3279, 190, 1350, 3278,
	231, 3277, 3274, 1575, 231, 1489, 3271, 1878, 1883, 3251,
	3234, 3227, 3225, 1518, 3080, 1517, 2764, 2586, 1793, 1617,
	1619, 190, 2279, 1649, 1071, 1789, 1876, 190, 1231, 2243,
	3308, 884, 2241, 179, 179, 2547, 2548, 2549, 2573, 2559,
	2553, 1814, 2555, 2556, 2554, 2541, 2542, 2543, 2544, 2545,
	2546, 1788, 4935, 1792, 1606, 1331, 4296, 1364, 4875, 4874,
	1364, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 3300,
	3301, 3293, 3294, 3295, 3296, 3298, 3299, 3917, 1592, 1803,
	1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800, 3985, 4838,
	3049, 3406, 2603, 4789, 1130, 4787, 1256, 3754, 4668, 1845,
	1130, 1722, 1794, 1795, 1796, 1797, 1799, 1800, 3297, 4600,
	1608, 2801, 4584, 236, 3333, 236, 73, 3301, 3293, 3294,
	3295, 3296, 3298, 3299, 3297, 4581, 1877, 1767, 1875, 4580,
	4579, 4559, 4558, 74, 3293, 3294, 3295, 3296, 3298, 3299,
	4556, 4540, 4539, 4745, 4514, 4498, 4497, 2527, 4483, 78,
	4480, 4479, 4474, 4413, 236, 4384, 1654, 4347, 1798, 4330,
	4329, 238, 4309, 238, 1629, 4308, 1761, 4266, 4241, 4131,
	3303, 3304, 3305, 4112, 4046, 4038, 1643, 3302, 3300, 3301,
	3293, 3294, 3295, 3296, 3298, 3299, 4035, 2533, 3905, 87,
	1802, 1794, 1795, 1796, 1797, 1799, 1800, 3904, 1865, 3887,
	4367, 3886, 238, 3884, 3823, 1130, 1130, 1130, 2597, 3811,
	237, 1130, 237, 2630, 3718, 236, 1863, 3656, 1252, 3985,
	1252, 3638, 3604, 230, 3529, 230, 3487, 3454, 3408, 3256,
	889, 1671, 231, 3255, 231, 1395, 3250, 3216, 3023, 2812,
	1922, 1921, 49, 1707, 107, 1130, 1920, 236, 814, 93,
	104, 237, 1917, 1071, 2021, 814, 1341, 1790, 1791, 3064,
	1768, 190, 1935, 238, 230, 1909, 1907, 2810, 2809, 2775,
	2768, 2734, 2611, 231, 1862, 1980, 1936, 1931, 1930, 1929,
	1928, 1927, 1926, 1925, 1924, 1944, 1923, 1793, 1764, 3378,
	1904, 1772, 1771, 3048, 1903, 238, 1051, 1902, 236, 1901,
	190, 1050, 1900, 236, 1899, 1843, 1898, 1897, 94, 1896,
	1918, 1895, 237, 1766, 3291, 3292, 1894, 236, 1893, 1994,
	1785, 1786, 1792, 1991, 1892, 230, 1891, 1890, 1889, 1878,
	1130, 2628, 1965, 1864, 231, 1334, 1526, 2307, 1533, 1861,
	1539, 1856, 1349, 1273, 237, 1264, 238, 1941, 1942, 4542,
	4269, 238, 4139, 4083, 1130, 2109, 2108, 230, 3858, 2117,
	2119, 190, 1395, 3834, 3826, 238, 231, 3238, 2766, 4141,
	3857, 1611, 1877, 1218, 3404, 2142, 3291, 3292, 1859, 1071,
	3633, 4205, 1976, 1910, 1911, 2117, 1376, 2115, 4872, 179,
	4864, 2940, 1364, 190, 1958, 237, 4582, 4475, 4466, 1611,
	237, 1966, 4465, 4300, 2088, 2117, 4818, 1628, 230, 1633,
	4243, 4242, 2614, 230, 237, 4204, 4134, 231, 1984, 1642,
	2124, 1647, 231, 4050, 2612, 4049, 2087, 230, 1989, 4048,
	2000, 820, 1374, 4047, 2117, 3829, 231, 2049, 820, 2051,
	3658, 3657, 1963, 823, 190, 1956, 4816, 2015, 3640, 190,
	823, 1375, 3639, 4471, 2186, 97, 3705, 2918, 2018, 1369,
	1370, 3988, 1759, 190, 3931, 1916, 1985, 2103, 1995, 1934,
	3490, 1369, 1915, 2064, 1899, 2044, 3276, 1899, 2112, 4521,
	2066, 2200, 4519, 2068, 3297, 1960, 1705, 3275, 1670, 2073,
	1975, 1974, 2967, 2075, 1334, 1334, 1973, 1971, 2078, 3198,
	2900, 1970, 1372, 3902, 1395, 2084, 3521, 1969, 1369, 4388,
	187, 100, 1030, 3587, 103, 3586, 2001, 3456, 2090, 3295,
	3296, 3298, 3299, 3649, 1723, 1887, 2217, 2330, 1679, 4801,
	2304, 2009, 4462, 3293, 3294, 3295, 3296, 3298, 3299, 4775,
	236, 4756, 4741, 3570, 1250, 3106, 1250, 4351, 890, 1680,
	2218, 3992, 3975, 150, 2594, 3933, 3928, 1031, 3910, 3678,
	3429, 2311, 1247, 2182, 1247, 2190, 2086, 1990, 2195, 1796,
	1797, 1799, 1800, 3340, 3756, 2808, 1932, 1912, 1366, 3244,
	2948, 4750, 3578, 2280, 2152, 2959, 2228, 2233, 238, 2273,
	1585, 3307, 1511, 2114, 1345, 1301, 4765, 4408, 4762, 1334,
	2093, 1334, 1884, 1334, 3623, 2956, 4380, 2185, 2897, 3879,
	4574, 4284, 2954, 4675, 154, 2120, 2110, 4552, 2091, 1334,
	1334, 1610, 3459, 3897, 3087, 1230, 3061, 3553, 4820, 191,
	1334, 2113, 876, 4819, 4411, 4190, 4407, 237, 2435, 4386,
	2874, 2947, 1334, 4187, 1334, 1334, 1334, 2158, 4751, 1610,
	230, 3699, 2599, 3132, 1658, 3946, 3433, 4854, 4435, 231,
	1371, 4192, 2222, 2220, 2221, 1843, 1552, 1028, 814, 2896,
	1560, 2802, 3002, 1026, 1024, 1022, 2269, 1019, 2316, 820,
	2843, 3405, 4930, 2388, 2180, 2386, 190, 2104, 4588, 1513,
	1130, 823, 2861, 2861, 1010, 4428, 4419, 2433, 4233, 2274,
	4232, 3944, 3943, 2329, 1359, 2286, 3935, 2859, 2859, 1721,
	3925, 1518, 3924, 1517, 3922, 3921, 3909, 3874, 1367, 3873,
	3882, 3559, 3558, 3945, 3398, 1130, 3249, 1368, 3248, 1246,
	2179, 1246, 2194, 2309, 2176, 3247, 3246, 877, 3202, 2965,
	2964, 1720, 2600, 3308, 2961, 2950, 2334, 1370, 1972, 2934,
	2933, 2928, 2234, 1069, 2877, 2927, 2926, 1561, 1071, 1130,
	1071, 1130, 1376, 2253, 2294, 2905, 2904, 2865, 1130, 2317,
	2789, 2021, 2021, 1395, 2508, 1130, 1130, 1130, 1130, 1130,
	1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
	1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
	1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
	1130, 2283, 1130, 2255, 1130, 1130, 1130, 1130, 2296, 4409,
	2254, 3435, 4444, 1765, 2601, 3058, 2598, 1375, 4381, 4859,
	1608, 753, 2291, 1370, 2291, 1656, 2437, 2292, 1702, 2288,
	1130, 1800, 1719, 1068, 1130, 1130, 2434, 4186, 2424, 1376,
	753, 820, 1130, 2300, 1350, 2301, 1130, 3456, 1130, 1130,
	2644, 2322, 4188, 823, 4855, 1366, 1395, 2218, 2304, 3519,
	2643, 2898, 1130, 1130, 1130, 1130, 2465, 3489, 1130, 1130,
	1130, 1130, 1130, 1130, 1130, 1130, 2321, 1248, 2359, 1248,
	3302, 3300, 3301, 3293, 3294, 3295, 3296, 3298, 3299, 2898,
	2400, 2338, 1369, 2339, 1130, 1130, 1130, 1130, 1130, 1130,
	1130, 1130, 1130, 2349, 1375, 4328, 1016, 1130, 2575, 2576,
	2432, 1598, 1596, 1597, 1595, 2435, 4860, 2816, 3679, 1252,
	2793, 1702, 2575, 2591, 2412, 1260, 1395, 1556, 2419, 2149,
	1615, 2121, 2122, 2382, 1701, 1252, 2902, 1371, 3291, 3292,
	2346, 1366, 2417, 2409, 1070, 2399, 2876, 2448, 1287, 2639,
	3299, 1130, 1395, 1514, 2015, 2015, 2340, 2915, 2916, 2461,
	2462, 4206, 2326, 2145, 1757, 2018, 2018, 1257, 2685, 2685,
	2699, 2603, 2575, 1672, 2433, 2720, 2722, 2915, 2916, 2922,
	2539, 2726, 2423, 2422, 2421, 2594, 1699, 2429, 2436, 4149,
	2850, 1071, 2150, 2151, 1051, 1367, 2590, 1051, 1051, 2452,
	1569, 1071, 2453, 2454, 1368, 1071, 2915, 2916, 2188, 2751,
	3112, 1262, 3146, 3306, 1574, 2523, 2523, 2888, 2392, 1758,
	3520, 2780, 2146, 1371, 4819, 2776, 4862, 1701, 879, 878,
	3175, 2743, 1651, 4747, 702, 2411, 4887, 3190, 2009, 2009,
	2177, 4567, 2380, 1732, 2887, 2343, 3894, 1965, 752, 1700,
	2958, 2347, 4148, 1334, 1334, 2293, 2431, 3688, 3687, 4445,
	697, 3954, 2531, 2337, 4189, 3148, 2535, 752, 874, 2529,
	873, 4443, 1770, 3742, 4184, 1680, 1976, 4441, 1261, 1680,
	1218, 1367, 2957, 2792, 2588, 1736, 1668, 2597, 2603, 1581,
	1368, 2846, 1718, 2875, 1071, 2765, 3432, 1395, 2796, 2864,
	4231, 3745, 2955, 3506, 2742, 2750, 2152, 2755, 3297, 2953,
	2761, 2762, 2848, 2838, 1348, 2183, 3923, 2832, 3955, 2418,
	3920, 3906, 2860, 2434, 4440, 1364, 1067, 2864, 3498, 2694,
	2681, 2021, 2815, 3866, 2711, 1715, 910, 2724, 3853, 3565,
	179, 1579, 2997, 2172, 2744, 3557, 2701, 2732, 2733, 2849,
	1652, 3517, 4442, 2748, 2749, 3743, 1918, 1963, 754, 2178,
	3507, 3953, 2960, 4569, 2133, 3892, 2835, 2925, 2903, 2134,
	2847, 3189, 917, 2160, 1395, 4327, 1020, 754, 2754, 1369,
	2240, 2239, 1020, 1020, 1021, 3499, 1020, 1657, 3157, 2204,
	1334, 2387, 2840, 2385, 2211, 4833, 2164, 2432, 4841, 2998,
	2173, 3182, 3183, 3505, 2866, 2375, 2901, 4840, 1946, 4748,
	2834, 1130, 1130, 2408, 1130, 3307, 2641, 2811, 2787, 3620,
	3682, 2642, 4861, 4890, 2645, 2823, 2646, 2647, 3497, 2826,
	4808, 2827, 2824, 1910, 1911, 2841, 4065, 814, 2828, 1334,
	2863, 2814, 2996, 2171, 2818, 1250, 2155, 4064, 4171, 2833,
	3566, 3154, 2839, 2161, 2951, 1558, 3621, 2923, 2603, 4644,
	3563, 1250, 2152, 1247, 4654, 1369, 3907, 2907, 2938, 2213,
	1334, 2133, 3072, 2831, 2201, 4918, 2134, 788, 4182, 1247,
	2061, 4171, 4164, 2135, 1334, 2891, 1334, 3101, 2844, 1843,
	1950, 4372, 3443, 4185, 2862, 1258, 2941, 2930, 2906, 3160,
	2139, 1334, 3005, 2156, 827, 2410, 2929, 3007, 2205, 1555,
	3045, 2924, 2603, 4746, 2804, 4164, 2879, 2882, 2932, 4157,
	4715, 2345, 4716, 2869, 2015, 4575, 2212, 3532, 2966, 2908,
	1286, 2519, 1733, 2994, 2995, 2018, 4155, 4165, 3620, 1953,
	4595, 2917, 2919, 2920, 2921, 4159, 2154, 1581, 1259, 1130,
	3104, 3113, 3114, 3103, 1948, 3434, 1730, 751, 1681, 3471,
	2517, 2165, 3120, 3121, 3122, 2189, 2931, 3308, 4868, 1512,
	4165, 1271, 1951, 2136, 2141, 2936, 3107, 2174, 1905, 3041,
	3402, 2946, 2187, 4830, 911, 912, 898, 2187, 786, 820,
	2135, 3110, 2201, 1655, 2861, 1004, 3115, 720, 3116, 3130,
	2094, 823, 3003, 3086, 2189, 1017, 698, 2139, 2009, 2880,
	2143, 1130, 4158, 3027, 4782, 1949, 3470, 1130, 1130, 1064,
	820, 1518, 3076, 3008, 4783, 4258, 3213, 2166, 2167, 4061,
	1246, 4568, 823, 3159, 2184, 3108, 179, 4183, 3021, 2186,
	4340, 4698, 3074, 3136, 4807, 3031, 1246, 4642, 3355, 3127,
	2505, 2162, 4686, 4324, 1855, 3211, 2137, 3032, 4216, 2747,
	1004, 3162, 2585, 3164, 3156, 3138, 3254, 3140, 4891, 3142,
	3204, 2522, 1734, 1130, 1130, 3067, 2381, 2181, 3077, 1130,
	2136, 2141, 3475, 3893, 1064, 3088, 2760, 699, 3564, 1070,
	4643, 3758, 1130, 1130, 3152, 2163, 3056, 3075, 1130, 1130,
	3444, 3481, 2513, 2779, 1130, 2143, 3134, 2342, 3135, 2188,
	4878, 1005, 2530, 4268, 3302, 3300, 3301, 3293, 3294, 3295,
	3296, 3298, 3299, 2514, 1731, 2336, 2208, 3003, 2515, 4055,
	3137, 1653, 2520, 1769, 1952, 3477, 700, 2201, 701, 4273,
	4876, 4160, 4236, 3854, 2984, 3129, 4161, 1667, 1669, 1130,
	1130, 1130, 828, 829, 918, 1130, 4166, 3205, 3479, 4274,
	3139, 3170, 3141, 2137, 3143, 1130, 1735, 2937, 1276, 3158,
	3181, 4066, 3701, 3173, 4160, 1347, 1005, 2976, 2974, 4161,
	913, 914, 1130, 2206, 2978, 2980, 2970, 1686, 1248, 4166,
	2197, 4323, 2185, 1780, 3172, 4602, 3171, 3208, 4163, 3476,
	4691, 3480, 1079, 4621, 1248, 787, 4482, 2448, 3983, 4235,
	3176, 3165, 2143, 3191, 3167, 4167, 2168, 2196, 4234, 2503,
	4866, 4006, 2506, 3209, 3232, 3233, 2207, 3214, 3608, 3236,
	1062, 4163, 1004, 4896, 899, 900, 4919, 2261, 1943, 1274,
	1267, 2062, 1950, 3228, 4259, 1946, 4806, 3354, 4167, 689,
	1779, 2192, 3797, 4110, 789, 1779, 1064, 1071, 785, 4062,
	2451, 2153, 2105, 1774, 1615, 3438, 1615, 4406, 4781, 4508,
	3203, 4491, 4551, 2502, 1130, 1130, 1130, 1130, 3391, 4007,
	2150, 2151, 3939, 3926, 1130, 1130, 1130, 3878, 2138, 1130,
	3847, 1953, 2169, 3450, 3609, 3600, 831, 830, 3446, 1130,
	1252, 1395, 1063, 1006, 2881, 1130, 2745, 1130, 3347, 3348,
	2193, 3046, 3040, 3025, 2287, 4603, 1252, 2281, 2516, 2275,
	2267, 2102, 4500, 2247, 1951, 2246, 3870, 1950, 2518, 4867,
	4325, 2441, 3741, 1549, 1395, 4501, 3011, 3237, 3968, 3014,
	1278, 3016, 760, 3812, 3848, 4162, 1252, 3966, 1005, 1395,
	2909, 4659, 3702, 3243, 1778, 2864, 4624, 4009, 2393, 1778,
	832, 833, 1779, 3330, 2098, 4869, 2972, 4289, 1006, 4502,
	2021, 3849, 4271, 3846, 1395, 3384, 1953, 2986, 4162, 3349,
	4067, 2738, 1855, 3022, 4172, 4173, 3063, 3968, 1289, 3063,
	1334, 1948, 4460, 3371, 4458, 2138, 3966, 2100, 2985, 2977,
	2975, 2979, 2981, 2971, 2973, 2987, 4383, 3462, 3458, 1951,
	3457, 2327, 1130, 3210, 3196, 2983, 2741, 4172, 4173, 3174,
	3825, 3352, 1780, 3212, 1007, 3970, 1130, 1780, 3357, 3359,
	901, 902, 4504, 3351, 2142, 1703, 1334, 3439, 3440, 2786,
	2101, 2021, 4895, 3385, 3798, 3380, 2785, 3974, 2990, 1709,
	1708, 1008, 1949, 3799, 4111, 4503, 2784, 2740, 3460, 1130,
	3969, 3464, 2739, 2783, 2782, 4068, 1778, 2504, 2142, 2442,
	3144, 1590, 1364, 4505, 3970, 1334, 3029, 1068, 3430, 3358,
	1604, 3423, 3389, 3377, 3369, 1591, 1952, 3341, 4395, 1007,
	3372, 3373, 3436, 3325, 3326, 3327, 4562, 1334, 1602, 1334,
	4455, 3356, 916, 4250, 1009, 3370, 3573, 3461, 2885, 3969,
	3466, 3885, 4604, 3468, 3650, 3375, 1008, 3376, 2285, 2200,
	4827, 1395, 3875, 3871, 2910, 2911, 4599, 4370, 2200, 3001,
	3415, 1687, 1334, 3535, 4306, 3537, 1334, 3400, 3541, 3447,
	1006, 3397, 3547, 3393, 3394, 3395, 3396, 3111, 3006, 3004,
	2315, 3964, 2217, 1661, 3492, 3533, 4391, 4390, 4665, 4378,
	4672, 1334, 4563, 2015, 4656, 3412, 3522, 3363, 3403, 1009,
	4117, 1952, 1393, 3850, 2018, 1334, 1492, 1334, 3814, 2610,
	4831, 1395, 1753, 3515, 4693, 4832, 3424, 3420, 814, 1334,
	4829, 3419, 3417, 4396, 3421, 3422, 1755, 4767, 3431, 3425,
	1334, 3426, 3583, 3427, 3530, 4379, 4305, 3437, 3442, 3392,
	4591, 3496, 2404, 4740, 3510, 1334, 1752, 2609, 4583, 1750,
	1727, 4346, 4109, 1725, 3973, 1697, 1250, 3322, 2991, 1695,
	759, 3967, 1252, 1693, 2015, 3717, 3616, 2982, 3445, 3451,
	3478, 1691, 1250, 3101, 1247, 2018, 4666, 2009, 3488, 3494,
	4564, 3676, 3101, 3675, 3413, 3285, 1689, 1334, 1334, 3592,
	1247, 1007, 3215, 3364, 1683, 1677, 1675, 3568, 3026, 3571,
	3501, 3508, 1250, 2949, 1600, 3599, 3504, 3495, 2899, 2813,
	3967, 2413, 1334, 3614, 3876, 1983, 1061, 3523, 1008, 1979,
	1247, 1756, 3607, 3531, 3502, 1639, 4447, 3323, 3503, 3509,
	3555, 3511, 3697, 3625, 2932, 3544, 3542, 3696, 3550, 2384,
	3548, 3636, 1774, 3362, 3150, 2351, 3409, 3410, 2009, 3411,
	2226, 1603, 3149, 4506, 3118, 2430, 1714, 1395, 2354, 4507,
	1395, 2266, 2245, 3518, 3543, 2050, 1888, 3556, 3549, 1601,
	3560, 1009, 1650, 915, 1573, 4217, 3368, 3930, 2907, 3929,
	3680, 4218, 4201, 3575, 4655, 3567, 4287, 3610, 264, 1018,
	4223, 3617, 4214, 1130, 3596, 3534, 3597, 3595, 4804, 1130,
	1130, 820, 4282, 1130, 1130, 1130, 4153, 1130, 3673, 4005,
	3996, 1754, 3672, 823, 3942, 3738, 1130, 2021, 3927, 3900,
	3898, 3554, 3652, 2406, 1071, 1130, 3648, 2405, 3622, 3877,
	1130, 1751, 3634, 3635, 1749, 1726, 1395, 3631, 1724, 1990,
	1696, 1246, 3695, 3624, 1694, 1130, 179, 179, 1692, 3603,
	3646, 3694, 3598, 1395, 3588, 3059, 1690, 1246, 3051, 3044,
	3033, 3674, 3019, 2021, 2021, 1130, 1130, 3018, 1130, 1130,
	1130, 1688, 2133, 2999, 3684, 2830, 3685, 2134, 3686, 1682,
	1676, 1674, 3703, 3365, 3366, 3367, 1130, 1246, 3615, 1599,
	1130, 3613, 2021, 2021, 1130, 1130, 1130, 1130, 1130, 1130,
	1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
	1130, 1130, 1130, 1130, 3691, 1130, 3770, 2825, 3771, 2244,
	2383, 3720, 2242, 1130, 1130, 2021, 2350, 2219, 3730, 3731,
	1130, 2225, 3700, 2202, 2170, 2157, 3690, 2144, 2083, 2080,
	2077, 1130, 2074, 2069, 2094, 2067, 2063, 1023, 1025, 1027,
	2054, 4795, 1252, 1252, 1993, 1227, 1130, 4273, 3545, 4820,
	2106, 1783, 3194, 2211, 4561, 3168, 3166, 2992, 2416, 4703,
	4311, 4304, 4303, 4230, 3727, 1615, 3725, 4274, 4145, 3102,
	2125, 1228, 1554, 4493, 2886, 4486, 3692, 1395, 1250, 3737,
	2861, 2135, 2861, 4017, 3843, 3698, 2152, 2341, 3753, 1248,
	3744, 3746, 3747, 1310, 3809, 2859, 1247, 2883, 2139, 3760,
	2015, 2378, 1747, 1748, 2414, 1248, 2373, 4702, 2348, 3482,
	3483, 2018, 3484, 3485, 3486, 3768, 4193, 2284, 1309, 3769,
	1790, 1791, 4225, 1673, 3830, 4528, 1130, 2889, 3775, 3801,
	4393, 4118, 4096, 3773, 3473, 1248, 3816, 2890, 2912, 1790,
	1791, 1787, 1138, 1343, 1277, 1130, 2015, 2015, 3195, 3810,
	2415, 2461, 3761, 1982, 3821, 3822, 4823, 2018, 2018, 2890,
	3524, 3525, 1784, 3526, 3527, 3528, 3802, 3546, 4814, 1793,
	4776, 2136, 2141, 3017, 261, 2015, 2015, 3993, 1130, 1130,
	2461, 3776, 1229, 2268, 2009, 1792, 2018, 2018, 268, 268,
	268, 179, 692, 693, 1354, 708, 692, 708, 718, 3818,
	3819, 758, 1310, 1310, 1792, 778, 3938, 2956, 2015, 2954,
	784, 3832, 2963, 3805, 2945, 2943, 3671, 268, 2892, 2018,
	1130, 686, 2894, 4664, 4863, 3833, 4649, 2944, 3937, 3669,
	2009, 2009, 4611, 4615, 4609, 2893, 4560, 895, 3662, 4477,
	4453, 4371, 4003, 268, 1334, 3995, 3982, 3840, 3602, 1334,
	3066, 2725, 3911, 2089, 2137, 2002, 4695, 4392, 2935, 2009,
	2009, 4696, 1510, 1246, 1509, 3401, 4894, 3291, 3292, 4002,
	3851, 3852, 1790, 1791, 2021, 3916, 3918, 3748, 3915, 4695,
	2127, 4835, 4478, 1520, 4696, 3864, 3865, 3881, 3867, 2853,
	2854, 4088, 2009, 2605, 3934, 3932, 3940, 2851, 2852, 2131,
	3767, 1660, 3856, 2143, 3903, 1334, 2853, 1659, 3868, 2851,
	3908, 1130, 3869, 2640, 1729, 4429, 4227, 1728, 4222, 1252,
	1130, 4221, 4019, 3956, 3958, 4084, 3072, 3855, 3749, 3539,
	1334, 1334, 1334, 2907, 3536, 1882, 3664, 1881, 3989, 4880,
	4842, 4653, 4652, 4651, 4590, 4026, 4589, 1334, 1334, 1334,
	4544, 3663, 3899, 3101, 3901, 4456, 2129, 3972, 4010, 4423,
	4368, 4365, 3962, 4363, 4261, 3971, 1334, 4247, 1250, 1250,
	4191, 3960, 1395, 692, 692, 4014, 4140, 4041, 4011, 4023,
	3977, 268, 3896, 3888, 3606, 3952, 1247, 1247, 3990, 3949,
	3605, 3467, 3418, 4030, 3961, 3155, 3147, 3126, 1395, 2130,
	3125, 1130, 1130, 4013, 3976, 3994, 4042, 1130, 1130, 2021,
	3124, 3123, 1130, 1130, 3050, 1130, 3020, 2884, 2821, 2817,
	1130, 1248, 2237, 3950, 2806, 3941, 2805, 2794, 3997, 3999,
	2534, 1130, 2407, 2379, 2372, 3860, 2371, 2370, 4012, 2369,
	2368, 2282, 3660, 2256, 2252, 2251, 2250, 1130, 4021, 4020,
	4025, 3951, 4015, 2249, 2248, 2057, 2056, 2055, 4053, 2053,
	4051, 4031, 4032, 1992, 4037, 4069, 1746, 2015, 4052, 4033,
	4036, 4039, 3451, 4040, 1745, 1684, 1568, 1567, 2018, 1566,
	1565, 4070, 1564, 1563, 1562, 1557, 2138, 1553, 1551, 4082,
	1550, 1503, 1502, 1501, 1386, 1385, 1384, 1383, 1382, 1346,
	1296, 1295, 1294, 1293, 1292, 4063, 1291, 1290, 1252, 1288,
	1283, 270, 1282, 4078, 4058, 3671, 1252, 1281, 1280, 1279,
	1395, 1210, 1395, 888, 8, 2096, 1029, 1015, 3669, 1252,
	4566, 4170, 4169, 4168, 2403, 92, 1559, 3662, 850, 86,
	1334, 1334, 2209, 3895, 4770, 983, 4692, 4594, 1542, 858,
	1395, 2009, 4674, 1246, 1246, 3991, 3469, 2968, 3384, 2353,
	1685, 2355, 3670, 3665, 3666, 3667, 3668, 3379, 2767, 4641,
	4092, 3253, 4146, 4147, 4535, 1252, 4339, 1252, 2608, 1886,
	3334, 88, 4108, 1114, 1160, 2094, 4257, 4256, 4154, 3880,
	3091, 4254, 4253, 2006, 2008, 1078, 1398, 4194, 4714, 2107,
	1334, 1120, 2015, 4126, 4177, 2123, 4177, 2116, 2807, 2684,
	1395, 1137, 1334, 2018, 1134, 1334, 2010, 2012, 1136, 4180,
	4119, 1135, 2011, 1906, 1319, 1133, 1395, 4115, 4124, 4120,
	4121, 2094, 4125, 4129, 4122, 3664, 2005, 4001, 3070, 3632,
	1609, 4226, 1607, 4228, 985, 1250, 4130, 4195, 4133, 4150,
	3663, 2111, 2528, 2592, 3242, 1879, 1094, 1116, 2589, 4138,
	1272, 1105, 1093, 1247, 1334, 1334, 3360, 3339, 4152, 179,
	2094, 3619, 4144, 3839, 1487, 2440, 868, 1498, 1319, 4251,
	3288, 2595, 1263, 2708, 1334, 2700, 2009, 2696, 3428, 3060,
	1760, 2464, 2094, 4353, 2094, 4123, 1395, 1857, 3071, 1380,
	4215, 1334, 1098, 1092, 2526, 1870, 4229, 3220, 2450, 4220,
	3626, 1248, 1248, 3382, 2800, 4699, 3757, 3153, 2260, 1226,
	1225, 1270, 1224, 4245, 4680, 4677, 1252, 2094, 2199, 4034,
	4248, 2094, 4213, 4276, 3581, 2099, 2845, 2538, 1334, 1334,
	1334, 1334, 3589, 1110, 1497, 1319, 1319, 4239, 4210, 2397,
	3345, 3651, 1395, 4279, 4290, 4177, 4244, 4246, 1570, 4181,
	783, 4400, 4238, 4237, 1130, 1130, 1130, 1122, 4307, 1842,
	2989, 2988, 4555, 4199, 4291, 1365, 4196, 4197, 1363, 4285,
	4252, 1362, 1395, 4294, 2606, 4267, 4208, 1130, 1361, 4211,
	1130, 1130, 4851, 4917, 3891, 3890, 3889, 235, 3188, 1781,
	1130, 1773, 4200, 2021, 232, 234, 4299, 233, 1130, 1130,
	4292, 4262, 3844, 3388, 4209, 4774, 3913, 4212, 3572, 3998,
	23, 22, 4278, 1395, 21, 1334, 113, 42, 20, 4331,
	1246, 4316, 152, 130, 1250, 149, 4314, 1265, 148, 122,
	4319, 4313, 1250, 4326, 147, 146, 145, 4320, 1395, 144,
	151, 143, 1247, 142, 137, 1250, 1130, 141, 140, 139,
	1247, 3670, 3665, 3666, 3667, 3668, 138, 136, 134, 1130,
	1285, 135, 4336, 1247, 129, 133, 4342, 132, 1130, 131,
	2777, 128, 268, 2021, 268, 268, 4275, 1314, 268, 1324,
	127, 126, 1130, 4054, 125, 1130, 124, 123, 121, 153,
	1344, 1250, 4374, 1250, 120, 119, 118, 4348, 778, 1130,
	4310, 778, 117, 4359, 4360, 116, 1395, 4403, 115, 1247,
	114, 1247, 771, 1334, 4362, 772, 61, 60, 112, 110,
	111, 19, 40, 1334, 1334, 268, 14, 268, 268, 1314,
	4382, 268, 268, 4375, 4373, 65, 1324, 66, 18, 13,
	35, 91, 102, 101, 36, 99, 98, 34, 17, 16,
	268, 4422, 1522, 15, 96, 3583, 4446, 95, 33, 4434,
	31, 11, 9, 37, 1967, 12, 5, 4468, 1395, 184,
	183, 1334, 186, 1547, 182, 4459, 185, 4425, 1248, 90,
	181, 4424, 4420, 180, 89, 29, 2015, 10, 176, 1252,
	1252, 4469, 1572, 3987, 81, 1324, 178, 2018, 177, 268,
	268, 4431, 1314, 175, 174, 173, 4448, 4472, 82, 1246,
	1130, 1130, 4449, 79, 172, 2856, 4451, 1246, 4177, 4177,
	4457, 4452, 4476, 778, 4487, 268, 268, 1130, 2021, 85,
	1246, 4511, 4512, 4467, 171, 80, 84, 83, 27, 4490,
	6, 64, 1250, 4496, 4488, 7, 4321, 3677, 895, 4438,
	105, 4484, 106, 4515, 38, 77, 76, 4489, 4494, 4294,
	1247, 4495, 75, 26, 4509, 1130, 2015, 1130, 63, 1130,
	2009, 4412, 4414, 4415, 25, 170, 1246, 2018, 1246, 1252,
	217, 216, 215, 214, 4524, 4525, 213, 4436, 212, 211,
	4523, 210, 1130, 2445, 1252, 4550, 205, 204, 209, 207,
	206, 208, 4430, 203, 4432, 227, 4433, 226, 4177, 220,
	219, 225, 224, 223, 222, 4437, 4527, 221, 218, 229,
	202, 201, 200, 4177, 198, 4426, 268, 194, 193, 197,
	1498, 4549, 4533, 4546, 199, 196, 4578, 195, 192, 228,
	72, 2142, 4577, 168, 169, 71, 1130, 1130, 268, 4571,
	2009, 4570, 167, 166, 165, 164, 1130, 163, 4492, 4598,
	162, 1252, 161, 70, 1252, 24, 2, 1248, 1334, 1,
	0, 0, 0, 0, 0, 1248, 0, 1498, 1334, 1334,
	0, 4585, 0, 0, 0, 0, 4587, 0, 1248, 4260,
	4177, 0, 0, 4177, 0, 1334, 0, 4592, 0, 0,
	0, 0, 4277, 4618, 0, 4632, 4620, 4605, 4472, 1130,
	1130, 0, 4606, 4607, 0, 4617, 4613, 4610, 4612, 1130,
	0, 2015, 0, 4626, 0, 4298, 0, 1246, 4543, 0,
	4628, 4545, 2018, 0, 1248, 0, 1248, 4630, 4631, 2702,
	4629, 4625, 0, 0, 0, 0, 0, 0, 0, 0,
	4636, 0, 0, 0, 4635, 0, 0, 0, 4667, 0,
	0, 0, 1130, 1130, 0, 1130, 4671, 4646, 0, 0,
	4650, 0, 0, 0, 0, 0, 0, 1092, 1092, 1092,
	0, 0, 0, 4645, 0, 0, 0, 4662, 4663, 4701,
	4679, 4682, 0, 0, 0, 1479, 0, 4697, 4694, 1479,
	4670, 0, 4669, 0, 0, 2009, 0, 0, 0, 0,
	0, 0, 4586, 4719, 2094, 1250, 1250, 4688, 0, 0,
	4722, 0, 0, 1130, 1130, 1130, 0, 0, 4723, 4684,
	0, 0, 0, 1247, 1247, 4704, 4683, 0, 0, 4687,
	0, 0, 0, 0, 0, 4710, 0, 0, 0, 692,
	4718, 0, 4754, 0, 0, 0, 1130, 0, 0, 4717,
	0, 0, 0, 0, 0, 4736, 4737, 0, 0, 4739,
	268, 4759, 268, 4738, 0, 0, 268, 0, 3217, 3218,
	0, 4637, 0, 4638, 0, 1248, 0, 0, 0, 1522,
	1314, 1987, 268, 0, 268, 0, 0, 4784, 0, 4788,
	268, 1522, 708, 4777, 4786, 1250, 0, 268, 1522, 0,
	1522, 4799, 4773, 1130, 0, 4798, 0, 4757, 0, 4785,
	1250, 0, 2058, 1247, 0, 0, 4800, 0, 4805, 0,
	0, 0, 4793, 0, 268, 0, 0, 4794, 1247, 0,
	0, 268, 0, 0, 0, 4821, 0, 0, 2272, 4792,
	4689, 4815, 4825, 4690, 4811, 4812, 4817, 4813, 0, 0,
	0, 4796, 4797, 0, 4824, 0, 0, 4802, 1252, 4701,
	1252, 2142, 4679, 4828, 4845, 4682, 1522, 4826, 0, 4834,
	778, 4847, 0, 4856, 0, 0, 4858, 1250, 4843, 4598,
	1250, 4844, 4857, 4839, 0, 4853, 0, 4177, 0, 4177,
	1246, 1246, 0, 0, 0, 1247, 0, 4871, 1247, 0,
	4846, 0, 4848, 0, 0, 0, 4873, 0, 0, 4870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4755, 0, 4884, 0, 0, 0, 0, 0, 4882, 0,
	0, 0, 4889, 4881, 1130, 1130, 0, 0, 0, 0,
	0, 4886, 0, 1130, 0, 1130, 1130, 0, 4888, 4892,
	3315, 3316, 3317, 3318, 4898, 0, 4769, 4906, 4772, 0,
	0, 0, 0, 4909, 4912, 4902, 3072, 4911, 4907, 0,
	4910, 0, 0, 0, 0, 0, 4908, 4905, 0, 4920,
	1246, 4913, 4925, 0, 4923, 4922, 0, 4926, 0, 4927,
	4916, 4929, 4924, 0, 0, 1246, 0, 4932, 4921, 4934,
	2398, 0, 0, 0, 0, 4933, 1130, 0, 4936, 3346,
	0, 0, 0, 4940, 4943, 4942, 0, 0, 4929, 4899,
	4900, 0, 0, 0, 0, 0, 4937, 0, 4939, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 268, 0,
	0, 0, 3374, 0, 4852, 0, 0, 0, 1248, 1248,
	4596, 0, 0, 0, 0, 2094, 0, 3387, 0, 0,
	0, 0, 1246, 0, 0, 1246, 0, 2094, 0, 0,
	2094, 0, 0, 0, 4616, 0, 0, 0, 0, 0,
	4938, 0, 3407, 0, 4877, 0, 0, 0, 0, 0,
	4879, 0, 268, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 268, 0, 0, 0,
	692, 0, 268, 1790, 1791, 0, 0, 0, 1248, 2094,
	0, 0, 0, 3178, 778, 4901, 1479, 0, 895, 0,
	0, 0, 0, 1248, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 1314, 268, 0, 0, 0,
	0, 0, 0, 0, 1250, 0, 1250, 0, 0, 1846,
	778, 0, 0, 0, 0, 0, 0, 268, 1792, 0,
	0, 0, 1247, 0, 1247, 2352, 4705, 0, 1812, 0,
	268, 268, 4707, 268, 0, 268, 0, 268, 0, 268,
	1248, 0, 0, 1248, 2702, 2702, 0, 0, 0, 0,
	0, 3291, 3292, 0, 3309, 3310, 3311, 0, 0, 0,
	0, 0, 0, 0, 2389, 0, 0, 2390, 0, 2391,
	0, 0, 1242, 4074, 73, 1319, 0, 0, 0, 0,
	0, 268, 268, 268, 268, 1092, 0, 0, 0, 0,
	0, 74, 0, 1479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 758, 3387,
	0, 0, 778, 1815, 1816, 1817, 1818, 0, 263, 263,
	688, 0, 0, 1798, 1319, 0, 3306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 1319, 1319, 0, 0, 3291,
	3292, 1821, 3309, 3310, 3311, 0, 0, 0, 1793, 0,
	0, 1820, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 3722, 0, 0, 0, 0, 0, 0, 889, 1246,
	0, 1246, 0, 0, 1846, 0, 0, 0, 2094, 0,
	49, 0, 107, 1792, 0, 2540, 0, 93, 104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3297, 0, 0, 0, 0, 2702, 2702, 2702, 2702,
	1813, 0, 0, 0, 3306, 1479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 1492, 0, 0, 1393, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	3713, 3714, 0, 0, 0, 0, 692, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 3313, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	692, 0, 0, 0, 1843, 0, 0, 268, 1798, 692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 3307, 3297,
	0, 0, 0, 0, 3734, 0, 0, 0, 0, 268,
	1324, 0, 0, 0, 0, 0, 0, 1248, 0, 1248,
	0, 3750, 0, 0, 0, 0, 1820, 1822, 0, 1819,
	3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786,
	3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796,
	0, 3800, 1814, 0, 0, 0, 0, 0, 268, 1324,
	0, 0, 0, 708, 3313, 0, 0, 2820, 0, 0,
	0, 0, 1843, 268, 0, 0, 268, 0, 0, 0,
	268, 0, 268, 97, 0, 1813, 0, 1314, 0, 268,
	268, 0, 1324, 1324, 2836, 0, 1498, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 3307, 1319, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 187, 100,
	0, 0, 103, 0, 0, 0, 2873, 0, 0, 0,
	3308, 0, 78, 0, 0, 3842, 0, 268, 1498, 1843,
	1498, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	268, 0, 0, 0, 1479, 0, 890, 0, 0, 0,
	1843, 150, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 778, 0, 0, 0, 0, 1803,
	1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800, 0, 0,
	0, 0, 0, 0, 0, 268, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 889, 0, 0, 0, 1814, 0, 0,
	0, 0, 154, 0, 0, 1088, 0, 107, 268, 3009,
	0, 0, 93, 104, 0, 0, 0, 191, 3308, 0,
	0, 0, 0, 0, 0, 237, 0, 1479, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 268, 230, 268,
	0, 0, 0, 0, 0, 0, 268, 231, 0, 0,
	3303, 3304, 3305, 0, 0, 1845, 3055, 3302, 3300, 3301,
	3293, 3294, 3295, 3296, 3298, 3299, 2873, 0, 692, 0,
	0, 94, 0, 0, 1620, 0, 0, 3084, 895, 0,
	2873, 2873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 1314,
	268, 0, 0, 1479, 0, 0, 0, 1522, 0, 1522,
	1324, 268, 0, 0, 1314, 0, 1314, 0, 1314, 0,
	0, 0, 0, 0, 0, 1085, 0, 1794, 1795, 1796,
	1797, 1799, 1800, 0, 0, 2232, 2702, 2702, 3303, 3304,
	3305, 0, 0, 0, 0, 3302, 3300, 3301, 3293, 3294,
	3295, 3296, 3298, 3299, 0, 0, 0, 0, 0, 0,
	0, 268, 268, 268, 268, 1314, 0, 0, 1314, 0,
	268, 0, 0, 268, 0, 0, 0, 0, 2797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1300, 0, 1300, 1300, 2702, 2702, 2702, 2702,
	2702, 2702, 2702, 2702, 2702, 2702, 2702, 2702, 2702, 2702,
	2702, 2702, 2702, 2702, 2702, 2702, 0, 2702, 1479, 0,
	0, 0, 0, 187, 100, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1390, 0, 0, 0, 0,
	0, 1496, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 890, 0, 0, 1790, 1791, 150, 0, 0, 0,
	1834, 1835, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 1498, 1498,
	0, 0, 0, 0, 1793, 1479, 0, 0, 0, 0,
	0, 238, 0, 1840, 0, 0, 0, 0, 1522, 0,
	4128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 154, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 4142, 1812,
	0, 0, 191, 0, 0, 1624, 1625, 0, 1809, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 0, 0, 0, 0, 2272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 1816, 1817, 1818, 0, 0,
	73, 0, 0, 0, 1798, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 1737, 74, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 268, 0,
	0, 0, 1831, 692, 0, 1841, 0, 0, 692, 0,
	0, 692, 1820, 1822, 692, 692, 0, 0, 0, 0,
	692, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 1807, 1808,
	1319, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	1393, 1813, 0, 0, 889, 0, 0, 0, 268, 1798,
	0, 0, 268, 268, 0, 0, 4345, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 0, 0, 0,
	4337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2873, 2873, 268, 0, 1987, 0, 0, 0, 0,
	0, 2873, 0, 0, 3453, 0, 0, 1820, 1822, 0,
	0, 0, 2873, 3453, 0, 2873, 3453, 0, 0, 3453,
	0, 4337, 4385, 0, 0, 1843, 0, 0, 0, 1498,
	0, 0, 94, 0, 268, 268, 1987, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 2464, 0, 0, 0,
	0, 1790, 1791, 0, 0, 0, 0, 0, 1987, 0,
	268, 0, 3514, 3514, 0, 0, 1813, 1314, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	1819, 1793, 0, 0, 0, 0, 0, 2873, 0, 2873,
	0, 3540, 2873, 1987, 0, 0, 2873, 1987, 0, 0,
	778, 0, 0, 1814, 0, 0, 1977, 1846, 0, 0,
	0, 0, 0, 0, 2464, 0, 1792, 0, 0, 0,
	0, 0, 1988, 0, 1496, 1314, 1812, 0, 0, 0,
	1832, 0, 268, 0, 0, 1809, 1522, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 3577, 0, 0, 3579, 2873, 0, 0, 268,
	0, 1845, 0, 268, 1300, 0, 1324, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 3055,
	4073, 0, 1314, 0, 268, 0, 0, 2873, 0, 692,
	0, 0, 0, 4532, 0, 0, 2873, 0, 0, 0,
	0, 1815, 1816, 1817, 1818, 0, 0, 0, 1814, 0,
	0, 1798, 0, 0, 0, 0, 0, 268, 3055, 0,
	0, 3055, 1479, 1830, 187, 100, 0, 0, 103, 0,
	0, 0, 0, 4554, 0, 0, 1833, 1810, 1806, 0,
	1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800, 0,
	0, 0, 0, 1328, 236, 1479, 3683, 0, 4576, 1820,
	1822, 0, 890, 0, 0, 0, 1845, 150, 0, 0,
	1479, 0, 0, 0, 3689, 0, 0, 1522, 0, 0,
	1314, 268, 0, 268, 0, 1807, 1808, 0, 0, 1314,
	0, 0, 0, 0, 0, 1479, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 73, 0, 0, 1813, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 74, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 1544, 0, 0, 1092, 78, 0,
	0, 237, 0, 1790, 1791, 0, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 230, 0, 0, 0, 0, 0,
	1582, 0, 0, 231, 0, 0, 1821, 3755, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 87, 0,
	0, 0, 1843, 0, 1319, 0, 0, 1623, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 1636, 2702, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 2258, 0, 0, 0, 2265, 0, 1812, 889,
	0, 0, 0, 0, 0, 0, 0, 1809, 2278, 0,
	0, 49, 1479, 107, 0, 0, 0, 1819, 93, 104,
	0, 0, 0, 0, 2290, 0, 2290, 2272, 0, 0,
	1945, 0, 2297, 0, 0, 0, 0, 1662, 2702, 1868,
	1814, 0, 0, 1873, 268, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3716, 0, 0, 0, 0, 0, 692, 692,
	0, 0, 1479, 2265, 0, 0, 2324, 94, 0, 0,
	0, 0, 0, 1815, 1816, 1817, 1818, 0, 0, 0,
	0, 1522, 1522, 1798, 0, 0, 0, 2344, 1845, 0,
	0, 0, 0, 0, 0, 0, 1522, 1522, 0, 1522,
	0, 2360, 0, 2362, 0, 2364, 0, 2366, 0, 2367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 1822, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2394, 2395, 2396, 0, 0, 0, 1807, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	791, 0, 778, 0, 1810, 1806, 0, 1803, 1801, 1802,
	1794, 1795, 1796, 1797, 1799, 1800, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3514, 0, 0, 1479, 2702,
	0, 1479, 1077, 0, 97, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3291, 3292, 0, 3309, 3310, 3311, 0,
	1987, 0, 268, 0, 0, 0, 708, 708, 1324, 2702,
	0, 0, 0, 0, 0, 3721, 0, 0, 0, 0,
	0, 268, 0, 0, 1843, 0, 0, 0, 0, 187,
	100, 268, 0, 103, 2702, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 268, 1479, 796, 0,
	0, 268, 0, 0, 0, 808, 0, 0, 0, 236,
	0, 0, 0, 0, 1479, 0, 0, 890, 3306, 801,
	2873, 268, 150, 0, 0, 0, 0, 0, 0, 1819,
	3084, 3084, 0, 0, 0, 0, 895, 895, 2873, 0,
	0, 0, 3055, 3055, 0, 0, 895, 2873, 0, 0,
	0, 0, 1814, 0, 2272, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 800, 0, 0,
	0, 0, 268, 0, 1319, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 2774, 0, 0, 0, 1826, 237, 0, 0, 798,
	1845, 0, 0, 3297, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4093, 1479, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 3291, 3292,
	0, 3309, 3310, 3311, 0, 0, 0, 0, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3313, 0,
	0, 0, 0, 2822, 0, 0, 1300, 0, 0, 0,
	1300, 0, 1300, 0, 0, 0, 1810, 1806, 0, 1803,
	1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800, 0, 2278,
	268, 0, 0, 0, 0, 0, 1522, 0, 268, 0,
	3307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 3306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 793, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 2873, 2873, 0, 3514,
	2873, 0, 0, 0, 797, 0, 0, 4179, 0, 4179,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 2873, 0, 3453, 1843, 0, 1826, 1522, 1522, 268,
	1987, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 1987, 0, 268, 1987, 0, 268, 0,
	3514, 0, 0, 0, 0, 1496, 803, 0, 3297, 0,
	0, 0, 795, 0, 0, 2873, 0, 2873, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3291,
	3292, 0, 3309, 3310, 3311, 0, 0, 0, 0, 3314,
	0, 0, 3308, 2873, 0, 0, 0, 0, 4264, 792,
	0, 0, 0, 0, 0, 0, 0, 2265, 0, 268,
	0, 0, 1826, 3313, 0, 0, 2278, 1826, 2302, 268,
	0, 0, 0, 0, 0, 0, 1826, 799, 0, 0,
	0, 1826, 0, 0, 1328, 2318, 0, 0, 0, 0,
	0, 754, 0, 0, 0, 2320, 0, 0, 4179, 0,
	0, 1522, 794, 0, 3306, 3307, 0, 2328, 0, 2331,
	2332, 2333, 0, 1479, 0, 0, 0, 0, 0, 3117,
	0, 0, 0, 0, 0, 805, 806, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3128, 1479,
	3131, 0, 0, 0, 0, 0, 1826, 0, 0, 1339,
	0, 2532, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 3291, 3292,
	0, 3309, 3310, 3311, 0, 0, 1077, 1077, 1077, 1843,
	0, 0, 3303, 3304, 3305, 0, 0, 0, 0, 3302,
	3300, 3301, 3293, 3294, 3295, 3296, 3298, 3299, 0, 3297,
	0, 3161, 1496, 3163, 1496, 0, 0, 0, 0, 0,
	3169, 0, 0, 0, 0, 0, 2873, 0, 3453, 0,
	0, 4377, 2707, 0, 0, 0, 0, 0, 0, 1524,
	268, 1530, 0, 1536, 1319, 0, 0, 0, 0, 0,
	4401, 0, 4401, 3306, 1300, 0, 0, 0, 0, 0,
	0, 0, 3197, 0, 0, 0, 0, 3308, 0, 0,
	0, 1479, 0, 1479, 3313, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3514, 0, 1314,
	0, 0, 0, 1826, 1826, 1826, 1826, 1826, 1826, 1826,
	1826, 1479, 0, 0, 1987, 0, 268, 0, 0, 0,
	1626, 0, 1631, 1826, 0, 0, 3307, 0, 0, 0,
	0, 0, 1640, 0, 1645, 0, 1826, 0, 0, 0,
	0, 4377, 0, 0, 0, 0, 0, 0, 0, 2873,
	0, 0, 0, 0, 0, 0, 0, 0, 3297, 0,
	0, 0, 0, 0, 0, 0, 0, 4481, 0, 0,
	0, 1479, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 2706, 0, 0, 0, 0, 1479, 0, 0,
	0, 4179, 4179, 0, 0, 1826, 0, 0, 0, 0,
	1843, 1826, 1710, 0, 0, 1716, 0, 0, 0, 0,
	268, 268, 0, 0, 0, 0, 0, 3303, 3304, 3305,
	0, 0, 0, 0, 3302, 3300, 3301, 3293, 3294, 3295,
	3296, 3298, 3299, 0, 3755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 1522, 3514, 4548, 0, 0, 1479, 0, 0,
	0, 4377, 0, 0, 0, 3307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3308, 0,
	0, 4179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4179, 0, 0, 0,
	0, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 1479, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	708, 0, 0, 0, 1867, 0, 0, 0, 0, 1843,
	1880, 0, 0, 1479, 0, 0, 0, 4264, 2837, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4179, 0, 268, 4179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3453, 0, 0, 0,
	0, 0, 0, 0, 1479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 1522, 0, 0, 0, 0, 1479,
	0, 0, 0, 0, 0, 738, 0, 3308, 3303, 3304,
	3305, 0, 0, 0, 0, 3302, 3300, 3301, 3293, 3294,
	3295, 3296, 3298, 3299, 0, 721, 0, 0, 1300, 4660,
	722, 0, 1496, 1496, 0, 1939, 1939, 1939, 0, 0,
	0, 0, 0, 0, 0, 4401, 1092, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 3441, 1522, 0, 0, 1479, 0, 723,
	0, 0, 0, 2873, 0, 2993, 0, 0, 0, 0,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 3491, 3493, 0, 0, 2278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3755, 0, 744, 0, 0, 0, 0, 0, 1479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 726, 0, 2707, 3303, 3304, 3305,
	0, 0, 0, 0, 3302, 3300, 3301, 3293, 3294, 3295,
	3296, 3298, 3299, 0, 0, 0, 0, 727, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1077, 0, 3119, 0, 0, 728,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 753,
	0, 0, 0, 4377, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 2707, 2707, 3590,
	0, 0, 0, 3594, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 2873, 0, 0, 0, 0, 0, 0,
	4179, 0, 4179, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 1826,
	0, 0, 0, 740, 0, 0, 0, 3647, 0, 0,
	0, 0, 0, 1826, 0, 1522, 0, 1092, 1092, 0,
	0, 1522, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826,
	1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826,
	1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826,
	1826, 1826, 1826, 1826, 1826, 1826, 1826, 1826, 0, 0,
	0, 3084, 0, 1826, 0, 1826, 1826, 1826, 1826, 0,
	2873, 3693, 0, 1496, 0, 731, 0, 2706, 2706, 0,
	0, 0, 0, 0, 0, 0, 3084, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 751, 0, 732, 0, 0, 3706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2707,
	2707, 2707, 2707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 752, 0, 0, 0,
	0, 0, 0, 0, 733, 0, 0, 0, 0, 748,
	749, 746, 0, 0, 0, 0, 0, 741, 0, 0,
	734, 0, 0, 1826, 0, 0, 1826, 0, 0, 1826,
	0, 0, 1826, 0, 0, 0, 0, 0, 1826, 1826,
	1826, 1826, 1826, 1826, 1826, 0, 0, 0, 0, 0,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 742, 0, 1790, 1791, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	2376, 0, 0, 0, 0, 0, 0, 737, 0, 1821,
	0, 0, 745, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 754, 3312, 0, 2706,
	2706, 2706, 2706, 0, 0, 2401, 1826, 739, 1826, 0,
	0, 0, 1846, 1826, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 2439,
	1809, 2443, 0, 0, 0, 0, 0, 0, 2457, 0,
	0, 0, 0, 0, 0, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 0, 2507, 0, 2509, 2510, 2511, 2512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 1816, 1817, 1818,
	2536, 0, 0, 0, 0, 0, 1798, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 2587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2617, 2620, 2623, 2626, 0, 0, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1822, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 0, 2698, 0, 2710, 2712,
	2717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2278, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 3986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2278, 0, 0, 0,
	0, 4004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3551, 2677, 2678, 2679,
	2680, 2673, 2674, 2675, 2676, 0, 0, 1843, 1826, 1826,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3576, 0, 0, 0, 0, 0,
	0, 0, 4056, 0, 0, 3593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3601, 0, 0, 0, 0, 0, 0, 0, 0, 2707,
	2707, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2653,
	2654, 2655, 2656, 0, 0, 1814, 0, 0, 0, 0,
	0, 0, 3642, 3643, 0, 0, 0, 0, 0, 0,
	0, 0, 2665, 2666, 2667, 2668, 2661, 2662, 2663, 2664,
	2669, 2670, 2671, 2672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 1845, 0, 0, 0, 0, 0, 2707,
	2707, 2707, 2707, 2707, 2707, 2707, 2707, 2707, 2707, 2707,
	2707, 2707, 2707, 2707, 2707, 2707, 2707, 2707, 2707, 0,
	2707, 0, 0, 0, 0, 0, 0, 0, 0, 2649,
	2650, 2651, 2652, 2657, 2658, 2659, 2660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1826, 0, 2706,
	2706, 3012, 3013, 1826, 3015, 0, 0, 0, 0, 0,
	0, 0, 0, 3312, 3312, 0, 0, 1826, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 1810,
	1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799,
	1800, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 4198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2706,
	2706, 2706, 2706, 2706, 2706, 2706, 2706, 2706, 2706, 2706,
	2706, 2706, 2706, 2706, 2706, 2706, 2706, 2706, 2706, 0,
	2706, 3312, 3312, 3312, 3312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3145,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 2278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4286,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 1823,
	1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1253, 1821,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 1847, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 1253, 0, 0, 0, 1253, 0,
	0, 1812, 0, 0, 0, 1253, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 738, 0, 0, 0, 0,
	0, 0, 0, 3200, 3201, 0, 0, 0, 1826, 3207,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 1253,
	722, 0, 0, 0, 0, 0, 0, 0, 3221, 3222,
	0, 0, 0, 0, 2587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	4387, 0, 0, 0, 0, 1253, 1815, 1816, 1817, 1818,
	724, 0, 1253, 0, 0, 0, 1798, 0, 0, 3231,
	0, 0, 0, 0, 0, 0, 1253, 0, 0, 0,
	0, 725, 0, 0, 0, 3245, 0, 0, 0, 3947,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3257, 744, 1831, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 1820, 1822, 2278, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 1837, 1253, 1838, 0, 0, 0, 0, 0, 0,
	1807, 1808, 0, 0, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 729, 1813, 0, 4027, 4028, 4029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 753,
	0, 0, 1328, 4043, 4044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2717, 2717, 2717, 0, 0, 0,
	4522, 1496, 0, 0, 743, 0, 0, 0, 1839, 1939,
	0, 0, 0, 0, 0, 0, 0, 3350, 0, 0,
	0, 0, 0, 0, 1826, 1826, 0, 0, 1826, 3312,
	3312, 1826, 0, 0, 0, 1826, 0, 1843, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 1826,
	1826, 1826, 1826, 0, 0, 0, 0, 0, 1826, 0,
	1826, 0, 1819, 3312, 3312, 3312, 3312, 3312, 3312, 3312,
	3312, 3312, 3312, 3312, 3312, 3312, 3312, 3312, 3312, 3312,
	3312, 3312, 3312, 0, 0, 1814, 3312, 0, 0, 1826,
	1826, 0, 1077, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 750, 0, 731, 1077, 0, 0, 0,
	1826, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4619, 0, 0, 0, 0,
	0, 0, 0, 0, 751, 0, 732, 0, 0, 3472,
	0, 0, 0, 1845, 0, 4135, 4136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1253, 1826,
	1253, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 0, 0, 0, 733, 1253, 0, 0, 0, 748,
	749, 746, 0, 0, 0, 0, 0, 741, 1826, 0,
	734, 0, 0, 0, 2022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 4673, 0,
	0, 0, 0, 0, 0, 1804, 1805, 1811, 1833, 1810,
	1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799,
	1800, 0, 735, 0, 742, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 2707, 0, 0, 0, 0,
	0, 0, 0, 0, 4712, 0, 0, 737, 0, 1328,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1253, 754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 2707, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4778, 0, 4315, 0, 4317, 4318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1826, 0,
	0, 0, 1826, 1826, 0, 0, 1826, 1826, 0, 0,
	0, 1826, 0, 0, 0, 1826, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 1823,
	1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0, 0,
	4364, 0, 0, 0, 0, 0, 0, 0, 1827, 1821,
	0, 0, 0, 2457, 1253, 1253, 1793, 0, 0, 3708,
	3709, 2706, 0, 3712, 1253, 1840, 0, 3715, 0, 0,
	0, 0, 0, 0, 0, 0, 3719, 0, 0, 0,
	0, 0, 1846, 0, 0, 3726, 0, 0, 0, 0,
	3350, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 2707, 0, 0, 3739, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3762, 3763, 0, 3764, 3765,
	3766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2707, 0, 0, 0, 3772, 0, 4450, 0,
	3774, 0, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 1253, 0, 1253, 0, 0, 0, 2707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1253,
	1253, 0, 0, 3803, 3804, 0, 1815, 1816, 1817, 1818,
	1253, 0, 0, 0, 0, 0, 1798, 0, 0, 0,
	0, 3815, 1253, 0, 1253, 1253, 1253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 1826,
	1826, 0, 0, 0, 1831, 0, 0, 1841, 0, 1826,
	1826, 3312, 2706, 0, 1820, 1822, 0, 0, 1826, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 1838, 0, 0, 0, 0, 0, 0,
	1807, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3312, 2706, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 3872, 0, 1826, 0,
	0, 0, 0, 1813, 0, 0, 1826, 2706, 0, 0,
	0, 0, 0, 0, 1826, 3883, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 2022, 2022, 1253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 3912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 1790, 1791,
	0, 1823, 1824, 1825, 1834, 1835, 1836, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 1328, 1328, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 1846, 0, 1253, 0, 3312, 0,
	0, 0, 1819, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 1826,
	3312, 0, 1809, 1826, 0, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3312, 0, 0, 0, 0, 0, 0, 0,
	0, 1939, 1832, 0, 0, 0, 0, 0, 0, 1253,
	4022, 0, 0, 0, 0, 0, 1253, 0, 0, 0,
	0, 0, 0, 0, 0, 1253, 0, 0, 0, 0,
	1826, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 0, 0, 0, 0, 1815, 1816,
	1817, 1818, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4071, 4072, 0, 0, 0, 1831, 4076, 4077, 1841,
	0, 0, 4080, 4081, 0, 1830, 1820, 1822, 0, 0,
	4085, 0, 0, 0, 0, 1804, 1805, 1811, 1833, 1810,
	1806, 4089, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799,
	1800, 0, 1807, 1808, 0, 4101, 0, 4094, 0, 4100,
	0, 0, 1126, 1253, 1253, 0, 0, 0, 0, 0,
	1829, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 1790, 1791, 0, 1823, 1824,
	1825, 1834, 1835, 1836, 0, 0, 0, 1253, 267, 267,
	267, 0, 0, 0, 0, 0, 0, 1827, 1821, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 821, 0, 0,
	0, 2022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 1843,
	1792, 0, 0, 821, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 1826, 0, 0, 0, 1814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 1815, 1816, 1817, 1818, 0,
	0, 0, 0, 0, 1832, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1253, 1845, 1253, 0, 0, 0,
	0, 1249, 0, 1831, 0, 0, 1841, 0, 0, 0,
	0, 1253, 0, 1820, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 1838, 0, 0, 0, 0, 0, 0, 1807,
	1808, 0, 0, 0, 0, 0, 839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 841, 1830, 0, 0,
	0, 842, 1813, 0, 4332, 4333, 4334, 1804, 1805, 1811,
	1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796,
	1797, 1799, 1800, 0, 0, 0, 0, 2457, 0, 0,
	4343, 4344, 0, 0, 0, 0, 0, 0, 0, 0,
	843, 0, 860, 0, 0, 0, 0, 1839, 4352, 4355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 844, 1790, 1791,
	0, 0, 845, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 869, 0, 0, 0, 1793, 0,
	0, 846, 0, 0, 0, 0, 0, 0, 0, 4402,
	0, 0, 0, 0, 0, 867, 0, 0, 4410, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 1819, 4418, 1792, 0, 1077, 0, 0, 840, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 4427,
	0, 0, 1809, 0, 1814, 0, 0, 0, 0, 0,
	847, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 0, 0,
	753, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3711, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 1816,
	1817, 1818, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 1820, 1822, 0, 0,
	0, 0, 0, 0, 1804, 1805, 1811, 1833, 1810, 1806,
	0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800,
	0, 0, 1807, 1808, 3266, 4553, 0, 0, 3267, 4557,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	1253, 1253, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 852, 0, 0,
	0, 0, 0, 0, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1253, 0, 0, 1253,
	0, 0, 0, 0, 0, 861, 1077, 1077, 0, 0,
	0, 0, 0, 0, 0, 0, 4614, 752, 0, 0,
	2022, 0, 0, 0, 1253, 0, 0, 0, 0, 1843,
	838, 0, 862, 0, 0, 0, 0, 0, 0, 0,
	1253, 853, 267, 0, 267, 267, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 859, 0, 0, 0,
	2457, 0, 0, 0, 0, 0, 0, 0, 0, 4355,
	0, 0, 0, 854, 1819, 0, 1253, 855, 874, 0,
	873, 2022, 0, 0, 856, 267, 0, 267, 267, 0,
	0, 267, 267, 0, 0, 0, 0, 1814, 857, 0,
	0, 0, 0, 866, 0, 0, 0, 0, 0, 875,
	821, 872, 0, 1077, 0, 1253, 0, 754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 0, 1253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 267,
	267, 1253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 4735, 4735, 4735, 1253, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1253, 0, 0, 0, 0, 4758, 0, 0, 0,
	0, 0, 0, 0, 0, 1253, 0, 1253, 0, 0,
	0, 1253, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796,
	1797, 1799, 1800, 0, 0, 1253, 0, 0, 0, 0,
	0, 0, 0, 4735, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 1253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 0, 0,
	1253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4735, 4893, 0, 0, 0, 0,
	0, 0, 0, 4897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 1791, 2022, 1823, 1824,
	1825, 1834, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1253, 1827, 1821, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 1253, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 2022, 2022, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 2022, 2022, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 1249, 0, 0, 2022, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 1961, 267, 0, 0, 0, 0, 0,
	821, 0, 1253, 1253, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 1815, 1816, 1817, 1818, 0,
	0, 0, 0, 0, 267, 1798, 0, 1253, 0, 0,
	0, 267, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 1841, 0, 1846, 0,
	0, 0, 0, 1820, 1822, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	1837, 0, 1838, 0, 0, 0, 1809, 0, 0, 1807,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 1816, 1817, 1818, 0, 1839, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1253, 1828, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 0, 0, 0, 0, 0,
	1820, 1822, 0, 0, 267, 0, 0, 0, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1253, 1807, 1808, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 1253, 1253, 0, 1814, 0, 0, 0, 0, 1813,
	0, 0, 267, 0, 0, 0, 267, 1253, 1253, 1253,
	0, 0, 267, 0, 0, 0, 0, 0, 267, 0,
	0, 1832, 0, 0, 0, 0, 1253, 0, 0, 0,
	0, 0, 1253, 0, 267, 0, 267, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 1253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	821, 267, 0, 267, 1830, 267, 0, 267, 1819, 267,
	0, 0, 0, 0, 1804, 1805, 1811, 1833, 1810, 1806,
	0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800,
	0, 1814, 0, 0, 2583, 0, 0, 0, 2584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1253, 0,
	0, 267, 267, 267, 267, 0, 1253, 0, 0, 0,
	1253, 0, 1253, 0, 0, 0, 0, 0, 0, 1253,
	0, 1115, 109, 0, 0, 0, 1139, 0, 0, 0,
	1253, 1253, 0, 0, 0, 0, 0, 0, 0, 1845,
	1253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1253, 0, 1253, 0, 0,
	0, 0, 269, 269, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 269, 1253, 0, 0, 1253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 1253, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1806, 269, 1803, 1801,
	1802, 1794, 1795, 1796, 1797, 1799, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1253, 1253, 0, 0, 0, 1790,
	1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0,
	0, 0, 0, 0, 1253, 0, 0, 0, 0, 0,
	0, 1827, 1821, 0, 0, 0, 1253, 0, 0, 1793,
	0, 1253, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 1052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1249, 1072, 0, 0, 1846, 1253, 0, 0, 0,
	0, 0, 0, 0, 1792, 1790, 1791, 1249, 1253, 1253,
	1253, 1253, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 267, 1253, 1809, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 267,
	1236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 2022, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 267, 1809,
	0, 0, 0, 1253, 0, 1253, 0, 0, 0, 1815,
	1816, 1817, 1818, 267, 0, 0, 267, 0, 0, 1798,
	267, 0, 267, 0, 0, 0, 0, 0, 1253, 267,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3206, 0, 0, 1831, 0, 0,
	1841, 0, 0, 2022, 0, 0, 0, 1820, 1822, 0,
	0, 0, 0, 0, 0, 1815, 1816, 1817, 1818, 0,
	0, 0, 0, 0, 1837, 1798, 1838, 0, 0, 0,
	0, 0, 0, 1807, 1808, 0, 1253, 267, 0, 0,
	0, 0, 0, 1253, 0, 0, 0, 0, 0, 0,
	267, 1829, 0, 1253, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 1820, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 1253, 1807,
	1808, 1253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 1253,
	1253, 0, 0, 0, 0, 0, 0, 0, 821, 1828,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 2022, 821,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 1253,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 267,
	0, 0, 0, 0, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	267, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 1253, 0, 0, 1253, 0, 0, 0, 1253, 0,
	0, 267, 267, 267, 267, 0, 0, 0, 1253, 1253,
	267, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 267, 0, 0, 0, 1830, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 1804, 1805,
	1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 4099, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 269, 269,
	0, 109, 269, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1806,
	0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	1337, 269, 269, 0, 1337, 269, 269, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 269, 269, 0, 0, 0, 0, 0,
	1790, 1791, 0, 0, 0, 0, 1072, 109, 109, 0,
	0, 1337, 0, 0, 0, 0, 0, 0, 1337, 269,
	269, 0, 109, 1821, 109, 0, 0, 0, 0, 0,
	1793, 0, 1337, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 1790, 1791, 0, 1823, 1824, 1825,
	1834, 1835, 1836, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 1827, 1821, 1253, 0,
	1253, 0, 0, 0, 1793, 1812, 0, 0, 0, 0,
	0, 0, 0, 1840, 1809, 0, 0, 0, 1337, 0,
	0, 0, 1249, 0, 0, 0, 0, 0, 0, 0,
	1846, 109, 0, 0, 0, 0, 0, 0, 1249, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	269, 0, 0, 0, 0, 0, 0, 0, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 3199,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 1816, 1817, 1818, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 267, 267, 0, 0, 1052, 0, 0, 0,
	0, 0, 0, 0, 1815, 1816, 1817, 1818, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 1860, 1820, 1822,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 1866, 0, 0, 0, 1872,
	0, 0, 0, 0, 1807, 1808, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 1820, 1822, 267, 267, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 1961, 0, 1813, 0, 1837,
	0, 1838, 0, 0, 0, 0, 0, 0, 1807, 1808,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 1962, 267, 109, 0, 0, 1839, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	821, 1337, 0, 0, 1828, 0, 269, 269, 269, 267,
	0, 0, 0, 267, 269, 1843, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 0, 0, 0, 269, 1814,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 1806, 0, 1803, 1801, 1802, 1794,
	1795, 1796, 1797, 1799, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 1805, 1811, 1833, 1810, 1806, 0,
	1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 3724, 269, 0,
	1337, 1337, 269, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 269, 0, 1249, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	269, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	1072, 0, 1072, 0, 0, 1337, 0, 1337, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 269, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	1337, 1337, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 269, 0, 269, 0, 269,
	0, 269, 0, 269, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 269, 269, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 1052, 0, 0, 1052, 1052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 2525, 0, 0, 267, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 1072, 0, 0, 0, 0, 0, 0,
	0, 1249, 0, 1866, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1396, 0, 0,
	0, 1396, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1236, 0, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 269, 109, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 269, 1249, 0,
	269, 0, 0, 0, 269, 1335, 269, 0, 0, 0,
	0, 1961, 0, 269, 269, 0, 0, 0, 0, 1337,
	1337, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1961, 0, 1961,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 267, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 109, 269, 0, 109, 0, 109, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 269, 0, 1337, 0, 0, 1961, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 109, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 1396, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 813, 0, 0, 0, 0, 1131, 0, 813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 269, 269, 269, 269, 0,
	0, 0, 0, 0, 269, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 1961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 267, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1821, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 1335, 0,
	0, 0, 0, 0, 1846, 0, 0, 1396, 0, 0,
	0, 1961, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 1961, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 0, 267, 1961, 0, 0, 0,
	0, 1236, 1335, 0, 1335, 0, 1335, 1337, 1815, 1816,
	1817, 1818, 0, 0, 0, 0, 0, 1236, 1798, 0,
	0, 0, 1335, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 1335, 0, 1335, 1335, 1335,
	0, 0, 0, 0, 0, 1337, 1831, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 1820, 1822, 0, 0,
	0, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 1837, 0, 1838, 0, 0, 267, 0,
	0, 0, 1807, 1808, 0, 0, 1337, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 269, 269, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 269, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 109, 0, 109, 109, 109,
	1839, 0, 0, 0, 0, 0, 1396, 0, 269, 269,
	0, 1337, 269, 0, 0, 0, 0, 0, 1828, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 1337, 269, 1337, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 109, 109, 0, 109, 109,
	109, 0, 0, 0, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 1396,
	0, 0, 0, 0, 0, 0, 269, 1814, 0, 0,
	0, 1337, 0, 1337, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 269, 1337, 0, 0, 0, 0,
	1961, 0, 1961, 269, 1832, 0, 1337, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 1236, 0, 1845, 1072, 0, 0, 1396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 1337, 1396, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1336, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 1805, 1811,
	1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796,
	1797, 1799, 1800, 1337, 0, 269, 1337, 269, 0, 0,
	0, 3269, 0, 0, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 0, 1397, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 1335, 1335, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1396, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 1823, 1824, 1825, 1834, 1835,
	1836, 0, 0, 0, 0, 0, 0, 1396, 0, 0,
	0, 0, 0, 0, 1827, 1821, 0, 0, 0, 0,
	0, 0, 1793, 1335, 0, 109, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 1236, 1236, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	813, 0, 1335, 0, 0, 0, 1809, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 1816, 1817, 1818, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	1820, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 1838,
	0, 0, 269, 0, 0, 0, 1807, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 1829, 1337, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 269, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 1337, 0, 0, 1839, 0, 0, 0, 0, 0,
	1236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1397, 1828, 0, 0, 0, 1337, 1337, 1337, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 1337, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 1337, 0, 0, 0, 269, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 1236,
	0, 0, 0, 0, 0, 0, 0, 1236, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 1337, 0,
	0, 0, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 1337, 0, 0,
	0, 1830, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 1804, 1805, 1811, 1833, 1810, 1806, 1396, 1803, 1801,
	1802, 1794, 1795, 1796, 1797, 1799, 1800, 0, 0, 0,
	0, 0, 1396, 0, 0, 3268, 0, 0, 0, 0,
	1336, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 269, 0, 0, 1337, 1396, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 1337, 269,
	0, 1337, 269, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	1337, 1337, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	1337, 0, 0, 269, 0, 1336, 0, 1336, 0, 1336,
	0, 0, 1337, 269, 0, 0, 0, 1337, 1335, 0,
	109, 0, 0, 0, 0, 1336, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1336, 0, 0, 0,
	1335, 0, 1335, 0, 0, 0, 0, 0, 1336, 0,
	1336, 1336, 1336, 0, 1337, 1337, 1337, 1337, 0, 0,
	0, 0, 0, 0, 1396, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	1335, 0, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 813, 1335, 0, 0, 0, 0, 0, 0, 1337,
	0, 1337, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 1397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 1337,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	1337, 0, 0, 1790, 1791, 0, 1823, 1824, 1825, 1834,
	1835, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	1396, 0, 1397, 1396, 0, 1827, 1821, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 1337, 0, 0, 1337, 0, 0,
	0, 0, 2525, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 269, 269, 0, 1809, 0, 0,
	0, 0, 1397, 0, 0, 0, 0, 0, 0, 1396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1396, 0, 1397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 1816, 1817, 1818, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 1831, 0, 0, 1841, 0, 0, 0, 0, 1336,
	1336, 1820, 1822, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 269,
	1838, 0, 0, 0, 1337, 0, 0, 1807, 1808, 0,
	1396, 0, 0, 0, 1337, 1337, 0, 0, 0, 0,
	0, 0, 0, 1397, 0, 1829, 0, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 1336, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0,
	0, 0, 0, 0, 0, 1336, 0, 0, 0, 1819,
	0, 1827, 1821, 0, 0, 0, 0, 1335, 0, 1793,
	0, 0, 1335, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 1814, 0, 0, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	1336, 0, 1336, 0, 1792, 269, 0, 0, 0, 1832,
	0, 0, 0, 0, 1812, 0, 0, 1336, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 1335, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 1335, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 0, 1396, 0, 0, 0, 1815,
	1816, 1817, 1818, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 1396, 1804, 1805, 1811, 1833, 1810, 1806, 0, 1803,
	1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 3265, 1831, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 1820, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 1838, 0, 0, 0,
	0, 0, 0, 1807, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1396, 0, 1396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 1335, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 1396, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1396, 0, 1335, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 1396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 1790, 1791, 0, 1823, 1824, 1825,
	1834, 1835, 1836, 0, 0, 0, 0, 1335, 1335, 0,
	0, 0, 0, 0, 0, 1832, 1827, 1821, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 1335, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 1397, 0, 1396,
	0, 0, 0, 0, 1335, 0, 1845, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	1397, 0, 0, 0, 0, 0, 0, 0, 1809, 0,
	0, 1335, 1335, 1335, 1335, 1397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 1396, 1336, 0, 1804, 1805,
	1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 3264, 0, 1815, 1816, 1817, 1818, 0, 0,
	0, 0, 0, 0, 1798, 0, 1396, 0, 1335, 0,
	0, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 1841, 0, 0, 0, 0,
	0, 1336, 1820, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 1838, 0, 1336, 0, 1336, 0, 0, 1807, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1397, 0, 1396,
	0, 0, 0, 0, 0, 0, 1335, 0, 1336, 0,
	0, 1813, 1336, 0, 0, 0, 1335, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 1336, 0, 0, 1839, 1397, 0, 0,
	0, 1396, 0, 0, 1335, 1336, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1336, 1336, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1821, 1397, 0, 0, 1397, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 1335, 0, 1809, 0, 0, 0, 0, 0, 0,
	0, 1335, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1397, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 1397,
	0, 0, 0, 1804, 1805, 1811, 1833, 1810, 1806, 0,
	1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 3263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	1816, 1817, 1818, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 1823, 1824, 1825, 1834, 1835,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 1821, 0, 1831, 0, 0,
	1841, 0, 1793, 0, 0, 0, 0, 1820, 1822, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 1838, 0, 1846, 0,
	0, 0, 0, 1807, 1808, 0, 0, 1792, 0, 0,
	0, 0, 0, 1397, 0, 0, 0, 1812, 0, 0,
	0, 1829, 0, 0, 0, 0, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 1815, 1816, 1817, 1818, 0, 0, 0, 0,
	1843, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 1790, 1791, 1841, 1823, 1824, 1825, 1834, 1835, 1836,
	1820, 1822, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 1827, 1821, 0, 0, 1837, 0, 1838,
	1336, 1793, 0, 0, 0, 1336, 1807, 1808, 1814, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 1832, 1792, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1336, 1336, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 1336, 1336, 1336, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 0, 1397, 0,
	0, 1815, 1816, 1817, 1818, 0, 0, 0, 1830, 0,
	0, 1798, 0, 0, 0, 0, 0, 0, 1804, 1805,
	1811, 1833, 1810, 1806, 1397, 1803, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 0, 0, 0, 0, 1819, 0,
	0, 0, 2584, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 1820,
	1822, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 1838, 0,
	0, 0, 0, 0, 0, 1807, 1808, 0, 1832, 0,
	0, 0, 0, 0, 1790, 1791, 0, 1823, 1824, 1825,
	1834, 1835, 1836, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 1821, 1813, 1845,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1397, 0, 1397, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 1839, 0, 0, 1336, 1336, 0, 1812,
	0, 0, 0, 0, 0, 0, 1397, 0, 1809, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 1805, 1811, 1833, 1810, 1806, 0, 1803, 1801,
	1802, 1794, 1795, 1796, 1797, 1799, 1800, 0, 0, 0,
	0, 4661, 0, 0, 0, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1397, 0, 1336, 0,
	0, 1336, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 1397, 0, 1815, 1816, 1817, 1818, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 1336, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 1831, 0, 0, 1841, 0, 0, 0, 0,
	1336, 0, 1820, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 1397, 0, 0, 0, 0, 1336, 1845, 1837,
	0, 1838, 0, 0, 0, 0, 0, 0, 1807, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 1336, 1336, 1336, 1336, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 1397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 1397, 0,
	1804, 1805, 1811, 1833, 1810, 1806, 1839, 1803, 1801, 1802,
	1794, 1795, 1796, 1797, 1799, 1800, 0, 0, 0, 0,
	4657, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 1397,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1397, 0, 0, 0, 0, 0, 0, 1336,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1336,
	1336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1397, 0, 0, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 1805, 1811, 1833, 1810, 1806, 0,
	1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800, 0,
	0, 0, 0, 4572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1394, 0, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1336, 1336, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 1399, 284, 285, 1400, 1401,
	1402, 1336, 1403, 634, 1404, 1405, 1406, 1407, 286, 287,
	1193, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 1408, 639, 296, 297, 298, 299,
	300, 301, 1409, 1410, 0, 302, 640, 641, 642, 1411,
	303, 304, 643, 1412, 1338, 1413, 305, 306, 307, 308,
	309, 310, 311, 0, 1414, 313, 314, 315, 312, 316,
	1415, 317, 0, 318, 319, 320, 321, 322, 323, 1416,
	324, 325, 326, 1194, 327, 328, 329, 1417, 1418, 1420,
	1419, 1421, 1422, 1423, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 1424, 340, 336, 338, 1425, 341,
	339, 342, 1426, 343, 344, 345, 1427, 1428, 346, 347,
	348, 1429, 349, 350, 1430, 351, 352, 353, 1431, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 1432, 274, 1433, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	1434, 372, 373, 1435, 1436, 1195, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	1437, 386, 652, 1438, 653, 387, 1439, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 1197, 393, 394, 1440,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 1441, 1196, 403, 657, 658, 1442, 659,
	1443, 405, 406, 1198, 660, 1199, 407, 408, 409, 1200,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	1444, 417, 419, 418, 1445, 420, 661, 1201, 421, 422,
	1202, 1446, 423, 0, 0, 0, 424, 425, 428, 1447,
	1448, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1203, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1204, 469, 457, 1449, 276,
	1205, 470, 471, 1450, 662, 472, 663, 474, 475, 1451,
	0, 476, 0, 1452, 1453, 478, 479, 480, 1454, 1455,
	481, 482, 664, 1206, 483, 1207, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 1456,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 1457, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 1458, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 1459, 535, 536, 537, 1208,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	1460, 560, 561, 559, 562, 563, 564, 1461, 565, 566,
	548, 549, 567, 568, 1209, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 1462, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 1463, 592, 593, 0, 589, 580, 1464, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 1465, 602,
	675, 676, 677, 678, 1466, 611, 1467, 603, 604, 605,
	679, 606, 680, 1468, 607, 608, 609, 610, 0, 612,
	613, 1469, 1470, 614, 615, 616, 618, 619, 617, 620,
	1471, 621, 1472, 0, 622, 623, 624, 681, 682, 683,
	1473, 626, 625, 627, 684, 1474, 628, 1475, 1476, 1477,
	1478, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 0, 2752, 0, 0, 0, 0, 0,
	0, 0, 2753, 277, 279, 278, 280, 281, 282, 283,
	1399, 284, 285, 1400, 1401, 1402, 0, 1403, 634, 1404,
	1405, 1406, 1407, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 1408,
	639, 296, 297, 298, 299, 300, 301, 1409, 1410, 0,
	302, 640, 641, 642, 1411, 303, 304, 643, 1412, 1338,
	1413, 305, 306, 307, 308, 309, 310, 311, 0, 1414,
	313, 314, 315, 312, 316, 1415, 317, 0, 318, 319,
	320, 321, 322, 323, 1416, 324, 325, 326, 1194, 327,
	328, 329, 1417, 1418, 1420, 1419, 1421, 1422, 1423, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 1424,
	340, 336, 338, 1425, 341, 339, 342, 1426, 343, 344,
	345, 1427, 1428, 346, 347, 348, 1429, 349, 350, 1430,
	351, 352, 353, 1431, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	1432, 274, 1433, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 1434, 372, 373, 1435, 1436,
	1195, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 1437, 386, 652, 1438, 653,
	387, 1439, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1197, 393, 394, 1440, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 1441, 1196,
	403, 657, 658, 1442, 659, 1443, 405, 406, 1198, 660,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 1444, 417, 419, 418, 1445,
	420, 661, 1201, 421, 422, 1202, 1446, 423, 0, 0,
	0, 424, 425, 428, 1447, 1448, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 1449, 276, 1205, 470, 471, 1450, 662,
	472, 663, 474, 475, 1451, 0, 476, 0, 1452, 1453,
	478, 479, 480, 1454, 1455, 481, 482, 664, 1206, 483,
	1207, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 1456, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	1457, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 1458, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	1459, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 1460, 560, 561, 559, 562,
	563, 564, 1461, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	1462, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 1463, 592, 593,
	0, 589, 580, 1464, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 1465, 602, 675, 676, 677, 678, 1466,
	611, 1467, 603, 604, 605, 679, 606, 680, 1468, 607,
	608, 609, 610, 0, 612, 613, 1469, 1470, 614, 615,
	616, 618, 619, 617, 620, 1471, 621, 1472, 0, 622,
	623, 624, 681, 682, 683, 1473, 626, 625, 627, 684,
	1474, 628, 1475, 1476, 1477, 1478, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1394,
	0, 0, 0, 0, 3733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3735, 277, 279, 278, 280,
	281, 282, 283, 1399, 284, 285, 1400, 1401, 1402, 0,
	1403, 634, 1404, 1405, 1406, 1407, 286, 287, 1193, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 1408, 639, 296, 297, 298, 299, 300, 301,
	1409, 1410, 0, 302, 640, 641, 642, 1411, 303, 304,
	643, 1412, 1338, 1413, 305, 306, 307, 308, 309, 310,
	311, 0, 1414, 313, 314, 315, 312, 316, 1415, 317,
	0, 318, 319, 320, 321, 322, 323, 1416, 324, 325,
	326, 1194, 327, 328, 329, 1417, 1418, 1420, 1419, 1421,
	1422, 1423, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 1424, 340, 336, 338, 1425, 341, 339, 342,
	1426, 343, 344, 345, 1427, 1428, 346, 347, 348, 1429,
	349, 350, 1430, 351, 352, 353, 1431, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 1432, 274, 1433, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 1434, 372,
	373, 1435, 1436, 1195, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 1437, 386,
	652, 1438, 653, 387, 1439, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 1197, 393, 394, 1440, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 1441, 1196, 403, 657, 658, 1442, 659, 1443, 405,
	406, 1198, 660, 1199, 407, 408, 409, 1200, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 1444, 417,
	419, 418, 1445, 420, 661, 1201, 421, 422, 1202, 1446,
	423, 0, 0, 0, 424, 425, 428, 1447, 1448, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1203, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1204, 469, 457, 1449, 276, 1205, 470,
	471, 1450, 662, 472, 663, 474, 475, 1451, 0, 476,
	0, 1452, 1453, 478, 479, 480, 1454, 1455, 481, 482,
	664, 1206, 483, 1207, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 1456, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 1457, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	1458, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 1459, 535, 536, 537, 1208, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 1460, 560,
	561, 559, 562, 563, 564, 1461, 565, 566, 548, 549,
	567, 568, 1209, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 1462, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	1463, 592, 593, 0, 589, 580, 1464, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 1465, 602, 675, 676,
	677, 678, 1466, 611, 1467, 603, 604, 605, 679, 606,
	680, 1468, 607, 608, 609, 610, 0, 612, 613, 1469,
	1470, 614, 615, 616, 618, 619, 617, 620, 1471, 621,
	1472, 0, 622, 623, 624, 681, 682, 683, 1473, 626,
	625, 627, 684, 1474, 628, 1475, 1476, 1477, 1478, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4127, 277, 279, 278, 280, 281, 282, 283,
	1399, 284, 285, 1400, 1401, 1402, 0, 1403, 634, 1404,
	1405, 1406, 1407, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 1408,
	639, 296, 297, 298, 299, 300, 301, 1409, 1410, 0,
	302, 640, 641, 642, 1411, 303, 304, 643, 1412, 1338,
	1413, 305, 306, 307, 308, 309, 310, 311, 0, 1414,
	313, 314, 315, 312, 316, 1415, 317, 0, 318, 319,
	320, 321, 322, 323, 1416, 324, 325, 326, 1194, 327,
	328, 329, 1417, 1418, 1420, 1419, 1421, 1422, 1423, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 1424,
	340, 336, 338, 1425, 341, 339, 342, 1426, 343, 344,
	345, 1427, 1428, 346, 347, 348, 1429, 349, 350, 1430,
	351, 352, 353, 1431, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	1432, 274, 1433, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 1434, 372, 373, 1435, 1436,
	1195, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 1437, 386, 652, 1438, 653,
	387, 1439, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1197, 393, 394, 1440, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 1441, 1196,
	403, 657, 658, 1442, 659, 1443, 405, 406, 1198, 660,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 1444, 417, 419, 418, 1445,
	420, 661, 1201, 421, 422, 1202, 1446, 423, 0, 0,
	0, 424, 425, 428, 1447, 1448, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 1449, 276, 1205, 470, 471, 1450, 662,
	472, 663, 474, 475, 1451, 0, 476, 0, 1452, 1453,
	478, 479, 480, 1454, 1455, 481, 482, 664, 1206, 483,
	1207, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 1456, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	1457, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 1458, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	1459, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 1460, 560, 561, 559, 562,
	563, 564, 1461, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	1462, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 1463, 592, 593,
	0, 589, 580, 1464, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 1465, 602, 675, 676, 677, 678, 1466,
	611, 1467, 603, 604, 605, 679, 606, 680, 1468, 607,
	608, 609, 610, 0, 612, 613, 1469, 1470, 614, 615,
	616, 618, 619, 617, 620, 1471, 621, 1472, 0, 622,
	623, 624, 681, 682, 683, 1473, 626, 625, 627, 684,
	1474, 628, 1475, 1476, 1477, 1478, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4338, 277, 279, 278, 280, 281,
	282, 283, 1399, 284, 285, 1400, 1401, 1402, 0, 1403,
	634, 1404, 1405, 1406, 1407, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 1408, 639, 296, 297, 298, 299, 300, 301, 1409,
	1410, 0, 302, 640, 641, 642, 1411, 303, 304, 643,
	1412, 1338, 1413, 305, 306, 307, 308, 309, 310, 311,
	0, 1414, 313, 314, 315, 312, 316, 1415, 317, 0,
	318, 319, 320, 321, 322, 323, 1416, 324, 325, 326,
	1194, 327, 328, 329, 1417, 1418, 1420, 1419, 1421, 1422,
	1423, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 1424, 340, 336, 338, 1425, 341, 339, 342, 1426,
	343, 344, 345, 1427, 1428, 346, 347, 348, 1429, 349,
	350, 1430, 351, 352, 353, 1431, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 1432, 274, 1433, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 1434, 372, 373,
	1435, 1436, 1195, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 1437, 386, 652,
	1438, 653, 387, 1439, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 1197, 393, 394, 1440, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	1441, 1196, 403, 657, 658, 1442, 659, 1443, 405, 406,
	1198, 660, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 1444, 417, 419,
	418, 1445, 420, 661, 1201, 421, 422, 1202, 1446, 423,
	0, 0, 0, 424, 425, 428, 1447, 1448, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 1449, 276, 1205, 470, 471,
	1450, 662, 472, 663, 474, 475, 1451, 0, 476, 0,
	1452, 1453, 478, 479, 480, 1454, 1455, 481, 482, 664,
	1206, 483, 1207, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 1456, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 1457, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 1458,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 1459, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 1460, 560, 561,
	559, 562, 563, 564, 1461, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 1462, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 1463,
	592, 593, 0, 589, 580, 1464, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 1465, 602, 675, 676, 677,
	678, 1466, 611, 1467, 603, 604, 605, 679, 606, 680,
	1468, 607, 608, 609, 610, 0, 612, 613, 1469, 1470,
	614, 615, 616, 618, 619, 617, 620, 1471, 621, 1472,
	0, 622, 623, 624, 681, 682, 683, 1473, 626, 625,
	627, 684, 1474, 628, 1475, 1476, 1477, 1478, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4207, 277, 279, 278,
	280, 281, 282, 283, 1399, 284, 285, 1400, 1401, 1402,
	0, 1403, 634, 1404, 1405, 1406, 1407, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 1408, 639, 296, 297, 298, 299, 300,
	301, 1409, 1410, 0, 302, 640, 641, 642, 1411, 303,
	304, 643, 1412, 1338, 1413, 305, 306, 307, 308, 309,
	310, 311, 0, 1414, 313, 314, 315, 312, 316, 1415,
	317, 0, 318, 319, 320, 321, 322, 323, 1416, 324,
	325, 326, 1194, 327, 328, 329, 1417, 1418, 1420, 1419,
	1421, 1422, 1423, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 1424, 340, 336, 338, 1425, 341, 339,
	342, 1426, 343, 344, 345, 1427, 1428, 346, 347, 348,
	1429, 349, 350, 1430, 351, 352, 353, 1431, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 1432, 274, 1433, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 1434,
	372, 373, 1435, 1436, 1195, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 1437,
	386, 652, 1438, 653, 387, 1439, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1197, 393, 394, 1440, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 1441, 1196, 403, 657, 658, 1442, 659, 1443,
	405, 406, 1198, 660, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 1444,
	417, 419, 418, 1445, 420, 661, 1201, 421, 422, 1202,
	1446, 423, 0, 0, 0, 424, 425, 428, 1447, 1448,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 1449, 276, 1205,
	470, 471, 1450, 662, 472, 663, 474, 475, 1451, 0,
	476, 0, 1452, 1453, 478, 479, 480, 1454, 1455, 481,
	482, 664, 1206, 483, 1207, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 1456, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 1457, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 1458, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 1459, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 1460,
	560, 561, 559, 562, 563, 564, 1461, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 1462, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 1463, 592, 593, 0, 589, 580, 1464, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 1465, 602, 675,
	676, 677, 678, 1466, 611, 1467, 603, 604, 605, 679,
	606, 680, 1468, 607, 608, 609, 610, 0, 612, 613,
	1469, 1470, 614, 615, 616, 618, 619, 617, 620, 1471,
	621, 1472, 0, 622, 623, 624, 681, 682, 683, 1473,
	626, 625, 627, 684, 1474, 628, 1475, 1476, 1477, 1478,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4057, 277,
	279, 278, 280, 281, 282, 283, 1399, 284, 285, 1400,
	1401, 1402, 0, 1403, 634, 1404, 1405, 1406, 1407, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 1408, 639, 296, 297, 298,
	299, 300, 301, 1409, 1410, 0, 302, 640, 641, 642,
	1411, 303, 304, 643, 1412, 1338, 1413, 305, 306, 307,
	308, 309, 310, 311, 0, 1414, 313, 314, 315, 312,
	316, 1415, 317, 0, 318, 319, 320, 321, 322, 323,
	1416, 324, 325, 326, 1194, 327, 328, 329, 1417, 1418,
	1420, 1419, 1421, 1422, 1423, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 1424, 340, 336, 338, 1425,
	341, 339, 342, 1426, 343, 344, 345, 1427, 1428, 346,
	347, 348, 1429, 349, 350, 1430, 351, 352, 353, 1431,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 1432, 274, 1433, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 1434, 372, 373, 1435, 1436, 1195, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 1437, 386, 652, 1438, 653, 387, 1439, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 1197, 393, 394,
	1440, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 1441, 1196, 403, 657, 658, 1442,
	659, 1443, 405, 406, 1198, 660, 1199, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 1444, 417, 419, 418, 1445, 420, 661, 1201, 421,
	422, 1202, 1446, 423, 0, 0, 0, 424, 425, 428,
	1447, 1448, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 1449,
	276, 1205, 470, 471, 1450, 662, 472, 663, 474, 475,
	1451, 0, 476, 0, 1452, 1453, 478, 479, 480, 1454,
	1455, 481, 482, 664, 1206, 483, 1207, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	1456, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 1457, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 1458, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 1459, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 1460, 560, 561, 559, 562, 563, 564, 1461, 565,
	566, 548, 549, 567, 568, 1209, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 1462, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 1463, 592, 593, 0, 589, 580, 1464,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 1465,
	602, 675, 676, 677, 678, 1466, 611, 1467, 603, 604,
	605, 679, 606, 680, 1468, 607, 608, 609, 610, 0,
	612, 613, 1469, 1470, 614, 615, 616, 618, 619, 617,
	620, 1471, 621, 1472, 0, 622, 623, 624, 681, 682,
	683, 1473, 626, 625, 627, 684, 1474, 628, 1475, 1476,
	1477, 1478, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3751, 277, 279, 278, 280, 281, 282, 283, 1399, 284,
	285, 1400, 1401, 1402, 0, 1403, 634, 1404, 1405, 1406,
	1407, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 1408, 639, 296,
	297, 298, 299, 300, 301, 1409, 1410, 0, 302, 640,
	641, 642, 1411, 303, 304, 643, 1412, 1338, 1413, 305,
	306, 307, 308, 309, 310, 311, 0, 1414, 313, 314,
	315, 312, 316, 1415, 317, 0, 318, 319, 320, 321,
	322, 323, 1416, 324, 325, 326, 1194, 327, 328, 329,
	1417, 1418, 1420, 1419, 1421, 1422, 1423, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 1424, 340, 336,
	338, 1425, 341, 339, 342, 1426, 343, 344, 345, 1427,
	1428, 346, 347, 348, 1429, 349, 350, 1430, 351, 352,
	353, 1431, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 1432, 274,
	1433, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 1434, 372, 373, 1435, 1436, 1195, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 1437, 386, 652, 1438, 653, 387, 1439,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 1197,
	393, 394, 1440, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 1441, 1196, 403, 657,
	658, 1442, 659, 1443, 405, 406, 1198, 660, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 1444, 417, 419, 418, 1445, 420, 661,
	1201, 421, 422, 1202, 1446, 423, 0, 0, 0, 424,
	425, 428, 1447, 1448, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 1449, 276, 1205, 470, 471, 1450, 662, 472, 663,
	474, 475, 1451, 0, 476, 0, 1452, 1453, 478, 479,
	480, 1454, 1455, 481, 482, 664, 1206, 483, 1207, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 1456, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 1457, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 1458, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 1459, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 1460, 560, 561, 559, 562, 563, 564,
	1461, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 1462, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 1463, 592, 593, 0, 589,
	580, 1464, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 1465, 602, 675, 676, 677, 678, 1466, 611, 1467,
	603, 604, 605, 679, 606, 680, 1468, 607, 608, 609,
	610, 0, 612, 613, 1469, 1470, 614, 615, 616, 618,
	619, 617, 620, 1471, 621, 1472, 0, 622, 623, 624,
	681, 682, 683, 1473, 626, 625, 627, 684, 1474, 628,
	1475, 1476, 1477, 1478, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3574, 277, 279, 278, 280, 281, 282, 283,
	1399, 284, 285, 1400, 1401, 1402, 0, 1403, 634, 1404,
	1405, 1406, 1407, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 1408,
	639, 296, 297, 298, 299, 300, 301, 1409, 1410, 0,
	302, 640, 641, 642, 1411, 303, 304, 643, 1412, 1338,
	1413, 305, 306, 307, 308, 309, 310, 311, 0, 1414,
	313, 314, 315, 312, 316, 1415, 317, 0, 318, 319,
	320, 321, 322, 323, 1416, 324, 325, 326, 1194, 327,
	328, 329, 1417, 1418, 1420, 1419, 1421, 1422, 1423, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 1424,
	340, 336, 338, 1425, 341, 339, 342, 1426, 343, 344,
	345, 1427, 1428, 346, 347, 348, 1429, 349, 350, 1430,
	351, 352, 353, 1431, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	1432, 274, 1433, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 1434, 372, 373, 1435, 1436,
	1195, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 1437, 386, 652, 1438, 653,
	387, 1439, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1197, 393, 394, 1440, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 1441, 1196,
	403, 657, 658, 1442, 659, 1443, 405, 406, 1198, 660,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 1444, 417, 419, 418, 1445,
	420, 661, 1201, 421, 422, 1202, 1446, 423, 0, 0,
	0, 424, 425, 428, 1447, 1448, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 1449, 276, 1205, 470, 471, 1450, 662,
	472, 663, 474, 475, 1451, 0, 476, 0, 1452, 1453,
	478, 479, 480, 1454, 1455, 481, 482, 664, 1206, 483,
	1207, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 1456, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	1457, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 1458, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	1459, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 1460, 560, 561, 559, 562,
	563, 564, 1461, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	1462, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 1463, 592, 593,
	0, 589, 580, 1464, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 1465, 602, 675, 676, 677, 678, 1466,
	611, 1467, 603, 604, 605, 679, 606, 680, 1468, 607,
	608, 609, 610, 0, 612, 613, 1469, 1470, 614, 615,
	616, 618, 619, 617, 620, 1471, 621, 1472, 0, 622,
	623, 624, 681, 682, 683, 1473, 626, 625, 627, 684,
	1474, 628, 1475, 1476, 1477, 1478, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2607, 277, 279, 278, 280, 281,
	282, 283, 1399, 284, 285, 1400, 1401, 1402, 0, 1403,
	634, 1404, 1405, 1406, 1407, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 1408, 639, 296, 297, 298, 299, 300, 301, 1409,
	1410, 0, 302, 640, 641, 642, 1411, 303, 304, 643,
	1412, 1338, 1413, 305, 306, 307, 308, 309, 310, 311,
	0, 1414, 313, 314, 315, 312, 316, 1415, 317, 0,
	318, 319, 320, 321, 322, 323, 1416, 324, 325, 326,
	1194, 327, 328, 329, 1417, 1418, 1420, 1419, 1421, 1422,
	1423, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 1424, 340, 336, 338, 1425, 341, 339, 342, 1426,
	343, 344, 345, 1427, 1428, 346, 347, 348, 1429, 349,
	350, 1430, 351, 352, 353, 1431, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 1432, 274, 1433, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 1434, 372, 373,
	1435, 1436, 1195, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 1437, 386, 652,
	1438, 653, 387, 1439, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 1197, 393, 394, 1440, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	1441, 1196, 403, 657, 658, 1442, 659, 1443, 405, 406,
	1198, 660, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 1444, 417, 419,
	418, 1445, 420, 661, 1201, 421, 422, 1202, 1446, 423,
	0, 0, 0, 424, 425, 428, 1447, 1448, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 1449, 276, 1205, 470, 471,
	1450, 662, 472, 663, 474, 475, 1451, 0, 476, 0,
	1452, 1453, 478, 479, 480, 1454, 1455, 481, 482, 664,
	1206, 483, 1207, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 1456, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 1457, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 1458,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 1459, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 1460, 560, 561,
	559, 562, 563, 564, 1461, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 1462, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 1463,
	592, 593, 0, 589, 580, 1464, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 1465, 602, 675, 676, 677,
	678, 1466, 611, 1467, 603, 604, 605, 679, 606, 680,
	1468, 607, 608, 609, 610, 0, 612, 613, 1469, 1470,
	614, 615, 616, 618, 619, 617, 620, 1471, 621, 1472,
	0, 622, 623, 624, 681, 682, 683, 1473, 626, 625,
	627, 684, 1474, 628, 1475, 1476, 1477, 1478, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 1490, 0,
	1394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2238, 277, 279, 278,
	280, 281, 282, 283, 1399, 284, 285, 1400, 1401, 1402,
	0, 1403, 634, 1404, 1405, 1406, 1407, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 1408, 639, 296, 297, 298, 299, 300,
	301, 1409, 1410, 0, 302, 640, 641, 642, 1411, 303,
	304, 643, 1412, 1338, 1413, 305, 306, 307, 308, 309,
	310, 311, 0, 1414, 313, 314, 315, 312, 316, 1415,
	317, 0, 318, 319, 320, 321, 322, 323, 1416, 324,
	325, 326, 1194, 327, 328, 329, 1417, 1418, 1420, 1419,
	1421, 1422, 1423, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 1424, 340, 336, 338, 1425, 341, 339,
	342, 1426, 343, 344, 345, 1427, 1428, 346, 347, 348,
	1429, 349, 350, 1430, 351, 352, 353, 1431, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 1432, 274, 1433, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 1434,
	372, 373, 1435, 1436, 1195, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 1437,
	386, 652, 1438, 653, 387, 1439, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1197, 393, 394, 1440, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 1441, 1196, 403, 657, 658, 1442, 659, 1443,
	405, 406, 1198, 660, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 1444,
	417, 419, 418, 1445, 420, 661, 1201, 421, 422, 1202,
	1446, 423, 0, 0, 0, 424, 425, 428, 1447, 1448,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 1449, 276, 1205,
	470, 471, 1450, 662, 472, 663, 474, 475, 1451, 0,
	476, 0, 1452, 1453, 478, 479, 480, 1454, 1455, 481,
	482, 664, 1206, 483, 1207, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 1456, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 1457, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 1458, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 1459, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 1460,
	560, 561, 559, 562, 563, 564, 1461, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 1462, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 1463, 592, 593, 0, 589, 580, 1464, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 1465, 602, 675,
	676, 677, 678, 1466, 611, 1467, 603, 604, 605, 679,
	606, 680, 1468, 607, 608, 609, 610, 0, 612, 613,
	1469, 1470, 614, 615, 616, 618, 619, 617, 620, 1471,
	621, 1472, 0, 622, 623, 624, 681, 682, 683, 1473,
	626, 625, 627, 684, 1474, 628, 1475, 1476, 1477, 1478,
	629, 630, 685, 631, 632, 633, 1391, 0, 1394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 1399, 284, 285, 1400, 1401, 1402, 0, 1403,
	634, 1404, 1405, 1406, 1407, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 1408, 639, 296, 297, 298, 299, 300, 301, 1409,
	1410, 0, 302, 640, 641, 642, 1411, 303, 304, 643,
	1412, 1338, 1413, 305, 306, 307, 308, 309, 310, 311,
	0, 1414, 313, 314, 315, 312, 316, 1415, 317, 0,
	318, 319, 320, 321, 322, 323, 1416, 324, 325, 326,
	1194, 327, 328, 329, 1417, 1418, 1420, 1419, 1421, 1422,
	1423, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 1424, 340, 336, 338, 1425, 341, 339, 342, 1426,
	343, 344, 345, 1427, 1428, 346, 347, 348, 1429, 349,
	350, 1430, 351, 352, 353, 1431, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 1432, 274, 1433, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 1434, 372, 373,
	1435, 1436, 1195, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 1437, 386, 652,
	1438, 653, 387, 1439, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 1197, 393, 394, 1440, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	1441, 1196, 403, 657, 658, 1442, 659, 1443, 405, 406,
	1198, 660, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 1444, 417, 419,
	418, 1445, 420, 661, 1201, 421, 422, 1202, 1446, 423,
	0, 0, 0, 424, 425, 428, 1447, 1448, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 1449, 276, 1205, 470, 471,
	1450, 662, 472, 663, 474, 475, 1451, 0, 476, 0,
	1452, 1453, 478, 479, 480, 1454, 1455, 481, 482, 664,
	1206, 483, 1207, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 1456, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 1457, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 1458,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 1459, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 1460, 560, 561,
	559, 562, 563, 564, 1461, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 1462, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 1463,
	592, 593, 0, 589, 580, 1464, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 1465, 602, 675, 676, 677,
	678, 1466, 611, 1467, 603, 604, 605, 679, 606, 680,
	1468, 607, 608, 609, 610, 0, 612, 613, 1469, 1470,
	614, 615, 616, 618, 619, 617, 620, 1471, 621, 1472,
	0, 622, 623, 624, 681, 682, 683, 1473, 626, 625,
	627, 684, 1474, 628, 1475, 1476, 1477, 1478, 629, 630,
	685, 631, 632, 633, 1394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 1399, 284,
	285, 1400, 1401, 1402, 0, 1403, 634, 1404, 1405, 1406,
	1407, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 1408, 639, 296,
	297, 298, 299, 300, 301, 1409, 1410, 0, 302, 640,
	641, 642, 1411, 303, 304, 643, 1412, 1338, 1413, 305,
	306, 307, 308, 309, 310, 311, 0, 1414, 313, 314,
	315, 312, 316, 1415, 317, 0, 318, 319, 320, 321,
	322, 323, 1416, 324, 325, 326, 1194, 327, 328, 329,
	1417, 1418, 1420, 1419, 1421, 1422, 1423, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 1424, 340, 336,
	338, 1425, 341, 339, 342, 1426, 343, 344, 345, 1427,
	1428, 346, 347, 348, 1429, 349, 350, 1430, 351, 352,
	353, 1431, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 1432, 274,
	1433, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 1434, 372, 373, 1435, 1436, 1195, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 1437, 386, 652, 1438, 653, 387, 1439,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 1197,
	393, 394, 1440, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 1441, 1196, 403, 657,
	658, 1442, 659, 1443, 405, 406, 1198, 660, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 1444, 417, 419, 418, 1445, 420, 661,
	1201, 421, 422, 1202, 1446, 423, 0, 0, 0, 424,
	425, 428, 1447, 1448, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 1449, 276, 1205, 470, 471, 1450, 662, 472, 663,
	474, 475, 1451, 0, 476, 0, 1452, 1453, 478, 479,
	480, 1454, 1455, 481, 482, 664, 1206, 483, 1207, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 1456, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 1457, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 1458, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 1459, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 1460, 560, 561, 559, 562, 563, 564,
	1461, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 1462, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 1463, 592, 593, 0, 589,
	580, 1464, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 1465, 602, 675, 676, 677, 678, 1466, 611, 1467,
	603, 604, 605, 679, 606, 680, 1468, 607, 608, 609,
	610, 0, 612, 613, 1469, 1470, 614, 615, 616, 618,
	619, 617, 620, 1471, 621, 1472, 0, 622, 623, 624,
	681, 682, 683, 1473, 626, 625, 627, 684, 1474, 628,
	1475, 1476, 1477, 1478, 629, 630, 685, 631, 632, 633,
	2582, 0, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 2579, 284, 285, 0,
	0, 0, 0, 0, 1153, 1117, 0, 0, 0, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 635, 1166,
	0, 294, 1173, 295, 1172, 0, 1183, 296, 297, 298,
	299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642,
	0, 303, 304, 1159, 0, 1140, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1194, 327, 328, 329, 1143, 1141,
	1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333, 334,
	1176, 335, 337, 1170, 1169, 1089, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 2580, 0, 346,
	1161, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1095, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1184, 1185, 367, 1108, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1168, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1195, 374, 375, 376,
	1181, 1182, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1191, 0, 1118, 387, 0, 388, 389,
	390, 391, 392, 1154, 1155, 1158, 473, 1197, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1196, 403, 1163, 1164, 0,
	1124, 0, 405, 406, 1198, 1156, 1199, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1192, 1201, 421,
	422, 1202, 0, 423, 0, 0, 0, 424, 425, 428,
	1147, 1146, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 1086,
	276, 1205, 470, 471, 1109, 1157, 472, 1171, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1206, 483, 1207, 1186, 484, 485,
	1096, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1187, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1167, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 1097, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1150, 565,
	566, 548, 549, 567, 568, 1209, 569, 570, 571, 572,
	573, 574, 575, 1165, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1212, 583, 584, 585, 586,
	1188, 590, 591, 0, 592, 593, 1083, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1177, 1178, 1179, 1180, 0, 611, 0, 603, 604,
	605, 1189, 606, 1190, 1107, 607, 608, 609, 610, 0,
	612, 613, 0, 1090, 614, 615, 616, 618, 619, 617,
	620, 1151, 621, 0, 0, 622, 623, 624, 681, 1174,
	1211, 2578, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 0, 0, 0, 0, 1080, 1081,
	2581, 0, 0, 0, 0, 0, 0, 1113, 2577, 0,
	1073, 1111, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1153, 1117, 0, 0, 0, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 635, 1166,
	0, 294, 1173, 295, 1172, 0, 1183, 296, 297, 298,
	299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642,
	0, 303, 304, 1159, 0, 1140, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1194, 327, 328, 329, 1143, 1141,
	1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333, 334,
	1176, 335, 337, 1170, 1169, 1089, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1161, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1095, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1184, 1185, 367, 1108, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1168, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1195, 374, 375, 376,
	1181, 1182, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1191, 0, 1118, 387, 0, 388, 389,
	390, 391, 392, 1154, 1155, 1158, 473, 1197, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1196, 403, 1163, 1164, 0,
	1124, 0, 405, 406, 1198, 1156, 1199, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1192, 1201, 421,
	422, 1202, 0, 423, 0, 0, 0, 424, 425, 428,
	1147, 1146, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 1086,
	276, 1205, 470, 471, 1109, 1157, 472, 1171, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1206, 483, 1207, 1186, 484, 485,
	1096, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1187, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1167, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 1097, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 236, 560, 561, 559, 562, 563, 564, 1150, 565,
	566, 548, 549, 567, 568, 1209, 569, 570, 571, 572,
	573, 574, 575, 1165, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1212, 583, 584, 585, 586,
	1188, 590, 591, 0, 592, 593, 1083, 589, 580, 238,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1177, 1178, 1179, 1180, 0, 611, 0, 603, 604,
	605, 1189, 606, 1190, 1107, 607, 608, 609, 610, 0,
	612, 613, 0, 1090, 614, 615, 616, 618, 619, 617,
	620, 1151, 621, 0, 0, 622, 623, 624, 1616, 1174,
	1211, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 230, 629, 630, 685, 631, 632, 633, 1087, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 0, 0, 0, 0, 1080, 1081,
	1129, 1101, 1102, 1103, 1099, 1100, 1112, 1871, 1869, 0,
	0, 1111, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1153, 1117, 0, 0, 0, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 1166, 0, 294,
	1173, 295, 1172, 0, 1183, 296, 297, 298, 299, 300,
	301, 1119, 1152, 1084, 302, 1213, 1214, 642, 0, 303,
	304, 1159, 0, 1140, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149,
	1145, 1144, 1148, 330, 331, 332, 333, 334, 1176, 335,
	337, 1170, 1169, 1089, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1161, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1095, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1184, 1185, 367, 1108, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1168, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1195, 374, 375, 376, 1181, 1182,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1191, 0, 1118, 387, 0, 388, 389, 390, 391,
	392, 1154, 1155, 1158, 473, 1197, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1196, 403, 1163, 1164, 0, 1124, 0,
	405, 406, 1198, 1156, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1192, 1201, 421, 422, 1202,
	0, 423, 0, 0, 0, 424, 425, 428, 1147, 1146,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 1086, 276, 1205,
	470, 471, 1109, 1157, 472, 1171, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1206, 483, 1207, 1186, 484, 485, 1096, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1187,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 1167, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 1097, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 236,
	560, 561, 559, 562, 563, 564, 1150, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 1165, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 1212, 583, 584, 585, 586, 1188, 590,
	591, 0, 592, 593, 1083, 589, 580, 238, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 1177,
	1178, 1179, 1180, 0, 611, 0, 603, 604, 605, 1189,
	606, 1190, 1107, 607, 608, 609, 610, 0, 612, 613,
	0, 1090, 614, 615, 616, 618, 619, 617, 620, 1151,
	621, 0, 0, 622, 623, 624, 1616, 1174, 1211, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 230,
	629, 630, 685, 631, 632, 633, 1087, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 0, 0, 0, 0, 1080, 1081, 1129, 1101,
	1102, 1103, 1099, 1100, 1112, 1871, 3219, 0, 0, 1111,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1153, 1117, 0, 0, 0, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 1166, 0, 294, 1173, 295,
	1172, 0, 1183, 296, 297, 298, 299, 300, 301, 1119,
	1152, 1084, 302, 1213, 1214, 642, 0, 303, 304, 1159,
	0, 1140, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144,
	1148, 330, 331, 332, 333, 334, 1176, 335, 337, 1170,
	1169, 1089, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1161, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1095, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1184,
	1185, 367, 1108, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1168, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1195, 374, 375, 376, 1181, 1182, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1191,
	0, 1118, 387, 0, 388, 389, 390, 391, 392, 1154,
	1155, 1158, 473, 1197, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1196, 403, 1163, 1164, 0, 1124, 0, 405, 406,
	1198, 1156, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1192, 1201, 421, 422, 1202, 0, 423,
	0, 0, 0, 424, 425, 428, 1147, 1146, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 1086, 276, 1205, 470, 471,
	1109, 1157, 472, 1171, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1206, 483, 1207, 1186, 484, 485, 1096, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1187, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 1167, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 1097, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 236, 560, 561,
	559, 562, 563, 564, 1150, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 1165,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 1212, 583, 584, 585, 586, 1188, 590, 591, 0,
	592, 593, 1083, 589, 580, 238, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 1177, 1178, 1179,
	1180, 0, 611, 0, 603, 604, 605, 1189, 606, 1190,
	1107, 607, 608, 609, 610, 0, 612, 613, 0, 1090,
	614, 615, 616, 618, 619, 617, 620, 1151, 621, 0,
	0, 622, 623, 624, 1616, 1174, 1211, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 230, 629, 630,
	685, 631, 632, 633, 1087, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1082, 0, 0,
	0, 0, 0, 0, 1080, 1081, 1129, 1101, 1102, 1103,
	1099, 1100, 1112, 1871, 1869, 0, 0, 1111, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1153, 1117,
	0, 0, 0, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 1166, 0, 294, 1173, 295, 1172, 2713,
	1183, 296, 297, 298, 299, 300, 301, 1119, 1152, 1084,
	302, 1213, 1214, 642, 0, 303, 304, 1159, 0, 1140,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330,
	331, 332, 333, 334, 1176, 335, 337, 1170, 1169, 1089,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1161, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1095, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1184, 1185, 367,
	1108, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1168, 0, 0, 0, 371, 0, 372, 373, 0, 2718,
	1195, 374, 375, 376, 1181, 1182, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1191, 0, 1118,
	387, 0, 388, 389, 390, 391, 392, 1154, 1155, 1158,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1196,
	403, 1163, 1164, 0, 1124, 0, 405, 406, 1198, 1156,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 2714,
	420, 1192, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 1147, 1146, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 1086, 276, 1205, 470, 471, 1109, 1157,
	472, 1171, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 1186, 484, 485, 1096, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1187, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1167, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	1097, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1150, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 1165, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1212,
	583, 584, 585, 586, 1188, 590, 591, 0, 592, 593,
	1083, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1177, 1178, 1179, 1180, 0,
	611, 2715, 603, 604, 605, 1189, 606, 1190, 1107, 607,
	608, 609, 610, 0, 612, 613, 0, 1090, 614, 615,
	616, 618, 619, 617, 620, 1151, 621, 0, 0, 622,
	623, 624, 681, 1174, 1211, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1087, 0, 0, 2627, 0, 1129, 1101, 1102,
	1103, 1099, 1100, 1112, 0, 1082, 0, 0, 0, 0,
	0, 0, 1080, 1081, 277, 279, 278, 280, 281, 282,
	283, 1113, 284, 285, 0, 1111, 0, 0, 0, 1153,
	1117, 0, 0, 0, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 1166, 0, 294, 1173, 295, 1172,
	0, 1183, 296, 297, 298, 299, 300, 301, 1119, 1152,
	1084, 302, 1213, 1214, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 1176, 335, 337, 1170, 1169,
	1089, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1161, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1095, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 1108, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1168, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 1181, 1182, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	1118, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 1163, 1164, 0, 1124, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 1086, 276, 1205, 470, 471, 1109,
	1157, 472, 1171, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 1096, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1167, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 1097, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 1165, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1212, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 1083, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1177, 1178, 1179, 1180,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 1107,
	607, 608, 609, 610, 0, 612, 613, 0, 1090, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 1174, 1211, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 0,
	0, 0, 0, 1080, 1081, 0, 0, 0, 0, 0,
	0, 0, 1113, 2625, 0, 2624, 1111, 1129, 1101, 1102,
	1103, 1099, 1100, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1153,
	1117, 0, 0, 0, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 1166, 0, 294, 1173, 295, 1172,
	0, 1183, 296, 297, 298, 299, 300, 301, 1119, 1152,
	1084, 302, 1213, 1214, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 1176, 335, 337, 1170, 1169,
	1089, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1161, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1095, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 1108, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1168, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 1181, 1182, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	1118, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 1163, 1164, 0, 1124, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 1086, 276, 1205, 470, 471, 1109,
	1157, 472, 1171, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 1096, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1167, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 1097, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 1165, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1212, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 1083, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1177, 1178, 1179, 1180,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 1107,
	607, 608, 609, 610, 0, 612, 613, 0, 1090, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 1174, 1211, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 0,
	0, 0, 0, 1080, 1081, 0, 0, 0, 0, 0,
	0, 0, 1113, 2622, 0, 2621, 1111, 1129, 1101, 1102,
	1103, 1099, 1100, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1153,
	1117, 0, 0, 0, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 1166, 0, 294, 1173, 295, 1172,
	0, 1183, 296, 297, 298, 299, 300, 301, 1119, 1152,
	1084, 302, 1213, 1214, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 1176, 335, 337, 1170, 1169,
	1089, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1161, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1095, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 1108, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1168, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 1181, 1182, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	1118, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 1163, 1164, 0, 1124, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 1086, 276, 1205, 470, 471, 1109,
	1157, 472, 1171, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 1096, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1167, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 1097, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 1165, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1212, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 1083, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1177, 1178, 1179, 1180,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 1107,
	607, 608, 609, 610, 0, 612, 613, 0, 1090, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 1174, 1211, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 0,
	0, 0, 0, 1080, 1081, 0, 0, 0, 0, 0,
	0, 0, 1113, 2619, 0, 2618, 1111, 1129, 1101, 1102,
	1103, 1099, 1100, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1153,
	1117, 0, 0, 0, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 1166, 0, 294, 1173, 295, 1172,
	0, 1183, 296, 297, 298, 299, 300, 301, 1119, 1152,
	1084, 302, 1213, 1214, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 1176, 335, 337, 1170, 1169,
	1089, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1161, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1095, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 1108, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1168, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 1181, 1182, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	1118, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 1163, 1164, 0, 1124, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 1086, 276, 1205, 470, 471, 1109,
	1157, 472, 1171, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 1096, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1167, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 1097, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 1165, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1212, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 1083, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1177, 1178, 1179, 1180,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 1107,
	607, 608, 609, 610, 0, 612, 613, 0, 1090, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 1174, 1211, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 0,
	0, 0, 0, 1080, 1081, 0, 0, 0, 0, 0,
	0, 0, 1113, 2616, 0, 1712, 1111, 1129, 1101, 1102,
	1103, 1099, 1100, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1153,
	1117, 0, 0, 0, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 1166, 0, 294, 1173, 295, 1172,
	0, 1183, 296, 297, 298, 299, 300, 301, 1119, 1152,
	1084, 302, 1213, 1214, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 1176, 335, 337, 1170, 1169,
	1089, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1161, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1095, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 1108, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1168, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 1181, 1182, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	1118, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 1163, 1164, 0, 1124, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 1086, 276, 1205, 470, 471, 1109,
	1157, 472, 1171, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 1096, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1167, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 1097, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 1165, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1212, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 1083, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1177, 1178, 1179, 1180,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 1107,
	607, 608, 609, 610, 0, 612, 613, 0, 1090, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 1174, 1211, 0, 626, 625, 627,
	684, 0, 628, 1711, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1087, 0, 0, 1076, 0, 1129, 1101,
	1102, 1103, 1099, 1100, 1112, 0, 1082, 0, 0, 0,
	0, 0, 0, 1080, 1081, 277, 279, 278, 280, 281,
	282, 283, 1113, 284, 285, 0, 1111, 0, 0, 0,
	1153, 1117, 0, 0, 0, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 1166, 0, 294, 1173, 295,
	1172, 0, 1183, 296, 297, 298, 299, 300, 301, 1119,
	1152, 1084, 302, 1213, 1214, 642, 0, 303, 304, 1159,
	0, 1140, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144,
	1148, 330, 331, 332, 333, 334, 1176, 335, 337, 1170,
	1169, 1089, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1161, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1095, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1184,
	1185, 367, 1108, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1168, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1195, 374, 375, 376, 1181, 1182, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1191,
	0, 1118, 387, 0, 388, 389, 390, 391, 392, 1154,
	1155, 1158, 473, 1197, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1196, 403, 1163, 1164, 0, 1124, 0, 405, 406,
	1198, 1156, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1192, 1201, 421, 422, 1202, 0, 423,
	0, 0, 0, 424, 425, 428, 1147, 1146, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 1086, 276, 1205, 470, 471,
	1109, 1157, 472, 1171, 474, 475, 0, 0, 476, 0,
	1091, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1206, 483, 1207, 1186, 484, 485, 1096, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1187, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 1167, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 1097, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1150, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 1165,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 1212, 583, 584, 585, 586, 1188, 590, 591, 0,
	592, 593, 1083, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 1177, 1178, 1179,
	1180, 0, 611, 0, 603, 604, 605, 1189, 606, 1190,
	1107, 607, 608, 609, 610, 0, 612, 613, 0, 1090,
	614, 615, 616, 618, 619, 617, 620, 1151, 621, 0,
	0, 622, 623, 624, 681, 1174, 1211, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1087, 0, 0, 0, 0, 1129,
	1101, 1102, 1103, 1099, 1100, 1112, 0, 1082, 0, 0,
	0, 0, 0, 0, 1080, 1081, 277, 279, 278, 280,
	281, 282, 283, 1113, 284, 285, 0, 1111, 0, 0,
	0, 1153, 1117, 0, 0, 0, 286, 287, 1193, 288,
	289, 290, 291, 292, 293, 635, 1166, 0, 294, 1173,
	295, 1172, 0, 1183, 296, 297, 298, 299, 300, 301,
	1119, 1152, 1084, 302, 1213, 1214, 642, 0, 303, 304,
	1159, 0, 1140, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 4685, 323, 0, 324, 325,
	326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145,
	1144, 1148, 330, 331, 332, 333, 334, 1176, 335, 337,
	1170, 1169, 1089, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1161, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1095,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1184, 1185, 367, 1108, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1168, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1195, 374, 375, 376, 1181, 1182, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1191, 0, 1118, 387, 0, 388, 389, 390, 391, 392,
	1154, 1155, 1158, 473, 1197, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1196, 403, 1163, 1164, 0, 1124, 0, 405,
	406, 1198, 1156, 1199, 407, 408, 409, 1200, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1192, 1201, 421, 422, 1202, 0,
	423, 0, 0, 0, 424, 425, 428, 1147, 1146, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1203, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1204, 469, 457, 1086, 276, 1205, 470,
	471, 1109, 1157, 472, 1171, 474, 475, 0, 0, 476,
	0, 1091, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1206, 483, 1207, 1186, 484, 485, 1096, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1187, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 1167, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1208, 538, 539,
	540, 541, 542, 1097, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 1150, 565, 566, 548, 549,
	567, 568, 1209, 569, 570, 571, 572, 573, 574, 575,
	1165, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 1212, 583, 584, 585, 586, 1188, 590, 591,
	0, 592, 593, 1083, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 1177, 1178,
	1179, 1180, 0, 611, 0, 603, 604, 605, 1189, 606,
	1190, 1107, 607, 608, 609, 610, 0, 612, 613, 0,
	1090, 614, 615, 616, 618, 619, 617, 620, 1151, 621,
	0, 0, 622, 623, 624, 681, 1174, 1211, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 1087, 0, 0, 0, 0,
	1129, 1101, 1102, 1103, 1099, 1100, 1112, 0, 1082, 0,
	0, 0, 0, 0, 0, 1080, 1081, 277, 279, 278,
	280, 281, 282, 283, 1113, 284, 285, 0, 1111, 0,
	0, 0, 1153, 1117, 0, 0, 0, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 1166, 0, 294,
	1173, 295, 1172, 0, 1183, 296, 297, 298, 299, 300,
	301, 1119, 1152, 1084, 302, 1213, 1214, 642, 0, 303,
	304, 1159, 0, 1140, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149,
	1145, 1144, 1148, 330, 331, 332, 333, 334, 1176, 335,
	337, 1170, 1169, 1089, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1161, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1095, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1184, 1185, 367, 1108, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1168, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1195, 374, 375, 376, 1181, 1182,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1191, 0, 1118, 387, 0, 388, 389, 390, 391,
	392, 1154, 1155, 1158, 473, 1197, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 2459, 400, 401,
	402, 404, 0, 1196, 403, 1163, 1164, 0, 1124, 0,
	405, 406, 1198, 1156, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1192, 1201, 421, 422, 1202,
	0, 423, 0, 0, 0, 424, 425, 428, 1147, 1146,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 1086, 276, 1205,
	470, 471, 1109, 1157, 472, 1171, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1206, 483, 1207, 1186, 484, 485, 1096, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1187,
	503, 669, 504, 505, 2458, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 1167, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 1097, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 1150, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 1165, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 1212, 583, 584, 585, 586, 1188, 590,
	591, 0, 592, 593, 1083, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 1177,
	1178, 1179, 1180, 0, 611, 0, 603, 604, 605, 1189,
	606, 1190, 1107, 607, 608, 609, 610, 0, 612, 613,
	0, 1090, 614, 615, 616, 618, 619, 617, 620, 1151,
	621, 0, 0, 622, 623, 624, 681, 1174, 1211, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1087, 0, 0, 0,
	0, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0, 1082,
	0, 0, 0, 0, 0, 0, 1080, 1081, 277, 279,
	278, 280, 281, 282, 283, 1113, 284, 285, 0, 1111,
	0, 0, 0, 1153, 1117, 0, 0, 0, 286, 287,
	1193, 288, 289, 290, 291, 292, 293, 635, 1166, 0,
	294, 1173, 295, 1172, 0, 1183, 296, 297, 298, 299,
	300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642, 0,
	303, 304, 1159, 0, 1140, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1194, 327, 328, 329, 1143, 1141, 1142,
	1149, 1145, 1144, 1148, 330, 331, 332, 333, 334, 1176,
	335, 337, 1170, 1169, 1089, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1161,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1095, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1184, 1185, 367, 1108, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1168, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1195, 374, 375, 376, 1181,
	1182, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1191, 0, 1118, 387, 0, 388, 389, 390,
	391, 392, 1154, 1155, 1158, 473, 1197, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1196, 403, 1163, 1164, 0, 1124,
	0, 405, 406, 1198, 1156, 1199, 407, 408, 409, 1200,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1192, 1201, 421, 422,
	1202, 0, 423, 0, 0, 0, 424, 425, 428, 1147,
	1146, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1203, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1204, 469, 457, 1086, 276,
	1205, 470, 471, 1109, 1157, 472, 1171, 474, 475, 0,
	0, 476, 0, 1091, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1206, 483, 1207, 1186, 484, 485, 1096,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1187, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1167, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1208,
	538, 539, 540, 541, 542, 1097, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1150, 565, 566,
	548, 549, 567, 568, 1209, 569, 570, 571, 572, 573,
	574, 575, 1165, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1212, 583, 584, 585, 586, 1188,
	590, 591, 0, 592, 593, 1083, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1177, 1178, 1179, 1180, 0, 611, 0, 603, 604, 605,
	1189, 606, 1190, 1107, 607, 608, 609, 610, 0, 612,
	613, 0, 1090, 614, 615, 616, 618, 619, 617, 620,
	1151, 621, 0, 0, 622, 623, 624, 681, 1174, 1211,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1087, 0, 0,
	0, 0, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0,
	1082, 0, 0, 0, 0, 0, 0, 1080, 1081, 277,
	279, 278, 280, 281, 282, 283, 1113, 284, 285, 0,
	1111, 0, 0, 0, 1153, 1117, 0, 0, 0, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 635, 1166,
	0, 294, 1173, 295, 1172, 0, 1183, 296, 297, 298,
	299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642,
	0, 303, 304, 1159, 0, 1140, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 4421, 323,
	0, 324, 325, 326, 1194, 327, 328, 329, 1143, 1141,
	1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333, 334,
	1176, 335, 337, 1170, 1169, 1089, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1161, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1095, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1184, 1185, 367, 1108, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1168, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1195, 374, 375, 376,
	1181, 1182, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1191, 0, 1118, 387, 0, 388, 389,
	390, 391, 392, 1154, 1155, 1158, 473, 1197, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1196, 403, 1163, 1164, 0,
	1124, 0, 405, 406, 1198, 1156, 1199, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1192, 1201, 421,
	422, 1202, 0, 423, 0, 0, 0, 424, 425, 428,
	1147, 1146, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 1086,
	276, 1205, 470, 471, 1109, 1157, 472, 1171, 474, 475,
	0, 0, 476, 0, 1091, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1206, 483, 1207, 1186, 484, 485,
	1096, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1187, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1167, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 1097, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1150, 565,
	566, 548, 549, 567, 568, 1209, 569, 570, 571, 572,
	573, 574, 575, 1165, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1212, 583, 584, 585, 586,
	1188, 590, 591, 0, 592, 593, 1083, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1177, 1178, 1179, 1180, 0, 611, 0, 603, 604,
	605, 1189, 606, 1190, 1107, 607, 608, 609, 610, 0,
	612, 613, 0, 1090, 614, 615, 616, 618, 619, 617,
	620, 1151, 621, 0, 0, 622, 623, 624, 681, 1174,
	1211, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1087, 0,
	0, 0, 0, 1129, 1101, 1102, 1103, 1099, 1100, 1112,
	0, 1082, 0, 0, 0, 0, 0, 0, 1080, 1081,
	277, 279, 278, 280, 281, 282, 283, 1113, 284, 285,
	0, 1111, 0, 0, 0, 1153, 1117, 0, 0, 0,
	286, 287, 1193, 288, 289, 290, 291, 292, 293, 635,
	1166, 0, 294, 1173, 295, 1172, 0, 1183, 296, 297,
	298, 299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214,
	642, 0, 303, 304, 1159, 0, 1140, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1194, 327, 328, 329, 1143,
	1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333,
	334, 1176, 335, 337, 1170, 1169, 1089, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1161, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 1095, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1184, 1185, 367, 1108, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 1168, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1195, 374, 375,
	376, 1181, 1182, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1191, 0, 1118, 387, 0, 388,
	389, 390, 391, 392, 1154, 1155, 1158, 473, 1197, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1196, 403, 1163, 1164,
	0, 1124, 0, 405, 406, 1198, 1156, 1199, 407, 408,
	409, 1200, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 1192, 1201,
	421, 422, 1202, 0, 423, 0, 0, 0, 424, 425,
	428, 1147, 1146, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1203, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1204, 469, 457,
	1086, 4016, 1205, 470, 471, 1109, 1157, 472, 1171, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 1206, 483, 1207, 1186, 484,
	485, 1096, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1187, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 1167, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1208, 538, 539, 540, 541, 542, 1097, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 1150,
	565, 566, 548, 549, 567, 568, 1209, 569, 570, 571,
	572, 573, 574, 575, 1165, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 1212, 583, 584, 585,
	586, 1188, 590, 591, 0, 592, 593, 1083, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 1177, 1178, 1179, 1180, 0, 611, 0, 603,
	604, 605, 1189, 606, 1190, 1107, 607, 608, 609, 610,
	0, 612, 613, 0, 1090, 614, 615, 616, 618, 619,
	617, 620, 1151, 621, 0, 0, 622, 623, 624, 681,
	1174, 1211, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 1087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 0, 0, 0, 0, 1080,
	1081, 1940, 0, 0, 0, 0, 0, 0, 1113, 0,
	0, 0, 1111, 1129, 1101, 1102, 1103, 1099, 1100, 1112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 1153, 1117, 0, 0, 0,
	286, 287, 1193, 288, 289, 290, 291, 292, 293, 635,
	1166, 0, 294, 1173, 295, 1172, 0, 1183, 296, 297,
	298, 299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214,
	642, 0, 303, 304, 1159, 0, 1140, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1194, 327, 328, 329, 1143,
	1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333,
	334, 1176, 335, 337, 1170, 1169, 1089, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1161, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 1095, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1184, 1185, 367, 1108, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 1168, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1195, 374, 375,
	376, 1181, 1182, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1191, 0, 1118, 387, 0, 388,
	389, 390, 391, 392, 1154, 1155, 1158, 473, 1197, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1196, 403, 1163, 1164,
	0, 1124, 0, 405, 406, 1198, 1156, 1199, 407, 408,
	409, 1200, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 1192, 1201,
	421, 422, 1202, 0, 423, 0, 0, 0, 424, 425,
	428, 1147, 1146, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1203, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1204, 469, 457,
	1086, 276, 1205, 470, 471, 1109, 1157, 472, 1171, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 1206, 483, 1207, 1186, 484,
	485, 1096, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1187, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 1167, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1208, 538, 539, 540, 541, 542, 1097, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 1150,
	565, 566, 548, 549, 567, 568, 1209, 569, 570, 571,
	572, 573, 574, 575, 1165, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 1212, 583, 584, 585,
	586, 1188, 590, 591, 0, 592, 593, 1083, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 1177, 1178, 1179, 1180, 0, 611, 0, 603,
	604, 605, 1189, 606, 1190, 1107, 607, 608, 609, 610,
	0, 612, 613, 0, 1090, 614, 615, 616, 618, 619,
	617, 620, 1151, 621, 0, 0, 622, 623, 624, 681,
	1174, 1211, 3729, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 1087,
	0, 0, 0, 0, 1129, 1101, 1102, 1103, 1099, 1100,
	1112, 0, 1082, 0, 0, 0, 0, 0, 0, 1080,
	1081, 277, 279, 278, 280, 281, 282, 283, 1113, 284,
	285, 0, 1111, 0, 0, 0, 1153, 1117, 0, 0,
	0, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 1166, 0, 294, 1173, 295, 1172, 0, 1183, 296,
	297, 298, 299, 300, 301, 1119, 1152, 1084, 302, 1213,
	1214, 642, 0, 303, 304, 1159, 0, 1140, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1194, 327, 328, 329,
	1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332,
	333, 334, 1176, 335, 337, 1170, 1169, 1089, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1161, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1095, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1184, 1185, 367, 1108, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1168, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1195, 374,
	375, 376, 1181, 1182, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1191, 0, 1118, 387, 0,
	388, 389, 390, 391, 392, 1154, 1155, 1158, 473, 1197,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1196, 403, 1163,
	1164, 0, 1124, 0, 405, 406, 1198, 1156, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1192,
	1201, 421, 422, 1202, 0, 423, 0, 0, 0, 424,
	425, 428, 1147, 1146, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 1086, 276, 1205, 470, 471, 1109, 1157, 472, 1171,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1206, 483, 1207, 1186,
	484, 485, 1096, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1187, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 1167,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 1097, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	1150, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 1165, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 1212, 583, 584,
	585, 586, 1188, 590, 591, 0, 592, 593, 1083, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 1177, 1178, 1179, 1180, 0, 611, 0,
	603, 604, 605, 1189, 606, 1190, 1107, 607, 608, 609,
	610, 0, 612, 613, 0, 1090, 614, 615, 616, 618,
	619, 617, 620, 1151, 621, 0, 0, 622, 623, 624,
	681, 1174, 1211, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 0, 0, 0, 0,
	1080, 1081, 1940, 0, 0, 0, 0, 0, 0, 1113,
	0, 0, 0, 1111, 1129, 1101, 1102, 1103, 1099, 1100,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1153, 1117, 0, 0,
	0, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 1166, 0, 294, 1173, 295, 1172, 0, 1183, 296,
	297, 298, 299, 300, 301, 1119, 1152, 1084, 302, 1213,
	1214, 642, 0, 303, 304, 1159, 0, 1140, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1194, 327, 328, 329,
	1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332,
	333, 334, 1176, 335, 337, 1170, 1169, 1089, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1161, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1095, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1184, 1185, 367, 1108, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1168, 0,
	0, 0, 371, 0, 372, 373, 0, 2718, 1195, 374,
	375, 376, 1181, 1182, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1191, 0, 1118, 387, 0,
	388, 389, 390, 391, 392, 1154, 1155, 1158, 473, 1197,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1196, 403, 1163,
	1164, 0, 1124, 0, 405, 406, 1198, 1156, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1192,
	1201, 421, 422, 1202, 0, 423, 0, 0, 0, 424,
	425, 428, 1147, 1146, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 1086, 276, 1205, 470, 471, 1109, 1157, 472, 1171,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1206, 483, 1207, 1186,
	484, 485, 1096, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1187, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 1167,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 1097, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	1150, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 1165, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 1212, 583, 584,
	585, 586, 1188, 590, 591, 0, 592, 593, 1083, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 1177, 1178, 1179, 1180, 0, 611, 0,
	603, 604, 605, 1189, 606, 1190, 1107, 607, 608, 609,
	610, 0, 612, 613, 0, 1090, 614, 615, 616, 618,
	619, 617, 620, 1151, 621, 0, 0, 622, 623, 624,
	681, 1174, 1211, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1087, 0, 0, 0, 0, 1129, 1101, 1102, 1103, 1099,
	1100, 1112, 0, 1082, 0, 0, 0, 0, 0, 0,
	1080, 1081, 277, 279, 278, 280, 281, 282, 283, 1113,
	284, 285, 0, 1111, 0, 0, 0, 1153, 1117, 0,
	0, 0, 286, 287, 1193, 288, 289, 290, 291, 292,
	293, 635, 1166, 0, 294, 1173, 295, 1172, 0, 1183,
	296, 297, 298, 299, 300, 301, 1119, 1152, 1084, 302,
	1213, 1214, 642, 0, 303, 304, 1159, 0, 1140, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1194, 327, 328,
	329, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331,
	332, 333, 334, 1176, 335, 337, 1170, 1169, 1089, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1161, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1095, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1184, 1185, 367, 1108,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1168,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1195,
	374, 375, 376, 1181, 1182, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1191, 0, 1118, 387,
	0, 388, 389, 390, 391, 392, 1154, 1155, 1158, 473,
	1197, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1196, 403,
	1163, 1164, 0, 1124, 0, 405, 406, 1198, 1156, 1199,
	407, 408, 409, 1200, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1192, 1201, 421, 422, 1202, 0, 423, 0, 0, 0,
	424, 425, 428, 1147, 1146, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1203, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1204,
	469, 457, 1086, 276, 1205, 470, 471, 1109, 1157, 472,
	1171, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1206, 483, 1207,
	1186, 484, 485, 1096, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1187, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	1167, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1208, 538, 539, 540, 541, 542, 1097,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1150, 565, 566, 548, 549, 567, 568, 1209, 569,
	570, 571, 572, 573, 574, 575, 1165, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 1212, 583,
	584, 585, 586, 1188, 590, 591, 0, 592, 593, 1083,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 1177, 1178, 1179, 1180, 0, 611,
	0, 603, 604, 605, 1189, 606, 1190, 1107, 607, 608,
	609, 610, 0, 612, 613, 0, 1090, 614, 615, 616,
	618, 619, 617, 620, 1151, 621, 0, 0, 622, 623,
	624, 681, 1174, 1211, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 1087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1082, 0, 0, 0, 0, 0,
	0, 1080, 1081, 0, 0, 0, 0, 0, 0, 0,
	1113, 1869, 0, 2723, 1111, 1129, 1101, 1102, 1103, 1099,
	1100, 1112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1153, 1117, 0,
	0, 0, 286, 287, 1193, 288, 289, 290, 291, 292,
	293, 635, 1166, 0, 294, 1173, 295, 1172, 0, 1183,
	296, 297, 298, 299, 300, 301, 1119, 1152, 1084, 302,
	1213, 1214, 642, 0, 303, 304, 1159, 0, 1140, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1194, 327, 328,
	329, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331,
	332, 333, 334, 1176, 335, 337, 1170, 1169, 1089, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1161, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1095, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1184, 1185, 367, 1108,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1168,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1195,
	374, 375, 376, 1181, 1182, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1191, 0, 1118, 387,
	0, 388, 389, 390, 391, 392, 1154, 1155, 1158, 473,
	1197, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1196, 403,
	1163, 1164, 0, 1124, 0, 405, 406, 1198, 1156, 1199,
	407, 408, 409, 1200, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1192, 1201, 421, 422, 1202, 0, 423, 0, 0, 0,
	424, 425, 428, 1147, 1146, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1203, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1204,
	469, 457, 1086, 276, 1205, 470, 471, 1109, 1157, 472,
	1171, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1206, 483, 1207,
	1186, 484, 485, 1096, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1187, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	1167, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1208, 538, 539, 540, 541, 542, 1097,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1150, 565, 566, 548, 549, 567, 568, 1209, 569,
	570, 571, 572, 573, 574, 575, 1165, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 1212, 583,
	584, 585, 586, 1188, 590, 591, 0, 592, 593, 1083,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 1177, 1178, 1179, 1180, 0, 611,
	0, 603, 604, 605, 1189, 606, 1190, 1107, 607, 608,
	609, 610, 0, 612, 613, 0, 1090, 614, 615, 616,
	618, 619, 617, 620, 1151, 621, 0, 0, 622, 623,
	624, 681, 1174, 1211, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 1087, 0, 0, 2721, 0, 1129, 1101, 1102, 1103,
	1099, 1100, 1112, 0, 1082, 0, 0, 0, 0, 0,
	0, 1080, 1081, 277, 279, 278, 280, 281, 282, 283,
	1113, 284, 285, 0, 1111, 0, 0, 0, 1153, 1117,
	0, 0, 0, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 1166, 0, 294, 1173, 295, 1172, 0,
	1183, 296, 297, 298, 299, 300, 301, 1119, 1152, 1084,
	302, 1213, 1214, 642, 0, 303, 304, 1159, 0, 1140,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330,
	331, 332, 333, 334, 1176, 335, 337, 1170, 1169, 1089,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1161, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1095, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1184, 1185, 367,
	1108, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1168, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1195, 374, 375, 376, 1181, 1182, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1191, 0, 1118,
	387, 0, 388, 389, 390, 391, 392, 1154, 1155, 1158,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1196,
	403, 1163, 1164, 0, 1124, 0, 405, 406, 1198, 1156,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 1192, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 1147, 1146, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 1086, 276, 1205, 470, 471, 1109, 1157,
	472, 1171, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 1186, 484, 485, 1096, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1187, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1167, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	1097, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1150, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 1165, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1212,
	583, 584, 585, 586, 1188, 590, 591, 0, 592, 593,
	1083, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1177, 1178, 1179, 1180, 0,
	611, 0, 603, 604, 605, 1189, 606, 1190, 1107, 607,
	608, 609, 610, 0, 612, 613, 0, 1090, 614, 615,
	616, 618, 619, 617, 620, 1151, 621, 0, 0, 622,
	623, 624, 681, 1174, 1211, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1087, 0, 0, 2709, 0, 1129, 1101, 1102,
	1103, 1099, 1100, 1112, 0, 1082, 0, 0, 0, 0,
	0, 0, 1080, 1081, 277, 279, 278, 280, 281, 282,
	283, 1113, 284, 285, 0, 1111, 0, 0, 0, 1153,
	1117, 0, 0, 0, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 1166, 0, 294, 1173, 295, 1172,
	0, 1183, 296, 297, 298, 299, 300, 301, 1119, 1152,
	1084, 302, 1213, 1214, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 1176, 335, 337, 1170, 1169,
	1089, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1161, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1095, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 1108, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1168, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 1181, 1182, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	1118, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 1163, 1164, 0, 1124, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 1086, 276, 1205, 470, 471, 1109,
	1157, 472, 1171, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 1096, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1167, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 1097, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 1165, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1212, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 1083, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1177, 1178, 1179, 1180,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 1107,
	607, 608, 609, 610, 0, 612, 613, 0, 1090, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 1174, 1211, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1087, 0, 0, 2697, 0, 1129, 1101,
	1102, 1103, 1099, 1100, 1112, 0, 1082, 0, 0, 0,
	0, 0, 0, 1080, 1081, 277, 279, 278, 280, 281,
	282, 283, 1113, 284, 285, 0, 1111, 0, 0, 0,
	1153, 1117, 0, 0, 0, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 1166, 0, 294, 1173, 295,
	1172, 0, 1183, 296, 297, 298, 299, 300, 301, 1119,
	1152, 1084, 302, 1213, 1214, 642, 0, 303, 304, 1159,
	0, 1140, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144,
	1148, 330, 331, 332, 333, 334, 1176, 335, 337, 1170,
	1169, 1089, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1161, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1095, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1184,
	1185, 367, 1108, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1168, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1195, 374, 375, 376, 1181, 1182, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1191,
	0, 1118, 387, 0, 388, 389, 390, 391, 392, 1154,
	1155, 1158, 473, 1197, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1196, 403, 1163, 1164, 0, 1124, 0, 405, 406,
	1198, 1156, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1192, 1201, 421, 422, 1202, 0, 423,
	0, 0, 0, 424, 425, 428, 1147, 1146, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 1086, 276, 1205, 470, 471,
	1109, 1157, 472, 1171, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1206, 483, 1207, 1186, 484, 485, 1096, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1187, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 1167, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 1097, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1150, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 1165,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 1212, 583, 584, 585, 586, 1188, 590, 591, 0,
	592, 593, 1083, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 1177, 1178, 1179,
	1180, 0, 611, 0, 603, 604, 605, 1189, 606, 1190,
	1107, 607, 608, 609, 610, 0, 612, 613, 0, 1090,
	614, 615, 616, 618, 619, 617, 620, 1151, 621, 0,
	0, 622, 623, 624, 681, 1174, 1211, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1087, 0, 0, 2695, 0, 2686,
	2693, 1102, 1103, 1099, 1100, 1112, 0, 1082, 0, 0,
	0, 0, 0, 0, 1080, 1081, 277, 279, 278, 280,
	281, 282, 283, 1113, 284, 285, 0, 1111, 0, 0,
	0, 1153, 1117, 0, 0, 0, 286, 287, 1193, 288,
	289, 290, 291, 292, 293, 635, 1166, 0, 294, 1173,
	295, 1172, 0, 1183, 296, 297, 298, 299, 300, 301,
	1119, 1152, 1084, 302, 1213, 1214, 642, 0, 303, 304,
	1159, 0, 1140, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145,
	1144, 1148, 330, 331, 332, 333, 334, 1176, 2689, 337,
	1170, 1169, 1089, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1161, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1095,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1184, 1185, 367, 1108, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1168, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1195, 374, 375, 376, 1181, 1182, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1191, 0, 1118, 387, 0, 388, 389, 390, 2690, 392,
	1154, 1155, 1158, 473, 1197, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1196, 403, 1163, 1164, 0, 1124, 0, 405,
	406, 1198, 1156, 1199, 407, 408, 409, 1200, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1192, 1201, 421, 422, 1202, 0,
	423, 0, 0, 0, 424, 425, 428, 1147, 1146, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	2691, 438, 2688, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1203, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1204, 469, 457, 1086, 276, 1205, 470,
	471, 1109, 1157, 472, 1171, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1206, 483, 1207, 1186, 484, 485, 1096, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1187, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 1167, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1208, 538, 539,
	540, 541, 542, 1097, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 2692, 0, 560,
	561, 559, 562, 563, 564, 1150, 565, 566, 548, 549,
	567, 568, 1209, 569, 570, 571, 572, 573, 574, 575,
	1165, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 1212, 583, 584, 585, 586, 1188, 590, 591,
	0, 592, 593, 1083, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 1177, 1178,
	1179, 1180, 0, 611, 0, 603, 604, 605, 1189, 606,
	1190, 1107, 607, 608, 609, 610, 0, 612, 613, 0,
	1090, 614, 615, 616, 618, 619, 617, 620, 1151, 621,
	0, 0, 622, 623, 624, 681, 1174, 1211, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 2687, 633, 1087, 0, 0, 2683, 0,
	2686, 2693, 1102, 1103, 1099, 1100, 1112, 0, 1082, 0,
	0, 0, 0, 0, 0, 1080, 1081, 277, 279, 278,
	280, 281, 282, 283, 1113, 284, 285, 0, 1111, 0,
	0, 0, 1153, 1117, 0, 0, 0, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 1166, 0, 294,
	1173, 295, 1172, 0, 1183, 296, 297, 298, 299, 300,
	301, 1119, 1152, 1084, 302, 1213, 1214, 642, 0, 303,
	304, 1159, 0, 1140, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149,
	1145, 1144, 1148, 330, 331, 332, 333, 334, 1176, 2689,
	337, 1170, 1169, 1089, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1161, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1095, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1184, 1185, 367, 1108, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1168, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1195, 374, 375, 376, 1181, 1182,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1191, 0, 1118, 387, 0, 388, 389, 390, 2690,
	392, 1154, 1155, 1158, 473, 1197, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1196, 403, 1163, 1164, 0, 1124, 0,
	405, 406, 1198, 1156, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1192, 1201, 421, 422, 1202,
	0, 423, 0, 0, 0, 424, 425, 428, 1147, 1146,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 2691, 438, 2688, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 1086, 276, 1205,
	470, 471, 1109, 1157, 472, 1171, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1206, 483, 1207, 1186, 484, 485, 1096, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1187,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 1167, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 1097, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 2692, 0,
	560, 561, 559, 562, 563, 564, 1150, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 1165, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 1212, 583, 584, 585, 586, 1188, 590,
	591, 0, 592, 593, 1083, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 1177,
	1178, 1179, 1180, 0, 611, 0, 603, 604, 605, 1189,
	606, 1190, 1107, 607, 608, 609, 610, 0, 612, 613,
	0, 1090, 614, 615, 616, 618, 619, 617, 620, 1151,
	621, 0, 0, 622, 623, 624, 681, 1174, 1211, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 2687, 633, 1087, 0, 0, 0,
	0, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0, 1082,
	0, 0, 0, 0, 0, 0, 1080, 1081, 277, 279,
	278, 280, 281, 282, 283, 1113, 284, 285, 0, 1111,
	0, 0, 0, 1153, 1117, 0, 0, 0, 286, 287,
	1193, 288, 289, 290, 291, 292, 293, 635, 1166, 0,
	294, 1173, 295, 1172, 0, 1183, 296, 297, 298, 299,
	300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642, 0,
	303, 304, 1159, 0, 1140, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1194, 327, 328, 329, 1143, 1141, 1142,
	1149, 1145, 1144, 1148, 330, 331, 332, 333, 334, 1176,
	335, 337, 1170, 1169, 1089, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1161,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1095, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1184, 1185, 367, 1108, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1168, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1195, 374, 375, 376, 1181,
	1182, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1191, 0, 1118, 387, 0, 388, 389, 390,
	391, 392, 1154, 1155, 1158, 473, 1197, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1196, 403, 1163, 1164, 0, 1124,
	0, 405, 406, 1198, 1156, 1199, 407, 408, 409, 1200,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1192, 1201, 421, 422,
	1202, 0, 423, 0, 0, 0, 424, 425, 428, 1147,
	1146, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1203, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1204, 469, 457, 1086, 276,
	1205, 470, 471, 1109, 1157, 472, 1171, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1206, 483, 1207, 1186, 484, 485, 1096,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1187, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1167, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1208,
	538, 539, 540, 541, 542, 1097, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1150, 565, 566,
	548, 549, 567, 568, 1209, 569, 570, 571, 572, 573,
	574, 575, 1165, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1212, 583, 584, 585, 586, 1188,
	590, 591, 0, 592, 593, 1083, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1177, 1178, 1179, 1180, 0, 611, 0, 603, 604, 605,
	1189, 606, 1190, 1107, 607, 608, 609, 610, 0, 612,
	613, 0, 1090, 614, 615, 616, 618, 619, 617, 620,
	1151, 621, 0, 0, 622, 623, 624, 681, 1174, 1211,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1082, 0, 0, 0, 0, 0, 0, 1080, 1081, 0,
	0, 0, 0, 0, 1877, 0, 1113, 0, 0, 0,
	1111, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 2438, 284, 285, 0, 0,
	0, 0, 0, 1153, 1117, 0, 0, 0, 286, 287,
	1193, 288, 289, 290, 291, 292, 293, 635, 1166, 0,
	294, 1173, 295, 1172, 0, 1183, 296, 297, 298, 299,
	300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642, 0,
	303, 304, 1159, 0, 1140, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1194, 327, 328, 329, 1143, 1141, 1142,
	1149, 1145, 1144, 1148, 330, 331, 332, 333, 334, 1176,
	335, 337, 1170, 1169, 1089, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1161,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1095, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1184, 1185, 367, 1108, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1168, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1195, 374, 375, 376, 1181,
	1182, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1191, 0, 1118, 387, 0, 388, 389, 390,
	391, 392, 1154, 1155, 1158, 473, 1197, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1196, 403, 1163, 1164, 0, 1124,
	0, 405, 406, 1198, 1156, 1199, 407, 408, 409, 1200,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1192, 1201, 421, 422,
	1202, 0, 423, 0, 0, 0, 424, 425, 428, 1147,
	1146, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1203, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1204, 469, 457, 1086, 276,
	1205, 470, 471, 1109, 1157, 472, 1171, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1206, 483, 1207, 1186, 484, 485, 1096,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1187, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1167, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1208,
	538, 539, 540, 541, 542, 1097, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1150, 565, 566,
	548, 549, 567, 568, 1209, 569, 570, 571, 572, 573,
	574, 575, 1165, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1212, 583, 584, 585, 586, 1188,
	590, 591, 0, 592, 593, 1083, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1177, 1178, 1179, 1180, 0, 611, 0, 603, 604, 605,
	1189, 606, 1190, 1107, 607, 608, 609, 610, 0, 612,
	613, 0, 1090, 614, 615, 616, 618, 619, 617, 620,
	1151, 621, 0, 0, 622, 623, 624, 681, 1174, 1211,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1087, 0, 0,
	2402, 0, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0,
	1082, 0, 0, 0, 0, 0, 0, 1080, 1081, 277,
	279, 278, 280, 281, 282, 283, 1113, 284, 285, 0,
	1111, 0, 0, 0, 1153, 1117, 0, 0, 0, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 635, 1166,
	0, 294, 1173, 295, 1172, 0, 1183, 296, 297, 298,
	299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642,
	0, 303, 304, 1159, 0, 1140, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1194, 327, 328, 329, 1143, 1141,
	1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333, 334,
	1176, 335, 337, 1170, 1169, 1089, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1161, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1095, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1184, 1185, 367, 1108, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1168, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1195, 374, 375, 376,
	1181, 1182, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1191, 0, 1118, 387, 0, 388, 389,
	390, 391, 392, 1154, 1155, 1158, 473, 1197, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1196, 403, 1163, 1164, 0,
	1124, 0, 405, 406, 1198, 1156, 1199, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1192, 1201, 421,
	422, 1202, 0, 423, 0, 0, 0, 424, 425, 428,
	1147, 1146, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 1086,
	276, 1205, 470, 471, 1109, 1157, 472, 1171, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1206, 483, 1207, 1186, 484, 485,
	1096, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1187, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1167, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 1097, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1150, 565,
	566, 548, 549, 567, 568, 1209, 569, 570, 571, 572,
	573, 574, 575, 1165, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1212, 583, 584, 585, 586,
	1188, 590, 591, 0, 592, 593, 1083, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1177, 1178, 1179, 1180, 0, 611, 0, 603, 604,
	605, 1189, 606, 1190, 1107, 607, 608, 609, 610, 0,
	612, 613, 0, 1090, 614, 615, 616, 618, 619, 617,
	620, 1151, 621, 0, 0, 622, 623, 624, 681, 1174,
	1211, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1087, 0,
	0, 2377, 0, 1129, 1101, 1102, 1103, 1099, 1100, 1112,
	0, 1082, 0, 0, 0, 0, 0, 0, 1080, 1081,
	277, 279, 278, 280, 281, 282, 283, 1113, 284, 285,
	0, 1111, 0, 0, 0, 1153, 1117, 0, 0, 0,
	286, 287, 1193, 288, 289, 290, 291, 292, 293, 635,
	1166, 0, 294, 1173, 295, 1172, 0, 1183, 296, 297,
	298, 299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214,
	642, 0, 303, 304, 1159, 0, 1140, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1194, 327, 328, 329, 1143,
	1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333,
	334, 1176, 335, 337, 1170, 1169, 1089, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1161, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 1095, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1184, 1185, 367, 1108, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 1168, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1195, 374, 375,
	376, 1181, 1182, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1191, 0, 1118, 387, 0, 388,
	389, 390, 391, 392, 1154, 1155, 1158, 473, 1197, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1196, 403, 1163, 1164,
	0, 1124, 0, 405, 406, 1198, 1156, 1199, 407, 408,
	409, 1200, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 1192, 1201,
	421, 422, 1202, 0, 423, 0, 0, 0, 424, 425,
	428, 1147, 1146, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1203, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1204, 469, 457,
	1086, 276, 1205, 470, 471, 1109, 1157, 472, 1171, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 1206, 483, 1207, 1186, 484,
	485, 1096, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1187, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 1167, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1208, 538, 539, 540, 541, 542, 1097, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 1150,
	565, 566, 548, 549, 567, 568, 1209, 569, 570, 571,
	572, 573, 574, 575, 1165, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 1212, 583, 584, 585,
	586, 1188, 590, 591, 0, 592, 593, 1083, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 1177, 1178, 1179, 1180, 0, 611, 0, 603,
	604, 605, 1189, 606, 1190, 1107, 607, 608, 609, 610,
	0, 612, 613, 0, 1090, 614, 615, 616, 618, 619,
	617, 620, 1151, 621, 0, 0, 622, 623, 624, 681,
	1174, 1211, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 1087,
	0, 0, 1717, 0, 1129, 1101, 1102, 1103, 1099, 1100,
	1112, 0, 1082, 0, 0, 0, 0, 0, 0, 1080,
	1081, 277, 279, 278, 280, 281, 282, 283, 1113, 284,
	285, 0, 1111, 0, 0, 0, 1153, 1117, 0, 0,
	0, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 1166, 0, 294, 1173, 295, 1172, 0, 1183, 296,
	297, 298, 299, 300, 301, 1119, 1152, 1084, 302, 1213,
	1214, 642, 0, 303, 304, 1159, 0, 1140, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1194, 327, 328, 329,
	1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332,
	333, 334, 1176, 335, 337, 1170, 1169, 1089, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1161, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1095, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1184, 1185, 367, 1108, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1168, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1195, 374,
	375, 376, 1181, 1182, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1191, 0, 1118, 387, 0,
	388, 389, 390, 391, 392, 1154, 1155, 1158, 473, 1197,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1196, 403, 1163,
	1164, 0, 1124, 0, 405, 406, 1198, 1156, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1192,
	1201, 421, 422, 1202, 0, 423, 0, 0, 0, 424,
	425, 428, 1147, 1146, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 1086, 276, 1205, 470, 471, 1109, 1157, 472, 1171,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1206, 483, 1207, 1186,
	484, 485, 1096, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1187, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 1167,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 1097, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	1150, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 1165, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 1212, 583, 584,
	585, 586, 1188, 590, 591, 0, 592, 593, 1083, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 1177, 1178, 1179, 1180, 0, 611, 0,
	603, 604, 605, 1189, 606, 1190, 1107, 607, 608, 609,
	610, 0, 612, 613, 0, 1090, 614, 615, 616, 618,
	619, 617, 620, 1151, 621, 0, 0, 622, 623, 624,
	681, 1174, 1211, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1087, 0, 0, 1646, 0, 1129, 1101, 1102, 1103, 1099,
	1100, 1112, 0, 1082, 0, 0, 0, 0, 0, 0,
	1080, 1081, 277, 279, 278, 280, 281, 282, 283, 1113,
	284, 285, 0, 1111, 0, 0, 0, 1153, 1117, 0,
	0, 0, 286, 287, 1193, 288, 289, 290, 291, 292,
	293, 635, 1166, 0, 294, 1173, 295, 1172, 0, 1183,
	296, 297, 298, 299, 300, 301, 1119, 1152, 1084, 302,
	1213, 1214, 642, 0, 303, 304, 1159, 0, 1140, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1194, 327, 328,
	329, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331,
	332, 333, 334, 1176, 335, 337, 1170, 1169, 1089, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1161, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1095, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1184, 1185, 367, 1108,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1168,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1195,
	374, 375, 376, 1181, 1182, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1191, 0, 1118, 387,
	0, 388, 389, 390, 391, 392, 1154, 1155, 1158, 473,
	1197, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1196, 403,
	1163, 1164, 0, 1124, 0, 405, 406, 1198, 1156, 1199,
	407, 408, 409, 1200, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1192, 1201, 421, 422, 1202, 0, 423, 0, 0, 0,
	424, 425, 428, 1147, 1146, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1203, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1204,
	469, 457, 1086, 276, 1205, 470, 471, 1109, 1157, 472,
	1171, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1206, 483, 1207,
	1186, 484, 485, 1096, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1187, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	1167, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1208, 538, 539, 540, 541, 542, 1097,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1150, 565, 566, 548, 549, 567, 568, 1209, 569,
	570, 571, 572, 573, 574, 575, 1165, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 1212, 583,
	584, 585, 586, 1188, 590, 591, 0, 592, 593, 1083,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 1177, 1178, 1179, 1180, 0, 611,
	0, 603, 604, 605, 1189, 606, 1190, 1107, 607, 608,
	609, 610, 0, 612, 613, 0, 1090, 614, 615, 616,
	618, 619, 617, 620, 1151, 621, 0, 0, 622, 623,
	624, 681, 1174, 1211, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 1087, 0, 0, 1641, 0, 1129, 1101, 1102, 1103,
	1099, 1100, 1112, 0, 1082, 0, 0, 0, 0, 0,
	0, 1080, 1081, 277, 279, 278, 280, 281, 282, 283,
	1113, 284, 285, 0, 1111, 0, 0, 0, 1153, 1117,
	0, 0, 0, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 1166, 0, 294, 1173, 295, 1172, 0,
	1183, 296, 297, 298, 299, 300, 301, 1119, 1152, 1084,
	302, 1213, 1214, 642, 0, 303, 304, 1159, 0, 1140,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330,
	331, 332, 333, 334, 1176, 335, 337, 1170, 1169, 1089,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1161, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1095, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1184, 1185, 367,
	1108, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1168, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1195, 374, 375, 376, 1181, 1182, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1191, 0, 1118,
	387, 0, 388, 389, 390, 391, 392, 1154, 1155, 1158,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1196,
	403, 1163, 1164, 0, 1124, 0, 405, 406, 1198, 1156,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 1192, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 1147, 1146, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 1086, 276, 1205, 470, 471, 1109, 1157,
	472, 1171, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 1186, 484, 485, 1096, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1187, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1167, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	1097, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1150, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 1165, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1212,
	583, 584, 585, 586, 1188, 590, 591, 0, 592, 593,
	1083, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1177, 1178, 1179, 1180, 0,
	611, 0, 603, 604, 605, 1189, 606, 1190, 1107, 607,
	608, 609, 610, 0, 612, 613, 0, 1090, 614, 615,
	616, 618, 619, 617, 620, 1151, 621, 0, 0, 622,
	623, 624, 681, 1174, 1211, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1087, 0, 0, 1632, 0, 1129, 1101, 1102,
	1103, 1099, 1100, 1112, 0, 1082, 0, 0, 0, 0,
	0, 0, 1080, 1081, 277, 279, 278, 280, 281, 282,
	283, 1113, 284, 285, 0, 1111, 0, 0, 0, 1153,
	1117, 0, 0, 0, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 1166, 0, 294, 1173, 295, 1172,
	0, 1183, 296, 297, 298, 299, 300, 301, 1119, 1152,
	1084, 302, 1213, 1214, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 1176, 335, 337, 1170, 1169,
	1089, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1161, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1095, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 1108, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1168, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 1181, 1182, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	1118, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 1163, 1164, 0, 1124, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 1086, 276, 1205, 470, 471, 1109,
	1157, 472, 1171, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 1096, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1167, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 1097, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 1165, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1212, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 1083, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1177, 1178, 1179, 1180,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 1107,
	607, 608, 609, 610, 0, 612, 613, 0, 1090, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 1174, 1211, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1087, 0, 0, 1627, 0, 1129, 1101,
	1102, 1103, 1099, 1100, 1112, 0, 1082, 0, 0, 0,
	0, 0, 0, 1080, 1081, 277, 279, 278, 280, 281,
	282, 283, 1113, 284, 285, 0, 1111, 0, 0, 0,
	1153, 1117, 0, 0, 0, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 1166, 0, 294, 1173, 295,
	1172, 0, 1183, 296, 297, 298, 299, 300, 301, 1119,
	1152, 1084, 302, 1213, 1214, 642, 0, 303, 304, 1159,
	0, 1140, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144,
	1148, 330, 331, 332, 333, 334, 1176, 335, 337, 1170,
	1169, 1089, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1161, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1095, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1184,
	1185, 367, 1108, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1168, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1195, 374, 375, 376, 1181, 1182, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1191,
	0, 1118, 387, 0, 388, 389, 390, 391, 392, 1154,
	1155, 1158, 473, 1197, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1196, 403, 1163, 1164, 0, 1124, 0, 405, 406,
	1198, 1156, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1192, 1201, 421, 422, 1202, 0, 423,
	0, 0, 0, 424, 425, 428, 1147, 1146, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 1086, 276, 1205, 470, 471,
	1109, 1157, 472, 1171, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1206, 483, 1207, 1186, 484, 485, 1096, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1187, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 1167, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 1097, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1150, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 1165,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 1212, 583, 584, 585, 586, 1188, 590, 591, 0,
	592, 593, 1083, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 1177, 1178, 1179,
	1180, 0, 611, 0, 603, 604, 605, 1189, 606, 1190,
	1107, 607, 608, 609, 610, 0, 612, 613, 0, 1090,
	614, 615, 616, 618, 619, 617, 620, 1151, 621, 0,
	0, 622, 623, 624, 681, 1174, 1211, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1087, 0, 0, 1538, 0, 1129,
	1101, 1102, 1103, 1099, 1100, 1112, 0, 1082, 0, 0,
	0, 0, 0, 0, 1080, 1081, 277, 279, 278, 280,
	281, 282, 283, 1113, 284, 285, 0, 1111, 0, 0,
	0, 1153, 1117, 0, 0, 0, 286, 287, 1193, 288,
	289, 290, 291, 292, 293, 635, 1166, 0, 294, 1173,
	295, 1172, 0, 1183, 296, 297, 298, 299, 300, 301,
	1119, 1152, 1084, 302, 1213, 1214, 642, 0, 303, 304,
	1159, 0, 1140, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145,
	1144, 1148, 330, 331, 332, 333, 334, 1176, 335, 337,
	1170, 1169, 1089, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1161, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1095,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1184, 1185, 367, 1108, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1168, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1195, 374, 375, 376, 1181, 1182, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1191, 0, 1118, 387, 0, 388, 389, 390, 391, 392,
	1537, 1155, 1158, 473, 1197, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1196, 403, 1163, 1164, 0, 1124, 0, 405,
	406, 1198, 1156, 1199, 407, 408, 409, 1200, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1192, 1201, 421, 422, 1202, 0,
	423, 0, 0, 0, 424, 425, 428, 1147, 1146, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1203, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1204, 469, 457, 1086, 276, 1205, 470,
	471, 1109, 1157, 472, 1171, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1206, 483, 1207, 1186, 484, 485, 1096, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1187, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 1167, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1208, 538, 539,
	540, 541, 542, 1097, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 1150, 565, 566, 548, 549,
	567, 568, 1209, 569, 570, 571, 572, 573, 574, 575,
	1165, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 1212, 583, 584, 585, 586, 1188, 590, 591,
	0, 592, 593, 1083, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 1177, 1178,
	1179, 1180, 0, 611, 0, 603, 604, 605, 1189, 606,
	1190, 1107, 607, 608, 609, 610, 0, 612, 613, 0,
	1090, 614, 615, 616, 618, 619, 617, 620, 1151, 621,
	0, 0, 622, 623, 624, 681, 1174, 1211, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 1087, 0, 0, 1532, 0,
	1129, 1101, 1102, 1103, 1099, 1100, 1112, 0, 1082, 0,
	0, 0, 0, 0, 0, 1080, 1081, 277, 279, 278,
	280, 281, 282, 283, 1113, 284, 285, 0, 1111, 0,
	0, 0, 1153, 1117, 0, 0, 0, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 1166, 0, 294,
	1173, 295, 1172, 0, 1183, 296, 297, 298, 299, 300,
	301, 1119, 1152, 1084, 302, 1213, 1214, 642, 0, 303,
	304, 1159, 0, 1140, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149,
	1145, 1144, 1148, 330, 331, 332, 333, 334, 1176, 335,
	337, 1170, 1169, 1089, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1161, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1095, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1184, 1185, 367, 1108, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1168, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1195, 374, 375, 376, 1181, 1182,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1191, 0, 1118, 387, 0, 388, 389, 390, 391,
	392, 1531, 1155, 1158, 473, 1197, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1196, 403, 1163, 1164, 0, 1124, 0,
	405, 406, 1198, 1156, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1192, 1201, 421, 422, 1202,
	0, 423, 0, 0, 0, 424, 425, 428, 1147, 1146,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 1086, 276, 1205,
	470, 471, 1109, 1157, 472, 1171, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1206, 483, 1207, 1186, 484, 485, 1096, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1187,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 1167, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 1097, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 1150, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 1165, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 1212, 583, 584, 585, 586, 1188, 590,
	591, 0, 592, 593, 1083, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 1177,
	1178, 1179, 1180, 0, 611, 0, 603, 604, 605, 1189,
	606, 1190, 1107, 607, 608, 609, 610, 0, 612, 613,
	0, 1090, 614, 615, 616, 618, 619, 617, 620, 1151,
	621, 0, 0, 622, 623, 624, 681, 1174, 1211, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1087, 0, 0, 1525,
	0, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0, 1082,
	0, 0, 0, 0, 0, 0, 1080, 1081, 277, 279,
	278, 280, 281, 282, 283, 1113, 284, 285, 0, 1111,
	0, 0, 0, 1153, 1117, 0, 0, 0, 286, 287,
	1193, 288, 289, 290, 291, 292, 293, 635, 1166, 0,
	294, 1173, 295, 1172, 0, 1183, 296, 297, 298, 299,
	300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642, 0,
	303, 304, 1159, 0, 1140, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1194, 327, 328, 329, 1143, 1141, 1142,
	1149, 1145, 1144, 1148, 330, 331, 332, 333, 334, 1176,
	335, 337, 1170, 1169, 1089, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1161,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1095, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1184, 1185, 367, 1108, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1168, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1195, 374, 375, 376, 1181,
	1182, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1191, 0, 1118, 387, 0, 388, 389, 390,
	391, 392, 1154, 1155, 1158, 473, 1197, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1196, 403, 1163, 1164, 0, 1124,
	0, 405, 406, 1198, 1156, 1199, 407, 408, 409, 1200,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1192, 1201, 421, 422,
	1202, 0, 423, 0, 0, 0, 424, 425, 428, 1147,
	1146, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1203, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1204, 469, 457, 1086, 276,
	1205, 470, 471, 1109, 1157, 472, 1171, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1206, 483, 1207, 1186, 484, 485, 1096,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1187, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1167, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1208,
	538, 539, 540, 541, 542, 1097, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1150, 565, 566,
	548, 549, 567, 568, 1209, 569, 570, 571, 572, 573,
	574, 575, 1165, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1212, 583, 584, 585, 586, 1188,
	590, 591, 0, 592, 593, 1083, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1177, 1178, 1179, 1180, 0, 611, 0, 603, 604, 605,
	1189, 606, 1190, 1107, 607, 608, 609, 610, 0, 612,
	613, 0, 1090, 614, 615, 616, 618, 619, 617, 620,
	1151, 621, 0, 0, 622, 623, 624, 681, 1174, 1211,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1087, 0, 0,
	1340, 0, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0,
	1082, 0, 0, 0, 0, 0, 0, 1080, 1081, 277,
	279, 278, 280, 281, 282, 283, 1113, 284, 285, 0,
	1111, 0, 0, 0, 1153, 1117, 0, 0, 0, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 635, 1166,
	0, 294, 1173, 295, 1172, 0, 1183, 296, 297, 298,
	299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642,
	0, 303, 304, 1159, 0, 1140, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1194, 327, 328, 329, 1143, 1141,
	1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333, 334,
	1176, 335, 337, 1170, 1169, 1089, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1161, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1095, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1184, 1185, 367, 1108, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1168, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1195, 374, 375, 376,
	1181, 1182, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1191, 0, 1118, 387, 0, 388, 389,
	390, 391, 392, 1154, 1155, 1158, 473, 1197, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1196, 403, 1163, 1164, 0,
	1124, 0, 405, 406, 1198, 1156, 1199, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1192, 1201, 421,
	422, 1202, 0, 423, 0, 0, 0, 424, 425, 428,
	1147, 1146, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 1086,
	276, 1205, 470, 471, 1109, 1157, 472, 1171, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1206, 483, 1207, 1186, 484, 485,
	1096, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1187, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1167, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 1097, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1150, 565,
	566, 548, 549, 567, 568, 1209, 569, 570, 571, 572,
	573, 574, 575, 1165, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1212, 583, 584, 585, 586,
	1188, 590, 591, 0, 592, 593, 1083, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1177, 1178, 1179, 1180, 0, 611, 0, 603, 604,
	605, 1189, 606, 1190, 1107, 607, 608, 609, 610, 0,
	612, 613, 0, 1090, 614, 615, 616, 618, 619, 617,
	620, 1151, 621, 0, 0, 622, 623, 624, 681, 1174,
	1211, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1087, 0,
	0, 0, 0, 1129, 1101, 1102, 1103, 1099, 1100, 1112,
	0, 1082, 0, 0, 0, 0, 0, 0, 1080, 1081,
	277, 279, 278, 280, 281, 282, 283, 1113, 284, 285,
	0, 1111, 0, 0, 0, 1153, 1117, 0, 0, 0,
	286, 287, 1193, 288, 289, 290, 291, 292, 293, 635,
	1166, 0, 294, 1173, 295, 1172, 0, 1183, 296, 297,
	298, 299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214,
	642, 0, 303, 304, 1159, 0, 1140, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1194, 327, 328, 329, 1143,
	1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333,
	334, 1176, 335, 337, 1170, 1169, 1089, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1161, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 1095, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1184, 1185, 367, 1108, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 1168, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1195, 374, 375,
	376, 1181, 1182, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1191, 0, 1118, 387, 0, 388,
	389, 390, 391, 392, 1154, 1155, 1158, 473, 1197, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1196, 403, 1163, 1164,
	0, 1124, 0, 405, 406, 1198, 1156, 1199, 407, 408,
	409, 1200, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 1192, 1201,
	421, 422, 1202, 0, 423, 0, 0, 0, 424, 425,
	428, 1147, 1146, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1203, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1204, 469, 457,
	1086, 276, 1205, 470, 471, 1109, 1157, 472, 1171, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 1206, 483, 1207, 1186, 484,
	485, 1096, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1187, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 1167, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1208, 538, 539, 540, 541, 542, 1097, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 1150,
	565, 566, 548, 549, 567, 568, 1209, 569, 570, 571,
	572, 573, 574, 575, 1165, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 1212, 583, 584, 585,
	586, 1188, 590, 591, 0, 592, 593, 1083, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 1177, 1178, 1179, 1180, 0, 611, 0, 603,
	604, 605, 1189, 606, 1190, 1107, 607, 608, 609, 610,
	0, 612, 613, 0, 1090, 614, 615, 616, 618, 619,
	617, 620, 1151, 621, 0, 0, 622, 623, 624, 681,
	1174, 1211, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 1087,
	0, 0, 0, 0, 1129, 1101, 1102, 1103, 1099, 1100,
	1112, 0, 1082, 0, 0, 0, 0, 0, 0, 1080,
	1081, 277, 279, 278, 280, 281, 282, 283, 1113, 284,
	285, 0, 1111, 0, 0, 0, 1153, 1117, 0, 0,
	0, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 1166, 0, 294, 1173, 295, 1172, 0, 1183, 296,
	297, 298, 299, 300, 301, 1119, 1152, 1084, 302, 1213,
	1214, 642, 0, 303, 304, 1159, 0, 1140, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1194, 327, 328, 4734,
	1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332,
	333, 334, 1176, 335, 337, 1170, 1169, 1089, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1161, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1095, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1184, 1185, 367, 1108, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1168, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1195, 374,
	375, 376, 1181, 1182, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1191, 0, 1118, 387, 0,
	388, 389, 390, 391, 392, 1154, 1155, 1158, 473, 1197,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1196, 403, 1163,
	1164, 0, 1124, 0, 405, 406, 1198, 1156, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1192,
	1201, 421, 422, 1202, 0, 423, 0, 0, 0, 424,
	425, 428, 1147, 1146, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 1086, 276, 1205, 470, 471, 1109, 1157, 472, 1171,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1206, 483, 1207, 1186,
	484, 485, 1096, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1187, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 1167,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 1097, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	1150, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 1165, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 1212, 583, 584,
	585, 586, 1188, 590, 591, 0, 592, 593, 1083, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 1177, 1178, 1179, 1180, 0, 611, 0,
	603, 604, 605, 1189, 606, 1190, 1107, 607, 608, 609,
	610, 0, 4733, 613, 0, 1090, 614, 615, 616, 618,
	619, 617, 620, 1151, 621, 0, 0, 622, 623, 624,
	681, 1174, 1211, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1087, 0, 0, 0, 0, 1129, 1101, 1102, 1103, 1099,
	1100, 1112, 0, 1082, 0, 0, 0, 0, 0, 0,
	1080, 1081, 277, 279, 278, 280, 281, 282, 283, 1113,
	284, 285, 0, 1111, 0, 0, 0, 1153, 1117, 0,
	0, 0, 286, 287, 1193, 288, 289, 290, 291, 292,
	293, 4732, 1166, 0, 294, 1173, 295, 1172, 0, 1183,
	296, 297, 298, 299, 300, 301, 1119, 1152, 1084, 302,
	1213, 1214, 642, 0, 303, 304, 1159, 0, 1140, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1194, 327, 328,
	4734, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331,
	332, 333, 334, 1176, 335, 337, 1170, 1169, 1089, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1161, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1095, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1184, 1185, 367, 1108,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1168,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1195,
	374, 375, 376, 1181, 1182, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1191, 0, 1118, 387,
	0, 388, 389, 390, 391, 392, 1154, 1155, 1158, 473,
	1197, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1196, 403,
	1163, 1164, 0, 1124, 0, 405, 406, 1198, 1156, 1199,
	407, 408, 409, 1200, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1192, 1201, 421, 422, 1202, 0, 423, 0, 0, 0,
	424, 425, 428, 1147, 1146, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1203, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1204,
	469, 457, 1086, 276, 1205, 470, 471, 1109, 1157, 472,
	1171, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1206, 483, 1207,
	1186, 484, 485, 1096, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1187, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	1167, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1208, 538, 539, 540, 541, 542, 1097,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1150, 565, 566, 548, 549, 567, 568, 1209, 569,
	570, 571, 572, 573, 574, 575, 1165, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 1212, 583,
	584, 585, 586, 1188, 590, 591, 0, 592, 593, 1083,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 1177, 1178, 1179, 1180, 0, 611,
	0, 603, 604, 605, 1189, 606, 1190, 1107, 607, 608,
	609, 610, 0, 4733, 613, 0, 1090, 614, 615, 616,
	618, 619, 617, 620, 1151, 621, 0, 0, 622, 623,
	624, 681, 1174, 1211, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 1087, 0, 0, 0, 0, 1129, 1101, 1102, 1103,
	1099, 1100, 1112, 0, 1082, 0, 0, 0, 0, 0,
	0, 1080, 1081, 277, 279, 278, 280, 281, 282, 283,
	1113, 284, 285, 0, 1111, 0, 0, 0, 1153, 1117,
	0, 0, 0, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 1166, 0, 294, 1173, 295, 1172, 0,
	1183, 296, 297, 298, 299, 300, 301, 1119, 1152, 1084,
	302, 1213, 1214, 642, 0, 303, 304, 1159, 0, 1140,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	4357, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330,
	331, 332, 333, 334, 1176, 335, 337, 1170, 1169, 1089,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1161, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1095, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1184, 1185, 367,
	1108, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1168, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1195, 374, 375, 376, 1181, 1182, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1191, 0, 4358,
	387, 0, 388, 389, 390, 391, 392, 1154, 1155, 1158,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1196,
	403, 1163, 1164, 0, 1124, 0, 405, 406, 1198, 1156,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 1192, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 1147, 1146, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 1086, 276, 1205, 470, 471, 1109, 1157,
	472, 1171, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 1186, 484, 485, 1096, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1187, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1167, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 4356, 542,
	1097, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1150, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 1165, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1212,
	583, 584, 585, 586, 1188, 590, 591, 0, 592, 593,
	1083, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1177, 1178, 1179, 1180, 0,
	611, 0, 603, 604, 605, 1189, 606, 1190, 1107, 607,
	608, 609, 610, 0, 612, 613, 0, 1090, 614, 615,
	616, 618, 619, 617, 620, 1151, 621, 0, 0, 622,
	623, 624, 681, 1174, 1211, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1087, 0, 0, 0, 0, 1129, 1101, 1102,
	1103, 3186, 3187, 1112, 0, 1082, 0, 0, 0, 0,
	0, 0, 1080, 1081, 277, 279, 278, 280, 281, 282,
	283, 1113, 284, 285, 0, 1111, 0, 0, 0, 1153,
	1117, 0, 0, 0, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 1166, 0, 294, 1173, 295, 1172,
	0, 1183, 296, 297, 298, 299, 300, 301, 1119, 1152,
	1084, 302, 1213, 1214, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 1176, 335, 337, 1170, 1169,
	1089, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1161, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1095, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 1108, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1168, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 1181, 1182, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	1118, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 1163, 1164, 0, 1124, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 1086, 276, 1205, 470, 471, 1109,
	1157, 472, 1171, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 1096, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1167, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 1097, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 1165, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1212, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 1083, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1177, 1178, 1179, 1180,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 1107,
	607, 608, 609, 610, 0, 612, 613, 0, 1090, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 1174, 1211, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1087, 0, 0, 0, 0, 1129, 1101,
	1102, 1103, 3184, 3185, 1112, 0, 1082, 0, 0, 0,
	0, 0, 0, 1080, 1081, 277, 279, 278, 280, 281,
	282, 283, 1113, 284, 285, 0, 1111, 0, 0, 0,
	1153, 1117, 0, 0, 0, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 1166, 0, 294, 1173, 295,
	1172, 0, 1183, 296, 297, 298, 299, 300, 301, 1119,
	1152, 1084, 302, 1213, 1214, 642, 0, 303, 304, 1159,
	0, 1140, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144,
	1148, 330, 331, 332, 333, 334, 1176, 335, 337, 1170,
	1169, 1089, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1161, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1095, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1184,
	1185, 367, 1108, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1168, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1195, 374, 375, 376, 1181, 1182, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1191,
	0, 1118, 387, 0, 388, 389, 390, 391, 392, 1154,
	1155, 1158, 473, 1197, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1196, 403, 1163, 1164, 0, 1124, 0, 405, 406,
	1198, 1156, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1192, 1201, 421, 422, 1202, 0, 423,
	0, 0, 0, 424, 425, 428, 1147, 1146, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 1086, 276, 1205, 470, 471,
	1109, 1157, 472, 1171, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1206, 483, 1207, 1186, 484, 485, 1096, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1187, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 1167, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 1097, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1150, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 1165,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 1212, 583, 584, 585, 586, 1188, 590, 591, 0,
	592, 593, 1083, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 1177, 1178, 1179,
	1180, 0, 611, 0, 603, 604, 605, 1189, 606, 1190,
	1107, 607, 608, 609, 610, 0, 612, 613, 0, 1090,
	614, 615, 616, 618, 619, 617, 620, 1151, 621, 0,
	0, 622, 623, 624, 681, 1174, 1211, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1087, 0, 0, 0, 0, 1129,
	1101, 1102, 1103, 1099, 1100, 1112, 0, 1082, 0, 0,
	0, 0, 0, 0, 1080, 1081, 277, 279, 278, 280,
	281, 282, 283, 1113, 284, 285, 0, 1111, 0, 0,
	0, 1153, 1117, 0, 0, 0, 286, 287, 1193, 288,
	289, 290, 291, 292, 293, 635, 1166, 0, 294, 1173,
	295, 1172, 0, 1183, 296, 297, 298, 299, 300, 301,
	1119, 1152, 1084, 302, 1213, 1214, 642, 0, 303, 304,
	1159, 0, 1140, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145,
	1144, 1148, 330, 331, 332, 333, 334, 1176, 335, 337,
	1170, 1169, 1089, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1161, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1095,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1184, 1185, 367, 1108, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1168, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1195, 374, 375, 376, 1181, 1182, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1191, 0, 1118, 387, 0, 388, 389, 390, 391, 392,
	1154, 1155, 1158, 473, 1197, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1196, 403, 1163, 1164, 0, 1124, 0, 405,
	406, 1198, 1156, 1199, 407, 408, 409, 1200, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1192, 1201, 421, 422, 1202, 0,
	423, 0, 0, 0, 424, 425, 428, 1147, 1146, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1203, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1204, 469, 457, 1086, 276, 1205, 470,
	471, 1109, 1157, 472, 1171, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1206, 483, 1207, 1186, 484, 485, 1096, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1187, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 1167, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1208, 538, 539,
	540, 541, 542, 1097, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 1150, 565, 566, 548, 549,
	567, 568, 1209, 569, 570, 571, 572, 573, 574, 575,
	1165, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 1212, 583, 584, 585, 586, 1188, 590, 591,
	0, 592, 593, 1083, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 1177, 1178,
	1179, 1180, 0, 611, 0, 603, 604, 605, 1189, 606,
	1190, 1107, 607, 608, 609, 610, 0, 612, 613, 0,
	1090, 614, 615, 616, 618, 619, 617, 620, 1151, 621,
	0, 0, 622, 623, 624, 681, 1174, 1211, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 1087, 0, 0, 0, 0,
	1129, 1101, 1102, 1103, 1099, 1100, 1112, 0, 1082, 0,
	0, 0, 0, 0, 0, 2446, 2447, 277, 279, 278,
	280, 281, 282, 283, 1113, 284, 285, 0, 1111, 0,
	0, 0, 1153, 1117, 0, 0, 0, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 1166, 0, 294,
	1173, 295, 1172, 0, 1183, 296, 297, 298, 299, 300,
	301, 1119, 1152, 0, 302, 1213, 1214, 642, 0, 303,
	304, 1159, 0, 1140, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149,
	1145, 1144, 1148, 330, 331, 332, 333, 334, 1176, 335,
	337, 1170, 1169, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1161, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1095, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1184, 1185, 367, 1108, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1168, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1195, 374, 375, 376, 1181, 1182,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1191, 0, 1118, 387, 0, 388, 389, 390, 391,
	392, 1154, 1155, 1158, 473, 1197, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1196, 403, 1163, 1164, 0, 1124, 0,
	405, 406, 1198, 1156, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1192, 1201, 421, 422, 1202,
	0, 423, 0, 0, 0, 424, 425, 428, 1147, 1146,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 0, 276, 1205,
	470, 471, 1109, 1157, 472, 1171, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1206, 483, 1207, 1186, 484, 485, 1096, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1187,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 1167, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 1097, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 1150, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 1165, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 1212, 583, 584, 585, 586, 1188, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 1177,
	1178, 1179, 1180, 0, 611, 0, 603, 604, 605, 1189,
	606, 1190, 1107, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 1151,
	621, 0, 0, 622, 623, 624, 681, 1174, 1211, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0, 2705,
	0, 0, 0, 0, 0, 0, 2703, 2704, 277, 279,
	278, 280, 281, 282, 283, 1113, 284, 285, 0, 1111,
	0, 0, 0, 1153, 1117, 0, 0, 0, 286, 287,
	1193, 288, 289, 290, 291, 292, 293, 635, 1166, 0,
	294, 1173, 295, 1172, 0, 1183, 296, 297, 298, 299,
	300, 301, 1119, 1152, 0, 302, 1213, 1214, 642, 0,
	303, 304, 1159, 0, 1140, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1194, 327, 328, 329, 1143, 1141, 1142,
	1149, 1145, 1144, 1148, 330, 331, 332, 333, 334, 1176,
	335, 337, 1170, 1169, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1161,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1095, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1184, 1185, 367, 1108, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1168, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1195, 374, 375, 376, 1181,
	1182, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1191, 0, 1118, 387, 0, 388, 389, 390,
	391, 392, 1154, 1155, 1158, 473, 1197, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1196, 403, 1163, 1164, 0, 1124,
	0, 405, 406, 1198, 1156, 1199, 407, 408, 409, 1200,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1192, 1201, 421, 422,
	1202, 0, 423, 0, 0, 0, 424, 425, 428, 1147,
	1146, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1203, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1204, 469, 457, 0, 276,
	1205, 470, 471, 1109, 1157, 472, 1171, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1206, 483, 1207, 1186, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1187, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1167, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1208,
	538, 539, 540, 541, 542, 3179, 3180, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1150, 565, 566,
	548, 549, 567, 568, 1209, 569, 570, 571, 572, 573,
	574, 575, 1165, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1212, 583, 584, 585, 586, 1188,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1177, 1178, 1179, 1180, 0, 611, 0, 603, 604, 605,
	1189, 606, 1190, 1107, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	1151, 621, 0, 0, 622, 623, 624, 681, 1174, 1211,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 1129, 1101, 1102, 1103, 1099, 1100, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 2121, 2122, 277,
	279, 278, 280, 281, 282, 283, 1113, 284, 285, 0,
	1111, 0, 0, 0, 1153, 1117, 0, 0, 0, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 0, 1166,
	0, 294, 1173, 295, 1172, 0, 1183, 296, 297, 298,
	299, 300, 301, 1119, 1152, 1084, 302, 1213, 1214, 642,
	0, 303, 304, 1159, 0, 1140, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1194, 327, 328, 4734, 1143, 1141,
	1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333, 334,
	1176, 335, 337, 1170, 1169, 1089, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1161, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1095, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1184, 1185, 367, 1108, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1168, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1195, 374, 375, 376,
	1181, 1182, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1191, 0, 1118, 387, 0, 388, 389,
	390, 391, 392, 1154, 1155, 1158, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1196, 403, 1163, 1164, 0,
	1124, 0, 405, 406, 0, 1156, 0, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1192, 1201, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	1147, 1146, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 1086,
	276, 0, 470, 471, 1109, 1157, 472, 1171, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1206, 483, 1207, 1186, 484, 485,
	1096, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1187, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1167, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 1097, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1150, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 1165, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1212, 583, 584, 585, 586,
	1188, 590, 591, 0, 592, 593, 1083, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1177, 1178, 1179, 1180, 0, 611, 0, 603, 604,
	605, 1189, 606, 1190, 1107, 607, 608, 609, 610, 0,
	4733, 613, 0, 1090, 614, 615, 616, 618, 619, 617,
	620, 1151, 621, 0, 0, 622, 623, 624, 681, 1174,
	1211, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 1073, 0, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1080, 1081,
	277, 279, 278, 280, 281, 282, 283, 1113, 284, 285,
	0, 1111, 0, 0, 0, 1153, 0, 0, 0, 0,
	286, 287, 1193, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 1152, 0, 302, 640, 641,
	642, 0, 303, 304, 1159, 0, 1140, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1194, 327, 328, 329, 1143,
	1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1184, 1185, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1195, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1191, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 1154, 1155, 1158, 473, 1197, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1196, 403, 657, 658,
	0, 659, 0, 405, 406, 1198, 1156, 1199, 407, 408,
	409, 1200, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 1237, 417, 419, 418, 0, 420, 1192, 1201,
	421, 422, 1202, 0, 423, 0, 0, 0, 424, 425,
	428, 1147, 1146, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1203, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1204, 469, 457,
	0, 276, 1205, 470, 471, 0, 1157, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 1243, 478, 479, 480,
	0, 0, 481, 482, 664, 1206, 483, 1207, 1186, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1187, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1208, 538, 539, 540, 541, 542, 671, 1245, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 236, 560, 561, 559, 562, 563, 564, 1150,
	565, 566, 548, 549, 567, 568, 1209, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 1188, 590, 591, 0, 592, 593, 0, 589, 580,
	238, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 1189, 606, 1190, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 1151, 621, 0, 0, 622, 623, 624, 1616,
	682, 683, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 230, 629, 630, 685, 631, 632, 633, 1251,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 1241, 0, 1964, 0,
	0, 1153, 0, 0, 0, 0, 286, 287, 1193, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 1152, 0, 302, 640, 641, 642, 0, 303, 304,
	1159, 0, 1140, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145,
	1144, 1148, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1184, 1185, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1195, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1191, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	1154, 1155, 1158, 473, 1197, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1196, 403, 657, 658, 0, 659, 0, 405,
	406, 1198, 1156, 1199, 407, 408, 409, 1200, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 1237, 417,
	419, 418, 0, 420, 1192, 1201, 421, 422, 1202, 0,
	423, 0, 0, 0, 424, 425, 428, 1147, 1146, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1203, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1204, 469, 457, 0, 276, 1205, 470,
	471, 0, 1157, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 1243, 478, 479, 480, 0, 0, 481, 482,
	664, 1206, 483, 1207, 1186, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1187, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1208, 538, 539,
	540, 541, 542, 671, 1245, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 236, 560,
	561, 559, 562, 563, 564, 1150, 565, 566, 548, 549,
	567, 568, 1209, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 1188, 590, 591,
	0, 592, 593, 0, 589, 580, 238, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 1189, 606,
	1190, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 1151, 621,
	0, 0, 622, 623, 624, 1616, 682, 683, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 230, 629,
	630, 685, 631, 632, 633, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 3343, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 1964, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1153, 0, 0, 0, 0, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	1152, 0, 302, 640, 641, 642, 0, 303, 304, 1159,
	0, 1140, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1194, 327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144,
	1148, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1184,
	1185, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1195, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1191,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 1154,
	1155, 1158, 473, 1197, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1196, 403, 657, 658, 0, 659, 0, 405, 406,
	1198, 1156, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 1237, 417, 419,
	418, 0, 420, 1192, 1201, 421, 422, 1202, 0, 423,
	0, 0, 0, 424, 425, 428, 1147, 1146, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 0, 276, 1205, 470, 471,
	0, 1157, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 1243, 478, 479, 480, 0, 0, 481, 482, 664,
	1206, 483, 1207, 1186, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1187, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 671, 1245, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1150, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 1188, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 1189, 606, 1190,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 1151, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 0, 1233, 0, 1251, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1153,
	0, 1241, 0, 1239, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 1152,
	0, 302, 640, 641, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 657, 658, 0, 659, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 1237, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 0, 276, 1205, 470, 471, 0,
	1157, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	1243, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 671, 1245, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 1251, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1153, 0,
	1241, 0, 1239, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 1152, 0,
	302, 640, 641, 642, 0, 303, 304, 1159, 0, 1140,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1184, 1185, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1195, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1191, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 1154, 1155, 1158,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1196,
	403, 657, 658, 0, 659, 0, 405, 406, 1198, 1156,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 1237, 417, 419, 418, 0,
	420, 1192, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 1147, 1146, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 0, 276, 1205, 470, 471, 0, 1157,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 1243,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 1186, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1187, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	671, 1245, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1150, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 1188, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 1189, 606, 1190, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 1151, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 1251, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1153, 0, 1241,
	0, 1239, 286, 287, 1193, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 1152, 0, 302,
	640, 641, 642, 0, 303, 304, 1159, 0, 1140, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1194, 327, 328,
	329, 1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1184, 1185, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1195,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1191, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 1154, 1155, 1158, 473,
	1197, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1196, 403,
	657, 658, 0, 659, 0, 405, 406, 1198, 1156, 1199,
	407, 408, 409, 1200, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1192, 1201, 421, 422, 1202, 0, 423, 0, 0, 0,
	424, 425, 428, 1147, 1146, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1203, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1204,
	469, 457, 0, 276, 1205, 470, 471, 0, 1157, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1206, 483, 1207,
	1186, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1187, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1208, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1150, 565, 566, 548, 549, 567, 568, 1209, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 1188, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 1189, 606, 1190, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 1151, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 1251, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1153, 0, 0, 0,
	4178, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 1152, 0, 302, 640,
	641, 642, 0, 303, 304, 1159, 0, 1140, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1194, 327, 328, 329,
	1143, 1141, 1142, 1149, 1145, 1144, 1148, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1184, 1185, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1195, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1191, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 1154, 1155, 1158, 473, 1197,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1196, 403, 657,
	658, 0, 659, 0, 405, 406, 1198, 1156, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1192,
	1201, 421, 422, 1202, 0, 423, 0, 0, 0, 424,
	425, 428, 1147, 1146, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 0, 276, 1205, 470, 471, 0, 1157, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1206, 483, 1207, 1186,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1187, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 671, 1245,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	1150, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 1188, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 1189, 606, 1190, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 1151, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 0, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	2550, 2551, 2552, 2569, 2570, 2571, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	2572, 0, 634, 0, 0, 0, 0, 286, 287, 1861,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 1846, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 2562, 0, 313, 314, 315, 312, 316, 0,
	317, 2558, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 2563, 2564, 2565,
	2566, 368, 369, 370, 649, 0, 0, 2557, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 2567, 2568, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 2560, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 2561, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 1845, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 1073, 0, 1333, 2547, 2548, 2549, 2573,
	2559, 2553, 0, 2555, 2556, 2554, 2541, 2542, 2543, 2544,
	2545, 2546, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 1193, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 1338, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1194, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1195,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	1197, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 1196, 403,
	657, 658, 0, 659, 0, 405, 406, 1198, 660, 1199,
	407, 408, 409, 1200, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 1201, 421, 422, 1202, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1203, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1204,
	469, 457, 0, 0, 1205, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1206, 483, 1207,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1208, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 236, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 1209, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 238, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 1616, 682, 683, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 230, 629, 630, 685, 631, 632,
	633, 0, 0, 231, 1613, 0, 1333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	190, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 1338,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1195, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1196,
	403, 657, 658, 0, 659, 0, 405, 406, 1198, 660,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 0, 0, 1205, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 236, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 238, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 1616, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 230, 629, 630, 685, 631,
	632, 633, 1333, 1332, 231, 0, 0, 0, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 190, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 1338, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1194, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1195, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 1197, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 1196, 403, 657, 658, 0,
	659, 0, 405, 406, 1198, 660, 1199, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 1201, 421,
	422, 1202, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 0,
	0, 1205, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1206, 483, 1207, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 1209, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1333, 1332,
	0, 0, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 1638, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 1338, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1194, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1195, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 1197, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1196, 403, 657, 658, 0, 659, 0, 405, 406,
	1198, 660, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 1201, 421, 422, 1202, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 0, 0, 1205, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1206, 483, 1207, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1333, 1332, 0, 0, 0, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 3641, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 1338, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1194, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1195, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 1197,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 1196, 403, 657,
	658, 0, 659, 0, 405, 406, 1198, 660, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	1201, 421, 422, 1202, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 0, 0, 1205, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1206, 483, 1207, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 2319, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1333, 2230, 0, 0, 0, 0, 2231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 1638,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 1338, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1194, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1195, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1197, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 1196, 403, 657, 658, 0, 659, 0,
	405, 406, 1198, 660, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	2229, 419, 418, 0, 420, 661, 1201, 421, 422, 1202,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 0, 0, 1205,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1206, 483, 1207, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1333, 1332, 0, 0,
	0, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 1638, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 1338,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1195, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1196,
	403, 657, 658, 0, 659, 0, 405, 406, 1198, 660,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 0, 0, 1205, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	1073, 628, 271, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 1622, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 236, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 238,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 1616, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 271, 0,
	0, 230, 629, 630, 685, 631, 632, 633, 0, 0,
	231, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 190, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 276, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 1251, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1153,
	0, 0, 0, 1978, 286, 287, 1193, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 1152,
	0, 302, 640, 641, 642, 0, 303, 304, 1159, 0,
	1140, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1194,
	327, 328, 329, 1143, 1141, 1142, 1149, 1145, 1144, 1148,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1184, 1185,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1195, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1191, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 1154, 1155,
	1158, 473, 1197, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1196, 403, 657, 658, 0, 659, 0, 405, 406, 1198,
	1156, 1199, 407, 408, 409, 1200, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1192, 1201, 421, 422, 1202, 0, 423, 0,
	0, 0, 424, 425, 428, 1147, 1146, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1203, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1204, 469, 457, 0, 276, 1205, 470, 471, 0,
	1157, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1206,
	483, 1207, 1186, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1187, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1208, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1150, 565, 566, 548, 549, 567, 568,
	1209, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 1188, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 1189, 606, 1190, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 1151, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 0, 628, 271, 3085, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 0, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 4903, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 271, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 3591, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 271, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 1610, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 0, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 3073, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 0, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 3754, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 907, 628, 812, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 2308, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 819, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 905, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 817, 594, 595, 596, 597, 598, 818, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 812, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 2047, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 822, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	819, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 276, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 2046, 555,
	556, 557, 558, 0, 2048, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 817, 594, 595, 596, 597, 598, 818, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 2045,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 812, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 1998, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 822, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 819,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 1997, 555, 556,
	557, 558, 0, 1999, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	817, 594, 595, 596, 597, 598, 818, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 1996, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 0, 628, 810,
	0, 812, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 822, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 819, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 817, 594,
	595, 596, 597, 598, 818, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 2020, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 0, 0, 822,
	0, 0, 286, 287, 1193, 288, 289, 290, 291, 292,
	293, 0, 2026, 0, 294, 2016, 295, 2032, 0, 2039,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	2042, 2043, 0, 0, 303, 304, 0, 0, 1338, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1194, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 1176, 335, 337, 2030, 2029, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1161, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 0, 0, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 2028,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1195,
	374, 375, 376, 2037, 2038, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 0, 0, 0, 387,
	0, 388, 389, 390, 391, 392, 0, 0, 0, 473,
	1197, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 1196, 403,
	2023, 2024, 0, 2019, 0, 405, 406, 1198, 0, 1199,
	407, 408, 409, 1200, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	0, 1201, 421, 422, 1202, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1203, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1204,
	469, 457, 0, 0, 1205, 470, 471, 0, 0, 472,
	2031, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 0, 1206, 483, 1207,
	0, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 2013, 497, 498, 499,
	2014, 500, 501, 502, 0, 503, 0, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	2027, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1208, 538, 539, 540, 541, 542, 0,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 1209, 569,
	570, 571, 572, 573, 574, 575, 2025, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 2041, 583,
	584, 585, 586, 0, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 2033, 2034, 2035, 2036, 0, 611,
	0, 603, 604, 605, 0, 606, 0, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 0, 2017, 2040, 0, 626, 625, 627, 0, 0,
	628, 0, 0, 0, 0, 629, 630, 0, 631, 632,
	633, 812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 2007, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 819, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 817, 594,
	595, 596, 597, 598, 818, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	812, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 822,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 819, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 276, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 2356,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 2357, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 817, 594, 595,
	596, 597, 598, 818, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 2358, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 822, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 0, 628, 0, 1333, 2095, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 822, 634, 0,
	0, 0, 0, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 1338,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 3036, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1195, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1196,
	403, 657, 658, 0, 659, 0, 405, 406, 1198, 660,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 0, 0, 1205, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 3037, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1333, 1332, 0, 0, 0, 0, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 1338, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1194, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1195, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 1197, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 1196, 403, 657, 658, 0,
	659, 0, 405, 406, 1198, 660, 1199, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 1201, 421,
	422, 1202, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 0,
	0, 1205, 470, 471, 3948, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1206, 483, 1207, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 1209, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1333, 1332,
	0, 0, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 1338, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1194, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1195, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 1197, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1196, 403, 657, 658, 0, 659, 0, 405, 406,
	1198, 660, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 1201, 421, 422, 1202, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 0, 0, 1205, 470, 471,
	3552, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1206, 483, 1207, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1666, 0, 1333, 1332, 0, 0,
	0, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 1338,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 1665, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1195, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1196,
	403, 657, 658, 0, 659, 0, 405, 406, 1198, 660,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 0, 0, 1205, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 1664,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 1663, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1584, 0, 1333, 1332, 0, 0, 0, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 1338, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1194, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1195, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 1583, 655, 656, 473, 1197,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 1196, 403, 657,
	658, 0, 659, 0, 405, 406, 1198, 660, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	1201, 421, 422, 1202, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 0, 0, 1205, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1206, 483, 1207, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1543, 0, 1333, 1332, 0, 0, 0, 0, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 1193, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 1338, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1194, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1195, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 1545, 655, 656, 473, 1197, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 1196, 403, 657, 658, 0,
	659, 0, 405, 406, 1198, 660, 1199, 407, 408, 409,
	1200, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 1201, 421,
	422, 1202, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1203, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1204, 469, 457, 0,
	0, 1205, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1206, 483, 1207, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1208, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 1209, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1508, 0,
	1333, 1332, 0, 0, 0, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 1338, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1194, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1195, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 1507, 655, 656, 473, 1197, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 1196, 403, 657, 658, 0, 659, 0,
	405, 406, 1198, 660, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 1201, 421, 422, 1202,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 0, 0, 1205,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1206, 483, 1207, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1327, 0, 1333, 1332,
	0, 0, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 1193, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 1338, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1194, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1195, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 1326,
	655, 656, 473, 1197, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1196, 403, 657, 658, 0, 659, 0, 405, 406,
	1198, 660, 1199, 407, 408, 409, 1200, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 1201, 421, 422, 1202, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1203, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1204, 469, 457, 0, 0, 1205, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1206, 483, 1207, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1208, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 1209, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1333, 1332, 0, 0, 0, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 1193, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 1338, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1194, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1195, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 1197,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 1196, 403, 657,
	658, 0, 659, 0, 405, 406, 1198, 660, 1199, 407,
	408, 409, 1200, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	1201, 421, 422, 1202, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1203, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1204, 469,
	457, 0, 0, 1205, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1206, 483, 1207, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1208, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 1209, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 0, 628,
	1333, 2095, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 1193,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 1338, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1194, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 2092, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1195, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1197, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 1196, 403, 657, 658, 0, 659, 0,
	405, 406, 1198, 660, 1199, 407, 408, 409, 1200, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 1201, 421, 422, 1202,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1203,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1204, 469, 457, 0, 0, 1205,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1206, 483, 1207, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1208, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 1209, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 0, 628, 1333, 1332, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 1193, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 1338,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1194, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1195, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1197, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1196,
	403, 657, 658, 0, 659, 0, 405, 406, 1198, 660,
	1199, 407, 408, 409, 1200, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 1201, 421, 422, 1202, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1203, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1204, 469, 457, 0, 0, 1205, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1206, 483,
	1207, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1208, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 1209,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 1333, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 1193, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 1338, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1194, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1195,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	1197, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 1196, 403,
	657, 658, 0, 659, 0, 405, 406, 1198, 660, 1199,
	407, 408, 409, 1200, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 1201, 421, 422, 1202, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1203, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1204,
	469, 457, 0, 0, 1205, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1206, 483, 1207,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1208, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 1209, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 271, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 2874, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 2871, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 2878, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 3098,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 2877, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 3095, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 3097, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 3094, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 2876, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 3096, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 271, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 2874, 303, 304, 643, 0, 0, 2868, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 2871, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 2878, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 2877, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 2867, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 2876, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 2875, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 1743, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 1742, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 1741, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 1744, 547, 554, 555, 556, 557, 558, 0, 1740,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 1738, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 1739,
	625, 627, 684, 1483, 628, 271, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 1485, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 1243, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 0, 626, 625, 627, 684, 1480,
	628, 271, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 1482, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 1243, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 1387, 628, 271, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 1389, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	1243, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 717, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 716, 282, 283, 706, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 709, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 710, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 711, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 705, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 706, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 709, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 710, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 711, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 706, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 709, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 710, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 711, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 271, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 706, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 709, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 3959, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 711, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 271, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 276, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 1243,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 271, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 3500,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 0, 626, 625, 627, 684, 3043,
	628, 271, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 3042, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 2325, 628, 271, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 271, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 276, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 2264, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	2271, 628, 271, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 2270, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	276, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 2257, 628, 271, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 2259,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 276, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 271, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 2223, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	1243, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 1588, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 1587, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 1500, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 1493, 628, 271, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 1495, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 0, 626, 625, 627, 684, 1317,
	628, 271, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 1316, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 1307, 628, 271, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 1306, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 1304, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 1303, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 1299, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	1298, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 687, 628, 271, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 0, 626, 625, 627, 684, 262,
	628, 271, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	271, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 276, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 709, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 710, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 711, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 2365, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 276, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 271, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 2363, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 271, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 2361, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 276, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 271, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 2277, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 271, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 2071, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 276, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 271, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 2065, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 894, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 893, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 892, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 3098, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 4255, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 1351, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 1354, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 1352, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 777, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 776, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 775, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 1355, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 773, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 1351, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 1354,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 1352, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 777, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 776,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 775, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 1355, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 773,
	676, 677, 678, 0, 611, 0, 603, 1353, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 696, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	695, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 694, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 271, 3085, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 271, 4265,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 271, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 4547, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 271, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	4151, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 271, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 3914, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 0, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 271, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 2758, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 0, 628,
	271, 3085, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 3082, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 2189, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 776, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 775, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 773, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 2335, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 2323, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 2085, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 2052, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	767, 628, 271, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 763, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 768, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	777, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 776, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 775, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 1621, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 773, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 1594, 628, 271, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 1593,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 1578, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 1576, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 1571, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 1548, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 1546, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	1505, 628, 271, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 1488, 628, 271, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 1357, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 776, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 775, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 773, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 1322, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 1321, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 1313, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 1312, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 271, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 277, 279, 278, 280, 281, 282, 283, 1266,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 0, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 271, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 782, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 767, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	763, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	762, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 768, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 777, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 776,
	539, 540, 541, 542, 764, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 775, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 765, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 773,
	676, 677, 678, 0, 611, 0, 603, 769, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 756, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 757, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	719, 628, 271, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 713, 628, 271, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 691, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 271, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 271, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 3611, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 271, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 0,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	776, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 775, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	773, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	271, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 3538, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	3516, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 3513,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 271, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 3465, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 271, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 3463, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 271, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 3448, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 0, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 271, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 3053, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 271, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 757, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 271, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 2295, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 0,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 271, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 1284, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 0,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	271, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 1216, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 0, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	0, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 0, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 0, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 1790, 1791, 0, 1823, 1824,
	1825, 1834, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1821, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 1791, 0, 1823, 1824, 1825, 1834,
	1835, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1821, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 1816, 1817, 1818, 1846,
	0, 0, 0, 0, 0, 1798, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 1820, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 1838, 0, 0, 0, 0, 0, 0, 1807,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 1815, 1816, 1817, 1818, 0, 0, 0,
	0, 0, 1813, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 1791, 0, 1823, 1824,
	1825, 1834, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1821, 0,
	0, 1831, 0, 0, 1841, 1793, 0, 1839, 0, 0,
	0, 1820, 1822, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 1837, 0,
	1838, 1846, 0, 0, 0, 0, 1843, 1807, 1808, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 1829, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 1815, 1816, 1817, 1818, 0,
	0, 1832, 0, 0, 1843, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 1820, 1822, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 1838, 0, 0, 0, 0, 0, 0, 1807,
	1808, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 1832,
	0, 0, 1813, 0, 1804, 1805, 1811, 1833, 1810, 1806,
	0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800,
	0, 0, 0, 0, 4531, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 1805, 1811, 1833, 1810, 1806, 0, 1803,
	1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800, 0, 0,
	0, 1819, 4530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 1790, 1791, 0, 1823, 1824,
	1825, 1834, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1821, 0,
	0, 1832, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 1845, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1805, 1811, 1833, 1810, 1806,
	0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800,
	0, 0, 0, 0, 4341, 1815, 1816, 1817, 1818, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1821, 0, 0, 1831, 0, 0, 1841, 1793, 0, 0,
	0, 0, 0, 1820, 1822, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 1838, 1846, 0, 0, 0, 0, 0, 1807,
	1808, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 1829, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 1791, 0, 1823, 1824,
	1825, 1834, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1821, 0,
	0, 0, 0, 0, 0, 1793, 0, 1839, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 1815, 1816, 1817,
	1818, 1846, 0, 0, 0, 0, 1843, 1798, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 1820, 1822, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 1838, 0, 0, 0, 0, 0,
	0, 1807, 1808, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 1815, 1816, 1817, 1818, 0,
	0, 1832, 0, 0, 1813, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 1827,
	1821, 0, 0, 1831, 0, 0, 1841, 1793, 0, 1839,
	0, 0, 0, 1820, 1822, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	1837, 0, 1838, 1846, 0, 0, 0, 0, 1843, 1807,
	1808, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 1829, 0, 0,
	0, 1809, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 1804, 1805, 1811, 1833, 1810, 1806,
	0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800,
	0, 0, 0, 1819, 4174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 1815, 1816, 1817,
	1818, 0, 0, 1832, 0, 0, 1843, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 1820, 1822, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 1838, 0, 0, 0, 0, 0,
	0, 1807, 1808, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 1832, 0, 0, 1813, 0, 1804, 1805, 1811, 1833,
	1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797,
	1799, 1800, 0, 0, 0, 0, 4104, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1805, 1811, 1833, 1810, 1806,
	0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799, 1800,
	0, 0, 0, 1819, 4103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1790, 1791, 0,
	1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1821, 0, 0, 1832, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 1845, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1805, 1811, 1833,
	1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797,
	1799, 1800, 0, 0, 0, 0, 4102, 1815, 1816, 1817,
	1818, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1821, 0, 0, 1831, 0, 0, 1841, 1793,
	0, 0, 0, 0, 0, 1820, 1822, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 1838, 1846, 0, 0, 0, 0,
	0, 1807, 1808, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 1829,
	0, 0, 0, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1821, 0, 0, 0, 0, 0, 0, 1793, 0, 1839,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 1815,
	1816, 1817, 1818, 1846, 0, 0, 0, 0, 1843, 1798,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 1820, 1822, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 1838, 0, 0, 0,
	0, 0, 0, 1807, 1808, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 1815, 1816, 1817,
	1818, 0, 0, 1832, 0, 0, 1813, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 1827, 1821, 0, 0, 1831, 0, 0, 1841, 1793,
	0, 1839, 0, 0, 0, 1820, 1822, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 1837, 0, 1838, 1846, 0, 0, 0, 0,
	1843, 1807, 1808, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 1829,
	0, 0, 0, 1809, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 1804, 1805, 1811, 1833,
	1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797,
	1799, 1800, 0, 0, 0, 1819, 3759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 1815,
	1816, 1817, 1818, 0, 0, 1832, 0, 0, 1843, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 1820, 1822, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 1838, 0, 0, 0,
	0, 0, 0, 1807, 1808, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 1832, 0, 0, 1813, 0, 1804, 1805,
	1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 0, 0, 0, 0, 3261, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1805, 1811, 1833,
	1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797,
	1799, 1800, 0, 0, 0, 1819, 3260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1790,
	1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1821, 0, 0, 1832, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 1845, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 0, 0, 0, 0, 3259, 1815,
	1816, 1817, 1818, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 1791, 0, 1823, 1824, 1825, 1834, 1835, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 1821, 0, 0, 1831, 0, 0,
	1841, 1793, 0, 0, 0, 0, 0, 1820, 1822, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 1838, 1846, 0, 0,
	0, 0, 0, 1807, 1808, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 1829, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1821, 0, 0, 0, 0, 0, 0, 1793,
	0, 1839, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 1815, 1816, 1817, 1818, 1846, 0, 0, 0, 0,
	1843, 1798, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 1820,
	1822, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 1838, 0,
	0, 0, 0, 0, 0, 1807, 1808, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 1815,
	1816, 1817, 1818, 0, 0, 1832, 0, 0, 1813, 1798,
	4810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 1791, 0, 1823, 1824, 1825, 1834, 1835, 1836,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 1827, 1821, 0, 0, 1831, 0, 0,
	1841, 1793, 0, 1839, 0, 0, 0, 1820, 1822, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 1837, 0, 1838, 1846, 0, 0,
	0, 0, 1843, 1807, 1808, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 1829, 0, 0, 0, 1809, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 1804, 1805,
	1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 0, 0, 0, 1819, 3258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 1815, 1816, 1817, 1818, 0, 0, 1832, 0, 0,
	1843, 1798, 0, 3323, 0, 0, 0, 3322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4809, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 1820,
	1822, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 1838, 0,
	0, 0, 0, 0, 0, 1807, 1808, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 1832, 0, 0, 1813, 0,
	1804, 1805, 1811, 1833, 1810, 1806, 0, 1803, 1801, 1802,
	1794, 1795, 1796, 1797, 1799, 1800, 0, 0, 3223, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 1791,
	1814, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1821, 0, 0, 0, 0, 3194, 1832, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 1845, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3195, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 1805, 1811, 1833, 1810, 1806, 0, 1803, 1801, 1802,
	1794, 1795, 1796, 1797, 1799, 1800, 0, 0, 1815, 1816,
	1817, 1818, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 2731, 0, 0, 0, 0, 0, 0,
	1790, 1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1821, 0, 0, 1831, 2730, 0, 1841,
	1793, 0, 0, 0, 0, 0, 1820, 1822, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 1838, 1846, 0, 0, 0,
	0, 0, 1807, 1808, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	1829, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1821, 0, 0, 0, 0, 0, 0, 1793, 0,
	1839, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	1815, 1816, 1817, 1818, 1846, 0, 0, 0, 0, 1843,
	1798, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 1820, 1822,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 1838, 0, 0,
	0, 0, 0, 0, 1807, 1808, 0, 1814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 1815, 1816,
	1817, 1818, 0, 0, 1832, 0, 0, 1813, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 1827, 1821, 0, 0, 1831, 0, 0, 1841,
	1793, 0, 1839, 0, 0, 0, 1820, 1822, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 1837, 0, 1838, 1846, 0, 0, 0,
	0, 1843, 1807, 1808, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	1829, 0, 0, 0, 1809, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 1804, 1805, 1811,
	1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796,
	1797, 1799, 1800, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 1070,
	1815, 1816, 1817, 1818, 0, 0, 1832, 0, 0, 1843,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 1820, 1822,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 1838, 0, 0,
	0, 0, 0, 0, 1807, 1808, 0, 1814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 1832, 0, 0, 1813, 0, 1804,
	1805, 1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794,
	1795, 1796, 1797, 1799, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 1805, 1811,
	1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796,
	1797, 1799, 1800, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 1791, 1814,
	1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1821, 0, 0, 0, 0, 0, 1832, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 1845, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	3740, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1805, 1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794,
	1795, 1796, 1797, 1799, 1800, 0, 0, 1815, 1816, 1817,
	1818, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 3329, 0, 0, 0, 0, 0, 1790,
	1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1821, 0, 0, 1831, 3324, 0, 1841, 1793,
	0, 0, 0, 0, 0, 1820, 1822, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 1838, 1846, 0, 0, 0, 0,
	0, 1807, 1808, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 1829,
	0, 0, 0, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1821, 0, 0, 0, 0, 0, 0, 1793, 0, 1839,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 1815,
	1816, 1817, 1818, 1846, 0, 0, 0, 0, 1843, 1798,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 1820, 1822, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 1838, 0, 0, 0,
	0, 0, 0, 1807, 1808, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 1815, 1816, 1817,
	1818, 0, 0, 1832, 0, 0, 1813, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 1827, 1821, 0, 0, 1831, 3262, 0, 1841, 1793,
	0, 1839, 0, 0, 0, 1820, 1822, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 1837, 0, 1838, 1846, 0, 0, 0, 0,
	1843, 1807, 1808, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 1829,
	0, 0, 0, 1809, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 1804, 1805, 1811, 1833,
	1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797,
	1799, 1800, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 1815,
	1816, 1817, 1818, 0, 0, 1832, 0, 0, 1843, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 3289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 1820, 1822, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 1838, 0, 0, 0,
	0, 0, 0, 1807, 1808, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 1832, 0, 0, 1813, 0, 1804, 1805,
	1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1805, 1811, 1833,
	1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797,
	1799, 1800, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 1791, 1814, 1823,
	1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1821,
	0, 0, 0, 0, 0, 1832, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 1845, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1805,
	1811, 1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795,
	1796, 1797, 1799, 1800, 0, 0, 1815, 1816, 1817, 1818,
	0, 0, 0, 0, 0, 0, 1798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1821, 0, 0, 1831, 0, 0, 1841, 1793, 0,
	0, 0, 0, 0, 1820, 1822, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 1838, 1846, 0, 0, 0, 0, 0,
	1807, 1808, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 1829, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	1823, 1824, 1825, 1834, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1821, 0, 0, 0, 0, 0, 0, 1793, 1839, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 1815, 1816,
	1817, 1818, 0, 1846, 0, 0, 0, 1843, 1798, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 1820, 1822, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 1838, 0, 0, 0, 0,
	0, 0, 1807, 1808, 0, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 1815, 1816, 1817,
	1818, 0, 1832, 0, 0, 1813, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 1841, 0,
	1839, 0, 0, 0, 0, 1820, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 1837, 0, 1838, 0, 0, 0, 0, 1843,
	0, 1807, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2310, 1829,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1804, 1805, 1811, 1833, 1810,
	1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797, 1799,
	1800, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 1804, 1805, 1811,
	1833, 1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796,
	1797, 1799, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 955, 0, 1004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 978, 0,
	961, 960, 0, 0, 0, 0, 1804, 1805, 1811, 1833,
	1810, 1806, 0, 1803, 1801, 1802, 1794, 1795, 1796, 1797,
	1799, 1800, 980, 0, 0, 0, 0, 0, 962, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 1013, 0,
	0, 0, 0, 0, 0, 0, 0, 975, 976, 0,
	0, 0, 0, 0, 0, 0, 993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1005, 967, 0, 0, 0, 0,
	0, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 969, 0, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1003, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 971, 0,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 972, 973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 981, 979, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1010, 1001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	966, 0, 0, 1012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 964, 0, 0, 0,
	997, 998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1007, 995, 0,
	0, 0, 0, 0, 0, 0, 1011, 991, 0, 0,
	984, 982, 0, 987, 0, 0, 0, 0, 0, 988,
	0, 0, 957, 0, 1008, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 999, 0,
	989, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1009, 0, 0,
	0, 0, 0, 0, 0, 992, 0, 0, 0, 0,
	0, 0, 0, 0, 970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 996,
}

var sqlPact = [...]int{
	285, -1000, -1000, -1000, -1000, 213, -1000, -1000, 212, 211,
	209, 207, 206, 202, 201, 199, 197, 195, 194, -1000,
	-1000, -1000, -1000, -1000, -1000, 193, -1000, -1000, 191, -1000,
	190, 188, 186, -1000, -1000, 185, -1000, 183, -1000, -1000,
	-1000, -1000, 180, 179, 178, 93977, 93421, 94526, 2333, 117210,
	101142, 2062, 83455, 116654, 82899, 116098, 2067, 9283, 115542, 2770,
	177, -1000, 114986, 173, 172, 167, -1000, 114430, -1000, 2187,
	-1000, 166, -1000, 6938, 70047, 165, 163, 162, 2332, 160,
	-1000, 159, 158, -1000, -1000, 157, -1000, 10834, 1519, -1000,
	155, 154, -1000, 452, 98925, 152, 150, 2414, 141, 138,
	68391, 137, 135, 2164, 2930, -1000, -1000, 2134, -1000, -1000,
	134, 133, 132, 131, 130, 125, 124, 123, 120, 119,
	116, 113, 112, -1000, 109, 103, 102, 100, 98, -1000,
	97, 96, 93, -1000, 92, -1000, 90, 88, 87, 85,
	83, 81, 79, 78, 77, 76, 75, 72, 70, 63,
	132044, -1000, -1000, 62, 1934, 1695, 1693, 1692, 1691, 1685,
	1011, 61, 58, 50, 49, 48, 43, 42, 40, 39,
	38, 37, 36, 35, 34, 28, 27, 26, 21, 174,
	18, 17, 16, 11, 10, 9, 8, 2658, -1000, 1622,
	884, 32534, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	124896, 117759, 4, -117, 2, -1000, 3353, 1046, 56623, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 295, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 517, 1877,
	766, -1000, -1000, -1000, 113881, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2324, -49, -1000, 2011, -1000, -1000, -1000,
	-1000, -1000, 764, -1000, 2323, 168, 2249, -1000, -1000, -1000,
	3394, 2476, 3827, 3826, 3825, 3820, 3818, 124347, 1859, 3817,
	2557, 3815, 3814, 3812, 3811, 3810, 3809, 3808, -1000, 92865,
	1061, 92309, 91753, 3426, 113332, 91197, 112776, 76794, 48638, 870,
	3393, -1000, -1000, -1000, -1000, -1000, -1000, 117759, -1000, 1060,
	-1000, -1000, 3807, 2142, 763, 100586, -1000, -1000, 112220, 1722,
	-1000, -1000, -1000, 953, 1265, 34247, 34247, 34247, 292, -1000,
	-1000, -1000, -1000, -1000, -1000, 3806, 3805, 3804, 3803, 3802,
	-1000, -1000, 82343, 25494, 81787, 81231, 111664, 24926, 90641, 90085,
	3801, 3800, 3799, 111108, 76226, 3546, 3544, 1058, 2009, 1466,
	-1000, -1000, -1000, -1000, -1000, -1000, -15, 72265, 3585, 117759,
	-1000, 290, -1000, -1000, -1000, -1000, -1000, -1000, 48067, 814,
	47496, 682, 46925, 442, -1000, -1000, -1000, -1000, 75658, -1000,
	110552, 2469, 3798, 3796, 1162, 3795, 3284, 1838, 3793, 1865,
	1249, 3792, 3791, 3790, 3788, 3787, 3785, 3784, 1529, 109996,
	2991, 1559, 109440, 1717, 75090, 1056, 89529, 94526, 2670, 108884,
	1438, 1437, -1000, -1000, -1000, -1000, 3102, 2926, 2908, 1072,
	-1000, -1000, -1000, -1000, 60002, 6616, 5155, -1000, -1000, 7983,
	108328, 62832, 94526, 94526, -1000, -1000, -1000, -1000, -1000, 46354,
	448, 45783, 865, -1000, -1000, 60568, 2938, -1000, -1000, -1000,
	-1000, 45212, 418, 44641, 782, 117759, -1000, 2989, 2060, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2421, 1672, 3609,
	2761, 74522, 2114, 1434, 3359, 3094, 3093, 1546, 1998, 3092,
	3783, 2615, 3084, 3069, 3061, 3057, 3053, 1557, 2614, 357,
	2629, 31963, 2973, 1718, 44070, 1602, 1542, 3051, 3048, 3622,
	1991, 2071, 2113, 80675, 3782, 3774, 3324, 3047, 3044, 2810,
	3024, -1000, 2934, 1493, -1000, -1000, -1000, -1000, -1000, 1480,
	-1000, -1000, -1000, -1000, -1000, 85102, -1000, -1000, 1349, -1000,
	-1000, 1349, -1000, -1000, -1000, -1000, -1000, 1326, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1622, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2486, -1000, 2100, -1000, -1000, 2510, 3333, 3333, 3333,
	3391, 471, 445, -1000, 174, -1000, -1000, 131407, -1000, -1000,
	49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209, 2126, -1000,
	762, -1000, -1000, 801, -1000, 760, 695, 637, -1000, -1000,
	-1000, -1000, -1000, -1000, 754, -1000, -1000, -1000, -1000, -1000,
	-1000, 3585, -1000, 28404, -1000, -1000, -1000, 549, 750, 49209,
	-1000, -1000, 3642, 3640, 1023, -1000, 280, 981, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2983, 749, 748, -1000, 747, 745, 739, 737, 732, -1000,
	730, -1000, 728, 727, 725, 723, 720, 718, 715, 711,
	-1000, 2023, -1000, -1000, -1000, -1000, -1000, -1000, 687, 686,
	686, 686, -1000, 1042, -1000, -1000, -1000, 317, 673, 289,
	667, 662, 661, -1000, 707, 705, 704, 703, 702, 701,
	700, 699, 698, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1041, -1000, -1000, -1000, -1000, -17, 117759, -1000, 517, -17,
	-1000, -1000, 697, -1000, 36560, 36560, 36560, -1000, -1000, 2322,
	49209, -1000, 2569, -1000, -10, -10, 842, 58300, -1000, 55485,
	842, 305, 810, 63944, -1000, 2932, -1000, -1000, 696, 277,
	-1000, -1000, -1000, -1000, 26060, 2928, 117759, 117759, 117759, 94526,
	94526, 94526, 3771, 3216, 49209, -1000, -1000, 69489, 117759, 95075,
	-1000, -1000, 3527, 70601, 68940, 117759, 2982, 107772, 3767, -1000,
	-1000, -1000, -1000, -1000, 3196, 3765, 3764, 3763, -1000, 117759,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 236, 3192, -1000,
	-1000, 98369, 236, 3191, -1000, 236, 3189, -1000, 97820, -1000,
	-1000, 2246, 3188, -1000, -1000, 243, 3186, -1000, -1000, -1000,
	241, 3185, -1000, -1000, 268, -68, 3184, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 131407,
	-1000, -1000, -1000, 107216, -1000, 3316, -1000, 117759, -1000, 49209,
	-1000, -1000, 3525, 1636, 77916, 3461, -1000, -1000, -27, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2522, 2540, 1140, 2352,
	-1000, 3229, 1371, 34247, 3271, -1000, -1000, -1000, -1000, -1000,
	263, 26060, -1000, -1000, -1000, -1000, -1000, -1000, 3248, 3183,
	1514, -1000, 2351, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1915, 3181, -1000, 2165, 3180, 1812, -1000, -1000, 2046,
	-1000, 3306, -1000, -1000, 2202, 3179, -9, -1000, -1000, 2195,
	-1000, -1000, -1000, -1000, 1938, -1000, 1324, 3173, -1000, 2760,
	2760, 88973, 3148, 62266, 60568, 72265, -22, -1000, -1000, -1000,
	-1000, -250, -1000, 24354, 131407, -1000, -1000, -1000, -1000, 1764,
	131407, 898, -1000, -1000, 3168, -1000, 131407, 895, -1000, -1000,
	3165, -1000, 2979, -1000, -1000, 2424, 2422, -1000, -1000, 3762,
	-1000, -1000, 3761, -1000, 3754, 3753, 3752, -1000, 1594, 1996,
	3751, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 88424,
	2321, -1000, -1000, 87312, 2978, -1000, 2419, 3450, -1000, 87868,
	1055, -1000, 1007, 2418, -1000, 97271, 1004, 2416, -1000, 3749,
	3425, 2717, 1007, 2413, -1000, -1000, -1000, -1000, -1000, 1044,
	-1000, 66169, -1000, 66169, -1000, 1624, -1000, 123798, -10, 94526,
	3585, -1000, -37, -1000, -1000, -1000, 1046, -1000, 59431, -1000,
	59431, 100030, 77360, 987, 758, 67835, 131225, -1000, 1018, -1000,
	-1000, 131407, -1000, -1000, -1000, -135, 2758, -1000, 77360, 61700,
	131407, -1000, -1000, -1000, -1000, 131407, -1000, -1000, -1000, 77360,
	87312, -1000, 106660, 86763, -1000, -1000, 1491, 2588, -1000, -1000,
	-1000, 77360, 1325, 77360, 77360, 77360, -1000, 106104, -1000, -1000,
	2091, 1464, 3308, 2073, 94526, -1000, 1850, -1000, -1000, -1000,
	3338, 3143, 117759, -1000, -1000, 2975, -1000, 71716, 96722, -1000,
	96173, -1000, 95624, -1000, 94526, -1000, 94526, -1000, 3748, 3747,
	3745, -1000, -1000, 3744, -1000, 3742, 3331, -1000, 721, 43499,
	131407, 3326, -1000, 3741, 2026, 2973, 131407, -1000, 3137, 1703,
	1701, 117759, -1000, -1000, 117759, -1000, 117759, -1000, -1000, -1000,
	1566, -1000, -1000, 2516, -1000, -1000, -1000, -1000, 94526, 94526,
	94526, 94526, 1473, -1000, 42928, -1000, -1000, 3040, 3740, 1742,
	-1000, 1834, -1000, 2924, 3340, -1000, 1471, 1705, -1000, -1000,
	245, -1000, -1000, -27, -1000, 123249, -1000, 2510, -1000, 117759,
	-1000, 2515, 2959, 2972, 1688, 2281, 2622, -1000, 42357, 2584,
	52635, 2350, 174, -1000, -1000, 174, 174, 33676, -1000, -1000,
	70601, 70601, 26060, 1383, 49209, 49209, 49209, 49209, 49209, 49209,
	49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209,
	49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209,
	49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209, 49209,
	2430, 49209, 1277, 49209, 49209, 49209, 49209, 2222, -1000, -1000,
	2006, 568, 2064, 695, -1000, -1000, -1000, 3571, 3571, 3571,
	532, 532, 532, 9185, 9185, 608, 3738, 801, -1000, 49209,
	-1000, 104, 58856, 49209, 26628, -1000, 445, 11674, 2454, -1000,
	437, 27228, -1000, -1000, -1000, 28404, 637, 41757, 49209, 1014,
	131407, -1000, -1000, 1549, 3595, 23782, 2871, 2803, 693, 844,
	832, 31363, 30763, 30163, 29563, 751, 633, 49209, 49209, 49209,
	49209, 49209, 49209, 49209, 49209, -1000, -1000, 3615, -1000, 3595,
	-1000, -1000, -1000, -1000, 3595, 1377, 1367, 3595, -1000, 3595,
	3595, 8634, 8634, 41186, 40615, 40044, 53206, 39473, 49209, 28992,
	38902, 38331, -1000, 117759, -17, 3523, 49209, 151, -1000, 129609,
	-1000, 151, 151, 692, -53, 131407, 2601, 2601, 57182, 2484,
	2133, 2133, 2133, -1000, 842, 19177, 842, 104450, 2163, 842,
	842, 258, 311, 436, 54919, 2569, 104450, 790, 691, 1,
	0, -2, -1000, -1000, -3, -4, -1000, -1000, 94526, 690,
	26628, 26060, 252, 2049, -59, 2648, 2647, -1000, 2640, 2630,
	-1000, 2623, -1000, 1809, -65, 1273, 94526, 117759, 1448, 3735,
	-55, -1000, 5530, -67, -1000, 1094, 240, 3595, -1000, -1000,
	-1000, -1000, -1000, 3734, 3732, -1000, 1040, 689, 688, 660,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 687, 686,
	686, 686, -1000, 317, 673, 289, 667, 662, 661, -1000,
	-1000, -1000, -1000, -1000, 2922, 94526, 117759, 1445, 3727, -250,
	95075, -52, -1000, -1000, 117759, -1000, -1000, -1000, 3726, -1000,
	94526, -1000, -1000, 94526, 236, 3163, -1000, 94526, -1000, 94526,
	234, 3121, -1000, -1000, 117759, -1000, 94526, 94526, -1000, 117759,
	117759, 117759, 77360, 77360, 233, -1000, 94526, 889, -70, 1179,
	-27, -1000, -1000, -1000, -1000, -1000, 1349, -1000, 1723, -1000,
	-1000, -1000, -1000, -1000, -1000, 1523, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1023, -1000, -1000, -1000, -1000, -1000,
	-1000, 3599, 3591, -18, -1000, -1000, 26060, -1000, -30, 1635,
	1876, 1270, -1000, 80119, 2346, 3314, 3725, 2705, 3291, 1613,
	-1000, 1565, -1000, 3409, 85102, 3487, 3504, 1360, -1000, 2921,
	-1000, -1000, 951, 1735, 1750, 1269, 1268, 85102, 2165, -1000,
	70601, -1000, 2662, 3388, 1397, 1417, 1397, 1397, 1446, -1000,
	85102, 1749, 1259, 1258, 1254, -1000, -1000, 1928, 1919, -1000,
	-1000, 105555, -1000, 1253, 1252, 3540, 2486, 2171, 829, 1918,
	-1000, -32, 3484, 3496, 1332, -1000, 2916, 1248, -1000, -1000,
	-1000, 3387, 94526, 26060, 1590, 1583, 1563, 1744, 1247, -19,
	-1000, 3480, 1243, 1242, -1000, 1051, 2511, 3247, -1000, 77360,
	1051, 1051, 1811, 3119, 2737, 1664, -1000, 2757, 906, 2756,
	-1000, -1000, -1000, 906, -22, 72265, 117759, 231, -1000, 104,
	49209, 49209, 104, 49209, 104, 3437, 3113, 3108, -1000, -1000,
	-1000, -1000, -1000, 3724, 1975, 2552, -1000, -1000, 659, 2412,
	2911, 117759, 2663, -23, 94526, -1000, 71167, 3106, 72822, 2165,
	2411, -1000, -1000, 86207, -1000, 3105, 517, 2410, -1000, 714,
	3722, 3104, -1000, 122700, -1000, 3316, 1340, 3101, 1101, 680,
	3522, -1000, 680, 66723, -1000, 117759, -1000, -10, 1107, 79021,
	-72, -73, 434, -1000, 105006, 117759, 1099, 79570, 117759, 3260,
	1983, 1980, 1002, 60568, -1000, 60568, -75, -135, 2755, 1555,
	987, 987, 906, -1000, 906, -1000, 94526, 2971, -1000, -1000,
	77360, 987, 987, 987, -1000, -1000, -1000, -1000, 3719, 3718,
	3708, 3705, -1000, -1000, 1006, 94526, 117759, 94526, -1000, -1000,
	1645, -1000, 229, -1000, 117759, -1000, 117759, 117759, 94526, -1000,
	1006, 117759, 1006, 117759, 1006, 117759, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 104, -1000, -1000, 131407, -1000, 49209, -1000,
	-1000, 1560, 3704, 1637, -1000, 2969, -1000, 2961, -1000, 33,
	-1000, -1000, 1853, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3703, 131407, -1000, 2098, -1000, -1000, -1000, -1000, 94526, 94526,
	94526, 94526, 117759, 3246, -1000, 117759, 3244, 94526, -1000, -1000,
	85102, -1000, 2515, 2959, -1000, -1000, -1000, -1000, -1000, -1000,
	1401, 2256, -1000, 2592, -1000, 1595, -1000, -1000, -1000, 131407,
	53777, -1000, -1000, 131407, 1793, -1000, 52064, 51493, -1000, -1000,
	1732, 94526, 2666, -1000, 2666, -202, -1000, 129427, 2587, 94526,
	-1000, -1000, -1000, -1000, -1000, 950, 997, 997, 1266, 1266,
	1266, 1266, 3438, 621, 5237, 6098, 5983, 5983, 5052, 5052,
	5052, 5052, 5052, 5983, 512, 532, 532, 512, 512, 512,
	512, 512, 532, 532, 532, 5983, 5983, 5983, 532, 9185,
	131516, 13179, 49209, 49209, 1241, 2005, 568, 12504, 49209, 8475,
	8475, 8475, 8475, -1000, 2317, -1000, -1000, -1000, -1000, 2905,
	658, 53206, 53206, -1000, -1000, -1000, -1000, 27816, 49209, -1000,
	-1000, -1000, -1000, 37731, -1000, -1000, 128710, -318, 432, -1000,
	225, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 431, -193, -40, -1000, 49209, 49209,
	49209, 430, -1000, 223, 49209, 117759, -1000, 17818, 789, -125,
	-1000, -82, 1455, -1000, 49209, -1000, -1000, 1239, -1000, 1238,
	1231, 1229, -1000, 657, 429, -1000, 221, -1000, 2139, 654,
	650, 49209, -1000, -1000, -1000, -1000, -1000, 128528, -1000, -1000,
	128098, -1000, -1000, 127916, -1000, -1000, 127808, -1000, -1000, -1000,
	-1000, -1000, 130798, 17373, 16938, 16552, 10574, 15601, 14877, -83,
	426, -84, 422, 938, 927, 421, 419, 416, -85, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -97, 412, -1000, 2898, -193, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 407, -1000, 406, -1000, 130616, -193,
	403, 7207, -1000, 53206, 53206, 53206, 53206, -1000, 400, -1000,
	129000, -1000, 130508, 37160, 37160, 37160, 399, 130326, 49209, -193,
	-99, -1000, -104, -1000, -1000, 535, -105, 1032, 36560, 56064,
	26060, -1000, 1032, 1032, 49209, -1000, 49209, 2611, -1000, -1000,
	-1000, -1000, 2599, 2132, 2601, 57182, -1000, -1000, -1000, -1000,
	104450, -1000, 3585, 2958, -1000, 104450, -1000, -1000, 117759, 517,
	-1000, 104450, 104450, 26060, 842, -1000, 842, 104450, 709, -1000,
	-1000, -1000, -1000, -1000, 396, 64503, -40, 220, 26060, 1007,
	-1000, -1000, 2703, 2703, 2703, 2703, 2703, -1000, -1000, 117759,
	1227, -24, -107, 2745, -1000, 3550, -1000, 2037, -1000, 70601,
	-1000, 797, 1103, 26060, -1000, -1000, -1000, 649, -1000, 3595,
	3595, -1000, 3595, 117759, 2897, 143, 2738, -1000, 140, 72822,
	3700, -1000, -1000, 236, -1000, 94526, 236, 236, -1000, 94526,
	94526, 2246, -1000, 243, -1000, 241, -1000, -1000, -68, -1000,
	1017, 34247, -1000, 1349, -1000, -1000, 1593, -1000, 1987, -1000,
	1328, -1000, -1000, -1000, -1000, 34247, -1000, 2277, 117759, 117759,
	94526, -1000, 117759, -1000, 2121, 72822, -1000, 2397, 122151, 2392,
	70601, 117759, -1000, -1000, 648, 972, 2583, 2581, 1097, 117759,
	117759, 2580, 121602, 121053, -1000, 3699, 117759, 2048, 49209, 3384,
	2233, 2170, 104, 104, -1000, 104, 104, 104, -1000, 647,
	1352, 94526, 94526, 117759, 72822, 94526, 1797, -1000, -1000, -1000,
	-1000, -1000, 85651, -1000, -1000, 3611, 3608, -1000, 1397, -1000,
	-1000, -1000, 1397, 2165, 1772, 117759, 72822, 94526, 72822, 120504,
	119955, -1000, -1000, 1733, 117759, -1000, -1000, -1000, -1000, 1481,
	-1000, 829, 2057, 104, 104, -1000, 104, 104, 104, 645,
	26060, 1939, -1000, 2980, 117759, 3639, 119406, 3634, 117759, 117759,
	117759, 72822, 3334, 117759, 117759, 72822, -1000, 118857, 2511, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	73954, 1106, 117759, 1324, -1000, -1000, 1727, 1225, 1224, 85102,
	2087, 1721, 1846, 117759, 60568, 1000, 60568, 2709, -1000, -1000,
	23210, -1000, 131407, 131407, -1000, 131407, -1000, 71167, 77360, 117759,
	-1000, 1048, 117759, 79570, 970, 3100, 65615, -250, 987, 77360,
	94526, -23, 2663, 117759, -1000, -1000, -1000, -1000, -1000, 2165,
	3098, 517, 2394, -1000, 77360, 3520, 3095, 643, 3698, 3692,
	-1000, 94526, 2312, 2393, -1000, -1000, 118308, 3146, 829, 117759,
	1032, 57182, 1940, -1000, 63388, 1074, 117759, 1821, 115, -1000,
	-1000, -1000, 15, 117759, -1000, 808, -1000, -1000, 1107, 1107,
	987, -258, 642, -1000, 890, 886, 61134, 77360, -118, -1000,
	-1000, -1000, -1000, 2392, 94526, 117759, 1312, 2713, 117759, -124,
	-1000, 218, 638, 879, 878, -1000, 3402, -1000, -135, -1000,
	1002, 60568, 2896, 2894, -1000, -1000, 1016, -1000, 1447, 987,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -11, 1816, 117759, -250, -250, -46, -24, -1000, 1006,
	-1000, 1006, -1000, 1006, -1000, 131407, -1000, -1000, -1000, 1630,
	1629, 117759, -1000, -1000, 117759, -1000, 26060, 117759, 94526, 26060,
	94526, 2954, 2949, -1000, -1000, -1000, 117759, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1132, -1000, 1793, 2255, -1000, 637,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2498,
	-1000, -26, 33676, 905, -1000, -1000, 94526, -12, 49209, 49209,
	11831, 10917, 49209, 53206, 53206, -1000, 49209, 6672, -1000, -1000,
	-1000, -1000, -1000, 2878, 635, 49209, 70601, 6992, 5258, -1000,
	395, 13223, 512, -1000, 49209, -1000, 475, -1000, 393, 35989,
	-1000, 129717, -42, -126, -1000, 19762, -193, -129, -1000, -1000,
	795, -1000, 3068, -1000, 49209, 129899, 2465, 1890, 1836, 1666,
	3595, 3633, 22638, -1000, 67279, 1033, 2169, 127626, -1000, -1000,
	-1000, -1000, 70601, 70601, 49209, 49209, -1000, 49209, 49209, 49209,
	-1000, -1000, -1000, 3595, 920, -1000, -1000, -1000, 920, -1000,
	-1000, 1397, -1000, 1397, -1000, 49209, -1000, -1000, 2870, 49209,
	-1000, 70601, 70601, 53206, 53206, 53206, 53206, 53206, 53206, 53206,
	53206, 53206, 53206, 53206, 53206, 53206, 53206, 53206, 53206, 53206,
	53206, 53206, 53206, 2543, 53206, 3566, 3566, 3566, 963, -1000,
	2944, 2870, 49209, 49209, 70601, 391, 389, 386, -1000, 49209,
	-193, -1000, -1000, 6131, 630, -1000, 2483, -1000, 2802, -1000,
	49209, -1000, -127, -1000, 2569, -1000, -1000, 2802, 2802, -134,
	131407, 57182, 57182, -1000, 625, 49209, 2598, -1000, -1000, 786,
	-316, -1000, 873, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	517, -1000, -1000, -1000, 217, 104450, 104450, 785, -1000, -140,
	-1000, -1000, -141, -1000, 3519, 380, 26060, -1000, 1032, 2667,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -250, 117759, 117759,
	1720, 2224, 3632, -1000, 3604, 793, 780, 216, 3595, 378,
	377, 376, -250, 117759, 117759, 1715, 117759, -1000, -1000, -1000,
	236, -1000, -1000, -1000, 234, -1000, -1000, -1000, -1000, 2637,
	-1000, -27, -1000, -1000, -1000, 49209, -1000, -1000, 3312, 1222,
	1220, -1000, -1000, -1000, 2892, -1000, 3075, -1000, 2386, -1000,
	1082, -1000, 1588, -1000, 49209, 624, 2710, 622, 620, 3691,
	2052, 3690, 1098, 3066, 2246, 3065, 2246, -1000, -1000, -1000,
	956, -1000, 131407, 2233, -1000, 618, 609, -1000, -30, 1634,
	1848, 1219, 1015, -1000, -1000, -1000, -1000, 49209, 49209, 103901,
	-1000, 494, 3306, -13, -1000, -1000, -1000, 1702, 1218, 1217,
	-1000, -1000, -1000, -1000, 2165, 1698, 1215, 1213, -1000, -1000,
	-1000, -1000, -1000, 2382, -1000, -1000, 3064, 1013, -1000, 3012,
	3010, 915, 117759, -1000, 1012, -1000, -1000, -1000, -1000, 49209,
	-1000, -32, 1209, 3490, 2381, 94526, -1000, 2246, 3060, 1205,
	-1000, 1204, -1000, -1000, -1000, 3477, 3475, 1214, -1000, -1000,
	-1000, -1000, -1000, 73388, -1000, -1000, 1051, 117759, 72822, 94526,
	1730, -1000, -1000, 84004, 84553, 117759, 2737, -250, 906, -1000,
	2631, 906, 1000, 2867, -1000, 2634, -1000, 1009, 94526, 3688,
	371, -142, -33, 70601, 3518, -1000, 2294, 640, 94526, 918,
	-1000, 3585, -1000, -1000, -1000, 1008, -1000, 3444, 94526, 3517,
	3056, 1007, 104, 94526, 3574, -1000, -1000, 3514, 94526, 3055,
	2305, 2378, 2521, 829, 78472, 1007, 2167, -66, -1000, 1821,
	35389, 3302, -143, -1000, -1000, -1000, 1032, 66723, 57182, 49209,
	3687, -148, -1000, -1000, -1000, -1000, -1000, 101698, 101698, 77360,
	77360, 77360, 987, 117759, 117759, 79570, -1000, -1000, 607, 117759,
	117759, 596, -1000, 117759, 117759, 3685, 77360, 77360, 77360, -35,
	595, -1000, 871, 867, 863, -1000, -1000, -1000, -1000, -1000,
	-1000, 861, 1002, -1000, -135, 60568, 104, -1000, 2209, 94526,
	-1000, 22066, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1006,
	-250, -1000, -1000, 2094, 2349, 2094, 1839, 1828, -1000, -1000,
	2254, -1000, -1000, -1000, -1000, 2633, 3323, 26060, 3419, 8475,
	49209, 49209, 6360, 5150, 610, 8475, 49209, 49209, 70601, 10287,
	-149, 49209, 49209, -1000, 49209, 775, 131407, -1000, 3630, 49209,
	370, 369, -1000, -1000, -1000, 3593, -1000, -1000, -1000, 131407,
	49209, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 367, -1000,
	169, -1000, -1000, -1000, 125445, -1000, 49209, 361, 3382, -1000,
	360, 351, 12438, 9945, 127196, 127014, 126906, 350, -1000, -1000,
	348, 346, 131407, 2944, 131407, -1000, -1000, 947, 947, 1385,
	1385, 1385, 1385, 3566, 548, 564, 501, 1957, 1957, 1957,
	1323, 963, 963, 1957, 1957, 1957, 963, 2865, 2544, 594,
	7408, -1000, -1000, 131407, 131407, 344, -1000, -1000, -1000, -193,
	342, 6131, -1000, 2791, 3381, 131407, -1000, 57182, 2791, 2791,
	-1000, -1000, 2132, 117759, 131407, 57182, -1000, 2958, -1000, 20345,
	-1000, 26060, -1000, -1000, -1000, -1000, 3585, -1000, 64503, -1000,
	590, -1000, 105, -1000, 2667, -1000, 854, -1000, -1000, 77360,
	77360, -250, -200, 117759, -1000, -1000, 774, 3684, 792, 26060,
	340, -1000, -1000, -1000, -250, -250, 117759, -250, -1000, -1000,
	-1000, 3259, 131407, 117759, 117759, 1581, 103352, 117759, 3052, -1000,
	2273, -1000, 1097, 126724, 57741, -1000, 57741, 117759, -1000, -1000,
	-1000, -1000, 1977, 1536, 3678, 1152, -1000, 3347, 117759, -1000,
	117759, -1000, -1000, -1000, 117759, 117759, 94526, 117759, -1000, 72822,
	3021, -151, 131407, -36, -1000, 853, -1000, 1399, -1000, 21494,
	117759, 72822, 94526, 117759, 72822, 94526, 3038, 117759, 2125, -1000,
	-1000, 3008, -1000, 3020, -159, 26060, -1000, 3626, 3623, 3036,
	3356, -1000, 117759, 3621, 117759, 94526, 3254, -1000, -1000, -1000,
	-1000, -1000, -1000, 1682, 1203, 1201, 2302, -38, 2293, 2223,
	-46, 2087, 1000, -48, 589, -1000, 849, -1000, -1000, 848,
	-1000, 1000, -1000, 77360, 60568, 3675, 517, -1000, 2700, -1000,
	99474, 2286, 104, -1000, 3672, 102254, 588, -1000, 2193, -1000,
	772, -1000, 2452, 72822, 2165, 104, 94526, -1000, -1000, 517,
	339, -54, -1000, 3054, 1086, 26060, 94526, 3032, 2532, 829,
	78472, -1000, 1340, 2622, -1000, -56, -1000, 477, 104, 2167,
	-1000, -66, 131407, -1000, 841, -1000, -161, -1000, -1000, 336,
	-1000, 3253, 3252, -1000, 2811, 57741, 586, 583, 117759, 3251,
	-1000, -1000, -167, -1000, -1000, 3701, 3701, 77360, 60568, 77360,
	77360, -1000, 1002, 906, -1000, 2390, -1000, -1000, -1000, -1000,
	-1000, 26060, 1704, -1000, 581, 580, -1000, -1000, -1000, -1000,
	3323, 8475, 8475, 49209, 49209, 49209, 8475, 10287, -169, -1000,
	8475, 8475, -193, -1000, -1000, 129717, -1000, -1000, -1000, 131407,
	-1000, 20922, 2105, -1000, 126294, -1000, 33676, -1000, -1000, 49209,
	49209, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53206,
	2864, 578, 70601, -1000, -1000, 330, 1005, 49209, 50922, 2569,
	1005, 1005, -1000, -170, -1000, -1000, -1000, 3585, 105, -1000,
	-1000, 3671, 26060, -1000, 77360, -1000, -1000, 3669, -177, 623,
	-1000, 3668, -1000, -1000, 106, -1000, -1000, -1000, 2735, 3513,
	-1000, 1913, -1000, 117759, -1000, 117759, -1000, 26060, 117759, 2820,
	1290, -1000, 972, 2579, 576, 53206, 1120, 94526, 930, 2773,
	2772, -1000, 3537, 3380, 2787, -175, -1000, 117759, 49209, 117759,
	-182, -187, 2361, -1000, -1000, 1117, 1281, 49209, 1115, -1000,
	-1000, -1000, 70601, 574, 2246, 2246, -188, -195, -1000, -1000,
	-1000, 49209, 1199, 117759, 34818, -1000, 3667, 3306, -1000, -1000,
	-1000, -1000, -1000, -1000, 117759, -1000, 117759, -1000, 49209, 1198,
	-1000, -1000, -1000, 3620, 2246, 26060, 2246, -1000, 2246, 3356,
	1149, 117759, 72822, 94526, 1652, 1652, 2943, -1000, -1000, -1000,
	2680, 2680, 77360, 60568, -1000, -68, 1000, -1000, 3512, 2695,
	3663, -1000, -1000, -1000, -1000, 2567, -1000, -1000, 117759, 2565,
	989, -1000, -201, -1000, 840, 836, 79570, 970, 955, -1000,
	-94, 573, -1000, 835, -1000, -1000, -1000, -1000, 517, 3511,
	-1000, 3587, 572, 571, 117759, 2290, 569, 26060, 3293, 829,
	78472, -1000, 3146, 1821, -1000, 2369, 117759, 3290, -1000, 2622,
	568, -1000, 987, 567, 566, 2671, 2671, -203, 57741, 57741,
	-204, 565, 987, -1000, -206, -1000, -1000, -1000, -1000, -1000,
	-1000, -102, -1000, 903, 900, -1000, -1000, 94526, 94526, 49209,
	49209, -1000, 8475, 8475, 8475, -1000, 327, -1000, -1000, 2167,
	3375, -1000, -168, 126112, 126004, 7547, 53206, 70601, -209, -1000,
	-1000, 117759, 131407, -180, -1000, 131407, 563, 562, 428, -1000,
	-1000, -1000, 771, -1000, -1000, -1000, 117759, 3658, -1000, 117759,
	102803, 117759, -1000, -1000, 2240, -1000, -1000, -1000, 117759, 2371,
	-1000, -1000, -1000, 1092, 49209, 7408, 53206, 561, 49209, -1000,
	553, 552, 3508, 3237, -1000, 2690, 2860, 1970, 57741, -1000,
	3323, -1000, 18463, -1000, 1085, 1950, -1000, -1000, -1000, -1000,
	131407, 53206, 3356, 57741, -1000, -1000, 551, 550, 131407, 546,
	834, 2861, -1000, -1000, -1000, -1000, -1000, 131407, 533, 3490,
	-1000, -1000, -1000, -1000, 2246, 94526, -1000, -1000, -1000, 1191,
	-1000, -1000, -1000, -1000, 3654, 3652, 2853, 84004, -1000, -211,
	-1000, -1000, 1967, 104, 2075, 2734, -1000, 2286, 530, -1000,
	-1000, 2279, 2626, -1000, 102254, 34247, 34247, 324, 3506, 955,
	-1000, 3533, -1000, 3240, 3240, 49209, 3505, 104, -1000, 3574,
	57741, -1000, 94526, 57741, 2287, 2007, 2512, 78472, -1000, 2521,
	-1000, -1000, -212, 117759, 1821, -1000, -1000, 77360, 77360, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1085, -214, -220, -1000, 77360, -1000, -1000, 2390, -1000, 117759,
	-1000, 117759, -1000, -1000, -221, -222, -1000, 2081, 49209, 33676,
	-1000, -1000, 7547, -223, -1000, -185, -1000, 3498, 50922, 3651,
	3650, 3649, -1000, -250, -1000, -250, -1000, 1886, -1000, -1000,
	-1000, 3030, 2784, 18210, 7408, 2492, 117759, 18001, 2165, 2165,
	-1000, 3495, 2856, -1000, -1000, 2695, 519, -1000, -1000, -1000,
	-1000, 905, 117759, 2695, 2780, 94526, 7408, 1088, -228, 2094,
	2094, 49209, 33105, 2119, 49209, -1000, -1000, 3356, 117759, -1000,
	-1000, 117759, 2284, -1000, 2826, 3584, -1000, 970, -1000, 2108,
	117759, -1000, 3335, -1000, 3250, -1000, -1000, -1000, 2700, 104,
	-1000, -1000, -1000, -229, 131407, 104, -1000, 323, -230, 1086,
	-231, 94526, 1942, -1000, 829, -1000, 2532, 1032, -1000, -1000,
	-236, -238, 1970, 1085, 2057, -243, -1000, -244, -251, -1000,
	-1000, 322, 50351, 50351, 50351, -193, -202, -1000, 117759, 518,
	-1000, -1000, -1000, -1000, -1000, 2874, 999, -1000, 584, 1875,
	321, 1111, 303, 299, -1000, -1000, -1000, 2057, 117759, -1000,
	-1000, -1000, 998, 517, -1000, 49209, 1085, -252, -1000, 1068,
	-259, -1000, 1066, -261, -1000, 2840, -1000, -267, 2246, -262,
	233, 1652, 996, 3434, -1000, -1000, -1000, 2279, 94526, -272,
	-1000, -1000, 2311, -1000, 2695, 989, -1000, -1000, -1000, 1085,
	516, 1970, 514, 1545, 829, -1000, -1000, 1397, 3293, 3211,
	987, 987, 2695, 1970, 986, -1000, 987, -1000, -1000, -1000,
	3046, -1000, 54348, 2292, 1822, 128818, 3046, 3046, -1000, -1000,
	117759, 3423, -1000, 887, 847, 1515, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2787, -275, 3411, 2492, 131407, 2695,
	-1000, 2094, 2728, -1000, 2094, 2833, -1000, 2050, -1000, -1000,
	-1000, 2807, -1000, 2828, -1000, 1779, 3561, 2504, 510, -1000,
	117759, 1798, 1789, 3648, 2075, 2279, 1970, 57741, 2695, 57741,
	2041, -1000, 117759, -1000, 2007, 1345, -1000, -1000, 2057, 2695,
	1032, 509, -1000, -1000, 1740, 3501, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 828, -1000, 3226, -1000, 1114, 2334,
	2334, 1032, -1000, 826, 584, -1000, -1000, 480, -1000, 479,
	-1000, 2221, 117759, 2190, -1000, -1000, -1000, -1000, 117759, -1000,
	-1000, 3647, -1000, 970, -1000, 2695, -280, 2057, -281, -1000,
	-1000, -1000, -250, 1942, -1000, 1605, 986, 2057, -1000, 1815,
	-1000, -1000, 2144, 49780, 49209, -1000, 3553, -1000, -1000, 2536,
	-1000, -1000, 49209, 2787, 49209, 49209, -1000, 233, 65059, -282,
	-1000, 2279, 2057, 1085, 986, 1970, 1545, 66723, 1032, 986,
	-1000, -1000, -1000, 131407, -1000, -1000, -1000, 131407, -1000, -289,
	-296, -1000, -258, 101698, 2241, 2504, 986, 1970, 1032, 2695,
	2041, -269, -1000, 1032, 2057, 1185, -301, -1000, -1000, -1000,
	-1000, 1032, 2695, -1000, 2057, -1000, -1000, -1000, -1000, -1000,
	473, -1000, -1000, 2057, 986, 49209, 986, 1032, -309, 1032,
	-1000, 2057, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4489, 4486, 4485, 4483, 4482, 4480, 4477, 4475, 4474,
	4473, 4472, 4465, 142, 4464, 4463, 4460, 4459, 4458, 4457,
	4455, 4454, 4449, 4448, 4447, 4444, 4442, 4441, 4440, 4439,
	4438, 4437, 4434, 4433, 4432, 4431, 4430, 4429, 4427, 4425,
	4423, 4421, 4420, 4419, 4418, 4417, 4416, 4411, 4409, 4408,
	4406, 4403, 4402, 4401, 4400, 4395, 4394, 4388, 4383, 4382,
	4376, 4375, 4374, 4372, 4370, 4367, 4366, 52, 4365, 4361,
	4360, 4358, 4357, 4356, 4355, 4354, 4349, 4334, 4333, 4328,
	4325, 4324, 4323, 4318, 4316, 4314, 4313, 4311, 67, 4308,
	285, 4307, 4305, 4304, 4303, 4300, 4299, 4296, 4294, 4292,
	4290, 4289, 4286, 279, 4285, 125, 153, 4284, 4283, 3833,
	4282, 4281, 275, 4280, 4278, 4277, 4274, 283, 4273, 4269,
	4268, 4267, 4266, 4265, 4264, 4263, 4262, 4261, 4260, 92,
	149, 4259, 4258, 526, 4257, 4255, 4246, 4242, 4241, 4240,
	4239, 4238, 4237, 4236, 4235, 252, 166, 4232, 274, 4230,
	4228, 4225, 4222, 4216, 4215, 4214, 4209, 4208, 4207, 4206,
	4204, 4201, 4200, 4191, 4189, 4187, 4185, 4184, 4181, 4178,
	4177, 4176, 4169, 4168, 4167, 4164, 4163, 4161, 4160, 4159,
	4156, 4155, 4154, 4149, 4148, 4145, 4143, 4142, 249, 218,
	189, 4138, 4137, 269, 268, 4136, 4134, 4131, 4130, 4128,
	122, 16, 60, 4126, 4125, 94, 85, 90, 97, 105,
	99, 4123, 113, 4122, 127, 62, 4121, 19, 21, 159,
	246, 12311, 241, 4117, 4115, 4114, 245, 200, 4111, 243,
	4109, 4108, 4107, 4106, 4105, 4104, 68, 50, 179, 178,
	174, 171, 197, 4103, 156, 107, 84, 53, 43, 17,
	82, 214, 20, 1, 264, 4102, 260, 13, 139, 3,
	38, 4098, 4091, 4088, 4085, 3452, 123, 4082, 266, 248,
	169, 4081, 4080, 4079, 669, 4077, 4071, 49, 4070, 228,
	83, 130, 8, 128, 4068, 143, 173, 36, 4061, 176,
	56, 4060, 157, 91, 95, 10552, 5182, 4059, 4054, 116,
	70, 135, 3188, 195, 183, 201, 175, 160, 162, 115,
	217, 215, 187, 326, 4053, 253, 4052, 3484, 81, 185,
	147, 5825, 4047, 4046, 4045, 86, 207, 108, 4044, 4039,
	77, 25, 12, 2, 6, 140, 23, 24, 4, 4038,
	30, 119, 46, 35, 4035, 28, 4034, 4032, 4031, 4030,
	4029, 63, 163, 4028, 4027, 282, 4026, 96, 57, 42,
	4025, 181, 223, 4024, 235, 129, 4023, 4020, 256, 210,
	191, 4018, 74, 236, 4017, 4015, 4014, 4012, 4009, 141,
	9, 131, 4008, 4007, 161, 4003, 51, 244, 203, 4000,
	65, 3999, 3998, 182, 48, 138, 271, 134, 231, 121,
	224, 186, 234, 3997, 3995, 3993, 209, 3992, 3991, 227,
	152, 3990, 3986, 240, 287, 87, 45, 79, 242, 78,
	199, 155, 3985, 212, 3983, 3981, 286, 184, 221, 14,
	7, 100, 133, 3977, 5, 238, 151, 229, 114, 3976,
	6790, 2176, 2632, 3972, 3971, 154, 118, 80, 120, 148,
	263, 104, 3970, 3968, 5685, 3967, 3966, 3965, 3964, 190,
	3963, 3962, 3961, 145, 158, 180, 3954, 89, 72, 47,
	32, 112, 250, 267, 117, 222, 170, 259, 3952, 3950,
	3949, 188, 3948, 58, 103, 164, 208, 254, 55, 3947,
	198, 3946, 146, 277, 71, 150, 3935, 232, 3933, 3932,
	3931, 3928, 3927, 3926, 3924, 204, 237, 3921, 3919, 3918,
	34, 196, 3917, 262, 336, 205, 106, 66, 3915, 98,
	2208, 3911, 193, 1075, 73, 265, 202, 3909, 5835, 59,
	3908, 0, 14696, 8470, 12316, 13423, 3906, 3821, 3905, 3904,
	3903, 219, 144, 3902, 3901, 3900, 109, 3899, 88, 3898,
	3897, 76, 3896, 26, 11, 18, 27, 31, 511, 344,
	3894, 3893, 29, 132, 167, 3891, 272, 233, 3890, 3889,
	3888, 3886, 102, 3884, 44, 3881, 39, 3880, 3879, 41,
	15, 37, 3878, 3877, 220, 3871, 225, 255, 3870, 165,
	3869, 69, 136, 3867, 3866, 3865, 64, 61, 257, 93,
	3862, 281, 3859, 206, 3858, 3857, 3857, 22, 3856, 3855,
	247, 111, 110, 3854, 251, 137, 40, 216, 177, 211,
	3853, 3852, 172, 3849, 3848, 3846, 273, 3845, 3844, 33,
	3843, 3842, 3841, 10, 3840, 3837, 213, 3189, 3836, 3835,
	54, 3831, 194,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 617, 617, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 621, 621, 622, 622,
	622, 622, 622, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 606, 606, 607,
	607, 605, 604, 604, 604, 608, 608, 608, 204, 204,
	204, 128, 128, 128, 128, 128, 128, 129, 129, 130,
	130, 208, 208, 208, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 214, 16, 16, 16,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 108,
	108, 528, 528, 529, 529, 199, 199, 200, 200, 200,
	200, 201, 201, 202, 202, 202, 70, 70, 211, 211,
	213, 213, 212, 212, 212, 212, 212, 58, 58, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 61, 61, 61, 61, 61,
	61, 68, 68, 68, 68, 68, 68, 190, 190, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 76, 76, 76, 76, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 624, 624, 625, 625, 626,
	626, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 85, 85, 353,
	353, 316, 316, 86, 86, 86, 87, 87, 88, 88,
	72, 72, 587, 587, 369, 369, 485, 485, 73, 595,
	595, 595, 597, 597, 596, 596, 90, 90, 391, 391,
	91, 91, 91, 91, 91, 91, 92, 92, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 100, 100, 100,
	100, 100, 101, 101, 101, 98, 98, 98, 95, 95,
	95, 94, 94, 94, 99, 99, 99, 586, 305, 305,
	97, 97, 97, 96, 96, 96, 370, 370, 102, 102,
	102, 102, 317, 103, 103, 103, 103, 103, 103, 103,
	103, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 487, 487, 104, 104,
	104, 452, 452, 109, 109, 109, 407, 407, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 131, 131, 131, 131, 131, 131, 131, 131,
	591, 591, 362, 362, 268, 268, 268, 268, 121, 121,
	121, 121, 122, 122, 122, 123, 123, 195, 195, 138,
	138, 138, 138, 137, 137, 137, 137, 137, 137, 137,
	137, 62, 62, 62, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 67, 67, 67, 141, 141, 618,
	618, 143, 140, 140, 140, 140, 140, 139, 139, 142,
	142, 142, 142, 144, 146, 146, 146, 146, 146, 145,
	145, 145, 145, 147, 147, 519, 519, 378, 378, 517,
	517, 538, 538, 518, 518, 323, 323, 323, 323, 323,
	324, 324, 324, 527, 527, 527, 527, 527, 527, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 196, 196, 197, 198, 198, 198, 198, 198,
	173, 173, 173, 189, 189, 189, 189, 189, 189, 189,
	189, 176, 176, 176, 160, 160, 149, 149, 149, 149,
	149, 149, 149, 154, 154, 154, 154, 154, 154, 154,
	154, 150, 150, 162, 162, 162, 162, 162, 155, 155,
	156, 156, 156, 157, 157, 157, 157, 183, 183, 159,
	159, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	151, 151, 151, 151, 164, 164, 164, 164, 414, 414,
	414, 188, 188, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 186,
	186, 186, 186, 186, 186, 609, 609, 610, 610, 610,
	180, 180, 180, 180, 180, 180, 466, 466, 174, 174,
	174, 174, 179, 179, 179, 179, 182, 182, 182, 182,
	397, 397, 171, 171, 171, 172, 172, 172, 177, 177,
	178, 354, 354, 175, 175, 181, 181, 181, 181, 152,
	152, 152, 152, 152, 152, 152, 153, 153, 153, 153,
	184, 184, 170, 170, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 628, 628, 166, 166, 166,
	165, 165, 165, 165, 168, 168, 169, 169, 169, 169,
	169, 169, 167, 158, 187, 588, 588, 584, 584, 584,
	584, 584, 584, 584, 584, 585, 585, 585, 585, 590,
	590, 114, 114, 114, 114, 114, 124, 124, 124, 124,
	124, 115, 115, 115, 115, 115, 115, 115, 117, 117,
	116, 116, 116, 116, 80, 80, 80, 80, 80, 15,
	15, 15, 81, 81, 259, 259, 217, 217, 217, 342,
	342, 218, 218, 331, 331, 331, 331, 215, 215, 216,
	216, 82, 82, 629, 629, 629, 601, 601, 601, 602,
	602, 602, 602, 602, 602, 325, 325, 326, 326, 432,
	432, 432, 432, 432, 329, 329, 329, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 332, 332, 243, 243,
	243, 340, 341, 341, 333, 333, 339, 338, 338, 337,
	337, 336, 336, 334, 335, 335, 335, 344, 344, 343,
	346, 346, 345, 431, 547, 547, 549, 549, 549, 549,
	549, 549, 549, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	415, 415, 630, 630, 631, 632, 545, 545, 545, 546,
	541, 541, 542, 542, 542, 542, 542, 327, 327, 328,
	328, 328, 328, 543, 544, 360, 360, 470, 548, 548,
	550, 550, 552, 633, 633, 633, 633, 633, 633, 634,
	634, 634, 430, 430, 429, 429, 351, 351, 553, 553,
	553, 553, 554, 554, 554, 554, 554, 557, 556, 555,
	555, 555, 555, 555, 84, 84, 84, 394, 394, 393,
	393, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 192, 192, 271, 271,
	78, 78, 78, 12, 12, 12, 12, 12, 12, 12,
	286, 286, 13, 13, 13, 603, 603, 603, 83, 83,
	83, 83, 83, 83, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 593, 593, 592, 592, 272, 272,
	636, 636, 89, 89, 89, 89, 89, 89, 89, 89,
	488, 488, 489, 489, 77, 77, 77, 77, 77, 416,
	416, 413, 413, 412, 412, 359, 359, 468, 468, 468,
	469, 276, 276, 277, 277, 236, 236, 236, 31, 30,
	21, 21, 26, 26, 27, 27, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 28, 28, 49, 49, 49,
	49, 50, 50, 50, 50, 53, 53, 54, 54, 48,
	48, 48, 48, 51, 51, 44, 44, 55, 55, 55,
	55, 55, 611, 613, 613, 612, 612, 616, 616, 616,
	616, 616, 616, 614, 614, 615, 615, 619, 619, 620,
	620, 120, 120, 125, 125, 125, 125, 125, 126, 126,
	126, 126, 127, 127, 127, 127, 136, 136, 191, 191,
	191, 191, 191, 191, 191, 57, 57, 57, 57, 69,
	69, 69, 69, 134, 638, 638, 638, 135, 135, 135,
	637, 637, 269, 269, 426, 426, 427, 427, 639, 639,
	428, 428, 428, 428, 428, 262, 261, 263, 263, 264,
	264, 75, 75, 75, 252, 252, 251, 253, 253, 254,
	254, 249, 249, 530, 530, 256, 256, 256, 257, 257,
	245, 245, 246, 246, 247, 247, 248, 248, 260, 260,
	640, 640, 112, 112, 112, 194, 194, 315, 315, 315,
	423, 423, 423, 352, 352, 283, 283, 425, 425, 425,
	425, 390, 390, 390, 193, 193, 367, 367, 380, 380,
	381, 381, 482, 482, 382, 118, 118, 119, 119, 133,
	133, 221, 221, 219, 219, 219, 219, 219, 219, 219,
	219, 226, 226, 227, 227, 228, 228, 229, 230, 230,
	230, 230, 371, 371, 231, 231, 231, 220, 220, 220,
	222, 222, 222, 222, 222, 222, 222, 225, 225, 225,
	225, 232, 232, 232, 224, 224, 564, 564, 564, 566,
	566, 568, 568, 567, 567, 563, 563, 565, 565, 635,
	635, 396, 396, 396, 349, 350, 347, 347, 348, 348,
	357, 357, 355, 356, 356, 358, 358, 467, 467, 467,
	237, 237, 237, 387, 387, 387, 387, 388, 388, 419,
	419, 417, 417, 417, 417, 418, 418, 420, 420, 420,
	421, 421, 422, 422, 384, 384, 385, 385, 386, 386,
	386, 386, 448, 448, 223, 223, 223, 364, 364, 364,
	365, 365, 438, 438, 438, 438, 438, 438, 438, 438,
	439, 439, 437, 437, 437, 437, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 472, 473, 473, 366, 366,
	474, 424, 424, 582, 582, 582, 583, 583, 465, 465,
	475, 475, 475, 475, 475, 475, 463, 463, 464, 464,
	483, 484, 484, 400, 400, 400, 400, 398, 398, 401,
	401, 401, 401, 401, 399, 399, 476, 476, 476, 476,
	389, 389, 477, 477, 477, 477, 478, 479, 479, 480,
	480, 433, 434, 434, 490, 490, 490, 490, 492, 363,
	363, 363, 363, 363, 540, 539, 539, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 507, 507,
	507, 507, 507, 507, 507, 493, 493, 493, 493, 493,
	497, 497, 497, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 498, 498, 503, 503, 504, 504,
	504, 499, 500, 505, 505, 505, 505, 641, 641, 509,
	509, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	495, 495, 495, 502, 502, 502, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 408,
	408, 410, 410, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 442, 442, 442, 442, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 558, 558, 558, 558, 558, 558, 558,
	558, 444, 444, 561, 561, 562, 562, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 569, 569,
	570, 570, 572, 572, 573, 573, 574, 575, 575, 575,
	576, 577, 577, 571, 571, 578, 578, 578, 578, 579,
	579, 580, 580, 580, 580, 580, 581, 581, 581, 581,
	581, 454, 454, 455, 455, 461, 461, 461, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 322, 322, 321, 273, 273, 273, 273,
	273, 273, 376, 376, 374, 374, 374, 377, 377, 375,
	375, 373, 373, 372, 372, 451, 451, 449, 449, 453,
	453, 402, 402, 508, 508, 508, 508, 508, 508, 508,
	508, 403, 403, 403, 411, 404, 404, 405, 405, 405,
	405, 405, 445, 446, 406, 406, 406, 447, 447, 456,
	460, 460, 459, 458, 458, 457, 457, 435, 435, 436,
	436, 383, 383, 642, 642, 379, 379, 481, 481, 481,
	481, 319, 319, 368, 368, 318, 318, 310, 310, 311,
	311, 311, 311, 361, 361, 462, 462, 510, 510, 511,
	511, 512, 512, 513, 513, 514, 515, 516, 450, 450,
	294, 293, 280, 281, 292, 291, 290, 279, 282, 287,
	288, 289, 284, 285, 301, 300, 299, 250, 255, 306,
	307, 307, 309, 309, 308, 308, 296, 297, 298, 486,
	278, 312, 312, 313, 313, 313, 314, 314, 314, 314,
	274, 274, 275, 275, 302, 302, 303, 304, 304, 295,
	295, 295, 265, 265, 265, 266, 266, 267, 267, 524,
	524, 521, 521, 521, 522, 522, 522, 523, 523, 523,
	523, 520, 520, 520, 520, 520, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 532, 532, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 534, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 537, 537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	4, 6, 4, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	4, 3, 4, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 3, 4, 3, 4, 3,
	5, 3, 4, 4, 3, 4, 5, 3, 4, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 3,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 7, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 13, 16, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 0, 1, 1,
	0, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 2, 8, 4,
	2, 3, 5, 5, 5, 2, 5, 5, 2, 2,
	2, 0, 1, 1, 3, 4, 11, 12, 9, 5,
	3, 1, 5, 10, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 13, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 602, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 155,
	129, 138, 203, 386, 431, 443, 401, 143, 422, 406,
	-142, -143, 461, -57, -69, -135, -134, 73, 130, 416,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -623, 102, -565, -93,
	-96, -127, -627, 162, 221, -115, -116, 368, -122, -123,
	424, -125, -126, 427, 163, -64, -63, 157, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	466, -178, -187, -156, 527, 49, 481, 82, 147, 435,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 423, -222, -220,
	599, 542, -18, -23, -24, -19, -20, -22, -25, -21,
	-26, -27, -28, -40, -45, -46, -42, -43, -41, -44,
	-47, -48, -49, -50, -51, -52, -53, -54, -30, -36,
	-37, -31, -32, -33, -34, -35, -38, -39, -17, -29,
	563, 572, -225, -223, -224, -232, 453, 550, 501, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, -317, 2, -296, -302, -303, -304, -295, -265, -534,
	-537, 4, -531, -535, 169, 231, 332, 21, 23, 22,
	24, 25, 26, 27, 29, 30, 41, 42, 44, 45,
	46, 47, 48, 49, 53, 55, 59, 60, 61, 62,
	63, 64, 68, 73, 74, 79, 80, 81, 82, 83,
	84, 85, 91, 88, 89, 90, 92, 94, 96, 97,
	98, 99, 100, 101, 103, 104, 105, 107, 108, 109,
	117, 118, 119, 120, 121, 123, 129, 124, 130, 133,
	128, 132, 134, 136, 137, 138, 141, 142, 143, 145,
	146, 148, 149, 150, 152, 153, 155, 156, 157, 160,
	158, 509, 159, 161, 162, 163, 164, 167, 175, 176,
	177, 182, 184, 185, 189, 190, 191, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 204, 208, 210, 211,
	212, 213, 214, 220, 221, 223, 224, 225, 226, 227,
	232, 233, 234, 238, 235, 244, 245, 249, 250, 251,
	253, 257, 258, 259, 260, 261, 262, 264, 266, 265,
	268, 271, 272, 275, 279, 280, 284, 285, 281, 286,
	287, 289, 290, 293, 291, 294, 295, 292, 296, 298,
	299, 300, 301, 302, 303, 304, 305, 306, 307, 308,
	309, 297, 312, 310, 314, 315, 316, 330, 325, 326,
	327, 320, 321, 317, 322, 318, 319, 323, 324, 329,
	334, 335, 338, 218, 340, 341, 344, 362, 348, 349,
	350, 353, 354, 357, 360, 361, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 373, 374, 376, 377, 378,
	380, 381, 382, 384, 386, 387, 389, 390, 392, 393,
	394, 395, 396, 397, 398, 400, 401, 403, 402, 404,
	406, 408, 409, 410, 416, 422, 418, 419, 420, 421,
	423, 424, 425, 426, 427, 429, 430, 431, 433, 434,
	435, 436, 437, 439, 441, 442, 446, 447, 463, 464,
	483, 443, 444, 445, 448, 449, 450, 451, 452, 456,
	454, 455, 457, 458, 459, 461, 462, 465, 466, 468,
	469, 470, 471, 472, 473, 474, 477, 479, 480, 481,
	500, 482, 484, 488, 489, 490, 491, 485, 486, 499,
	493, 494, 496, 497, 502, 503, 504, 505, 506, 507,
	508, 510, 512, 520, 521, 522, 524, 527, 528, 529,
	530, 518, 532, 533, 536, 537, 538, 541, 539, 540,
	542, 544, 547, 548, 549, 555, 554, 556, 559, 564,
	565, 567, 568, 569, 36, 50, 51, 54, 56, 58,
	69, 70, 71, 75, 125, 126, 154, 165, 166, 178,
	192, 193, 205, 207, 215, 216, 217, 239, 240, 242,
	247, 269, 337, 339, 355, 359, 375, 379, 383, 385,
	399, 438, 475, 487, 492, 513, 514, 515, 516, 523,
	525, 550, 551, 552, 557, 566, -317, 2, -296, 346,
	-289, 2, -265, -265, 386, 28, 2, 28, 374, 455,
	504, 506, 2, -591, -362, 2, 28, -268, -265, 102,
	203, 453, -289, 2, -591, -362, 25, 2, -265, 2,
	360, 22, 27, 66, 77, 98, 141, 164, 186, 189,
	-626, 362, 393, 441, 457, 499, 510, 524, 2, 554,
	290, 454, 501, 231, 120, 529, 448, -603, 446, 447,
	360, 391, 433, 206, 543, -269, 2, 443, -265, 290,
	2, 602, 94, 74, 438, 458, -145, 2, 280, 521,
	-146, -147, -144, 513, -519, 448, 433, 312, -265, 602,
	602, 602, 28, -278, -265, 501, 231, 448, 120, 497,
	602, 2, 501, 365, 554, 454, 120, 396, 231, 529,
	189, 141, 27, 448, -603, 577, 578, 290, 127, -589,
	2, -584, 4, -535, -531, -311, -310, 501, 507, 120,
	-304, -295, 592, -303, 602, 602, 602, 2, 250, 251,
	395, 394, 458, 459, 602, 602, 602, 602, 446, 2,
	164, 22, 27, 66, 93, 98, 127, 186, 189, 351,
	-624, 362, 393, 457, 499, 503, 510, 524, -602, 482,
	68, 421, 448, -601, -603, 290, 529, 141, -412, 120,
	280, 201, 537, 506, 504, 535, 133, 238, 540, 539,
	602, 602, -106, 2, 599, 32, 31, -105, -109, 143,
	461, -214, 501, 243, 2, -265, 602, 602, 2, 250,
	251, 446, 447, 602, 602, 187, -584, 2, 602, 602,
	2, 250, 251, 446, 447, 243, 2, 68, 450, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 2, -189, 458, 482, 212,
	47, 46, 74, 28, 392, 79, 366, 121, 127, 149,
	530, 204, 231, 232, 258, 93, 94, -414, 44, 251,
	68, 250, 447, -609, 446, -466, 502, 449, 455, 496,
	262, 443, 521, 102, 544, 434, 569, 396, 397, 494,
	410, 281, 158, 188, 4, 120, 312, 433, 460, 513,
	280, 442, 369, 84, 602, -635, 2, 501, -637, 2,
	521, 521, 2, -637, 2, -637, 2, -637, 2, -638,
	521, 566, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	-220, -222, -221, 602, 602, 602, 602, 602, 602, 602,
	-189, 458, 2, 74, 28, -355, -357, 534, 241, 151,
	352, -219, -221, 2, -564, -517, 2, -440, -538, -442,
	590, 591, 583, 498, 67, -321, 331, 570, -454, 127,
	535, 346, -537, -443, -456, 154, 362, 438, -377, 8,
	9, 5, 6, 7, -274, -444, -450, 526, 168, 336,
	-314, 603, 10, 599, -561, -221, -455, 37, 207, 65,
	-521, -313, -275, -493, 242, -312, -295, -558, -559, 4,
	-531, -532, -522, -496, -504, -500, -501, -507, -265, -534,
	77, 111, 112, 110, 115, 114, 283, 282, 116, 113,
	460, 543, 66, 36, 215, 216, 247, 337, 217, 75,
	-560, 142, -533, 239, 240, 475, 51, 399, 178, 126,
	125, 339, 56, 54, 551, -505, 122, 513, 514, 515,
	516, 192, 193, 58, 165, 166, 359, 383, 492, 523,
	525, 205, 269, 43, 106, 188, 237, 219, 246, 248,
	252, 270, 273, 313, 328, 333, 356, 358, 432, 467,
	-641, 552, 487, 69, 70, -566, 402, -567, -289, -566,
	602, 602, 604, 602, -347, -349, -350, 2, 28, 139,
	599, 2, -471, 2, -472, -476, -221, 263, -475, 599,
	-473, 597, -296, 347, -562, 439, -558, -559, -274, -295,
	-313, 4, -531, -533, 601, -351, 599, 120, 448, 501,
	78, 231, 164, -407, 599, -265, 28, 346, 517, 604,
	-348, 390, -452, 599, 346, 187, 349, 60, 294, 2,
	2, 2, 2, 2, 215, -265, 501, 119, 2, 261,
	2, 2, 2, 2, 2, 2, 2, -370, 215, 2,
	-296, 554, -370, 215, 2, -370, 215, 2, -413, 2,
	87, -279, 215, 2, -265, -305, 215, 2, -300, -302,
	-309, 215, 2, -307, -265, -529, 215, 2, -528, -524,
	10, -523, 5, 4, -531, -535, -532, -534, 77, -440,
	2, -133, 2, 60, -265, 554, 2, 463, 2, 599,
	-145, 2, 71, 521, 43, 458, -146, 2, -427, 2,
	-428, -261, -262, -263, -483, -264, 249, 389, 398, 573,
	131, 331, 569, -618, 187, 582, 517, -517, -517, -517,
	-378, 601, 2, 2, 2, 2, 2, 2, -476, 215,
	-296, 2, -293, -520, 4, -531, -535, -532, -536, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 57, 65,
	66, 72, 76, 78, 87, 93, 102, 110, 111, 113,
	112, 114, 115, 116, 127, 131, 135, 139, 140, 144,
	147, 151, 168, 170, 183, 186, 187, 203, 206, 209,
	222, 236, 241, 243, 263, 267, 274, 282, 283, 331,
	336, 342, 346, 347, 351, 352, 372, 388, 405, 428,
	453, 460, 478, 495, 501, 511, 517, 519, 526, 534,
	535, 543, 545, 553, 558, 560, 561, 562, 563, -537,
	2, -476, 215, 2, -299, 215, -476, -302, 2, -279,
	2, -292, -520, 2, -318, 215, -296, -298, -302, -300,
	2, 2, 2, 2, -307, 2, -528, 215, 2, 28,
	28, 554, 390, 243, 517, 604, -368, -310, -311, -516,
	8, -361, -265, 601, -440, 2, -133, -117, 2, 183,
	-440, 215, 2, -133, 215, 2, -440, 215, 2, -133,
	215, 2, -604, 2, -528, 215, 215, -265, 2, 294,
	2, 2, 524, 2, 98, 501, 119, 2, 420, -625,
	441, 528, 2, 2, 2, 2, 2, 2, 2, 501,
	-284, 2, -265, 183, 485, -307, 215, -308, 2, 454,
	-636, 402, -528, 215, 2, 554, -300, 215, 2, -300,
	231, 245, -279, 215, 2, 506, 504, 506, 504, 187,
	2, 243, 2, 243, 2, -477, 2, -478, -472, -479,
	597, 347, -487, 2, -486, -523, 550, -106, 599, -106,
	599, 458, 599, -528, -296, -296, -440, 2, -133, -117,
	2, -440, 2, -133, 2, -130, -528, -129, 599, 187,
	-440, 2, -133, -117, 2, -440, 2, -133, 2, -214,
	183, 2, 120, 501, -189, 2, 183, 545, 2, 8,
	2, 222, -528, 449, 397, 175, 2, 463, 2, 464,
	74, -414, 569, 74, 187, 2, 187, 2, -397, 2,
	563, 390, 187, 2, 2, -588, 2, 346, 187, 2,
	187, 2, 187, 2, 187, 2, 187, 2, -188, 459,
	522, 500, 394, 251, 2, -133, 560, -117, 251, 250,
	-440, 560, 2, -610, 183, 447, -440, 2, 520, 260,
	159, 187, -397, 2, 187, 2, 187, 2, 5, 2,
	395, 483, 2, 249, 389, 483, 2, -296, 501, 554,
	454, 120, 28, 2, 446, 2, 2, 88, 89, 187,
	2, 187, 2, 202, 187, 2, 187, 501, 569, 2,
	-389, -476, -426, -427, -426, 517, -355, -357, -189, 463,
	2, -226, -387, -228, 183, -417, -418, -229, 274, 170,
	342, -230, -396, 28, 139, -396, -396, 60, 600, 600,
	11, 12, 76, 41, 590, 591, 592, 593, 181, 594,
	595, 588, 589, 587, 580, 581, 585, 255, 256, 95,
	584, 582, 86, 288, 440, 171, 172, 173, 174, 417,
	229, 34, 230, 14, 15, 16, -321, 33, 351, 273,
	570, 219, 467, 583, 17, 18, 19, 246, 248, 333,
	50, 222, -273, 362, -320, 498, 67, -440, -440, -440,
	-440, -440, -440, -440, -440, 358, 599, -383, -435, 597,
	-221, 599, 599, 599, 599, -516, -221, -440, -454, 600,
	-375, 599, -221, -454, -449, 599, 438, 597, 599, -457,
	-440, 5, 5, 5, 599, 601, -569, 564, 183, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 385, -498, 599, -497, 599,
	-497, -497, 555, -495, 599, 572, 565, 599, -495, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 599, 555, 604, -566, -351, 599, -379, -481, -440,
	592, -379, -379, 346, -372, -440, 106, -400, 252, 313,
	188, 270, 432, 237, -437, 603, -437, -465, 572, -221,
	-473, -295, -221, -475, 599, -471, -465, -107, -516, -90,
	-103, -112, -133, -148, -193, -194, 592, -296, 599, 187,
	599, 601, -520, 187, -361, -279, -306, -265, -296, -312,
	-313, -318, 2, 138, -372, -584, 529, 448, 28, 454,
	-361, -268, 38, -451, -490, -491, -540, 603, -539, -493,
	-503, -499, -502, 375, 379, -522, 54, 551, -505, 242,
	4, -531, -533, 239, 240, 475, 51, 399, 178, 126,
	125, 339, 56, 513, 514, 515, 516, 192, 193, 58,
	552, 487, 69, 70, -584, 529, 448, 28, 454, -361,
	183, -361, 2, 2, 154, 2, 2, 2, -265, -242,
	604, 64, 425, 154, -370, 215, -242, 154, -242, 154,
	-319, 215, -318, -242, 154, -242, 604, 154, -242, 604,
	154, 601, 604, 154, -361, 2, -413, -519, -372, 38,
	-427, 2, 127, -525, -523, 5, -639, 604, 272, -324,
	287, 330, 211, 347, 567, 340, 131, -527, 5, 4,
	-450, -462, 127, 280, 242, -510, -512, 8, -511, 9,
	-513, 590, 591, -518, -517, 109, 601, -520, -239, 418,
	461, 361, -238, 24, 29, 143, 233, 316, 548, 160,
	-337, 234, -334, 365, 154, 479, 538, -598, -599, 445,
	508, 509, 90, 340, 461, 361, 418, 154, -393, -395,
	38, 118, 316, 360, 61, 226, 292, 293, 481, 557,
	154, 461, 361, 418, 361, -13, -254, 24, 143, -256,
	-251, 461, -599, 99, 418, 576, 423, 371, 493, 388,
	-599, -241, 479, 538, -598, -599, 445, 418, -240, -339,
	-334, 365, 154, 603, 24, 143, 418, 461, 361, -621,
	-622, 29, 418, 361, -592, -286, -563, 222, 563, 154,
	-286, -286, -476, 215, -614, 183, 2, -607, -129, 264,
	5, 10, -528, -129, -368, 604, 604, -520, 592, 447,
	446, 154, 154, 154, 154, 183, 331, 331, 2, 2,
	2, 2, 2, 189, -601, -626, 2, 2, -296, 215,
	-353, 346, -587, -369, 501, -296, 183, 331, 43, -299,
	215, 2, -302, 554, -592, 331, -301, 215, -296, 38,
	599, 331, 2, -413, 2, 231, -563, 331, -477, -315,
	-296, -472, -315, 461, -289, 38, -437, -296, 600, 604,
	-487, -487, -528, -202, 563, 187, 102, 599, 599, -214,
	563, 563, -484, 604, -483, 222, -529, -130, -528, 421,
	-528, -587, -279, 2, -296, 2, 501, 253, -528, -202,
	222, -528, -528, -528, -519, 28, 464, 2, -188, 459,
	522, 89, 464, 2, -296, 501, 120, 231, 80, -614,
	183, 2, -265, -590, 183, -585, 433, 448, 529, -584,
	-296, 120, -296, 120, -296, 120, -296, -296, 2, 2,
	2, 2, 2, 85, 2, -133, -440, 2, 85, 2,
	46, 480, -610, 183, 2, 520, 2, 520, 2, -265,
	-265, -265, 482, 272, -296, -296, -296, -297, -302, 502,
	447, -440, 2, -628, 2, 187, 183, 2, 501, 231,
	501, 231, 120, 187, 74, 120, 28, 501, 444, -242,
	604, -269, -226, -387, -519, -388, -387, -227, -226, -229,
	183, 398, 539, 316, 465, 257, -418, -417, 28, -440,
	-422, 177, 315, -440, -420, -442, 590, 591, -511, -513,
	-371, 340, -220, -220, -220, -358, -467, -440, 388, 231,
	-492, -490, -490, -294, -520, 513, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, 273, 219, 467, 50, 222, -440, 517, -440,
	-440, -440, -440, 310, 331, 336, 526, 168, 536, 139,
	340, -642, 495, 40, -447, -221, -376, 599, -461, 35,
	478, 28, -454, 599, 2, -435, -440, -436, -322, -320,
	-265, 590, 591, 592, 593, 594, 595, 580, 581, 582,
	14, 15, 16, 585, 589, 587, 588, 181, 95, 584,
	288, 440, 86, 171, 172, 173, 174, 255, 256, 17,
	18, 19, 34, 583, -373, -372, -372, 600, 553, 28,
	139, 592, 2, 600, 604, 38, 600, -440, -373, -453,
	-449, -372, -460, -459, 560, -408, -409, 568, 297, 123,
	213, 295, -410, 452, -514, 8, -520, 592, -570, 176,
	206, 599, 600, 2, 600, 2, 600, -440, 2, 600,
	-440, 2, 600, -440, 2, 600, -440, 2, 600, 2,
	600, 2, -440, -440, -440, -440, -440, -440, -440, -372,
	8, -514, -514, 513, 513, -514, -514, -514, -506, 375,
	376, 377, 378, 275, 276, 277, 278, 379, 380, 381,
	382, 302, 303, 304, 305, 298, 299, 300, 301, 306,
	307, 308, 309, 197, 198, 199, 200, 193, 194, 195,
	196, -506, -402, 2, -508, -372, 4, 568, 297, 123,
	213, 295, 452, 5, -402, 2, -403, 2, -440, -372,
	-404, -441, -442, 590, 591, 583, -321, -454, -405, 2,
	-440, -373, -440, 57, 267, 519, -406, -440, 187, -372,
	-372, 2, -372, 2, -567, 38, -372, -364, 604, 187,
	38, 4, -364, -364, 599, 600, 604, -401, 210, 291,
	286, 245, -401, -471, -400, 252, -398, 356, -398, -398,
	-465, -280, 597, 605, -520, -465, -464, -463, 38, -289,
	353, -465, -465, 601, 600, -464, 598, -582, 599, 602,
	602, 602, 602, 602, -296, 599, -372, -520, 601, 484,
	2, 600, 246, 246, 246, 246, 246, 439, 600, 517,
	-586, -305, -309, 502, 2, 563, -105, 348, 600, 604,
	-363, 37, 597, 601, -514, 2, 2, -509, 555, 599,
	599, -409, 599, 187, -586, -309, 502, 2, -362, 517,
	-265, 2, -296, -370, -242, 154, -370, -370, -242, 604,
	154, -279, -300, -305, -307, -309, -265, -528, -529, -242,
	-301, -618, 600, 521, -428, -323, 398, 477, 419, 456,
	497, 8, 9, 8, 9, 604, -520, 604, -619, 93,
	517, 78, 448, -258, 281, 517, -431, 215, 78, -541,
	-282, 93, -542, -265, 72, 535, 388, 186, 152, -619,
	93, 388, -619, 93, 2, 233, 93, 461, 482, 28,
	60, -476, 41, 41, 28, -617, 329, 268, 559, 187,
	569, 501, 231, 448, 517, 517, -476, -395, -490, 118,
	292, 293, 60, -515, -510, 590, 591, -515, 60, -515,
	-515, -515, 563, -299, -476, 448, 517, 517, 517, 408,
	408, -251, -146, 517, 517, 28, -189, 426, 127, -640,
	582, 408, 604, 41, 41, 28, -617, 329, 268, 187,
	517, -318, -280, 549, 42, 549, 42, 549, 517, 42,
	448, 517, 604, 42, 517, 517, -13, 461, -593, -270,
	105, 322, 285, 323, 97, 319, 96, 318, 103, 320,
	104, 321, 556, 334, 63, 317, 296, 324, -271, -272,
	367, 547, 120, -528, -13, -13, 461, 361, 418, 154,
	-615, 222, 28, -603, 222, -484, 222, -484, -310, -265,
	601, -133, -440, -440, -133, -440, -133, 46, 154, 154,
	2, -636, 261, 599, -327, 331, 187, -361, -485, 243,
	604, -369, -584, 154, -526, -525, 116, 460, -394, -393,
	331, -301, 215, 2, 154, -351, 331, 148, 599, 396,
	2, 154, -281, 215, -266, -265, -413, -245, 505, 154,
	-391, 545, -423, -133, 599, 127, 38, -423, -380, -381,
	-482, -382, -282, 599, -289, -437, -106, -486, 600, 600,
	600, -201, 350, -200, -265, 5, -214, 545, -326, -432,
	-431, -545, -546, -541, 273, 231, 535, 245, 169, -352,
	-283, -282, 119, 400, 400, -208, 563, -129, -130, 600,
	-484, 222, 485, -202, -202, -484, -484, -296, 183, -528,
	-202, -202, -202, 2, 2, 2, 2, -397, -296, -279,
	-318, -296, 28, 601, -361, -361, -309, -305, -397, -279,
	-397, -279, -397, -279, -133, -440, 482, 2, 458, 183,
	183, 601, -397, -354, 428, 2, 396, 120, 501, 365,
	231, -296, -318, -296, -318, -279, 120, -279, 121, -296,
	-476, -388, -227, 347, 257, 465, -420, -421, -442, 438,
	439, -421, 438, 439, 8, 9, 8, 9, -231, 469,
	335, -370, 604, -236, 39, 135, 257, -296, 569, 150,
	-440, -440, 517, -642, 495, -447, 150, -440, 310, 336,
	526, 168, 536, 139, 340, 187, 599, -441, -441, 600,
	-374, -440, -440, 598, 607, 600, 601, 600, -357, 604,
	-355, -440, -372, -372, 600, 601, -372, -361, 598, 598,
	604, 600, -458, -459, 144, -440, 517, 517, 517, 517,
	599, 600, 601, -575, 357, 599, 599, -440, 600, 600,
	600, 600, 38, 604, 604, 604, 600, 604, 604, 604,
	600, 600, 600, 604, 600, 569, 569, 600, 600, 600,
	600, 604, 600, 604, 600, 187, 600, 600, -411, 372,
	600, 11, 12, 590, 591, 592, 593, 181, 594, 595,
	588, 589, 587, 580, 581, 582, 86, 288, 440, 14,
	15, 16, -321, 246, 222, -441, -441, -441, -441, 600,
	-445, -446, 187, 183, 38, -406, -406, -406, 600, 187,
	-372, 600, 600, 599, -568, 290, 331, 600, -434, -433,
	561, -481, -365, 2, -471, -291, -520, -434, -434, -372,
	-440, 252, 252, -399, 545, 346, -401, -471, -464, -516,
	-439, -438, 185, 39, 135, 325, 326, 327, 218, -464,
	-289, -351, -464, -464, -520, -465, -465, -463, 600, -583,
	-516, 600, -366, -474, -562, -357, 601, -520, -211, -563,
	-190, 5, 336, -190, -190, -190, -190, -361, 517, 517,
	222, 25, 373, -490, 597, 598, 8, -520, 599, -514,
	-514, -514, -361, 187, 187, 222, 187, -526, 2, -242,
	-370, -242, -242, -318, -319, -242, -242, -242, -392, 563,
	-517, -427, 533, 83, 398, 513, -517, -238, 418, -282,
	-282, -296, -306, 201, 409, -526, 331, -431, 215, -244,
	331, -490, -290, -265, 599, -415, 565, 257, 257, 545,
	-282, -290, 257, 215, -282, 215, -290, 2, -290, -594,
	398, 341, -440, 60, -335, 279, 396, 332, -239, 418,
	461, 361, -133, -133, -133, -133, -133, 599, -618, 545,
	138, -296, -318, -296, -306, -526, -301, 461, 361, 418,
	328, -312, -515, -515, -393, 461, 361, 418, -306, -526,
	-299, -526, -250, 215, -265, -250, 215, 448, -279, 408,
	569, 45, -640, -240, -133, -133, -133, -133, -133, 599,
	-280, -241, 418, 5, 215, -282, 5, -282, 215, 5,
	-265, -282, -306, -526, -622, 24, 143, -282, -306, -526,
	-270, -528, 336, 541, -279, -592, -286, 448, 517, 517,
	-476, -611, -612, 203, 431, 448, 434, -361, -129, -205,
	563, -129, -199, 227, 592, -589, -528, -265, 554, -265,
	-325, -328, -326, -282, -217, -218, 565, 563, 154, -316,
	-296, 597, -202, -528, -296, -485, -307, -308, 154, -351,
	331, -528, 38, 154, 599, 2, 2, -300, 346, 331,
	-281, 215, -246, 145, -640, -279, -434, -365, -390, -425,
	428, 346, -352, 550, -289, -390, -367, 604, 187, 582,
	601, -352, -480, 592, -106, -106, -202, 604, 599, 582,
	582, 599, -528, -528, 600, 604, -244, -296, -281, 231,
	231, -288, -266, 600, 604, 601, 599, 582, 582, -210,
	350, -209, 146, 259, 244, 471, 472, 473, 474, 137,
	470, 124, -484, -208, -130, 187, 187, -65, 563, 501,
	-202, 603, 434, -265, -397, -397, -397, 458, 458, -265,
	-361, -292, -279, -296, -293, -318, 183, 183, -279, 539,
	-421, 347, 284, -467, -237, 571, -296, 603, -440, -440,
	150, 150, -440, -441, -441, -440, 150, 187, 599, -440,
	-451, 33, 33, 600, 604, -436, -440, -320, 600, 553,
	-357, -357, 600, 592, -520, 603, 600, -449, 147, -440,
	511, 297, 213, 295, -410, 295, -410, -410, -514, 5,
	-520, 592, -576, -285, 599, -265, 561, -356, 352, 600,
	-492, -490, -440, -440, -440, -440, -440, -514, -495, -495,
	-510, -510, -440, -445, -440, -492, -490, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, 139, 331, 340,
	-441, -446, -445, -440, -440, -490, 600, 600, 600, -372,
	-105, 599, 290, -384, 206, -440, -484, 604, -384, -384,
	600, -471, -471, 599, -440, 252, 598, 604, 606, 582,
	-351, 601, -463, -464, 598, 600, 604, 600, 604, -424,
	38, 600, -520, -434, -213, -212, 136, 53, 107, 134,
	336, -361, -361, 448, 349, 5, 8, 597, 598, 601,
	-514, 600, 600, 600, -361, -361, 448, -361, -242, -242,
	119, 316, -440, 517, 517, 60, 222, 154, 331, 547,
	-547, -542, 152, -440, 599, 231, 599, 599, 2, -233,
	-234, -235, 143, 461, 24, -620, 2, 545, 154, -242,
	154, -242, 567, -335, 599, 599, 517, 448, -258, 517,
	563, -372, -440, -203, 127, -519, -599, 603, -599, 603,
	448, 517, 517, 448, 517, 517, 331, 154, 563, 167,
	167, 569, -250, 563, -372, 517, -494, 48, 26, 331,
	-300, -242, 154, 517, 517, 529, 461, -528, 336, -13,
	-306, -526, -301, 461, 361, 418, -591, -362, -591, 203,
	-309, -615, -484, -207, 350, -206, 146, 430, 137, 259,
	224, -484, -205, 187, 243, 563, -301, 2, 600, 600,
	604, -548, 38, 344, 344, 599, -296, -86, 563, -483,
	-516, -595, 563, 43, -299, 38, 154, -592, -133, -301,
	-488, -489, 5, 38, -296, 154, 346, 331, -247, 266,
	-640, -524, -563, -357, -390, -379, 332, 91, 600, -434,
	-381, -365, -440, 2, 600, -200, -201, -528, -528, -528,
	-202, -214, -214, -432, -329, 599, -281, -266, 599, -214,
	-283, 2, -529, -528, -528, 604, 599, 582, 582, 582,
	582, -208, -484, -129, -133, 350, -296, 592, -397, -341,
	-340, 365, 340, -341, 438, 438, 347, 177, 262, -236,
	-280, -440, -440, 150, 33, 33, -440, -440, -451, 600,
	-440, -440, -372, 598, 5, -440, 600, 600, 8, -440,
	600, 601, -577, -265, -440, 600, 60, 600, 600, 604,
	604, 600, 600, 600, 600, 600, 600, 600, -446, 187,
	139, 340, 599, 600, 600, -105, -448, 209, 60, -471,
	-448, -448, -399, -361, -471, -438, -280, 597, -520, -516,
	-474, 599, 601, -212, 582, -528, -528, 563, -309, 598,
	2, 597, -520, 600, -309, 119, -282, -282, 501, 438,
	-250, 388, -431, 154, -549, 93, -551, 76, 169, 102,
	331, 336, 535, 388, 72, 127, 346, 405, -630, -631,
	-632, 38, 574, 575, 600, -359, -468, -562, 599, -265,
	-359, -361, 331, 490, 127, 346, 331, 127, 346, 558,
	119, 2, 529, 79, -282, -290, -361, -361, -296, -306,
	-526, 161, 600, 604, 582, 2, 592, 592, -306, -526,
	-301, -306, -526, -299, 154, -250, 363, 167, 161, 600,
	-280, 5, 5, 154, -277, 76, -282, 5, -282, -300,
	119, 448, 517, 517, 346, 346, 349, -611, -612, -205,
	604, 599, 582, 582, -205, -529, -129, 2, -351, -342,
	233, -282, -546, -543, -544, 388, -550, -552, 169, 388,
	-133, 2, -216, -215, -265, 5, 599, -327, 350, 598,
	-597, 350, -596, 117, 137, -526, -394, -133, -301, -351,
	600, 604, 148, -416, 545, -280, -296, 154, -248, 265,
	-640, -524, -245, -419, -417, 140, 599, 346, -133, -357,
	582, 600, 600, 119, 119, 225, 153, -359, 599, 599,
	-361, 119, 600, -209, -210, -528, -129, -528, -528, -208,
	-484, -66, -67, 231, 93, 370, -293, 501, 231, 599,
	599, -236, -440, -440, -440, 600, -357, -520, 592, -571,
	365, 600, -467, -440, -440, -441, 187, 599, -451, 600,
	-572, 562, -440, -385, -386, -440, 436, 108, 207, -572,
	-572, 600, -516, 2, -528, 2, 517, 597, 2, 187,
	222, 38, 408, -431, -290, -294, -287, -265, 169, 215,
	336, 558, -415, 257, 599, -441, 539, -296, 599, 2,
	214, 214, 30, 60, -633, 131, 236, 600, 604, -469,
	-276, -265, -440, -469, 600, 600, 336, 539, 336, 558,
	-440, 539, -490, 599, -242, -242, 600, 600, -440, 517,
	-519, 100, -517, 2, -599, -250, -279, -440, 517, 5,
	-242, -294, -242, -242, -277, 529, -306, -526, -301, -616,
	502, 455, 530, 449, 190, 437, -616, 183, -206, -207,
	-528, -129, -205, 38, -332, 235, 2, -548, 257, -287,
	257, -629, 563, 600, 604, 582, 582, -325, -217, -87,
	-88, 518, -483, 604, 599, 582, -351, 38, 5, 599,
	599, -265, 346, 599, -280, -260, 92, -640, -524, -246,
	-390, 332, -361, 93, -419, -447, -202, 599, 599, -330,
	81, 94, 128, 214, 191, 232, 482, 488, 28, -330,
	600, -359, -359, 600, 599, -202, 600, 604, 28, 599,
	28, 599, -296, -318, -372, -372, 600, -357, 60, 604,
	600, 600, -441, -451, 600, -573, -574, -285, 604, 599,
	599, 462, 598, -361, 2, -361, -250, 388, -265, -551,
	-287, 331, 545, -440, -441, -267, 599, -440, 599, 599,
	38, 127, 236, 132, 220, -430, -634, 101, 491, 223,
	-468, -236, 600, -429, 545, 405, -441, -277, -359, 599,
	599, 599, 582, 187, 599, -494, -242, -300, 517, 2,
	2, 187, -591, 600, -605, 403, -133, -336, -337, 222,
	599, -331, 346, 119, 316, -215, -517, -517, 600, 38,
	-88, 9, -596, -597, -440, 38, -133, -488, -359, -296,
	-359, 346, -252, -251, 274, -524, -247, 600, -290, -390,
	-529, -529, -429, 600, 600, -529, -67, -361, -361, 600,
	600, -578, 396, 439, 208, -372, -358, 600, 604, 38,
	-386, 2, 2, 2, 408, 154, 210, 600, -553, 289,
	-265, 600, -394, -394, 38, 132, 220, -332, 599, -237,
	-469, -332, 210, -296, -600, 545, 600, -344, -343, -340,
	-346, -345, -340, -372, -517, 100, 363, -372, -277, -361,
	-361, 346, -608, 188, -607, 5, 10, -217, 363, -360,
	-470, -282, 82, 119, -342, -133, 600, -133, 600, 600,
	-416, 600, -296, -249, -530, 408, 410, -640, -248, -434,
	600, 600, -430, -429, -338, -334, 600, 600, 600, 600,
	-579, -580, 50, 532, 109, -440, -579, -579, -574, -576,
	169, 563, -554, -557, -556, 579, 468, 188, 364, 600,
	490, 557, 600, 600, -338, -361, 563, -351, -440, -429,
	600, 604, 550, 600, 604, 550, 600, 187, 600, -242,
	-613, 563, -242, -616, -204, 563, 46, -331, -296, 600,
	604, 387, 133, 143, -332, -629, -429, 599, -430, 599,
	-257, -256, -640, -510, -260, 140, -202, -202, -332, -430,
	-218, 563, -202, -581, 152, -580, 384, 182, 438, 384,
	182, -581, -581, -287, 55, -556, 579, -557, 579, 539,
	133, -633, 600, 55, -553, -332, -343, 222, -345, 187,
	363, 203, 187, 446, -607, 30, -259, -258, 599, -470,
	439, 439, 2, -336, -331, -430, -359, -332, -359, -253,
	-254, -255, -361, -252, 332, 539, -338, -332, -434, 109,
	206, 512, 316, 33, 582, -555, 316, 425, 64, 461,
	-555, -434, 582, -554, 599, 599, 349, -361, 350, -361,
	2, -217, -332, 600, -338, 600, -249, 461, -218, -338,
	438, 354, -580, -440, 23, 336, 127, -440, -633, -372,
	-372, -242, -201, 599, 600, -331, -338, -429, -218, -430,
	-257, -380, -434, -218, 600, 600, -201, -243, 64, 425,
	-259, -218, -430, -434, -332, -253, -434, -434, -333, -334,
	517, 600, -434, -332, -338, 599, -338, -218, -372, -218,
	-434, 600, -434, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 553, 554, 556, 557, 558, 560,
	561, 563, 565, 567, 568, 569, 571, 572, 574, 575,
	576, 577, 578, 580, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	649, 651, 0, 1408, 1410, 1412, 1414, 0, 804, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 0, 369,
	371, 372, 374, 376, 377, 378, 380, -2, 0, 486,
	487, 489, 491, -2, 0, 1011, 1013, 0, 638, 640,
	0, 1016, 1018, 0, 0, 661, 662, 0, 1519, -2,
	653, 655, 657, 659, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 748, 750, 752, 754, 756, 758,
	759, 761, 763, 765, 766, 768, 769, 771, 773, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	-2, 798, 799, 800, -2, -2, 0, -2, -2, -2,
	1426, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 430, 432, 434, 436, 438, 441, 443, 445, 1577,
	493, 495, 497, 499, 501, 503, 505, 0, -2, 1591,
	0, 0, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 109, 110, 111, 112, 113, 114, 115,
	116, 75, 76, 77, 79, 80, 81, 82, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 107, 73,
	0, 0, 1550, 1552, 1554, 1556, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 27,
	29, 555, 559, 562, 564, 566, 570, 573, 579, 581,
	583, 538, 539, 542, 2286, 2304, 2305, 2306, 2309, 2310,
	2311, 2312, 2313, 2314, 2765, 2847, 2848, 2336, 2337, 2338,
	2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348,
	2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 540, 541, 1197, 0,
	607, 605, 2271, 608, 2563, 610, 612, 480, 481, 482,
	483, 484, 485, 0, 631, 621, 1589, 632, 634, 635,
	636, 637, 602, 600, 0, 631, 2340, 629, 1406, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 409, 1255, 1256, 1257, 1391, 1392, 2610, 1433, 0,
	234, 650, -2, -2, 2730, -2, 684, 685, -2, -2,
	699, 702, 694, 2734, 0, 2613, 2597, -2, 705, 1409,
	1411, 1413, 802, 803, 2290, 0, 0, 0, 0, 0,
	38, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 244, -2, -2, -2, -2, 0, 0, 2658, 2392,
	2239, 2306, 2242, 2237, 338, 340, 342, 343, 0, 0,
	0, 0, 0, 0, 370, 373, 375, 379, -2, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1074, 1066, 1067, 1313, 0, 0, 0, -2,
	488, 490, 543, 544, 0, 1578, 1578, 551, 552, -2,
	0, 0, 0, 0, 308, 296, 1012, 1014, 1015, 0,
	0, 0, 0, 639, 641, 0, 0, 276, 1017, 1019,
	1020, 0, 0, 0, 0, 0, 310, 0, 0, 654,
	656, 658, 660, 730, 732, 734, 736, 738, 740, 742,
	744, 746, 749, 751, 753, 755, 757, 760, 762, 764,
	767, 770, 772, 774, 776, 778, 780, 782, 784, 786,
	788, 790, 792, 794, 796, 797, 810, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 907, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 992, 0, 0, 813, 815, 816, 817, 818, 0,
	880, 905, 906, 916, 801, 0, 1237, 1579, 1435, 1416,
	1430, 1435, 1418, 1419, 1420, 1421, 1422, 1427, 1429, 1423,
	1424, 1425, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 60, 431, 433, 435, 437, 439, 442, 444, 446,
	-2, 1548, 1549, 494, 496, 498, 500, 502, 504, 506,
	642, 0, 644, 0, 814, -2, 0, 1583, 1583, 1583,
	0, 0, 1549, 1547, 0, 647, 648, 709, 710, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 1941,
	0, 711, -2, 1974, 1976, 2705, 2536, 2730, 2112, 1978,
	1979, 1980, 1981, 1982, 0, 1984, 1985, 1986, 1987, 1988,
	1989, 0, 1991, 0, 1996, 1997, 1998, 0, 2712, 2216,
	2300, -2, 0, 0, 2718, 2296, 0, 2079, 2014, -2,
	-2, 2323, 2302, 1785, 1786, 1787, 1788, 1789, -2, -2,
	2748, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 0, 2693, 2713, 2714, 2719, 2721, 2715, 2702,
	2039, 2406, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1812, 1821, -2, -2, -2,
	-2, -2, -2, -2, 2706, 2707, 2724, 2727, 2733, 2738,
	2739, 2711, 2720, 2747, 2749, 2750, 2751, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764,
	1813, -2, -2, -2, -2, 1566, 2577, 1569, 1197, 1567,
	1551, 1553, 0, 1555, 0, 0, 0, 1560, 1586, 1584,
	0, 1635, 1564, 1565, 1655, 1655, 1679, 0, 1660, 0,
	1679, 1578, 1706, 0, 1666, 2602, 2015, 2016, 0, 2306,
	2301, -2, -2, 2745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 603, 0, 609, 611, 0, 0, 0,
	630, 1588, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 414, 415, 416, 2713, 0, 0, 0, 421, 0,
	423, 424, 425, 426, 427, 428, 429, 205, 2713, 511,
	536, 0, 205, 2713, 514, 205, 2713, 517, 0, 520,
	1311, 205, 2713, 523, 2267, 205, 2713, 526, 528, 2275,
	205, 2713, 532, 2282, 2280, 533, 2713, 535, 313, 311,
	312, 2319, 2320, 2327, 2328, 2329, 2330, 2746, 2748, 1402,
	1403, 1404, 1405, 0, 1432, 1312, 652, 0, 678, 0,
	682, 683, 2701, -2, 0, 2622, 687, 688, -2, 690,
	1436, 1440, 1441, 1442, 1443, 1444, 0, 0, 0, 0,
	1449, 0, 0, 0, 0, 679, 680, 697, 698, 703,
	706, 0, 805, 806, 807, 808, 809, 72, 0, 2713,
	1706, 74, 0, 2261, 2331, 2332, 2333, 2334, 2335, 2766,
	2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776,
	2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786,
	2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796,
	2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806,
	2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816,
	2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826,
	2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836,
	2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	78, 0, 2713, 83, 0, 2713, 0, -2, 96, 0,
	108, 0, 2264, 117, 0, 2713, 0, 2236, -2, 0,
	217, 297, 298, 299, 0, 1041, -2, 2713, 1249, 1251,
	1251, 0, -2, 0, 0, 0, 1002, 2233, 2238, 1003,
	2257, 1004, 2243, 0, 344, 345, 346, 347, 348, 0,
	349, 2713, 351, 352, 0, 354, 355, 2713, 357, 358,
	0, 360, 0, 256, 262, 2713, 2713, 383, 385, 0,
	387, 388, 0, 390, 0, 0, 0, 394, -2, 410,
	0, 407, 397, 398, 400, 401, 402, 403, 404, 0,
	450, 448, 2272, 0, 0, -2, 2713, 0, 1038, 0,
	0, 1291, -2, 2713, 1242, 0, 1298, 2713, 1294, 0,
	-2, 0, 1576, 2713, 1453, 1070, 1071, 1072, 1073, 1718,
	477, 0, 1484, 0, 1486, 0, 1505, 1712, 1655, 0,
	0, 1717, 0, -2, 596, 2289, -2, 546, 0, 547,
	0, -2, 0, 325, 0, 0, 1021, 1023, 1024, 1026,
	1027, 1030, 1031, 1032, 1033, 1692, 277, 279, 0, 0,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 0,
	0, 663, 0, 0, 811, 812, 0, 0, 823, 824,
	825, 0, 325, 2614, 2572, 2427, 832, 0, 835, 838,
	-2, 0, 0, 0, 0, 842, 0, 847, 848, 849,
	0, -2, 0, 856, 858, 1010, 860, 0, 0, 862,
	0, 866, 0, 869, 0, 871, 0, 873, -2, -2,
	-2, 881, 882, -2, 887, -2, 0, 891, -2, 0,
	894, 0, 897, -2, 0, 907, 903, 904, 0, 0,
	0, 0, 924, 925, 0, 934, 0, 937, 938, 939,
	0, 943, 944, 0, 946, 947, 948, 949, 0, 2685,
	2619, 2392, 0, 955, -2, 961, 963, 0, -2, 0,
	979, 0, 983, 0, 0, 991, 0, 0, 819, 820,
	205, 1710, 1415, -2, 1417, 0, -2, 0, 643, 0,
	646, 1608, 1534, 1531, 0, 1605, 1606, 1535, 0, 0,
	0, 1542, 0, 1581, 1582, 0, 0, 0, 1521, 1522,
	0, 0, 0, 0, 2118, 2119, 2120, 2121, 2134, 2122,
	2123, 2133, 2131, 2132, 2124, 2125, 2130, 2144, 2145, 2135,
	2136, 2126, 2139, 2137, 2138, 2140, 2141, 2142, 2143, 0,
	0, 2149, 0, 2127, 2128, 2129, 2157, 0, 0, 2158,
	0, 2160, 0, 2150, 2146, 2147, 2148, 0, 1920, 1922,
	2224, 0, 0, 0, 2156, 2151, 2152, 1858, 1859, 1860,
	1861, 1862, 1895, 1899, 1900, 0, 0, 1975, 2221, 2220,
	1977, 0, 0, 2172, 0, 1990, -2, 0, 2113, 2167,
	0, 0, 1999, 2000, 2001, 0, 0, 2172, 0, 0,
	2215, 2011, 2012, 1850, 0, 0, 2081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 1798, 0, 1800, 0,
	1801, 1802, 1809, 1822, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 2196, -2, 0, 0,
	0, 0, 1814, 0, 1568, 0, 0, 1639, 2225, 2229,
	2230, 1639, 1639, 0, 0, 2173, 1703, 1703, 0, 0,
	1698, 1698, 1698, 1696, 1679, 0, 1679, 1689, 0, 1679,
	1679, 0, -2, 1660, 0, 0, 1689, 0, 1673, 584,
	586, 588, 590, 591, 592, 594, 1707, 1708, 0, 0,
	0, 0, 2307, 0, 0, 0, 0, 2279, 0, 0,
	2292, 0, 366, 0, 0, 0, 2668, 2613, 0, -2,
	614, 633, 1578, 0, 2175, 1733, 1737, 0, 1739, 1740,
	1741, 1742, 1743, 0, 0, 1734, -2, 1810, 1812, 1833,
	2324, 2325, 2326, 1793, 1794, 1795, 1796, 1797, 1805, 1792,
	1792, 1792, 1803, 1832, 1824, 1832, 1828, 1778, 1779, 1780,
	1815, 1816, 1817, 1818, 0, 2668, 2613, 0, -2, 623,
	0, 0, 1516, 411, 0, 418, 419, 420, 0, 507,
	0, 203, 204, 0, 205, 2713, 512, 0, 515, 0,
	205, 2713, 2231, 521, 0, 524, 0, 0, 530, 0,
	0, 0, 0, 0, 205, 1518, 0, 0, 0, 0,
	-2, 692, 700, 701, 224, 225, 0, 1438, 0, 1445,
	720, 721, 722, 1447, 1448, 0, 1450, 695, 723, 724,
	725, 726, 727, 728, 0, 2245, 2246, 2247, 2248, 2251,
	2252, 0, 0, 693, 713, 696, 0, 707, 118, 1388,
	0, 0, 161, 0, 1388, 1388, 0, 0, 0, 0,
	188, 0, 1109, 0, 0, 0, 0, 133, 146, 157,
	130, 131, 0, 0, 0, 0, 0, 0, 84, 1219,
	0, 1222, 0, 0, 0, 0, 0, 0, 0, 1235,
	0, 0, 0, 0, 0, 98, 99, 0, 0, 104,
	105, 0, 145, 0, 0, 0, 0, 0, 1481, 0,
	140, 120, 0, 0, 133, 147, 159, 0, 192, 194,
	1106, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	226, 0, 0, 0, 1243, 0, 0, 0, 1575, 0,
	0, 0, 0, 2713, 1386, 0, 1371, 0, 1692, 2476,
	-2, -2, 277, 1692, 1001, 0, 0, 2307, 2241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 389,
	391, 392, 393, 0, 1290, 0, 399, 440, 1168, 2713,
	0, 0, 467, 462, 0, 464, 0, 0, 0, 1218,
	2713, 1216, 2276, 0, 1240, 0, 1197, 2713, 2274, 0,
	0, 0, 1299, 2316, 1308, 1312, 1471, 0, 479, 0,
	1487, 1489, 0, 0, 1713, 0, 1715, 1655, 1578, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 1691, 0, 0, 1692, 277, 2588,
	325, 325, 1692, 665, 1692, 667, 0, 0, 826, 827,
	0, 325, 325, 325, 833, 834, 836, 837, -2, -2,
	-2, -2, 839, 840, 931, 0, 0, 0, 930, 850,
	0, 852, 855, 859, 0, 995, 2597, 2613, 2668, 1008,
	931, 2392, 931, 2392, 931, 2392, 870, 872, 875, 919,
	927, 886, 893, 0, 888, 892, 895, 898, 0, 900,
	908, 0, -2, 0, 911, 0, 913, 0, 915, 931,
	932, 935, 942, 945, 950, 951, 952, 953, 2287, 954,
	-2, 958, 959, 0, 970, 975, 976, 972, 0, 0,
	0, 0, 0, 0, 986, 987, 0, 0, 994, 1236,
	0, 1428, 1608, 1534, 645, 1525, 1607, 1526, 1533, 1536,
	0, 0, 1538, 0, 1540, 0, 1603, 1604, 1611, 1612,
	0, 1622, 1623, 1615, 0, -2, 0, 0, 1618, 1619,
	1544, 0, 1561, 1562, 1563, 1592, 1595, 1327, 0, 2847,
	1854, 1728, 1855, 1856, 2260, 0, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, -2, -2, -2, -2,
	-2, -2, -2, -2, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, -2, -2, -2, 1896, 1897,
	1898, -2, 2159, 2161, 0, 2224, 0, -2, 0, -2,
	-2, -2, -2, 1917, 0, 1919, 1924, 1926, 1928, 0,
	0, 0, 0, 2223, 1938, 2207, 2208, 0, 0, 2115,
	2116, 2117, 1923, 0, 1942, 2222, 2219, 0, 0, 2153,
	0, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 0, 2171, 1591, 2003, 0, 0,
	0, 0, 2010, 1995, 2169, 0, 2168, 0, 0, 0,
	2179, 0, 2214, 2210, 0, 2258, 1849, 1836, 1837, 1838,
	1839, 1840, 1841, 1851, 0, 2255, 2293, 2299, 2089, 0,
	0, 0, 2040, 2041, 2042, 2043, 2044, 0, 2046, 2047,
	0, 2049, 2050, 0, 2052, 2053, 0, 2055, 2056, 2057,
	2058, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 0, 0, 2061, 0, 2182, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2063, 0, 2065, 2173, 2193,
	0, 0, 1943, 0, 0, 0, 0, 2113, 0, 2068,
	2173, 2201, 0, 0, 0, 0, 0, 2173, 0, 2206,
	0, 2075, 0, 2077, 1570, 0, 0, 1723, 0, 0,
	0, 2228, 1723, 1723, 0, 1634, 0, 0, 1699, 1700,
	1701, 1702, 0, 0, 1703, 0, 1693, 1697, 1694, 1695,
	1689, 1652, 0, 0, 2262, 1689, 1658, 1688, 0, 1197,
	1678, 1689, 1689, 0, -2, 1662, 1679, 0, 0, 585,
	587, 589, 593, 595, 0, 0, 1591, -2, 0, -2,
	327, 1196, 0, 0, 0, 0, 0, 604, 606, 0,
	0, 527, 0, 0, 620, 0, 598, 0, 601, 0,
	1724, 1727, 0, 0, 1738, 1744, 1745, 0, -2, 0,
	0, 1834, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 422, 537, 205, 509, 0, 205, 205, 518, 0,
	0, 205, 529, 205, 2283, 205, 2281, 314, 534, 1517,
	237, 0, 681, 0, 1437, 1446, 0, 717, 0, 719,
	0, 2249, 2253, 2250, 2254, 0, 708, 0, 0, 0,
	0, 1387, 0, 1334, 0, 0, 165, 2713, 0, 207,
	0, 0, 1161, 2268, 0, 1151, 0, 0, 2413, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 1221, 1223,
	1230, 1232, 0, 1226, 2256, 0, 0, 1227, 0, 1229,
	1231, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 1252, 0, 0, 1253, 1254, 1459, 1460, 0,
	1480, 1481, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 2235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 1286, 1284,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	0, 0, 0, -2, 1247, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 316, 2234, 2244,
	0, 1028, 1029, 350, 353, 356, 359, 243, 0, 0,
	395, 0, 0, 1076, 1051, 0, 0, 449, 325, 0,
	0, 463, 467, 2285, 1036, 221, 222, 223, 1214, 1217,
	0, 1197, 2713, 1263, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 2713, 2263, 2315, 2316, 1473, 1481, 0,
	1723, 0, 1503, 1490, 0, 0, 0, 1503, 1507, 1508,
	1510, 1511, 0, 0, 1714, 1720, 545, 597, 1578, 1578,
	325, 323, 2539, 321, 318, 320, 0, 0, 0, 1077,
	1079, 1080, 1081, 207, 0, 2316, 1151, 2465, 2316, 0,
	1493, 1495, 0, 0, 0, 271, 0, 280, 1692, 278,
	283, 0, 0, 0, 461, 664, 669, 821, 0, 325,
	829, 830, 831, 877, 921, 929, 974, 841, 843, 844,
	845, 0, 0, 0, 1009, 1005, 1006, 1007, 861, 931,
	864, 931, 867, 931, 890, 896, 909, 902, 910, 0,
	0, 0, 923, 940, 0, 957, 0, 0, 0, 0,
	0, 0, 0, 980, 981, 982, 984, 989, 988, 993,
	1711, 1529, 1530, 1532, 0, 1541, 0, 0, 1617, -2,
	-2, 1616, 1620, 1621, -2, -2, -2, -2, 1537, 0,
	1546, 1543, 0, 1602, 1325, 1326, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1939, 0, -2, 1918, 1921,
	1925, 1927, 1929, 0, 0, 0, 0, 0, 0, 2162,
	0, 2164, 1940, 2217, 2220, 2155, 0, 2111, 0, 0,
	1590, 1591, 1591, 0, 2009, 0, 2170, 0, 2177, 2178,
	0, 2002, 0, 2211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2013, 0, 0, 0, 0, 2045, 2048,
	2051, 2054, 0, 0, 0, 0, 2034, 0, 0, 0,
	2038, 1804, 1790, 0, 1832, 1830, 1831, 1825, 1832, 1829,
	1782, 0, 1781, 0, 2060, 0, 2062, 2064, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 1947, 1948, 1968, 2067,
	2199, 2200, 0, 0, 0, 0, 0, 0, 2073, 0,
	2205, 2074, 2076, 1578, 0, 1571, 0, 1636, 1625, 1722,
	0, 2226, 1692, 1638, 1640, 2227, 2265, 1625, 1625, 0,
	2174, 0, 0, 1683, 0, 0, 0, 1685, 1656, 0,
	0, 1650, 0, 1644, 1645, 1646, 1647, 1648, 1649, 1657,
	1197, 1687, 1659, 1663, 2293, 0, 1689, 0, 1674, 0,
	1676, 1709, 0, 1668, 1671, 0, 0, 2308, 1723, 0,
	361, 367, 368, 362, 363, 364, 365, 613, 0, 0,
	0, 0, 0, 2176, 0, 1729, 0, 1735, 0, 0,
	0, 0, 622, 0, 0, 0, 0, 1515, 417, 508,
	205, 513, 516, 2232, 205, 522, 525, 531, 233, 0,
	677, -2, 715, 716, 718, 0, 714, 162, 1388, 0,
	0, 1330, 1332, 1336, 1342, 1345, 0, 167, 2713, 179,
	0, 1125, 0, 2266, 0, 0, 0, 0, 0, 0,
	1390, 0, 0, 2713, 205, 2713, 205, 182, 184, 187,
	0, 191, 189, 0, 1113, 0, 0, 1116, 119, 1388,
	0, 0, 122, 126, 134, 135, 138, 0, 0, 0,
	144, 0, 0, 0, 1347, 1351, 1359, 0, 0, 0,
	1224, 1225, 1228, 1234, 85, 0, 0, 0, 1355, 1357,
	1363, 97, 100, 2713, 2277, 102, 2713, 0, 1329, 0,
	0, 0, 0, 193, 124, 128, 136, 137, 139, 0,
	1365, 121, 0, 220, 0, 0, 210, 205, 2713, 0,
	212, 0, 213, 214, 227, 0, 0, 0, 1039, 1040,
	1285, 1238, 1239, 0, 1250, 1244, 0, 0, 0, 0,
	0, 1367, 1368, 0, 0, 0, 1386, 1383, 1692, 239,
	0, 1692, 247, 0, 2240, 0, 263, 382, 0, 0,
	0, 0, 1075, 1179, 0, 1046, 0, 0, 0, 455,
	451, 0, 460, 466, 465, 471, -2, 0, 0, 0,
	0, -2, 0, 0, 1301, 1295, 1296, 0, 0, 0,
	0, 2713, 1475, 1481, 0, 1576, 1591, 478, 1482, 1503,
	0, 0, 0, 1492, 1488, 1485, 1723, 0, 0, 0,
	0, 0, 1716, 1719, 548, 549, 300, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 1082, 1086, 0, 2316,
	2316, 0, 2270, 0, 0, 0, 0, 0, 0, 281,
	0, 284, 0, 0, 0, 289, 290, 291, 292, 293,
	294, 0, 283, 273, 1692, 0, 0, 666, 0, 0,
	828, 0, 851, 854, 863, 865, 868, 912, 914, 931,
	941, 964, 965, 1103, 0, 1103, 0, 0, 985, 1539,
	0, 1614, 1545, 1596, 1597, 0, 1327, 0, 1857, 1902,
	0, 0, -2, 0, 0, 1906, 0, 0, 0, -2,
	0, 0, 0, 2163, 2165, 0, 2219, 2154, 2004, 0,
	0, 0, 2008, 1992, 1993, 0, 2114, 2180, 2209, 2213,
	0, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 0, 2259,
	2294, 2298, 2087, 2088, 2092, 2273, 0, 0, 0, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 1827,
	0, 0, 2181, 2192, 2194, 1944, 1945, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, -2, -2, -2,
	1962, 1963, 1964, -2, -2, -2, 1969, 0, 0, 0,
	2195, 2197, 2198, 2202, 2203, 0, 2070, 2071, 2072, 2204,
	0, 1578, 1572, 1633, 0, 1721, 1637, 0, 1633, 1633,
	1585, 1681, 0, 0, 1705, 0, 1653, 0, 1654, 0,
	1686, 0, 1661, 1664, 1665, 1675, 0, 1667, 0, 1670,
	0, 2004, -2, 326, 328, 330, 0, 333, 334, 0,
	0, 616, 617, 0, 615, 599, 0, 0, 1731, 0,
	0, 1807, 1811, 1835, 625, 626, 0, 624, 510, 519,
	235, 0, 1690, 0, 0, 0, 0, 0, 0, 206,
	1123, 1160, 0, 0, 0, 1150, 0, 0, 1166, 169,
	170, 171, 0, 0, 0, 0, 180, 0, 0, 177,
	0, 186, 190, 1110, 0, 0, 0, 0, 1335, 0,
	0, 0, 141, 142, 143, 0, 148, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1465,
	1466, 0, 1456, 0, 0, 0, 208, 0, 0, 0,
	1324, 229, 0, 0, 0, 0, 0, 1288, 1289, 1246,
	1348, 1352, 1360, 0, 0, 0, 0, 631, 0, 636,
	1385, 0, 247, 245, 0, 248, 0, 251, 252, 0,
	254, 247, 241, 0, 0, 0, 1197, 396, 1049, 1167,
	0, 1169, 0, 1047, 0, 0, 1168, 447, 0, 454,
	0, 468, 0, 0, 1218, 0, 0, 1241, 1261, 1197,
	0, 1300, 1302, 0, 1310, 0, 0, 0, 1477, 1481,
	0, 1470, 1471, 1610, 1483, 1501, -2, 0, 0, 1591,
	1509, 1506, 1512, 1513, 0, 322, 0, 317, 319, 0,
	303, 0, 0, 1078, 1083, 0, 0, 0, 0, 0,
	1494, 1496, 0, 1022, 1025, 0, 0, 0, 0, 0,
	0, 272, 283, 1692, 309, 0, 822, 846, 922, 966,
	1102, 0, 0, 968, 0, 0, 1613, 1600, 1601, 1598,
	1327, 1904, 1908, 0, 0, 0, 1910, -2, 0, 1932,
	-2, -2, 2166, 2218, 1983, 1591, 2005, 2007, 1994, 2212,
	1852, 0, 2094, 2091, 0, 2078, 0, 2029, 2030, 0,
	0, 2033, 2035, 2036, 2037, 1791, 1784, 1783, 2191, 0,
	0, 0, 0, 2069, 1573, 0, 2083, 0, 0, 1641,
	2083, 2083, 1682, 0, 1684, 1651, 1642, 0, 2294, 1677,
	1669, 0, 0, 331, 0, 335, 336, 0, 0, 1725,
	1730, 0, 1736, 1806, 0, 236, 163, 164, 1339, 1343,
	1340, 0, 166, 0, 1124, 0, 1127, 0, 0, 0,
	0, 1134, 1151, 0, 0, 0, 0, 0, 0, 1153,
	0, 1152, 0, 0, 1183, 0, 1315, 1322, 0, -2,
	0, 0, 0, 173, 196, 0, 0, 0, 0, 199,
	1389, 175, 0, 0, 205, 205, 0, 0, 1331, 1333,
	1346, 0, 0, 0, 0, 151, 0, 0, 1349, 1353,
	1361, 1356, 1358, 1364, 0, 103, 0, 1467, 0, 0,
	1366, 218, 219, 0, 205, 0, 205, 211, 205, 1324,
	0, 0, 0, 0, 0, 0, 0, 1369, 1370, 238,
	0, 0, 0, 0, 240, 315, 247, 384, 0, 1097,
	0, 1179, 1171, 1172, 1173, 0, 1178, 1180, 0, 0,
	1063, 1048, 0, 1059, 0, 0, 1076, 1051, 0, 452,
	469, 0, 472, 0, 475, 1037, 1215, 1258, 1197, 0,
	1292, 0, 0, 0, 0, 0, 0, 0, 1479, 1481,
	0, 1472, 1473, 1503, 1609, 0, 0, 0, 1491, 1610,
	0, 324, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 285, 0, 286, 287, 288, 295, 274,
	275, 668, 670, 0, 0, 676, 1101, 0, 0, 0,
	0, 1599, 1912, -2, -2, 1933, 0, 2295, 2297, 1591,
	0, 2080, 1593, 0, 0, -2, 0, 0, 0, 1574,
	1557, 0, 1632, 1624, 1626, 1628, 2600, 2387, 2712, 1558,
	1559, 1704, 0, 1672, 332, 618, 0, 0, 1732, 0,
	0, 0, 1341, 168, 0, 1128, 1129, 2269, 1131, 0,
	1133, 1135, 1136, 1137, 0, 1140, 0, 2318, 0, 1145,
	1148, 1149, 0, 0, 1162, 1184, 0, 1193, 0, 1317,
	1327, 1321, 0, 1319, 1195, 0, 172, 198, 174, 200,
	195, 0, 1324, 0, 176, 185, 0, 0, 123, 0,
	0, 2381, 154, 152, 150, 101, 1328, 125, 0, 220,
	228, 1323, 230, 215, 205, 0, 1350, 1354, 1362, 0,
	1377, 1378, 1379, 1380, 0, 0, 0, 0, 249, 0,
	250, 253, 0, 0, 1112, 0, 1050, 1170, 0, 1181,
	1182, 1053, 0, 1052, 0, 0, 0, 0, 0, 453,
	456, 0, 459, 0, 0, 0, 0, 0, 1303, 1301,
	0, 1309, 0, 0, 0, 1455, 0, 0, 1474, 1475,
	476, 1497, 0, 0, 1503, 1514, 302, 0, 0, 1084,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1085,
	1195, 0, 0, 1159, 0, 307, 282, 0, 672, 0,
	674, 0, 967, 969, 0, 0, 2006, 2098, 0, 0,
	2031, 2032, -2, 0, 1972, 2082, 2084, 0, 0, 0,
	0, 0, 1643, 619, 1726, 627, 1337, 0, 1344, 1126,
	1130, 0, 0, 0, 1141, 1201, 0, 0, 1218, 1218,
	1154, 0, 0, 1187, 1188, 1097, 0, 1189, 1190, 1191,
	1316, 1602, 1322, 1097, 0, 0, 197, 202, 0, 0,
	0, 0, 0, 0, 0, 209, 231, 1324, 0, 1381,
	1382, 0, 0, 246, 267, 0, 1259, 1051, 1111, 0,
	0, 1061, 0, 1064, 0, 1060, 1057, 1058, 1049, 0,
	457, 458, 473, 0, 474, 0, 1262, 0, 0, 1310,
	0, 0, 1462, 1454, 1481, 1476, 1477, 1723, 1500, 1504,
	0, 0, 1193, 1195, 1108, 0, 671, 0, 0, 977,
	978, 0, 0, 0, 0, 2093, 1594, 1973, 0, 0,
	1627, 1629, 1630, 1631, 1338, 0, 0, 1139, 1206, 0,
	0, 0, 0, 0, 1155, 1185, 1186, 1108, 0, 1320,
	1318, 1164, 0, 1197, 178, 0, 1195, 0, 1117, 0,
	0, 1120, 0, 0, 155, 2381, 153, 0, 205, 1374,
	205, 0, 270, 0, 261, 259, 260, 1053, 0, 0,
	1175, 1177, 0, 1065, 1097, 1063, 470, 1260, 1293, 1195,
	0, 1193, 0, 1469, 1481, 1463, 1464, 0, 1479, 0,
	325, 325, 1097, 1193, 1051, 1107, 325, 673, 675, 2090,
	2110, 2099, -2, 2671, 2388, 0, 2110, 2110, 2085, 2086,
	0, 0, 1142, 1202, 1203, 0, 1198, 1199, 1200, 2317,
	1143, 1144, 1146, 1147, 1183, 0, 0, 1201, 201, 1097,
	1114, 0, 0, 1115, 0, 0, 158, 0, 160, 232,
	1372, 0, 1375, 0, 255, 0, 0, 1045, 0, 1174,
	0, 0, 0, 0, 1112, 1053, 1193, 0, 1097, 0,
	1458, 1468, 0, 1478, 1455, 0, 304, 305, 1108, 1097,
	1723, 0, 306, 2095, 0, 0, 2101, 2102, 2103, 2104,
	2105, 2096, 2097, 1132, 0, 1204, 0, 1205, 0, 0,
	0, 1723, 1192, 0, 1206, 183, 1118, 0, 1121, 0,
	156, 0, 0, 0, 265, 266, 1042, 1044, 0, 1176,
	1054, 0, 1056, 1051, 1062, 1097, 0, 1108, 0, 1451,
	1457, 1461, 2278, 1462, 1498, 0, 1051, 1108, 1158, 0,
	2107, 2108, 0, 0, 0, 1207, 0, 1210, 1211, 0,
	1208, 1163, 0, 1183, 0, 0, 1373, 205, 0, 0,
	1055, 1053, 1108, 1195, 1051, 1193, 1469, 0, 1723, 1051,
	2106, 2109, 2100, 1138, 1209, 1212, 1213, 1194, 1165, 0,
	0, 1376, 268, 0, 1100, 1045, 1051, 1193, 1723, 1097,
	1458, 1723, 1156, 1723, 1105, 0, 0, 1096, 1098, 1099,
	1043, 1723, 1097, 1306, 1108, 1452, 1499, 1157, 1119, 1104,
	0, 269, 1304, 1108, 1051, 0, 1051, 1723, 0, 1723,
	1307, 1105, 1305, 1122,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 588, 3, 594, 589, 3,
	599, 600, 592, 590, 604, 591, 601, 593, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 607, 3,
	580, 582, 581, 585, 603, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 597, 3, 598, 595, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 605, 587, 606, 583,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 584, 57923, 586, 57924, 596,
	57925, 602, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1502
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1691
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1787
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1843
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1852
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1873
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1881
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1905
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1918
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1935
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1954
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1961
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1969
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1989
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1997
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2018
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2028
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2037
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2048
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2054
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2085
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2176
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2219
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2222
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2228
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2463
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2467
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2470
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2495
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2515
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2546
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2630
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2638
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2800
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2847
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3038
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3079
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3088
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3094
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3099
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3104
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3109
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3114
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3118
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3145
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3221
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3235
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3255
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3344
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3405
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3425
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3430
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3449
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
			return helpWith(sqllex, "CREATE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3463
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplemented(sqllex, "create access method")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplemented(sqllex, "create cast")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "create publication")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "create rule")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "create server")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3488
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3489
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3492
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3493
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3496
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3497
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplemented(sqllex, "drop server")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3566
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3575
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3609
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3644
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3679
		{

			sqlVAL.union.val = nil
		}
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "DELETE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3766
		{
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3792
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DROP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3992
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4058
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4074
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4082
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4090
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "DELETE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "INSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "INSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4171
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4179
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4204
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4294
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4309
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "GRANT")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4372
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4384
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4428
		{
			return helpWith(sqllex, "RESET")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "USE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4457
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4458
		{
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			return unimplemented(sqllex, "set from current")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4692
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4697
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4706
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4723
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4728
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = tree.Low
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = tree.Normal
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = tree.High
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4908
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4912
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4917
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4927
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4944
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.str = "client_encoding"
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.str = "timezone"
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4960
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4978
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5041
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5050
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5089
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5100
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5150
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5190
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5203
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = true
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = true
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5374
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5431
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5433
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5437
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = true
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = false
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5452
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5457
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5498
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5503
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = true
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = false
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5550
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5561
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5583
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5611
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5616
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5621
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5626
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5634
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5644
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5648
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5650
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5654
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5694
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5702
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5728
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5733
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5737
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5746
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5769
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5781
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5840
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5850
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5857
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5864
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5997
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6040
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6049
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6110
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6153
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6193
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6228
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6295
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6311
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6340
		{

			sqlVAL.union.val = nil
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6346
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.str = ""
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = nil
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6379
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6383
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6409
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6423
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6438
		{
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6439
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6440
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6521
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6532
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6545
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6566
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.str = ""
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6709
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6813
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{

			sqlVAL.union.val = true
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = false
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6868
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6872
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6875
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6975
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6986
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7003
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7013
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7093
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7094
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7095
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7096
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7097
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7098
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7254
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7263
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7271
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7282
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7287
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7306
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7309
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7349
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7383
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.str = ""
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = true
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7417
		{

			sqlVAL.union.val = true
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = false
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7432
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7446
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7458
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7470
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7480
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7490
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = nil
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7600
		{
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7601
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7626
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7628
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7630
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7632
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7634
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7636
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7674
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7692
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7711
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7728
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7745
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7749
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = false
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = true
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = false
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = true
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = false
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7803
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7809
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7815
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.str = ""
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.str = ""
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7882
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7888
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8113
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8119
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8131
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8137
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8151
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8157
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8216
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = true
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = false
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = tree.Types
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8276
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8280
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8305
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8308
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8309
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8320
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8338
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8368
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8376
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8397
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8405
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8416
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8420
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8421
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8441
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8446
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8475
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8492
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8495
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8496
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8524
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8539
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8543
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8632
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.str = ""
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8655
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8677
		{

		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8692
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.str = ""
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.str = ""
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.str = ""
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.str = ""
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8747
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8760
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8761
		{
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8790
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8808
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8821
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8870
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8897
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8901
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8971
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8992
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9007
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9151
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9188
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9309
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = true
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = false
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9362
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9363
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = nil
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9376
		{
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9377
		{
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = true
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = false
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = false
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9406
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9407
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9410
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9411
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9473
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9478
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9537
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9593
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9596
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9663
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9665
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9680
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9702
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9712
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9745
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9764
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9805
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9815
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9861
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9891
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9924
		{
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9926
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = nil
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = true
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = false
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.str = tree.AstFull
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.str = tree.AstRight
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.str = tree.AstInner
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10043
		{
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10044
		{
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.str = tree.AstHash
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.str = ""
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10118
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10136
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10142
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10148
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10158
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = true
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = false
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = true
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = false
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10207
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10220
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10228
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10229
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10247
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10257
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10277
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10338
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10339
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = types.Geography
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10388
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10396
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10430
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = nil
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = types.Int2
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = types.Int
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = types.Float4
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = types.Float
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10473
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10481
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10489
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = types.Bool
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = types.Float
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10522
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10528
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10550
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = types.String
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = true
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = false
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = types.Date
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10599
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10607
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10621
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10630
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10638
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10655
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = true
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = false
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = false
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = types.Interval
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10679
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10763
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = nil
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10808
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10868
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11017
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11204
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11443
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11469
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11478
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11493
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11523
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11534
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11535
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11550
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11559
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11625
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11755
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11773
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11826
		{
			return unimplemented(sqllex, "treat")
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11899
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.str = ""
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11988
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12001
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12069
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12098
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12174
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12514
		{
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12515
		{
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12587
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12595
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12668
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12684
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12693
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12704
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12713
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12721
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12738
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12957
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12970
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12977
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.str = ""
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
