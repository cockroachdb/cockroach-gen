// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:929
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14573

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1727,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 452,
	-2, 0,
	-1, 71,
	8, 909,
	29, 909,
	621, 909,
	622, 909,
	-2, 0,
	-1, 72,
	8, 909,
	29, 909,
	621, 909,
	622, 909,
	-2, 0,
	-1, 79,
	254, 268,
	543, 268,
	-2, 0,
	-1, 93,
	242, 1458,
	256, 1458,
	272, 448,
	410, 448,
	422, 1205,
	463, 448,
	477, 1205,
	527, 1205,
	555, 448,
	582, 1205,
	-2, 0,
	-1, 99,
	137, 1727,
	249, 1727,
	566, 1727,
	567, 1727,
	-2, 0,
	-1, 117,
	156, 1698,
	176, 1698,
	189, 1698,
	252, 1698,
	285, 1698,
	359, 1698,
	370, 1698,
	561, 1698,
	-2, 1669,
	-1, 159,
	164, 1036,
	271, 1036,
	413, 997,
	482, 997,
	526, 997,
	546, 1036,
	548, 997,
	-2, 0,
	-1, 164,
	4, 1729,
	21, 1729,
	22, 1729,
	23, 1729,
	24, 1729,
	25, 1729,
	26, 1729,
	27, 1729,
	28, 1729,
	30, 1729,
	31, 1729,
	37, 1729,
	41, 1729,
	43, 1729,
	44, 1729,
	46, 1729,
	47, 1729,
	48, 1729,
	49, 1729,
	50, 1729,
	51, 1729,
	52, 1729,
	53, 1729,
	54, 1729,
	56, 1729,
	57, 1729,
	58, 1729,
	59, 1729,
	61, 1729,
	62, 1729,
	63, 1729,
	64, 1729,
	65, 1729,
	66, 1729,
	67, 1729,
	71, 1729,
	72, 1729,
	73, 1729,
	74, 1729,
	76, 1729,
	77, 1729,
	78, 1729,
	82, 1729,
	83, 1729,
	84, 1729,
	85, 1729,
	86, 1729,
	87, 1729,
	88, 1729,
	89, 1729,
	92, 1729,
	93, 1729,
	94, 1729,
	95, 1729,
	96, 1729,
	98, 1729,
	100, 1729,
	101, 1729,
	102, 1729,
	103, 1729,
	104, 1729,
	105, 1729,
	107, 1729,
	108, 1729,
	109, 1729,
	111, 1729,
	112, 1729,
	113, 1729,
	121, 1729,
	122, 1729,
	123, 1729,
	124, 1729,
	125, 1729,
	127, 1729,
	128, 1729,
	129, 1729,
	130, 1729,
	132, 1729,
	133, 1729,
	134, 1729,
	136, 1729,
	137, 1729,
	138, 1729,
	140, 1729,
	141, 1729,
	142, 1729,
	145, 1729,
	146, 1729,
	147, 1729,
	149, 1729,
	150, 1729,
	151, 1729,
	153, 1729,
	154, 1729,
	155, 1729,
	157, 1729,
	158, 1729,
	159, 1729,
	160, 1729,
	161, 1729,
	162, 1729,
	163, 1729,
	164, 1729,
	165, 1729,
	166, 1729,
	167, 1729,
	168, 1729,
	169, 1729,
	170, 1729,
	171, 1729,
	172, 1729,
	173, 1729,
	175, 1729,
	181, 1729,
	182, 1729,
	183, 1729,
	184, 1729,
	188, 1729,
	190, 1729,
	191, 1729,
	192, 1729,
	194, 1729,
	195, 1729,
	198, 1729,
	199, 1729,
	200, 1729,
	201, 1729,
	202, 1729,
	203, 1729,
	204, 1729,
	205, 1729,
	206, 1729,
	207, 1729,
	208, 1729,
	209, 1729,
	210, 1729,
	211, 1729,
	213, 1729,
	214, 1729,
	216, 1729,
	217, 1729,
	219, 1729,
	220, 1729,
	221, 1729,
	222, 1729,
	223, 1729,
	224, 1729,
	225, 1729,
	226, 1729,
	227, 1729,
	228, 1729,
	229, 1729,
	231, 1729,
	232, 1729,
	234, 1729,
	235, 1729,
	236, 1729,
	237, 1729,
	238, 1729,
	242, 1729,
	243, 1729,
	244, 1729,
	245, 1729,
	248, 1729,
	249, 1729,
	250, 1729,
	251, 1729,
	253, 1729,
	255, 1729,
	256, 1729,
	258, 1729,
	260, 1729,
	261, 1729,
	262, 1729,
	264, 1729,
	268, 1729,
	269, 1729,
	270, 1729,
	271, 1729,
	272, 1729,
	273, 1729,
	275, 1729,
	276, 1729,
	277, 1729,
	279, 1729,
	280, 1729,
	282, 1729,
	283, 1729,
	286, 1729,
	287, 1729,
	288, 1729,
	289, 1729,
	290, 1729,
	291, 1729,
	292, 1729,
	295, 1729,
	296, 1729,
	297, 1729,
	298, 1729,
	300, 1729,
	301, 1729,
	302, 1729,
	303, 1729,
	304, 1729,
	305, 1729,
	306, 1729,
	307, 1729,
	308, 1729,
	309, 1729,
	310, 1729,
	311, 1729,
	312, 1729,
	313, 1729,
	314, 1729,
	315, 1729,
	316, 1729,
	317, 1729,
	318, 1729,
	319, 1729,
	320, 1729,
	321, 1729,
	322, 1729,
	324, 1729,
	326, 1729,
	327, 1729,
	328, 1729,
	329, 1729,
	330, 1729,
	331, 1729,
	332, 1729,
	333, 1729,
	334, 1729,
	335, 1729,
	336, 1729,
	337, 1729,
	338, 1729,
	339, 1729,
	340, 1729,
	341, 1729,
	342, 1729,
	344, 1729,
	345, 1729,
	347, 1729,
	349, 1729,
	350, 1729,
	351, 1729,
	352, 1729,
	354, 1729,
	355, 1729,
	356, 1729,
	357, 1729,
	358, 1729,
	361, 1729,
	363, 1729,
	365, 1729,
	366, 1729,
	367, 1729,
	368, 1729,
	371, 1729,
	372, 1729,
	373, 1729,
	375, 1729,
	377, 1729,
	378, 1729,
	379, 1729,
	380, 1729,
	381, 1729,
	382, 1729,
	383, 1729,
	384, 1729,
	385, 1729,
	386, 1729,
	387, 1729,
	388, 1729,
	389, 1729,
	391, 1729,
	392, 1729,
	393, 1729,
	394, 1729,
	395, 1729,
	396, 1729,
	397, 1729,
	398, 1729,
	399, 1729,
	400, 1729,
	401, 1729,
	402, 1729,
	403, 1729,
	404, 1729,
	405, 1729,
	407, 1729,
	408, 1729,
	409, 1729,
	411, 1729,
	412, 1729,
	413, 1729,
	414, 1729,
	415, 1729,
	416, 1729,
	417, 1729,
	418, 1729,
	419, 1729,
	420, 1729,
	421, 1729,
	422, 1729,
	423, 1729,
	424, 1729,
	426, 1729,
	428, 1729,
	429, 1729,
	430, 1729,
	436, 1729,
	437, 1729,
	438, 1729,
	440, 1729,
	441, 1729,
	442, 1729,
	443, 1729,
	444, 1729,
	445, 1729,
	446, 1729,
	447, 1729,
	448, 1729,
	449, 1729,
	451, 1729,
	452, 1729,
	453, 1729,
	455, 1729,
	456, 1729,
	457, 1729,
	458, 1729,
	459, 1729,
	460, 1729,
	461, 1729,
	463, 1729,
	464, 1729,
	465, 1729,
	466, 1729,
	467, 1729,
	468, 1729,
	469, 1729,
	470, 1729,
	471, 1729,
	472, 1729,
	473, 1729,
	474, 1729,
	475, 1729,
	477, 1729,
	478, 1729,
	479, 1729,
	480, 1729,
	481, 1729,
	482, 1729,
	484, 1729,
	485, 1729,
	486, 1729,
	487, 1729,
	488, 1729,
	489, 1729,
	491, 1729,
	492, 1729,
	493, 1729,
	494, 1729,
	495, 1729,
	496, 1729,
	497, 1729,
	498, 1729,
	500, 1729,
	502, 1729,
	503, 1729,
	504, 1729,
	505, 1729,
	506, 1729,
	507, 1729,
	508, 1729,
	509, 1729,
	510, 1729,
	511, 1729,
	512, 1729,
	513, 1729,
	514, 1729,
	515, 1729,
	516, 1729,
	517, 1729,
	518, 1729,
	519, 1729,
	520, 1729,
	522, 1729,
	523, 1729,
	525, 1729,
	526, 1729,
	528, 1729,
	529, 1729,
	530, 1729,
	531, 1729,
	532, 1729,
	533, 1729,
	535, 1729,
	536, 1729,
	538, 1729,
	539, 1729,
	540, 1729,
	541, 1729,
	542, 1729,
	544, 1729,
	546, 1729,
	547, 1729,
	548, 1729,
	549, 1729,
	550, 1729,
	551, 1729,
	552, 1729,
	554, 1729,
	555, 1729,
	556, 1729,
	557, 1729,
	559, 1729,
	560, 1729,
	563, 1729,
	564, 1729,
	565, 1729,
	566, 1729,
	567, 1729,
	568, 1729,
	569, 1729,
	570, 1729,
	572, 1729,
	575, 1729,
	576, 1729,
	577, 1729,
	578, 1729,
	579, 1729,
	580, 1729,
	582, 1729,
	583, 1729,
	584, 1729,
	585, 1729,
	586, 1729,
	587, 1729,
	588, 1729,
	589, 1729,
	594, 1729,
	595, 1729,
	596, 1729,
	597, 1729,
	598, 1729,
	599, 1729,
	-2, 0,
	-1, 165,
	1, 1577,
	135, 1577,
	260, 1577,
	346, 1577,
	408, 1577,
	418, 1577,
	603, 1577,
	634, 1577,
	-2, 0,
	-1, 167,
	1, 1577,
	634, 1577,
	-2, 0,
	-1, 168,
	1, 1577,
	634, 1577,
	-2, 0,
	-1, 169,
	1, 1577,
	543, 1577,
	634, 1577,
	-2, 0,
	-1, 201,
	156, 1697,
	176, 1697,
	189, 1697,
	252, 1697,
	285, 1697,
	359, 1697,
	370, 1697,
	561, 1697,
	-2, 1672,
	-1, 252,
	4, 1736,
	5, 1736,
	6, 1736,
	7, 1736,
	8, 1736,
	9, 1736,
	10, 1736,
	21, 1736,
	22, 1736,
	23, 1736,
	24, 1736,
	25, 1736,
	26, 1736,
	27, 1736,
	28, 1736,
	30, 1736,
	31, 1736,
	37, 1736,
	38, 1736,
	41, 1736,
	43, 1736,
	44, 1736,
	45, 1736,
	46, 1736,
	47, 1736,
	48, 1736,
	49, 1736,
	50, 1736,
	51, 1736,
	52, 1736,
	53, 1736,
	54, 1736,
	56, 1736,
	57, 1736,
	58, 1736,
	59, 1736,
	61, 1736,
	62, 1736,
	63, 1736,
	64, 1736,
	65, 1736,
	66, 1736,
	67, 1736,
	68, 1736,
	69, 1736,
	70, 1736,
	71, 1736,
	72, 1736,
	73, 1736,
	74, 1736,
	76, 1736,
	77, 1736,
	78, 1736,
	80, 1736,
	82, 1736,
	83, 1736,
	84, 1736,
	85, 1736,
	86, 1736,
	87, 1736,
	88, 1736,
	89, 1736,
	92, 1736,
	93, 1736,
	94, 1736,
	95, 1736,
	96, 1736,
	98, 1736,
	100, 1736,
	101, 1736,
	102, 1736,
	103, 1736,
	104, 1736,
	105, 1736,
	107, 1736,
	108, 1736,
	109, 1736,
	110, 1736,
	111, 1736,
	112, 1736,
	113, 1736,
	114, 1736,
	115, 1736,
	116, 1736,
	117, 1736,
	118, 1736,
	119, 1736,
	120, 1736,
	121, 1736,
	122, 1736,
	123, 1736,
	124, 1736,
	125, 1736,
	126, 1736,
	127, 1736,
	128, 1736,
	129, 1736,
	130, 1736,
	131, 1736,
	132, 1736,
	133, 1736,
	134, 1736,
	136, 1736,
	137, 1736,
	138, 1736,
	140, 1736,
	141, 1736,
	142, 1736,
	145, 1736,
	146, 1736,
	147, 1736,
	149, 1736,
	150, 1736,
	151, 1736,
	153, 1736,
	154, 1736,
	155, 1736,
	157, 1736,
	158, 1736,
	159, 1736,
	160, 1736,
	161, 1736,
	162, 1736,
	163, 1736,
	164, 1736,
	165, 1736,
	166, 1736,
	167, 1736,
	168, 1736,
	169, 1736,
	170, 1736,
	171, 1736,
	172, 1736,
	173, 1736,
	174, 1736,
	175, 1736,
	181, 1736,
	182, 1736,
	183, 1736,
	184, 1736,
	188, 1736,
	190, 1736,
	191, 1736,
	192, 1736,
	194, 1736,
	195, 1736,
	197, 1736,
	198, 1736,
	199, 1736,
	200, 1736,
	201, 1736,
	202, 1736,
	203, 1736,
	204, 1736,
	205, 1736,
	206, 1736,
	207, 1736,
	208, 1736,
	209, 1736,
	210, 1736,
	211, 1736,
	213, 1736,
	214, 1736,
	216, 1736,
	217, 1736,
	219, 1736,
	220, 1736,
	221, 1736,
	222, 1736,
	223, 1736,
	224, 1736,
	225, 1736,
	226, 1736,
	227, 1736,
	228, 1736,
	229, 1736,
	230, 1736,
	231, 1736,
	232, 1736,
	234, 1736,
	235, 1736,
	236, 1736,
	237, 1736,
	238, 1736,
	242, 1736,
	243, 1736,
	244, 1736,
	245, 1736,
	247, 1736,
	248, 1736,
	249, 1736,
	250, 1736,
	251, 1736,
	253, 1736,
	255, 1736,
	256, 1736,
	257, 1736,
	258, 1736,
	259, 1736,
	260, 1736,
	261, 1736,
	262, 1736,
	263, 1736,
	264, 1736,
	268, 1736,
	269, 1736,
	270, 1736,
	271, 1736,
	272, 1736,
	273, 1736,
	275, 1736,
	276, 1736,
	277, 1736,
	279, 1736,
	280, 1736,
	281, 1736,
	282, 1736,
	283, 1736,
	284, 1736,
	286, 1736,
	287, 1736,
	288, 1736,
	289, 1736,
	290, 1736,
	291, 1736,
	292, 1736,
	293, 1736,
	294, 1736,
	295, 1736,
	296, 1736,
	297, 1736,
	298, 1736,
	300, 1736,
	301, 1736,
	302, 1736,
	303, 1736,
	304, 1736,
	305, 1736,
	306, 1736,
	307, 1736,
	308, 1736,
	309, 1736,
	310, 1736,
	311, 1736,
	312, 1736,
	313, 1736,
	314, 1736,
	315, 1736,
	316, 1736,
	317, 1736,
	318, 1736,
	319, 1736,
	320, 1736,
	321, 1736,
	322, 1736,
	324, 1736,
	325, 1736,
	326, 1736,
	327, 1736,
	328, 1736,
	329, 1736,
	330, 1736,
	331, 1736,
	332, 1736,
	333, 1736,
	334, 1736,
	335, 1736,
	336, 1736,
	337, 1736,
	338, 1736,
	339, 1736,
	340, 1736,
	341, 1736,
	342, 1736,
	343, 1736,
	344, 1736,
	345, 1736,
	346, 1736,
	347, 1736,
	348, 1736,
	349, 1736,
	350, 1736,
	351, 1736,
	352, 1736,
	353, 1736,
	354, 1736,
	355, 1736,
	356, 1736,
	357, 1736,
	358, 1736,
	361, 1736,
	363, 1736,
	366, 1736,
	367, 1736,
	368, 1736,
	371, 1736,
	372, 1736,
	373, 1736,
	374, 1736,
	375, 1736,
	376, 1736,
	377, 1736,
	378, 1736,
	379, 1736,
	380, 1736,
	381, 1736,
	382, 1736,
	383, 1736,
	384, 1736,
	385, 1736,
	386, 1736,
	387, 1736,
	388, 1736,
	389, 1736,
	391, 1736,
	392, 1736,
	393, 1736,
	394, 1736,
	395, 1736,
	396, 1736,
	397, 1736,
	398, 1736,
	399, 1736,
	400, 1736,
	401, 1736,
	402, 1736,
	403, 1736,
	404, 1736,
	405, 1736,
	407, 1736,
	408, 1736,
	409, 1736,
	411, 1736,
	412, 1736,
	413, 1736,
	414, 1736,
	415, 1736,
	416, 1736,
	417, 1736,
	418, 1736,
	419, 1736,
	420, 1736,
	421, 1736,
	422, 1736,
	423, 1736,
	424, 1736,
	426, 1736,
	428, 1736,
	429, 1736,
	430, 1736,
	436, 1736,
	437, 1736,
	438, 1736,
	440, 1736,
	441, 1736,
	442, 1736,
	443, 1736,
	444, 1736,
	445, 1736,
	446, 1736,
	447, 1736,
	448, 1736,
	449, 1736,
	451, 1736,
	452, 1736,
	453, 1736,
	454, 1736,
	455, 1736,
	456, 1736,
	457, 1736,
	458, 1736,
	459, 1736,
	460, 1736,
	461, 1736,
	463, 1736,
	464, 1736,
	465, 1736,
	466, 1736,
	467, 1736,
	468, 1736,
	469, 1736,
	470, 1736,
	471, 1736,
	472, 1736,
	473, 1736,
	474, 1736,
	475, 1736,
	477, 1736,
	478, 1736,
	479, 1736,
	480, 1736,
	481, 1736,
	482, 1736,
	483, 1736,
	484, 1736,
	485, 1736,
	486, 1736,
	487, 1736,
	488, 1736,
	489, 1736,
	490, 1736,
	491, 1736,
	492, 1736,
	493, 1736,
	494, 1736,
	495, 1736,
	496, 1736,
	497, 1736,
	498, 1736,
	500, 1736,
	502, 1736,
	503, 1736,
	504, 1736,
	505, 1736,
	506, 1736,
	507, 1736,
	508, 1736,
	509, 1736,
	510, 1736,
	511, 1736,
	512, 1736,
	513, 1736,
	514, 1736,
	515, 1736,
	516, 1736,
	517, 1736,
	518, 1736,
	519, 1736,
	520, 1736,
	522, 1736,
	523, 1736,
	524, 1736,
	525, 1736,
	526, 1736,
	528, 1736,
	529, 1736,
	530, 1736,
	531, 1736,
	532, 1736,
	533, 1736,
	535, 1736,
	536, 1736,
	538, 1736,
	539, 1736,
	540, 1736,
	541, 1736,
	542, 1736,
	544, 1736,
	546, 1736,
	547, 1736,
	548, 1736,
	549, 1736,
	550, 1736,
	551, 1736,
	552, 1736,
	553, 1736,
	554, 1736,
	555, 1736,
	556, 1736,
	557, 1736,
	559, 1736,
	560, 1736,
	562, 1736,
	563, 1736,
	564, 1736,
	565, 1736,
	566, 1736,
	567, 1736,
	568, 1736,
	569, 1736,
	570, 1736,
	571, 1736,
	572, 1736,
	575, 1736,
	576, 1736,
	577, 1736,
	578, 1736,
	579, 1736,
	580, 1736,
	582, 1736,
	583, 1736,
	584, 1736,
	585, 1736,
	586, 1736,
	587, 1736,
	588, 1736,
	589, 1736,
	594, 1736,
	595, 1736,
	596, 1736,
	597, 1736,
	598, 1736,
	599, 1736,
	600, 1736,
	614, 1736,
	621, 1736,
	622, 1736,
	623, 1736,
	631, 1736,
	635, 1736,
	-2, 0,
	-1, 797,
	4, 1456,
	21, 1456,
	22, 1456,
	23, 1456,
	24, 1456,
	25, 1456,
	26, 1456,
	27, 1456,
	28, 1456,
	30, 1456,
	31, 1456,
	37, 1456,
	41, 1456,
	43, 1456,
	44, 1456,
	46, 1456,
	47, 1456,
	48, 1456,
	49, 1456,
	50, 1456,
	51, 1456,
	52, 1456,
	53, 1456,
	54, 1456,
	56, 1456,
	57, 1456,
	58, 1456,
	59, 1456,
	61, 1456,
	62, 1456,
	63, 1456,
	64, 1456,
	65, 1456,
	66, 1456,
	67, 1456,
	71, 1456,
	72, 1456,
	73, 1456,
	74, 1456,
	76, 1456,
	77, 1456,
	78, 1456,
	82, 1456,
	83, 1456,
	84, 1456,
	85, 1456,
	86, 1456,
	87, 1456,
	88, 1456,
	89, 1456,
	92, 1456,
	93, 1456,
	94, 1456,
	95, 1456,
	96, 1456,
	98, 1456,
	100, 1456,
	101, 1456,
	102, 1456,
	103, 1456,
	104, 1456,
	105, 1456,
	107, 1456,
	108, 1456,
	109, 1456,
	111, 1456,
	112, 1456,
	113, 1456,
	121, 1456,
	122, 1456,
	123, 1456,
	124, 1456,
	125, 1456,
	127, 1456,
	128, 1456,
	129, 1456,
	130, 1456,
	132, 1456,
	133, 1456,
	134, 1456,
	136, 1456,
	137, 1456,
	138, 1456,
	140, 1456,
	141, 1456,
	142, 1456,
	145, 1456,
	146, 1456,
	147, 1456,
	149, 1456,
	150, 1456,
	151, 1456,
	153, 1456,
	154, 1456,
	155, 1456,
	157, 1456,
	158, 1456,
	159, 1456,
	160, 1456,
	161, 1456,
	162, 1456,
	163, 1456,
	164, 1456,
	165, 1456,
	166, 1456,
	167, 1456,
	168, 1456,
	169, 1456,
	170, 1456,
	171, 1456,
	172, 1456,
	173, 1456,
	175, 1456,
	181, 1456,
	182, 1456,
	183, 1456,
	184, 1456,
	188, 1456,
	190, 1456,
	191, 1456,
	192, 1456,
	194, 1456,
	195, 1456,
	198, 1456,
	199, 1456,
	200, 1456,
	201, 1456,
	202, 1456,
	203, 1456,
	204, 1456,
	205, 1456,
	206, 1456,
	207, 1456,
	208, 1456,
	209, 1456,
	210, 1456,
	211, 1456,
	213, 1456,
	214, 1456,
	216, 1456,
	217, 1456,
	219, 1456,
	220, 1456,
	221, 1456,
	222, 1456,
	223, 1456,
	224, 1456,
	225, 1456,
	226, 1456,
	227, 1456,
	228, 1456,
	229, 1456,
	231, 1456,
	232, 1456,
	234, 1456,
	235, 1456,
	236, 1456,
	237, 1456,
	238, 1456,
	242, 1456,
	243, 1456,
	244, 1456,
	245, 1456,
	248, 1456,
	249, 1456,
	250, 1456,
	251, 1456,
	253, 1456,
	255, 1456,
	256, 1456,
	258, 1456,
	260, 1456,
	261, 1456,
	262, 1456,
	264, 1456,
	268, 1456,
	269, 1456,
	270, 1456,
	271, 1456,
	272, 1456,
	273, 1456,
	275, 1456,
	276, 1456,
	277, 1456,
	279, 1456,
	280, 1456,
	282, 1456,
	283, 1456,
	286, 1456,
	287, 1456,
	288, 1456,
	289, 1456,
	290, 1456,
	291, 1456,
	292, 1456,
	295, 1456,
	296, 1456,
	297, 1456,
	298, 1456,
	300, 1456,
	301, 1456,
	302, 1456,
	303, 1456,
	304, 1456,
	305, 1456,
	306, 1456,
	307, 1456,
	308, 1456,
	309, 1456,
	310, 1456,
	311, 1456,
	312, 1456,
	313, 1456,
	314, 1456,
	315, 1456,
	316, 1456,
	317, 1456,
	318, 1456,
	319, 1456,
	320, 1456,
	321, 1456,
	322, 1456,
	324, 1456,
	326, 1456,
	327, 1456,
	328, 1456,
	329, 1456,
	330, 1456,
	331, 1456,
	332, 1456,
	333, 1456,
	334, 1456,
	335, 1456,
	336, 1456,
	337, 1456,
	338, 1456,
	339, 1456,
	340, 1456,
	341, 1456,
	342, 1456,
	344, 1456,
	345, 1456,
	347, 1456,
	349, 1456,
	350, 1456,
	351, 1456,
	352, 1456,
	354, 1456,
	355, 1456,
	356, 1456,
	357, 1456,
	358, 1456,
	361, 1456,
	363, 1456,
	366, 1456,
	367, 1456,
	368, 1456,
	371, 1456,
	372, 1456,
	373, 1456,
	375, 1456,
	377, 1456,
	378, 1456,
	379, 1456,
	380, 1456,
	381, 1456,
	382, 1456,
	383, 1456,
	384, 1456,
	385, 1456,
	386, 1456,
	387, 1456,
	388, 1456,
	389, 1456,
	391, 1456,
	392, 1456,
	393, 1456,
	394, 1456,
	395, 1456,
	396, 1456,
	397, 1456,
	398, 1456,
	399, 1456,
	400, 1456,
	401, 1456,
	402, 1456,
	403, 1456,
	404, 1456,
	405, 1456,
	407, 1456,
	408, 1456,
	409, 1456,
	411, 1456,
	412, 1456,
	413, 1456,
	414, 1456,
	415, 1456,
	416, 1456,
	417, 1456,
	418, 1456,
	419, 1456,
	420, 1456,
	421, 1456,
	422, 1456,
	423, 1456,
	424, 1456,
	426, 1456,
	428, 1456,
	429, 1456,
	430, 1456,
	436, 1456,
	437, 1456,
	438, 1456,
	440, 1456,
	441, 1456,
	442, 1456,
	443, 1456,
	444, 1456,
	445, 1456,
	446, 1456,
	447, 1456,
	448, 1456,
	449, 1456,
	451, 1456,
	452, 1456,
	453, 1456,
	455, 1456,
	456, 1456,
	457, 1456,
	458, 1456,
	459, 1456,
	460, 1456,
	461, 1456,
	463, 1456,
	464, 1456,
	465, 1456,
	466, 1456,
	467, 1456,
	468, 1456,
	469, 1456,
	470, 1456,
	471, 1456,
	472, 1456,
	473, 1456,
	474, 1456,
	475, 1456,
	477, 1456,
	478, 1456,
	479, 1456,
	480, 1456,
	481, 1456,
	482, 1456,
	484, 1456,
	485, 1456,
	486, 1456,
	487, 1456,
	488, 1456,
	489, 1456,
	491, 1456,
	492, 1456,
	493, 1456,
	494, 1456,
	495, 1456,
	496, 1456,
	497, 1456,
	498, 1456,
	500, 1456,
	502, 1456,
	503, 1456,
	504, 1456,
	505, 1456,
	506, 1456,
	507, 1456,
	508, 1456,
	509, 1456,
	510, 1456,
	511, 1456,
	512, 1456,
	513, 1456,
	514, 1456,
	515, 1456,
	516, 1456,
	517, 1456,
	518, 1456,
	519, 1456,
	520, 1456,
	522, 1456,
	523, 1456,
	525, 1456,
	526, 1456,
	528, 1456,
	529, 1456,
	530, 1456,
	531, 1456,
	532, 1456,
	533, 1456,
	535, 1456,
	536, 1456,
	538, 1456,
	539, 1456,
	540, 1456,
	541, 1456,
	542, 1456,
	544, 1456,
	546, 1456,
	547, 1456,
	548, 1456,
	549, 1456,
	550, 1456,
	551, 1456,
	552, 1456,
	554, 1456,
	555, 1456,
	556, 1456,
	557, 1456,
	559, 1456,
	560, 1456,
	563, 1456,
	564, 1456,
	565, 1456,
	566, 1456,
	567, 1456,
	568, 1456,
	569, 1456,
	570, 1456,
	572, 1456,
	575, 1456,
	576, 1456,
	577, 1456,
	578, 1456,
	579, 1456,
	580, 1456,
	582, 1456,
	583, 1456,
	584, 1456,
	585, 1456,
	586, 1456,
	587, 1456,
	588, 1456,
	589, 1456,
	594, 1456,
	595, 1456,
	596, 1456,
	597, 1456,
	598, 1456,
	599, 1456,
	-2, 0,
	-1, 816,
	196, 2532,
	543, 2532,
	613, 2532,
	633, 2532,
	-2, 0,
	-1, 817,
	196, 2518,
	543, 2518,
	613, 2518,
	633, 2518,
	-2, 0,
	-1, 819,
	196, 2799,
	543, 2799,
	613, 2799,
	633, 2799,
	-2, 0,
	-1, 822,
	196, 2648,
	543, 2648,
	613, 2648,
	633, 2648,
	-2, 0,
	-1, 823,
	196, 2843,
	543, 2843,
	613, 2843,
	633, 2843,
	-2, 0,
	-1, 831,
	196, 2676,
	543, 2676,
	613, 2676,
	633, 2676,
	-2, 775,
	-1, 847,
	8, 908,
	29, 908,
	621, 908,
	622, 908,
	-2, 913,
	-1, 851,
	1, 2586,
	634, 2586,
	-2, 913,
	-1, 852,
	1, 2636,
	634, 2636,
	-2, 913,
	-1, 855,
	1, 2681,
	634, 2681,
	-2, 906,
	-1, 856,
	1, 2737,
	634, 2737,
	-2, 907,
	-1, 857,
	1, 2591,
	634, 2591,
	-2, 910,
	-1, 858,
	1, 2505,
	634, 2505,
	-2, 911,
	-1, 893,
	633, 2464,
	636, 2464,
	-2, 1122,
	-1, 894,
	633, 2466,
	636, 2466,
	-2, 1123,
	-1, 895,
	633, 2465,
	636, 2465,
	-2, 1124,
	-1, 896,
	636, 2390,
	-2, 1125,
	-1, 921,
	189, 287,
	-2, 0,
	-1, 945,
	45, 2437,
	-2, 0,
	-1, 946,
	582, 1434,
	-2, 1206,
	-1, 962,
	4, 1870,
	21, 1870,
	22, 1870,
	23, 1870,
	24, 1870,
	25, 1870,
	26, 1870,
	27, 1870,
	28, 1870,
	30, 1870,
	31, 1870,
	37, 1870,
	41, 1870,
	43, 1870,
	44, 1870,
	46, 1870,
	47, 1870,
	48, 1870,
	49, 1870,
	50, 1870,
	51, 1870,
	52, 1870,
	53, 1870,
	54, 1870,
	56, 1870,
	57, 1870,
	58, 1870,
	59, 1870,
	61, 1870,
	62, 1870,
	63, 1870,
	64, 1870,
	65, 1870,
	66, 1870,
	67, 1870,
	71, 1870,
	72, 1870,
	73, 1870,
	74, 1870,
	76, 1870,
	77, 1870,
	78, 1870,
	82, 1870,
	83, 1870,
	84, 1870,
	85, 1870,
	86, 1870,
	87, 1870,
	88, 1870,
	89, 1870,
	92, 1870,
	93, 1870,
	94, 1870,
	95, 1870,
	96, 1870,
	98, 1870,
	100, 1870,
	101, 1870,
	102, 1870,
	103, 1870,
	104, 1870,
	105, 1870,
	107, 1870,
	108, 1870,
	109, 1870,
	111, 1870,
	112, 1870,
	113, 1870,
	121, 1870,
	122, 1870,
	123, 1870,
	124, 1870,
	125, 1870,
	127, 1870,
	128, 1870,
	129, 1870,
	130, 1870,
	132, 1870,
	133, 1870,
	134, 1870,
	136, 1870,
	137, 1870,
	138, 1870,
	140, 1870,
	141, 1870,
	142, 1870,
	145, 1870,
	146, 1870,
	147, 1870,
	149, 1870,
	150, 1870,
	151, 1870,
	153, 1870,
	154, 1870,
	155, 1870,
	157, 1870,
	158, 1870,
	159, 1870,
	160, 1870,
	161, 1870,
	162, 1870,
	163, 1870,
	164, 1870,
	165, 1870,
	166, 1870,
	167, 1870,
	168, 1870,
	169, 1870,
	170, 1870,
	171, 1870,
	172, 1870,
	173, 1870,
	175, 1870,
	181, 1870,
	182, 1870,
	183, 1870,
	184, 1870,
	188, 1870,
	190, 1870,
	191, 1870,
	192, 1870,
	194, 1870,
	195, 1870,
	198, 1870,
	199, 1870,
	200, 1870,
	201, 1870,
	202, 1870,
	203, 1870,
	204, 1870,
	205, 1870,
	206, 1870,
	207, 1870,
	208, 1870,
	209, 1870,
	210, 1870,
	211, 1870,
	213, 1870,
	214, 1870,
	216, 1870,
	217, 1870,
	219, 1870,
	220, 1870,
	221, 1870,
	222, 1870,
	223, 1870,
	224, 1870,
	225, 1870,
	226, 1870,
	227, 1870,
	228, 1870,
	229, 1870,
	231, 1870,
	232, 1870,
	234, 1870,
	235, 1870,
	236, 1870,
	237, 1870,
	238, 1870,
	242, 1870,
	243, 1870,
	244, 1870,
	245, 1870,
	248, 1870,
	249, 1870,
	250, 1870,
	251, 1870,
	253, 1870,
	255, 1870,
	256, 1870,
	258, 1870,
	260, 1870,
	261, 1870,
	262, 1870,
	264, 1870,
	268, 1870,
	269, 1870,
	270, 1870,
	271, 1870,
	272, 1870,
	273, 1870,
	275, 1870,
	276, 1870,
	277, 1870,
	279, 1870,
	280, 1870,
	282, 1870,
	283, 1870,
	286, 1870,
	287, 1870,
	288, 1870,
	289, 1870,
	290, 1870,
	291, 1870,
	292, 1870,
	295, 1870,
	296, 1870,
	297, 1870,
	298, 1870,
	300, 1870,
	301, 1870,
	302, 1870,
	303, 1870,
	304, 1870,
	305, 1870,
	306, 1870,
	307, 1870,
	308, 1870,
	309, 1870,
	310, 1870,
	311, 1870,
	312, 1870,
	313, 1870,
	314, 1870,
	315, 1870,
	316, 1870,
	317, 1870,
	318, 1870,
	319, 1870,
	320, 1870,
	321, 1870,
	322, 1870,
	324, 1870,
	326, 1870,
	327, 1870,
	328, 1870,
	329, 1870,
	330, 1870,
	331, 1870,
	332, 1870,
	333, 1870,
	334, 1870,
	335, 1870,
	336, 1870,
	337, 1870,
	338, 1870,
	339, 1870,
	340, 1870,
	341, 1870,
	342, 1870,
	344, 1870,
	345, 1870,
	347, 1870,
	349, 1870,
	350, 1870,
	351, 1870,
	352, 1870,
	354, 1870,
	355, 1870,
	356, 1870,
	357, 1870,
	358, 1870,
	361, 1870,
	363, 1870,
	366, 1870,
	367, 1870,
	368, 1870,
	371, 1870,
	372, 1870,
	373, 1870,
	375, 1870,
	377, 1870,
	378, 1870,
	379, 1870,
	380, 1870,
	381, 1870,
	382, 1870,
	383, 1870,
	384, 1870,
	385, 1870,
	386, 1870,
	387, 1870,
	388, 1870,
	389, 1870,
	391, 1870,
	392, 1870,
	393, 1870,
	394, 1870,
	395, 1870,
	396, 1870,
	397, 1870,
	398, 1870,
	399, 1870,
	400, 1870,
	401, 1870,
	402, 1870,
	403, 1870,
	404, 1870,
	405, 1870,
	407, 1870,
	408, 1870,
	409, 1870,
	411, 1870,
	412, 1870,
	413, 1870,
	414, 1870,
	415, 1870,
	416, 1870,
	417, 1870,
	418, 1870,
	419, 1870,
	420, 1870,
	421, 1870,
	422, 1870,
	423, 1870,
	424, 1870,
	426, 1870,
	428, 1870,
	429, 1870,
	430, 1870,
	436, 1870,
	437, 1870,
	438, 1870,
	440, 1870,
	441, 1870,
	442, 1870,
	443, 1870,
	444, 1870,
	445, 1870,
	446, 1870,
	447, 1870,
	448, 1870,
	449, 1870,
	451, 1870,
	452, 1870,
	453, 1870,
	455, 1870,
	456, 1870,
	457, 1870,
	458, 1870,
	459, 1870,
	460, 1870,
	461, 1870,
	463, 1870,
	464, 1870,
	465, 1870,
	466, 1870,
	467, 1870,
	468, 1870,
	469, 1870,
	470, 1870,
	471, 1870,
	472, 1870,
	473, 1870,
	474, 1870,
	475, 1870,
	477, 1870,
	478, 1870,
	479, 1870,
	480, 1870,
	481, 1870,
	482, 1870,
	484, 1870,
	485, 1870,
	486, 1870,
	487, 1870,
	488, 1870,
	489, 1870,
	491, 1870,
	492, 1870,
	493, 1870,
	494, 1870,
	495, 1870,
	496, 1870,
	497, 1870,
	498, 1870,
	500, 1870,
	502, 1870,
	503, 1870,
	504, 1870,
	505, 1870,
	506, 1870,
	507, 1870,
	508, 1870,
	509, 1870,
	510, 1870,
	511, 1870,
	512, 1870,
	513, 1870,
	514, 1870,
	515, 1870,
	516, 1870,
	517, 1870,
	518, 1870,
	519, 1870,
	520, 1870,
	522, 1870,
	523, 1870,
	525, 1870,
	526, 1870,
	528, 1870,
	529, 1870,
	530, 1870,
	531, 1870,
	532, 1870,
	533, 1870,
	535, 1870,
	536, 1870,
	538, 1870,
	539, 1870,
	540, 1870,
	541, 1870,
	542, 1870,
	544, 1870,
	546, 1870,
	547, 1870,
	548, 1870,
	549, 1870,
	550, 1870,
	551, 1870,
	552, 1870,
	554, 1870,
	555, 1870,
	556, 1870,
	557, 1870,
	559, 1870,
	560, 1870,
	563, 1870,
	564, 1870,
	565, 1870,
	566, 1870,
	567, 1870,
	568, 1870,
	569, 1870,
	570, 1870,
	572, 1870,
	575, 1870,
	576, 1870,
	577, 1870,
	578, 1870,
	579, 1870,
	580, 1870,
	582, 1870,
	583, 1870,
	584, 1870,
	585, 1870,
	586, 1870,
	587, 1870,
	588, 1870,
	589, 1870,
	594, 1870,
	595, 1870,
	596, 1870,
	597, 1870,
	598, 1870,
	599, 1870,
	-2, 0,
	-1, 972,
	272, 452,
	-2, 0,
	-1, 1051,
	413, 998,
	482, 998,
	526, 998,
	548, 998,
	-2, 0,
	-1, 1052,
	413, 997,
	482, 997,
	526, 997,
	548, 997,
	-2, 926,
	-1, 1056,
	1, 1050,
	630, 1050,
	632, 1050,
	634, 1050,
	-2, 0,
	-1, 1058,
	1, 972,
	630, 972,
	632, 972,
	634, 972,
	-2, 0,
	-1, 1059,
	1, 976,
	630, 976,
	632, 976,
	634, 976,
	-2, 0,
	-1, 1060,
	1, 1121,
	189, 1121,
	630, 1121,
	632, 1121,
	634, 1121,
	-2, 0,
	-1, 1068,
	1, 1003,
	630, 1003,
	632, 1003,
	634, 1003,
	-2, 0,
	-1, 1075,
	1, 1050,
	630, 1050,
	632, 1050,
	634, 1050,
	-2, 0,
	-1, 1076,
	1, 1052,
	630, 1052,
	632, 1052,
	634, 1052,
	-2, 0,
	-1, 1077,
	1, 1055,
	630, 1055,
	632, 1055,
	634, 1055,
	-2, 0,
	-1, 1085,
	1, 1085,
	630, 1085,
	632, 1085,
	634, 1085,
	-2, 0,
	-1, 1086,
	1, 1087,
	630, 1087,
	632, 1087,
	634, 1087,
	-2, 0,
	-1, 1091,
	1, 1115,
	630, 1115,
	632, 1115,
	634, 1115,
	-2, 0,
	-1, 1145,
	176, 1740,
	189, 1740,
	285, 1740,
	359, 1740,
	-2, 1676,
	-1, 1161,
	176, 1739,
	189, 1739,
	285, 1739,
	359, 1739,
	-2, 1673,
	-1, 1188,
	633, 2463,
	-2, 783,
	-1, 1217,
	5, 2455,
	631, 2453,
	-2, 2444,
	-1, 1225,
	5, 2476,
	631, 2473,
	-2, 2464,
	-1, 1226,
	5, 2477,
	631, 2474,
	-2, 2465,
	-1, 1234,
	633, 2461,
	-2, 2443,
	-1, 1235,
	631, 2931,
	-2, 2462,
	-1, 1258,
	631, 2930,
	-2, 2478,
	-1, 1259,
	5, 1945,
	-2, 2901,
	-1, 1260,
	5, 1946,
	-2, 2902,
	-1, 1261,
	5, 1947,
	-2, 2916,
	-1, 1262,
	5, 1948,
	-2, 2880,
	-1, 1263,
	5, 1949,
	-2, 2914,
	-1, 1264,
	5, 1957,
	-2, 2893,
	-1, 1265,
	5, 1944,
	-2, 2889,
	-1, 1266,
	5, 1944,
	-2, 2888,
	-1, 1267,
	5, 1944,
	-2, 2907,
	-1, 1268,
	5, 1955,
	-2, 2882,
	-1, 1269,
	5, 1960,
	-2, 2881,
	-1, 1270,
	5, 1962,
	-2, 2926,
	-1, 1273,
	5, 1984,
	-2, 2919,
	-1, 1274,
	5, 1976,
	-2, 2920,
	-1, 1275,
	5, 1984,
	-2, 2921,
	-1, 1276,
	5, 1980,
	-2, 2922,
	-1, 1277,
	5, 1930,
	-2, 2894,
	-1, 1278,
	5, 1931,
	-2, 2895,
	-1, 1279,
	5, 1932,
	-2, 2883,
	-1, 1307,
	5, 1967,
	-2, 2927,
	-1, 1308,
	5, 1968,
	-2, 2917,
	-1, 1309,
	5, 1969,
	583, 1969,
	-2, 2884,
	-1, 1310,
	5, 1970,
	583, 1970,
	-2, 2885,
	-1, 1348,
	631, 2473,
	-2, 2464,
	-1, 1349,
	631, 2474,
	-2, 2465,
	-1, 1447,
	196, 2843,
	543, 2843,
	613, 2843,
	633, 2843,
	-2, 0,
	-1, 1452,
	1, 759,
	634, 759,
	-2, 1585,
	-1, 1599,
	379, 2438,
	440, 2438,
	484, 2438,
	623, 2438,
	-2, 2428,
	-1, 1605,
	196, 147,
	279, 147,
	344, 147,
	589, 147,
	-2, 2839,
	-1, 1606,
	196, 148,
	279, 148,
	344, 148,
	589, 148,
	-2, 2577,
	-1, 1607,
	196, 149,
	279, 149,
	344, 149,
	589, 149,
	-2, 2760,
	-1, 1613,
	635, 2438,
	-2, 2440,
	-1, 1637,
	1, 1431,
	445, 1386,
	484, 1386,
	606, 1386,
	630, 1431,
	632, 1431,
	634, 1431,
	-2, 1725,
	-1, 1643,
	212, 1528,
	233, 1528,
	453, 1528,
	-2, 0,
	-1, 1692,
	422, 1205,
	582, 1205,
	-2, 447,
	-1, 1709,
	45, 2436,
	-2, 1168,
	-1, 1716,
	1, 1431,
	630, 1431,
	632, 1431,
	634, 1431,
	-2, 1725,
	-1, 1724,
	4, 1456,
	21, 1456,
	22, 1456,
	23, 1456,
	24, 1456,
	25, 1456,
	26, 1456,
	27, 1456,
	28, 1456,
	30, 1456,
	31, 1456,
	37, 1456,
	41, 1456,
	43, 1456,
	44, 1456,
	46, 1456,
	47, 1456,
	48, 1456,
	49, 1456,
	50, 1456,
	51, 1456,
	52, 1456,
	53, 1456,
	54, 1456,
	56, 1456,
	57, 1456,
	58, 1456,
	59, 1456,
	61, 1456,
	62, 1456,
	63, 1456,
	64, 1456,
	65, 1456,
	66, 1456,
	67, 1456,
	71, 1456,
	72, 1456,
	73, 1456,
	74, 1456,
	76, 1456,
	77, 1456,
	78, 1456,
	82, 1456,
	83, 1456,
	84, 1456,
	85, 1456,
	86, 1456,
	87, 1456,
	88, 1456,
	89, 1456,
	92, 1456,
	93, 1456,
	94, 1456,
	95, 1456,
	96, 1456,
	98, 1456,
	100, 1456,
	101, 1456,
	102, 1456,
	103, 1456,
	104, 1456,
	105, 1456,
	107, 1456,
	108, 1456,
	109, 1456,
	111, 1456,
	112, 1456,
	113, 1456,
	121, 1456,
	122, 1456,
	123, 1456,
	124, 1456,
	125, 1456,
	127, 1456,
	128, 1456,
	129, 1456,
	130, 1456,
	132, 1456,
	133, 1456,
	134, 1456,
	136, 1456,
	137, 1456,
	138, 1456,
	140, 1456,
	141, 1456,
	142, 1456,
	145, 1456,
	146, 1456,
	147, 1456,
	149, 1456,
	150, 1456,
	151, 1456,
	153, 1456,
	154, 1456,
	155, 1456,
	157, 1456,
	158, 1456,
	159, 1456,
	160, 1456,
	161, 1456,
	162, 1456,
	163, 1456,
	164, 1456,
	165, 1456,
	166, 1456,
	167, 1456,
	168, 1456,
	169, 1456,
	170, 1456,
	171, 1456,
	172, 1456,
	173, 1456,
	181, 1456,
	182, 1456,
	183, 1456,
	184, 1456,
	188, 1456,
	190, 1456,
	191, 1456,
	192, 1456,
	194, 1456,
	195, 1456,
	198, 1456,
	199, 1456,
	200, 1456,
	201, 1456,
	202, 1456,
	203, 1456,
	204, 1456,
	205, 1456,
	206, 1456,
	207, 1456,
	208, 1456,
	209, 1456,
	210, 1456,
	211, 1456,
	213, 1456,
	214, 1456,
	216, 1456,
	217, 1456,
	219, 1456,
	220, 1456,
	221, 1456,
	222, 1456,
	223, 1456,
	224, 1456,
	225, 1456,
	226, 1456,
	227, 1456,
	228, 1456,
	229, 1456,
	231, 1456,
	232, 1456,
	234, 1456,
	235, 1456,
	236, 1456,
	237, 1456,
	238, 1456,
	243, 1456,
	244, 1456,
	245, 1456,
	248, 1456,
	249, 1456,
	250, 1456,
	251, 1456,
	253, 1456,
	255, 1456,
	256, 1456,
	258, 1456,
	260, 1456,
	261, 1456,
	262, 1456,
	264, 1456,
	268, 1456,
	269, 1456,
	270, 1456,
	271, 1456,
	272, 1456,
	273, 1456,
	275, 1456,
	276, 1456,
	277, 1456,
	279, 1456,
	280, 1456,
	282, 1456,
	283, 1456,
	286, 1456,
	287, 1456,
	288, 1456,
	289, 1456,
	290, 1456,
	291, 1456,
	292, 1456,
	295, 1456,
	296, 1456,
	297, 1456,
	298, 1456,
	300, 1456,
	301, 1456,
	302, 1456,
	303, 1456,
	304, 1456,
	305, 1456,
	306, 1456,
	307, 1456,
	308, 1456,
	309, 1456,
	310, 1456,
	311, 1456,
	312, 1456,
	313, 1456,
	314, 1456,
	315, 1456,
	316, 1456,
	317, 1456,
	318, 1456,
	319, 1456,
	320, 1456,
	321, 1456,
	322, 1456,
	324, 1456,
	326, 1456,
	327, 1456,
	328, 1456,
	329, 1456,
	330, 1456,
	331, 1456,
	332, 1456,
	333, 1456,
	334, 1456,
	335, 1456,
	336, 1456,
	337, 1456,
	338, 1456,
	339, 1456,
	340, 1456,
	341, 1456,
	342, 1456,
	344, 1456,
	345, 1456,
	349, 1456,
	350, 1456,
	351, 1456,
	352, 1456,
	354, 1456,
	355, 1456,
	356, 1456,
	357, 1456,
	358, 1456,
	361, 1456,
	363, 1456,
	364, 1456,
	366, 1456,
	367, 1456,
	368, 1456,
	371, 1456,
	372, 1456,
	373, 1456,
	375, 1456,
	377, 1456,
	378, 1456,
	379, 1456,
	380, 1456,
	381, 1456,
	382, 1456,
	383, 1456,
	384, 1456,
	385, 1456,
	386, 1456,
	387, 1456,
	388, 1456,
	389, 1456,
	391, 1456,
	392, 1456,
	393, 1456,
	394, 1456,
	395, 1456,
	396, 1456,
	397, 1456,
	398, 1456,
	399, 1456,
	400, 1456,
	401, 1456,
	402, 1456,
	403, 1456,
	404, 1456,
	405, 1456,
	407, 1456,
	408, 1456,
	409, 1456,
	411, 1456,
	412, 1456,
	413, 1456,
	414, 1456,
	415, 1456,
	416, 1456,
	417, 1456,
	418, 1456,
	419, 1456,
	420, 1456,
	421, 1456,
	422, 1456,
	423, 1456,
	424, 1456,
	426, 1456,
	428, 1456,
	429, 1456,
	430, 1456,
	436, 1456,
	437, 1456,
	438, 1456,
	440, 1456,
	441, 1456,
	442, 1456,
	443, 1456,
	444, 1456,
	445, 1456,
	446, 1456,
	447, 1456,
	448, 1456,
	449, 1456,
	451, 1456,
	452, 1456,
	453, 1456,
	455, 1456,
	456, 1456,
	457, 1456,
	458, 1456,
	459, 1456,
	460, 1456,
	461, 1456,
	463, 1456,
	464, 1456,
	465, 1456,
	466, 1456,
	467, 1456,
	468, 1456,
	469, 1456,
	470, 1456,
	471, 1456,
	472, 1456,
	473, 1456,
	474, 1456,
	475, 1456,
	477, 1456,
	478, 1456,
	479, 1456,
	480, 1456,
	481, 1456,
	482, 1456,
	484, 1456,
	485, 1456,
	486, 1456,
	487, 1456,
	488, 1456,
	489, 1456,
	491, 1456,
	492, 1456,
	493, 1456,
	494, 1456,
	495, 1456,
	496, 1456,
	497, 1456,
	498, 1456,
	500, 1456,
	502, 1456,
	503, 1456,
	504, 1456,
	505, 1456,
	506, 1456,
	507, 1456,
	508, 1456,
	509, 1456,
	510, 1456,
	511, 1456,
	512, 1456,
	513, 1456,
	514, 1456,
	515, 1456,
	516, 1456,
	517, 1456,
	518, 1456,
	519, 1456,
	520, 1456,
	522, 1456,
	523, 1456,
	525, 1456,
	526, 1456,
	528, 1456,
	529, 1456,
	530, 1456,
	531, 1456,
	532, 1456,
	533, 1456,
	535, 1456,
	536, 1456,
	538, 1456,
	539, 1456,
	540, 1456,
	541, 1456,
	542, 1456,
	544, 1456,
	546, 1456,
	547, 1456,
	548, 1456,
	549, 1456,
	550, 1456,
	551, 1456,
	552, 1456,
	554, 1456,
	555, 1456,
	556, 1456,
	557, 1456,
	559, 1456,
	560, 1456,
	563, 1456,
	564, 1456,
	565, 1456,
	566, 1456,
	567, 1456,
	568, 1456,
	569, 1456,
	570, 1456,
	572, 1456,
	575, 1456,
	576, 1456,
	577, 1456,
	578, 1456,
	579, 1456,
	580, 1456,
	582, 1456,
	583, 1456,
	584, 1456,
	585, 1456,
	586, 1456,
	587, 1456,
	588, 1456,
	589, 1456,
	594, 1456,
	595, 1456,
	596, 1456,
	597, 1456,
	598, 1456,
	599, 1456,
	-2, 0,
	-1, 1747,
	1, 594,
	630, 594,
	632, 594,
	634, 594,
	-2, 1696,
	-1, 1750,
	4, 2925,
	11, 2925,
	12, 2925,
	14, 2925,
	15, 2925,
	16, 2925,
	17, 2925,
	18, 2925,
	19, 2925,
	21, 2925,
	22, 2925,
	23, 2925,
	24, 2925,
	25, 2925,
	26, 2925,
	27, 2925,
	28, 2925,
	30, 2925,
	31, 2925,
	34, 2925,
	35, 2925,
	37, 2925,
	39, 2925,
	41, 2925,
	43, 2925,
	44, 2925,
	46, 2925,
	47, 2925,
	48, 2925,
	49, 2925,
	50, 2925,
	51, 2925,
	52, 2925,
	53, 2925,
	54, 2925,
	56, 2925,
	57, 2925,
	58, 2925,
	59, 2925,
	61, 2925,
	62, 2925,
	63, 2925,
	64, 2925,
	65, 2925,
	66, 2925,
	67, 2925,
	70, 2925,
	71, 2925,
	72, 2925,
	73, 2925,
	74, 2925,
	76, 2925,
	77, 2925,
	78, 2925,
	79, 2925,
	82, 2925,
	83, 2925,
	84, 2925,
	85, 2925,
	86, 2925,
	87, 2925,
	88, 2925,
	89, 2925,
	90, 2925,
	92, 2925,
	93, 2925,
	94, 2925,
	95, 2925,
	96, 2925,
	98, 2925,
	99, 2925,
	100, 2925,
	101, 2925,
	102, 2925,
	103, 2925,
	104, 2925,
	105, 2925,
	107, 2925,
	108, 2925,
	109, 2925,
	110, 2925,
	111, 2925,
	112, 2925,
	113, 2925,
	121, 2925,
	122, 2925,
	123, 2925,
	124, 2925,
	125, 2925,
	127, 2925,
	128, 2925,
	129, 2925,
	130, 2925,
	132, 2925,
	133, 2925,
	134, 2925,
	136, 2925,
	137, 2925,
	138, 2925,
	140, 2925,
	141, 2925,
	142, 2925,
	145, 2925,
	146, 2925,
	147, 2925,
	149, 2925,
	150, 2925,
	151, 2925,
	153, 2925,
	154, 2925,
	155, 2925,
	157, 2925,
	158, 2925,
	159, 2925,
	160, 2925,
	161, 2925,
	162, 2925,
	163, 2925,
	164, 2925,
	165, 2925,
	166, 2925,
	167, 2925,
	168, 2925,
	169, 2925,
	170, 2925,
	171, 2925,
	172, 2925,
	173, 2925,
	177, 2925,
	178, 2925,
	179, 2925,
	180, 2925,
	181, 2925,
	182, 2925,
	183, 2925,
	184, 2925,
	187, 2925,
	188, 2925,
	190, 2925,
	191, 2925,
	192, 2925,
	194, 2925,
	195, 2925,
	197, 2925,
	198, 2925,
	199, 2925,
	200, 2925,
	201, 2925,
	202, 2925,
	203, 2925,
	204, 2925,
	205, 2925,
	206, 2925,
	207, 2925,
	208, 2925,
	209, 2925,
	210, 2925,
	211, 2925,
	213, 2925,
	214, 2925,
	216, 2925,
	217, 2925,
	219, 2925,
	220, 2925,
	221, 2925,
	222, 2925,
	223, 2925,
	224, 2925,
	225, 2925,
	226, 2925,
	227, 2925,
	228, 2925,
	229, 2925,
	230, 2925,
	231, 2925,
	232, 2925,
	233, 2925,
	234, 2925,
	235, 2925,
	236, 2925,
	237, 2925,
	238, 2925,
	240, 2925,
	241, 2925,
	243, 2925,
	244, 2925,
	245, 2925,
	247, 2925,
	248, 2925,
	249, 2925,
	250, 2925,
	251, 2925,
	253, 2925,
	255, 2925,
	256, 2925,
	257, 2925,
	258, 2925,
	259, 2925,
	260, 2925,
	261, 2925,
	262, 2925,
	263, 2925,
	264, 2925,
	266, 2925,
	267, 2925,
	268, 2925,
	269, 2925,
	270, 2925,
	271, 2925,
	272, 2925,
	273, 2925,
	275, 2925,
	276, 2925,
	277, 2925,
	279, 2925,
	280, 2925,
	281, 2925,
	282, 2925,
	283, 2925,
	284, 2925,
	286, 2925,
	287, 2925,
	288, 2925,
	289, 2925,
	290, 2925,
	291, 2925,
	292, 2925,
	295, 2925,
	296, 2925,
	297, 2925,
	298, 2925,
	299, 2925,
	300, 2925,
	301, 2925,
	302, 2925,
	303, 2925,
	304, 2925,
	305, 2925,
	306, 2925,
	307, 2925,
	308, 2925,
	309, 2925,
	310, 2925,
	311, 2925,
	312, 2925,
	313, 2925,
	314, 2925,
	315, 2925,
	316, 2925,
	317, 2925,
	318, 2925,
	319, 2925,
	320, 2925,
	321, 2925,
	322, 2925,
	324, 2925,
	325, 2925,
	326, 2925,
	327, 2925,
	328, 2925,
	329, 2925,
	330, 2925,
	331, 2925,
	332, 2925,
	333, 2925,
	334, 2925,
	335, 2925,
	336, 2925,
	337, 2925,
	338, 2925,
	339, 2925,
	340, 2925,
	341, 2925,
	342, 2925,
	344, 2925,
	345, 2925,
	348, 2925,
	349, 2925,
	350, 2925,
	351, 2925,
	352, 2925,
	354, 2925,
	355, 2925,
	356, 2925,
	357, 2925,
	358, 2925,
	361, 2925,
	363, 2925,
	366, 2925,
	367, 2925,
	368, 2925,
	369, 2925,
	371, 2925,
	372, 2925,
	373, 2925,
	375, 2925,
	377, 2925,
	378, 2925,
	379, 2925,
	380, 2925,
	381, 2925,
	382, 2925,
	383, 2925,
	384, 2925,
	385, 2925,
	386, 2925,
	387, 2925,
	388, 2925,
	389, 2925,
	391, 2925,
	392, 2925,
	393, 2925,
	394, 2925,
	395, 2925,
	396, 2925,
	397, 2925,
	398, 2925,
	399, 2925,
	400, 2925,
	401, 2925,
	402, 2925,
	403, 2925,
	404, 2925,
	405, 2925,
	407, 2925,
	408, 2925,
	409, 2925,
	411, 2925,
	412, 2925,
	413, 2925,
	414, 2925,
	415, 2925,
	416, 2925,
	417, 2925,
	418, 2925,
	419, 2925,
	420, 2925,
	421, 2925,
	422, 2925,
	423, 2925,
	424, 2925,
	426, 2925,
	428, 2925,
	429, 2925,
	430, 2925,
	436, 2925,
	437, 2925,
	438, 2925,
	439, 2925,
	440, 2925,
	441, 2925,
	442, 2925,
	443, 2925,
	444, 2925,
	445, 2925,
	446, 2925,
	447, 2925,
	448, 2925,
	449, 2925,
	451, 2925,
	452, 2925,
	453, 2925,
	454, 2925,
	455, 2925,
	456, 2925,
	457, 2925,
	458, 2925,
	459, 2925,
	460, 2925,
	461, 2925,
	462, 2925,
	463, 2925,
	464, 2925,
	465, 2925,
	466, 2925,
	467, 2925,
	468, 2925,
	469, 2925,
	470, 2925,
	471, 2925,
	472, 2925,
	473, 2925,
	474, 2925,
	475, 2925,
	477, 2925,
	478, 2925,
	479, 2925,
	480, 2925,
	481, 2925,
	482, 2925,
	484, 2925,
	485, 2925,
	486, 2925,
	487, 2925,
	488, 2925,
	489, 2925,
	490, 2925,
	491, 2925,
	492, 2925,
	493, 2925,
	494, 2925,
	495, 2925,
	496, 2925,
	497, 2925,
	498, 2925,
	500, 2925,
	502, 2925,
	503, 2925,
	504, 2925,
	505, 2925,
	506, 2925,
	507, 2925,
	508, 2925,
	509, 2925,
	510, 2925,
	511, 2925,
	512, 2925,
	513, 2925,
	514, 2925,
	515, 2925,
	516, 2925,
	517, 2925,
	518, 2925,
	519, 2925,
	520, 2925,
	522, 2925,
	523, 2925,
	524, 2925,
	525, 2925,
	526, 2925,
	528, 2925,
	529, 2925,
	530, 2925,
	531, 2925,
	532, 2925,
	533, 2925,
	535, 2925,
	536, 2925,
	538, 2925,
	539, 2925,
	540, 2925,
	541, 2925,
	542, 2925,
	544, 2925,
	546, 2925,
	547, 2925,
	548, 2925,
	549, 2925,
	550, 2925,
	551, 2925,
	552, 2925,
	554, 2925,
	555, 2925,
	556, 2925,
	557, 2925,
	559, 2925,
	560, 2925,
	563, 2925,
	564, 2925,
	565, 2925,
	566, 2925,
	567, 2925,
	568, 2925,
	569, 2925,
	570, 2925,
	572, 2925,
	575, 2925,
	576, 2925,
	577, 2925,
	578, 2925,
	579, 2925,
	580, 2925,
	582, 2925,
	583, 2925,
	584, 2925,
	585, 2925,
	586, 2925,
	587, 2925,
	588, 2925,
	589, 2925,
	594, 2925,
	595, 2925,
	596, 2925,
	597, 2925,
	598, 2925,
	599, 2925,
	600, 2925,
	602, 2925,
	611, 2925,
	612, 2925,
	613, 2925,
	614, 2925,
	615, 2925,
	616, 2925,
	618, 2925,
	619, 2925,
	620, 2925,
	621, 2925,
	622, 2925,
	623, 2925,
	624, 2925,
	625, 2925,
	626, 2925,
	629, 2925,
	632, 2925,
	633, 2925,
	635, 2925,
	636, 2925,
	-2, 0,
	-1, 1755,
	196, 2799,
	543, 2799,
	613, 2799,
	633, 2799,
	-2, 0,
	-1, 1809,
	413, 998,
	482, 998,
	526, 998,
	548, 998,
	-2, 0,
	-1, 1820,
	1, 1528,
	233, 1528,
	630, 1528,
	632, 1528,
	634, 1528,
	-2, 0,
	-1, 1837,
	1, 993,
	630, 993,
	632, 993,
	634, 993,
	-2, 0,
	-1, 1838,
	1, 1037,
	630, 1037,
	632, 1037,
	634, 1037,
	-2, 0,
	-1, 1839,
	1, 1045,
	630, 1045,
	632, 1045,
	634, 1045,
	-2, 0,
	-1, 1842,
	1, 1002,
	630, 1002,
	632, 1002,
	634, 1002,
	-2, 0,
	-1, 1844,
	1, 1008,
	630, 1008,
	632, 1008,
	634, 1008,
	-2, 0,
	-1, 1847,
	1, 1004,
	630, 1004,
	632, 1004,
	634, 1004,
	-2, 0,
	-1, 1852,
	1, 1018,
	630, 1018,
	632, 1018,
	634, 1018,
	-2, 0,
	-1, 1886,
	1, 2781,
	630, 2781,
	632, 2781,
	633, 2781,
	634, 2781,
	-2, 0,
	-1, 1890,
	1, 1096,
	630, 1096,
	632, 1096,
	634, 1096,
	-2, 0,
	-1, 1907,
	1, 1580,
	634, 1580,
	-2, 1585,
	-1, 1910,
	176, 1739,
	189, 1739,
	285, 1739,
	359, 1739,
	-2, 1677,
	-1, 2010,
	156, 1698,
	176, 1698,
	189, 1698,
	252, 1698,
	285, 1698,
	359, 1698,
	370, 1698,
	561, 1698,
	-2, 2149,
	-1, 2071,
	632, 2324,
	-2, 0,
	-1, 2107,
	156, 1698,
	176, 1698,
	189, 1698,
	252, 1698,
	285, 1698,
	359, 1698,
	370, 1698,
	561, 1698,
	-2, 1831,
	-1, 2147,
	543, 2796,
	633, 2796,
	636, 2796,
	-2, 0,
	-1, 2164,
	631, 1972,
	-2, 1960,
	-1, 2196,
	196, 2796,
	633, 2796,
	636, 2796,
	-2, 0,
	-1, 2239,
	1, 761,
	634, 761,
	-2, 1585,
	-1, 2414,
	233, 282,
	-2, 2472,
	-1, 2415,
	233, 283,
	-2, 338,
	-1, 2526,
	1, 995,
	630, 995,
	632, 995,
	634, 995,
	-2, 0,
	-1, 2527,
	1, 1039,
	630, 1039,
	632, 1039,
	634, 1039,
	-2, 0,
	-1, 2528,
	1, 1047,
	630, 1047,
	632, 1047,
	634, 1047,
	-2, 0,
	-1, 2529,
	1, 1098,
	630, 1098,
	632, 1098,
	634, 1098,
	-2, 0,
	-1, 2570,
	1, 1020,
	630, 1020,
	632, 1020,
	634, 1020,
	-2, 0,
	-1, 2592,
	1, 1081,
	630, 1081,
	632, 1081,
	634, 1081,
	-2, 0,
	-1, 2639,
	460, 1766,
	461, 1766,
	-2, 2005,
	-1, 2670,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2025,
	-1, 2671,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2026,
	-1, 2672,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2027,
	-1, 2673,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2028,
	-1, 2674,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2029,
	-1, 2675,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2030,
	-1, 2676,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2031,
	-1, 2677,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2032,
	-1, 2689,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2044,
	-1, 2690,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2045,
	-1, 2691,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2046,
	-1, 2695,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2053,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2057,
	-1, 2703,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2065,
	-1, 2704,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2066,
	-1, 2705,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2067,
	-1, 2706,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2068,
	-1, 2880,
	5, 2476,
	196, 2335,
	631, 2473,
	-2, 2464,
	-1, 2881,
	196, 2336,
	-2, 2876,
	-1, 2882,
	196, 2337,
	-2, 2674,
	-1, 2883,
	196, 2338,
	-2, 2550,
	-1, 2884,
	196, 2339,
	-2, 2612,
	-1, 2885,
	196, 2340,
	-2, 2659,
	-1, 2886,
	196, 2341,
	-2, 2794,
	-1, 2887,
	196, 2342,
	-2, 2132,
	-1, 2959,
	1, 1832,
	2, 1832,
	110, 1832,
	156, 1832,
	176, 1832,
	189, 1832,
	197, 1832,
	215, 1832,
	218, 1832,
	247, 1832,
	252, 1832,
	263, 1832,
	281, 1832,
	285, 1832,
	325, 1832,
	359, 1832,
	364, 1832,
	370, 1832,
	450, 1832,
	454, 1832,
	561, 1832,
	573, 1832,
	591, 1832,
	592, 1832,
	593, 1832,
	603, 1832,
	630, 1832,
	632, 1832,
	634, 1832,
	636, 1832,
	-2, 1831,
	-1, 2972,
	631, 2445,
	-2, 2459,
	-1, 2974,
	1, 355,
	591, 355,
	-2, 1725,
	-1, 3004,
	631, 1971,
	-2, 1961,
	-1, 3219,
	1, 1431,
	445, 1386,
	484, 1386,
	606, 1386,
	630, 1431,
	632, 1431,
	634, 1431,
	-2, 1725,
	-1, 3399,
	365, 1769,
	-2, 2915,
	-1, 3400,
	365, 1770,
	-2, 2778,
	-1, 3404,
	460, 2401,
	461, 2401,
	-2, 2130,
	-1, 3405,
	460, 2405,
	461, 2405,
	-2, 2131,
	-1, 3406,
	460, 2402,
	461, 2402,
	-2, 2130,
	-1, 3407,
	460, 2406,
	461, 2406,
	-2, 2131,
	-1, 3420,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2055,
	-1, 3421,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2059,
	-1, 3427,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2061,
	-1, 3654,
	1, 756,
	630, 756,
	632, 756,
	634, 756,
	-2, 1585,
	-1, 3853,
	45, 2436,
	-2, 1169,
	-1, 3858,
	1, 1431,
	630, 1431,
	632, 1431,
	634, 1431,
	-2, 1725,
	-1, 3965,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2063,
	-1, 3972,
	257, 0,
	259, 0,
	348, 0,
	-2, 2082,
	-1, 4040,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2111,
	-1, 4041,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2112,
	-1, 4042,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2113,
	-1, 4046,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2117,
	-1, 4047,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2118,
	-1, 4048,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2119,
	-1, 4096,
	631, 2446,
	-2, 2460,
	-1, 4313,
	633, 3032,
	-2, 1651,
	-1, 4371,
	257, 0,
	259, 0,
	348, 0,
	-2, 2083,
	-1, 4374,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2086,
	-1, 4375,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2088,
	-1, 4498,
	633, 2461,
	-2, 1466,
	-1, 4661,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2087,
	-1, 4662,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2089,
	-1, 4673,
	257, 0,
	-2, 2122,
	-1, 4867,
	257, 0,
	-2, 2123,
	-1, 5088,
	53, 0,
	230, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2879,
}

const sqlPrivate = 57344

const sqlLast = 147181

var sqlAct = [...]int{
	292, 5206, 5023, 5279, 5022, 3558, 3143, 3293, 4916, 1428,
	5150, 5134, 3173, 4734, 4908, 5100, 5087, 5220, 4979, 5074,
	3075, 2411, 3839, 4960, 5056, 5034, 4354, 5101, 5037, 3838,
	5159, 4494, 5102, 4813, 1484, 4836, 5013, 2489, 3850, 4800,
	5098, 4784, 1653, 5086, 1217, 4620, 1352, 2299, 4609, 4005,
	4576, 4871, 3957, 4615, 4113, 4549, 4739, 3263, 1171, 2649,
	3683, 1341, 3680, 4650, 4682, 2501, 4305, 1623, 4600, 3875,
	4297, 4602, 4819, 4945, 1425, 3413, 2912, 756, 4220, 1418,
	895, 2499, 1420, 1773, 4495, 4475, 2718, 3869, 3076, 1919,
	4625, 3823, 4251, 3251, 1162, 3315, 4253, 2657, 4270, 3686,
	3158, 3828, 2151, 4678, 3905, 3282, 3903, 2221, 895, 3743,
	2308, 3668, 1503, 3812, 3277, 828, 3279, 1228, 3827, 3669,
	1271, 2113, 3805, 2986, 3804, 3670, 1596, 3830, 4099, 2650,
	3564, 3541, 4353, 3604, 767, 974, 3345, 3581, 3573, 3310,
	3294, 3562, 41, 2320, 2400, 3611, 2082, 2398, 5135, 3226,
	970, 4, 2387, 3707, 1771, 2462, 2336, 3174, 4410, 2952,
	4066, 892, 2654, 1988, 1170, 191, 3540, 286, 4872, 2057,
	1219, 3397, 1423, 2018, 2731, 2449, 3309, 965, 2208, 2796,
	2131, 1711, 890, 2951, 2954, 1411, 2152, 2399, 3255, 2385,
	824, 2377, 1332, 3188, 2358, 2365, 1467, 2219, 1221, 2291,
	3264, 2287, 2787, 2932, 285, 1226, 2715, 1907, 2083, 1486,
	1817, 2638, 2621, 1748, 2619, 3287, 801, 1714, 896, 2380,
	2987, 2448, 3100, 1045, 3831, 3101, 897, 1397, 3061, 1625,
	4980, 1454, 3015, 1335, 2790, 2102, 743, 2052, 2092, 1314,
	765, 2497, 2099, 1189, 2768, 844, 2842, 901, 1482, 2941,
	2876, 2922, 2002, 201, 1920, 1349, 2909, 1921, 1408, 202,
	2620, 809, 1852, 820, 191, 2622, 2408, 1331, 1837, 991,
	1647, 120, 1746, 116, 2475, 901, 106, 2389, 1604, 1739,
	2643, 784, 5151, 5207, 904, 1202, 46, 757, 1479, 769,
	760, 45, 43, 946, 34, 885, 32, 30, 1926, 1347,
	1312, 3450, 1337, 1906, 1066, 4080, 1659, 4081, 5096, 3444,
	947, 2798, 904, 5290, 5282, 837, 840, 2931, 3785, 3560,
	4114, 4707, 2210, 2210, 78, 2210, 4704, 1166, 2210, 2210,
	1934, 1935, 2210, 1967, 1968, 1969, 1978, 1979, 1980, 5270,
	5269, 5239, 79, 2931, 2931, 4738, 5237, 5180, 5136, 4446,
	4738, 2420, 5137, 1971, 1965, 1224, 5126, 5124, 3885, 84,
	2931, 2931, 1937, 2231, 3884, 5121, 5118, 1934, 1935, 5122,
	5119, 5084, 1984, 5083, 5082, 2420, 5072, 2420, 3320, 5070,
	4738, 4701, 5065, 4738, 5060, 1329, 4822, 3639, 4738, 1990,
	5059, 1965, 2231, 3636, 4738, 1166, 1934, 1935, 1936, 1937,
	93, 5032, 4999, 4992, 4991, 4738, 2995, 2931, 2931, 1956,
	4984, 4959, 4956, 4938, 2420, 2420, 4738, 4566, 1953, 1463,
	1965, 4869, 3257, 1155, 3621, 2995, 1990, 1463, 1937, 4850,
	4815, 1315, 1315, 4331, 4147, 1936, 4757, 2924, 4756, 4745,
	2420, 972, 2420, 2420, 4744, 1146, 4737, 3785, 4738, 4689,
	4738, 1145, 2498, 2420, 51, 1990, 115, 4663, 3017, 2490,
	4070, 2995, 99, 112, 1936, 4636, 4633, 3511, 3512, 3320,
	3785, 2420, 4544, 2991, 2228, 1956, 2931, 1167, 4522, 4373,
	4321, 4315, 2931, 2995, 3898, 3898, 4267, 4178, 4146, 4091,
	4268, 4179, 4147, 4092, 3459, 1367, 1959, 1960, 1961, 1962,
	3460, 4089, 3256, 4073, 1161, 4090, 1942, 2931, 3989, 1375,
	3985, 3897, 2420, 1843, 2931, 3898, 2231, 2228, 3557, 1783,
	1764, 3552, 2931, 3551, 3502, 2931, 100, 2931, 3503, 3500,
	3492, 3490, 3461, 3501, 3493, 2931, 2931, 1223, 3319, 2231,
	3304, 3303, 3320, 1942, 2485, 2485, 3040, 3412, 1316, 1975,
	2931, 2231, 1985, 2744, 2745, 2746, 2763, 2764, 2765, 1964,
	1966, 2931, 1959, 1960, 1961, 1962, 2994, 2984, 5000, 2976,
	2995, 2931, 1942, 2420, 2766, 2930, 1981, 2484, 1982, 2931,
	1318, 2485, 1319, 4873, 4864, 1951, 1952, 4852, 1368, 4822,
	3320, 4070, 2923, 2931, 4613, 4566, 1964, 1966, 2228, 1673,
	4523, 4331, 4269, 1973, 1652, 3150, 3060, 2245, 2209, 1990,
	1344, 2225, 3256, 1368, 2419, 3168, 3051, 2078, 1957, 1646,
	252, 4196, 3960, 3931, 2100, 1964, 1966, 2313, 2370, 2756,
	3886, 1667, 1819, 2968, 2967, 2966, 2965, 2964, 2752, 252,
	1320, 1317, 1154, 3517, 1153, 1152, 1151, 1150, 1149, 1148,
	3887, 4855, 1144, 1143, 1142, 1957, 1141, 1140, 1139, 1652,
	1138, 3449, 1137, 1660, 1136, 3511, 3512, 1983, 3529, 3530,
	3531, 254, 3368, 4729, 1135, 1134, 1133, 1132, 1131, 1130,
	104, 1129, 1128, 1127, 1957, 1126, 1125, 1107, 1972, 1043,
	254, 1042, 1041, 1040, 1039, 1038, 1037, 1036, 1035, 1987,
	1661, 1034, 2211, 2211, 1033, 2211, 1661, 1661, 2211, 2211,
	1032, 1031, 2211, 1030, 1029, 1028, 2757, 2758, 2759, 2760,
	2562, 1027, 253, 1026, 1025, 1024, 2751, 1023, 1934, 1935,
	1022, 1021, 1020, 1019, 1787, 1018, 1987, 246, 1017, 199,
	107, 253, 2793, 111, 3526, 1016, 247, 1015, 2228, 1014,
	1013, 1012, 1011, 1010, 1009, 3527, 1008, 1007, 1963, 4428,
	1937, 2228, 996, 995, 99, 1987, 2228, 994, 989, 988,
	252, 981, 980, 979, 964, 203, 1934, 1935, 973, 963,
	920, 1958, 919, 159, 918, 917, 908, 907, 906, 905,
	3290, 867, 1343, 866, 203, 835, 1936, 4385, 3884, 834,
	833, 815, 1430, 1226, 3256, 2761, 2762, 1768, 1937, 1976,
	280, 279, 278, 277, 276, 275, 274, 273, 1958, 1436,
	272, 254, 271, 1672, 1963, 3272, 270, 1368, 269, 268,
	1226, 1226, 1226, 2228, 267, 266, 1987, 265, 2754, 2794,
	264, 3517, 263, 1989, 1936, 262, 261, 1958, 164, 260,
	1661, 259, 258, 257, 256, 1666, 255, 4123, 4085, 3899,
	3607, 3555, 3068, 3472, 204, 3455, 4627, 3446, 3348, 3236,
	3068, 1506, 253, 2999, 5111, 1226, 2973, 2923, 2060, 2958,
	1989, 1226, 1628, 1226, 2825, 2059, 1430, 246, 1471, 1472,
	1473, 2231, 3027, 2611, 2209, 1637, 247, 2228, 2225, 2272,
	200, 2614, 2823, 2809, 1942, 1458, 3556, 2230, 1169, 1989,
	2126, 1226, 2807, 1226, 2063, 1226, 5110, 2103, 3528, 1974,
	2029, 2795, 1628, 2792, 1901, 203, 1655, 2027, 1475, 2060,
	1948, 1949, 1955, 1977, 1954, 1950, 2059, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 1435, 1933, 1430, 1368,
	1351, 4395, 1942, 3527, 5107, 4394, 1614, 1716, 5085, 2020,
	5069, 4964, 4876, 4861, 4853, 2058, 1328, 4677, 1628, 4634,
	4612, 4452, 4408, 4407, 4401, 1628, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 1609, 1226, 4400, 1226, 252, 4280, 4399,
	4392, 1628, 4391, 252, 252, 4389, 4384, 4381, 4380, 4266,
	1226, 2755, 1226, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 4127, 1450, 4126, 4125, 4095, 2465, 4061, 4060,
	1415, 1650, 4059, 1402, 1405, 3981, 3976, 3511, 3512, 1720,
	1723, 1452, 3602, 3548, 1987, 3539, 3510, 3507, 254, 3511,
	3512, 4184, 3506, 3504, 254, 254, 3499, 3498, 3497, 3066,
	3494, 1628, 3491, 3471, 1658, 3454, 1665, 1635, 1671, 1601,
	3511, 3512, 1499, 1989, 1593, 1598, 901, 3447, 3511, 3512,
	3445, 1226, 252, 252, 1226, 3520, 3521, 3513, 3514, 3515,
	3516, 3518, 3519, 1444, 3305, 159, 4629, 2959, 3274, 253,
	2797, 1478, 2780, 1933, 1932, 253, 253, 1987, 1489, 1490,
	2020, 1845, 2427, 904, 246, 252, 5285, 2425, 2022, 5228,
	246, 246, 5227, 247, 5149, 5147, 3528, 1649, 1709, 247,
	247, 1353, 4007, 254, 254, 1648, 1631, 1762, 2021, 1767,
	2019, 5024, 4281, 191, 191, 252, 1481, 252, 1726, 1788,
	1491, 1492, 203, 1781, 4943, 1786, 1751, 1753, 203, 203,
	2741, 2742, 2743, 2767, 2753, 2747, 254, 2749, 2750, 2748,
	2735, 2736, 2737, 2738, 2739, 2740, 4928, 78, 4194, 4924,
	3628, 4923, 4922, 4902, 253, 253, 4901, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 79, 254, 4899, 254, 246,
	246, 3553, 4875, 1458, 252, 4874, 1458, 1749, 247, 247,
	4848, 3065, 84, 3517, 2721, 4834, 4831, 253, 252, 3065,
	1226, 1844, 4830, 2791, 4823, 3517, 1226, 4811, 1200, 4810,
	4753, 4724, 246, 4675, 4658, 4657, 4596, 203, 203, 4592,
	1742, 247, 4589, 3511, 3512, 4567, 3517, 253, 4427, 253,
	1911, 1167, 4406, 93, 3517, 254, 3008, 4332, 4182, 4181,
	4162, 4161, 246, 4856, 246, 4159, 3065, 4076, 4281, 254,
	203, 247, 4064, 247, 3971, 3523, 3524, 3525, 2007, 3900,
	1793, 2727, 3522, 3520, 3521, 3513, 3514, 3515, 3516, 3518,
	3519, 252, 4878, 3599, 972, 4877, 1861, 3894, 3861, 3765,
	3289, 1763, 203, 252, 3718, 3685, 253, 51, 3630, 115,
	3476, 1905, 4728, 3273, 3475, 99, 112, 1782, 3470, 3436,
	253, 246, 3250, 3093, 2066, 2065, 2064, 2061, 2053, 2051,
	247, 3006, 1226, 1226, 1226, 246, 3005, 2970, 1226, 2009,
	2963, 2929, 254, 2805, 247, 1349, 2006, 1349, 1938, 1939,
	1940, 1941, 1943, 1944, 254, 2125, 2081, 2075, 3527, 203,
	2074, 2073, 1506, 4628, 2072, 2071, 3527, 1810, 2070, 2069,
	2068, 2067, 2080, 203, 1226, 2048, 2047, 895, 1430, 100,
	2046, 2045, 2044, 2169, 895, 1846, 1430, 2043, 1430, 1347,
	1912, 1347, 252, 253, 2042, 2041, 2040, 2039, 1940, 1941,
	1943, 1944, 2038, 2037, 2036, 253, 2129, 2035, 246, 2034,
	2033, 2022, 2135, 2008, 2089, 2005, 2000, 247, 1987, 3517,
	246, 1443, 1372, 1363, 1740, 4599, 4448, 4377, 1908, 247,
	2137, 4122, 4088, 1916, 1146, 4079, 3458, 2997, 1915, 1987,
	1145, 2961, 1745, 254, 3890, 4702, 203, 1987, 1430, 4450,
	2142, 4121, 2148, 2021, 1226, 2062, 2121, 1910, 203, 3626,
	2198, 2003, 2200, 1485, 1470, 3144, 4525, 5219, 2313, 1468,
	3721, 4932, 4925, 1929, 1930, 4824, 2136, 2110, 1226, 2086,
	2087, 3511, 3512, 1345, 1483, 1485, 1506, 1934, 1935, 4632,
	4570, 2117, 1485, 1167, 253, 4569, 4568, 4524, 4430, 1485,
	2163, 4339, 4338, 2166, 4337, 5103, 4336, 4335, 1315, 246,
	4334, 2263, 2302, 191, 2054, 2055, 4333, 4148, 247, 1937,
	4083, 3528, 2233, 4820, 2824, 4082, 3902, 3901, 3789, 3528,
	2237, 3527, 3787, 104, 1469, 3786, 2270, 5176, 2143, 1458,
	2311, 1463, 2822, 2808, 901, 2192, 5174, 203, 2348, 4284,
	2130, 901, 2806, 2157, 3119, 1936, 5099, 2060, 3958, 1463,
	1903, 2103, 3755, 2028, 2059, 4211, 2134, 2236, 3496, 1809,
	3495, 3418, 3104, 2251, 1466, 4177, 4854, 1123, 4274, 3687,
	2108, 904, 1463, 2111, 2043, 2101, 1862, 3186, 904, 2043,
	4894, 2215, 199, 107, 2217, 3841, 111, 3840, 2031, 4142,
	2222, 4143, 2257, 2256, 2224, 1327, 1485, 2265, 4895, 2227,
	4895, 2490, 1987, 1818, 4814, 5132, 4610, 3316, 3813, 2466,
	1167, 4556, 2367, 252, 2079, 1819, 1124, 2402, 4289, 4263,
	4217, 973, 4208, 4187, 3928, 2120, 159, 3652, 2583, 2213,
	2119, 2118, 2495, 2116, 2433, 2115, 2114, 2105, 2401, 3515,
	3516, 3518, 3519, 4679, 2793, 1628, 1628, 2518, 3464, 3513,
	3514, 3515, 3516, 3518, 3519, 2239, 1506, 3560, 2788, 2149,
	4009, 5108, 4748, 4720, 254, 3004, 2076, 3522, 3520, 3521,
	3513, 3514, 3515, 3516, 3518, 3519, 3821, 3521, 3513, 3514,
	3515, 3516, 3518, 3519, 3528, 3102, 3146, 2056, 2459, 2354,
	1344, 164, 1344, 1719, 1642, 1439, 1744, 1401, 2235, 2347,
	5123, 5120, 4537, 4535, 3880, 3162, 4153, 204, 4917, 3165,
	3160, 4616, 2344, 1797, 2352, 253, 5031, 3690, 4172, 2260,
	2362, 3286, 1776, 3796, 5178, 2277, 4490, 2278, 2412, 2417,
	246, 5177, 4751, 5109, 3347, 4747, 4726, 2285, 2286, 247,
	3952, 2794, 3656, 200, 4779, 4230, 4511, 2266, 1686, 1121,
	2357, 2357, 2258, 1628, 2357, 1628, 3041, 1628, 959, 2381,
	3078, 1694, 4483, 2240, 5281, 1119, 4476, 1841, 1754, 1117,
	1860, 2279, 2280, 1103, 4509, 1628, 1628, 1745, 2283, 2284,
	2307, 5211, 4506, 5156, 4474, 2576, 4933, 1115, 4772, 1628,
	2574, 1112, 3627, 4478, 1859, 2252, 3064, 2319, 4759, 4559,
	4558, 1628, 2312, 1628, 1628, 1628, 1470, 4228, 3064, 4227,
	4219, 1644, 3062, 4202, 901, 2629, 2592, 4229, 4484, 2589,
	3228, 4201, 4199, 2795, 3062, 2792, 4198, 895, 2404, 2405,
	2355, 2309, 2341, 4186, 4145, 2406, 2527, 4144, 3802, 2517,
	2455, 2262, 4156, 3513, 3514, 3515, 3516, 3518, 3519, 1226,
	3801, 904, 3658, 1695, 3757, 3620, 1453, 3469, 3468, 3467,
	3466, 1470, 4477, 3422, 2460, 1649, 2305, 3184, 3183, 2838,
	960, 2472, 1343, 1648, 1343, 2590, 1469, 2627, 3081, 2261,
	1840, 2382, 2353, 3167, 2340, 2337, 3156, 1226, 2361, 3148,
	2077, 3720, 3138, 3137, 3129, 2493, 1464, 4749, 4721, 2310,
	1795, 1858, 2528, 2391, 2591, 3128, 2391, 2837, 2390, 1464,
	2292, 2390, 2394, 3127, 3109, 2293, 3108, 2418, 1165, 3069,
	807, 3687, 2522, 1226, 2985, 1226, 2480, 2702, 1909, 2306,
	2503, 1469, 1226, 3753, 2659, 2169, 2169, 1506, 1690, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 2441, 1226, 2510, 1226, 1226,
	1226, 1226, 1749, 2469, 1749, 2482, 2440, 2121, 2547, 1464,
	2563, 1732, 2797, 1731, 901, 2356, 2356, 4505, 2402, 2356,
	5212, 1742, 5157, 2477, 1226, 2477, 807, 2490, 1226, 1226,
	2631, 2509, 2478, 2474, 1164, 4507, 1226, 3283, 2998, 1444,
	1226, 1460, 1226, 1226, 4656, 2486, 1167, 2487, 1167, 2618,
	1506, 904, 2294, 4479, 1460, 2628, 1226, 1226, 1226, 1226,
	4480, 1744, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	2298, 4485, 2163, 2163, 4457, 2166, 2166, 1730, 3012, 1729,
	3123, 3511, 3512, 5214, 2989, 2439, 1487, 1488, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 4526, 1226, 2526,
	2629, 1811, 1226, 2613, 2769, 2770, 3519, 2537, 1487, 1488,
	2788, 3080, 1944, 4482, 1349, 1487, 1488, 3106, 2769, 2785,
	1645, 1506, 1487, 1488, 3754, 2157, 2157, 1465, 3929, 1841,
	1349, 2604, 4486, 2626, 1460, 2791, 1387, 2570, 4467, 1109,
	1465, 2655, 2656, 1790, 2609, 2833, 1226, 1506, 3048, 2295,
	2300, 2321, 1166, 864, 2642, 2601, 2514, 755, 1347, 2534,
	3526, 1899, 2627, 1703, 2879, 2879, 2893, 1902, 2769, 3376,
	2350, 2913, 2915, 5177, 1347, 2717, 2325, 2717, 2921, 3136,
	806, 3363, 3323, 3132, 750, 5215, 3130, 1819, 4490, 1461,
	2733, 2615, 2617, 1708, 2630, 2623, 1857, 2616, 1838, 1462,
	1146, 2975, 1461, 1146, 1146, 4466, 2646, 962, 961, 2647,
	2648, 4910, 1462, 3092, 1819, 2784, 4503, 2581, 1878, 1872,
	1465, 2946, 2971, 1442, 4483, 2568, 2725, 3395, 3164, 2267,
	2268, 3410, 4789, 2723, 2322, 2296, 3655, 1914, 2383, 2091,
	5223, 5105, 1840, 1807, 2938, 2531, 1876, 2525, 2988, 2603,
	2625, 1715, 1430, 1430, 5243, 2392, 4169, 3517, 3161, 4508,
	2110, 3035, 3163, 3159, 1839, 1791, 806, 3079, 5213, 4481,
	4243, 862, 3091, 3133, 2729, 2479, 3131, 2535, 4183, 3939,
	4484, 3938, 1461, 1315, 3714, 3365, 2782, 3379, 2303, 2797,
	3063, 4885, 1462, 1506, 2393, 3014, 808, 3011, 4557, 1167,
	5217, 4200, 2395, 3998, 1796, 4197, 1713, 4130, 1005, 1167,
	4117, 4491, 4492, 1167, 1113, 2960, 2937, 3932, 3737, 3808,
	2628, 2992, 2384, 3800, 3751, 3030, 2095, 3036, 3166, 4655,
	1113, 4244, 3033, 2875, 1113, 191, 2904, 3010, 2919, 2888,
	4912, 2917, 2169, 1163, 3126, 3712, 1458, 3107, 2326, 2575,
	2301, 2416, 1114, 2939, 2573, 2945, 1113, 2950, 2927, 2928,
	2956, 2957, 1689, 2108, 3661, 1854, 2943, 2944, 5189, 3527,
	2610, 3409, 997, 2062, 3729, 4242, 2098, 2699, 4167, 3738,
	2424, 2423, 808, 3044, 1463, 2835, 3402, 3403, 5198, 3713,
	2836, 1506, 2093, 2839, 3995, 2840, 2841, 1463, 2626, 998,
	3878, 5197, 3105, 1167, 2371, 2983, 3046, 1628, 2292, 2378,
	2096, 3038, 3022, 2293, 3070, 2327, 2328, 957, 3026, 956,
	3055, 3032, 3007, 3736, 1430, 3933, 5106, 2313, 3378, 3029,
	3806, 4501, 3037, 3219, 5245, 3730, 2054, 2055, 5164, 2713,
	2600, 2895, 2323, 4359, 3047, 1226, 1226, 3177, 1226, 4504,
	1987, 4358, 3016, 3039, 2094, 3809, 3877, 2210, 3067, 2163,
	3021, 3375, 2166, 3223, 3024, 3045, 3025, 3031, 3372, 1344,
	2711, 5008, 2797, 895, 982, 1430, 3996, 1463, 3124, 3728,
	3142, 2297, 1692, 3111, 3262, 1344, 3877, 3000, 4712, 3750,
	2324, 3433, 4790, 3575, 2368, 4479, 3042, 3157, 2333, 2311,
	863, 987, 4480, 5221, 1873, 4788, 1628, 3674, 5216, 2316,
	3254, 4786, 2157, 4485, 1794, 3749, 1095, 3096, 4918, 1628,
	3297, 1628, 3431, 3306, 3224, 3746, 2372, 1628, 3112, 3270,
	2294, 3110, 3528, 3311, 2602, 5104, 5076, 3073, 5077, 1628,
	1386, 1159, 3083, 3086, 3125, 3056, 3057, 751, 2298, 3058,
	3059, 3768, 865, 3135, 2697, 4482, 861, 2700, 3178, 2334,
	3054, 4785, 2533, 1430, 2397, 1430, 3326, 3327, 3222, 4940,
	2317, 4996, 3377, 1345, 4486, 1345, 3185, 3333, 3334, 3335,
	1095, 3220, 3221, 2097, 3145, 909, 3237, 1226, 1715, 3240,
	4787, 3242, 3140, 3134, 3117, 3118, 3120, 3121, 3122, 3147,
	4502, 3314, 3317, 2332, 3154, 1159, 3313, 901, 2696, 3657,
	1870, 805, 916, 3702, 2315, 3708, 1820, 2329, 2707, 3170,
	5222, 1643, 4911, 3171, 3172, 2396, 4586, 2295, 2300, 1370,
	2351, 999, 1000, 752, 3260, 3266, 1096, 3349, 3288, 3350,
	901, 3288, 2708, 3064, 904, 2797, 3229, 3308, 3351, 2709,
	2049, 1343, 1874, 2714, 3424, 1226, 2716, 5224, 1649, 3084,
	1357, 1226, 1226, 3343, 1110, 5163, 3234, 1343, 1792, 191,
	3428, 3807, 3710, 3701, 3231, 3318, 1359, 904, 3248, 3233,
	2569, 3324, 3301, 3624, 2349, 753, 3299, 754, 3522, 3520,
	3521, 3513, 3514, 3515, 3516, 3518, 3519, 3793, 2724, 2330,
	1096, 3429, 3574, 1354, 2368, 3434, 4355, 1441, 2974, 4954,
	1006, 4481, 2303, 2296, 3292, 4168, 2368, 1226, 1226, 3302,
	4652, 1913, 1877, 1226, 3361, 1871, 3675, 1806, 1808, 3381,
	2530, 3383, 2524, 983, 984, 1749, 1226, 1226, 4668, 5187,
	3342, 3709, 1226, 1226, 5042, 2392, 3300, 4538, 1226, 1360,
	3281, 1175, 1875, 4491, 4492, 3354, 2095, 3356, 2375, 3358,
	4439, 5241, 2290, 3340, 4946, 3321, 2303, 4440, 1999, 774,
	4994, 2312, 3328, 2364, 3329, 3229, 3474, 1361, 4947, 3353,
	5142, 3355, 2942, 3357, 2393, 3359, 3360, 3352, 1101, 1100,
	5143, 2779, 5246, 1226, 1226, 1226, 2955, 3141, 1166, 1226,
	2363, 4011, 5230, 4598, 4346, 4699, 2098, 3425, 3369, 1226,
	3384, 4603, 4948, 3386, 2698, 4995, 4562, 4118, 4360, 2373,
	2292, 1358, 2940, 2288, 1376, 2293, 1226, 3390, 2301, 4438,
	3401, 4604, 1374, 3954, 3393, 2359, 1097, 2211, 1001, 1002,
	2096, 4780, 3457, 4961, 910, 911, 1825, 5048, 2091, 2710,
	3392, 3391, 1101, 1100, 4978, 4833, 4561, 4587, 4560, 2712,
	4303, 3865, 3638, 2374, 2642, 4651, 3396, 2289, 2310, 2982,
	3452, 3453, 2447, 2088, 1373, 3456, 4279, 1366, 4256, 5162,
	4950, 742, 1924, 1923, 1923, 3448, 2580, 4404, 4254, 4256,
	4356, 2645, 2314, 3411, 4050, 2253, 1918, 4746, 2360, 4254,
	1097, 3430, 4696, 4842, 5251, 4949, 3612, 3681, 2635, 4892,
	2250, 3432, 4304, 4223, 4203, 4154, 4152, 3866, 1226, 1226,
	1226, 1226, 3181, 4951, 3857, 3583, 3423, 1226, 1226, 1226,
	3677, 3271, 1226, 3265, 3252, 2095, 2473, 2467, 2461, 2453,
	985, 986, 2294, 2432, 1226, 1349, 1506, 2431, 3994, 4962,
	1226, 1184, 1226, 3567, 3568, 4827, 1683, 4138, 1378, 2297,
	2298, 1349, 4065, 5014, 3955, 3068, 1923, 1098, 3085, 814,
	4981, 2582, 4306, 4621, 2246, 4258, 3249, 1389, 4806, 1506,
	4361, 4804, 4723, 3693, 3689, 2098, 4258, 2248, 3688, 1347,
	2933, 1349, 1922, 1922, 1506, 1099, 913, 912, 3416, 3511,
	3512, 2093, 3529, 3530, 3531, 1347, 1430, 4257, 3550, 3463,
	3394, 4653, 4078, 2097, 3113, 1167, 2169, 2515, 4257, 2096,
	1506, 3592, 4369, 3572, 3584, 3571, 3569, 2936, 1848, 1847,
	1430, 1098, 2507, 4112, 2249, 1347, 2496, 2429, 1430, 2295,
	2300, 1842, 2981, 2980, 2979, 2978, 2977, 3640, 5141, 1738,
	1355, 1102, 3605, 1736, 2636, 1724, 4262, 1004, 4601, 1099,
	1226, 3257, 1164, 2094, 914, 915, 1924, 1924, 2935, 1725,
	4362, 4735, 1226, 2934, 2276, 1922, 3582, 3589, 3526, 4905,
	3619, 4577, 3089, 2302, 4275, 4160, 3606, 2471, 3816, 3579,
	1430, 3577, 5184, 4710, 2388, 853, 2169, 4051, 4708, 3676,
	4149, 4405, 3665, 3666, 3634, 3601, 1356, 3346, 4052, 3227,
	3925, 3637, 3622, 1226, 3588, 1102, 4252, 3322, 3653, 2302,
	3232, 4808, 3230, 2500, 3691, 2296, 5250, 3695, 1999, 1430,
	3659, 2401, 854, 2163, 3769, 1800, 2166, 4731, 3726, 3610,
	4718, 5020, 3598, 1458, 3614, 3615, 3616, 3617, 1430, 3578,
	1430, 4730, 3561, 4906, 3590, 3646, 4963, 3740, 3591, 3742,
	3593, 3594, 4826, 3576, 4139, 3692, 4461, 4460, 3697, 1226,
	1226, 3699, 3756, 2367, 5028, 3517, 5011, 1506, 2303, 4411,
	2367, 2135, 4736, 3545, 3546, 3547, 2157, 4952, 1430, 4255,
	4067, 4719, 2097, 4953, 3678, 3114, 3115, 3779, 4807, 2804,
	4255, 3771, 3625, 3773, 4700, 1430, 3777, 4443, 1826, 1895,
	3783, 2596, 5050, 2163, 3791, 3596, 2166, 3597, 1897, 1894,
	3642, 1892, 5188, 3644, 3645, 3585, 3586, 3587, 3648, 3784,
	3649, 1866, 3650, 1621, 3723, 3663, 5021, 1628, 1864, 3705,
	2301, 5186, 1836, 2572, 5125, 3533, 3647, 1834, 4907, 4936,
	1430, 1628, 4926, 1628, 3613, 1832, 4706, 1506, 4674, 1830,
	3715, 3716, 3747, 3717, 895, 1628, 2157, 3673, 813, 3654,
	4150, 3643, 1828, 1678, 4454, 3741, 4403, 3766, 1628, 3664,
	3662, 2275, 3684, 1822, 1816, 3727, 1814, 3527, 4261, 1734,
	1430, 3826, 3542, 3970, 3926, 3923, 3758, 3635, 3505, 3858,
	1344, 1737, 2386, 3435, 3253, 1735, 3155, 1349, 3725, 1003,
	3871, 3873, 3149, 3846, 3762, 3763, 1344, 3764, 3711, 3103,
	3009, 3719, 2605, 2506, 3810, 2539, 1757, 3739, 2491, 1628,
	3311, 2128, 1345, 3856, 3811, 3732, 3814, 3631, 3632, 3311,
	3633, 1628, 1772, 1628, 3752, 3735, 1344, 2124, 1345, 1898,
	1775, 1347, 4792, 4459, 3543, 3770, 3950, 3949, 3941, 1918,
	3367, 3366, 3331, 3893, 2624, 1853, 3761, 3778, 1987, 2542,
	2410, 2297, 3767, 2452, 2430, 2199, 3864, 2197, 2032, 1789,
	3780, 1707, 3882, 1311, 3790, 2803, 5097, 3798, 3733, 3788,
	3930, 4543, 3734, 3849, 4539, 3259, 1506, 3135, 2598, 1506,
	4210, 3792, 1801, 4209, 4521, 2597, 5010, 4619, 4548, 4534,
	4472, 4471, 1896, 1893, 4443, 1891, 3867, 4302, 4293, 4226,
	4205, 4175, 4173, 4151, 3797, 1865, 3860, 3799, 3111, 5160,
	2571, 901, 1863, 1226, 1111, 3942, 1835, 3921, 3803, 1226,
	1226, 1833, 3855, 1226, 1226, 1226, 3818, 1226, 3874, 1831,
	3528, 3842, 3847, 1829, 3853, 3284, 1226, 2169, 3276, 3269,
	3261, 3245, 3244, 3854, 3225, 1226, 1827, 3028, 904, 3852,
	1226, 3023, 2428, 2426, 2403, 2369, 1506, 1821, 1815, 2331,
	1813, 2318, 1343, 1733, 2304, 1226, 3879, 2232, 191, 191,
	3872, 2229, 2226, 1506, 284, 3888, 3881, 3922, 1343, 2223,
	2218, 3891, 3892, 2169, 2169, 1226, 1226, 3948, 1226, 1226,
	1226, 3947, 2538, 2216, 2212, 2203, 4614, 3991, 3870, 5155,
	5081, 2141, 5178, 3414, 1927, 2254, 1226, 4904, 1343, 3387,
	1226, 2608, 2169, 2169, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 3385, 1226, 4023, 2409, 4024, 3973,
	2242, 2243, 3956, 1226, 1226, 2169, 3983, 3984, 1324, 3218,
	1226, 3781, 5062, 4972, 2163, 4635, 2378, 2166, 4603, 2606,
	3919, 1226, 3945, 1167, 4555, 3935, 3924, 3936, 3953, 3937,
	4458, 3951, 1349, 1349, 3312, 1325, 1226, 3660, 4604, 3523,
	3524, 3525, 1116, 1118, 1120, 2271, 3522, 3520, 3521, 3513,
	3514, 3515, 3516, 3518, 3519, 1688, 3064, 3064, 4844, 3090,
	2163, 2163, 3415, 2166, 2166, 4837, 2607, 2157, 1506, 4314,
	3980, 2313, 3062, 3087, 2529, 4097, 1347, 1347, 1928, 3978,
	2470, 1430, 1430, 1409, 2949, 1410, 4062, 1889, 1890, 2163,
	2163, 2566, 2166, 2166, 3990, 2561, 1430, 1430, 4084, 895,
	1430, 5061, 1344, 4006, 2536, 4013, 4512, 3997, 3999, 4000,
	4550, 3182, 1158, 2157, 2157, 1934, 1935, 1812, 2338, 1226,
	1480, 842, 2163, 2343, 4021, 2166, 3094, 2241, 4022, 2655,
	4014, 4863, 4054, 3782, 4028, 4026, 1934, 1935, 4733, 4412,
	4390, 5172, 2157, 2157, 5133, 3706, 1226, 1937, 3095, 1326,
	1234, 3116, 1931, 1437, 1377, 4115, 4116, 1477, 2655, 4029,
	3095, 4222, 4074, 4075, 4063, 281, 3243, 4290, 4055, 1410,
	4128, 4129, 1410, 2454, 4135, 2157, 1448, 3162, 191, 1226,
	1226, 3160, 3169, 1936, 3151, 4221, 3097, 2313, 4071, 4072,
	1869, 4058, 845, 845, 859, 3153, 2345, 5019, 288, 288,
	288, 5001, 745, 746, 1936, 761, 745, 761, 772, 3152,
	3099, 812, 4971, 4965, 739, 832, 4086, 4903, 1226, 1226,
	839, 839, 839, 839, 3098, 4828, 1226, 4799, 4711, 4300,
	288, 4292, 4155, 4278, 4094, 3859, 3291, 2920, 2238, 2150,
	2339, 4087, 4001, 5218, 5052, 4732, 3139, 1628, 1628, 5053,
	1628, 978, 1641, 1640, 1628, 4188, 1634, 1628, 288, 1160,
	4131, 3623, 1430, 2388, 4069, 4020, 901, 5249, 3511, 3512,
	5191, 4240, 1934, 1935, 1633, 5052, 2282, 3050, 4967, 1799,
	5053, 1652, 4136, 4382, 1343, 1798, 4137, 2169, 2281, 3049,
	2799, 1651, 4120, 4193, 4195, 1652, 4192, 3370, 2834, 2282,
	2281, 1868, 4218, 904, 1867, 4299, 4829, 4773, 4552, 4547,
	4546, 4224, 4441, 4437, 4436, 4378, 4352, 4119, 4002, 3775,
	4180, 3772, 4185, 3373, 2026, 2025, 4212, 3389, 2612, 5234,
	5199, 5067, 1628, 4234, 4174, 5005, 4176, 4307, 1226, 3111,
	5004, 5003, 4935, 4934, 4245, 4246, 1349, 1226, 4287, 4316,
	4881, 4248, 4879, 4802, 4271, 4763, 1628, 4703, 4698, 4697,
	4695, 1628, 1628, 1628, 4694, 3297, 4692, 4322, 4594, 4574,
	4510, 4449, 4435, 4434, 4433, 4327, 4320, 4265, 4171, 3311,
	4163, 3863, 3862, 3698, 1628, 4285, 1628, 1344, 1344, 4260,
	1347, 3641, 1506, 3374, 4324, 3364, 3339, 745, 745, 4308,
	3338, 3178, 4124, 4231, 2163, 288, 4311, 2166, 4273, 3337,
	3336, 3275, 4225, 4277, 3247, 3246, 4238, 3088, 4241, 4249,
	3019, 1506, 3013, 3002, 1226, 1226, 4328, 4286, 4310, 3001,
	1226, 1226, 2169, 2990, 2728, 1226, 1226, 4264, 1226, 2599,
	2567, 4239, 4291, 1226, 2560, 2559, 2558, 2557, 2556, 2468,
	2442, 2438, 2437, 2436, 1226, 2435, 2434, 2157, 2206, 2205,
	2204, 2202, 4295, 2140, 2139, 1888, 4294, 4342, 1887, 1823,
	1226, 1702, 2335, 3684, 1701, 4340, 4296, 4309, 1700, 1699,
	4343, 1698, 2349, 1697, 4312, 4317, 1696, 4318, 1691, 1687,
	1685, 1684, 1618, 4325, 1617, 4363, 1616, 1497, 4326, 2351,
	1496, 1495, 1494, 1493, 1440, 1396, 1395, 1394, 1393, 1392,
	1391, 1390, 1388, 4250, 4376, 1383, 4259, 1382, 1157, 1381,
	1095, 4364, 1380, 1379, 971, 8, 1306, 2244, 1122, 4345,
	4350, 1349, 1108, 2346, 4372, 4909, 4489, 4488, 2348, 1349,
	4344, 4357, 4487, 1506, 1506, 1159, 1506, 2595, 2488, 2163,
	98, 1693, 2166, 1349, 933, 92, 2376, 4170, 1072, 5049,
	4939, 1676, 941, 5030, 1628, 1628, 2502, 2504, 4288, 1343,
	1343, 3700, 3187, 4349, 2541, 1347, 1824, 2342, 2543, 4417,
	2508, 3600, 2962, 1347, 1506, 4993, 4386, 3473, 4870, 4667,
	2802, 2030, 2516, 1158, 2519, 2520, 2521, 1347, 3554, 94,
	1210, 2012, 2157, 1345, 1256, 2017, 4585, 4584, 4473, 1226,
	4157, 4351, 2350, 3829, 3605, 4581, 4580, 2154, 4402, 1345,
	1349, 2156, 1349, 1174, 4341, 4462, 4463, 1509, 5075, 2255,
	4444, 4445, 5240, 1216, 2269, 2264, 3003, 2878, 1233, 1230,
	1096, 2158, 2160, 4420, 4422, 1232, 1231, 1430, 2159, 1345,
	2050, 1229, 2153, 4499, 4513, 4298, 4520, 1506, 3295, 1430,
	4447, 4413, 1430, 3889, 1347, 4500, 1347, 4465, 4529, 4418,
	1743, 4532, 4425, 4453, 4416, 4409, 4456, 1226, 4419, 1741,
	1506, 4496, 1074, 4496, 4516, 4517, 4426, 4429, 2259, 191,
	4414, 4415, 2722, 2786, 3462, 2023, 4514, 1190, 1212, 2347,
	2783, 1344, 1371, 1201, 3580, 3559, 3876, 4551, 4093, 4553,
	2634, 951, 3508, 4470, 2789, 1362, 4455, 2901, 4442, 2894,
	4468, 2890, 1628, 1628, 3651, 3285, 1904, 4464, 4681, 2001,
	3296, 1900, 1474, 1194, 1419, 2720, 2014, 3440, 2644, 3883,
	3603, 2996, 5055, 4010, 3371, 2446, 1323, 1322, 1369, 4578,
	1321, 1430, 5036, 5033, 2366, 4588, 3824, 3825, 2247, 3043,
	4605, 2732, 3843, 1506, 1206, 4515, 1612, 2587, 1628, 4554,
	3943, 4575, 3565, 4622, 4276, 4536, 1704, 4740, 1218, 1986,
	4545, 3214, 3213, 4898, 1459, 1457, 1456, 4572, 1455, 4533,
	5208, 3180, 1101, 1100, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 2379, 4166, 4611, 4165, 4164, 4573, 1599, 251, 4606,
	1613, 1419, 3408, 1925, 1917, 4530, 1506, 248, 4541, 250,
	249, 3704, 4098, 3609, 4565, 4519, 5131, 4190, 1226, 1226,
	1226, 3815, 4564, 4571, 4563, 4623, 4597, 25, 4528, 846,
	1097, 4531, 847, 848, 3053, 2274, 1506, 1476, 4583, 4590,
	4141, 1226, 4591, 4595, 1226, 1226, 4579, 24, 23, 22,
	4626, 21, 121, 4617, 1226, 44, 20, 2169, 163, 161,
	138, 4631, 1226, 1226, 158, 4624, 157, 130, 4640, 156,
	155, 4593, 4644, 1343, 1419, 1419, 1344, 154, 153, 1506,
	152, 1628, 160, 151, 1344, 4607, 4637, 4646, 1364, 4638,
	4659, 150, 145, 149, 148, 147, 146, 144, 1344, 4608,
	142, 143, 137, 141, 140, 1430, 139, 136, 4630, 135,
	134, 133, 132, 131, 129, 162, 128, 127, 4654, 205,
	126, 125, 1385, 124, 4664, 123, 122, 1506, 825, 826,
	63, 62, 118, 119, 288, 1226, 288, 288, 19, 1414,
	288, 1424, 42, 14, 67, 1504, 68, 18, 1226, 13,
	37, 97, 1438, 110, 109, 1345, 108, 1226, 38, 4676,
	832, 1098, 2169, 832, 105, 1344, 4717, 1344, 4687, 4688,
	4670, 36, 1226, 17, 2163, 1226, 16, 2166, 15, 4705,
	103, 102, 101, 4714, 35, 4715, 839, 1156, 33, 1099,
	11, 1226, 9, 4690, 1226, 4691, 39, 2112, 12, 5,
	196, 1506, 195, 198, 194, 4743, 197, 96, 193, 1430,
	288, 192, 288, 288, 1414, 95, 288, 288, 4782, 1628,
	1628, 1628, 31, 4713, 4716, 1424, 10, 2157, 4766, 2302,
	4767, 4722, 188, 4762, 4647, 4818, 4648, 4283, 87, 288,
	1349, 1654, 190, 189, 187, 1102, 186, 185, 88, 85,
	184, 91, 4709, 4791, 183, 86, 90, 1674, 1343, 89,
	4778, 29, 6, 66, 1681, 7, 1343, 3826, 4649, 3927,
	1506, 4809, 113, 1628, 4801, 4805, 114, 4817, 4838, 2163,
	1343, 40, 2166, 1706, 1347, 4812, 1424, 83, 4764, 4760,
	288, 288, 82, 1414, 4765, 81, 80, 28, 4775, 65,
	27, 4496, 180, 4796, 4797, 4825, 2639, 229, 1226, 1226,
	4794, 228, 227, 4793, 832, 226, 288, 288, 225, 224,
	223, 4843, 4847, 222, 4849, 1226, 2169, 4803, 1769, 217,
	4821, 221, 2157, 219, 218, 220, 216, 4798, 4816, 1777,
	4839, 242, 4754, 4755, 978, 4841, 241, 1343, 4752, 1343,
	240, 239, 1430, 238, 232, 1430, 231, 1430, 1430, 237,
	236, 235, 4840, 234, 233, 4783, 230, 245, 3179, 4846,
	4835, 4626, 4845, 76, 4768, 1226, 215, 1226, 4774, 1226,
	4776, 214, 4777, 213, 4859, 4860, 211, 207, 4781, 1349,
	210, 212, 209, 208, 4851, 206, 4893, 244, 243, 77,
	178, 179, 1226, 75, 1349, 177, 176, 4891, 175, 174,
	173, 172, 4862, 171, 4858, 74, 182, 181, 26, 2,
	1, 0, 0, 0, 0, 288, 4880, 0, 4868, 4882,
	0, 4883, 4884, 1347, 0, 4921, 0, 0, 0, 0,
	1345, 1345, 0, 2163, 0, 0, 2166, 0, 1347, 288,
	4496, 4890, 2896, 4889, 0, 0, 0, 0, 4920, 0,
	0, 1349, 1349, 0, 0, 4496, 4914, 0, 0, 0,
	4886, 0, 0, 4913, 0, 1226, 0, 0, 0, 4944,
	4942, 0, 1349, 1613, 0, 1349, 0, 0, 3325, 1628,
	0, 0, 4957, 4958, 0, 0, 2157, 0, 0, 1628,
	3332, 0, 4929, 0, 0, 1347, 1347, 0, 0, 4931,
	0, 0, 0, 4975, 1226, 1226, 4977, 0, 0, 0,
	4937, 0, 4496, 4496, 1226, 0, 1347, 0, 0, 1347,
	0, 0, 4955, 1613, 0, 0, 0, 0, 0, 0,
	0, 4966, 4969, 4496, 4968, 0, 4496, 4989, 0, 4990,
	4821, 4974, 0, 0, 0, 4985, 4982, 4983, 0, 0,
	0, 0, 0, 4927, 4987, 4986, 4988, 0, 0, 0,
	0, 0, 0, 0, 4998, 1226, 1226, 0, 0, 1226,
	0, 2726, 0, 1628, 1430, 5006, 0, 1430, 5002, 5027,
	4997, 0, 4941, 0, 0, 1344, 0, 2012, 0, 5035,
	5038, 0, 5009, 0, 0, 0, 0, 4930, 0, 5017,
	5018, 0, 5051, 0, 5057, 5058, 5054, 5025, 5007, 0,
	0, 4973, 5026, 0, 0, 0, 2127, 0, 0, 0,
	0, 0, 0, 0, 5040, 0, 0, 5044, 5078, 0,
	5080, 0, 0, 0, 0, 1226, 1226, 1226, 0, 0,
	0, 5039, 1633, 0, 745, 5043, 0, 0, 5046, 1633,
	0, 5047, 0, 0, 0, 5063, 5045, 0, 0, 0,
	0, 0, 5068, 0, 0, 288, 0, 288, 0, 5079,
	5071, 288, 1226, 0, 0, 0, 5112, 0, 0, 5092,
	5093, 5117, 0, 0, 1654, 1414, 2132, 288, 0, 288,
	2138, 5095, 5094, 0, 0, 0, 0, 288, 0, 761,
	0, 0, 0, 0, 288, 5140, 2302, 5113, 5139, 5114,
	0, 0, 0, 5138, 0, 0, 5115, 0, 0, 5146,
	2207, 0, 5152, 0, 0, 0, 0, 5148, 0, 1226,
	5130, 0, 288, 0, 1344, 0, 0, 1430, 5145, 288,
	2273, 5128, 0, 5144, 1345, 5161, 0, 0, 5064, 1344,
	0, 4801, 0, 5153, 5066, 5154, 0, 0, 5179, 0,
	5158, 5171, 0, 5167, 5168, 0, 0, 1343, 0, 0,
	5175, 0, 832, 0, 5173, 0, 5170, 3437, 3438, 0,
	5182, 0, 0, 5194, 0, 5183, 5035, 0, 1349, 5038,
	1349, 5185, 5181, 5204, 5195, 5190, 0, 0, 5057, 5192,
	0, 5202, 5193, 5196, 0, 0, 1344, 1344, 0, 5201,
	839, 5169, 839, 5210, 5200, 0, 0, 0, 0, 5203,
	0, 5205, 839, 839, 0, 0, 0, 1344, 2458, 1430,
	1344, 0, 1347, 0, 1347, 5209, 5225, 5226, 0, 0,
	5232, 0, 5233, 0, 0, 0, 0, 5236, 0, 4496,
	0, 4496, 0, 0, 0, 0, 0, 5231, 3915, 1226,
	1226, 5244, 0, 5127, 5235, 0, 5129, 5238, 1226, 1226,
	5242, 3913, 0, 0, 3297, 5247, 0, 5258, 0, 0,
	5252, 3906, 0, 5256, 5263, 0, 5262, 5260, 5265, 0,
	5268, 5267, 0, 5266, 5264, 5259, 0, 0, 0, 5261,
	0, 0, 0, 5229, 3297, 5272, 1430, 5273, 5277, 5275,
	5271, 0, 5280, 5278, 0, 5276, 1343, 5274, 0, 5283,
	2421, 0, 0, 0, 0, 0, 1226, 0, 0, 1345,
	5287, 1343, 5289, 5280, 5291, 0, 0, 1345, 5284, 0,
	0, 0, 0, 0, 5253, 5254, 5286, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 3535,
	3536, 3537, 3538, 0, 0, 0, 0, 0, 3917, 0,
	0, 4101, 0, 288, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 3915, 3908, 0, 0, 1343, 1343,
	0, 0, 0, 0, 0, 0, 0, 3913, 2588, 0,
	3907, 0, 5288, 0, 0, 0, 3398, 3906, 0, 1343,
	0, 0, 1343, 0, 0, 0, 0, 0, 1345, 0,
	1345, 0, 0, 0, 0, 0, 4102, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 288, 1934, 1935, 0, 5255, 0,
	288, 0, 0, 4103, 0, 4100, 0, 3916, 0, 0,
	0, 0, 0, 0, 4111, 0, 288, 0, 288, 1965,
	4109, 0, 745, 0, 288, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 832, 2896, 2896, 0,
	978, 0, 0, 0, 3917, 0, 0, 0, 3904, 0,
	0, 0, 0, 0, 1990, 4110, 0, 0, 0, 0,
	4106, 3908, 0, 1936, 0, 0, 0, 0, 0, 0,
	288, 0, 1414, 288, 0, 0, 3907, 0, 0, 0,
	0, 0, 0, 0, 0, 4107, 0, 832, 0, 0,
	0, 0, 0, 1344, 288, 1344, 0, 0, 0, 0,
	0, 0, 2540, 0, 0, 0, 0, 288, 288, 0,
	288, 0, 288, 0, 288, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3916, 0, 78, 0, 0, 3794, 0,
	0, 2577, 0, 0, 2578, 0, 2579, 0, 0, 0,
	0, 2658, 0, 79, 0, 0, 1633, 0, 0, 0,
	0, 288, 288, 288, 288, 0, 3819, 0, 0, 0,
	84, 1942, 0, 3914, 3909, 3910, 3911, 3912, 0, 3848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	812, 0, 0, 0, 832, 0, 0, 0, 0, 0,
	0, 868, 0, 0, 0, 0, 0, 0, 0, 1419,
	0, 93, 0, 3918, 0, 0, 0, 0, 4104, 2896,
	2896, 2896, 2896, 0, 1964, 1966, 4105, 879, 0, 0,
	3896, 0, 0, 0, 0, 290, 0, 1633, 1633, 0,
	0, 0, 3920, 0, 2800, 0, 0, 881, 0, 0,
	0, 0, 972, 0, 0, 0, 0, 0, 1419, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	880, 0, 0, 99, 112, 1343, 0, 1343, 0, 0,
	4108, 0, 0, 1957, 0, 0, 0, 2734, 0, 0,
	1419, 1419, 0, 0, 0, 0, 0, 0, 0, 3914,
	3909, 3910, 3911, 3912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 873, 0, 0, 0, 0, 0, 0,
	889, 0, 0, 0, 0, 0, 0, 100, 0, 3918,
	0, 2972, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	288, 0, 745, 0, 0, 0, 1599, 877, 1345, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 0, 0, 0, 1633,
	1633, 1633, 1633, 0, 0, 288, 1424, 0, 0, 0,
	0, 0, 0, 0, 1613, 3966, 3967, 0, 0, 0,
	1188, 875, 0, 0, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2993, 0, 0, 288, 1424, 0, 0, 761, 0,
	761, 0, 0, 0, 3018, 0, 0, 3052, 0, 0,
	288, 104, 0, 288, 0, 0, 0, 288, 0, 288,
	888, 0, 0, 0, 1414, 0, 288, 288, 1989, 1424,
	1424, 3034, 0, 0, 0, 0, 288, 3511, 3512, 0,
	3529, 3530, 3531, 0, 0, 4030, 4031, 4032, 4033, 4034,
	4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044,
	4045, 4046, 4047, 4048, 4049, 0, 4053, 1345, 0, 0,
	199, 107, 0, 0, 111, 0, 0, 0, 0, 0,
	839, 839, 1345, 0, 839, 839, 0, 3511, 3512, 0,
	3529, 3530, 3531, 3077, 0, 0, 0, 0, 0, 0,
	0, 252, 870, 0, 0, 288, 0, 0, 0, 973,
	4368, 0, 0, 0, 159, 0, 3526, 0, 0, 288,
	1613, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 1419, 288, 0, 0, 874, 0, 0, 0, 1345,
	1345, 0, 0, 832, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 1345, 0, 0, 3526, 0, 0, 0,
	288, 0, 0, 0, 806, 0, 1181, 0, 0, 164,
	0, 0, 288, 288, 3175, 1654, 1613, 0, 1613, 0,
	884, 0, 0, 0, 0, 204, 872, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3517, 0, 0, 0, 0, 246, 0,
	288, 3235, 0, 0, 0, 0, 0, 247, 4232, 4233,
	0, 200, 0, 0, 0, 4235, 0, 0, 4236, 0,
	0, 0, 0, 0, 0, 0, 869, 0, 1654, 0,
	0, 288, 882, 288, 0, 0, 203, 0, 0, 3534,
	288, 0, 0, 3517, 0, 2896, 2896, 0, 0, 0,
	3280, 0, 0, 0, 0, 876, 0, 0, 0, 0,
	3077, 0, 745, 3533, 0, 0, 0, 0, 0, 0,
	808, 3175, 978, 3077, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3527, 886, 887, 0, 883,
	0, 0, 0, 3533, 288, 1414, 288, 4323, 0, 0,
	0, 0, 2502, 4329, 4330, 0, 1424, 288, 0, 0,
	1414, 0, 1414, 0, 1414, 2896, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 2896, 2896, 3527, 2896, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 48, 47,
	0, 288, 288, 288, 288, 1414, 1987, 0, 1414, 0,
	288, 0, 0, 0, 79, 288, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 0, 288, 0, 0, 50,
	0, 167, 1965, 0, 288, 0, 1987, 0, 0, 0,
	1937, 0, 0, 0, 0, 1633, 1633, 0, 0, 0,
	49, 0, 93, 0, 0, 0, 1345, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 3528, 0,
	0, 0, 0, 0, 0, 0, 1936, 0, 0, 52,
	70, 0, 0, 0, 0, 0, 0, 1956, 53, 0,
	0, 0, 0, 59, 0, 0, 1953, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 51, 0, 115, 0,
	0, 0, 0, 0, 99, 112, 0, 0, 3528, 0,
	0, 0, 71, 0, 0, 4431, 4432, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 0, 1633, 0, 54, 0,
	1654, 0, 0, 0, 0, 1188, 1188, 1188, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 100, 0,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1613, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3523, 3524, 3525,
	0, 0, 0, 0, 3522, 3520, 3521, 3513, 3514, 3515,
	3516, 3518, 3519, 0, 0, 0, 0, 1964, 1966, 0,
	3566, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 72, 0, 0, 0, 0,
	0, 0, 0, 1951, 1952, 0, 0, 3523, 3524, 3525,
	0, 1613, 0, 3595, 3522, 3520, 3521, 3513, 3514, 3515,
	3516, 3518, 3519, 2502, 0, 0, 0, 0, 3608, 0,
	0, 0, 0, 2458, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 3629, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 745, 104, 0, 745, 0, 0, 745, 745, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	55, 288, 0, 0, 0, 4639, 0, 4641, 4642, 4643,
	0, 4645, 0, 288, 0, 0, 0, 58, 0, 0,
	0, 0, 61, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	60, 199, 107, 0, 0, 111, 0, 0, 0, 56,
	0, 0, 0, 169, 288, 0, 0, 0, 288, 288,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 1934, 1935, 0, 0,
	64, 0, 0, 0, 0, 159, 1963, 0, 0, 0,
	0, 1419, 3077, 3077, 288, 0, 3671, 2132, 0, 0,
	1965, 166, 4693, 3077, 0, 2138, 0, 0, 1937, 1958,
	0, 0, 0, 0, 3077, 2138, 0, 3077, 2138, 0,
	0, 2138, 0, 254, 3671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 288, 288, 2132, 0,
	288, 0, 0, 0, 1936, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 1956, 0, 2132, 0, 288,
	0, 3745, 0, 3745, 1953, 4673, 204, 0, 0, 1414,
	0, 1989, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 3077, 0, 3077, 1613, 3776, 3077, 2132, 247, 0,
	3077, 3608, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2132, 0, 0, 832, 0, 0,
	4367, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4795, 0, 1959, 1960, 1961, 1962, 4725, 0, 0, 1414,
	0, 0, 1942, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 288, 0, 3820, 0, 0, 0,
	3822, 3077, 0, 0, 288, 0, 0, 288, 0, 0,
	3851, 0, 1424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1964, 1966, 288, 0, 0,
	0, 0, 3280, 0, 0, 1414, 0, 288, 0, 966,
	3077, 0, 745, 0, 0, 0, 0, 0, 0, 3077,
	0, 1951, 1952, 0, 0, 0, 0, 1590, 0, 0,
	3944, 0, 0, 1504, 0, 0, 0, 78, 0, 969,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 1957, 79, 0, 0, 1978, 1979,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 3934,
	0, 0, 84, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 0, 0, 3940,
	0, 0, 0, 1654, 1984, 0, 0, 1414, 288, 0,
	288, 0, 0, 0, 0, 0, 1414, 0, 0, 0,
	3987, 1990, 0, 93, 0, 0, 0, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 4867, 4003, 0, 0,
	0, 1956, 0, 0, 0, 1987, 0, 288, 0, 0,
	1953, 0, 2090, 1188, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 0, 972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2896, 0, 51, 0, 115,
	0, 0, 0, 0, 0, 99, 112, 0, 4897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 4008, 0, 0, 0, 0,
	0, 0, 0, 4919, 0, 0, 0, 0, 0, 0,
	2502, 0, 0, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 1962, 3511, 3512, 78, 3529, 3530, 3531, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 79, 0, 0, 3975, 2896, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 4096, 0, 0, 0, 0, 0, 0, 0,
	1970, 1975, 0, 0, 1985, 0, 1419, 0, 0, 1989,
	0, 1964, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 288, 0, 0, 0, 0, 0, 0,
	93, 3526, 0, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 745, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 1590, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 972, 0, 0, 0, 0, 0, 1173, 0, 0,
	0, 0, 0, 0, 51, 0, 115, 0, 0, 288,
	2458, 0, 99, 112, 0, 1633, 0, 0, 0, 0,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 3517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2896, 0, 0, 0,
	0, 832, 0, 0, 0, 0, 1633, 0, 0, 0,
	0, 0, 199, 107, 0, 0, 111, 0, 3511, 3512,
	0, 3529, 3530, 3531, 0, 0, 0, 4204, 3533, 0,
	4206, 4207, 0, 0, 0, 0, 0, 3745, 0, 0,
	1963, 3974, 0, 252, 0, 0, 0, 0, 2896, 0,
	0, 973, 288, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 1958, 3511, 3512, 3175, 3529, 3530, 3531,
	3527, 0, 0, 2896, 0, 0, 0, 0, 0, 0,
	0, 2132, 0, 288, 0, 0, 0, 761, 761, 1424,
	1970, 1976, 0, 0, 254, 0, 0, 3526, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 3280, 0, 0, 3280, 2138, 0,
	0, 164, 0, 288, 0, 1989, 0, 0, 0, 0,
	3851, 0, 0, 0, 0, 0, 288, 204, 0, 0,
	104, 288, 0, 3526, 0, 253, 288, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 3077, 288, 0, 0, 247,
	0, 0, 1590, 200, 0, 3175, 0, 0, 978, 3077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3517, 0, 1633, 1419, 967, 199,
	107, 1974, 0, 111, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 2132, 0, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	252, 0, 0, 3528, 0, 0, 0, 0, 973, 0,
	3517, 0, 0, 159, 0, 0, 0, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 3533, 1590, 0, 2458, 0, 0,
	0, 0, 0, 1633, 0, 0, 1970, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 4387, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	4424, 0, 0, 0, 0, 0, 3527, 0, 164, 0,
	3533, 0, 0, 1970, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 204, 1970, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 1590, 0, 4451, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 288, 3527, 0, 0, 0, 247, 1654, 0, 288,
	200, 0, 1590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 3523, 3524, 3525, 1752, 0, 1987, 0, 3522,
	3520, 3521, 3513, 3514, 3515, 3516, 3518, 3519, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1424, 0, 288, 1424, 0, 0, 1970, 0, 0,
	0, 0, 1970, 0, 0, 3077, 3077, 0, 3671, 0,
	0, 3745, 3077, 1987, 0, 0, 1970, 0, 0, 0,
	4498, 1970, 4498, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3077, 0, 2138, 0, 0, 0,
	3671, 0, 1654, 1654, 288, 2132, 0, 0, 0, 3528,
	0, 0, 0, 0, 0, 0, 0, 0, 2132, 0,
	288, 2132, 0, 288, 0, 0, 3745, 0, 0, 0,
	0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 0, 1433, 1970, 3077, 1590, 3077,
	288, 0, 1970, 0, 0, 3528, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 1173, 1173, 1173, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3077,
	3077, 0, 1990, 0, 0, 3280, 3280, 0, 0, 0,
	0, 1936, 3671, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 1956, 0, 288, 0, 0, 1603, 0, 0,
	0, 1953, 0, 1619, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4665, 0, 0, 0, 0, 0, 1590, 0, 0, 0,
	0, 0, 0, 1656, 0, 1662, 0, 1668, 3523, 3524,
	3525, 0, 0, 0, 0, 3522, 3520, 3521, 3513, 3514,
	3515, 3516, 3518, 3519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4665, 0, 0, 0, 0, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 3523, 3524, 3525, 0, 1970, 1942,
	0, 3522, 3520, 3521, 3513, 3514, 3515, 3516, 3518, 3519,
	0, 1970, 0, 0, 0, 0, 1760, 0, 1765, 0,
	0, 2658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 1985, 0, 0, 0, 0,
	0, 1613, 1964, 1966, 0, 0, 0, 2900, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 1970, 1951, 1952,
	0, 0, 3077, 2138, 0, 2138, 0, 0, 3851, 0,
	0, 0, 0, 0, 0, 2658, 1973, 288, 0, 0,
	0, 0, 0, 1849, 0, 0, 1855, 4741, 0, 4741,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 0, 0, 0, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3745, 1654, 0, 1654, 1414,
	0, 0, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 2132, 0,
	288, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 1987, 0, 0, 0, 1936, 3851, 0, 0,
	4498, 0, 0, 1654, 0, 0, 0, 3077, 0, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1654,
	0, 0, 2011, 0, 0, 0, 0, 0, 2024, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 288, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4008, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 0,
	0, 3745, 4888, 0, 0, 0, 0, 0, 0, 3851,
	0, 0, 0, 0, 0, 0, 1989, 0, 1934, 1935,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 4498,
	0, 0, 0, 0, 2084, 2084, 2084, 1964, 1966, 0,
	0, 0, 1965, 0, 4498, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 1990, 0, 0, 0, 0,
	0, 0, 0, 0, 1936, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 1956, 0, 1990, 0, 0,
	0, 0, 0, 761, 1953, 0, 1936, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 1957, 0, 0, 0,
	0, 4498, 4498, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 4498, 0, 288, 4498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2138, 0, 0, 0, 0,
	3969, 0, 0, 0, 0, 1654, 0, 1654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 0,
	0, 1590, 1942, 0, 0, 0, 1424, 1987, 0, 0,
	1173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5015, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 0, 4741, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1590,
	0, 0, 0, 0, 0, 1964, 1966, 0, 0, 0,
	0, 1970, 0, 0, 3077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1590, 0, 1964, 1966, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 1958,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 1188, 0, 0, 0, 0,
	0, 4008, 0, 0, 0, 0, 0, 1188, 0, 0,
	1970, 0, 0, 0, 1970, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 1654, 0, 0, 1970, 0,
	0, 1989, 0, 0, 0, 0, 0, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 0, 0, 1987, 0, 0, 1970, 0,
	1970, 1970, 1970, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 2900, 2900, 0, 0, 0, 1987, 3851, 0,
	0, 78, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 0, 1590, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 1963, 0, 84, 0, 3077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4498, 0,
	4498, 0, 0, 1654, 0, 0, 0, 1958, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 1970, 1590, 0, 1970, 0, 0, 1970, 0, 0,
	0, 0, 0, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	0, 0, 0, 0, 3077, 0, 0, 0, 972, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3175, 0, 115, 0, 0, 0, 0, 0, 99,
	112, 1989, 0, 0, 3077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 2564, 3532, 0, 2900, 2900, 2900, 2900, 0, 0,
	1970, 0, 1970, 0, 0, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 2593,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 0, 1590, 0, 0, 0, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 2633, 0, 2637, 0, 0,
	0, 0, 0, 0, 2651, 0, 0, 0, 0, 0,
	0, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 0, 2701, 0,
	2703, 2704, 2705, 2706, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2730, 0, 1590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 2781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 104, 2811, 2814,
	2817, 2820, 0, 0, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1222,
	0, 0, 2892, 0, 2903, 2905, 2910, 0, 0, 0,
	0, 0, 0, 1934, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 107, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 287, 287, 287,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 0,
	0, 0, 1934, 1935, 0, 973, 0, 0, 0, 0,
	159, 0, 1990, 1590, 0, 0, 0, 0, 0, 902,
	0, 1936, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 1956, 0, 1937, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 902, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1970, 1970, 0, 1970, 0,
	1936, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 204, 0, 0, 0, 0, 0, 3964, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 247, 0, 0, 0, 200, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3963, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 1942, 0,
	0, 0, 1964, 1966, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 1346, 0, 0, 2871, 2872, 2873,
	2874, 2867, 2868, 2869, 2870, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 1970, 1970, 0,
	2900, 2900, 0, 0, 1970, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 3532, 3532, 0, 0, 1970, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 2847, 2848, 2849, 2850, 0, 0, 0, 0, 0,
	1957, 0, 1970, 0, 0, 0, 0, 3238, 3239, 0,
	3241, 0, 0, 0, 1970, 2859, 2860, 2861, 2862, 2855,
	2856, 2857, 2858, 2863, 2864, 2865, 2866, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 0, 0,
	2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900,
	2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900,
	0, 2900, 3532, 3532, 3532, 3532, 1590, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 1963, 0, 0, 0, 0, 0, 0, 2843, 2844,
	2845, 2846, 2851, 2852, 2853, 2854, 0, 1970, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 283, 741,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 3362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 1590,
	0, 1590, 1965, 0, 0, 0, 0, 0, 0, 3205,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 1991, 1992, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 1590,
	1970, 0, 0, 3195, 3193, 0, 1936, 0, 0, 0,
	3197, 3199, 3189, 1258, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 1188, 0, 1953, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 3420,
	3421, 0, 0, 0, 0, 3427, 0, 0, 0, 0,
	0, 0, 0, 3215, 0, 0, 1970, 1970, 0, 0,
	0, 0, 0, 0, 3441, 3442, 0, 0, 0, 0,
	2781, 0, 1590, 0, 0, 0, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 0, 0, 1590, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 3451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3477, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 0,
	0, 0, 0, 0, 1981, 0, 1982, 0, 0, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 3191,
	0, 0, 0, 287, 0, 287, 287, 0, 0, 287,
	3207, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 0, 0, 0,
	0, 1590, 0, 0, 3206, 3196, 3194, 3198, 3200, 3190,
	3192, 3208, 3210, 0, 0, 0, 0, 0, 0, 2910,
	2910, 2910, 3202, 3204, 3212, 0, 0, 0, 1970, 1970,
	0, 1590, 1970, 3532, 3532, 1970, 2084, 0, 1350, 1970,
	0, 0, 0, 0, 3570, 1983, 1970, 0, 0, 287,
	0, 287, 287, 0, 0, 287, 287, 0, 3216, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 0, 0, 1987, 902, 0,
	0, 0, 1970, 1970, 1970, 1970, 1970, 0, 0, 0,
	0, 0, 1970, 0, 1970, 0, 0, 3532, 3532, 3532,
	3532, 3532, 3532, 3532, 3532, 3532, 3532, 3532, 3532, 3532,
	3532, 3532, 3532, 3532, 3532, 3532, 3532, 0, 0, 0,
	3532, 0, 1590, 1970, 1970, 0, 0, 0, 0, 287,
	287, 0, 0, 0, 0, 1970, 1963, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 1173, 0, 0, 287, 287, 0, 0, 1958,
	0, 0, 0, 0, 1173, 0, 0, 0, 0, 0,
	1188, 0, 0, 0, 0, 0, 0, 3209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 3703, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3217, 0,
	0, 0, 0, 0, 0, 0, 1970, 3201, 3203, 3211,
	0, 3759, 3760, 0, 287, 1590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 1970, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1400, 0, 1400, 1400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 1970, 0, 0, 0, 1970, 1970, 0,
	0, 1970, 1970, 0, 0, 0, 1970, 0, 0, 0,
	1970, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2106, 0, 1346, 0, 0, 0,
	287, 0, 0, 0, 0, 2651, 0, 0, 0, 0,
	0, 3961, 3962, 0, 0, 3965, 287, 2106, 287, 3968,
	1934, 1935, 0, 0, 0, 0, 902, 0, 3972, 0,
	0, 2900, 0, 902, 0, 0, 0, 3979, 0, 0,
	0, 0, 3570, 0, 1965, 0, 0, 0, 0, 0,
	0, 1188, 1937, 0, 0, 0, 0, 3992, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 1758, 1759, 4015, 4016, 1990,
	4017, 4018, 4019, 0, 0, 0, 0, 0, 1936, 1970,
	0, 0, 0, 1934, 1935, 0, 0, 0, 4025, 1956,
	0, 0, 4027, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 4056, 4057, 0, 0, 1211,
	117, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 1990, 4068, 0, 0, 0, 0, 0, 0,
	0, 1936, 0, 0, 3426, 0, 0, 0, 4077, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1879, 1350, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 1970, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 1970,
	3532, 2900, 0, 0, 0, 0, 0, 1970, 0, 0,
	1970, 1350, 0, 0, 0, 0, 0, 3419, 1350, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1964,
	1966, 4140, 0, 0, 1350, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 3532, 2900, 0, 1951, 1952, 0, 4158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 1970, 2900, 0,
	0, 0, 287, 0, 0, 1970, 902, 0, 1957, 0,
	0, 0, 4189, 0, 1350, 0, 1970, 0, 1970, 0,
	0, 0, 1964, 1966, 0, 0, 0, 0, 0, 0,
	0, 1147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 0, 0, 0, 0, 1951, 1952,
	4213, 4214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 287,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1333, 287, 0, 287, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 0, 1970, 3532, 0, 0, 1970, 1963, 287,
	0, 0, 287, 0, 0, 0, 2133, 0, 1611, 0,
	0, 0, 1987, 0, 0, 0, 3532, 0, 0, 0,
	2084, 1958, 0, 287, 0, 0, 0, 0, 0, 4319,
	0, 0, 0, 0, 0, 0, 902, 287, 0, 287,
	0, 287, 0, 287, 0, 287, 0, 0, 0, 0,
	0, 1400, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	287, 287, 287, 287, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4365, 4366, 0, 0,
	0, 0, 4370, 4371, 0, 0, 0, 4374, 4375, 0,
	0, 0, 0, 0, 0, 4379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	1350, 0, 4388, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 2170, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 2444, 287, 0, 0, 2451, 0, 4542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2476, 0, 2476, 0, 0,
	0, 0, 0, 2483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 287, 0, 0, 0, 287, 0, 287, 0,
	0, 0, 0, 0, 0, 287, 287, 0, 0, 2451,
	0, 0, 2512, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 1350,
	0, 0, 0, 2532, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 2548, 0, 2550,
	0, 2552, 0, 2554, 0, 2555, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4660, 4661, 4662, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	2584, 2585, 2586, 2651, 0, 0, 4671, 4672, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4680, 4683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 1350, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 792, 1350, 1350,
	0, 287, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 1350, 117, 0, 117, 0, 0, 775, 0,
	0, 0, 0, 776, 1350, 0, 1350, 1350, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4742, 0, 0, 0, 0, 0, 0, 0, 0, 4750,
	0, 0, 0, 0, 777, 0, 0, 1168, 117, 117,
	287, 0, 902, 0, 4758, 778, 0, 1173, 0, 287,
	0, 0, 0, 0, 117, 0, 117, 0, 0, 0,
	0, 0, 0, 4769, 0, 0, 4771, 779, 0, 0,
	117, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 287, 0, 0, 2170, 2170,
	1350, 0, 0, 0, 0, 781, 287, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2969, 0, 0, 0, 0, 782, 0,
	0, 0, 0, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 287, 287, 287, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 287, 0, 0, 797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 3020,
	1147, 0, 1400, 287, 0, 0, 1400, 4896, 1400, 0,
	0, 4900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 0, 0, 0, 2464, 794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 2016, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 785, 0, 4970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 805, 0, 786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2651, 0, 0,
	0, 0, 0, 0, 0, 0, 4683, 0, 0, 1611,
	0, 0, 0, 0, 2104, 0, 2107, 0, 117, 0,
	0, 2451, 2451, 0, 0, 0, 0, 0, 0, 0,
	806, 0, 0, 0, 0, 0, 0, 0, 787, 0,
	0, 0, 0, 802, 803, 0, 800, 0, 0, 0,
	0, 0, 795, 0, 0, 788, 0, 0, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3258, 0, 0, 0, 0, 0, 0, 0, 0, 2464,
	789, 0, 796, 0, 0, 0, 0, 0, 0, 0,
	0, 790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 2170, 791, 5091, 5091, 5091,
	0, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	0, 0, 0, 0, 3330, 0, 0, 793, 0, 0,
	0, 0, 0, 0, 5116, 0, 0, 0, 0, 0,
	2106, 0, 0, 3341, 1350, 3344, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5091, 0, 287, 0, 0, 0, 287, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3380, 1611, 3382, 1611, 0, 0, 0, 0, 0, 3388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1400, 0, 0, 0, 1350,
	0, 0, 0, 3417, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 1350, 287, 287, 0, 0, 287,
	1350, 0, 0, 0, 0, 0, 2106, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5091, 5248, 0, 0, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 1168, 0, 1168, 0, 0, 0, 0, 0,
	0, 0, 0, 902, 0, 0, 1044, 0, 1095, 0,
	0, 0, 0, 287, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1052, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	1067, 0, 1050, 1049, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 1069, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 1054, 117, 0, 0,
	0, 1106, 0, 1079, 0, 0, 0, 0, 0, 0,
	0, 1064, 1065, 0, 0, 0, 0, 0, 0, 0,
	1084, 1975, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 0, 0, 0, 0, 0, 1096, 1056,
	0, 0, 0, 0, 0, 1057, 0, 287, 1981, 287,
	1982, 0, 0, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1973, 1147, 1093, 0, 1147,
	1147, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	1957, 0, 3618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	0, 0, 0, 1400, 0, 2719, 1048, 1611, 1611, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 1061, 1062, 0, 0,
	1972, 0, 0, 0, 0, 2010, 0, 0, 0, 2010,
	0, 1987, 0, 3667, 0, 1070, 1068, 0, 0, 0,
	0, 0, 0, 1063, 0, 0, 0, 1080, 0, 0,
	1101, 1100, 0, 0, 0, 0, 0, 0, 1350, 1350,
	0, 0, 0, 0, 0, 1103, 1092, 0, 0, 0,
	0, 0, 1235, 0, 1350, 3722, 3724, 0, 0, 2464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 1350, 0, 0, 0, 0, 0, 1097, 0,
	0, 1346, 1346, 1333, 1350, 0, 0, 1350, 0, 0,
	0, 0, 0, 1958, 0, 0, 0, 0, 0, 2107,
	289, 289, 289, 0, 0, 0, 0, 0, 0, 2170,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 1055, 0,
	117, 1105, 0, 0, 0, 0, 0, 0, 902, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	1088, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 2170,
	0, 0, 0, 0, 0, 792, 0, 0, 0, 0,
	0, 0, 0, 3844, 0, 0, 2451, 0, 0, 1098,
	1086, 0, 0, 0, 0, 0, 775, 0, 1104, 1081,
	0, 776, 1073, 1071, 0, 0, 1076, 0, 0, 0,
	0, 1974, 1077, 0, 0, 1046, 0, 1099, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 1047, 777, 3486, 0, 0, 0, 3487, 0, 0,
	1350, 0, 0, 778, 1090, 0, 1078, 0, 0, 0,
	0, 287, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 779, 0, 0, 0, 0,
	0, 1082, 0, 1083, 0, 0, 0, 0, 0, 0,
	0, 1059, 287, 0, 0, 0, 0, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 1085, 3946, 0, 1611,
	1350, 287, 0, 0, 0, 0, 0, 0, 780, 0,
	0, 0, 287, 0, 1350, 0, 1350, 0, 0, 0,
	1350, 0, 287, 1087, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 781, 0, 287, 3959, 0, 0, 0,
	287, 1350, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 782, 0, 0, 0,
	0, 783, 0, 0, 0, 1346, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 807, 0,
	0, 0, 0, 117, 0, 0, 117, 293, 117, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 797, 1350, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 117, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 1350, 0, 794, 0, 0, 894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 0, 894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 0, 0,
	2170, 117, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 1990, 785, 0, 0, 0, 0, 0, 0,
	1346, 1936, 0, 0, 0, 0, 1350, 0, 1346, 0,
	0, 0, 1956, 0, 0, 0, 2170, 2170, 0, 0,
	0, 1953, 2106, 805, 0, 786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 2170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 0, 0, 0, 0, 787, 0, 2170, 0,
	0, 802, 803, 0, 800, 0, 0, 0, 0, 2106,
	795, 2106, 0, 788, 0, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 1350, 1350, 0, 0, 1942,
	2719, 0, 0, 287, 0, 0, 0, 0, 922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 2010, 287, 0, 0, 0, 0, 0, 789, 924,
	796, 1350, 0, 0, 925, 0, 0, 0, 0, 790,
	0, 0, 1975, 0, 0, 1985, 0, 0, 0, 287,
	0, 0, 1964, 1966, 791, 0, 0, 0, 0, 799,
	0, 0, 2464, 0, 0, 0, 0, 0, 0, 1981,
	0, 1982, 0, 0, 808, 926, 0, 943, 1951, 1952,
	0, 2464, 0, 0, 0, 793, 0, 0, 0, 0,
	0, 0, 4272, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 4282, 927, 0, 0, 0, 0, 928, 0,
	0, 1957, 0, 287, 0, 0, 0, 0, 0, 0,
	2464, 0, 0, 287, 0, 4301, 0, 0, 0, 0,
	952, 0, 0, 0, 0, 0, 0, 929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 950, 0, 0, 0, 0, 289, 0, 289, 289,
	1983, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 923, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 4347,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 930,
	0, 0, 0, 0, 931, 0, 0, 0, 0, 0,
	1350, 1350, 0, 1350, 0, 0, 954, 1350, 0, 0,
	1350, 807, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 289, 1510, 289, 289, 0, 0, 289, 289,
	1333, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	2170, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 953, 0, 0,
	0, 0, 1976, 0, 0, 0, 287, 948, 0, 1350,
	0, 0, 289, 289, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 1350, 1350, 1350, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 1989, 1510, 289, 289,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 1350,
	0, 0, 0, 1510, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 932, 0, 0, 0, 287,
	0, 0, 0, 0, 1350, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 0, 117, 117, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 2106,
	0, 0, 1974, 1510, 0, 0, 0, 0, 935, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 4518, 2777, 0, 0, 289, 2778, 944,
	0, 117, 117, 0, 117, 0, 0, 0, 0, 2464,
	0, 806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 921, 287, 287, 945, 0, 0,
	0, 0, 0, 0, 0, 0, 936, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 1350, 1350, 0, 1350,
	0, 0, 0, 942, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1350, 0,
	0, 937, 0, 0, 0, 938, 957, 0, 956, 0,
	0, 0, 939, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 2464, 0, 0, 0, 940, 2106, 0,
	0, 0, 949, 4618, 0, 0, 0, 0, 958, 0,
	955, 0, 0, 2106, 0, 1227, 0, 808, 0, 0,
	0, 0, 0, 1350, 0, 1350, 1333, 0, 0, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 287,
	0, 0, 0, 117, 117, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 2106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 1629,
	0, 2106, 0, 287, 2106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 1629, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 1629, 289,
	289, 289, 0, 0, 0, 0, 1350, 0, 0, 289,
	0, 1350, 0, 0, 0, 0, 289, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 4727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1350, 1350,
	1350, 1350, 1350, 1350, 289, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 1629, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2170, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 117, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4857, 1611, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2106, 0, 2106,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 1350, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 1510, 1510, 289,
	0, 0, 0, 1350, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 1350, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	289, 1971, 1965, 0, 0, 0, 289, 0, 0, 1507,
	1937, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 4976, 894, 0, 0, 0, 289, 2170,
	289, 894, 0, 0, 0, 0, 289, 1990, 0, 0,
	0, 0, 0, 0, 0, 1510, 1936, 1510, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1510, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 289, 0, 0, 289, 0, 0, 0, 117,
	0, 0, 1350, 1510, 0, 1510, 1510, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 1350, 5029, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 289,
	289, 0, 289, 0, 289, 0, 289, 0, 289, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 1350, 1350, 0, 0, 5073, 0,
	0, 0, 0, 289, 289, 289, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 1350, 0,
	0, 0, 1350, 0, 0, 0, 0, 1975, 0, 0,
	1985, 0, 1350, 0, 0, 0, 0, 1964, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 1982, 0, 0, 1510,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	1333, 0, 1629, 1629, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 1507, 0, 1983, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	1629, 0, 1629, 0, 1629, 0, 289, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 1958,
	0, 0, 1629, 1629, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 117, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 1629, 0,
	1629, 1629, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 894, 0, 289, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 1350, 289, 1350, 0, 289, 0, 0, 117, 289,
	0, 289, 0, 0, 0, 0, 0, 0, 289, 289,
	0, 0, 117, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 1507, 0, 0, 289, 0, 0,
	0, 0, 0, 4393, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 289, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 289, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 1971,
	1965, 1510, 0, 1510, 0, 0, 0, 0, 1937, 1510,
	0, 0, 0, 0, 0, 0, 0, 289, 1984, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 289, 0, 289, 0,
	0, 0, 0, 0, 1936, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 1508, 0, 0,
	0, 0, 2719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 289, 289, 289, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 1959, 1960, 1961, 1962, 0, 0, 289, 0,
	0, 0, 1942, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 1975, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 1982, 0, 0, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 1507, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	1630, 1630, 0, 0, 0, 0, 1629, 0, 1629, 0,
	0, 1508, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 0, 1963, 117, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 1510, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 0, 0, 0,
	1936, 1510, 0, 0, 0, 0, 0, 0, 1630, 0,
	1630, 1956, 1630, 0, 0, 0, 1510, 0, 0, 0,
	1953, 0, 0, 0, 0, 289, 0, 0, 0, 1989,
	1630, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 1630, 1630,
	1630, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	289, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 289, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3977, 0, 0, 0, 0, 0, 0, 289, 289,
	0, 1975, 289, 0, 1985, 0, 0, 0, 0, 289,
	0, 1964, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 1981, 0,
	1982, 0, 0, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 1983,
	0, 0, 0, 1510, 0, 1510, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 1508, 289, 1510, 0, 0,
	1972, 0, 0, 0, 0, 0, 289, 0, 0, 289,
	1510, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 1508, 0, 0, 0,
	1963, 0, 0, 1510, 0, 1510, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 1508, 1958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 1976, 0, 0, 0, 0, 0, 0, 1510, 0,
	289, 1510, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3489, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	1629, 0, 1630, 0, 1507, 0, 0, 0, 0, 0,
	1510, 894, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 1630, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1510, 0, 1510, 0, 0, 0, 1510, 0, 0, 1510,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 1510, 1510, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 1510, 0,
	0, 0, 289, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 1510, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 1629, 0, 1629, 0, 0,
	0, 1629, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 289, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 1510, 1510, 0, 0, 1629, 1629,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 1629, 0, 0, 289, 0, 0, 1507,
	0, 0, 0, 0, 0, 1510, 289, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 1510, 1510, 1510, 1510,
	1510, 1510, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 1965, 0, 0, 0, 0, 1510, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 1936, 0, 0,
	0, 1510, 1630, 1510, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 1630, 1953, 1630, 0,
	1507, 1507, 1508, 1507, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 1629, 1630, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 1959, 1960, 1961, 1962, 0,
	0, 0, 0, 0, 0, 1942, 1630, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 1507, 0, 0, 0, 0, 0,
	0, 1510, 1510, 1510, 0, 0, 0, 0, 1975, 0,
	0, 1985, 0, 0, 0, 0, 0, 1507, 1964, 1966,
	0, 1508, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 1982, 0, 0,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 1510, 0, 0, 0, 1629,
	1629, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 1976, 0,
	0, 1510, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 1507, 0,
	0, 289, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 1510, 1629, 1629, 1629, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 3488, 0, 0, 1507, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 1630, 0, 1630, 0, 0, 0, 1630,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 0, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 1982, 0, 0, 0, 0, 0, 0, 1951,
	1952, 1630, 0, 0, 0, 0, 1630, 1630, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 1630, 1957, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 1508, 1508,
	1629, 1508, 0, 0, 0, 1958, 0, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1630,
	1630, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 1976, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 1989, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 1948, 1949, 1955, 1977, 1954, 1950,
	1942, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 1630, 1630, 3485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 0, 0, 0, 1508, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	1981, 0, 1982, 0, 0, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	1630, 1630, 1630, 1630, 1630, 1630, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 1508, 0, 1630, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1976, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 1630, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 1511, 305,
	306, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517, 1518,
	307, 1519, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 1520,
	692, 319, 320, 321, 322, 323, 324, 1521, 1522, 0,
	325, 693, 694, 695, 1523, 326, 327, 696, 1524, 1591,
	1525, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	1526, 337, 338, 339, 336, 340, 1527, 341, 1630, 342,
	343, 344, 345, 346, 347, 1528, 348, 349, 350, 1290,
	351, 352, 353, 1529, 1530, 1532, 1531, 1533, 1534, 1535,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	1536, 364, 360, 362, 1537, 365, 363, 366, 1538, 367,
	368, 369, 1539, 1540, 370, 371, 372, 1541, 373, 374,
	375, 1542, 376, 377, 378, 1543, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 1544, 294, 1545, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 1546, 397,
	398, 399, 1547, 400, 401, 1548, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 1549, 414, 705, 1550, 706, 415, 1551, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 1552, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 1553, 1292, 512, 433, 710,
	711, 1554, 712, 1555, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 1556, 446, 448, 447, 1557, 449, 714,
	1297, 450, 451, 1298, 1558, 452, 453, 454, 455, 456,
	457, 460, 1559, 1560, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1561, 296, 1301, 506, 507,
	508, 509, 1562, 715, 510, 716, 513, 514, 1563, 0,
	515, 0, 516, 1564, 1565, 518, 519, 520, 1566, 1567,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 1568,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 1569, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 1570, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 1571,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 1572, 605, 606, 604, 607,
	608, 609, 1573, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	1574, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	1575, 640, 641, 0, 636, 627, 1576, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 1577, 650, 728, 729,
	730, 731, 1578, 660, 1579, 651, 652, 653, 654, 732,
	655, 733, 1580, 656, 657, 658, 659, 0, 661, 662,
	1581, 1582, 663, 664, 666, 668, 669, 665, 667, 670,
	1583, 671, 1584, 0, 672, 673, 674, 734, 735, 736,
	1585, 676, 675, 677, 678, 679, 737, 680, 681, 1586,
	1587, 1588, 1589, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 2947, 0,
	0, 0, 0, 0, 0, 0, 2948, 297, 298, 300,
	299, 301, 302, 303, 304, 1511, 305, 306, 1512, 1513,
	1514, 0, 1515, 687, 1516, 1517, 1518, 307, 1519, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 1520, 692, 319, 320,
	321, 322, 323, 324, 1521, 1522, 0, 325, 693, 694,
	695, 1523, 326, 327, 696, 1524, 1591, 1525, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1526, 337, 338,
	339, 336, 340, 1527, 341, 0, 342, 343, 344, 345,
	346, 347, 1528, 348, 349, 350, 1290, 351, 352, 353,
	1529, 1530, 1532, 1531, 1533, 1534, 1535, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 1536, 364, 360,
	362, 1537, 365, 363, 366, 1538, 367, 368, 369, 1539,
	1540, 370, 371, 372, 1541, 373, 374, 375, 1542, 376,
	377, 378, 1543, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	1544, 294, 1545, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 1546, 397, 398, 399, 1547,
	400, 401, 1548, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 1549, 414,
	705, 1550, 706, 415, 1551, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1293, 423, 424, 1552,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 1553, 1292, 512, 433, 710, 711, 1554, 712,
	1555, 434, 435, 1294, 713, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1556, 446, 448, 447, 1557, 449, 714, 1297, 450, 451,
	1298, 1558, 452, 453, 454, 455, 456, 457, 460, 1559,
	1560, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1561, 296, 1301, 506, 507, 508, 509, 1562,
	715, 510, 716, 513, 514, 1563, 0, 515, 0, 516,
	1564, 1565, 518, 519, 520, 1566, 1567, 521, 522, 717,
	1302, 523, 1303, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 1568, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 1569, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 1570, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 1571, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 1572, 605, 606, 604, 607, 608, 609, 1573,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 1574, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 1575, 640, 641,
	0, 636, 627, 1576, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 1577, 650, 728, 729, 730, 731, 1578,
	660, 1579, 651, 652, 653, 654, 732, 655, 733, 1580,
	656, 657, 658, 659, 0, 661, 662, 1581, 1582, 663,
	664, 666, 668, 669, 665, 667, 670, 1583, 671, 1584,
	0, 672, 673, 674, 734, 735, 736, 1585, 676, 675,
	677, 678, 679, 737, 680, 681, 1586, 1587, 1588, 1589,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 3986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3988, 297, 298, 300, 299, 301, 302, 303, 304,
	1511, 305, 306, 1512, 1513, 1514, 0, 1515, 687, 1516,
	1517, 1518, 307, 1519, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 1520, 692, 319, 320, 321, 322, 323, 324, 1521,
	1522, 0, 325, 693, 694, 695, 1523, 326, 327, 696,
	1524, 1591, 1525, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1526, 337, 338, 339, 336, 340, 1527, 341,
	0, 342, 343, 344, 345, 346, 347, 1528, 348, 349,
	350, 1290, 351, 352, 353, 1529, 1530, 1532, 1531, 1533,
	1534, 1535, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 1536, 364, 360, 362, 1537, 365, 363, 366,
	1538, 367, 368, 369, 1539, 1540, 370, 371, 372, 1541,
	373, 374, 375, 1542, 376, 377, 378, 1543, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 1544, 294, 1545, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	1546, 397, 398, 399, 1547, 400, 401, 1548, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1549, 414, 705, 1550, 706, 415, 1551,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1293, 423, 424, 1552, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1553, 1292, 512,
	433, 710, 711, 1554, 712, 1555, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1556, 446, 448, 447, 1557,
	449, 714, 1297, 450, 451, 1298, 1558, 452, 453, 454,
	455, 456, 457, 460, 1559, 1560, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1561, 296, 1301,
	506, 507, 508, 509, 1562, 715, 510, 716, 513, 514,
	1563, 0, 515, 0, 516, 1564, 1565, 518, 519, 520,
	1566, 1567, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1568, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 1569, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 1570, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 1571, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1572, 605, 606,
	604, 607, 608, 609, 1573, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1574, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1575, 640, 641, 0, 636, 627, 1576, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1577, 650,
	728, 729, 730, 731, 1578, 660, 1579, 651, 652, 653,
	654, 732, 655, 733, 1580, 656, 657, 658, 659, 0,
	661, 662, 1581, 1582, 663, 664, 666, 668, 669, 665,
	667, 670, 1583, 671, 1584, 0, 672, 673, 674, 734,
	735, 736, 1585, 676, 675, 677, 678, 679, 737, 680,
	681, 1586, 1587, 1588, 1589, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4423, 297, 298, 300, 299, 301, 302, 303, 304, 1511,
	305, 306, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517,
	1518, 307, 1519, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	1520, 692, 319, 320, 321, 322, 323, 324, 1521, 1522,
	0, 325, 693, 694, 695, 1523, 326, 327, 696, 1524,
	1591, 1525, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 1526, 337, 338, 339, 336, 340, 1527, 341, 0,
	342, 343, 344, 345, 346, 347, 1528, 348, 349, 350,
	1290, 351, 352, 353, 1529, 1530, 1532, 1531, 1533, 1534,
	1535, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 1536, 364, 360, 362, 1537, 365, 363, 366, 1538,
	367, 368, 369, 1539, 1540, 370, 371, 372, 1541, 373,
	374, 375, 1542, 376, 377, 378, 1543, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 1544, 294, 1545, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 1546,
	397, 398, 399, 1547, 400, 401, 1548, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 1549, 414, 705, 1550, 706, 415, 1551, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1293, 423, 424, 1552, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 1553, 1292, 512, 433,
	710, 711, 1554, 712, 1555, 434, 435, 1294, 713, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1556, 446, 448, 447, 1557, 449,
	714, 1297, 450, 451, 1298, 1558, 452, 453, 454, 455,
	456, 457, 460, 1559, 1560, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1561, 296, 1301, 506,
	507, 508, 509, 1562, 715, 510, 716, 513, 514, 1563,
	0, 515, 0, 516, 1564, 1565, 518, 519, 520, 1566,
	1567, 521, 522, 717, 1302, 523, 1303, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	1568, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 1569, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 1570, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	1571, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 1572, 605, 606, 604,
	607, 608, 609, 1573, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 1574, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 1575, 640, 641, 0, 636, 627, 1576, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 1577, 650, 728,
	729, 730, 731, 1578, 660, 1579, 651, 652, 653, 654,
	732, 655, 733, 1580, 656, 657, 658, 659, 0, 661,
	662, 1581, 1582, 663, 664, 666, 668, 669, 665, 667,
	670, 1583, 671, 1584, 0, 672, 673, 674, 734, 735,
	736, 1585, 676, 675, 677, 678, 679, 737, 680, 681,
	1586, 1587, 1588, 1589, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4421,
	297, 298, 300, 299, 301, 302, 303, 304, 1511, 305,
	306, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517, 1518,
	307, 1519, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 1520,
	692, 319, 320, 321, 322, 323, 324, 1521, 1522, 0,
	325, 693, 694, 695, 1523, 326, 327, 696, 1524, 1591,
	1525, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	1526, 337, 338, 339, 336, 340, 1527, 341, 0, 342,
	343, 344, 345, 346, 347, 1528, 348, 349, 350, 1290,
	351, 352, 353, 1529, 1530, 1532, 1531, 1533, 1534, 1535,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	1536, 364, 360, 362, 1537, 365, 363, 366, 1538, 367,
	368, 369, 1539, 1540, 370, 371, 372, 1541, 373, 374,
	375, 1542, 376, 377, 378, 1543, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 1544, 294, 1545, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 1546, 397,
	398, 399, 1547, 400, 401, 1548, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 1549, 414, 705, 1550, 706, 415, 1551, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 1552, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 1553, 1292, 512, 433, 710,
	711, 1554, 712, 1555, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 1556, 446, 448, 447, 1557, 449, 714,
	1297, 450, 451, 1298, 1558, 452, 453, 454, 455, 456,
	457, 460, 1559, 1560, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1561, 296, 1301, 506, 507,
	508, 509, 1562, 715, 510, 716, 513, 514, 1563, 0,
	515, 0, 516, 1564, 1565, 518, 519, 520, 1566, 1567,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 1568,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 1569, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 1570, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 1571,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 1572, 605, 606, 604, 607,
	608, 609, 1573, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	1574, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	1575, 640, 641, 0, 636, 627, 1576, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 1577, 650, 728, 729,
	730, 731, 1578, 660, 1579, 651, 652, 653, 654, 732,
	655, 733, 1580, 656, 657, 658, 659, 0, 661, 662,
	1581, 1582, 663, 664, 666, 668, 669, 665, 667, 670,
	1583, 671, 1584, 0, 672, 673, 674, 734, 735, 736,
	1585, 676, 675, 677, 678, 679, 737, 680, 681, 1586,
	1587, 1588, 1589, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4666, 297, 298, 300, 299, 301, 302, 303,
	304, 1511, 305, 306, 1512, 1513, 1514, 0, 1515, 687,
	1516, 1517, 1518, 307, 1519, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 1520, 692, 319, 320, 321, 322, 323, 324,
	1521, 1522, 0, 325, 693, 694, 695, 1523, 326, 327,
	696, 1524, 1591, 1525, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1526, 337, 338, 339, 336, 340, 1527,
	341, 0, 342, 343, 344, 345, 346, 347, 1528, 348,
	349, 350, 1290, 351, 352, 353, 1529, 1530, 1532, 1531,
	1533, 1534, 1535, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 1536, 364, 360, 362, 1537, 365, 363,
	366, 1538, 367, 368, 369, 1539, 1540, 370, 371, 372,
	1541, 373, 374, 375, 1542, 376, 377, 378, 1543, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 1544, 294, 1545, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 1546, 397, 398, 399, 1547, 400, 401, 1548, 1291,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1549, 414, 705, 1550, 706, 415,
	1551, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 1293, 423, 424, 1552, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1553, 1292,
	512, 433, 710, 711, 1554, 712, 1555, 434, 435, 1294,
	713, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1556, 446, 448, 447,
	1557, 449, 714, 1297, 450, 451, 1298, 1558, 452, 453,
	454, 455, 456, 457, 460, 1559, 1560, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1561, 296,
	1301, 506, 507, 508, 509, 1562, 715, 510, 716, 513,
	514, 1563, 0, 515, 0, 516, 1564, 1565, 518, 519,
	520, 1566, 1567, 521, 522, 717, 1302, 523, 1303, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1568, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 1569, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 1570, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 1571, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 1572, 605,
	606, 604, 607, 608, 609, 1573, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 1574, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 1575, 640, 641, 0, 636, 627, 1576,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 1577,
	650, 728, 729, 730, 731, 1578, 660, 1579, 651, 652,
	653, 654, 732, 655, 733, 1580, 656, 657, 658, 659,
	0, 661, 662, 1581, 1582, 663, 664, 666, 668, 669,
	665, 667, 670, 1583, 671, 1584, 0, 672, 673, 674,
	734, 735, 736, 1585, 676, 675, 677, 678, 679, 737,
	680, 681, 1586, 1587, 1588, 1589, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4527, 297, 298, 300, 299,
	301, 302, 303, 304, 1511, 305, 306, 1512, 1513, 1514,
	0, 1515, 687, 1516, 1517, 1518, 307, 1519, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 1520, 692, 319, 320, 321,
	322, 323, 324, 1521, 1522, 0, 325, 693, 694, 695,
	1523, 326, 327, 696, 1524, 1591, 1525, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1526, 337, 338, 339,
	336, 340, 1527, 341, 0, 342, 343, 344, 345, 346,
	347, 1528, 348, 349, 350, 1290, 351, 352, 353, 1529,
	1530, 1532, 1531, 1533, 1534, 1535, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 1536, 364, 360, 362,
	1537, 365, 363, 366, 1538, 367, 368, 369, 1539, 1540,
	370, 371, 372, 1541, 373, 374, 375, 1542, 376, 377,
	378, 1543, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 1544,
	294, 1545, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 1546, 397, 398, 399, 1547, 400,
	401, 1548, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 1549, 414, 705,
	1550, 706, 415, 1551, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1293, 423, 424, 1552, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 1553, 1292, 512, 433, 710, 711, 1554, 712, 1555,
	434, 435, 1294, 713, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1556,
	446, 448, 447, 1557, 449, 714, 1297, 450, 451, 1298,
	1558, 452, 453, 454, 455, 456, 457, 460, 1559, 1560,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1561, 296, 1301, 506, 507, 508, 509, 1562, 715,
	510, 716, 513, 514, 1563, 0, 515, 0, 516, 1564,
	1565, 518, 519, 520, 1566, 1567, 521, 522, 717, 1302,
	523, 1303, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 1568, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 1569, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	1570, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 1571, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 1572, 605, 606, 604, 607, 608, 609, 1573, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 1574, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 1575, 640, 641, 0,
	636, 627, 1576, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 1577, 650, 728, 729, 730, 731, 1578, 660,
	1579, 651, 652, 653, 654, 732, 655, 733, 1580, 656,
	657, 658, 659, 0, 661, 662, 1581, 1582, 663, 664,
	666, 668, 669, 665, 667, 670, 1583, 671, 1584, 0,
	672, 673, 674, 734, 735, 736, 1585, 676, 675, 677,
	678, 679, 737, 680, 681, 1586, 1587, 1588, 1589, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4348, 297,
	298, 300, 299, 301, 302, 303, 304, 1511, 305, 306,
	1512, 1513, 1514, 0, 1515, 687, 1516, 1517, 1518, 307,
	1519, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 1520, 692,
	319, 320, 321, 322, 323, 324, 1521, 1522, 0, 325,
	693, 694, 695, 1523, 326, 327, 696, 1524, 1591, 1525,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1526,
	337, 338, 339, 336, 340, 1527, 341, 0, 342, 343,
	344, 345, 346, 347, 1528, 348, 349, 350, 1290, 351,
	352, 353, 1529, 1530, 1532, 1531, 1533, 1534, 1535, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 1536,
	364, 360, 362, 1537, 365, 363, 366, 1538, 367, 368,
	369, 1539, 1540, 370, 371, 372, 1541, 373, 374, 375,
	1542, 376, 377, 378, 1543, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 1544, 294, 1545, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 1546, 397, 398,
	399, 1547, 400, 401, 1548, 1291, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	1549, 414, 705, 1550, 706, 415, 1551, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 1293, 423,
	424, 1552, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 1553, 1292, 512, 433, 710, 711,
	1554, 712, 1555, 434, 435, 1294, 713, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1556, 446, 448, 447, 1557, 449, 714, 1297,
	450, 451, 1298, 1558, 452, 453, 454, 455, 456, 457,
	460, 1559, 1560, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1561, 296, 1301, 506, 507, 508,
	509, 1562, 715, 510, 716, 513, 514, 1563, 0, 515,
	0, 516, 1564, 1565, 518, 519, 520, 1566, 1567, 521,
	522, 717, 1302, 523, 1303, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 1568, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 1569, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 1570, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 1571, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 1572, 605, 606, 604, 607, 608,
	609, 1573, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 1574,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 1575,
	640, 641, 0, 636, 627, 1576, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 1577, 650, 728, 729, 730,
	731, 1578, 660, 1579, 651, 652, 653, 654, 732, 655,
	733, 1580, 656, 657, 658, 659, 0, 661, 662, 1581,
	1582, 663, 664, 666, 668, 669, 665, 667, 670, 1583,
	671, 1584, 0, 672, 673, 674, 734, 735, 736, 1585,
	676, 675, 677, 678, 679, 737, 680, 681, 1586, 1587,
	1588, 1589, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4004, 297, 298, 300, 299, 301, 302, 303, 304,
	1511, 305, 306, 1512, 1513, 1514, 0, 1515, 687, 1516,
	1517, 1518, 307, 1519, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 1520, 692, 319, 320, 321, 322, 323, 324, 1521,
	1522, 0, 325, 693, 694, 695, 1523, 326, 327, 696,
	1524, 1591, 1525, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1526, 337, 338, 339, 336, 340, 1527, 341,
	0, 342, 343, 344, 345, 346, 347, 1528, 348, 349,
	350, 1290, 351, 352, 353, 1529, 1530, 1532, 1531, 1533,
	1534, 1535, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 1536, 364, 360, 362, 1537, 365, 363, 366,
	1538, 367, 368, 369, 1539, 1540, 370, 371, 372, 1541,
	373, 374, 375, 1542, 376, 377, 378, 1543, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 1544, 294, 1545, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	1546, 397, 398, 399, 1547, 400, 401, 1548, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1549, 414, 705, 1550, 706, 415, 1551,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1293, 423, 424, 1552, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1553, 1292, 512,
	433, 710, 711, 1554, 712, 1555, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1556, 446, 448, 447, 1557,
	449, 714, 1297, 450, 451, 1298, 1558, 452, 453, 454,
	455, 456, 457, 460, 1559, 1560, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1561, 296, 1301,
	506, 507, 508, 509, 1562, 715, 510, 716, 513, 514,
	1563, 0, 515, 0, 516, 1564, 1565, 518, 519, 520,
	1566, 1567, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1568, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 1569, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 1570, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 1571, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1572, 605, 606,
	604, 607, 608, 609, 1573, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1574, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1575, 640, 641, 0, 636, 627, 1576, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1577, 650,
	728, 729, 730, 731, 1578, 660, 1579, 651, 652, 653,
	654, 732, 655, 733, 1580, 656, 657, 658, 659, 0,
	661, 662, 1581, 1582, 663, 664, 666, 668, 669, 665,
	667, 670, 1583, 671, 1584, 0, 672, 673, 674, 734,
	735, 736, 1585, 676, 675, 677, 678, 679, 737, 680,
	681, 1586, 1587, 1588, 1589, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3817, 297, 298, 300, 299, 301,
	302, 303, 304, 1511, 305, 306, 1512, 1513, 1514, 0,
	1515, 687, 1516, 1517, 1518, 307, 1519, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 1520, 692, 319, 320, 321, 322,
	323, 324, 1521, 1522, 0, 325, 693, 694, 695, 1523,
	326, 327, 696, 1524, 1591, 1525, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1526, 337, 338, 339, 336,
	340, 1527, 341, 0, 342, 343, 344, 345, 346, 347,
	1528, 348, 349, 350, 1290, 351, 352, 353, 1529, 1530,
	1532, 1531, 1533, 1534, 1535, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 1536, 364, 360, 362, 1537,
	365, 363, 366, 1538, 367, 368, 369, 1539, 1540, 370,
	371, 372, 1541, 373, 374, 375, 1542, 376, 377, 378,
	1543, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 1544, 294,
	1545, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 1546, 397, 398, 399, 1547, 400, 401,
	1548, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1549, 414, 705, 1550,
	706, 415, 1551, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1293, 423, 424, 1552, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1553, 1292, 512, 433, 710, 711, 1554, 712, 1555, 434,
	435, 1294, 713, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1556, 446,
	448, 447, 1557, 449, 714, 1297, 450, 451, 1298, 1558,
	452, 453, 454, 455, 456, 457, 460, 1559, 1560, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1561, 296, 1301, 506, 507, 508, 509, 1562, 715, 510,
	716, 513, 514, 1563, 0, 515, 0, 516, 1564, 1565,
	518, 519, 520, 1566, 1567, 521, 522, 717, 1302, 523,
	1303, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1568, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	1569, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 1570,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 1571, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	1572, 605, 606, 604, 607, 608, 609, 1573, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 1574, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 1575, 640, 641, 0, 636,
	627, 1576, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 1577, 650, 728, 729, 730, 731, 1578, 660, 1579,
	651, 652, 653, 654, 732, 655, 733, 1580, 656, 657,
	658, 659, 0, 661, 662, 1581, 1582, 663, 664, 666,
	668, 669, 665, 667, 670, 1583, 671, 1584, 0, 672,
	673, 674, 734, 735, 736, 1585, 676, 675, 677, 678,
	679, 737, 680, 681, 1586, 1587, 1588, 1589, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2801, 297, 298,
	300, 299, 301, 302, 303, 304, 1511, 305, 306, 1512,
	1513, 1514, 0, 1515, 687, 1516, 1517, 1518, 307, 1519,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 1520, 692, 319,
	320, 321, 322, 323, 324, 1521, 1522, 0, 325, 693,
	694, 695, 1523, 326, 327, 696, 1524, 1591, 1525, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 1526, 337,
	338, 339, 336, 340, 1527, 341, 0, 342, 343, 344,
	345, 346, 347, 1528, 348, 349, 350, 1290, 351, 352,
	353, 1529, 1530, 1532, 1531, 1533, 1534, 1535, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 1536, 364,
	360, 362, 1537, 365, 363, 366, 1538, 367, 368, 369,
	1539, 1540, 370, 371, 372, 1541, 373, 374, 375, 1542,
	376, 377, 378, 1543, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 1544, 294, 1545, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 1546, 397, 398, 399,
	1547, 400, 401, 1548, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 1549,
	414, 705, 1550, 706, 415, 1551, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 1293, 423, 424,
	1552, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 1553, 1292, 512, 433, 710, 711, 1554,
	712, 1555, 434, 435, 1294, 713, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1556, 446, 448, 447, 1557, 449, 714, 1297, 450,
	451, 1298, 1558, 452, 453, 454, 455, 456, 457, 460,
	1559, 1560, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1561, 296, 1301, 506, 507, 508, 509,
	1562, 715, 510, 716, 513, 514, 1563, 0, 515, 0,
	516, 1564, 1565, 518, 519, 520, 1566, 1567, 521, 522,
	717, 1302, 523, 1303, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 1568, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 1569, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 1570, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 1571, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 1572, 605, 606, 604, 607, 608, 609,
	1573, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 1574, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 1575, 640,
	641, 0, 636, 627, 1576, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 1577, 650, 728, 729, 730, 731,
	1578, 660, 1579, 651, 652, 653, 654, 732, 655, 733,
	1580, 656, 657, 658, 659, 0, 661, 662, 1581, 1582,
	663, 664, 666, 668, 669, 665, 667, 670, 1583, 671,
	1584, 0, 672, 673, 674, 734, 735, 736, 1585, 676,
	675, 677, 678, 679, 737, 680, 681, 1586, 1587, 1588,
	1589, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 1502, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2422, 297, 298, 300, 299, 301, 302, 303, 304, 1511,
	305, 306, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517,
	1518, 307, 1519, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	1520, 692, 319, 320, 321, 322, 323, 324, 1521, 1522,
	0, 325, 693, 694, 695, 1523, 326, 327, 696, 1524,
	1591, 1525, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 1526, 337, 338, 339, 336, 340, 1527, 341, 0,
	342, 343, 344, 345, 346, 347, 1528, 348, 349, 350,
	1290, 351, 352, 353, 1529, 1530, 1532, 1531, 1533, 1534,
	1535, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 1536, 364, 360, 362, 1537, 365, 363, 366, 1538,
	367, 368, 369, 1539, 1540, 370, 371, 372, 1541, 373,
	374, 375, 1542, 376, 377, 378, 1543, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 1544, 294, 1545, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 1546,
	397, 398, 399, 1547, 400, 401, 1548, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 1549, 414, 705, 1550, 706, 415, 1551, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1293, 423, 424, 1552, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 1553, 1292, 512, 433,
	710, 711, 1554, 712, 1555, 434, 435, 1294, 713, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1556, 446, 448, 447, 1557, 449,
	714, 1297, 450, 451, 1298, 1558, 452, 453, 454, 455,
	456, 457, 460, 1559, 1560, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1561, 296, 1301, 506,
	507, 508, 509, 1562, 715, 510, 716, 513, 514, 1563,
	0, 515, 0, 516, 1564, 1565, 518, 519, 520, 1566,
	1567, 521, 522, 717, 1302, 523, 1303, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	1568, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 1569, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 1570, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	1571, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 1572, 605, 606, 604,
	607, 608, 609, 1573, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 1574, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 1575, 640, 641, 0, 636, 627, 1576, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 1577, 650, 728,
	729, 730, 731, 1578, 660, 1579, 651, 652, 653, 654,
	732, 655, 733, 1580, 656, 657, 658, 659, 0, 661,
	662, 1581, 1582, 663, 664, 666, 668, 669, 665, 667,
	670, 1583, 671, 1584, 0, 672, 673, 674, 734, 735,
	736, 1585, 676, 675, 677, 678, 679, 737, 680, 681,
	1586, 1587, 1588, 1589, 682, 683, 738, 684, 685, 686,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 1511, 305, 306, 1512, 1513,
	1514, 0, 1515, 687, 1516, 1517, 1518, 307, 1519, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 1520, 692, 319, 320,
	321, 322, 323, 324, 1521, 1522, 0, 325, 693, 694,
	695, 1523, 326, 327, 696, 1524, 1591, 1525, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1526, 337, 338,
	339, 336, 340, 1527, 341, 0, 342, 343, 344, 345,
	346, 347, 1528, 348, 349, 350, 1290, 351, 352, 353,
	1529, 1530, 1532, 1531, 1533, 1534, 1535, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 1536, 364, 360,
	362, 1537, 365, 363, 366, 1538, 367, 368, 369, 1539,
	1540, 370, 371, 372, 1541, 373, 374, 375, 1542, 376,
	377, 378, 1543, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	1544, 294, 1545, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 1546, 397, 398, 399, 1547,
	400, 401, 1548, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 1549, 414,
	705, 1550, 706, 415, 1551, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1293, 423, 424, 1552,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 1553, 1292, 512, 433, 710, 711, 1554, 712,
	1555, 434, 435, 1294, 713, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1556, 446, 448, 447, 1557, 449, 714, 1297, 450, 451,
	1298, 1558, 452, 453, 454, 455, 456, 457, 460, 1559,
	1560, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1561, 296, 1301, 506, 507, 508, 509, 1562,
	715, 510, 716, 513, 514, 1563, 0, 515, 0, 516,
	1564, 1565, 518, 519, 520, 1566, 1567, 521, 522, 717,
	1302, 523, 1303, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 1568, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 1569, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 1570, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 1571, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 1572, 605, 606, 604, 607, 608, 609, 1573,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 1574, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 1575, 640, 641,
	0, 636, 627, 1576, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 1577, 650, 728, 729, 730, 731, 1578,
	660, 1579, 651, 652, 653, 654, 732, 655, 733, 1580,
	656, 657, 658, 659, 0, 661, 662, 1581, 1582, 663,
	664, 666, 668, 669, 665, 667, 670, 1583, 671, 1584,
	0, 672, 673, 674, 734, 735, 736, 1585, 676, 675,
	677, 678, 679, 737, 680, 681, 1586, 1587, 1588, 1589,
	682, 683, 738, 684, 685, 686, 2776, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 2773, 305, 306, 0, 0, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 2774, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 2772, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 2775, 0, 0,
	0, 0, 0, 0, 0, 1209, 2771, 0, 1169, 1207,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 252, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 254, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 1750, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 246,
	682, 683, 738, 684, 685, 686, 1183, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 2015, 2013, 0,
	0, 1207, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 252, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 254, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 1750, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 246, 682,
	683, 738, 684, 685, 686, 1183, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 2015, 3439, 0, 0,
	1207, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	252, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 254, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 1750, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 246, 682, 683,
	738, 684, 685, 686, 1183, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 2015, 2013, 0, 0, 1207,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 2906, 1279, 319, 320, 321, 322, 323,
	324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 1185, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1191, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 2911,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 2907, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1182,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 1192, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 2908, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 2821, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 297, 298, 300, 299,
	301, 302, 303, 304, 1209, 305, 306, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 1209, 2819, 0, 2818,
	1207, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	0, 0, 0, 0, 0, 0, 0, 0, 1209, 2816,
	0, 2815, 1207, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 0, 0, 0, 0, 0, 0, 0, 0,
	1209, 2813, 0, 2812, 1207, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 359, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 1301,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 0, 0, 0, 0, 0, 0,
	0, 0, 1209, 2810, 0, 1851, 1207, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 0, 1279, 319, 320, 321, 322, 323,
	324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 1185, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1191, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1182,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 1192, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1850, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 1172, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 297, 298, 300, 299,
	301, 302, 303, 304, 1209, 305, 306, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 1187,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 297, 298,
	300, 299, 301, 302, 303, 304, 1209, 305, 306, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 5041, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 1187, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	297, 298, 300, 299, 301, 302, 303, 304, 1209, 305,
	306, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 2653, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 2652, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 297, 298, 300, 299, 301, 302, 303, 304,
	1209, 305, 306, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 4761, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 359, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 1301,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 1187, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 0, 0, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 297, 298, 300, 299, 301, 302,
	303, 304, 1209, 305, 306, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 0, 1279, 319, 320, 321, 322, 323,
	324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 1185, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1191, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1182,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 1187, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 1192, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 0, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 297, 298, 300, 299,
	301, 302, 303, 304, 1209, 305, 306, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 4313, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 2085, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 1209, 0, 0, 0,
	1207, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 3982, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 297, 298,
	300, 299, 301, 302, 303, 304, 1209, 305, 306, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	2085, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 1209, 0,
	0, 0, 1207, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 2911, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	297, 298, 300, 299, 301, 302, 303, 304, 1209, 305,
	306, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 0, 0, 0, 0, 0, 0, 0, 0,
	1209, 2013, 0, 2916, 1207, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 359, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 1301,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 2914, 0, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 297, 298, 300, 299, 301, 302,
	303, 304, 1209, 305, 306, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 0, 1279, 319, 320, 321, 322, 323,
	324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 1185, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1191, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1182,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 1192, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 2902, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 297, 298, 300, 299,
	301, 302, 303, 304, 1209, 305, 306, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 2891,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 297, 298,
	300, 299, 301, 302, 303, 304, 1209, 305, 306, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 2889, 0, 2880, 2887, 1198, 1199, 1195, 1196, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	297, 298, 300, 299, 301, 302, 303, 304, 1209, 305,
	306, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 2883, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 2884, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 2885, 470, 2882, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 2886, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 2881, 686, 1183,
	0, 0, 0, 2877, 0, 2880, 2887, 1198, 1199, 1195,
	1196, 1208, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 297, 298, 300, 299, 301, 302, 303, 304,
	1209, 305, 306, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 2883, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 2884, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 2885, 470, 2882,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 1301,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 2886, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 2881,
	686, 1183, 0, 0, 0, 0, 0, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 297, 298, 300, 299, 301, 302,
	303, 304, 1209, 305, 306, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 0, 1279, 319, 320, 321, 322, 323,
	324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 1185, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1191, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1182,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 1192, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 0, 0, 0, 0,
	0, 0, 2021, 0, 1209, 0, 0, 0, 1207, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 2632, 305, 306, 0, 0, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 2594,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 297, 298,
	300, 299, 301, 302, 303, 304, 1209, 305, 306, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 2565, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	297, 298, 300, 299, 301, 302, 303, 304, 1209, 305,
	306, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 1856, 0, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 297, 298, 300, 299, 301, 302, 303, 304,
	1209, 305, 306, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 359, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 1301,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 1785, 0, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 297, 298, 300, 299, 301, 302,
	303, 304, 1209, 305, 306, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 0, 1279, 319, 320, 321, 322, 323,
	324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 1185, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1191, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1182,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 1192, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 1780, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 297, 298, 300, 299,
	301, 302, 303, 304, 1209, 305, 306, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 1766,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 297, 298,
	300, 299, 301, 302, 303, 304, 1209, 305, 306, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 1761, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	297, 298, 300, 299, 301, 302, 303, 304, 1209, 305,
	306, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 1670, 0, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 297, 298, 300, 299, 301, 302, 303, 304,
	1209, 305, 306, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 359, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1669, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 1301,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 1664, 0, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 297, 298, 300, 299, 301, 302,
	303, 304, 1209, 305, 306, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 0, 1279, 319, 320, 321, 322, 323,
	324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 1185, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1191, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1663,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1182,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 1192, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 1657, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 297, 298, 300, 299,
	301, 302, 303, 304, 1209, 305, 306, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 1620,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 297, 298,
	300, 299, 301, 302, 303, 304, 1209, 305, 306, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 1602, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	297, 298, 300, 299, 301, 302, 303, 304, 1209, 305,
	306, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 1606, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 1607, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 1605, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 1434, 0, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 297, 298, 300, 299, 301, 302, 303, 304,
	1209, 305, 306, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 359, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 1301,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 0, 0, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 297, 298, 300, 299, 301, 302,
	303, 304, 1209, 305, 306, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 0, 1279, 319, 320, 321, 322, 323,
	324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 1185, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1191, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1182,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 1192, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 0, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 297, 298, 300, 299,
	301, 302, 303, 304, 1209, 305, 306, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 5090, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 5089, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 297, 298,
	300, 299, 301, 302, 303, 304, 1209, 305, 306, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	5088, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	5090, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 5089, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	297, 298, 300, 299, 301, 302, 303, 304, 1209, 305,
	306, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 4685, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 4686, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 4684, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 0, 0, 1225, 1197, 1198, 1199, 3406,
	3407, 1208, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 297, 298, 300, 299, 301, 302, 303, 304,
	1209, 305, 306, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 359, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 1301,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 0, 0, 1225, 1197, 1198,
	1199, 3404, 3405, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 297, 298, 300, 299, 301, 302,
	303, 304, 1209, 305, 306, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 0, 1279, 319, 320, 321, 322, 323,
	324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 1185, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1191, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1182,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 1192, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 0, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 297, 298, 300, 299,
	301, 302, 303, 304, 1209, 305, 306, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 1185, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1191, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1182, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 1192, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 2640, 2641, 297, 298,
	300, 299, 301, 302, 303, 304, 1209, 305, 306, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 0, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 2899, 0, 0, 0, 0, 0, 0, 2897, 2898,
	297, 298, 300, 299, 301, 302, 303, 304, 1209, 305,
	306, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 0,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 0, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 3399,
	3400, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	2267, 2268, 297, 298, 300, 299, 301, 302, 303, 304,
	1209, 305, 306, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 0, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 5090, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 359, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 0, 1252,
	0, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 0,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	5089, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 2918, 0, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 1177, 297, 298, 300, 299, 301, 302,
	303, 304, 1209, 305, 306, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 1262, 0, 317,
	1269, 318, 1268, 0, 1279, 319, 320, 321, 322, 323,
	324, 0, 1248, 0, 325, 1309, 1310, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 1272,
	359, 361, 1266, 1265, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1257,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 1204, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1264, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 1277, 1278, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 1214,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 1259, 1260, 0, 1220, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 0,
	296, 1301, 506, 507, 508, 509, 1205, 1253, 510, 1267,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1263, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 1632, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 1209, 0, 0, 0, 1207, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	0, 1248, 0, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 0, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 1169, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 1209, 0, 0, 0, 1207, 1249, 0,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	1248, 0, 325, 693, 694, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1334, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 0, 296, 1301,
	506, 507, 508, 509, 0, 1253, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 1340, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 1342, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 252, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 254, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 1750,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 246, 682, 683, 738, 684, 685,
	686, 1348, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	1338, 0, 2109, 0, 1249, 0, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 1248, 0, 325, 693,
	694, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1334, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 296, 1301, 506, 507, 508, 509,
	0, 1253, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 1340, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 1342, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 252, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 254, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 1750, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	246, 682, 683, 738, 684, 685, 686, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3563, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 2109, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 1248, 0, 325,
	693, 694, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1334, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 0, 296, 1301, 506, 507, 508,
	509, 0, 1253, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 1340, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 1342,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 1330,
	0, 1348, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1249, 0, 0, 1338, 307, 1336,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 1248, 0, 325, 693,
	694, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1334, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 296, 1301, 506, 507, 508, 509,
	0, 1253, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 1340, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 1342, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	1348, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1249, 0, 0, 1338, 307, 1336, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 1248, 0, 325, 693, 694,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1334, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 0, 296, 1301, 506, 507, 508, 509, 0,
	1253, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 1340, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 1342, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 1348,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1249, 0, 0, 1338, 307, 1336, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 1248, 0, 325, 693, 694, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 0, 296, 1301, 506, 507, 508, 509, 0, 1253,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 1348, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1249, 0, 0, 0, 307, 4497, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 1248, 0, 325, 693, 694, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	0, 296, 1301, 506, 507, 508, 509, 0, 1253, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 1342, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 2744, 2745, 2746, 2763, 2764, 2765,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 2766, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 2005, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	1990, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	2756, 0, 337, 338, 339, 336, 340, 0, 341, 2752,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 2757, 2758, 2759,
	2760, 393, 394, 395, 702, 0, 0, 2751, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 2761, 2762, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 2754,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 2755, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 1989, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 1169, 0,
	1627, 2741, 2742, 2743, 2767, 2753, 2747, 0, 2749, 2750,
	2748, 2735, 2736, 2737, 2738, 2739, 2740, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 1591, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1292, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 1294, 713, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 0, 0, 1301, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 252, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 254, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 1750, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 246,
	682, 683, 738, 684, 685, 686, 0, 1747, 247, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 203, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 1591, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1292, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 1294, 713, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 0, 0, 1301, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 252, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 254, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 1750, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 246, 682,
	683, 738, 684, 685, 686, 1627, 1626, 247, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 203, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 1591, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1292, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 0, 0, 1301,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1627, 1626, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 1774, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 1591, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1292, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 1294, 713, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 0, 1301, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1627, 1626, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 3895, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 1591, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	1292, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	1294, 713, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 0,
	0, 1301, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 2505, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1627, 2414, 0, 0, 0, 0, 2415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 1774, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 1591,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1292, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 2413, 448, 447, 0, 449, 714,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 0, 0, 1301, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1627,
	1626, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	1774, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 1591, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1292, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 1294, 713, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 0, 0, 1301, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 1169, 0, 291, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 1756, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	252, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 254, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 1750, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 246, 682, 683,
	738, 684, 685, 686, 0, 0, 247, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 203, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 3176, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 2123, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 5257, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 291, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 3845, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	291, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 1744, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 1348,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1249, 0, 0, 0, 307, 3298, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 1248, 0, 325, 693, 694, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 0, 296, 1301, 506, 507, 508, 509, 0, 1253,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 4007, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 993, 0,
	893, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 2492, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	900, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 990, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 992,
	0, 636, 627, 898, 642, 643, 644, 645, 646, 899,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 2168, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 0, 2174, 0, 317, 2164,
	318, 2180, 0, 2187, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 2190, 2191, 0, 0, 326, 327,
	0, 0, 1591, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 1272, 359,
	361, 2178, 2177, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 0, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 2176, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 2185, 2186, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 0, 0,
	0, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 1292,
	512, 433, 2171, 2172, 0, 2167, 0, 434, 435, 1294,
	0, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 0, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 0, 0,
	1301, 506, 507, 508, 509, 0, 0, 510, 2179, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 0, 1302, 523, 1303, 0,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 2161, 537, 538, 539, 2162,
	540, 541, 542, 0, 543, 0, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 2175, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 0, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	2173, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 2189, 630, 631, 632, 633, 0,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 2181, 2182, 2183, 2184, 0, 660, 0, 651, 652,
	653, 654, 0, 655, 0, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	0, 2165, 2188, 0, 676, 675, 677, 678, 679, 0,
	680, 681, 0, 0, 0, 0, 682, 683, 0, 684,
	685, 686, 893, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 4134, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 2155, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 900, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 4133,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 898, 642, 643, 644, 645,
	646, 899, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 4132, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 893,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 2195, 305, 306, 0, 0, 0,
	0, 903, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 900,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 2194, 600, 601, 602,
	603, 0, 2196, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 898, 642, 643, 644, 645, 646, 899, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 2193, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 893, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 2146, 305, 306, 0, 0, 0, 0, 903, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 900, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 2145, 600, 601, 602, 603, 0, 2147,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 898,
	642, 643, 644, 645, 646, 899, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 2144, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 891, 0, 893, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 903, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 900, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 898, 642, 643,
	644, 645, 646, 899, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 893, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 903, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 900, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 898, 642, 643, 644, 645, 646,
	899, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 893, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	903, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 900, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 2544,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 2545, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 898, 642, 643, 644, 645, 646, 899, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	2546, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 291, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 903, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 1627, 1626,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 903, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 1591, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1292, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 1294, 713, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	0, 0, 1301, 506, 507, 508, 509, 4237, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1627, 1626, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	1591, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1292, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1294, 713, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 0, 1301, 506,
	507, 508, 509, 3795, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1805, 0, 1627, 1626, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 1591, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 1804,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1292, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1294, 713, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 0, 0, 1301, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 1803, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	1802, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1677, 0,
	1627, 1626, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 1591, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1679, 708, 709, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1292, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 1294, 713, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 0, 0, 1301, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1622, 0, 1627, 1626,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 1591, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1292, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 1294, 713, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	0, 0, 1301, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1627, 1626, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	1591, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1292, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1294, 713, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 0, 1301, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1627, 1626, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 1591, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1292, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 1294, 713, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 0, 0, 1301, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1627, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 1591, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 1292,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 1294,
	713, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 0, 0,
	1301, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 3078, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 3837, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 3082, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 3836, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 3081, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	3833, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 3835, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 3832, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 3080, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	3834, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 3078,
	326, 327, 696, 0, 0, 3072, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 3074, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 3082, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 3081, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	3071, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	3080, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 3079, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1885, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 1884, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 1883, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	1886, 591, 592, 599, 600, 601, 602, 603, 0, 1882,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 1880,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 1881, 675, 677, 678, 679, 737,
	680, 681, 1595, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1597, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 1340, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1592, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1594, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 1340, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1498, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1500, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 1340, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 771, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	770, 303, 304, 759, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	762, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 768, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	764, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 758, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 759, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 762, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 763, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 764, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 759, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 762, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	763, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 764, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 759, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	762, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 4247, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	764, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 2450, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 1340, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 3731, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 3268, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 3267, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	2513, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 2457, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 2456, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 2443, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	2445, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 2407, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 1340, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1722, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1721, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1615, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1608, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1610, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1417, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1416, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1407, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1406, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1404, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1403, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1399, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1398, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 740, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 282, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	762, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 763, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	764, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 2553, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	2551, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 2549, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 2463, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	2220, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 2214, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	977, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 976, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 975, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 860, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 849, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 858, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 851,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	857, 401, 853, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 854,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 852,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 855, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 856, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 850, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 843, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 849, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 858, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 851, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 857, 401,
	853, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 854, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 852, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 855, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 856, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 850, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 3836, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 4582, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1445, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 1448, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 1446, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 831, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 830, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 829,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 1449,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 827, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1445, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 1448, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	1446, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	831, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 830, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 829, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 1449, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 827, 729, 730, 731, 0,
	660, 0, 651, 1447, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 838, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 836, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 749, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 748, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 747, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 3176, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	4887, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 3672, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 4469, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 4191, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 2953, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 3176,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 3307, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 2351, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 830, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 829, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 827,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 2523, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 2511, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1778, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1770, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	821, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 817, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 822,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 831, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 830, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 829,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 1755,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 827, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1728, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1727, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1712, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1710, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1705, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1682, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1680, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1675, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1636, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1600, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1451, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 830, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 829, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 827, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1422, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1421, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1413, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1412, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 1365, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 841, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 821, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 817, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 816, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 822, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 831, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 830, 583, 584, 585, 586,
	818, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 829, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 819, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 827,
	729, 730, 731, 0, 660, 0, 651, 823, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	810, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 811, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 773, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 766, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 744, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	3868, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 830, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 829, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 827,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 3774, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 3748, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 3744, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	3696, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 3694, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 3682, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 3679, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 3278, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 811,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 2481,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 0, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1384, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 1313, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 0, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 0, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 0, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 0,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1718, 0,
	1429, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 0, 318, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 0, 0,
	0, 0, 326, 327, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 1431, 354, 355, 356,
	357, 358, 0, 359, 361, 0, 0, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 0, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	0, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1717, 0, 0, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 0, 0, 0, 0,
	0, 434, 435, 0, 0, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 0, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	0, 510, 0, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 0,
	0, 523, 0, 0, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 0,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 0, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 0, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1432,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 0, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 0, 630,
	631, 632, 633, 0, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 0, 0, 0, 0, 0,
	660, 0, 651, 652, 653, 654, 0, 655, 0, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 0, 0, 0, 0, 676, 675,
	677, 678, 679, 0, 680, 681, 1639, 0, 1429, 0,
	682, 683, 0, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 0, 318, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 0, 0, 0, 0,
	326, 327, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 1431, 354, 355, 356, 357, 358,
	0, 359, 361, 0, 0, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 0, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 0, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1638, 0, 0, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 0, 0, 0, 0, 0, 434,
	435, 0, 0, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 0, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 0, 510,
	0, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 0, 0, 523,
	0, 0, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 0, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 0, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 0, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1432, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 0, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 0, 630, 631, 632,
	633, 0, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 0, 0, 0, 0, 0, 660, 0,
	651, 652, 653, 654, 0, 655, 0, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 0, 0, 0, 0, 676, 675, 677, 678,
	679, 0, 680, 681, 1427, 0, 1429, 0, 682, 683,
	0, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 0,
	318, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 0, 0, 0, 0, 326, 327,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 1431, 354, 355, 356, 357, 358, 0, 359,
	361, 0, 0, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 0, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 0, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1426, 0,
	0, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 0, 0, 0, 0, 0, 434, 435, 0,
	0, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 0, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 0, 510, 0, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 0, 0, 523, 0, 0,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 0, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 0, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 0, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1432, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	0, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 0, 630, 631, 632, 633, 0,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 0, 0, 0, 0, 0, 660, 0, 651, 652,
	653, 654, 0, 655, 0, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	0, 0, 0, 0, 676, 675, 677, 678, 679, 0,
	680, 681, 2234, 0, 1429, 0, 682, 683, 0, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 0, 318, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 0, 0, 0, 0, 326, 327, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	1431, 354, 355, 356, 357, 358, 0, 359, 361, 0,
	0, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 0,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 0, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 0, 0, 0, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	0, 0, 0, 0, 0, 434, 435, 0, 0, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	0, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 0, 510, 0, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 0, 0, 523, 0, 0, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 0, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 0,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	0, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1432, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 0, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 0, 630, 631, 632, 633, 0, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 0,
	0, 0, 0, 0, 660, 0, 651, 652, 653, 654,
	0, 655, 0, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 0, 0,
	0, 0, 676, 675, 677, 678, 679, 0, 680, 681,
	2201, 0, 1429, 0, 682, 683, 0, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 0, 318, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	0, 0, 0, 0, 326, 327, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 1431, 354,
	355, 356, 357, 358, 0, 359, 361, 0, 0, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 0, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 0, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 0, 0, 0, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 0, 0,
	0, 0, 0, 434, 435, 0, 0, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 0, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 0, 510, 0, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 0, 0, 523, 0, 0, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 0, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 0, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 0, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1432, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 0, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	0, 630, 631, 632, 633, 0, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 0, 0, 0,
	0, 0, 660, 0, 651, 652, 653, 654, 0, 655,
	0, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 0, 0, 0, 0,
	676, 675, 677, 678, 679, 1429, 680, 681, 0, 0,
	0, 0, 682, 683, 0, 684, 685, 686, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 0, 317, 0, 318,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 0, 0, 0, 0, 326, 327, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 1431, 354, 355, 356, 357, 358, 0, 359, 361,
	0, 0, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	0, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 0, 0, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 0, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 0, 0, 0,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 0, 0, 0, 0, 0, 434, 435, 0, 0,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 0, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 0, 510, 0, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 0, 0, 523, 0, 0, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 0, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	0, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 0, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1432, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 0,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 0, 630, 631, 632, 633, 0, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	0, 0, 0, 0, 0, 660, 0, 651, 652, 653,
	654, 0, 655, 0, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 0,
	0, 0, 0, 676, 675, 677, 678, 679, 0, 680,
	681, 0, 0, 0, 0, 682, 683, 0, 684, 685,
	686, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 1965, 0, 0, 0, 0,
	0, 1934, 1935, 1937, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 1965, 0, 0, 0, 0,
	1990, 0, 0, 1937, 0, 0, 0, 0, 0, 1936,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 0, 0, 0, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 0, 0, 0, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1975, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	1964, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 1982,
	1975, 0, 0, 1985, 0, 0, 1951, 1952, 0, 0,
	1964, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 1981, 0, 1982,
	0, 0, 0, 0, 0, 0, 1951, 1952, 0, 1957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 1963,
	0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 0, 1958, 0, 1971, 1965, 0, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	1976, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 1989, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 3483, 1959, 1960, 1961,
	1962, 1948, 1949, 1955, 1977, 1954, 1950, 1942, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	1975, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	1964, 1966, 1971, 1965, 0, 0, 0, 0, 0, 0,
	0, 1937, 0, 0, 0, 0, 0, 1981, 0, 1982,
	0, 1984, 0, 0, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 1973, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 0, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 1935, 0,
	1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	1971, 1965, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 1958, 0, 0, 1981, 0, 1982, 0, 1984,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	1976, 0, 1973, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 0, 0, 0,
	1974, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	0, 0, 5016, 0, 0, 1934, 1935, 0, 1967, 1968,
	1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985,
	0, 0, 0, 0, 0, 0, 1964, 1966, 1971, 1965,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	1958, 0, 0, 1981, 0, 1982, 0, 1984, 0, 0,
	0, 0, 1951, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 1976, 0,
	1973, 0, 0, 1936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 1957, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	5012, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0, 0,
	0, 0, 0, 0, 1964, 1966, 1971, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 1958, 0,
	0, 1981, 0, 1982, 0, 1984, 0, 0, 0, 0,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 1976, 0, 1973, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 1957, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 1974, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 1948, 1949, 1955,
	1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 4915, 0,
	0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 0, 1975, 1963, 0, 1985, 0, 0, 0, 0,
	0, 0, 1964, 1966, 1971, 1965, 0, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 1958, 0, 0, 1981,
	0, 1982, 0, 1984, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 1976, 0, 1973, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 0, 0, 1974, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 0, 0, 0, 0, 4866, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	1975, 1963, 0, 1985, 0, 0, 0, 0, 0, 0,
	1964, 1966, 1971, 1965, 0, 0, 0, 0, 0, 0,
	0, 1937, 0, 0, 1958, 0, 0, 1981, 0, 1982,
	0, 1984, 0, 0, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 1976, 0, 1973, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 0, 1974, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 4865, 0, 0, 1934, 1935, 0,
	1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	1971, 1965, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 1958, 0, 0, 1981, 0, 1982, 0, 1984,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	1976, 0, 1973, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 0, 0, 0,
	1974, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	0, 0, 4669, 0, 0, 1934, 1935, 0, 1967, 1968,
	1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985,
	0, 0, 0, 0, 0, 0, 1964, 1966, 1971, 1965,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	1958, 0, 0, 1981, 0, 1982, 0, 1984, 0, 0,
	0, 0, 1951, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 1976, 0,
	1973, 0, 0, 1936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 1957, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	4493, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0, 0,
	0, 0, 0, 0, 1964, 1966, 1971, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 1958, 0,
	0, 1981, 0, 1982, 0, 1984, 0, 0, 0, 0,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 1976, 0, 1973, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 1957, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 1974, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 1948, 1949, 1955,
	1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 4398, 0,
	0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 0, 1975, 1963, 0, 1985, 0, 0, 0, 0,
	0, 0, 1964, 1966, 1971, 1965, 0, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 1958, 0, 0, 1981,
	0, 1982, 0, 1984, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 1976, 0, 1973, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 0, 0, 1974, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 0, 0, 0, 0, 4397, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	1975, 1963, 0, 1985, 0, 0, 0, 0, 0, 0,
	1964, 1966, 1971, 1965, 0, 0, 0, 0, 0, 0,
	0, 1937, 0, 0, 1958, 0, 0, 1981, 0, 1982,
	0, 1984, 0, 0, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 1976, 0, 1973, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 0, 1974, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 4396, 0, 0, 1934, 1935, 0,
	1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	1971, 1965, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 1958, 0, 0, 1981, 0, 1982, 0, 1984,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	1976, 0, 1973, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 0, 0, 0,
	1974, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	0, 0, 4012, 0, 0, 1934, 1935, 0, 1967, 1968,
	1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985,
	0, 0, 0, 0, 0, 0, 1964, 1966, 1971, 1965,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	1958, 0, 0, 1981, 0, 1982, 0, 1984, 0, 0,
	0, 0, 1951, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 1976, 0,
	1973, 0, 0, 1936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 1957, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	3481, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0, 0,
	0, 0, 0, 0, 1964, 1966, 1971, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 1958, 0,
	0, 1981, 0, 1982, 0, 1984, 0, 0, 0, 0,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 1976, 0, 1973, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 1957, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 1974, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 1948, 1949, 1955,
	1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 3480, 0,
	0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 0, 1975, 1963, 0, 1985, 0, 0, 0, 0,
	0, 0, 1964, 1966, 1971, 1965, 0, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 1958, 0, 0, 1981,
	0, 1982, 0, 1984, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 1976, 0, 1973, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 0, 0, 1974, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 0, 0, 0, 0, 3479, 0, 0, 0,
	0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980,
	1975, 1963, 0, 1985, 0, 2381, 0, 0, 0, 0,
	1964, 1966, 0, 0, 1971, 1965, 0, 0, 0, 0,
	0, 0, 0, 1937, 1958, 0, 0, 1981, 0, 1982,
	0, 0, 0, 1984, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 1976, 0, 1973, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 2382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 1974, 0, 0, 0, 0, 1942, 0, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 3478, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 1963,
	1975, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	1964, 1966, 1971, 1965, 0, 0, 0, 0, 0, 0,
	0, 1937, 1958, 0, 0, 0, 0, 1981, 0, 1982,
	0, 1984, 0, 0, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	1976, 0, 0, 0, 1973, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	0, 0, 2313, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 2311, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	1974, 0, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	3443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 1963,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 1981, 0, 1982, 0, 0,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 2383, 0, 0, 0, 0, 0,
	1976, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 1935, 1957, 1967, 1968,
	1969, 1978, 1979, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 1971, 1965,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 2384, 0,
	0, 0, 0, 1936, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 1987, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2312, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 1959, 1960, 1961, 1962, 0, 0, 0, 0, 0,
	0, 1942, 5166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 1975, 0, 0, 1985, 0, 0,
	0, 0, 1989, 0, 1964, 1966, 1971, 1965, 0, 0,
	0, 0, 0, 2310, 0, 1937, 0, 0, 0, 0,
	0, 1981, 0, 1982, 0, 1984, 0, 0, 0, 0,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 1973, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 1957, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 1942,
	0, 3543, 0, 0, 0, 0, 5165, 0, 3542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 0, 1975, 1963, 0, 1985, 0, 0, 0, 0,
	0, 0, 1964, 1966, 1971, 1965, 0, 0, 0, 0,
	3414, 0, 0, 1937, 0, 0, 1958, 0, 0, 1981,
	0, 1982, 0, 1984, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 1976, 0, 1973, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3415,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 0, 0, 1974, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 2926, 0, 0, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	1975, 1963, 0, 1985, 0, 0, 0, 0, 0, 0,
	1964, 1966, 1971, 1965, 0, 0, 0, 2925, 0, 0,
	0, 1937, 0, 0, 1958, 0, 0, 1981, 0, 1982,
	0, 1984, 0, 0, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 1976, 0, 1973, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 0, 1974, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 1935, 0,
	1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	1971, 1965, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 1958, 0, 0, 1981, 0, 1982, 0, 1984,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	1976, 0, 1973, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 0, 0, 0,
	1974, 0, 0, 1942, 0, 4770, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 1935, 0, 1967, 1968,
	1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985,
	0, 0, 0, 0, 0, 0, 1964, 1966, 1971, 1965,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	1958, 0, 0, 1981, 0, 1982, 0, 1984, 0, 0,
	0, 0, 1951, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 1976, 0,
	1973, 0, 0, 1936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 1957, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0, 0,
	0, 0, 0, 0, 1964, 1966, 1971, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 1958, 0,
	0, 1981, 0, 1982, 0, 1984, 0, 0, 0, 0,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 1976, 0, 1973, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 1957, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 1974, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 1948, 1949, 1955,
	1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 0, 1975, 1963, 0, 1985, 0, 0, 0, 0,
	0, 0, 1964, 1966, 1971, 1965, 0, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 1958, 0, 0, 1981,
	0, 1982, 0, 1984, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 1976, 0, 1973, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 0, 0, 1974, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	1975, 1963, 0, 1985, 0, 0, 0, 0, 0, 0,
	1964, 1966, 1971, 1965, 0, 0, 0, 0, 0, 0,
	0, 1937, 0, 0, 1958, 0, 0, 1981, 0, 1982,
	0, 1984, 0, 0, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 1976, 0, 1973, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 0, 1974, 0, 0, 1942, 0, 4215, 0, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 1935, 0,
	1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	1971, 1965, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 1958, 0, 0, 1981, 0, 1982, 0, 1984,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	1976, 0, 1973, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 0, 0, 0,
	1974, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 1963, 0, 1985,
	0, 0, 0, 0, 0, 0, 1964, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 1981, 0, 1982, 0, 0, 0, 0,
	0, 0, 1951, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 1935, 1957, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 1971, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 1936, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 1987, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 3549, 0,
	0, 0, 0, 0, 0, 0, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 1975, 0, 0, 1985, 0, 0, 0, 0,
	1989, 0, 1964, 1966, 0, 0, 1971, 1965, 0, 0,
	0, 3544, 0, 3993, 0, 1937, 0, 0, 0, 1981,
	0, 1982, 0, 0, 0, 1984, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 1973, 0, 0, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 1949, 1955,
	1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 1963, 1975, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 1964, 1966, 1971, 1965, 0, 0, 0, 0,
	0, 0, 0, 1937, 1958, 0, 0, 0, 0, 1981,
	0, 1982, 0, 1984, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 1976, 0, 0, 0, 1973, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 1974, 0, 0, 0, 0, 1942, 0, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	1975, 1963, 0, 1985, 0, 0, 0, 0, 0, 0,
	1964, 1966, 1971, 1965, 0, 0, 0, 3482, 0, 0,
	0, 1937, 0, 0, 1958, 0, 0, 1981, 0, 1982,
	0, 1984, 0, 0, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 1976, 0, 1973, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	3509, 0, 1974, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 1935, 0,
	1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	1971, 1965, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 1958, 0, 0, 1981, 0, 1982, 0, 1984,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	1976, 0, 1973, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 0, 0, 0,
	1974, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 1935, 0, 1967, 1968,
	1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985,
	0, 0, 0, 0, 0, 0, 1964, 1966, 1971, 1965,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	1958, 0, 0, 1981, 0, 1982, 0, 1984, 0, 0,
	0, 0, 1951, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 1976, 0,
	1973, 0, 0, 1936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 1957, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 1935, 0, 1967, 1968,
	1969, 1978, 1979, 1980, 1975, 1963, 0, 1985, 0, 0,
	0, 0, 0, 0, 1964, 1966, 0, 0, 1971, 1965,
	0, 0, 0, 0, 0, 0, 0, 1937, 1958, 0,
	0, 1981, 0, 1982, 0, 0, 0, 1984, 0, 0,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 1976, 0, 1973, 0,
	0, 0, 0, 1936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 2494,
	0, 1959, 1960, 1961, 1962, 0, 1974, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 1948, 1949, 1955,
	1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1963, 1975, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 1964, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1958, 0, 0, 0,
	0, 1981, 0, 1982, 0, 0, 0, 0, 0, 0,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1976, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944,
}

var sqlPact = [...]int{
	6256, -1000, -1000, -1000, -1000, 222, -1000, -1000, 220, 219,
	218, 217, 215, 212, 211, 208, 206, 203, 201, -1000,
	-1000, 200, 195, 194, 192, -1000, -1000, 188, -1000, -1000,
	186, -1000, 183, 182, 181, -1000, -1000, 180, -1000, 179,
	-1000, -1000, -1000, -1000, 178, 177, 176, 98362, 97774, 98948,
	2497, 125372, 107752, 2135, 87202, 124784, 86614, 124196, 2371, 11555,
	123608, 2947, 167, -1000, 123020, 166, 165, 161, -1000, 107164,
	122432, 104814, 104226, 2009, -1000, 159, 157, -1000, 5609, 75980,
	155, 154, 153, 152, 2563, 151, -1000, 150, 148, -1000,
	-1000, 146, -1000, 13366, 1621, -1000, 145, 140, -1000, 6977,
	103638, 139, 138, 137, 2452, 135, 134, 73036, 133, 129,
	128, 2350, 3035, -1000, -1000, 2217, -1000, -1000, 123, 122,
	120, 119, 118, 117, 116, 115, 113, 111, 104, 101,
	99, -1000, 98, 97, 96, 93, 91, -1000, 90, 89,
	87, -1000, 81, -1000, 80, 79, 77, 76, 70, 67,
	64, 63, 62, 61, 60, 59, 58, 57, 55, 12424,
	-1000, -1000, 53, -1000, 2117, 1789, 1785, 1767, 1763, 1747,
	1020, 52, 51, 49, 48, 47, 45, 44, 43, 42,
	41, 40, 30, 28, 26, 24, 23, 22, 20, 19,
	18, 163, 15, 14, 13, 12, 11, 10, 8, 4056,
	3770, -1000, 1762, 906, 32855, 3174, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 134162, 125958, 7, -54,
	6, -1000, 3546, 964, 60627, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 317, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 490, 2559, 782, -1000, -1000, -1000, 121844, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2493, -48, -1000, 2200,
	-1000, -1000, -1000, -1000, -1000, 781, -1000, 2490, 2445, 313,
	2437, -1000, -1000, -1000, 3631, 2633, 4061, 4060, 4057, 4055,
	4053, 133576, 1993, 4050, 2685, 4049, 4048, 4047, 4046, 4045,
	4044, 4043, -1000, 97186, 1115, 96598, 96010, 3621, 121258, 95422,
	120670, 136512, 51011, 817, 3630, -1000, -1000, -1000, -1000, -1000,
	-1000, 125958, -1000, 1113, -1000, -1000, 4042, 2201, 780, 106576,
	-1000, -1000, 120082, 1854, -1000, -1000, -1000, 965, 1263, 35263,
	35263, 35263, 295, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3641, -1000, -1000, -1000, -1000, 125958, 2879, 2879, 1445, 1474,
	1474, 2879, 2879, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4041, 4040, 4039, 4038, 4035, -1000, -1000, -1000, 86026,
	25440, 85438, 84850, 119494, 50409, 94834, 94246, 4034, 4032, 4030,
	49807, 80734, 58232, 3767, 118906, 135924, 3764, 3763, 1112, 2192,
	1557, -1000, -1000, -1000, -1000, -1000, -1000, -17, 77741, 3827,
	125958, -1000, 293, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	49205, 661, 48603, 629, 48001, 597, 118318, -1000, -1000, -1000,
	-1000, 80136, -1000, 117730, 2631, 4029, 4028, 1197, 4027, 3493,
	1815, 4026, 2020, 1298, 4024, 4021, 4019, 4017, 4016, 4012,
	4009, 1616, 117142, 3172, 1663, 116554, 1809, 135336, 1111, 93658,
	98948, 2793, 115966, 1527, 1461, -1000, -1000, -1000, -1000, 3267,
	3031, 3027, 1412, -1000, -1000, -1000, -1000, 64185, 7164, 1137,
	-1000, -1000, 12863, 115378, 67165, 98948, 98948, -1000, -1000, -1000,
	-1000, -1000, -1000, 47399, 518, 46797, 805, 114790, -1000, -1000,
	64781, 3134, 1150, -1000, -1000, -1000, -1000, -1000, 114202, 46195,
	517, 45593, 732, 125958, -1000, 3170, 2121, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2492, 1711, 3817, 2882,
	79538, 2221, 1482, 3580, 3264, 3262, 1601, 2187, 3261, 4007,
	2824, 3250, 3237, 3233, 3225, 3220, 1696, 2759, 511, 2747,
	32253, 3156, 1876, 44991, 1630, 1574, 3216, 3209, 3839, 3687,
	2176, 2197, 2224, 2196, 84262, 4006, 4003, 3535, 3199, 3197,
	2978, 3196, -1000, 3133, 1614, 291, -1000, -1000, -1000, -1000,
	-1000, -1000, 1548, -1000, -1000, -1000, -1000, -1000, 89546, -1000,
	-1000, 1774, -1000, -1000, 1774, -1000, -1000, -1000, -1000, -1000,
	1385, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1762, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2556, -1000, 2215, -1000,
	-1000, -1000, 2687, 3475, 3475, 3475, 3629, 462, 461, -1000,
	163, -1000, -1000, 146344, -1000, -1000, 51613, 51613, 51613, 51613,
	51613, 51613, 51613, 51613, 2372, -1000, 775, -1000, -1000, 822,
	-1000, 774, 705, 637, -1000, -1000, -1000, -1000, -1000, -1000,
	772, -1000, -1000, -1000, -1000, -1000, -1000, 3813, -1000, 28504,
	-1000, -1000, -1000, 499, 770, 51613, -1000, -1000, 3860, 3859,
	922, -1000, 287, 994, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3169, 769, 768, -1000,
	766, 763, 762, 761, 756, -1000, 755, -1000, 754, 753,
	746, 741, 740, 739, 735, 734, -1000, 2227, -1000, -1000,
	-1000, -1000, -1000, -1000, 688, 687, 687, 687, -1000, 1104,
	-1000, -1000, -1000, 334, 686, 283, 685, 684, 683, -1000,
	730, 729, 728, 727, 724, 723, 720, 719, 716, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1083, -1000, -1000, -1000,
	-1000, 1357, -19, 125958, -1000, 490, -19, -1000, -1000, 715,
	-1000, 37087, 37087, 37087, -1000, -1000, 2489, 51613, -1000, 2718,
	-1000, -11, -11, 949, 62394, -1000, 59427, 949, 596, 823,
	68340, -1000, 3131, -1000, -1000, 714, 277, -1000, -1000, -1000,
	-1000, 26036, 3115, 125958, 125958, 125958, 98948, 98948, 98948, 125958,
	4002, 4001, 3359, 51613, -1000, -1000, 75392, 138271, 99534, -1000,
	-1000, 3740, 73622, 74805, 3168, 138271, 3166, 137688, 3999, -1000,
	-1000, -1000, -1000, -1000, 3336, 3998, 3997, 3996, -1000, 125958,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 258, 3335, -1000,
	-1000, 103050, 258, 3334, -1000, 258, 3321, -1000, 102464, -1000,
	-1000, 2370, 3320, -1000, -1000, 262, 3313, -1000, -1000, -1000,
	261, 3312, -1000, -1000, 274, -97, 3308, -1000, -1000, -1000,
	-1000, -1000, -1000, 146344, -1000, -1000, -1000, 137100, -1000, 3534,
	-1000, 125958, -1000, 51613, -1000, -1000, 3739, 1761, 3536, 3671,
	-1000, -1000, -29, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2671, 2669, 1198, 2518, -1000, 3370, 1588, 35263, 3472, -1000,
	-1000, -1000, -1000, -1000, 266, 26036, 3013, -1000, -1000, 125958,
	-1000, 125958, 2879, 2879, -1000, -1000, -1000, 3832, 3831, 2879,
	2879, 125958, 125958, -1000, -1000, -1000, -1000, -1000, -1000, 2363,
	3305, 1364, -1000, 2515, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2110, 3302, -1000, 2092, 3300, 2099, -1000,
	-1000, 3633, -1000, 142858, 1410, -1000, -1000, -1000, -1000, 2313,
	3296, -7, -1000, -1000, 2359, -1000, -1000, -1000, -1000, 142650,
	-1000, 3049, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1790, -1000, -1000, 2280, 2165, -1000, 1405, 3295, -1000,
	2878, 2878, 93070, 3348, 66569, 64781, 77741, -22, -1000, -1000,
	-1000, -1000, -1000, -165, -1000, 24837, 146344, -1000, -1000, -1000,
	-1000, 1892, 146344, 948, -1000, -1000, 3294, -1000, 146344, 943,
	-1000, -1000, 3293, -1000, 2755, -1000, 3165, -1000, -1000, 2581,
	2577, 1041, -1000, 3994, -1000, -1000, 3993, -1000, 3991, 3990,
	3989, -1000, 1867, 2181, 3988, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 92484, 2488, -1000, -1000, 88960, 3164, -1000,
	2573, 3668, -1000, 91896, 1106, -1000, 1024, 2572, -1000, 101878,
	978, 2571, -1000, 3987, 3618, 2825, 1024, 2570, -1000, -1000,
	-1000, -1000, -1000, 1067, -1000, 70099, -1000, 70099, -1000, 1771,
	-1000, 132990, -11, 98948, 3813, -1000, -55, -1000, -1000, -1000,
	964, -1000, 63586, -1000, 63586, 105988, 81330, 1008, 3112, 72447,
	146136, -1000, 1039, -1000, -1000, 146344, -1000, -1000, -1000, 2754,
	-1000, -184, 2870, -1000, 81330, 65973, 3107, 2750, -1000, 146344,
	-1000, -1000, -1000, -1000, 146344, -1000, -1000, -1000, 81330, 88960,
	-1000, 113614, 91308, -1000, -1000, 1609, 2733, -1000, -1000, -1000,
	81330, 1414, 81330, 81330, 81330, -1000, 113026, -1000, -1000, 2225,
	1354, 3521, 2223, 98948, -1000, 2015, -1000, -1000, -1000, 3561,
	3303, 125958, -1000, -1000, 3160, -1000, 77154, 101292, -1000, 100706,
	-1000, 100120, -1000, 98948, -1000, 98948, -1000, 3986, 3985, 3984,
	-1000, -1000, 3983, -1000, 3982, 3547, -1000, 718, 44389, 146344,
	3543, -1000, 3978, 2157, 3156, 146344, -1000, 3221, 1788, 1783,
	125958, -1000, -1000, 125958, -1000, 125958, -1000, -1000, -1000, 2507,
	1690, -1000, -1000, 2668, -1000, -1000, -1000, 1035, -1000, -1000,
	98948, 98948, 98948, 98948, 1347, -1000, 43787, -1000, -1000, 3189,
	3977, 1893, -1000, 1987, -1000, 3106, 3482, -1000, 1597, 1884,
	260, 3864, -1000, -1000, 265, -1000, -1000, -29, -1000, 132404,
	-1000, 2687, -1000, 125958, -1000, 2688, 3150, 3155, 1812, 2503,
	2770, -1000, 43185, 2705, 55225, 2514, 163, -1000, -1000, 163,
	163, 34059, -1000, -1000, 73622, 73622, 26036, 1395, 51613, 51613,
	51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613,
	51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613,
	51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613,
	51613, 51613, 51613, 51613, 2304, 51613, 1384, 51613, 51613, 51613,
	51613, 2276, -1000, -1000, 2115, 573, 2177, 705, -1000, -1000,
	-1000, 3801, 3801, 3801, 717, 717, 717, 9697, 9697, 640,
	3972, 822, -1000, 51613, -1000, 144, 62980, 51613, 26634, -1000,
	461, 13172, 2732, -1000, 460, 27266, -1000, -1000, -1000, 28504,
	637, 42553, 51613, 1068, 146344, -1000, -1000, 1517, 3822, 24234,
	3183, 2964, 702, 910, 901, 31621, 30989, 30357, 29725, 900,
	882, 51613, 51613, 51613, 51613, 51613, 51613, 51613, 51613, -1000,
	-1000, 3830, -1000, 3822, -1000, -1000, -1000, -1000, 3822, 1368,
	1330, 3822, -1000, 3822, 3822, 9235, 9235, 41951, 41349, 40747,
	55827, 40145, 51613, 29123, 39543, 38941, -1000, 57633, 125958, -19,
	3738, 51613, 241, -1000, 143768, -1000, 241, 241, 700, -57,
	146344, 2751, 2751, 61216, 2539, 2388, 2388, 2388, -1000, 949,
	18769, 949, 111268, 2405, 949, 949, 246, 315, 455, 58831,
	2718, 111268, 801, 699, 3, 2, 1, -1000, -1000, 0,
	-1, -1000, -1000, 98948, 696, 26634, 26036, 243, 2179, -63,
	2769, 2768, -1000, 2767, 2766, -1000, 2765, 2485, -1000, -1000,
	-1000, 1924, -65, 1381, 98948, 125958, 1536, 3971, -120, -1000,
	5515, -66, -1000, 1389, 240, 3822, -1000, -1000, -1000, -1000,
	-1000, 3967, 3961, -1000, 1082, 695, 690, 615, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 688, 687, 687, 687,
	-1000, 334, 686, 283, 685, 684, 683, -1000, -1000, -1000,
	-1000, -1000, 3104, 98948, 125958, 1530, 3960, 87788, -97, 99534,
	-85, -1000, -1000, 125958, -1000, -1000, -1000, 3958, -1000, 98948,
	-1000, -1000, 98948, 258, 3292, -1000, 98948, -1000, 98948, 256,
	3288, -1000, -1000, 125958, -1000, 98948, 98948, -1000, 125958, 125958,
	125958, 138271, 138271, 255, -1000, 98948, 911, -86, 1209, -29,
	-1000, -1000, -1000, -1000, 1774, -1000, 1945, -1000, -1000, -1000,
	-1000, -1000, -1000, 1605, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 922, -1000, -1000, -1000, -1000, 3820, 3808, -20,
	-1000, -1000, 26036, -1000, 2070, -1000, -1000, -1000, -1000, 125958,
	125958, -1000, -1000, 125958, 125958, -1000, -1000, -30, 1727, 578,
	1376, -1000, 83674, 2542, 3516, 3955, 2818, 3502, 1768, -1000,
	1686, 682, -1000, 3637, 89546, 3683, 3721, 1406, -1000, 3103,
	-1000, -1000, -1000, 963, 1855, 1856, 1373, 1371, 89546, 2092,
	-1000, 73622, -1000, 2872, 3628, 1474, 1481, 1474, 1474, 1467,
	-1000, 89546, 1853, 1370, 1362, 1351, -1000, -1000, 1738, 1735,
	-1000, -1000, 112440, 1641, -1000, 1350, 1349, 3757, 2556, 2329,
	842, 2136, -1000, 1407, 1346, 3096, -1000, -1000, -31, 3681,
	3706, 1406, -1000, 3090, 1343, -1000, -1000, -1000, 3625, 98948,
	26036, 1666, 1661, 1665, 1837, 1340, -21, -1000, 3678, 1734,
	-1000, 88960, 88960, 108338, 125958, 3778, 81330, -1000, 2574, -1000,
	-1000, -1000, 3575, 3574, -1000, -1000, 1325, 1324, -1000, 1093,
	9673, 3425, -1000, 138271, 1093, 1093, 2064, 3285, 2856, 1791,
	-1000, 2869, 928, 2867, -1000, -1000, -1000, 928, -22, 77741,
	125958, 236, -1000, 144, 51613, 51613, 144, 51613, 144, -1000,
	3658, 3283, 3282, 3953, -1000, -1000, -1000, -1000, -1000, 3952,
	2146, 2684, -1000, -1000, 681, 2568, 3088, 125958, 168, -1000,
	98948, 3200, 76567, 3281, 138271, 2092, 2567, -1000, -1000, 90720,
	-1000, 3280, 490, 2565, -1000, 672, 3949, 3279, -1000, 131818,
	-1000, 3534, 1486, 3276, 1148, 659, 3737, -1000, 659, 70686,
	-1000, 125958, -1000, -11, 294, 82502, -91, -92, 452, -1000,
	111854, 125958, 125958, 3451, 2166, 2161, -1000, 1014, 64781, -1000,
	64781, -94, -1000, -184, 2864, 1652, 64781, -1000, 1008, -134,
	928, -1000, 928, -1000, 98948, 3153, -1000, -1000, 81330, 1008,
	1008, 1008, -1000, -1000, -1000, -1000, 3948, 3947, 3938, 3934,
	-1000, -1000, 1022, 98948, 125958, 98948, -1000, 2854, 1705, -1000,
	235, -1000, 138271, -1000, 138271, 125958, 98948, -1000, 1022, 125958,
	1022, 125958, 1022, 125958, 1022, 1022, -1000, -1000, -1000, -1000,
	-1000, 144, -1000, -1000, 146344, -1000, 51613, -1000, -1000, 1654,
	3933, 1784, -1000, 3152, -1000, 3151, -1000, 39, -1000, -1000,
	3829, 1998, -1000, 3858, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3931, 146344, -1000, 2025, -1000, -1000, -1000, -1000,
	98948, 98948, 98948, 98948, 125958, 3410, -1000, 125958, 3384, 98948,
	-1000, 3863, -1000, -1000, 89546, -1000, 2688, 3150, -1000, -1000,
	-1000, -1000, -1000, -1000, 1547, 2449, -1000, 2722, -1000, 1719,
	-1000, -1000, -1000, 146344, 56429, -1000, -1000, 146344, 1906, -1000,
	54623, 54021, -1000, -1000, 1859, 98948, 2790, -1000, 2790, -89,
	-1000, 143560, 2710, 98948, -1000, -1000, -1000, -1000, -1000, 962,
	765, 765, 1466, 1466, 1466, 1466, 3644, 356, 8407, 8197,
	7011, 7011, 385, 385, 385, 385, 385, 7011, 5394, 717,
	717, 5394, 5394, 5394, 5394, 5394, 717, 717, 717, 7011,
	7011, 7011, 717, 9697, 146554, 10602, 51613, 51613, 1320, 2113,
	573, 10529, 51613, 6307, 6307, 6307, 6307, -1000, 2328, -1000,
	-1000, -1000, -1000, 3087, 678, 55827, 55827, -1000, -1000, -1000,
	-1000, 27885, 51613, -1000, -1000, -1000, -1000, 38309, -1000, -1000,
	142440, -330, 438, -1000, 234, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 435, -75,
	25, -1000, 51613, 51613, 51613, 423, -1000, 232, 51613, 125958,
	-1000, 138890, 796, -136, -1000, -100, 1500, -1000, 51613, -1000,
	-1000, 1317, -1000, 1316, 1315, 1314, -1000, 677, 421, -1000,
	230, -1000, 2381, 673, 669, 51613, -1000, -1000, -1000, -1000,
	-1000, 142232, -1000, -1000, 142024, -1000, -1000, 141816, -1000, -1000,
	141608, -1000, -1000, -1000, -1000, -1000, 145928, 138860, 17993, 17563,
	12301, 17068, 15601, -101, 420, -102, 418, 961, 959, 416,
	415, 414, -103, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -108, 411, -1000, 3082, -75,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 410, -1000,
	405, -1000, 145720, -75, 404, 5916, -1000, 55827, 55827, 55827,
	55827, 403, -1000, 143352, -1000, 145512, 37707, 37707, 37707, 401,
	145302, 51613, -75, -109, -1000, -111, -1000, -1000, -1000, -1000,
	560, -114, 1066, 37087, 60038, 26036, -1000, 1066, 1066, 51613,
	-1000, 51613, 2742, -1000, -1000, -1000, -1000, 2740, 2109, 2751,
	61216, -1000, -1000, -1000, -1000, 111268, -1000, 3813, 2865, -1000,
	111268, -1000, -1000, 125958, 490, -1000, 111268, 111268, 26036, 949,
	-1000, 949, 111268, 651, -1000, -1000, -1000, -1000, -1000, 400,
	71275, 25, 227, 26036, 1024, -1000, -1000, 2881, 2881, 2881,
	2881, 2881, 98948, -1000, -1000, 138271, 1312, -25, -119, 2859,
	-1000, 3775, -1000, 2272, -1000, 73622, -1000, 820, 1162, 26036,
	-1000, -1000, -1000, 667, -1000, 3822, 3822, -1000, 3822, 138271,
	3081, 197, 2858, -1000, 2478, -23, 191, 138271, 3929, -1000,
	-1000, 258, -1000, 98948, 258, 258, -1000, 98948, 98948, 2370,
	-1000, 262, -1000, 261, -1000, -1000, -97, -1000, 1034, 35263,
	-1000, 1774, -1000, -1000, 1656, -1000, 2171, -1000, 1313, -1000,
	-1000, 35263, -1000, 3456, -1000, 1874, -1000, -1000, -1000, -1000,
	2775, 125958, 125958, 98948, -1000, 109510, 125958, -1000, 2277, 138271,
	-1000, 2564, 131232, 2541, 130646, 73622, -1000, -1000, 664, 974,
	2700, 2696, 1144, 125958, 125958, 2695, 130060, 129474, -1000, 3921,
	125958, 2235, 51613, 109510, 3622, 2305, 1885, 144, 144, -1000,
	144, -1000, -1000, 663, 1318, 98948, 98948, 125958, 138271, 98948,
	1975, -1000, -1000, -1000, -1000, -1000, 90132, -1000, -1000, 1474,
	-1000, -1000, -1000, 1474, 2092, 1919, 125958, 138271, 98948, 138271,
	128888, 2077, 128302, 2067, -1000, -1000, 2041, 1833, 125958, -1000,
	-1000, -1000, -1000, 1505, -1000, 842, 1311, 3080, 51613, 51613,
	2301, 144, 144, -1000, 144, 658, 26036, 2091, -1000, 3109,
	125958, 3856, 127716, 3854, 125958, 125958, 125958, 138271, 3526, 125958,
	-1000, -134, -24, -189, -1000, 912, 909, -165, -1000, 3778,
	-1000, 905, 2201, 125958, 138271, -1000, 127130, 9673, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2292, 78940, 1154, 125958, 1405,
	-1000, -1000, 1832, 1307, 1295, 89546, 2198, 1828, 1979, 138271,
	64781, 1015, 64781, 2831, -1000, -1000, 23631, -1000, 146344, 146344,
	-1000, 146344, -1000, 76567, 81330, 125958, -1000, -1000, 1094, 125958,
	83088, 992, 3272, 69512, -165, 1008, 88960, 81330, 3198, 125958,
	2787, 125958, -1000, -1000, 2092, 3263, 490, 2558, -1000, 138271,
	3736, 3247, 657, 3920, 3919, -1000, 98948, 2477, 2551, -1000,
	-1000, 126544, 3349, 842, 125958, 1066, 61216, 2016, -1000, 67754,
	1126, 125958, 1986, 162, -1000, -1000, -1000, 17, 125958, -1000,
	811, -1000, -1000, 294, 294, 1008, -189, 656, 65377, -121,
	-1000, 226, 638, 904, 903, -1000, 5090, -1000, -184, -1000,
	81330, 1014, 64781, 3079, -184, 2857, 3078, -1000, -1000, 1031,
	-1000, 1581, 1008, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -12, -1000, 1826, 1949, 125958, -97,
	-97, -38, -25, -1000, 1022, -1000, 1022, -1000, 1022, -1000,
	-1000, -1000, 146344, -1000, -1000, -1000, 1780, 1778, 125958, -1000,
	3149, -1000, 125958, -1000, -1000, 26036, 125958, 98948, 26036, 98948,
	3148, 3147, -1000, -1000, -1000, 125958, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1174, -1000, 1906, 2448, -1000, 637,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2649,
	-1000, -28, 34059, 947, -1000, -1000, 98948, -13, 51613, 51613,
	9231, 9182, 51613, 55827, 55827, -1000, 51613, 8385, -1000, -1000,
	-1000, -1000, -1000, 3077, 633, 51613, 73622, 7417, 7181, -1000,
	394, 15185, 5394, -1000, 51613, -1000, 539, -1000, 393, 36485,
	-1000, 144184, -43, -122, -1000, 19386, -75, -124, -1000, -1000,
	814, -1000, 3345, -1000, 51613, 145016, 2620, 2150, 1977, 1794,
	3822, 3853, 23028, -1000, 71861, 1069, 2411, 141400, -1000, -1000,
	-1000, -1000, 73622, 73622, 51613, 51613, -1000, 51613, 51613, 51613,
	-1000, -1000, -1000, 3822, 952, -1000, -1000, -1000, 952, -1000,
	-1000, 1474, -1000, 1474, -1000, 51613, -1000, -1000, 3076, 51613,
	-1000, 73622, 73622, 55827, 55827, 55827, 55827, 55827, 55827, 55827,
	55827, 55827, 55827, 55827, 55827, 55827, 55827, 55827, 55827, 55827,
	55827, 55827, 55827, 2731, 55827, 3797, 3797, 3797, 1028, -1000,
	3145, 3076, 51613, 51613, 73622, 390, 387, 386, -1000, 51613,
	-75, -1000, -1000, 8761, 631, -1000, 2641, -1000, 2955, -1000,
	51613, -1000, -176, -1000, 2718, -1000, -1000, 2955, 2955, -129,
	146344, 61216, 61216, -1000, 626, 51613, 2729, -1000, -1000, 795,
	-331, -1000, 902, -1000, -1000, -1000, -1000, -1000, -1000, 897,
	-1000, 490, -1000, -1000, -1000, 225, 111268, 111268, 792, -1000,
	-131, -1000, -1000, -143, -1000, 3735, 384, 26036, -1000, 1066,
	5275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2756, -273,
	138271, 138271, 1819, 2430, 3852, -1000, 3824, 812, 791, 224,
	3822, 383, 382, 380, -97, 138271, 138271, 1816, 74218, 138271,
	-1000, -1000, -1000, 258, -1000, -1000, -1000, 256, -1000, -1000,
	-1000, -1000, 2814, -1000, -29, -1000, -1000, -1000, 51613, -1000,
	996, -1000, -1000, 3515, 625, 1294, 1291, -1000, -144, -1000,
	894, -1000, -1000, -1000, -1000, 3017, -1000, 3244, -1000, 2550,
	-1000, 1131, 2549, 1685, -1000, 51613, 624, 2823, 620, 619,
	3918, 2211, 3916, 1145, 3243, 2370, 3242, 2370, -1000, -1000,
	-1000, 968, -1000, 146344, -145, -1000, 2305, -1000, 618, 617,
	-1000, -30, 1715, 570, 1290, 1030, -1000, -1000, 51613, 51613,
	110682, -1000, 533, 3517, -14, -1000, -1000, -1000, 1814, 1283,
	1279, -1000, -1000, -1000, -1000, 2092, 1810, 1278, 1270, -1000,
	-1000, -1000, -1000, -1000, 2548, -1000, 125958, -1000, 3241, 125958,
	125958, 1029, -1000, 3210, 3207, 956, 125958, 51613, 51613, 144808,
	144600, -1000, 1027, -1000, -1000, 51613, -1000, -31, 1267, 3674,
	2547, 98948, -1000, 2370, 3240, 1266, -1000, 1264, -1000, -1000,
	-1000, 3677, 3673, 1261, -1000, 108338, 81330, 81330, 3778, 64781,
	-1000, -1000, -1000, 81330, -1000, -1000, 78344, -1000, -1000, 1093,
	125958, 138271, 98948, 1871, -1000, -1000, 87788, 88374, 125958, 2856,
	-97, 928, -1000, 2728, 928, 1015, 3072, -1000, 2782, -1000,
	1026, 98948, 3915, 367, -146, -34, 73622, -1000, -1000, -1000,
	-1000, 2541, 98948, 125958, 1326, 2822, 125958, 125958, 3734, -1000,
	2495, 627, 98948, 946, -1000, 3813, -1000, -1000, -1000, 125958,
	-1000, -1000, 1025, -1000, 3662, 98948, 3732, 3239, 1024, 144,
	98948, 3840, -1000, -1000, 3730, 98948, 3238, 2476, 2546, 2675,
	842, 81916, 1024, 2408, -45, -1000, 1986, 35865, 3514, -151,
	-1000, -1000, -1000, 1066, 70686, 61216, 51613, 3914, -152, -1000,
	-1000, -1000, -1000, -1000, 108338, 81330, 1008, 125958, 125958, 3913,
	81330, 81330, 81330, -35, 616, -1000, 893, 887, 884, -1000,
	-1000, -1000, -1000, -1000, -1000, 883, 881, 879, 878, 1014,
	-1000, -1000, -184, 64781, 1014, 64781, 144, -1000, 2416, 98948,
	-1000, 22425, 125958, 2854, -1000, -1000, -1000, -1000, -1000, -1000,
	1022, 3851, -165, -1000, -1000, -1000, 2303, 2513, 2303, 1971,
	1963, -1000, -1000, 2433, -1000, -1000, -1000, -1000, 2777, 3463,
	26036, 3665, 6307, 51613, 51613, 6725, 5966, 2968, 6307, 51613,
	51613, 73622, 7892, -153, 51613, 51613, -1000, 51613, 787, 146344,
	-1000, 3850, 51613, 366, 365, -1000, -1000, -1000, 3815, -1000,
	-1000, -1000, 146344, 51613, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 364, -1000, 164, -1000, -1000, -1000, 134748, -1000, 51613,
	363, 3617, -1000, 360, 358, 14397, 319, 141192, 140984, 140776,
	357, -1000, -1000, 353, 342, 146344, 3145, 146344, -1000, -1000,
	1016, 1016, 1460, 1460, 1460, 1460, 3797, 1057, 1222, 456,
	2050, 2050, 2050, 1049, 1028, 1028, 2050, 2050, 2050, 1028,
	3060, 2724, 611, 7463, -1000, -1000, 146344, 146344, 341, -1000,
	-1000, -1000, -75, 340, 8761, -1000, 2941, 3616, 146344, -1000,
	61216, 2941, 2941, -1000, -1000, 2109, 125958, 146344, 61216, -1000,
	2865, -1000, 20610, 20001, -1000, 26036, -1000, -1000, -1000, -1000,
	3813, -1000, 71275, -1000, 607, -1000, 126, -1000, 5275, -1000,
	875, -1000, -1000, 81330, 81330, 3912, 3911, 3910, 3849, 3848,
	2394, 3847, 2881, -1000, 2975, -273, -244, 125958, -1000, -1000,
	786, 3909, 810, 26036, 339, -1000, -1000, -1000, -97, -97,
	125958, 3058, 98948, 125958, 1526, -97, -1000, -1000, -1000, 3447,
	146344, 3144, 2924, 2923, 125958, 125958, -1000, 109510, 35263, 1658,
	110096, 125958, 3232, -1000, 3231, -1000, 1144, 1687, 140568, 61805,
	-1000, 61805, 125958, -1000, -1000, -1000, -1000, 2065, 1651, 3908,
	1190, -1000, 3564, 125958, -1000, 125958, -1000, -1000, -1000, 109510,
	-1000, 125958, 125958, 98948, 125958, -1000, 138271, 3217, -154, 146344,
	-36, -1000, 874, -1000, 1454, -1000, 21822, 125958, 138271, 98948,
	125958, 138271, 98948, 3230, 1125, 125958, -1000, 1124, 2346, -1000,
	-1000, 3201, -1000, 146344, 144392, 144, 51613, 3204, -160, 26036,
	-1000, 3845, 3844, 3229, 3571, -1000, 125958, 3843, 125958, 98948,
	3441, -1000, -1000, -1000, 1018, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1807, 1257, 1256, 2474, 2472, 2429, -38, 2198,
	1015, -41, 604, -1000, 873, -1000, -1000, 872, 867, 1015,
	-1000, 81330, 64781, 3907, 490, -1000, 2817, -1000, 105400, 83088,
	2431, -1000, -1000, 601, 125958, 125958, 598, -1000, 144, -1000,
	3906, 109510, 595, -1000, 2415, -1000, 785, -1000, -1000, 2670,
	138271, 2092, 144, 98948, -1000, 1013, 490, 338, -42, -1000,
	3343, 1138, 26036, 98948, 3228, 2677, 842, 81916, -1000, 1486,
	2770, -1000, -44, -1000, 722, 144, 2408, -1000, -45, 146344,
	-1000, 866, -166, 337, -1000, 3432, -1000, -1000, -167, -1000,
	-1000, 5216, 5216, 81330, 64781, 81330, 81330, 81330, 64781, 81330,
	-1000, 1014, 928, -1000, -184, -1000, 2603, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 26036, 1782, -1000, 594, 593,
	-1000, -1000, -1000, -1000, 3463, 6307, 6307, 51613, 51613, 51613,
	6307, 7892, -175, -1000, 6307, 6307, -75, -1000, -1000, 144184,
	-1000, -1000, -1000, 146344, -1000, 21219, 2335, -1000, 140360, -1000,
	34059, -1000, -1000, 51613, 51613, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 55827, 3042, 592, 73622, -1000, -1000, 335,
	1051, 51613, 53419, 2718, 1051, 1051, -1000, -183, -1000, -1000,
	-1000, 3813, -1000, 3813, 126, -1000, -1000, 3904, 26036, -1000,
	81330, -1000, -1000, -1000, -1000, -1000, -1000, 3902, 3898, 2529,
	3897, 3896, -1000, 2418, -1000, -1000, 3182, -162, 806, -1000,
	3895, -1000, -1000, 130, 138271, 3040, 125, 2845, -1000, 144,
	-1000, -1000, -1000, -1000, -1000, -1000, 2840, 3729, -1000, 2040,
	-1000, 125958, 125958, -1000, 125958, -1000, 26036, 125958, 2945, 1310,
	-1000, 974, 2694, 590, 55827, 1170, 98948, 671, 2906, 2892,
	-1000, 3754, 3615, 2916, -186, -1000, 125958, 51613, 125958, -188,
	-193, 2524, -1000, -1000, 1169, 1309, 51613, 1166, -1000, -1000,
	-1000, 73622, 589, 2370, 2370, -1000, -194, -196, -1000, -1000,
	-1000, 51613, 1255, 125958, 34661, -1000, 3893, 3517, -1000, -1000,
	-1000, -1000, -1000, -1000, 125958, 125958, -1000, 125958, 125958, -1000,
	51613, -1000, 143976, 51613, 1245, -1000, -1000, -1000, 3842, 2370,
	26036, 2370, -1000, 2370, 3571, 1188, 2458, 125958, 138271, 98948,
	2013, 2013, 3143, -1000, -1000, -1000, 2717, 2717, 81330, 64781,
	64781, -1000, -46, 1015, -1000, 3728, 2309, 3891, -1000, -1000,
	-1000, -1000, 2693, -1000, -1000, -1000, 125958, 2690, 2943, 61805,
	588, 586, 125958, 1011, -1000, -202, 83088, 992, 969, -1000,
	-47, 583, -1000, 852, -1000, -1000, -1000, -1000, 490, -1000,
	2812, 3726, -1000, 3841, 581, 575, 125958, 2471, 574, 26036,
	3509, 842, 81916, -1000, 3349, 1986, -1000, 2536, 125958, 3501,
	-1000, 2770, 573, -1000, 1008, 569, 1008, -1000, -203, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1014, -49,
	-1000, 935, 622, -1000, -1000, 98948, 98948, 51613, 51613, -1000,
	6307, 6307, 6307, -1000, 331, -1000, -1000, 2408, 3608, -1000,
	-52, 140152, 139944, 654, 55827, 73622, -211, -1000, -1000, 125958,
	146344, -53, -1000, 146344, 564, 561, 477, -1000, -1000, -1000,
	655, 652, -1000, -1000, -1000, -1000, 3890, -1000, -1000, -1000,
	-1000, 138271, 3888, -1000, 138271, -97, 138271, 138271, 1800, -1000,
	108924, 125958, -1000, -1000, 1685, 2129, -1000, -1000, 125958, 2543,
	-1000, -1000, -1000, 1007, 51613, 7463, 55827, 556, 51613, -1000,
	545, 542, 3718, 3376, -1000, 2813, 2997, 2086, 61805, -1000,
	3463, -1000, 139736, -1000, 1135, 2073, -1000, -1000, -1000, -1000,
	146344, 55827, 3571, 61805, -1000, -1000, 541, 540, 146344, 538,
	849, 3036, -1000, -1000, -1000, -1000, -165, -165, -1000, 146344,
	144, 146344, 535, 3674, -1000, -1000, -1000, -1000, 2370, 98948,
	848, -1000, -1000, -1000, 1243, -1000, -1000, -1000, -1000, 3881,
	3880, 3033, 87788, -1000, -219, -1000, -1000, -1000, 2126, 144,
	992, -1000, -1000, 2431, 513, -1000, 1005, 2660, 2660, -220,
	61805, 61805, -221, 2459, 2806, -1000, 329, 3714, 969, -1000,
	3809, -1000, 3437, 3437, 51613, 3713, 3430, -1000, 144, -1000,
	3840, 61805, -1000, 98948, 61805, 2470, 2204, 2665, 81916, -1000,
	2675, -1000, -1000, -222, 125958, 1986, -1000, -1000, 81330, -1000,
	-1000, -1000, 2603, -1000, 125958, -1000, 125958, -1000, -1000, -228,
	-229, -1000, 2334, 51613, 34059, -1000, -1000, 654, -230, -1000,
	-68, -1000, 3702, 53419, 3879, 3878, 3873, -1000, -1000, -1000,
	-273, -1000, -97, -97, -97, 125958, -1000, 2023, -1000, 2541,
	-1000, -1000, 3227, -1000, 2937, 501, 139528, 7463, 2643, 125958,
	139320, 2092, 2092, -1000, 3698, 2985, -1000, -1000, 2301, 500,
	-1000, -1000, -1000, -1000, 947, 125958, 1005, 2935, 98948, 7463,
	1143, -231, 2303, 2303, 51613, 33457, 2343, -1000, 51613, -1000,
	-1000, 3571, 64781, 138271, -1000, -1000, 138271, 2463, -1000, 2995,
	3810, -1000, 2459, 125958, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1135, -242, -248, -1000,
	-1000, 3556, -1000, 3429, 2817, 144, -1000, -1000, -1000, -250,
	146344, 144, 3869, 1013, 328, -253, 1138, -256, 98948, 2088,
	-1000, 842, -1000, 2677, 1066, 3356, -1000, -258, -1000, -259,
	-261, -1000, -1000, 326, 52817, 52817, 52817, -75, -89, -1000,
	125958, 491, -1000, -1000, -1000, -1000, -1000, 112, -1000, -1000,
	3191, 944, -1000, 886, 2024, 322, 1146, 284, 242, -1000,
	-1000, -1000, 2916, -1000, 125958, -1000, -1000, -1000, 944, 490,
	-1000, 51613, 1135, -266, -1000, 1123, -267, -1000, 1122, -275,
	-1000, 3028, -1000, -276, 2370, -1000, -273, 255, 2013, 1012,
	3636, -1000, -1000, -1000, 2653, -284, -1000, -1000, 2086, 1135,
	2301, 2623, -1000, 2309, 1011, -1000, -1000, -1000, -1000, -1000,
	1135, 484, 2086, 483, 1631, 842, -1000, -1000, 1474, 3509,
	3355, 1436, 1008, -1000, -1000, -1000, 3252, -1000, 57031, 2457,
	1958, 143144, 3252, 3252, -1000, -1000, 138271, 125958, 1005, 3623,
	-1000, 927, 918, 1587, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1066, -285, -1000, 2643, 146344, 1005, -1000, 2303,
	2839, -1000, 2303, 3025, -1000, 2338, -1000, -1000, -1000, -1000,
	3006, -1000, 1880, 3779, -1000, -1000, 1005, 125958, 2301, 2086,
	1005, 1920, 1907, 3868, 992, 2459, 2086, 61805, 2301, 61805,
	2275, -1000, 125958, -1000, 2204, 1434, -1000, 1764, -1000, -1000,
	1950, 3749, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -97,
	-1000, -1000, 844, -1000, 3365, -1000, 1165, 2153, 2153, -1000,
	-1000, 886, -1000, -1000, 481, -1000, 478, -1000, 138271, 2414,
	-1000, -1000, -1000, -1000, 1005, 2301, 1066, -1000, 3867, -1000,
	2459, -1000, 2301, -286, 1005, -291, 2362, -1000, -1000, -165,
	2088, -1000, 1750, 70686, 1954, -1000, -1000, 2400, 52215, 51613,
	-1000, 3783, -1000, -1000, 2753, -1000, 2916, 51613, 51613, 255,
	68926, 1066, 1005, -1000, -1000, 2653, 1005, 1135, 1066, 2086,
	-1000, 842, 1631, 70686, -272, -1000, -1000, -1000, 146344, -1000,
	-1000, -1000, -1000, -292, -293, -1000, -189, 108338, -1000, 1066,
	-1000, 1066, 2086, -1000, 2301, 138271, 2275, -272, -1000, 2301,
	1221, -318, -1000, -1000, 2301, 1005, -1000, -1000, -1000, -1000,
	-1000, 475, -1000, 1005, 1066, 51613, 1066, -1000, -319, -1000,
	2301, -1000,
}

var sqlPgo = [...]int{
	0, 4770, 4769, 4768, 4767, 4766, 4765, 4763, 4761, 4760,
	4759, 4758, 4756, 4755, 4753, 156, 4751, 4750, 4749, 4748,
	4747, 4745, 4743, 4742, 4741, 4740, 4737, 4736, 4733, 4731,
	4726, 4723, 4717, 4716, 4714, 4713, 4711, 4710, 4709, 4706,
	4704, 4703, 4701, 4700, 4696, 4691, 4686, 4685, 4684, 4683,
	4681, 4679, 4673, 4670, 4669, 4668, 4665, 4662, 4661, 4657,
	4652, 4650, 4649, 4647, 4646, 4645, 4642, 4637, 4631, 4626,
	4622, 4619, 4618, 63, 4615, 4613, 4612, 4611, 4609, 4606,
	4605, 4604, 4601, 4600, 4599, 4598, 4597, 4596, 4594, 4593,
	4592, 4588, 4587, 4585, 72, 4582, 297, 4576, 4572, 4565,
	4561, 4558, 4557, 4556, 4554, 4553, 4552, 4550, 4549, 296,
	4548, 150, 177, 4547, 4546, 4064, 4542, 4540, 294, 4538,
	4534, 4532, 4531, 4530, 306, 4528, 4526, 4523, 4521, 4514,
	276, 4508, 4506, 4504, 4503, 4501, 4500, 83, 154, 4499,
	4497, 142, 4496, 4494, 4493, 4492, 4488, 4483, 4482, 271,
	277, 4481, 4480, 4479, 263, 190, 4478, 292, 4476, 4475,
	4473, 4471, 4470, 4469, 4467, 4466, 4465, 4464, 4463, 4462,
	4461, 4460, 4459, 4457, 4456, 4454, 4453, 4452, 4451, 4450,
	4447, 4446, 4445, 4444, 4443, 4442, 4441, 4433, 4432, 4430,
	4428, 4427, 4420, 4419, 4417, 4416, 4414, 4410, 4409, 4408,
	268, 223, 145, 4406, 4405, 291, 286, 4402, 4401, 4399,
	4398, 4397, 3661, 4390, 4387, 4385, 4384, 4383, 4382, 4379,
	4377, 4371, 157, 12, 37, 4367, 4366, 113, 96, 92,
	95, 104, 106, 4363, 128, 4362, 135, 125, 4361, 119,
	111, 29, 22, 273, 259, 10659, 253, 4360, 4359, 4357,
	265, 212, 4354, 257, 4353, 4352, 4348, 4345, 4344, 4342,
	75, 52, 219, 4341, 4331, 152, 189, 199, 201, 195,
	194, 178, 62, 105, 87, 66, 45, 19, 109, 230,
	18, 1, 283, 4330, 282, 10, 148, 11, 35, 4328,
	4326, 4325, 4324, 3690, 116, 4323, 290, 261, 193, 4322,
	4321, 4319, 1218, 4318, 4317, 55, 245, 185, 100, 114,
	20, 139, 4316, 168, 187, 38, 4314, 184, 60, 4312,
	4310, 112, 97, 9179, 9619, 4307, 4306, 126, 79, 155,
	3474, 204, 167, 220, 180, 136, 172, 181, 82, 226,
	218, 198, 44, 4304, 274, 4302, 3705, 107, 197, 163,
	6066, 4301, 4299, 4298, 91, 4297, 93, 4296, 4295, 73,
	23, 3, 2, 153, 39, 47, 4, 4294, 26, 132,
	50, 25, 4293, 28, 4292, 4290, 4288, 4287, 48, 4286,
	46, 176, 4285, 4284, 301, 4283, 94, 59, 31, 4282,
	42, 232, 4281, 251, 141, 4280, 4279, 270, 227, 4278,
	76, 244, 4277, 4276, 4275, 4273, 4272, 4271, 146, 7,
	140, 4270, 4269, 160, 4268, 64, 260, 214, 4266, 69,
	4265, 4264, 200, 57, 143, 298, 210, 249, 138, 238,
	203, 250, 4261, 4259, 4257, 256, 4255, 4254, 234, 179,
	4252, 4251, 258, 304, 99, 53, 89, 254, 90, 211,
	171, 4250, 215, 4248, 4246, 303, 207, 231, 40, 8,
	14, 101, 118, 4245, 5, 252, 174, 242, 137, 4244,
	7112, 2421, 2731, 243, 4243, 166, 131, 86, 158, 173,
	285, 102, 4242, 4240, 2931, 4238, 4237, 4235, 4234, 202,
	4233, 4232, 4228, 159, 183, 235, 4222, 129, 84, 56,
	24, 130, 267, 302, 133, 233, 192, 279, 4219, 4210,
	4203, 208, 4198, 81, 241, 188, 213, 272, 70, 4195,
	186, 4192, 162, 170, 78, 169, 4191, 237, 4190, 4188,
	4186, 4185, 4182, 4181, 4179, 120, 246, 4178, 4177, 4176,
	34, 209, 4175, 280, 311, 248, 121, 58, 4174, 115,
	3624, 4173, 117, 229, 67, 9, 4172, 74, 4169, 2331,
	65, 4168, 0, 13935, 9783, 12722, 13087, 4167, 5645, 4163,
	4161, 4157, 224, 88, 4156, 4155, 4153, 127, 4150, 98,
	4148, 4147, 85, 4146, 36, 15, 17, 32, 27, 537,
	355, 4144, 4140, 61, 144, 164, 4139, 300, 239, 4138,
	4131, 4130, 4129, 103, 4128, 51, 4127, 49, 4126, 4125,
	43, 16, 30, 4122, 4121, 161, 4118, 123, 221, 175,
	4116, 182, 4114, 77, 147, 4112, 4111, 4108, 71, 68,
	278, 222, 225, 110, 4103, 293, 4102, 216, 4101, 4100,
	21, 4099, 4098, 262, 124, 122, 54, 266, 149, 41,
	196, 228, 4097, 4096, 191, 4095, 4094, 4091, 281, 4090,
	3660, 288, 4087, 33, 4082, 4077, 4076, 13, 4075, 4072,
	217, 3414, 4068, 4067, 6, 4066, 206,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 630, 630, 630,
	631, 631, 632, 632, 632, 26, 51, 19, 20, 20,
	20, 20, 633, 633, 633, 633, 39, 27, 52, 32,
	32, 32, 32, 32, 225, 225, 225, 225, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 626, 626, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 634, 634, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 524, 524, 524, 555, 555, 555, 555, 557,
	557, 653, 653, 654, 654, 654, 654, 654, 140, 140,
	421, 421, 421, 61, 61, 61, 61, 61, 621, 621,
	227, 227, 227, 229, 229, 228, 228, 228, 228, 228,
	85, 85, 640, 640, 639, 638, 638, 638, 641, 641,
	641, 226, 226, 226, 136, 136, 136, 136, 136, 136,
	136, 136, 137, 137, 138, 138, 230, 230, 230, 232,
	232, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 236, 18, 18, 18, 119, 119,
	119, 119, 119, 119, 119, 114, 114, 559, 559, 560,
	560, 221, 221, 222, 222, 222, 222, 223, 223, 224,
	224, 224, 76, 76, 233, 233, 235, 235, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 64, 64, 64, 64, 64, 65, 65, 65, 65,
	65, 65, 66, 66, 66, 66, 66, 66, 67, 67,
	74, 74, 74, 74, 74, 74, 74, 74, 202, 202,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 82, 82, 82, 82, 82, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 656, 656, 657,
	657, 658, 658, 659, 659, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 659, 659, 659, 659, 659, 659,
	659, 659, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 91,
	91, 382, 382, 345, 345, 92, 92, 92, 93, 93,
	94, 94, 78, 78, 618, 618, 619, 619, 619, 619,
	515, 515, 79, 627, 627, 627, 629, 629, 628, 628,
	96, 96, 420, 420, 97, 97, 97, 97, 97, 97,
	98, 98, 98, 98, 98, 98, 98, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 106, 106, 106, 106, 106, 107, 107, 107, 104,
	104, 104, 101, 101, 101, 100, 100, 100, 105, 105,
	105, 617, 333, 333, 103, 103, 103, 102, 102, 102,
	398, 398, 108, 108, 108, 108, 346, 109, 109, 109,
	109, 109, 109, 109, 109, 112, 112, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	517, 517, 4, 4, 263, 263, 262, 262, 262, 262,
	5, 5, 5, 266, 266, 265, 264, 110, 110, 110,
	482, 482, 115, 115, 115, 436, 436, 116, 116, 116,
	116, 116, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 623, 623, 391, 391, 296, 296, 296,
	296, 128, 128, 128, 128, 129, 129, 129, 129, 130,
	130, 207, 207, 146, 146, 146, 146, 145, 145, 145,
	145, 145, 145, 145, 145, 68, 68, 68, 69, 69,
	70, 70, 71, 71, 72, 72, 73, 73, 73, 73,
	73, 149, 149, 31, 31, 31, 31, 150, 150, 650,
	650, 152, 148, 148, 148, 148, 148, 147, 147, 151,
	151, 151, 151, 153, 155, 155, 155, 155, 155, 154,
	154, 154, 154, 154, 156, 156, 549, 549, 406, 406,
	547, 547, 569, 569, 548, 548, 352, 352, 352, 352,
	352, 353, 353, 353, 558, 558, 558, 558, 558, 558,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 208, 208, 208, 209,
	209, 214, 214, 215, 215, 215, 216, 216, 216, 213,
	213, 213, 210, 210, 211, 211, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 219, 219, 217, 217,
	218, 218, 661, 661, 660, 660, 220, 220, 220, 220,
	220, 183, 183, 183, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 407, 407, 186, 186, 186,
	170, 170, 158, 158, 158, 158, 158, 158, 158, 163,
	163, 163, 163, 163, 163, 163, 163, 164, 164, 164,
	159, 159, 172, 172, 172, 172, 172, 165, 165, 166,
	166, 166, 167, 167, 167, 167, 194, 194, 169, 169,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 160,
	160, 160, 160, 174, 174, 174, 174, 443, 443, 443,
	200, 200, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 197, 197,
	197, 197, 197, 197, 642, 642, 643, 643, 643, 190,
	190, 190, 190, 190, 190, 496, 496, 184, 184, 184,
	184, 189, 189, 189, 189, 192, 192, 192, 192, 426,
	426, 181, 181, 181, 182, 182, 182, 187, 187, 199,
	188, 383, 383, 185, 185, 191, 191, 191, 191, 193,
	193, 193, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 162, 162, 162, 162, 195, 195, 180, 180, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	662, 662, 176, 176, 176, 175, 175, 175, 175, 178,
	178, 179, 179, 179, 179, 179, 179, 177, 168, 198,
	620, 620, 615, 615, 615, 615, 615, 615, 615, 615,
	615, 616, 616, 616, 616, 622, 622, 120, 120, 120,
	120, 120, 120, 120, 131, 131, 131, 131, 131, 131,
	131, 134, 134, 121, 121, 121, 121, 121, 121, 121,
	124, 124, 122, 122, 122, 122, 123, 123, 86, 86,
	86, 86, 86, 17, 17, 17, 87, 87, 287, 287,
	241, 241, 241, 370, 370, 242, 242, 360, 360, 360,
	360, 237, 237, 238, 238, 239, 240, 240, 88, 88,
	663, 663, 663, 635, 635, 635, 636, 636, 636, 636,
	636, 636, 354, 354, 355, 355, 462, 462, 462, 462,
	462, 358, 358, 358, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 368, 369, 369, 361, 361, 367, 366,
	366, 365, 365, 364, 364, 362, 363, 363, 363, 372,
	372, 371, 374, 374, 373, 461, 578, 578, 580, 580,
	580, 580, 580, 580, 580, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 444, 444, 664, 664, 665, 666, 576, 576,
	576, 577, 572, 572, 573, 573, 573, 573, 573, 356,
	356, 357, 357, 357, 357, 574, 575, 389, 389, 500,
	579, 579, 581, 581, 583, 667, 667, 667, 667, 667,
	667, 668, 668, 668, 460, 460, 459, 459, 458, 458,
	380, 380, 584, 584, 584, 584, 585, 585, 585, 585,
	585, 588, 587, 586, 586, 586, 586, 586, 90, 90,
	90, 423, 423, 422, 422, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	204, 204, 299, 299, 299, 84, 84, 84, 14, 14,
	14, 14, 14, 14, 14, 314, 314, 15, 15, 15,
	637, 637, 637, 89, 89, 89, 89, 89, 89, 378,
	378, 378, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 625, 625,
	624, 624, 300, 300, 670, 670, 95, 95, 95, 95,
	95, 95, 95, 95, 518, 518, 519, 519, 83, 83,
	83, 83, 83, 445, 445, 442, 442, 441, 441, 388,
	388, 498, 498, 498, 499, 304, 304, 305, 305, 260,
	260, 260, 34, 33, 24, 24, 28, 28, 29, 29,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 30,
	30, 54, 54, 54, 54, 55, 55, 55, 55, 58,
	58, 59, 59, 53, 53, 53, 53, 56, 56, 50,
	50, 60, 60, 60, 60, 60, 644, 646, 646, 645,
	645, 649, 649, 649, 649, 649, 649, 647, 647, 335,
	335, 648, 648, 651, 651, 652, 652, 127, 127, 132,
	132, 132, 132, 132, 133, 133, 133, 133, 135, 135,
	135, 135, 144, 144, 203, 203, 203, 203, 203, 203,
	203, 62, 62, 62, 62, 75, 75, 75, 75, 142,
	672, 672, 672, 143, 143, 143, 671, 671, 297, 297,
	455, 455, 456, 456, 673, 673, 457, 457, 457, 457,
	457, 290, 289, 291, 291, 292, 292, 81, 81, 81,
	280, 280, 279, 281, 281, 282, 282, 277, 277, 561,
	561, 284, 284, 284, 285, 285, 273, 273, 274, 274,
	275, 275, 276, 276, 288, 288, 556, 556, 674, 674,
	118, 118, 118, 206, 206, 344, 344, 344, 452, 452,
	452, 381, 381, 311, 311, 454, 454, 454, 454, 454,
	419, 419, 419, 205, 205, 396, 396, 409, 409, 410,
	410, 512, 512, 411, 125, 125, 126, 126, 141, 141,
	245, 245, 243, 243, 243, 243, 243, 243, 243, 243,
	250, 250, 251, 251, 252, 252, 253, 254, 254, 254,
	254, 399, 399, 255, 255, 255, 244, 244, 244, 246,
	246, 246, 246, 246, 246, 246, 249, 249, 249, 249,
	256, 256, 256, 248, 248, 595, 595, 595, 597, 597,
	599, 599, 598, 598, 594, 594, 596, 596, 669, 669,
	425, 425, 425, 377, 379, 375, 375, 376, 376, 386,
	386, 384, 385, 385, 387, 387, 497, 497, 497, 261,
	261, 261, 416, 416, 416, 416, 417, 417, 448, 448,
	446, 446, 446, 446, 447, 447, 449, 449, 449, 450,
	450, 451, 451, 413, 413, 414, 414, 415, 415, 415,
	415, 478, 478, 247, 247, 247, 393, 393, 393, 394,
	394, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 469, 469, 467, 467, 467, 467, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 502, 503, 503,
	395, 395, 504, 453, 453, 613, 613, 613, 614, 614,
	495, 495, 505, 505, 505, 505, 505, 505, 493, 493,
	494, 494, 513, 514, 514, 429, 429, 429, 429, 427,
	427, 430, 430, 430, 430, 430, 428, 428, 506, 506,
	506, 506, 418, 418, 507, 507, 507, 507, 508, 509,
	509, 510, 510, 463, 464, 464, 520, 520, 520, 520,
	522, 392, 392, 392, 392, 392, 571, 570, 570, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	537, 537, 537, 537, 537, 537, 537, 523, 523, 523,
	523, 523, 527, 527, 527, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 528, 528, 533, 533,
	534, 534, 534, 529, 530, 535, 535, 535, 535, 675,
	675, 539, 539, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 525, 525, 525, 532, 532, 532, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 437, 437, 439, 439, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 472, 472, 472, 472,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 589, 589, 589, 589, 589,
	589, 589, 589, 474, 474, 592, 592, 593, 593, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 591, 591, 591, 591, 591, 591, 591, 591,
	591, 591, 591, 591, 591, 591, 591, 591, 591, 591,
	591, 591, 591, 591, 591, 591, 591, 591, 591, 591,
	591, 591, 591, 591, 591, 591, 591, 591, 591, 591,
	600, 600, 601, 601, 603, 603, 604, 604, 605, 606,
	606, 606, 607, 608, 608, 602, 602, 609, 609, 609,
	609, 610, 610, 611, 611, 611, 611, 611, 612, 612,
	612, 612, 612, 484, 484, 485, 485, 491, 491, 491,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 351, 351, 350, 301, 301,
	301, 301, 301, 301, 404, 404, 402, 402, 402, 405,
	405, 403, 403, 401, 401, 400, 400, 481, 481, 479,
	479, 483, 483, 431, 431, 538, 538, 538, 538, 538,
	538, 538, 538, 432, 432, 432, 440, 433, 433, 434,
	434, 434, 434, 434, 475, 476, 435, 435, 435, 477,
	477, 486, 490, 490, 489, 488, 488, 487, 487, 465,
	465, 466, 466, 412, 412, 676, 676, 408, 408, 511,
	511, 511, 511, 348, 348, 397, 397, 347, 347, 339,
	339, 340, 340, 340, 340, 390, 390, 492, 492, 540,
	540, 541, 541, 542, 542, 543, 543, 544, 545, 546,
	480, 480, 322, 321, 308, 309, 320, 319, 318, 307,
	310, 315, 316, 317, 312, 313, 329, 328, 327, 278,
	283, 334, 336, 336, 338, 338, 337, 337, 324, 325,
	326, 516, 306, 341, 341, 342, 342, 342, 343, 343,
	343, 343, 302, 302, 303, 303, 330, 330, 331, 332,
	332, 323, 323, 323, 293, 293, 293, 294, 294, 295,
	295, 554, 554, 551, 551, 551, 552, 552, 552, 553,
	553, 553, 553, 550, 550, 550, 550, 550, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	563, 563, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	565, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 568, 568,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 2, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 6, 3, 8, 5, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 3, 2, 1, 4, 3,
	2, 0, 7, 2, 5, 0, 1, 3, 3, 1,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 4, 3, 1, 2, 3, 2, 2, 2,
	4, 6, 3, 1, 2, 2, 7, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 7, 4, 7, 8, 8, 9, 11, 5,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	13, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 1, 2, 2, 2, 9,
	2, 1, 0, 1, 1, 0, 1, 2, 0, 2,
	2, 0, 2, 2, 2, 2, 1, 2, 3, 3,
	4, 4, 4, 4, 3, 3, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 3, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 1, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 5,
	7, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 5,
	3, 5, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 7,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 5,
	3, 3, 3, 4, 4, 4, 4, 4, 4, 4,
	3, 4, 5, 4, 4, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 12, 15, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 1, 1, 1, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 3,
	6, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 10, 11,
	9, 5, 3, 1, 5, 9, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 6, 1, 3, 1,
	2, 0, 1, 2, 3, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 3, 0, 4, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 16, 19,
	15, 18, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 2, 2, 3, 0, 3,
	0, 3, 0, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 14, 16, 3,
	1, 0, 4, 1, 0, 2, 2, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 7, 10,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 634, -111, -108, -76, -74, -115, -116,
	-97, -117, -110, -139, -144, -125, -126, -127, -140, -146,
	-203, -208, -209, -210, -211, -220, -3, -61, -63, -77,
	-96, -98, -109, -119, -118, -120, -128, -136, -131, -114,
	-68, -141, -145, -157, -204, -205, -206, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 453, 465, 421, 147,
	444, 426, -151, -152, 484, -62, -75, -143, -142, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -84, -80, -91, -85, -78,
	-79, -82, -655, 106, -596, -99, -102, -135, -659, 168,
	232, -121, -122, -123, 386, -129, -130, 446, -132, -133,
	-134, 449, 169, -70, -69, 162, -243, -245, -148, -147,
	-149, -207, -158, -159, -160, -161, -162, -164, -165, -167,
	-194, -168, -169, -170, -171, -172, -173, -177, -197, -174,
	-175, -176, -179, -178, -180, -185, -181, -182, -183, -184,
	-186, -187, -189, -190, -191, -192, -193, -195, -196, 489,
	-188, -198, -166, -199, 554, 52, 505, 85, 152, 457,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-60, -4, -5, -81, -83, -86, -87, -88, -95, -89,
	-90, -595, -100, -101, -104, -106, -107, -103, -105, 445,
	606, -246, -244, 631, 570, -163, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -46, -51, -48, -49,
	-47, -50, -52, -53, -54, -55, -56, -57, -58, -59,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -45, -19, -20, -32, 593, 602, -249, -247,
	-248, -256, 476, 578, 527, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, -346, 2, -324, -330, -331, -332, -323, -293, -565,
	-568, 4, -562, -566, 175, 242, 347, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 41, 43, 44,
	46, 47, 48, 49, 50, 51, 52, 56, 58, 62,
	63, 64, 65, 66, 67, 71, 76, 77, 82, 83,
	84, 85, 86, 87, 88, 89, 95, 92, 93, 94,
	96, 98, 100, 101, 102, 103, 104, 105, 107, 108,
	109, 111, 112, 113, 121, 122, 123, 124, 125, 127,
	133, 128, 134, 137, 132, 136, 138, 140, 141, 142,
	145, 146, 147, 149, 150, 151, 153, 154, 155, 157,
	158, 160, 161, 162, 165, 163, 166, 164, 167, 168,
	169, 170, 173, 181, 182, 183, 188, 190, 191, 192,
	194, 195, 198, 199, 200, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 217, 219, 220, 221, 222,
	223, 224, 225, 231, 232, 234, 235, 236, 237, 238,
	243, 244, 245, 249, 255, 256, 260, 261, 262, 264,
	268, 269, 270, 271, 272, 273, 275, 277, 276, 279,
	282, 283, 286, 287, 288, 289, 290, 291, 295, 296,
	292, 297, 298, 300, 301, 304, 302, 305, 306, 303,
	307, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 308, 309, 324, 322, 326, 327, 328,
	329, 330, 345, 340, 341, 342, 334, 335, 331, 336,
	332, 333, 337, 338, 344, 339, 349, 350, 351, 352,
	355, 229, 248, 357, 358, 361, 363, 380, 366, 367,
	368, 371, 372, 375, 378, 379, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 391, 392, 394, 395, 396,
	398, 399, 400, 402, 404, 405, 407, 408, 409, 411,
	412, 413, 414, 415, 416, 417, 418, 420, 421, 423,
	422, 424, 426, 428, 429, 430, 436, 437, 444, 438,
	440, 441, 442, 443, 445, 446, 447, 448, 449, 451,
	452, 453, 455, 456, 457, 458, 459, 461, 463, 464,
	468, 469, 470, 486, 487, 508, 465, 466, 467, 471,
	472, 473, 474, 475, 479, 477, 478, 480, 481, 482,
	484, 485, 488, 489, 491, 492, 493, 494, 495, 496,
	497, 500, 502, 503, 504, 505, 506, 526, 507, 509,
	513, 514, 515, 516, 510, 511, 525, 518, 519, 520,
	522, 523, 528, 529, 530, 531, 532, 533, 535, 536,
	538, 546, 547, 548, 549, 551, 554, 555, 556, 557,
	544, 559, 560, 563, 564, 568, 565, 569, 566, 567,
	570, 572, 575, 576, 577, 583, 582, 584, 585, 586,
	588, 589, 594, 595, 597, 598, 599, 37, 53, 54,
	57, 59, 61, 72, 73, 74, 78, 129, 130, 159,
	171, 172, 184, 201, 202, 214, 216, 226, 227, 228,
	250, 251, 253, 258, 280, 354, 356, 373, 377, 393,
	397, 401, 403, 419, 460, 498, 512, 517, 539, 540,
	541, 542, 550, 552, 578, 579, 580, 587, 596, -346,
	2, -324, 364, -317, 2, -293, -293, 404, 29, 2,
	29, 392, 478, 530, 532, 2, -623, -391, 2, 29,
	-296, -293, 106, 212, 476, -317, 2, -623, 212, -391,
	26, 2, -293, 2, 378, 23, 28, 69, 80, 102,
	145, 170, 193, 198, -658, 380, 412, 463, 480, 525,
	536, 551, 2, 582, 301, 477, 527, 242, 124, 556,
	471, -637, 468, 469, 378, 410, 455, 215, 571, -297,
	2, 465, -293, 301, 2, 634, 98, 77, 460, 481,
	-154, 2, 291, 547, -155, -156, -153, 539, -549, 471,
	455, 324, -293, 634, 634, 634, 29, -306, 2, -293,
	-306, 2, -212, 2, -306, -660, -219, -218, -217, 22,
	437, 183, 273, 196, 233, 329, 407, 194, 50, -212,
	2, 527, 242, 471, 124, 523, 634, 634, 2, 527,
	383, 582, 477, 124, 416, 242, 556, 198, 145, 28,
	71, 48, 533, 610, 471, -637, 607, 608, 301, 131,
	-621, 2, -615, 4, -566, -562, -340, -339, 527, 533,
	124, -332, -323, 623, -331, 634, 634, 634, 634, 2,
	261, 262, 414, 413, 481, 482, 29, 634, 634, 634,
	634, 468, 2, 170, 23, 28, 69, 97, 102, 131,
	193, 198, 369, -656, 380, 412, 480, 525, 529, 536,
	551, -636, 507, 71, 443, 471, -635, -637, 301, 556,
	145, -441, 124, 291, 210, 564, 532, 530, 562, 137,
	249, 567, 566, 634, 634, -112, 2, 631, 33, 32,
	-111, -115, 147, 484, -236, 527, 254, 2, -293, 634,
	634, 634, 2, 261, 262, 468, 469, 29, 634, 634,
	196, -615, 523, 2, 634, 634, 634, 2, 29, 261,
	262, 468, 469, 254, 2, 71, 473, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 2, -201, 481, 507, 222, 49,
	48, 77, 29, 411, 82, 384, 125, 131, 154, 557,
	213, 242, 243, 269, 97, 98, -443, 46, 262, 71,
	261, 469, -642, 468, -496, 528, 472, 478, 522, 89,
	273, 465, 547, 549, 106, 572, 456, 599, 416, 417,
	520, 430, 292, 163, 197, 4, 124, 324, 455, 483,
	277, 276, 539, 291, 464, 387, 87, 634, -669, 2,
	527, -671, 2, 547, 547, 2, -671, 2, -671, 2,
	-671, 2, -672, 547, 596, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, -244, -246, -245, 634, 634,
	634, 634, 634, 634, 634, -201, 481, 2, 77, 29,
	29, -384, -386, 561, 252, 156, 370, -243, -245, 2,
	-595, -547, 2, -470, -569, -472, 621, 622, 614, 524,
	70, -350, 346, 600, -484, 131, 562, 364, -568, -473,
	-486, 159, 380, 460, -405, 8, 9, 5, 6, 7,
	-302, -474, -480, 553, 174, 353, -343, 635, 10, 631,
	-592, -245, -485, 38, 216, 68, -551, -342, -303, -523,
	253, -341, -323, -589, -590, 4, -562, -563, -552, -526,
	-534, -530, -531, -537, -293, -565, 80, 115, 116, 114,
	119, 118, 294, 293, 120, 117, 483, 571, 69, 37,
	226, 227, 258, 354, 228, 78, -591, 146, -564, 250,
	251, 498, 54, 419, 184, 130, 129, 356, 59, 57,
	579, -535, 126, 539, 540, 541, 542, 201, 202, 61,
	171, 172, 377, 401, 517, 550, 552, 214, 280, 45,
	110, 197, 247, 230, 257, 259, 263, 281, 284, 325,
	343, 348, 374, 376, 454, 490, -675, 580, 512, 72,
	73, 189, -597, 422, -598, -317, -597, 634, 634, 636,
	634, -375, -377, -379, 2, 29, 143, 631, 2, -501,
	2, -502, -506, -245, 274, -505, 631, -503, 629, -324,
	365, -593, 461, -589, -590, -302, -323, -342, 4, -562,
	-564, 633, -380, 631, 124, 471, 527, 81, 242, 97,
	170, 198, -436, 631, -293, 29, 364, 543, 636, -376,
	409, -482, 631, 364, 367, 196, 367, 63, 305, 2,
	2, 2, 2, 2, 226, -293, 527, 123, 2, 272,
	2, 2, 2, 2, 2, 2, 2, -398, 226, 2,
	-324, 582, -398, 226, 2, -398, 226, 2, -442, 2,
	91, -307, 226, 2, -293, -333, 226, 2, -328, -330,
	-338, 226, 2, -336, -293, -557, 226, 2, -555, 4,
	-562, 120, 483, -470, 2, -141, 2, 63, -293, 582,
	2, 486, 2, 631, -154, 2, 74, 547, 45, 481,
	-155, 2, -456, 2, -457, -289, -290, -291, -513, -292,
	260, 408, 418, 603, 135, 346, 599, -650, 196, 613,
	543, -547, -547, -547, -406, 633, -214, 56, -306, -661,
	-660, -661, -545, 29, -540, 8, -541, 621, 622, -545,
	-545, -661, -661, 2, 2, 2, 2, 2, 2, -506,
	226, -324, 2, -321, -550, 4, -562, -566, -563, -567,
	-565, 29, 32, 33, 34, 36, 38, 39, 40, 42,
	60, 68, 69, 75, 79, 81, 91, 97, 106, 114,
	115, 117, 116, 118, 119, 120, 131, 135, 139, 143,
	144, 148, 152, 156, 174, 176, 189, 193, 196, 212,
	215, 218, 233, 246, 252, 254, 274, 278, 285, 293,
	294, 346, 353, 359, 364, 365, 369, 370, 390, 406,
	425, 450, 476, 483, 501, 521, 527, 537, 543, 545,
	553, 561, 562, 571, 573, 581, 590, 591, 592, 593,
	-568, 80, 2, -506, 226, 2, -327, 226, -506, -330,
	2, -307, 2, -470, -630, 535, 166, 438, 2, -347,
	226, -324, -326, -330, -328, 2, 2, 2, 2, -470,
	2, -559, 2, -554, 10, -553, 5, 4, -562, -566,
	-563, -473, 2, -484, 29, -336, 2, -555, 226, 2,
	29, 29, 582, 409, 254, 543, 636, -397, -339, -340,
	-546, 4, 8, -390, -293, 633, -470, 2, -141, -124,
	2, 189, -470, 226, 2, -141, 226, 2, -470, 226,
	2, -141, 226, 2, -293, 2, -638, 2, -559, 226,
	226, -293, 2, 305, 2, 2, 551, 2, 102, 527,
	123, 2, 442, -657, 463, 555, 2, 2, 2, 2,
	2, 2, 2, 527, -312, 2, -293, 189, 510, -336,
	226, -337, 2, 477, -670, 422, -555, 226, 2, 582,
	-328, 226, 2, -328, 242, 256, -307, 226, 2, 532,
	530, 532, 530, 196, 2, 254, 2, 254, 2, -507,
	2, -508, -502, -509, 629, 365, -517, 2, -516, -553,
	578, -112, 631, -112, 631, 481, 631, -559, -324, -324,
	-470, 2, -141, -124, 2, -470, 2, -141, 2, -293,
	2, -138, -559, -137, 631, 196, 572, -293, 2, -470,
	2, -141, -124, 2, -470, 2, -141, 2, -236, 189,
	2, 124, 527, -201, 2, 189, 573, 2, 8, 2,
	233, -559, 472, 417, 181, 2, 486, 2, 487, 77,
	-443, 599, 77, 196, 2, 196, 2, -426, 2, 593,
	409, 196, 2, 2, -620, 2, 364, 196, 2, 196,
	2, 196, 2, 196, 2, 196, 2, -200, 482, 548,
	526, 413, 262, 2, -141, 590, -124, 262, 261, -470,
	590, 2, -643, 189, 469, -470, 2, 546, 271, 164,
	196, -426, 2, 196, 2, 196, 2, 5, 2, 43,
	414, 508, 2, 260, 408, 508, 2, 506, 2, -324,
	527, 582, 477, 124, 29, 2, 468, 2, 2, 92,
	93, 196, 2, 196, 2, 211, 196, 2, 196, 527,
	-407, 633, 599, 2, -418, -506, -455, -456, -455, 543,
	-384, -386, -201, 486, 2, -250, -416, -252, 189, -446,
	-447, -253, 285, 176, 359, -254, -425, 29, 143, -425,
	-425, 63, 632, 632, 11, 12, 79, 43, 621, 622,
	623, 624, 187, 625, 626, 619, 620, 618, 611, 612,
	616, 266, 267, 99, 615, 613, 90, 299, 462, 177,
	178, 179, 180, 439, 240, 35, 241, 14, 15, 16,
	-350, 34, 369, 284, 600, 230, 490, 614, 17, 18,
	19, 257, 259, 348, 53, 233, -301, 380, -349, 524,
	70, -470, -470, -470, -470, -470, -470, -470, -470, 376,
	631, -412, -465, 629, -245, 631, 631, 631, 631, -546,
	-245, -470, -484, 632, -403, 631, -245, -484, -479, 631,
	460, 629, 631, -487, -470, 5, 5, 5, 631, 633,
	-600, 594, 189, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 403,
	-528, 631, -527, 631, -527, -527, 583, -525, 631, 602,
	595, 631, -525, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 583, 533, 636, -597,
	-380, 631, -408, -511, -470, 623, -408, -408, 364, -400,
	-470, 110, -429, 263, 325, 197, 281, 454, 247, -467,
	635, -467, -495, 602, -245, -503, -323, -245, -505, 631,
	-501, -495, -113, -546, -96, -109, -118, -141, -157, -205,
	-206, 623, -324, 631, 196, 631, 633, -550, 196, -390,
	-307, -334, -293, -324, -341, -342, -347, -318, -293, 2,
	2, 142, -400, -615, 556, 471, 29, 477, -557, -296,
	39, -481, -520, -521, -571, 635, -570, -523, -533, -529,
	-532, 393, 397, -552, 57, 579, -535, 253, 4, -562,
	-564, 250, 251, 498, 54, 419, 184, 130, 129, 356,
	59, 539, 540, 541, 542, 201, 202, 61, 580, 512,
	72, 73, -615, 556, 471, 29, 477, 189, -557, 189,
	-557, 2, 2, 159, 2, 2, 2, -293, -271, 636,
	67, 447, 159, -398, 226, -271, 159, -271, 159, -348,
	226, -347, -271, 159, -271, 636, 159, -271, 636, 159,
	633, 636, 159, -557, 2, -442, -549, -400, 39, -456,
	2, 131, 4, 5, -673, 636, 283, -353, 298, 345,
	221, 365, 597, 357, 135, -558, 5, 4, -480, -492,
	131, 291, 253, -540, -542, 9, -543, 621, 622, -548,
	-547, 113, 633, -550, -215, 248, 41, -306, -306, -661,
	-661, 8, 8, -661, -661, -306, -306, -268, 440, 484,
	379, -267, 25, 30, 147, 244, 330, 576, 165, -365,
	245, 445, -362, 383, 159, 502, 565, -630, -633, 467,
	535, 166, 438, 94, 357, 484, 379, 440, 159, -422,
	-424, 39, 122, 330, 378, 64, 236, 303, 304, 505,
	587, 159, 484, 379, 440, 379, -15, -282, 25, 147,
	-284, -279, 484, 30, -633, 103, 440, 606, 445, 389,
	519, 406, -633, -630, 279, -632, 589, 344, -270, 502,
	565, -630, -633, 467, 440, -269, -367, -362, 383, 159,
	635, 25, 147, 440, 484, 379, -653, -654, 30, -263,
	-262, 25, 147, 484, 568, -266, 233, -265, 25, -150,
	-130, -149, 445, 484, -150, 2, 440, 379, -624, -314,
	-594, 233, 593, 159, -314, -314, -506, 226, -647, 189,
	2, -640, -137, 275, 5, 10, -559, -137, -397, 636,
	636, -550, 623, 469, 468, 159, 159, 159, 159, 262,
	189, 346, 346, 593, 2, 2, 2, 2, 2, 198,
	-635, -658, 2, 2, -324, 226, -382, 364, -618, -619,
	527, -324, 189, 346, 45, -327, 226, 2, -330, 582,
	-624, 346, -329, 226, -324, 39, 631, 346, 2, -442,
	2, 242, -594, 346, -507, -344, -324, -502, -344, 484,
	-317, 39, -467, -324, 632, 636, -517, -517, -559, -224,
	593, 196, 631, -236, 593, 593, 262, -514, 636, -513,
	233, -560, -559, -138, -559, 443, 196, 262, -559, -618,
	-307, 2, -324, 2, 527, 264, -559, -224, 233, -559,
	-559, -559, -549, 29, 487, 2, -200, 482, 548, 93,
	487, 2, -324, 527, 124, 242, 83, -647, 189, 2,
	-293, -622, 189, -616, 455, 471, 556, -615, -324, 124,
	-324, 124, -324, 124, -324, -324, 2, 2, 2, 2,
	2, 88, 2, -141, -470, 2, 88, 2, 48, 503,
	-643, 189, 2, 546, 2, 546, 2, -293, -293, -293,
	359, 507, 283, 593, -324, -324, -324, -325, -330, 472,
	528, 557, 469, -470, 2, -662, 2, 196, 189, 2,
	527, 242, 527, 242, 124, 196, 77, 124, 29, 527,
	466, 633, 4, -271, 636, -297, -250, -416, -549, -417,
	-416, -251, -250, -253, 189, 418, 566, 330, 488, 268,
	-447, -446, 29, -470, -451, 183, 329, -470, -449, -472,
	621, 622, -541, -543, -399, 357, -244, -244, -244, -387,
	-497, -470, 406, 242, -522, -520, -520, -322, -550, 539,
	-470, -470, -470, -470, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, 284, 230, 490, 53,
	233, -470, 543, -470, -470, -470, -470, 322, 346, 353,
	553, 174, 563, 143, 357, -676, 521, 42, -477, -245,
	-404, 631, -491, 36, 501, 29, -484, 631, 2, -465,
	-470, -466, -351, -349, -293, 621, 622, 623, 624, 625,
	626, 611, 612, 613, 14, 15, 16, 616, 620, 618,
	619, 187, 99, 615, 299, 462, 90, 177, 178, 179,
	180, 266, 267, 17, 18, 19, 35, 614, -401, -400,
	-400, 632, 581, 29, 143, 623, 2, 632, 636, 39,
	632, -470, -401, -483, -479, -400, -490, -489, 590, -437,
	-438, 598, 308, 127, 224, 306, -439, 475, -544, 8,
	-550, 623, -601, 182, 215, 631, 632, 2, 632, 2,
	632, -470, 2, 632, -470, 2, 632, -470, 2, 632,
	-470, 2, 632, 2, 632, 2, -470, -470, -470, -470,
	-470, -470, -470, -400, 8, -544, -544, 539, 539, -544,
	-544, -544, -536, 393, 394, 395, 396, 286, 287, 288,
	289, 397, 398, 399, 400, 314, 315, 316, 317, 310,
	311, 312, 313, 318, 319, 320, 321, 206, 207, 208,
	209, 202, 203, 204, 205, -536, -431, 2, -538, -400,
	4, 598, 308, 127, 224, 306, 475, 5, -431, 2,
	-432, 2, -470, -400, -433, -471, -472, 621, 622, 614,
	-350, -434, 2, -470, -401, -470, 60, 278, 545, -435,
	-470, 196, -400, -400, 2, -400, 2, -473, 2, -598,
	39, -400, -393, 636, 196, 39, 4, -393, -393, 631,
	632, 636, -430, 219, 302, 297, 256, -430, -501, -429,
	263, -427, 374, -427, -427, -495, -308, 629, 637, -550,
	-495, -494, -493, 39, -317, 371, -495, -495, 633, 632,
	-494, 630, -613, 631, 634, 634, 634, 634, 634, -324,
	631, -400, -550, 633, 509, 2, 632, 257, 257, 257,
	257, 257, 364, 461, 632, 543, -617, -333, -338, 528,
	2, 593, -111, 366, 632, 636, -392, 38, 629, 633,
	-544, 2, 2, -539, 583, 631, 631, -438, 631, 196,
	-617, -338, 528, 2, -623, -391, -391, 543, -293, 2,
	-324, -398, -271, 159, -398, -398, -271, 636, 159, -307,
	-328, -333, -336, -338, -293, -555, -557, -271, -329, -650,
	632, 547, -457, -352, 418, 500, 441, 479, 523, 9,
	9, 636, -550, -216, 470, 330, -306, -306, -306, -306,
	636, -651, 97, 543, 81, 631, 471, -286, 292, 543,
	-461, 226, 81, -572, 97, -310, -573, -293, 75, 562,
	406, 193, 157, -651, 97, 406, -651, 97, 2, 244,
	97, 484, 507, 631, 29, 63, -506, 43, 43, 29,
	-631, -632, 279, 196, 599, 527, 242, 471, 543, 543,
	-506, -424, -520, 122, 303, 304, 63, -545, -545, 63,
	-545, -545, -545, 593, -327, -506, 471, 543, 543, 543,
	428, 518, 428, 518, -279, -155, 518, 543, 543, 29,
	-201, 448, 131, -674, 613, 428, 279, -632, 543, 196,
	636, 43, 43, 29, -631, 196, 543, -347, -308, 577,
	44, 577, 44, 577, 543, 44, 471, 543, 636, 44,
	-262, -618, -618, -223, -222, -293, 5, -390, -265, -559,
	-264, 328, 77, 543, 543, -15, 484, -625, -298, 109,
	336, 296, 337, 101, 333, 100, 332, 107, 334, 108,
	335, 584, 349, 585, 350, 66, 331, 307, 338, 504,
	339, 586, 351, -299, -300, 150, 385, 575, 124, -555,
	-15, -15, 484, 379, 440, 159, -648, 233, 29, -637,
	233, -514, 233, -514, -339, -293, 633, -141, -470, -470,
	-141, -470, -141, 48, 159, 159, 2, 2, -670, 272,
	631, -356, 346, 196, -390, -515, 636, 254, -324, 175,
	-615, 159, -555, -423, -422, 346, -329, 226, 2, 159,
	-380, 346, 153, 631, 416, 2, 159, -309, 226, -294,
	-293, -442, -273, 531, 159, -420, 573, -452, -141, 631,
	131, 39, -452, -409, -410, -512, -411, -310, 631, -317,
	-467, -112, -516, 632, 632, 632, -223, 368, -236, -381,
	-311, -310, 123, 420, 420, -230, 593, -137, -138, 632,
	636, -514, 233, 510, -138, -559, -224, -224, -514, -514,
	-324, 189, -559, -224, -224, -224, 2, 2, 2, 2,
	-426, -324, -307, -347, -324, -335, 233, 29, 633, -557,
	-557, -338, -333, -426, -307, -426, -307, -426, -307, -426,
	-426, -141, -470, 507, 2, 481, 189, 189, 633, -426,
	8, -383, 450, 5, 2, 416, 124, 527, 383, 242,
	-324, -347, -324, -347, -307, 124, -307, 125, -324, 4,
	-506, -417, -251, 365, 268, 488, -449, -450, -472, 460,
	461, -450, 460, 461, 8, 9, 8, 9, -255, 492,
	352, -398, 636, -260, 40, 139, 268, -324, 599, 155,
	-470, -470, 543, -676, 521, -477, 155, -470, 322, 353,
	553, 174, 563, 143, 357, 196, 631, -471, -471, 632,
	-402, -470, -470, 630, 639, 632, 633, 632, -386, 636,
	-384, -470, -400, -400, 632, 633, -400, -390, 630, 630,
	636, 632, -488, -489, 148, -470, 543, 543, 543, 543,
	631, 632, 633, -606, 375, 631, 631, -470, 632, 632,
	632, 632, 39, 636, 636, 636, 632, 636, 636, 636,
	632, 632, 632, 636, 632, 599, 599, 632, 632, 632,
	632, 636, 632, 636, 632, 196, 632, 632, -440, 390,
	632, 11, 12, 621, 622, 623, 624, 187, 625, 626,
	619, 620, 618, 611, 612, 613, 90, 299, 462, 14,
	15, 16, -350, 257, 233, -471, -471, -471, -471, 632,
	-475, -476, 196, 189, 39, -435, -435, -435, 632, 196,
	-400, 632, 632, 631, -599, 301, 346, 632, -464, -463,
	591, -511, -394, 2, -501, -319, -550, -464, -464, -400,
	-470, 263, 263, -428, 573, 364, -430, -501, -494, -546,
	-469, -468, 191, 40, 139, 340, 341, 342, 229, 192,
	-494, -317, -380, -494, -494, -550, -495, -495, -493, 632,
	-614, -546, 632, -395, -504, -593, -386, 633, -550, -233,
	-594, -202, 5, 353, -202, -202, -202, -202, -324, -557,
	543, 543, 233, 26, 391, -520, 629, 630, 8, -550,
	631, -544, -544, -544, -557, 196, 196, 233, 364, 196,
	-555, 2, -271, -398, -271, -271, -347, -348, -271, -271,
	-271, -421, 593, -547, -456, 560, 86, 418, 539, -547,
	121, 470, -267, 440, 484, -310, -310, -324, -240, -239,
	-237, -293, 5, -334, 210, 429, -555, 346, -461, 226,
	-272, 346, 226, -318, -520, 631, -444, 595, 268, 268,
	573, -310, -318, 268, 226, -310, 226, -318, 2, -318,
	-626, 418, 358, -470, -238, -237, 63, -363, 290, 416,
	347, -268, 440, 484, 379, -141, -141, -141, 631, -650,
	573, 142, -324, -347, -324, -334, -555, -329, 484, 379,
	440, 343, -341, -545, -545, -422, 484, 379, 440, -334,
	-555, -327, -555, -278, 226, -293, 428, -278, 226, 428,
	428, 471, -307, 428, 599, 47, -674, 543, 196, -470,
	-470, -269, -141, -141, -141, 631, -308, -270, 440, 5,
	226, -310, 5, -310, 226, 5, -293, -310, -334, -555,
	-654, 25, 147, -310, -224, 636, 613, 613, -266, 613,
	-334, -555, -298, 385, -559, 353, 569, -307, -624, -314,
	471, 543, 543, -506, -644, -645, 212, 453, 471, 456,
	-557, -137, -227, 593, -137, -221, 237, 623, -621, -559,
	-293, 582, -293, -354, -357, -355, -310, -462, -461, -576,
	-577, -572, 284, 242, 562, 256, 175, 97, -241, -242,
	595, 593, 159, -345, -324, 629, -224, -619, -559, 175,
	-315, -293, -515, -336, -337, 159, -380, 346, -555, 39,
	159, 631, 2, 2, -328, 364, 346, -309, 226, -274,
	149, -674, -307, -464, -394, -419, -454, 450, 364, -381,
	578, -317, -419, -396, 636, 196, 613, 633, -381, -510,
	623, -112, -112, -224, 631, 631, -559, 632, 636, 633,
	631, 613, 613, -232, 368, -231, 151, 270, 255, 494,
	495, 496, 497, 141, 493, 128, 327, 238, 533, -514,
	-559, -230, -138, 196, -514, 233, 196, -71, 593, 527,
	-224, 635, 471, 456, -293, -426, -426, -426, 481, 481,
	-293, 189, -390, -320, -550, -307, -324, -321, -347, 189,
	189, -307, 566, -450, 365, 295, -497, -261, 601, -324,
	635, -470, -470, 155, 155, -470, -471, -471, -470, 155,
	196, 631, -470, -481, 34, 34, 632, 636, -466, -470,
	-349, 632, 581, -386, -386, 632, 623, -550, 635, 632,
	-479, 152, -470, 537, 308, 224, 306, -439, 306, -439,
	-439, -544, 5, -550, 623, -607, -313, 631, -293, 591,
	-385, 370, 632, -522, -520, -470, -470, -470, -470, -470,
	-544, -525, -525, -540, -540, -470, -475, -470, -522, -520,
	-471, -471, -471, -471, -471, -471, -471, -471, -471, -471,
	-471, -471, -471, -471, -471, -471, -471, -471, -471, -471,
	143, 346, 357, -471, -476, -475, -470, -470, -520, 632,
	632, 632, -400, -111, 631, 301, -413, 215, -470, -514,
	636, -413, -413, 632, -501, -501, 631, -470, 263, 630,
	636, 638, 613, 613, -380, 633, -493, -494, 630, 632,
	636, 632, 636, -453, 39, 632, -550, -464, -235, -234,
	140, 56, 111, 138, 353, 361, 195, 220, 415, 155,
	190, 149, 257, -646, 593, -557, -557, 471, 367, 5,
	8, 629, 630, 633, -544, 632, 632, 632, -557, -557,
	471, -615, 556, 471, 29, -557, -271, -271, 123, 330,
	-470, -213, 593, 595, 543, 543, 632, 636, 613, 63,
	233, 159, 346, 575, 346, -573, 157, -578, -470, 631,
	242, 631, 631, 2, -257, -258, -259, 147, 484, 25,
	-652, 2, 573, 159, -271, 159, -271, 597, 632, 636,
	-363, 631, 631, 543, 471, -286, 543, 593, -400, -470,
	-225, 131, -549, -633, 635, -633, 635, 471, 543, 543,
	471, 543, 543, 346, -293, 159, -293, -293, 593, 173,
	173, 599, -278, -470, -470, 189, 543, 593, -400, 543,
	-524, 51, 27, 346, -328, -271, 159, 543, 543, 556,
	484, -222, -559, -559, -137, -559, -559, 353, -15, -334,
	-555, -329, 484, 379, 440, -623, -623, 212, -338, -648,
	-514, -229, 368, -228, 151, 452, 141, 270, 238, -514,
	-227, 196, 254, 593, -329, 2, 632, 632, 636, 636,
	-579, -272, -324, -309, 242, 242, -316, -294, 39, 361,
	361, 631, -324, -92, 593, -513, -546, -315, -627, 593,
	45, -327, 39, 159, -624, -141, -329, -518, -519, 5,
	39, -324, 159, 364, 346, -275, 277, -674, -554, -594,
	-386, -419, -408, 347, 95, 632, -464, -410, -394, -470,
	2, 632, -223, -559, -224, -236, -311, 2, -560, -559,
	-559, 636, 631, 613, 613, 613, 613, 613, 613, 613,
	-230, -514, -137, -230, -138, -141, 368, -324, 623, -334,
	-335, -426, 5, -369, -368, 383, 357, -369, 460, 460,
	365, 183, 273, -260, -308, -470, -470, 155, 34, 34,
	-470, -470, -481, 632, -470, -470, -400, 630, 5, -470,
	632, 632, 8, -470, 632, 633, -608, -293, -470, 632,
	63, 632, 632, 636, 636, 632, 632, 632, 632, 632,
	632, 632, -476, 196, 143, 357, 631, 632, 632, -111,
	-478, 218, 63, -501, -478, -478, -428, -390, -501, -468,
	-308, 629, -308, 629, -550, -546, -504, 631, 633, -234,
	613, -559, -559, 2, 2, 2, 5, 5, 415, 346,
	353, 5, -202, 212, -646, -646, 593, -338, 630, 2,
	629, -550, 632, -338, 196, -617, -338, 528, 123, 189,
	223, 223, -310, -310, -239, -547, 527, 460, -278, 406,
	-461, 159, 159, -580, 97, -582, 79, 175, 106, 346,
	353, 562, 406, 75, 131, 364, 425, -664, -665, -666,
	39, 604, 605, 632, -388, -498, -593, 631, -293, -388,
	-390, 346, 515, 131, 364, 346, 131, 364, 588, 123,
	2, 556, 82, -310, -318, -237, -390, -390, -324, -334,
	-555, 167, 632, 636, 613, 2, 623, 623, -334, -555,
	-329, -334, -555, -327, 159, 578, -278, 578, 381, 173,
	543, -141, -470, 167, 632, -308, 5, 5, 159, -305,
	79, -310, 5, -310, -328, 123, 593, 471, 543, 543,
	364, 364, 367, -644, -645, -227, 636, 631, 613, 613,
	613, -227, -560, -137, 2, -380, -370, 244, -310, -577,
	-574, -575, 406, -462, -581, -583, 175, 406, -358, 631,
	-309, -294, 631, -141, 2, -240, 631, -356, 368, 630,
	-629, 368, -628, 121, 141, -555, -423, -141, -329, -378,
	593, -380, 632, 636, 153, -445, 573, -308, -324, 159,
	-276, 276, -674, -554, -273, -448, -446, 144, 631, 364,
	-141, -386, 613, 632, 632, 123, 632, -231, -232, -559,
	-137, -559, -559, -559, -137, -559, -230, -514, -514, -72,
	-73, 242, 97, 388, -321, 527, 242, 631, 631, -260,
	-470, -470, -470, 632, -386, -550, 623, -602, 383, 632,
	-497, -470, -470, -471, 196, 631, -481, 632, -603, 592,
	-470, -414, -415, -470, 458, 112, 216, -603, -603, 632,
	-546, -546, 2, -559, 2, 2, 353, 2, 2, 367,
	2, 543, 629, 2, 196, -557, 196, 196, 233, -141,
	233, 39, 428, -461, -318, -318, -322, -315, 175, 226,
	353, 588, -444, 268, 631, -471, 566, -324, 631, 2,
	225, 225, 31, 63, -667, 135, 246, 632, 636, -499,
	-304, -293, -470, -499, 632, 632, 353, 566, 353, 588,
	-470, 566, -520, 631, -271, -271, 632, 632, -470, 543,
	-549, 104, -547, 2, -633, -278, -390, -390, -307, -470,
	189, -470, 543, 5, -271, -322, -271, -271, -305, 556,
	363, -334, -555, -329, -649, 528, 478, 557, 472, 199,
	459, -649, 189, -228, -229, -559, -137, -137, -227, 39,
	-364, -365, 2, -579, 268, -315, 268, 235, 158, -388,
	631, 631, -390, -663, 593, 632, -354, -241, -93, -94,
	544, -513, 636, 631, 613, -380, 330, 123, 39, 5,
	631, 631, -293, 364, 631, -308, -288, 96, -674, -554,
	-274, -419, 347, -390, 97, -448, -477, -224, 631, -224,
	632, -230, 636, 29, 631, 29, 631, -324, -347, -400,
	-400, 632, -386, 63, 636, 632, 632, -471, -481, 632,
	-604, -605, -313, 636, 631, 631, 485, 630, 630, 2,
	-557, 2, -557, -557, -557, 471, -278, 406, -293, -573,
	-582, -315, 346, -242, 573, 593, -470, -471, -295, 631,
	-470, 631, 631, 39, 131, 246, 136, 231, -460, -668,
	105, 516, 234, -498, -260, 632, -459, 573, 425, -471,
	-305, -388, 631, 631, 631, 613, 196, -141, 631, -524,
	-271, -328, 613, 543, 2, 2, 196, -623, 632, -639,
	423, -141, -241, 631, -242, -359, 84, 98, 132, 225,
	200, 243, 507, 513, 29, -359, 632, -388, -388, 632,
	-360, 364, 123, 330, 632, 39, -94, 9, -628, -629,
	-470, 39, 123, -141, -518, -388, -324, -388, 364, -280,
	-279, 285, -554, -275, 632, -318, -419, -560, -73, -390,
	-390, 632, 632, -609, 416, 461, 217, -400, -387, 632,
	636, 39, -415, 2, 2, 2, -646, -338, 428, -272,
	159, 219, 632, -584, 300, -293, 632, -423, -423, 39,
	136, 231, -366, -362, 631, -261, -499, -242, 219, -324,
	-634, 573, 632, -372, -371, -368, -374, -373, -368, -400,
	-547, 104, 381, -400, -305, -137, -557, -557, 364, -641,
	197, -640, 5, 10, -360, -389, -500, -310, -459, 632,
	632, 85, 123, -370, -141, 632, -141, 2, -378, 632,
	632, -445, 632, -324, -277, -561, 428, 430, -674, -276,
	-464, 144, 632, 632, 632, 632, -610, -611, 53, 559,
	113, -470, -610, -610, -605, -607, 196, 175, -458, 602,
	-585, -588, -587, 609, 491, 197, 382, 632, 515, 587,
	632, 632, -667, -390, -458, -380, -470, -459, 632, 636,
	578, 632, 636, 578, 632, 196, 632, -271, -646, -271,
	-649, -226, 593, 48, -287, -286, 632, 636, -460, -459,
	-366, 405, 137, 147, -364, -663, -459, 631, -460, 631,
	-285, -284, -674, -540, -288, 144, 347, 566, -224, -612,
	157, -611, 402, 188, 460, 402, 188, -612, -612, -557,
	-315, -242, 58, -587, 609, -588, 609, 566, 137, -464,
	632, -584, -242, -371, 233, -373, 196, 381, 196, 468,
	-640, 31, -242, -500, -366, -460, -242, 461, 461, 2,
	-241, -360, -460, -388, -366, -388, -281, -282, -283, -390,
	-280, 347, 566, 484, 113, 215, 538, 330, 34, 613,
	-586, 330, 447, 67, 484, -586, -585, 631, 631, -557,
	368, -242, -366, -464, 2, -360, -366, 632, -242, 632,
	-556, 379, -277, 484, -409, 460, 372, -611, -470, 24,
	353, 131, -667, -400, -400, -271, -223, 631, -464, -242,
	-287, -242, -459, -464, -460, -674, -285, -409, -464, 632,
	632, -223, -464, -464, -460, -366, -555, -281, -464, -361,
	-362, 543, 632, -366, -242, 631, -242, -464, -400, -464,
	632, -361,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 597, 598, 600, 601,
	602, 604, 605, 607, 609, 611, 612, 613, 615, 616,
	618, 619, 620, 621, 622, 624, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 713, 715, 0, 1554, 1556, 1558, 1560, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	372, 374, 376, 378, 0, 410, 412, 413, 415, 417,
	418, 419, 421, -2, 0, 530, 531, 533, 535, -2,
	0, 1137, 1139, 1141, 0, 701, 703, 0, 1144, 1146,
	1148, 0, 0, 725, 726, 0, 1668, -2, 717, 719,
	721, 723, 800, 802, 804, 806, 808, 810, 812, 814,
	816, 818, 819, 821, 823, 825, 827, 829, 830, 832,
	834, 836, 837, 839, 840, 842, 844, 846, 848, 850,
	852, 854, 856, 858, 860, 862, 864, 866, 868, -2,
	871, 872, 873, 875, -2, -2, 0, -2, -2, -2,
	1572, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 472, 474, 476, 478, 480, 483, 485,
	487, 1726, 537, 539, 541, 543, 545, 547, 549, 0,
	0, -2, 1740, 0, 0, 957, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 127, 128, 129, 130,
	131, 132, 133, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 124, 125, 84, 0, 0, 1699, 1701,
	1703, 1705, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 33, 35, 37,
	39, 599, 603, 606, 608, 610, 614, 617, 623, 625,
	627, 582, 583, 586, 2438, 2456, 2457, 2458, 2461, 2462,
	2463, 2464, 2465, 2466, 2950, 3031, 3032, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770,
	2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780,
	2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790,
	2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800,
	2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810,
	2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
	2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880,
	2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890,
	2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900,
	2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910,
	2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920,
	2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 584,
	585, 1331, 0, 666, 664, 2423, 667, 2735, 669, 671,
	524, 525, 526, 527, 528, 529, 0, 694, 680, 1738,
	695, 697, 698, 699, 700, 661, 659, 0, 699, 694,
	2493, 692, 1552, 1553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 451, 1390, 1391, 1392, 1537,
	1538, 2787, 1579, 0, 259, 714, -2, -2, 2915, -2,
	754, 755, -2, -2, 769, 773, 764, 2919, 0, 2790,
	2773, -2, 776, 1555, 1557, 1559, 876, 877, 878, 2442,
	882, 880, 892, 893, 896, 0, 913, -2, 0, 2489,
	2758, -2, -2, 914, 915, -2, -2, -2, -2, 894,
	895, 0, 0, 0, 0, 0, 44, 46, 48, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 269, -2, -2, -2, -2, 0, 0, 2838,
	2548, 2391, 2458, 2394, 2389, 373, 375, 377, 379, 380,
	0, 0, 0, 0, 0, 0, 0, 411, 414, 416,
	420, -2, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1211, 1203, 1204, 1457, 0,
	0, 0, -2, 532, 534, 587, 588, 0, 1727, 1727,
	595, 596, -2, 0, 0, 0, 0, 334, 324, 1138,
	1140, 1142, 1143, 0, 0, 0, 0, 0, 702, 704,
	0, 0, 2832, 301, 1145, 1147, 1149, 1150, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 718, 720, 722,
	724, 801, 803, 805, 807, 809, 811, 813, 815, 817,
	820, 822, 824, 826, 828, 831, 833, 835, 838, 841,
	843, 845, 847, 849, 851, 853, 855, 857, 859, 861,
	863, 865, 867, 869, 870, 921, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 1026, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 1117, 0, 0, 924, 927, 928, 929, 930,
	931, 932, 0, 999, 1024, 1025, 1035, 874, 0, 1371,
	1728, 1581, 1562, 1576, 1581, 1564, 1565, 1566, 1567, 1568,
	1573, 1575, 1569, 1570, 1571, 50, 52, 54, 56, 58,
	60, 62, 64, 66, 68, 70, 72, 473, 475, 477,
	479, 481, 484, 486, 488, -2, 1697, 1698, 538, 540,
	542, 544, 546, 548, 550, 705, 0, 708, 0, 926,
	707, -2, 0, 1732, 1732, 1732, 0, 0, 1698, 1696,
	0, 711, 712, 780, 781, 2005, 0, 0, 0, 0,
	0, 0, 0, 0, 2265, 2093, 0, 782, -2, 2126,
	2128, 2890, 2708, 2915, 2264, 2130, 2131, 2132, 2133, 2134,
	0, 2136, 2137, 2138, 2139, 2140, 2141, 0, 2143, 0,
	2148, 2149, 2150, 0, 2897, 2368, 2452, -2, 0, 0,
	2903, 2448, 0, 2231, 2166, -2, -2, 2475, 2454, 1937,
	1938, 1939, 1940, 1941, -2, -2, 2933, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 0, 2878,
	2898, 2899, 2904, 2906, 2900, 2887, 2191, 2562, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1964, 1973, -2, -2, -2, -2, -2, -2, -2,
	2891, 2892, 2909, 2912, 2918, 2923, 2924, 2896, 2905, 2932,
	2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943,
	2944, 2945, 2946, 2947, 2948, 2949, 1965, -2, -2, -2,
	-2, 0, 1715, 2751, 1718, 1331, 1716, 1700, 1702, 0,
	1704, 0, 0, 0, 1709, 1735, 1733, 0, 1784, 1713,
	1714, 1807, 1807, 1831, 0, 1812, 0, 1831, 1727, 1858,
	0, 1818, 2778, 2167, 2168, 0, 2458, 2453, -2, -2,
	2930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 668, 670, 0, 0, 0, 693,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 454,
	455, 456, 457, 458, 2898, 0, 0, 0, 463, 0,
	465, 466, 467, 468, 469, 470, 471, 229, 2898, 555,
	580, 0, 229, 2898, 558, 229, 2898, 561, 0, 564,
	1455, 229, 2898, 567, 2419, 229, 2898, 570, 572, 2427,
	229, 2898, 576, 2434, 2432, 577, 0, 579, 249, 245,
	246, 247, 248, 1548, 1549, 1550, 1551, 0, 1578, 1456,
	716, 0, 742, 0, 752, 753, 2886, -2, 0, 2799,
	757, 758, -2, 760, 1582, 1586, 1587, 1588, 1589, 1590,
	0, 0, 0, 0, 1595, 0, 0, 0, 0, 749,
	750, 767, 768, 774, 777, 0, 885, 881, 897, 0,
	912, 0, 913, 913, 2408, 2399, 2400, 0, 0, 913,
	913, 0, 0, 916, 917, 918, 919, 920, 83, 0,
	2898, 1858, 85, 0, 2413, 2483, 2484, 2485, 2486, 2487,
	2931, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959,
	2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969,
	2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979,
	2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989,
	2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999,
	3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009,
	3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019,
	3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029,
	3030, 2933, 89, 0, 2898, 94, 0, 2898, 0, -2,
	110, 0, 126, 0, 153, -2, -2, -2, 134, 0,
	2898, 0, 2388, -2, 0, 241, 325, 326, 327, 0,
	643, 0, 652, 337, 338, 2471, 2472, 2479, 2480, 2481,
	2482, 0, 745, 2265, 0, 0, 1175, -2, 0, 1384,
	1386, 1386, 0, -2, 0, 0, 0, 1127, 2385, 2390,
	1128, 1129, 2409, 1130, 2395, 0, 381, 382, 383, 384,
	385, 0, 386, 2898, 388, 389, 0, 391, 392, 2898,
	394, 395, 0, 397, 0, 399, 0, 281, 285, 2898,
	2898, 424, 427, 0, 429, 430, 0, 432, 0, 0,
	0, 436, -2, 452, 0, 449, 439, 440, 442, 443,
	444, 445, 446, 0, 492, 490, 2424, 0, 0, -2,
	2898, 0, 1172, 0, 0, 1435, -2, 0, 1377, 0,
	1442, 2898, 1438, 0, -2, 0, 1725, 2898, 1599, 1207,
	1208, 1209, 1210, 1870, 521, 0, 1632, 0, 1634, 0,
	1654, 1864, 1807, 0, 0, 1869, 0, -2, 640, 2441,
	-2, 590, 0, 591, 0, -2, 0, 351, 0, 0,
	1153, 1155, 1156, 1158, 1159, 1162, 1163, 1164, 1165, 0,
	1167, 1844, 302, 304, 0, 0, 0, 0, 1152, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 0, 0,
	727, 0, 0, 922, 923, 0, 0, 939, 940, 941,
	0, 351, 2791, 2746, 2584, 948, 0, 951, 954, -2,
	0, 0, 0, 0, 961, 0, 966, 967, 968, 0,
	-2, 0, 975, 977, 1136, 979, 0, 0, 981, 0,
	985, 0, 988, 0, 990, 0, 992, -2, -2, -2,
	1000, 1001, -2, 1006, -2, 0, 1010, -2, 0, 1013,
	0, 1016, -2, 0, 1026, 1022, 1023, 0, 0, 0,
	0, 1043, 1044, 0, 1053, 0, 1056, 1057, 1058, 0,
	0, 1063, 1064, 0, 1066, 1067, 1068, 1070, 1071, 1072,
	0, 2867, 2796, 2548, 0, 1080, -2, 1086, 1088, 0,
	-2, 0, 1104, 0, 1108, 0, 0, 1116, 0, 0,
	925, 0, 933, 934, 229, 1862, 1561, -2, 1563, 0,
	-2, 0, 706, 0, 710, 1757, 1683, 1680, 0, 1754,
	1755, 1684, 0, 0, 0, 1691, 0, 1730, 1731, 0,
	0, 0, 1670, 1671, 0, 0, 0, 0, 2270, 2271,
	2272, 2273, 2286, 2274, 2275, 2285, 2283, 2284, 2276, 2277,
	2282, 2296, 2297, 2287, 2288, 2278, 2291, 2289, 2290, 2292,
	2293, 2294, 2295, 0, 0, 2301, 0, 2279, 2280, 2281,
	2309, 0, 0, 2310, 0, 2312, 0, 2302, 2298, 2299,
	2300, 0, 2072, 2074, 2376, 0, 0, 0, 2308, 2303,
	2304, 2010, 2011, 2012, 2013, 2014, 2047, 2051, 2052, 0,
	0, 2127, 2373, 2372, 2129, 0, 0, 2324, 0, 2142,
	-2, 0, 2265, 2319, 0, 0, 2151, 2152, 2153, 0,
	0, 2324, 0, 0, 2367, 2163, 2164, 2002, 0, 0,
	2233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1951,
	1950, 0, 1952, 0, 1953, 1954, 1961, 1974, 0, 0,
	0, 0, 1978, 0, 0, 0, 0, 0, 0, 0,
	2348, -2, 0, 0, 0, 0, 1966, 0, 0, 1717,
	0, 0, 1788, 2377, 2381, 2382, 1788, 1788, 0, 0,
	2325, 1855, 1855, 0, 0, 1850, 1850, 1850, 1848, 1831,
	0, 1831, 1841, 0, 1831, 1831, 0, -2, 1812, 0,
	0, 1841, 0, 1825, 628, 630, 632, 634, 635, 636,
	638, 1859, 1860, 0, 0, 0, 0, 2459, 0, 0,
	0, 0, 2431, 0, 0, 2444, 0, 0, 2418, 406,
	407, 0, 0, 0, 2849, 2790, 0, -2, 673, 696,
	1727, 0, 2327, 1885, 1889, 0, 1891, 1892, 1893, 1894,
	1895, 0, 0, 1886, -2, 1962, 1964, 1985, 2476, 2477,
	2478, 1945, 1946, 1947, 1948, 1949, 1957, 1944, 1944, 1944,
	1955, 1984, 1976, 1984, 1980, 1930, 1931, 1932, 1967, 1968,
	1969, 1970, 0, 2849, 2790, 0, -2, 0, 683, 0,
	0, 1665, 453, 0, 460, 461, 462, 0, 551, 0,
	227, 228, 0, 229, 2898, 556, 0, 559, 0, 229,
	2898, 2383, 565, 0, 568, 0, 0, 574, 0, 0,
	0, 0, 0, 229, 1667, 0, 0, 0, 0, -2,
	762, 770, 771, 772, 0, 1584, 0, 1591, 791, 792,
	793, 1593, 1594, 0, 1596, 765, 794, 795, 796, 797,
	798, 799, 0, 2397, 2398, 2403, 2404, 0, 0, 763,
	784, 766, 0, 778, 888, 883, 884, 898, 899, 0,
	0, 2401, 2402, 0, 0, 904, 905, 135, 1534, 0,
	0, 182, 0, 1534, 1534, 0, 0, 0, 0, 210,
	0, 0, 1241, 0, 0, 0, 0, 153, 167, 178,
	147, 148, 149, 0, 0, 0, 0, 0, 0, 95,
	1353, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	1369, 0, 0, 0, 0, 0, 112, 113, 0, 0,
	118, 119, 0, 0, 166, 0, 0, 0, 0, 0,
	1629, 0, 157, 153, 0, 0, 152, 154, 137, 0,
	0, 153, 168, 180, 0, 216, 218, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 251, 0, 642,
	644, 0, 0, 0, 0, 650, 0, 653, 0, 743,
	747, 748, 0, 0, 744, 746, 0, 0, 1378, 0,
	0, 0, 1724, 0, 0, 0, 0, 2898, 1532, 0,
	1515, 0, 1844, 2637, -2, -2, 302, 1844, 1126, 0,
	0, 2459, 2393, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 428, 431, 433, 434, 435, 0,
	1434, 0, 441, 482, 1300, 2898, 0, 0, 511, 504,
	0, 507, 0, 0, 0, 1352, 2898, 1350, 2428, 0,
	1375, 0, 1331, 2898, 2426, 0, 0, 0, 1443, 2468,
	1452, 1456, 1617, 0, 523, 0, 1635, 1637, 0, 0,
	1865, 0, 1867, 1807, 1727, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 1166, 308, 0, 1843,
	0, 0, 339, 1844, 302, 2764, 0, 1151, 351, 351,
	1844, 729, 1844, 731, 0, 0, 942, 943, 0, 351,
	351, 351, 949, 950, 952, 953, -2, -2, -2, -2,
	955, 956, 1050, 0, 0, 0, 1049, 1530, 0, 971,
	974, 978, 0, 1120, 2773, 2790, 2849, 1134, 1050, 2548,
	1050, 2548, 1050, 2548, 1050, 1050, 994, 1038, 1046, 1005,
	1012, 0, 1007, 1011, 1014, 1017, 0, 1019, 1027, 0,
	-2, 0, 1030, 0, 1032, 0, 1034, 1050, 1051, 1054,
	0, 1062, 1065, 0, 1073, 1074, 1075, 1076, 2439, 1077,
	1078, 1079, -2, 1083, 1084, 0, 1095, 1100, 1101, 1097,
	0, 0, 0, 0, 0, 0, 1111, 1112, 0, 0,
	1119, 0, 935, 1370, 0, 1574, 1757, 1683, 709, 1674,
	1756, 1675, 1682, 1685, 0, 0, 1687, 0, 1689, 0,
	1752, 1753, 1760, 1761, 0, 1771, 1772, 1764, 0, -2,
	0, 0, 1767, 1768, 1693, 0, 1710, 1711, 1712, 1741,
	1744, 1471, 0, 3031, 2006, 1880, 2007, 2008, 2412, 0,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	-2, -2, -2, -2, -2, -2, -2, -2, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, -2,
	-2, -2, 2048, 2049, 2050, -2, 2311, 2313, 0, 2376,
	0, -2, 0, -2, -2, -2, -2, 2069, 0, 2071,
	2076, 2078, 2080, 0, 0, 0, 0, 2375, 2090, 2359,
	2360, 0, 0, 2267, 2268, 2269, 2075, 0, 2094, 2374,
	2371, 0, 0, 2305, 0, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 0, 2323,
	1740, 2155, 0, 0, 0, 0, 2162, 2147, 2321, 0,
	2320, 0, 0, 0, 2331, 0, 2366, 2362, 0, 2410,
	2001, 1988, 1989, 1990, 1991, 1992, 1993, 2003, 0, 2407,
	2445, 2451, 2241, 0, 0, 0, 2192, 2193, 2194, 2195,
	2196, 0, 2198, 2199, 0, 2201, 2202, 0, 2204, 2205,
	0, 2207, 2208, 2209, 2210, 2211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 0, 0, 2213, 0, 2334,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2215,
	0, 2217, 2325, 2345, 0, 0, 2095, 0, 0, 0,
	0, 0, 2220, 2325, 2353, 0, 0, 0, 0, 0,
	2325, 0, 2358, 0, 2227, 0, 2229, 958, 959, 1719,
	0, 0, 1875, 0, 0, 0, 2380, 1875, 1875, 0,
	1783, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 1855,
	0, 1845, 1849, 1846, 1847, 1841, 1804, 0, 0, 2414,
	1841, 1810, 1840, 0, 1331, 1830, 1841, 1841, 0, -2,
	1814, 1831, 0, 0, 629, 631, 633, 637, 639, 0,
	0, 1740, -2, 0, -2, 353, 1330, 0, 0, 0,
	0, 0, 0, 663, 665, 0, 0, 571, 0, 0,
	679, 0, 657, 0, 660, 0, 1876, 1879, 0, 0,
	1890, 1896, 1897, 0, -2, 0, 0, 1986, 0, 0,
	0, 0, 0, 691, 0, 694, 0, 0, 0, 464,
	581, 229, 553, 0, 229, 229, 562, 0, 0, 229,
	573, 229, 2435, 229, 2433, 250, 578, 1666, 262, 0,
	751, 0, 1583, 1592, 0, 788, 0, 790, 0, 2405,
	2406, 0, 779, 0, 886, 0, 900, 901, 902, 903,
	0, 0, 0, 0, 1533, 0, 0, 1478, 0, 0,
	186, 2898, 0, 231, 0, 0, 1293, 2420, 0, 1283,
	0, 0, 2570, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 150, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 1355, 1357, 1364, 1366, 0, 1360, 1361, 0,
	1363, 1365, 1367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 1387, 0, 0, 0, 1388,
	1389, 1605, 1606, 0, 1628, 1629, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 2387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 351, 647, 648, 347, 344, 346, 649, 654, 0,
	655, 0, 0, 0, 0, 1380, 0, 1430, 1428, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 0, 0, 0, 0, -2,
	1382, 1383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 342, 2386, 2396, 0, 1160, 1161, 387,
	390, 393, 396, 268, 0, 0, 426, 437, 0, 0,
	1213, 1185, 0, 0, 491, 351, 0, 0, 506, 0,
	511, 2437, 1170, 1348, 1351, 0, 1331, 2898, 1398, 0,
	0, 0, 0, 0, 0, 1441, 0, 0, 2898, 2415,
	2467, 2468, 1619, 1629, 0, 1875, 0, 1652, 1638, 0,
	0, 0, 1652, 1656, 1657, 1659, 1660, 0, 0, 1866,
	1872, 589, 641, 1727, 1727, 351, 349, 2711, 0, 0,
	1641, 1643, 0, 0, 0, 294, 0, 305, 1844, 303,
	0, 308, 0, 0, 1844, 302, 0, 503, 728, 733,
	937, 0, 351, 945, 946, 947, 996, 1040, 1048, 1099,
	960, 962, 963, 964, 0, 969, 0, 0, 0, 1135,
	1131, 1132, 1133, 980, 1050, 983, 1050, 986, 1050, 989,
	991, 1009, 1015, 1028, 1021, 1029, 0, 0, 0, 1042,
	0, 1060, 0, 1069, 1082, 0, 0, 0, 0, 0,
	0, 0, 1105, 1106, 1107, 1109, 1114, 1113, 1118, 936,
	1863, 1678, 1679, 1681, 0, 1690, 0, 0, 1766, -2,
	-2, 1765, 1769, 1770, -2, -2, -2, -2, 1686, 0,
	1695, 1692, 0, 1751, 1469, 1470, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 2091, 0, -2, 2070, 2073,
	2077, 2079, 2081, 0, 0, 0, 0, 0, 0, 2314,
	0, 2316, 2092, 2369, 2372, 2307, 0, 2263, 0, 0,
	1739, 1740, 1740, 0, 2161, 0, 2322, 0, 2329, 2330,
	0, 2154, 0, 2363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2165, 0, 0, 0, 0, 2197, 2200,
	2203, 2206, 0, 0, 0, 0, 2186, 0, 0, 0,
	2190, 1956, 1942, 0, 1984, 1982, 1983, 1977, 1984, 1981,
	1934, 0, 1933, 0, 2212, 0, 2214, 2216, 0, 0,
	2218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2098, 2099, 2100, 2120, 2219,
	2351, 2352, 0, 0, 0, 0, 0, 0, 2225, 0,
	2357, 2226, 2228, 1727, 0, 1720, 0, 1785, 1774, 1874,
	0, 2378, 1844, 1787, 1789, 2379, 2417, 1774, 1774, 0,
	2326, 0, 0, 1835, 0, 0, 0, 1837, 1808, 0,
	0, 1802, 0, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1809, 1331, 1839, 1811, 1815, 2445, 0, 1841, 0, 1826,
	0, 1828, 1861, 0, 1820, 1823, 0, 0, 2460, 1875,
	0, 400, 408, 409, 401, 402, 403, 404, 0, 1518,
	0, 0, 0, 0, 0, 2328, 0, 1881, 0, 1887,
	0, 0, 0, 0, 681, 0, 0, 0, 0, 0,
	1664, 459, 552, 229, 557, 560, 2384, 229, 566, 569,
	575, 258, 0, 741, -2, 786, 787, 789, 0, 785,
	891, 887, 183, 1534, 0, 0, 0, 1474, 0, 1196,
	0, 1191, 1192, 1476, 1480, 1486, 1489, 0, 188, 2898,
	200, 0, 2898, 0, 1257, 0, 0, 0, 0, 0,
	0, 1536, 0, 0, 2898, 229, 2898, 229, 204, 206,
	209, 0, 215, 211, 0, 1193, 0, 1245, 0, 0,
	1248, 136, 1534, 0, 0, 139, 143, 155, 0, 0,
	0, 165, 0, 0, 0, 1491, 1495, 1503, 0, 0,
	0, 1358, 1359, 1362, 1368, 96, 0, 0, 0, 1499,
	1501, 1507, 111, 114, 2898, 2429, 0, 116, 2898, 0,
	0, 0, 1473, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 141, 145, 156, 0, 1509, 138, 0, 244,
	0, 0, 234, 229, 2898, 0, 236, 0, 237, 238,
	252, 0, 0, 0, 646, 0, 0, 0, 651, 0,
	1173, 1174, 1429, 0, 1373, 1374, 0, 1385, 1379, 0,
	0, 0, 0, 0, 1511, 1512, 0, 0, 0, 1532,
	1527, 1844, 264, 0, 1844, 272, 0, 2392, 0, 286,
	423, 0, 0, 0, 0, 1212, 1311, 1214, 1216, 1217,
	1218, 231, 0, 2468, 1283, 2626, 2468, 0, 0, 1180,
	0, 0, 0, 497, 493, 0, 502, 505, 510, 0,
	509, 2421, 515, -2, 0, 0, 0, 0, -2, 0,
	0, 1445, 1439, 1440, 0, 0, 0, 0, 2898, 1621,
	1629, 0, 1725, 1740, 522, 1630, 1652, 0, 0, 0,
	1640, 1636, 1633, 1875, 0, 0, 0, 0, 0, 1868,
	1871, 592, 593, 328, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 306, 0, 309, 0, 0, 0, 314,
	315, 316, 317, 318, 319, 0, 0, 0, 0, 308,
	340, 296, 1844, 0, 308, 0, 0, 730, 0, 0,
	944, 0, 0, 1530, 973, 982, 984, 987, 1031, 1033,
	1050, 0, 1061, 1089, 2416, 1090, 1235, 0, 1235, 0,
	0, 1110, 1688, 0, 1763, 1694, 1745, 1746, 0, 1471,
	0, 2009, 2054, 0, 0, -2, 0, 0, 2058, 0,
	0, 0, -2, 0, 0, 0, 2315, 2317, 0, 2371,
	2306, 2156, 0, 0, 0, 2160, 2144, 2145, 0, 2266,
	2332, 2361, 2365, 0, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 0, 2411, 2446, 2450, 2239, 2240, 2244, 2425, 0,
	0, 0, 2169, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 1979, 0, 0, 2333, 2344, 2346, 2096, 2097,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	-2, -2, -2, 2114, 2115, 2116, -2, -2, -2, 2121,
	0, 0, 0, 2347, 2349, 2350, 2354, 2355, 0, 2222,
	2223, 2224, 2356, 0, 1727, 1721, 1782, 0, 1873, 1786,
	0, 1782, 1782, 1734, 1833, 0, 0, 1857, 0, 1805,
	0, 1806, 0, 0, 1838, 0, 1813, 1816, 1817, 1827,
	0, 1819, 0, 1822, 0, 2156, -2, 352, 354, 356,
	0, 359, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 1518, 1518, 0, 674, 658,
	0, 0, 1883, 0, 0, 1959, 1963, 1987, 685, 687,
	0, 0, 2849, 2790, 0, 684, 554, 563, 260, 0,
	1842, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 230, 0, 1292, 0, 1255, 0, 0,
	1282, 0, 0, 1298, 190, 191, 192, 0, 0, 0,
	0, 202, 0, 0, 198, 0, 208, 214, 213, 0,
	1242, 0, 0, 0, 0, 1479, 0, 0, 0, 162,
	163, 164, 0, 169, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 0, 0, 1611,
	1612, 0, 1602, 159, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 1468, 254, 0, 0, 0, 0,
	0, 348, 343, 345, 0, 1372, 1432, 1433, 1381, 1492,
	1496, 1504, 0, 0, 0, 0, 0, 699, 1531, 0,
	272, 270, 0, 273, 0, 276, 277, 0, 0, 272,
	266, 0, 0, 0, 1331, 438, 1183, 1299, 0, 0,
	1301, 1219, 1223, 0, 2468, 2468, 0, 2422, 0, 1181,
	0, 0, 1300, 489, 0, 496, 0, 508, 512, 0,
	0, 1352, 0, 0, 1376, 1401, 1331, 0, 1444, 1446,
	0, 1454, 0, 0, 0, 1623, 1629, 0, 1616, 1617,
	1759, 1631, 1650, -2, 0, 0, 1740, 1658, 1655, 1661,
	1662, 0, 0, 0, 331, 0, 1642, 1644, 0, 1154,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 308, 1844, 298, 1844, 335, 0, 938, 965, 1529,
	970, 1041, 1059, 1091, 1234, 0, 0, 1093, 0, 0,
	1762, 1749, 1750, 1747, 1471, 2056, 2060, 0, 0, 0,
	2062, -2, 0, 2084, -2, -2, 2318, 2370, 2135, 1740,
	2157, 2159, 2146, 2364, 2004, 0, 2246, 2243, 0, 2230,
	0, 2181, 2182, 0, 0, 2185, 2187, 2188, 2189, 1943,
	1936, 1935, 2343, 0, 0, 0, 0, 2221, 1722, 0,
	2235, 0, 0, 1790, 2235, 2235, 1834, 0, 1836, 1803,
	1791, 0, 1800, 0, 2446, 1829, 1821, 0, 0, 357,
	0, 361, 362, 363, 364, 365, 366, 0, 0, 0,
	0, 0, 405, 0, 675, 676, 0, 0, 1877, 1882,
	0, 1888, 1958, 0, 0, 0, 0, 0, 261, 0,
	889, 890, 184, 185, 1197, 1195, 1483, 1487, 1484, 0,
	187, 0, 0, 1256, 0, 1259, 0, 0, 0, 0,
	1266, 1283, 0, 0, 0, 0, 0, 0, 1285, 0,
	1284, 0, 0, 1315, 0, 1459, 1466, 0, -2, 0,
	0, 0, 194, 220, 0, 0, 0, 0, 223, 1535,
	196, 0, 0, 229, 229, 1194, 0, 0, 1475, 1477,
	1490, 0, 0, 0, 0, 172, 0, 0, 1493, 1497,
	1505, 1500, 1502, 1508, 0, 0, 117, 0, 0, 1613,
	0, 158, 0, 0, 0, 1510, 242, 243, 0, 229,
	0, 229, 235, 229, 1468, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 1514, 263, 0, 0, 0, 0,
	0, 265, 341, 272, 425, 0, 1244, 0, 1311, 1303,
	1304, 1305, 0, 1215, 1310, 1312, 0, 0, 1220, 0,
	0, 0, 0, 1200, 1182, 0, 1213, 1185, 0, 494,
	513, 0, 516, 0, 519, 1171, 1349, 1393, 1331, 1396,
	0, 0, 1436, 0, 0, 0, 0, 0, 0, 0,
	1625, 1629, 0, 1618, 1619, 1652, 1758, 0, 0, 0,
	1639, 1759, 0, 350, 351, 0, 351, 310, 0, 311,
	312, 313, 320, 321, 322, 323, 297, 300, 308, 732,
	734, 0, 0, 740, 1233, 0, 0, 0, 0, 1748,
	2064, -2, -2, 2085, 0, 2447, 2449, 1740, 0, 2232,
	1742, 0, 0, -2, 0, 0, 0, 1723, 1706, 0,
	1781, 1773, 1775, 1777, 2776, 2543, 2897, 1707, 1708, 1856,
	0, 0, 1824, 358, 367, 368, 0, 370, 371, 1517,
	677, 0, 0, 1884, 0, 682, 0, 0, 0, 879,
	0, 0, 1485, 189, 0, 0, 1260, 1261, 1263, 0,
	1265, 1267, 1268, 1185, 0, 1272, 0, 2470, 0, 1277,
	1280, 1281, 0, 0, 1294, 1316, 0, 1325, 0, 1461,
	1471, 1465, 0, 1463, 1327, 0, 193, 222, 195, 224,
	219, 0, 1468, 0, 197, 207, 0, 0, 140, 0,
	0, 2537, 175, 173, 171, 115, 121, 123, 1472, 161,
	0, 142, 0, 244, 253, 1467, 255, 239, 229, 0,
	0, 1494, 1498, 1506, 0, 1521, 1522, 1523, 1524, 0,
	0, 0, 0, 274, 0, 275, 278, 279, 0, 0,
	1185, 1243, 1184, 1302, 0, 1313, 1185, 0, 0, 0,
	0, 0, 0, 1187, 0, 1186, 0, 0, 495, 498,
	0, 501, 0, 0, 0, 0, 0, 1400, 0, 1447,
	1445, 0, 1453, 0, 0, 0, 1601, 0, 0, 1620,
	1621, 520, 1645, 0, 0, 1652, 1663, 330, 0, 333,
	307, 299, 0, 736, 0, 738, 0, 1092, 1094, 0,
	0, 2158, 2250, 0, 0, 2183, 2184, -2, 0, 2124,
	2234, 2236, 0, 0, 0, 0, 0, 1792, 1801, 369,
	1518, 1878, 689, 686, 688, 0, 1481, 0, 1488, 231,
	1258, 1262, 0, 1269, 0, 0, 0, 1273, 1335, 0,
	0, 1352, 1352, 1286, 0, 0, 1319, 1320, 1240, 0,
	1321, 1322, 1323, 1460, 1751, 1466, 1185, 0, 0, 221,
	226, 0, 0, 0, 0, 0, 0, 160, 0, 233,
	256, 1468, 0, 0, 1525, 1526, 0, 0, 271, 290,
	0, 1394, 1187, 0, 1314, 1221, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1222, 1327, 0, 0, 1291,
	1198, 0, 1201, 0, 1183, 0, 499, 500, 517, 0,
	518, 0, 0, 1401, 0, 0, 1454, 0, 0, 1608,
	1600, 1629, 1622, 1623, 1875, 0, 1653, 0, 735, 0,
	0, 1102, 1103, 0, 0, 0, 0, 2245, 1743, 2125,
	0, 0, 1776, 1778, 1779, 1780, 678, 0, 1482, 201,
	0, 1329, 1271, 1340, 0, 0, 0, 0, 0, 1287,
	1317, 1318, 1315, 1239, 0, 1464, 1462, 1296, 1329, 1331,
	199, 0, 1327, 0, 1249, 0, 0, 1252, 0, 0,
	176, 2537, 174, 0, 229, 656, 1518, 229, 0, 293,
	0, 284, 282, 283, 1179, 0, 1307, 1309, 1325, 1327,
	1240, 0, 1202, 1244, 1200, 514, 1395, 1399, 1397, 1437,
	1327, 0, 1325, 0, 1615, 1629, 1609, 1610, 0, 1625,
	0, 0, 351, 737, 739, 2242, 2262, 2251, -2, 2852,
	2544, 0, 2262, 2262, 2237, 2238, 0, 0, 1185, 0,
	1274, 1336, 1337, 0, 1332, 1333, 1334, 2469, 1275, 1276,
	1278, 1279, 1875, 0, 1326, 1335, 225, 1185, 1246, 0,
	0, 1247, 0, 0, 179, 0, 181, 257, 1516, 1519,
	0, 280, 0, 0, 1176, 1178, 1185, 0, 1240, 1325,
	1185, 0, 0, 0, 1185, 1187, 1325, 0, 1240, 0,
	1604, 1614, 0, 1624, 1601, 0, 1648, 0, 332, 2247,
	0, 0, 2253, 2254, 2255, 2256, 2257, 2248, 2249, 690,
	1264, 1270, 0, 1338, 0, 1339, 0, 0, 0, 1295,
	1324, 1340, 205, 1250, 0, 1253, 0, 177, 0, 0,
	288, 289, 1306, 1308, 1185, 1240, 1875, 1188, 0, 1190,
	1187, 1199, 1240, 0, 1185, 0, 1627, 1603, 1607, 2430,
	1608, 1646, 0, 0, 0, 2259, 2260, 0, 0, 0,
	1341, 0, 1344, 1345, 0, 1342, 1315, 0, 0, 229,
	0, 1875, 1185, 1290, 1189, 1179, 1185, 1327, 1875, 1325,
	1597, 1629, 1615, 0, 1875, 2258, 2261, 2252, 1328, 1343,
	1346, 1347, 1297, 0, 0, 1520, 291, 0, 1288, 1875,
	1177, 1875, 1325, 1450, 1240, 0, 1604, 1875, 1649, 1237,
	0, 0, 1289, 1448, 1240, 1185, 1626, 1598, 1647, 1251,
	1236, 0, 292, 1185, 1875, 0, 1875, 1451, 0, 1449,
	1237, 1254,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 619, 3, 625, 620, 3,
	631, 632, 623, 621, 636, 622, 633, 624, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 639, 3,
	611, 613, 612, 616, 635, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 629, 3, 630, 626, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 637, 618, 638, 614,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 615, 57954, 617,
	57955, 627, 57956, 628, 57957, 634, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1591
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1737
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1791
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1803
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1953
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1986
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2007
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2015
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2062
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2074
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2095
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2177
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2185
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2196
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2206
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2216
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2225
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2236
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2242
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2268
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2273
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2364
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2408
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2418
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2421
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2479
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2674
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2678
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2862
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2870
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3024
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3329
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3338
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3344
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3349
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3354
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = nil
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3462
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3548
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3694
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3716
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3725
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3744
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "CREATE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3759
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplemented(sqllex, "create access method")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplemented(sqllex, "create cast")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "create publication")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "create rule")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplemented(sqllex, "create server")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
		}
	case 448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3790
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3793
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3794
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3797
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3798
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplemented(sqllex, "drop server")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3945
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4001
		{

			sqlVAL.union.val = nil
		}
	case 512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DELETE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4088
		{
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4100
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4114
		{
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "DROP")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4314
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4319
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4380
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4388
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4396
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4404
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4412
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "DELETE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "INSERT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4458
		{
			return helpWith(sqllex, "DELETE")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "INSERT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4602
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4635
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4726
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4742
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "GRANT")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4838
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4851
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "RESET")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "RESET")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "USE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4929
		{
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "USE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5061
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5076
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5077
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			return unimplemented(sqllex, "set from current")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5233
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = tree.Low
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = tree.Normal
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = tree.High
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5397
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "SHOW")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5425
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = true
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = false
		}
	case 891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = false
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5510
		{
			return helpWith(sqllex, "FETCH")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5523
		{
			return helpWith(sqllex, "MOVE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5562
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = int64(1)
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = int64(-1)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = int64(1)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = int64(1)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = int64(-1)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5618
		{
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5622
		{
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5631
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5636
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5641
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5646
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.str = "client_encoding"
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.str = "timezone"
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5708
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5771
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5780
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5810
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5819
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5825
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5850
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5873
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5884
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5902
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5932
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5942
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5955
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5963
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5974
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5996
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6023
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = true
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = true
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = false
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6064
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6065
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6066
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6083
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6110
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6134
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6142
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6178
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6183
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6185
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = true
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = false
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6204
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6209
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6240
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6255
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = true
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = false
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6294
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6298
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6302
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6312
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6323
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6345
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6350
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6355
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6359
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6389
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6399
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6404
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6420
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6433
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6438
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6478
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6486
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6507
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6512
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6517
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6530
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6544
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6553
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6565
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6624
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6634
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6823
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6834
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6842
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6892
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6906
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6907
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6919
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6992
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7011
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7047
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7075
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7111
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7126
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7154
		{

			sqlVAL.union.val = nil
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7160
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.str = ""
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = nil
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7193
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7197
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7233
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7246
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7260
		{
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7261
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7343
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7357
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7361
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.str = ""
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7499
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7606
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7651
		{

			sqlVAL.union.val = true
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = false
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7665
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7668
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7765
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7793
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7803
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7886
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7887
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7888
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7889
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7891
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8058
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8067
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8075
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8086
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8099
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8109
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8111
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8113
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8115
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8118
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8121
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8123
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8136
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8140
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8201
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.str = ""
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = true
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8235
		{

			sqlVAL.union.val = true
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = false
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8250
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8264
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8276
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8288
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8298
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8308
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8312
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = true
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = true
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = nil
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8455
		{
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8483
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8485
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8487
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8489
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8491
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8526
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8543
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8561
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8577
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8593
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8597
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = false
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = true
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = false
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = true
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = false
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8651
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8657
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8663
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8671
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.str = ""
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.str = ""
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8730
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8736
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8961
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8967
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8979
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8985
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8999
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9005
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9064
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = true
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = false
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = tree.Types
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.str = ""
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9163
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9164
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9167
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9168
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9256
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9264
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9275
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9279
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9280
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9281
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9300
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9318
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9323
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9332
		{
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9334
		{
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9351
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9355
		{
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9398
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.str = ""
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9515
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9537
		{

		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9552
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.str = ""
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.str = ""
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.str = ""
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.str = ""
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9607
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9632
		{
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9633
		{
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9680
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9684
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9787
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9857
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9878
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9893
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10037
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10072
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10074
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10135
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10179
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10195
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = true
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = false
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10249
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = nil
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10263
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = true
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = false
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = false
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = true
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10292
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10293
		{
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10296
		{
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10297
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10350
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10355
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10414
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10469
		{
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10470
		{
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10474
		{
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10508
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10509
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10540
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10542
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10557
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10579
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10589
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10626
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10657
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10699
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10709
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10744
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10755
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10785
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10818
		{
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = nil
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = true
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = false
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.str = tree.AstFull
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.str = tree.AstRight
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.str = tree.AstInner
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10937
		{
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10938
		{
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.str = tree.AstHash
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.str = ""
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11007
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11012
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11030
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11042
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11052
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = true
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = false
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = true
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = false
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11101
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11114
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11122
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11123
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11141
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11151
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11164
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11171
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11180
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11220
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11232
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11233
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = types.Geography
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11282
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11290
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11324
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = nil
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = types.Int2
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = types.Int
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = types.Float4
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = types.Float
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11367
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11375
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11383
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = types.Bool
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11397
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = types.Float
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11416
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11422
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11444
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = types.String
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = true
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = false
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = types.Date
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11493
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11501
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11515
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11524
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11532
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11549
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = true
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = false
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = false
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = types.Interval
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11573
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11657
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11672
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = nil
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11702
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11762
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11911
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11919
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12040
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12106
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12128
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12236
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12244
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12340
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12345
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12371
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12395
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12429
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12440
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12441
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12456
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12465
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12531
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12656
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12661
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12670
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12679
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12688
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12697
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12702
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12707
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12712
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12717
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12722
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12731
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12732
		{
			return unimplemented(sqllex, "treat")
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12753
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12764
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12789
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12805
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12813
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12817
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.str = ""
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12894
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12907
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12943
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12975
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13004
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13024
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13040
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13044
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13048
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13051
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13080
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13096
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13104
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13143
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13229
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13252
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13266
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13306
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13310
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13322
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13328
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13332
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13336
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13342
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13354
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13361
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13371
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13377
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13381
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13405
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13411
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13415
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13420
		{
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13421
		{
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13425
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13444
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13448
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13452
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13460
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13470
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13474
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13493
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13501
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13524
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13545
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13551
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13570
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13574
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13586
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13590
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13599
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13610
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13619
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13627
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13644
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13729
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13737
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13741
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13747
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13759
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13786
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13793
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13797
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13801
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13815
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13823
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13836
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13845
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13863
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13876
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13883
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13908
		{
			sqlVAL.str = ""
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13914
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13918
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
