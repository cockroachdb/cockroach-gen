// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:877
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13756

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1601,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	261, 422,
	-2, 0,
	-1, 74,
	243, 254,
	518, 254,
	-2, 0,
	-1, 88,
	232, 1337,
	245, 1337,
	261, 418,
	392, 418,
	403, 1096,
	443, 418,
	456, 1096,
	503, 1096,
	529, 418,
	555, 1096,
	-2, 0,
	-1, 94,
	133, 1601,
	238, 1601,
	540, 1601,
	541, 1601,
	-2, 0,
	-1, 112,
	151, 1572,
	171, 1572,
	184, 1572,
	241, 1572,
	274, 1572,
	343, 1572,
	353, 1572,
	535, 1572,
	-2, 1543,
	-1, 153,
	159, 935,
	260, 935,
	395, 896,
	461, 896,
	502, 896,
	521, 935,
	523, 896,
	-2, 0,
	-1, 157,
	4, 1603,
	21, 1603,
	22, 1603,
	23, 1603,
	24, 1603,
	25, 1603,
	26, 1603,
	27, 1603,
	29, 1603,
	30, 1603,
	36, 1603,
	41, 1603,
	42, 1603,
	44, 1603,
	45, 1603,
	46, 1603,
	47, 1603,
	48, 1603,
	49, 1603,
	50, 1603,
	51, 1603,
	53, 1603,
	54, 1603,
	55, 1603,
	56, 1603,
	58, 1603,
	59, 1603,
	60, 1603,
	61, 1603,
	62, 1603,
	63, 1603,
	64, 1603,
	68, 1603,
	69, 1603,
	70, 1603,
	71, 1603,
	73, 1603,
	74, 1603,
	75, 1603,
	79, 1603,
	80, 1603,
	81, 1603,
	82, 1603,
	83, 1603,
	84, 1603,
	85, 1603,
	88, 1603,
	89, 1603,
	90, 1603,
	91, 1603,
	92, 1603,
	94, 1603,
	96, 1603,
	97, 1603,
	98, 1603,
	99, 1603,
	100, 1603,
	101, 1603,
	103, 1603,
	104, 1603,
	105, 1603,
	107, 1603,
	108, 1603,
	109, 1603,
	117, 1603,
	118, 1603,
	119, 1603,
	120, 1603,
	121, 1603,
	123, 1603,
	124, 1603,
	125, 1603,
	126, 1603,
	128, 1603,
	129, 1603,
	130, 1603,
	132, 1603,
	133, 1603,
	134, 1603,
	136, 1603,
	137, 1603,
	138, 1603,
	141, 1603,
	142, 1603,
	143, 1603,
	145, 1603,
	146, 1603,
	148, 1603,
	149, 1603,
	150, 1603,
	152, 1603,
	153, 1603,
	154, 1603,
	155, 1603,
	156, 1603,
	157, 1603,
	158, 1603,
	159, 1603,
	160, 1603,
	161, 1603,
	162, 1603,
	163, 1603,
	164, 1603,
	165, 1603,
	166, 1603,
	167, 1603,
	168, 1603,
	170, 1603,
	176, 1603,
	177, 1603,
	178, 1603,
	179, 1603,
	183, 1603,
	185, 1603,
	186, 1603,
	187, 1603,
	191, 1603,
	192, 1603,
	193, 1603,
	194, 1603,
	195, 1603,
	196, 1603,
	197, 1603,
	198, 1603,
	199, 1603,
	200, 1603,
	201, 1603,
	202, 1603,
	203, 1603,
	204, 1603,
	206, 1603,
	207, 1603,
	209, 1603,
	210, 1603,
	212, 1603,
	213, 1603,
	214, 1603,
	215, 1603,
	216, 1603,
	217, 1603,
	218, 1603,
	219, 1603,
	220, 1603,
	222, 1603,
	223, 1603,
	225, 1603,
	226, 1603,
	227, 1603,
	228, 1603,
	232, 1603,
	233, 1603,
	234, 1603,
	235, 1603,
	238, 1603,
	239, 1603,
	240, 1603,
	242, 1603,
	244, 1603,
	245, 1603,
	247, 1603,
	249, 1603,
	250, 1603,
	251, 1603,
	253, 1603,
	257, 1603,
	258, 1603,
	259, 1603,
	260, 1603,
	261, 1603,
	262, 1603,
	264, 1603,
	265, 1603,
	266, 1603,
	268, 1603,
	269, 1603,
	271, 1603,
	272, 1603,
	275, 1603,
	276, 1603,
	277, 1603,
	278, 1603,
	279, 1603,
	280, 1603,
	281, 1603,
	284, 1603,
	285, 1603,
	286, 1603,
	287, 1603,
	289, 1603,
	290, 1603,
	291, 1603,
	292, 1603,
	293, 1603,
	294, 1603,
	295, 1603,
	296, 1603,
	297, 1603,
	298, 1603,
	299, 1603,
	300, 1603,
	301, 1603,
	302, 1603,
	303, 1603,
	304, 1603,
	305, 1603,
	306, 1603,
	307, 1603,
	308, 1603,
	309, 1603,
	310, 1603,
	312, 1603,
	314, 1603,
	315, 1603,
	316, 1603,
	317, 1603,
	318, 1603,
	319, 1603,
	320, 1603,
	321, 1603,
	322, 1603,
	323, 1603,
	324, 1603,
	325, 1603,
	326, 1603,
	327, 1603,
	328, 1603,
	330, 1603,
	331, 1603,
	333, 1603,
	335, 1603,
	336, 1603,
	338, 1603,
	339, 1603,
	340, 1603,
	341, 1603,
	342, 1603,
	345, 1603,
	348, 1603,
	349, 1603,
	350, 1603,
	351, 1603,
	354, 1603,
	355, 1603,
	356, 1603,
	358, 1603,
	360, 1603,
	361, 1603,
	362, 1603,
	363, 1603,
	364, 1603,
	365, 1603,
	366, 1603,
	367, 1603,
	368, 1603,
	369, 1603,
	370, 1603,
	371, 1603,
	372, 1603,
	374, 1603,
	375, 1603,
	376, 1603,
	377, 1603,
	378, 1603,
	379, 1603,
	380, 1603,
	381, 1603,
	382, 1603,
	383, 1603,
	384, 1603,
	385, 1603,
	386, 1603,
	387, 1603,
	388, 1603,
	390, 1603,
	391, 1603,
	393, 1603,
	394, 1603,
	395, 1603,
	396, 1603,
	397, 1603,
	398, 1603,
	399, 1603,
	400, 1603,
	401, 1603,
	402, 1603,
	403, 1603,
	404, 1603,
	405, 1603,
	407, 1603,
	409, 1603,
	410, 1603,
	411, 1603,
	417, 1603,
	418, 1603,
	420, 1603,
	421, 1603,
	422, 1603,
	423, 1603,
	424, 1603,
	425, 1603,
	426, 1603,
	427, 1603,
	428, 1603,
	429, 1603,
	431, 1603,
	432, 1603,
	433, 1603,
	435, 1603,
	436, 1603,
	437, 1603,
	438, 1603,
	439, 1603,
	440, 1603,
	441, 1603,
	443, 1603,
	444, 1603,
	445, 1603,
	446, 1603,
	447, 1603,
	448, 1603,
	449, 1603,
	450, 1603,
	451, 1603,
	452, 1603,
	453, 1603,
	454, 1603,
	456, 1603,
	457, 1603,
	458, 1603,
	459, 1603,
	460, 1603,
	461, 1603,
	463, 1603,
	464, 1603,
	465, 1603,
	466, 1603,
	467, 1603,
	468, 1603,
	470, 1603,
	471, 1603,
	472, 1603,
	473, 1603,
	474, 1603,
	475, 1603,
	476, 1603,
	477, 1603,
	479, 1603,
	481, 1603,
	482, 1603,
	483, 1603,
	484, 1603,
	485, 1603,
	486, 1603,
	487, 1603,
	488, 1603,
	489, 1603,
	490, 1603,
	491, 1603,
	492, 1603,
	493, 1603,
	494, 1603,
	495, 1603,
	496, 1603,
	498, 1603,
	499, 1603,
	501, 1603,
	502, 1603,
	504, 1603,
	505, 1603,
	506, 1603,
	507, 1603,
	508, 1603,
	509, 1603,
	510, 1603,
	511, 1603,
	513, 1603,
	514, 1603,
	515, 1603,
	516, 1603,
	517, 1603,
	519, 1603,
	521, 1603,
	522, 1603,
	523, 1603,
	524, 1603,
	525, 1603,
	526, 1603,
	528, 1603,
	529, 1603,
	530, 1603,
	531, 1603,
	533, 1603,
	534, 1603,
	537, 1603,
	538, 1603,
	539, 1603,
	540, 1603,
	541, 1603,
	542, 1603,
	543, 1603,
	545, 1603,
	548, 1603,
	549, 1603,
	550, 1603,
	551, 1603,
	552, 1603,
	553, 1603,
	555, 1603,
	556, 1603,
	557, 1603,
	558, 1603,
	559, 1603,
	560, 1603,
	565, 1603,
	566, 1603,
	567, 1603,
	568, 1603,
	569, 1603,
	570, 1603,
	-2, 0,
	-1, 158,
	1, 1454,
	131, 1454,
	249, 1454,
	332, 1454,
	390, 1454,
	399, 1454,
	574, 1454,
	603, 1454,
	-2, 0,
	-1, 160,
	1, 1454,
	603, 1454,
	-2, 0,
	-1, 161,
	1, 1454,
	603, 1454,
	-2, 0,
	-1, 162,
	1, 1454,
	518, 1454,
	603, 1454,
	-2, 0,
	-1, 191,
	151, 1571,
	171, 1571,
	184, 1571,
	241, 1571,
	274, 1571,
	343, 1571,
	353, 1571,
	535, 1571,
	-2, 1546,
	-1, 241,
	4, 1610,
	5, 1610,
	6, 1610,
	7, 1610,
	8, 1610,
	9, 1610,
	10, 1610,
	21, 1610,
	22, 1610,
	23, 1610,
	24, 1610,
	25, 1610,
	26, 1610,
	27, 1610,
	29, 1610,
	30, 1610,
	36, 1610,
	37, 1610,
	41, 1610,
	42, 1610,
	43, 1610,
	44, 1610,
	45, 1610,
	46, 1610,
	47, 1610,
	48, 1610,
	49, 1610,
	50, 1610,
	51, 1610,
	53, 1610,
	54, 1610,
	55, 1610,
	56, 1610,
	58, 1610,
	59, 1610,
	60, 1610,
	61, 1610,
	62, 1610,
	63, 1610,
	64, 1610,
	65, 1610,
	66, 1610,
	67, 1610,
	68, 1610,
	69, 1610,
	70, 1610,
	71, 1610,
	73, 1610,
	74, 1610,
	75, 1610,
	77, 1610,
	79, 1610,
	80, 1610,
	81, 1610,
	82, 1610,
	83, 1610,
	84, 1610,
	85, 1610,
	88, 1610,
	89, 1610,
	90, 1610,
	91, 1610,
	92, 1610,
	94, 1610,
	96, 1610,
	97, 1610,
	98, 1610,
	99, 1610,
	100, 1610,
	101, 1610,
	103, 1610,
	104, 1610,
	105, 1610,
	106, 1610,
	107, 1610,
	108, 1610,
	109, 1610,
	110, 1610,
	111, 1610,
	112, 1610,
	113, 1610,
	114, 1610,
	115, 1610,
	116, 1610,
	117, 1610,
	118, 1610,
	119, 1610,
	120, 1610,
	121, 1610,
	122, 1610,
	123, 1610,
	124, 1610,
	125, 1610,
	126, 1610,
	127, 1610,
	128, 1610,
	129, 1610,
	130, 1610,
	132, 1610,
	133, 1610,
	134, 1610,
	136, 1610,
	137, 1610,
	138, 1610,
	141, 1610,
	142, 1610,
	143, 1610,
	145, 1610,
	146, 1610,
	148, 1610,
	149, 1610,
	150, 1610,
	152, 1610,
	153, 1610,
	154, 1610,
	155, 1610,
	156, 1610,
	157, 1610,
	158, 1610,
	159, 1610,
	160, 1610,
	161, 1610,
	162, 1610,
	163, 1610,
	164, 1610,
	165, 1610,
	166, 1610,
	167, 1610,
	168, 1610,
	169, 1610,
	170, 1610,
	176, 1610,
	177, 1610,
	178, 1610,
	179, 1610,
	183, 1610,
	185, 1610,
	186, 1610,
	187, 1610,
	190, 1610,
	191, 1610,
	192, 1610,
	193, 1610,
	194, 1610,
	195, 1610,
	196, 1610,
	197, 1610,
	198, 1610,
	199, 1610,
	200, 1610,
	201, 1610,
	202, 1610,
	203, 1610,
	204, 1610,
	206, 1610,
	207, 1610,
	209, 1610,
	210, 1610,
	212, 1610,
	213, 1610,
	214, 1610,
	215, 1610,
	216, 1610,
	217, 1610,
	218, 1610,
	219, 1610,
	220, 1610,
	221, 1610,
	222, 1610,
	223, 1610,
	225, 1610,
	226, 1610,
	227, 1610,
	228, 1610,
	232, 1610,
	233, 1610,
	234, 1610,
	235, 1610,
	237, 1610,
	238, 1610,
	239, 1610,
	240, 1610,
	242, 1610,
	244, 1610,
	245, 1610,
	246, 1610,
	247, 1610,
	248, 1610,
	249, 1610,
	250, 1610,
	251, 1610,
	252, 1610,
	253, 1610,
	257, 1610,
	258, 1610,
	259, 1610,
	260, 1610,
	261, 1610,
	262, 1610,
	264, 1610,
	265, 1610,
	266, 1610,
	268, 1610,
	269, 1610,
	270, 1610,
	271, 1610,
	272, 1610,
	273, 1610,
	275, 1610,
	276, 1610,
	277, 1610,
	278, 1610,
	279, 1610,
	280, 1610,
	281, 1610,
	282, 1610,
	283, 1610,
	284, 1610,
	285, 1610,
	286, 1610,
	287, 1610,
	289, 1610,
	290, 1610,
	291, 1610,
	292, 1610,
	293, 1610,
	294, 1610,
	295, 1610,
	296, 1610,
	297, 1610,
	298, 1610,
	299, 1610,
	300, 1610,
	301, 1610,
	302, 1610,
	303, 1610,
	304, 1610,
	305, 1610,
	306, 1610,
	307, 1610,
	308, 1610,
	309, 1610,
	310, 1610,
	312, 1610,
	313, 1610,
	314, 1610,
	315, 1610,
	316, 1610,
	317, 1610,
	318, 1610,
	319, 1610,
	320, 1610,
	321, 1610,
	322, 1610,
	323, 1610,
	324, 1610,
	325, 1610,
	326, 1610,
	327, 1610,
	328, 1610,
	329, 1610,
	330, 1610,
	331, 1610,
	332, 1610,
	333, 1610,
	334, 1610,
	335, 1610,
	336, 1610,
	337, 1610,
	338, 1610,
	339, 1610,
	340, 1610,
	341, 1610,
	342, 1610,
	345, 1610,
	349, 1610,
	350, 1610,
	351, 1610,
	354, 1610,
	355, 1610,
	356, 1610,
	357, 1610,
	358, 1610,
	359, 1610,
	360, 1610,
	361, 1610,
	362, 1610,
	363, 1610,
	364, 1610,
	365, 1610,
	366, 1610,
	367, 1610,
	368, 1610,
	369, 1610,
	370, 1610,
	371, 1610,
	372, 1610,
	374, 1610,
	375, 1610,
	376, 1610,
	377, 1610,
	378, 1610,
	379, 1610,
	380, 1610,
	381, 1610,
	382, 1610,
	383, 1610,
	384, 1610,
	385, 1610,
	386, 1610,
	387, 1610,
	388, 1610,
	390, 1610,
	391, 1610,
	393, 1610,
	394, 1610,
	395, 1610,
	396, 1610,
	397, 1610,
	398, 1610,
	399, 1610,
	400, 1610,
	401, 1610,
	402, 1610,
	403, 1610,
	404, 1610,
	405, 1610,
	407, 1610,
	409, 1610,
	410, 1610,
	411, 1610,
	417, 1610,
	418, 1610,
	420, 1610,
	421, 1610,
	422, 1610,
	423, 1610,
	424, 1610,
	425, 1610,
	426, 1610,
	427, 1610,
	428, 1610,
	429, 1610,
	431, 1610,
	432, 1610,
	433, 1610,
	434, 1610,
	435, 1610,
	436, 1610,
	437, 1610,
	438, 1610,
	439, 1610,
	440, 1610,
	441, 1610,
	443, 1610,
	444, 1610,
	445, 1610,
	446, 1610,
	447, 1610,
	448, 1610,
	449, 1610,
	450, 1610,
	451, 1610,
	452, 1610,
	453, 1610,
	454, 1610,
	456, 1610,
	457, 1610,
	458, 1610,
	459, 1610,
	460, 1610,
	461, 1610,
	462, 1610,
	463, 1610,
	464, 1610,
	465, 1610,
	466, 1610,
	467, 1610,
	468, 1610,
	469, 1610,
	470, 1610,
	471, 1610,
	472, 1610,
	473, 1610,
	474, 1610,
	475, 1610,
	476, 1610,
	477, 1610,
	479, 1610,
	481, 1610,
	482, 1610,
	483, 1610,
	484, 1610,
	485, 1610,
	486, 1610,
	487, 1610,
	488, 1610,
	489, 1610,
	490, 1610,
	491, 1610,
	492, 1610,
	493, 1610,
	494, 1610,
	495, 1610,
	496, 1610,
	498, 1610,
	499, 1610,
	500, 1610,
	501, 1610,
	502, 1610,
	504, 1610,
	505, 1610,
	506, 1610,
	507, 1610,
	508, 1610,
	509, 1610,
	510, 1610,
	511, 1610,
	513, 1610,
	514, 1610,
	515, 1610,
	516, 1610,
	517, 1610,
	519, 1610,
	521, 1610,
	522, 1610,
	523, 1610,
	524, 1610,
	525, 1610,
	526, 1610,
	527, 1610,
	528, 1610,
	529, 1610,
	530, 1610,
	531, 1610,
	533, 1610,
	534, 1610,
	536, 1610,
	537, 1610,
	538, 1610,
	539, 1610,
	540, 1610,
	541, 1610,
	542, 1610,
	543, 1610,
	544, 1610,
	545, 1610,
	548, 1610,
	549, 1610,
	550, 1610,
	551, 1610,
	552, 1610,
	553, 1610,
	555, 1610,
	556, 1610,
	557, 1610,
	558, 1610,
	559, 1610,
	560, 1610,
	565, 1610,
	566, 1610,
	567, 1610,
	568, 1610,
	569, 1610,
	570, 1610,
	571, 1610,
	584, 1610,
	591, 1610,
	592, 1610,
	593, 1610,
	600, 1610,
	604, 1610,
	-2, 0,
	-1, 753,
	4, 1335,
	21, 1335,
	22, 1335,
	23, 1335,
	24, 1335,
	25, 1335,
	26, 1335,
	27, 1335,
	29, 1335,
	30, 1335,
	36, 1335,
	41, 1335,
	42, 1335,
	44, 1335,
	45, 1335,
	46, 1335,
	47, 1335,
	48, 1335,
	49, 1335,
	50, 1335,
	51, 1335,
	53, 1335,
	54, 1335,
	55, 1335,
	56, 1335,
	58, 1335,
	59, 1335,
	60, 1335,
	61, 1335,
	62, 1335,
	63, 1335,
	64, 1335,
	68, 1335,
	69, 1335,
	70, 1335,
	71, 1335,
	73, 1335,
	74, 1335,
	75, 1335,
	79, 1335,
	80, 1335,
	81, 1335,
	82, 1335,
	83, 1335,
	84, 1335,
	85, 1335,
	88, 1335,
	89, 1335,
	90, 1335,
	91, 1335,
	92, 1335,
	94, 1335,
	96, 1335,
	97, 1335,
	98, 1335,
	99, 1335,
	100, 1335,
	101, 1335,
	103, 1335,
	104, 1335,
	105, 1335,
	107, 1335,
	108, 1335,
	109, 1335,
	117, 1335,
	118, 1335,
	119, 1335,
	120, 1335,
	121, 1335,
	123, 1335,
	124, 1335,
	125, 1335,
	126, 1335,
	128, 1335,
	129, 1335,
	130, 1335,
	132, 1335,
	133, 1335,
	134, 1335,
	136, 1335,
	137, 1335,
	138, 1335,
	141, 1335,
	142, 1335,
	143, 1335,
	145, 1335,
	146, 1335,
	148, 1335,
	149, 1335,
	150, 1335,
	152, 1335,
	153, 1335,
	154, 1335,
	155, 1335,
	156, 1335,
	157, 1335,
	158, 1335,
	159, 1335,
	160, 1335,
	161, 1335,
	162, 1335,
	163, 1335,
	164, 1335,
	165, 1335,
	166, 1335,
	167, 1335,
	168, 1335,
	170, 1335,
	176, 1335,
	177, 1335,
	178, 1335,
	179, 1335,
	183, 1335,
	185, 1335,
	186, 1335,
	187, 1335,
	191, 1335,
	192, 1335,
	193, 1335,
	194, 1335,
	195, 1335,
	196, 1335,
	197, 1335,
	198, 1335,
	199, 1335,
	200, 1335,
	201, 1335,
	202, 1335,
	203, 1335,
	204, 1335,
	206, 1335,
	207, 1335,
	209, 1335,
	210, 1335,
	212, 1335,
	213, 1335,
	214, 1335,
	215, 1335,
	216, 1335,
	217, 1335,
	218, 1335,
	219, 1335,
	220, 1335,
	222, 1335,
	223, 1335,
	225, 1335,
	226, 1335,
	227, 1335,
	228, 1335,
	232, 1335,
	233, 1335,
	234, 1335,
	235, 1335,
	238, 1335,
	239, 1335,
	240, 1335,
	242, 1335,
	244, 1335,
	245, 1335,
	247, 1335,
	249, 1335,
	250, 1335,
	251, 1335,
	253, 1335,
	257, 1335,
	258, 1335,
	259, 1335,
	260, 1335,
	261, 1335,
	262, 1335,
	264, 1335,
	265, 1335,
	266, 1335,
	268, 1335,
	269, 1335,
	271, 1335,
	272, 1335,
	275, 1335,
	276, 1335,
	277, 1335,
	278, 1335,
	279, 1335,
	280, 1335,
	281, 1335,
	284, 1335,
	285, 1335,
	286, 1335,
	287, 1335,
	289, 1335,
	290, 1335,
	291, 1335,
	292, 1335,
	293, 1335,
	294, 1335,
	295, 1335,
	296, 1335,
	297, 1335,
	298, 1335,
	299, 1335,
	300, 1335,
	301, 1335,
	302, 1335,
	303, 1335,
	304, 1335,
	305, 1335,
	306, 1335,
	307, 1335,
	308, 1335,
	309, 1335,
	310, 1335,
	312, 1335,
	314, 1335,
	315, 1335,
	316, 1335,
	317, 1335,
	318, 1335,
	319, 1335,
	320, 1335,
	321, 1335,
	322, 1335,
	323, 1335,
	324, 1335,
	325, 1335,
	326, 1335,
	327, 1335,
	328, 1335,
	330, 1335,
	331, 1335,
	333, 1335,
	335, 1335,
	336, 1335,
	338, 1335,
	339, 1335,
	340, 1335,
	341, 1335,
	342, 1335,
	345, 1335,
	349, 1335,
	350, 1335,
	351, 1335,
	354, 1335,
	355, 1335,
	356, 1335,
	358, 1335,
	360, 1335,
	361, 1335,
	362, 1335,
	363, 1335,
	364, 1335,
	365, 1335,
	366, 1335,
	367, 1335,
	368, 1335,
	369, 1335,
	370, 1335,
	371, 1335,
	372, 1335,
	374, 1335,
	375, 1335,
	376, 1335,
	377, 1335,
	378, 1335,
	379, 1335,
	380, 1335,
	381, 1335,
	382, 1335,
	383, 1335,
	384, 1335,
	385, 1335,
	386, 1335,
	387, 1335,
	388, 1335,
	390, 1335,
	391, 1335,
	393, 1335,
	394, 1335,
	395, 1335,
	396, 1335,
	397, 1335,
	398, 1335,
	399, 1335,
	400, 1335,
	401, 1335,
	402, 1335,
	403, 1335,
	404, 1335,
	405, 1335,
	407, 1335,
	409, 1335,
	410, 1335,
	411, 1335,
	417, 1335,
	418, 1335,
	420, 1335,
	421, 1335,
	422, 1335,
	423, 1335,
	424, 1335,
	425, 1335,
	426, 1335,
	427, 1335,
	428, 1335,
	429, 1335,
	431, 1335,
	432, 1335,
	433, 1335,
	435, 1335,
	436, 1335,
	437, 1335,
	438, 1335,
	439, 1335,
	440, 1335,
	441, 1335,
	443, 1335,
	444, 1335,
	445, 1335,
	446, 1335,
	447, 1335,
	448, 1335,
	449, 1335,
	450, 1335,
	451, 1335,
	452, 1335,
	453, 1335,
	454, 1335,
	456, 1335,
	457, 1335,
	458, 1335,
	459, 1335,
	460, 1335,
	461, 1335,
	463, 1335,
	464, 1335,
	465, 1335,
	466, 1335,
	467, 1335,
	468, 1335,
	470, 1335,
	471, 1335,
	472, 1335,
	473, 1335,
	474, 1335,
	475, 1335,
	476, 1335,
	477, 1335,
	479, 1335,
	481, 1335,
	482, 1335,
	483, 1335,
	484, 1335,
	485, 1335,
	486, 1335,
	487, 1335,
	488, 1335,
	489, 1335,
	490, 1335,
	491, 1335,
	492, 1335,
	493, 1335,
	494, 1335,
	495, 1335,
	496, 1335,
	498, 1335,
	499, 1335,
	501, 1335,
	502, 1335,
	504, 1335,
	505, 1335,
	506, 1335,
	507, 1335,
	508, 1335,
	509, 1335,
	510, 1335,
	511, 1335,
	513, 1335,
	514, 1335,
	515, 1335,
	516, 1335,
	517, 1335,
	519, 1335,
	521, 1335,
	522, 1335,
	523, 1335,
	524, 1335,
	525, 1335,
	526, 1335,
	528, 1335,
	529, 1335,
	530, 1335,
	531, 1335,
	533, 1335,
	534, 1335,
	537, 1335,
	538, 1335,
	539, 1335,
	540, 1335,
	541, 1335,
	542, 1335,
	543, 1335,
	545, 1335,
	548, 1335,
	549, 1335,
	550, 1335,
	551, 1335,
	552, 1335,
	553, 1335,
	555, 1335,
	556, 1335,
	557, 1335,
	558, 1335,
	559, 1335,
	560, 1335,
	565, 1335,
	566, 1335,
	567, 1335,
	568, 1335,
	569, 1335,
	570, 1335,
	-2, 0,
	-1, 772,
	189, 2402,
	518, 2402,
	583, 2402,
	602, 2402,
	-2, 0,
	-1, 773,
	189, 2389,
	518, 2389,
	583, 2389,
	602, 2389,
	-2, 0,
	-1, 775,
	189, 2652,
	518, 2652,
	583, 2652,
	602, 2652,
	-2, 0,
	-1, 778,
	189, 2512,
	518, 2512,
	583, 2512,
	602, 2512,
	-2, 0,
	-1, 779,
	189, 2693,
	518, 2693,
	583, 2693,
	602, 2693,
	-2, 0,
	-1, 787,
	189, 2539,
	518, 2539,
	583, 2539,
	602, 2539,
	-2, 717,
	-1, 822,
	602, 2338,
	605, 2338,
	-2, 1017,
	-1, 823,
	602, 2340,
	605, 2340,
	-2, 1018,
	-1, 824,
	602, 2339,
	605, 2339,
	-2, 1019,
	-1, 825,
	605, 2264,
	-2, 1020,
	-1, 850,
	184, 272,
	-2, 0,
	-1, 874,
	43, 2311,
	-2, 0,
	-1, 875,
	555, 1313,
	-2, 1097,
	-1, 891,
	4, 1744,
	21, 1744,
	22, 1744,
	23, 1744,
	24, 1744,
	25, 1744,
	26, 1744,
	27, 1744,
	29, 1744,
	30, 1744,
	36, 1744,
	41, 1744,
	42, 1744,
	44, 1744,
	45, 1744,
	46, 1744,
	47, 1744,
	48, 1744,
	49, 1744,
	50, 1744,
	51, 1744,
	53, 1744,
	54, 1744,
	55, 1744,
	56, 1744,
	58, 1744,
	59, 1744,
	60, 1744,
	61, 1744,
	62, 1744,
	63, 1744,
	64, 1744,
	68, 1744,
	69, 1744,
	70, 1744,
	71, 1744,
	73, 1744,
	74, 1744,
	75, 1744,
	79, 1744,
	80, 1744,
	81, 1744,
	82, 1744,
	83, 1744,
	84, 1744,
	85, 1744,
	88, 1744,
	89, 1744,
	90, 1744,
	91, 1744,
	92, 1744,
	94, 1744,
	96, 1744,
	97, 1744,
	98, 1744,
	99, 1744,
	100, 1744,
	101, 1744,
	103, 1744,
	104, 1744,
	105, 1744,
	107, 1744,
	108, 1744,
	109, 1744,
	117, 1744,
	118, 1744,
	119, 1744,
	120, 1744,
	121, 1744,
	123, 1744,
	124, 1744,
	125, 1744,
	126, 1744,
	128, 1744,
	129, 1744,
	130, 1744,
	132, 1744,
	133, 1744,
	134, 1744,
	136, 1744,
	137, 1744,
	138, 1744,
	141, 1744,
	142, 1744,
	143, 1744,
	145, 1744,
	146, 1744,
	148, 1744,
	149, 1744,
	150, 1744,
	152, 1744,
	153, 1744,
	154, 1744,
	155, 1744,
	156, 1744,
	157, 1744,
	158, 1744,
	159, 1744,
	160, 1744,
	161, 1744,
	162, 1744,
	163, 1744,
	164, 1744,
	165, 1744,
	166, 1744,
	167, 1744,
	168, 1744,
	170, 1744,
	176, 1744,
	177, 1744,
	178, 1744,
	179, 1744,
	183, 1744,
	185, 1744,
	186, 1744,
	187, 1744,
	191, 1744,
	192, 1744,
	193, 1744,
	194, 1744,
	195, 1744,
	196, 1744,
	197, 1744,
	198, 1744,
	199, 1744,
	200, 1744,
	201, 1744,
	202, 1744,
	203, 1744,
	204, 1744,
	206, 1744,
	207, 1744,
	209, 1744,
	210, 1744,
	212, 1744,
	213, 1744,
	214, 1744,
	215, 1744,
	216, 1744,
	217, 1744,
	218, 1744,
	219, 1744,
	220, 1744,
	222, 1744,
	223, 1744,
	225, 1744,
	226, 1744,
	227, 1744,
	228, 1744,
	232, 1744,
	233, 1744,
	234, 1744,
	235, 1744,
	238, 1744,
	239, 1744,
	240, 1744,
	242, 1744,
	244, 1744,
	245, 1744,
	247, 1744,
	249, 1744,
	250, 1744,
	251, 1744,
	253, 1744,
	257, 1744,
	258, 1744,
	259, 1744,
	260, 1744,
	261, 1744,
	262, 1744,
	264, 1744,
	265, 1744,
	266, 1744,
	268, 1744,
	269, 1744,
	271, 1744,
	272, 1744,
	275, 1744,
	276, 1744,
	277, 1744,
	278, 1744,
	279, 1744,
	280, 1744,
	281, 1744,
	284, 1744,
	285, 1744,
	286, 1744,
	287, 1744,
	289, 1744,
	290, 1744,
	291, 1744,
	292, 1744,
	293, 1744,
	294, 1744,
	295, 1744,
	296, 1744,
	297, 1744,
	298, 1744,
	299, 1744,
	300, 1744,
	301, 1744,
	302, 1744,
	303, 1744,
	304, 1744,
	305, 1744,
	306, 1744,
	307, 1744,
	308, 1744,
	309, 1744,
	310, 1744,
	312, 1744,
	314, 1744,
	315, 1744,
	316, 1744,
	317, 1744,
	318, 1744,
	319, 1744,
	320, 1744,
	321, 1744,
	322, 1744,
	323, 1744,
	324, 1744,
	325, 1744,
	326, 1744,
	327, 1744,
	328, 1744,
	330, 1744,
	331, 1744,
	333, 1744,
	335, 1744,
	336, 1744,
	338, 1744,
	339, 1744,
	340, 1744,
	341, 1744,
	342, 1744,
	345, 1744,
	349, 1744,
	350, 1744,
	351, 1744,
	354, 1744,
	355, 1744,
	356, 1744,
	358, 1744,
	360, 1744,
	361, 1744,
	362, 1744,
	363, 1744,
	364, 1744,
	365, 1744,
	366, 1744,
	367, 1744,
	368, 1744,
	369, 1744,
	370, 1744,
	371, 1744,
	372, 1744,
	374, 1744,
	375, 1744,
	376, 1744,
	377, 1744,
	378, 1744,
	379, 1744,
	380, 1744,
	381, 1744,
	382, 1744,
	383, 1744,
	384, 1744,
	385, 1744,
	386, 1744,
	387, 1744,
	388, 1744,
	390, 1744,
	391, 1744,
	393, 1744,
	394, 1744,
	395, 1744,
	396, 1744,
	397, 1744,
	398, 1744,
	399, 1744,
	400, 1744,
	401, 1744,
	402, 1744,
	403, 1744,
	404, 1744,
	405, 1744,
	407, 1744,
	409, 1744,
	410, 1744,
	411, 1744,
	417, 1744,
	418, 1744,
	420, 1744,
	421, 1744,
	422, 1744,
	423, 1744,
	424, 1744,
	425, 1744,
	426, 1744,
	427, 1744,
	428, 1744,
	429, 1744,
	431, 1744,
	432, 1744,
	433, 1744,
	435, 1744,
	436, 1744,
	437, 1744,
	438, 1744,
	439, 1744,
	440, 1744,
	441, 1744,
	443, 1744,
	444, 1744,
	445, 1744,
	446, 1744,
	447, 1744,
	448, 1744,
	449, 1744,
	450, 1744,
	451, 1744,
	452, 1744,
	453, 1744,
	454, 1744,
	456, 1744,
	457, 1744,
	458, 1744,
	459, 1744,
	460, 1744,
	461, 1744,
	463, 1744,
	464, 1744,
	465, 1744,
	466, 1744,
	467, 1744,
	468, 1744,
	470, 1744,
	471, 1744,
	472, 1744,
	473, 1744,
	474, 1744,
	475, 1744,
	476, 1744,
	477, 1744,
	479, 1744,
	481, 1744,
	482, 1744,
	483, 1744,
	484, 1744,
	485, 1744,
	486, 1744,
	487, 1744,
	488, 1744,
	489, 1744,
	490, 1744,
	491, 1744,
	492, 1744,
	493, 1744,
	494, 1744,
	495, 1744,
	496, 1744,
	498, 1744,
	499, 1744,
	501, 1744,
	502, 1744,
	504, 1744,
	505, 1744,
	506, 1744,
	507, 1744,
	508, 1744,
	509, 1744,
	510, 1744,
	511, 1744,
	513, 1744,
	514, 1744,
	515, 1744,
	516, 1744,
	517, 1744,
	519, 1744,
	521, 1744,
	522, 1744,
	523, 1744,
	524, 1744,
	525, 1744,
	526, 1744,
	528, 1744,
	529, 1744,
	530, 1744,
	531, 1744,
	533, 1744,
	534, 1744,
	537, 1744,
	538, 1744,
	539, 1744,
	540, 1744,
	541, 1744,
	542, 1744,
	543, 1744,
	545, 1744,
	548, 1744,
	549, 1744,
	550, 1744,
	551, 1744,
	552, 1744,
	553, 1744,
	555, 1744,
	556, 1744,
	557, 1744,
	558, 1744,
	559, 1744,
	560, 1744,
	565, 1744,
	566, 1744,
	567, 1744,
	568, 1744,
	569, 1744,
	570, 1744,
	-2, 0,
	-1, 901,
	261, 422,
	-2, 0,
	-1, 978,
	395, 897,
	461, 897,
	502, 897,
	523, 897,
	-2, 0,
	-1, 979,
	395, 896,
	461, 896,
	502, 896,
	523, 896,
	-2, 828,
	-1, 983,
	1, 949,
	599, 949,
	601, 949,
	603, 949,
	-2, 0,
	-1, 985,
	1, 871,
	599, 871,
	601, 871,
	603, 871,
	-2, 0,
	-1, 986,
	1, 875,
	599, 875,
	601, 875,
	603, 875,
	-2, 0,
	-1, 987,
	1, 1016,
	184, 1016,
	599, 1016,
	601, 1016,
	603, 1016,
	-2, 0,
	-1, 995,
	1, 902,
	599, 902,
	601, 902,
	603, 902,
	-2, 0,
	-1, 1002,
	1, 949,
	599, 949,
	601, 949,
	603, 949,
	-2, 0,
	-1, 1003,
	1, 951,
	599, 951,
	601, 951,
	603, 951,
	-2, 0,
	-1, 1004,
	1, 954,
	599, 954,
	601, 954,
	603, 954,
	-2, 0,
	-1, 1010,
	1, 980,
	599, 980,
	601, 980,
	603, 980,
	-2, 0,
	-1, 1011,
	1, 982,
	599, 982,
	601, 982,
	603, 982,
	-2, 0,
	-1, 1016,
	1, 1010,
	599, 1010,
	601, 1010,
	603, 1010,
	-2, 0,
	-1, 1068,
	171, 1614,
	184, 1614,
	274, 1614,
	343, 1614,
	-2, 1550,
	-1, 1083,
	171, 1613,
	184, 1613,
	274, 1613,
	343, 1613,
	-2, 1547,
	-1, 1110,
	602, 2337,
	-2, 725,
	-1, 1139,
	5, 2329,
	600, 2327,
	-2, 2318,
	-1, 1147,
	5, 2350,
	600, 2347,
	-2, 2338,
	-1, 1148,
	5, 2351,
	600, 2348,
	-2, 2339,
	-1, 1156,
	602, 2335,
	-2, 2317,
	-1, 1157,
	600, 2777,
	-2, 2336,
	-1, 1180,
	600, 2776,
	-2, 2352,
	-1, 1181,
	5, 1819,
	-2, 2747,
	-1, 1182,
	5, 1820,
	-2, 2748,
	-1, 1183,
	5, 1821,
	-2, 2762,
	-1, 1184,
	5, 1822,
	-2, 2726,
	-1, 1185,
	5, 1823,
	-2, 2760,
	-1, 1186,
	5, 1831,
	-2, 2739,
	-1, 1187,
	5, 1818,
	-2, 2735,
	-1, 1188,
	5, 1818,
	-2, 2734,
	-1, 1189,
	5, 1818,
	-2, 2753,
	-1, 1190,
	5, 1829,
	-2, 2728,
	-1, 1191,
	5, 1834,
	-2, 2727,
	-1, 1192,
	5, 1836,
	-2, 2772,
	-1, 1195,
	5, 1858,
	-2, 2765,
	-1, 1196,
	5, 1850,
	-2, 2766,
	-1, 1197,
	5, 1858,
	-2, 2767,
	-1, 1198,
	5, 1854,
	-2, 2768,
	-1, 1199,
	5, 1804,
	-2, 2740,
	-1, 1200,
	5, 1805,
	-2, 2741,
	-1, 1201,
	5, 1806,
	-2, 2729,
	-1, 1229,
	5, 1841,
	-2, 2773,
	-1, 1230,
	5, 1842,
	-2, 2763,
	-1, 1231,
	5, 1843,
	556, 1843,
	-2, 2730,
	-1, 1232,
	5, 1844,
	556, 1844,
	-2, 2731,
	-1, 1269,
	600, 2347,
	-2, 2338,
	-1, 1270,
	600, 2348,
	-2, 2339,
	-1, 1366,
	189, 2693,
	518, 2693,
	583, 2693,
	602, 2693,
	-2, 0,
	-1, 1371,
	1, 701,
	603, 701,
	-2, 1462,
	-1, 1501,
	362, 2312,
	420, 2312,
	463, 2312,
	593, 2312,
	-2, 2302,
	-1, 1509,
	90, 2689,
	-2, 132,
	-1, 1510,
	90, 2446,
	-2, 133,
	-1, 1511,
	90, 2614,
	-2, 134,
	-1, 1518,
	604, 2312,
	-2, 2314,
	-1, 1526,
	1, 1310,
	425, 1274,
	463, 1274,
	577, 1274,
	599, 1310,
	601, 1310,
	603, 1310,
	-2, 1599,
	-1, 1532,
	205, 1407,
	224, 1407,
	433, 1407,
	-2, 0,
	-1, 1587,
	403, 1096,
	555, 1096,
	-2, 417,
	-1, 1604,
	43, 2310,
	-2, 1062,
	-1, 1611,
	1, 1310,
	599, 1310,
	601, 1310,
	603, 1310,
	-2, 1599,
	-1, 1619,
	4, 1335,
	21, 1335,
	22, 1335,
	23, 1335,
	24, 1335,
	25, 1335,
	26, 1335,
	27, 1335,
	29, 1335,
	30, 1335,
	36, 1335,
	41, 1335,
	42, 1335,
	44, 1335,
	45, 1335,
	46, 1335,
	47, 1335,
	48, 1335,
	49, 1335,
	50, 1335,
	51, 1335,
	53, 1335,
	54, 1335,
	55, 1335,
	56, 1335,
	58, 1335,
	59, 1335,
	60, 1335,
	61, 1335,
	62, 1335,
	63, 1335,
	64, 1335,
	68, 1335,
	69, 1335,
	70, 1335,
	71, 1335,
	73, 1335,
	74, 1335,
	75, 1335,
	79, 1335,
	80, 1335,
	81, 1335,
	82, 1335,
	83, 1335,
	84, 1335,
	85, 1335,
	88, 1335,
	89, 1335,
	90, 1335,
	91, 1335,
	92, 1335,
	94, 1335,
	96, 1335,
	97, 1335,
	98, 1335,
	99, 1335,
	100, 1335,
	101, 1335,
	103, 1335,
	104, 1335,
	105, 1335,
	107, 1335,
	108, 1335,
	109, 1335,
	117, 1335,
	118, 1335,
	119, 1335,
	120, 1335,
	121, 1335,
	123, 1335,
	124, 1335,
	125, 1335,
	126, 1335,
	128, 1335,
	129, 1335,
	130, 1335,
	132, 1335,
	133, 1335,
	134, 1335,
	136, 1335,
	137, 1335,
	138, 1335,
	141, 1335,
	142, 1335,
	143, 1335,
	145, 1335,
	146, 1335,
	148, 1335,
	149, 1335,
	150, 1335,
	152, 1335,
	153, 1335,
	154, 1335,
	155, 1335,
	156, 1335,
	157, 1335,
	158, 1335,
	159, 1335,
	160, 1335,
	161, 1335,
	162, 1335,
	163, 1335,
	164, 1335,
	165, 1335,
	166, 1335,
	167, 1335,
	168, 1335,
	176, 1335,
	177, 1335,
	178, 1335,
	179, 1335,
	183, 1335,
	185, 1335,
	186, 1335,
	187, 1335,
	191, 1335,
	192, 1335,
	193, 1335,
	194, 1335,
	195, 1335,
	196, 1335,
	197, 1335,
	198, 1335,
	199, 1335,
	200, 1335,
	201, 1335,
	202, 1335,
	203, 1335,
	204, 1335,
	206, 1335,
	207, 1335,
	209, 1335,
	210, 1335,
	212, 1335,
	213, 1335,
	214, 1335,
	215, 1335,
	216, 1335,
	217, 1335,
	218, 1335,
	219, 1335,
	220, 1335,
	222, 1335,
	223, 1335,
	225, 1335,
	226, 1335,
	227, 1335,
	228, 1335,
	233, 1335,
	234, 1335,
	235, 1335,
	238, 1335,
	239, 1335,
	240, 1335,
	242, 1335,
	244, 1335,
	245, 1335,
	247, 1335,
	249, 1335,
	250, 1335,
	251, 1335,
	253, 1335,
	257, 1335,
	258, 1335,
	259, 1335,
	260, 1335,
	261, 1335,
	262, 1335,
	264, 1335,
	265, 1335,
	266, 1335,
	268, 1335,
	269, 1335,
	271, 1335,
	272, 1335,
	275, 1335,
	276, 1335,
	277, 1335,
	278, 1335,
	279, 1335,
	280, 1335,
	281, 1335,
	284, 1335,
	285, 1335,
	286, 1335,
	287, 1335,
	289, 1335,
	290, 1335,
	291, 1335,
	292, 1335,
	293, 1335,
	294, 1335,
	295, 1335,
	296, 1335,
	297, 1335,
	298, 1335,
	299, 1335,
	300, 1335,
	301, 1335,
	302, 1335,
	303, 1335,
	304, 1335,
	305, 1335,
	306, 1335,
	307, 1335,
	308, 1335,
	309, 1335,
	310, 1335,
	312, 1335,
	314, 1335,
	315, 1335,
	316, 1335,
	317, 1335,
	318, 1335,
	319, 1335,
	320, 1335,
	321, 1335,
	322, 1335,
	323, 1335,
	324, 1335,
	325, 1335,
	326, 1335,
	327, 1335,
	328, 1335,
	330, 1335,
	331, 1335,
	335, 1335,
	336, 1335,
	338, 1335,
	339, 1335,
	340, 1335,
	341, 1335,
	342, 1335,
	345, 1335,
	347, 1335,
	349, 1335,
	350, 1335,
	351, 1335,
	354, 1335,
	355, 1335,
	356, 1335,
	358, 1335,
	360, 1335,
	361, 1335,
	362, 1335,
	363, 1335,
	364, 1335,
	365, 1335,
	366, 1335,
	367, 1335,
	368, 1335,
	369, 1335,
	370, 1335,
	371, 1335,
	372, 1335,
	374, 1335,
	375, 1335,
	376, 1335,
	377, 1335,
	378, 1335,
	379, 1335,
	380, 1335,
	381, 1335,
	382, 1335,
	383, 1335,
	384, 1335,
	385, 1335,
	386, 1335,
	387, 1335,
	388, 1335,
	390, 1335,
	391, 1335,
	393, 1335,
	394, 1335,
	395, 1335,
	396, 1335,
	397, 1335,
	398, 1335,
	399, 1335,
	400, 1335,
	401, 1335,
	402, 1335,
	403, 1335,
	404, 1335,
	405, 1335,
	407, 1335,
	409, 1335,
	410, 1335,
	411, 1335,
	417, 1335,
	418, 1335,
	420, 1335,
	421, 1335,
	422, 1335,
	423, 1335,
	424, 1335,
	425, 1335,
	426, 1335,
	427, 1335,
	428, 1335,
	429, 1335,
	431, 1335,
	432, 1335,
	433, 1335,
	435, 1335,
	436, 1335,
	437, 1335,
	438, 1335,
	439, 1335,
	440, 1335,
	441, 1335,
	443, 1335,
	444, 1335,
	445, 1335,
	446, 1335,
	447, 1335,
	448, 1335,
	449, 1335,
	450, 1335,
	451, 1335,
	452, 1335,
	453, 1335,
	454, 1335,
	456, 1335,
	457, 1335,
	458, 1335,
	459, 1335,
	460, 1335,
	461, 1335,
	463, 1335,
	464, 1335,
	465, 1335,
	466, 1335,
	467, 1335,
	468, 1335,
	470, 1335,
	471, 1335,
	472, 1335,
	473, 1335,
	474, 1335,
	475, 1335,
	476, 1335,
	477, 1335,
	479, 1335,
	481, 1335,
	482, 1335,
	483, 1335,
	484, 1335,
	485, 1335,
	486, 1335,
	487, 1335,
	488, 1335,
	489, 1335,
	490, 1335,
	491, 1335,
	492, 1335,
	493, 1335,
	494, 1335,
	495, 1335,
	496, 1335,
	498, 1335,
	499, 1335,
	501, 1335,
	502, 1335,
	504, 1335,
	505, 1335,
	506, 1335,
	507, 1335,
	508, 1335,
	509, 1335,
	510, 1335,
	511, 1335,
	513, 1335,
	514, 1335,
	515, 1335,
	516, 1335,
	517, 1335,
	519, 1335,
	521, 1335,
	522, 1335,
	523, 1335,
	524, 1335,
	525, 1335,
	526, 1335,
	528, 1335,
	529, 1335,
	530, 1335,
	531, 1335,
	533, 1335,
	534, 1335,
	537, 1335,
	538, 1335,
	539, 1335,
	540, 1335,
	541, 1335,
	542, 1335,
	543, 1335,
	545, 1335,
	548, 1335,
	549, 1335,
	550, 1335,
	551, 1335,
	552, 1335,
	553, 1335,
	555, 1335,
	556, 1335,
	557, 1335,
	558, 1335,
	559, 1335,
	560, 1335,
	565, 1335,
	566, 1335,
	567, 1335,
	568, 1335,
	569, 1335,
	570, 1335,
	-2, 0,
	-1, 1642,
	1, 562,
	599, 562,
	601, 562,
	603, 562,
	-2, 1570,
	-1, 1645,
	4, 2771,
	11, 2771,
	12, 2771,
	14, 2771,
	15, 2771,
	16, 2771,
	17, 2771,
	18, 2771,
	19, 2771,
	21, 2771,
	22, 2771,
	23, 2771,
	24, 2771,
	25, 2771,
	26, 2771,
	27, 2771,
	29, 2771,
	30, 2771,
	33, 2771,
	34, 2771,
	36, 2771,
	38, 2771,
	41, 2771,
	42, 2771,
	44, 2771,
	45, 2771,
	46, 2771,
	47, 2771,
	48, 2771,
	49, 2771,
	50, 2771,
	51, 2771,
	53, 2771,
	54, 2771,
	55, 2771,
	56, 2771,
	58, 2771,
	59, 2771,
	60, 2771,
	61, 2771,
	62, 2771,
	63, 2771,
	64, 2771,
	67, 2771,
	68, 2771,
	69, 2771,
	70, 2771,
	71, 2771,
	73, 2771,
	74, 2771,
	75, 2771,
	76, 2771,
	79, 2771,
	80, 2771,
	81, 2771,
	82, 2771,
	83, 2771,
	84, 2771,
	85, 2771,
	86, 2771,
	88, 2771,
	89, 2771,
	90, 2771,
	91, 2771,
	92, 2771,
	94, 2771,
	95, 2771,
	96, 2771,
	97, 2771,
	98, 2771,
	99, 2771,
	100, 2771,
	101, 2771,
	103, 2771,
	104, 2771,
	105, 2771,
	106, 2771,
	107, 2771,
	108, 2771,
	109, 2771,
	117, 2771,
	118, 2771,
	119, 2771,
	120, 2771,
	121, 2771,
	123, 2771,
	124, 2771,
	125, 2771,
	126, 2771,
	128, 2771,
	129, 2771,
	130, 2771,
	132, 2771,
	133, 2771,
	134, 2771,
	136, 2771,
	137, 2771,
	138, 2771,
	141, 2771,
	142, 2771,
	143, 2771,
	145, 2771,
	146, 2771,
	148, 2771,
	149, 2771,
	150, 2771,
	152, 2771,
	153, 2771,
	154, 2771,
	155, 2771,
	156, 2771,
	157, 2771,
	158, 2771,
	159, 2771,
	160, 2771,
	161, 2771,
	162, 2771,
	163, 2771,
	164, 2771,
	165, 2771,
	166, 2771,
	167, 2771,
	168, 2771,
	172, 2771,
	173, 2771,
	174, 2771,
	175, 2771,
	176, 2771,
	177, 2771,
	178, 2771,
	179, 2771,
	182, 2771,
	183, 2771,
	185, 2771,
	186, 2771,
	187, 2771,
	190, 2771,
	191, 2771,
	192, 2771,
	193, 2771,
	194, 2771,
	195, 2771,
	196, 2771,
	197, 2771,
	198, 2771,
	199, 2771,
	200, 2771,
	201, 2771,
	202, 2771,
	203, 2771,
	204, 2771,
	206, 2771,
	207, 2771,
	209, 2771,
	210, 2771,
	212, 2771,
	213, 2771,
	214, 2771,
	215, 2771,
	216, 2771,
	217, 2771,
	218, 2771,
	219, 2771,
	220, 2771,
	221, 2771,
	222, 2771,
	223, 2771,
	224, 2771,
	225, 2771,
	226, 2771,
	227, 2771,
	228, 2771,
	230, 2771,
	231, 2771,
	233, 2771,
	234, 2771,
	235, 2771,
	237, 2771,
	238, 2771,
	239, 2771,
	240, 2771,
	242, 2771,
	244, 2771,
	245, 2771,
	246, 2771,
	247, 2771,
	248, 2771,
	249, 2771,
	250, 2771,
	251, 2771,
	252, 2771,
	253, 2771,
	255, 2771,
	256, 2771,
	257, 2771,
	258, 2771,
	259, 2771,
	260, 2771,
	261, 2771,
	262, 2771,
	264, 2771,
	265, 2771,
	266, 2771,
	268, 2771,
	269, 2771,
	270, 2771,
	271, 2771,
	272, 2771,
	273, 2771,
	275, 2771,
	276, 2771,
	277, 2771,
	278, 2771,
	279, 2771,
	280, 2771,
	281, 2771,
	284, 2771,
	285, 2771,
	286, 2771,
	287, 2771,
	288, 2771,
	289, 2771,
	290, 2771,
	291, 2771,
	292, 2771,
	293, 2771,
	294, 2771,
	295, 2771,
	296, 2771,
	297, 2771,
	298, 2771,
	299, 2771,
	300, 2771,
	301, 2771,
	302, 2771,
	303, 2771,
	304, 2771,
	305, 2771,
	306, 2771,
	307, 2771,
	308, 2771,
	309, 2771,
	310, 2771,
	312, 2771,
	313, 2771,
	314, 2771,
	315, 2771,
	316, 2771,
	317, 2771,
	318, 2771,
	319, 2771,
	320, 2771,
	321, 2771,
	322, 2771,
	323, 2771,
	324, 2771,
	325, 2771,
	326, 2771,
	327, 2771,
	328, 2771,
	330, 2771,
	331, 2771,
	334, 2771,
	335, 2771,
	336, 2771,
	338, 2771,
	339, 2771,
	340, 2771,
	341, 2771,
	342, 2771,
	345, 2771,
	349, 2771,
	350, 2771,
	351, 2771,
	352, 2771,
	354, 2771,
	355, 2771,
	356, 2771,
	358, 2771,
	360, 2771,
	361, 2771,
	362, 2771,
	363, 2771,
	364, 2771,
	365, 2771,
	366, 2771,
	367, 2771,
	368, 2771,
	369, 2771,
	370, 2771,
	371, 2771,
	372, 2771,
	374, 2771,
	375, 2771,
	376, 2771,
	377, 2771,
	378, 2771,
	379, 2771,
	380, 2771,
	381, 2771,
	382, 2771,
	383, 2771,
	384, 2771,
	385, 2771,
	386, 2771,
	387, 2771,
	388, 2771,
	390, 2771,
	391, 2771,
	393, 2771,
	394, 2771,
	395, 2771,
	396, 2771,
	397, 2771,
	398, 2771,
	399, 2771,
	400, 2771,
	401, 2771,
	402, 2771,
	403, 2771,
	404, 2771,
	405, 2771,
	407, 2771,
	409, 2771,
	410, 2771,
	411, 2771,
	417, 2771,
	418, 2771,
	419, 2771,
	420, 2771,
	421, 2771,
	422, 2771,
	423, 2771,
	424, 2771,
	425, 2771,
	426, 2771,
	427, 2771,
	428, 2771,
	429, 2771,
	431, 2771,
	432, 2771,
	433, 2771,
	434, 2771,
	435, 2771,
	436, 2771,
	437, 2771,
	438, 2771,
	439, 2771,
	440, 2771,
	441, 2771,
	442, 2771,
	443, 2771,
	444, 2771,
	445, 2771,
	446, 2771,
	447, 2771,
	448, 2771,
	449, 2771,
	450, 2771,
	451, 2771,
	452, 2771,
	453, 2771,
	454, 2771,
	456, 2771,
	457, 2771,
	458, 2771,
	459, 2771,
	460, 2771,
	461, 2771,
	463, 2771,
	464, 2771,
	465, 2771,
	466, 2771,
	467, 2771,
	468, 2771,
	469, 2771,
	470, 2771,
	471, 2771,
	472, 2771,
	473, 2771,
	474, 2771,
	475, 2771,
	476, 2771,
	477, 2771,
	479, 2771,
	481, 2771,
	482, 2771,
	483, 2771,
	484, 2771,
	485, 2771,
	486, 2771,
	487, 2771,
	488, 2771,
	489, 2771,
	490, 2771,
	491, 2771,
	492, 2771,
	493, 2771,
	494, 2771,
	495, 2771,
	496, 2771,
	498, 2771,
	499, 2771,
	500, 2771,
	501, 2771,
	502, 2771,
	504, 2771,
	505, 2771,
	506, 2771,
	507, 2771,
	508, 2771,
	509, 2771,
	510, 2771,
	511, 2771,
	513, 2771,
	514, 2771,
	515, 2771,
	516, 2771,
	517, 2771,
	519, 2771,
	521, 2771,
	522, 2771,
	523, 2771,
	524, 2771,
	525, 2771,
	526, 2771,
	528, 2771,
	529, 2771,
	530, 2771,
	531, 2771,
	533, 2771,
	534, 2771,
	537, 2771,
	538, 2771,
	539, 2771,
	540, 2771,
	541, 2771,
	542, 2771,
	543, 2771,
	545, 2771,
	548, 2771,
	549, 2771,
	550, 2771,
	551, 2771,
	552, 2771,
	553, 2771,
	555, 2771,
	556, 2771,
	557, 2771,
	558, 2771,
	559, 2771,
	560, 2771,
	565, 2771,
	566, 2771,
	567, 2771,
	568, 2771,
	569, 2771,
	570, 2771,
	571, 2771,
	573, 2771,
	581, 2771,
	582, 2771,
	583, 2771,
	584, 2771,
	585, 2771,
	586, 2771,
	588, 2771,
	589, 2771,
	590, 2771,
	591, 2771,
	592, 2771,
	593, 2771,
	594, 2771,
	595, 2771,
	596, 2771,
	598, 2771,
	601, 2771,
	602, 2771,
	604, 2771,
	605, 2771,
	-2, 0,
	-1, 1650,
	189, 2652,
	518, 2652,
	583, 2652,
	602, 2652,
	-2, 0,
	-1, 1703,
	395, 897,
	461, 897,
	502, 897,
	523, 897,
	-2, 0,
	-1, 1714,
	1, 1407,
	599, 1407,
	601, 1407,
	603, 1407,
	-2, 0,
	-1, 1731,
	1, 892,
	599, 892,
	601, 892,
	603, 892,
	-2, 0,
	-1, 1732,
	1, 936,
	599, 936,
	601, 936,
	603, 936,
	-2, 0,
	-1, 1733,
	1, 944,
	599, 944,
	601, 944,
	603, 944,
	-2, 0,
	-1, 1736,
	1, 901,
	599, 901,
	601, 901,
	603, 901,
	-2, 0,
	-1, 1738,
	1, 907,
	599, 907,
	601, 907,
	603, 907,
	-2, 0,
	-1, 1741,
	1, 903,
	599, 903,
	601, 903,
	603, 903,
	-2, 0,
	-1, 1746,
	1, 917,
	599, 917,
	601, 917,
	603, 917,
	-2, 0,
	-1, 1777,
	1, 2635,
	599, 2635,
	601, 2635,
	602, 2635,
	603, 2635,
	-2, 0,
	-1, 1781,
	1, 991,
	599, 991,
	601, 991,
	603, 991,
	-2, 0,
	-1, 1798,
	1, 1457,
	603, 1457,
	-2, 1462,
	-1, 1801,
	171, 1613,
	184, 1613,
	274, 1613,
	343, 1613,
	-2, 1551,
	-1, 1901,
	151, 1572,
	171, 1572,
	184, 1572,
	241, 1572,
	274, 1572,
	343, 1572,
	353, 1572,
	535, 1572,
	-2, 2023,
	-1, 1962,
	601, 2198,
	-2, 0,
	-1, 1997,
	151, 1572,
	171, 1572,
	184, 1572,
	241, 1572,
	274, 1572,
	343, 1572,
	353, 1572,
	535, 1572,
	-2, 1705,
	-1, 2036,
	518, 2649,
	602, 2649,
	605, 2649,
	-2, 0,
	-1, 2053,
	600, 1846,
	-2, 1834,
	-1, 2085,
	189, 2649,
	602, 2649,
	605, 2649,
	-2, 0,
	-1, 2127,
	1, 703,
	603, 703,
	-2, 1462,
	-1, 2272,
	224, 267,
	-2, 2346,
	-1, 2273,
	224, 268,
	-2, 319,
	-1, 2382,
	1, 894,
	599, 894,
	601, 894,
	603, 894,
	-2, 0,
	-1, 2383,
	1, 938,
	599, 938,
	601, 938,
	603, 938,
	-2, 0,
	-1, 2384,
	1, 946,
	599, 946,
	601, 946,
	603, 946,
	-2, 0,
	-1, 2385,
	1, 993,
	599, 993,
	601, 993,
	603, 993,
	-2, 0,
	-1, 2426,
	1, 919,
	599, 919,
	601, 919,
	603, 919,
	-2, 0,
	-1, 2446,
	1, 976,
	599, 976,
	601, 976,
	603, 976,
	-2, 0,
	-1, 2493,
	440, 1640,
	441, 1640,
	-2, 1879,
	-1, 2524,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1899,
	-1, 2525,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1900,
	-1, 2526,
	95, 0,
	255, 0,
	256, 0,
	585, 0,
	586, 0,
	-2, 1901,
	-1, 2527,
	95, 0,
	255, 0,
	256, 0,
	585, 0,
	586, 0,
	-2, 1902,
	-1, 2528,
	95, 0,
	255, 0,
	256, 0,
	585, 0,
	586, 0,
	-2, 1903,
	-1, 2529,
	95, 0,
	255, 0,
	256, 0,
	585, 0,
	586, 0,
	-2, 1904,
	-1, 2530,
	95, 0,
	255, 0,
	256, 0,
	585, 0,
	586, 0,
	-2, 1905,
	-1, 2531,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1906,
	-1, 2543,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1918,
	-1, 2544,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1919,
	-1, 2545,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1920,
	-1, 2549,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1927,
	-1, 2555,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1931,
	-1, 2557,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1939,
	-1, 2558,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1940,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1941,
	-1, 2560,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1942,
	-1, 2734,
	5, 2350,
	189, 2209,
	600, 2347,
	-2, 2338,
	-1, 2735,
	189, 2210,
	-2, 2722,
	-1, 2736,
	189, 2211,
	-2, 2538,
	-1, 2737,
	189, 2212,
	-2, 2420,
	-1, 2738,
	189, 2213,
	-2, 2477,
	-1, 2739,
	189, 2214,
	-2, 2523,
	-1, 2740,
	189, 2215,
	-2, 2647,
	-1, 2741,
	189, 2216,
	-2, 2006,
	-1, 2812,
	1, 1706,
	2, 1706,
	106, 1706,
	151, 1706,
	171, 1706,
	184, 1706,
	190, 1706,
	208, 1706,
	211, 1706,
	237, 1706,
	241, 1706,
	252, 1706,
	270, 1706,
	274, 1706,
	313, 1706,
	343, 1706,
	347, 1706,
	353, 1706,
	430, 1706,
	434, 1706,
	535, 1706,
	546, 1706,
	562, 1706,
	563, 1706,
	564, 1706,
	574, 1706,
	599, 1706,
	601, 1706,
	603, 1706,
	605, 1706,
	-2, 1705,
	-1, 2825,
	600, 2319,
	-2, 2333,
	-1, 2827,
	1, 336,
	562, 336,
	-2, 1599,
	-1, 2857,
	600, 1845,
	-2, 1835,
	-1, 3047,
	1, 1310,
	425, 1274,
	463, 1274,
	577, 1274,
	599, 1310,
	601, 1310,
	603, 1310,
	-2, 1599,
	-1, 3222,
	348, 1643,
	-2, 2761,
	-1, 3223,
	348, 1644,
	-2, 2632,
	-1, 3227,
	440, 2275,
	441, 2275,
	-2, 2004,
	-1, 3228,
	440, 2279,
	441, 2279,
	-2, 2005,
	-1, 3229,
	440, 2276,
	441, 2276,
	-2, 2004,
	-1, 3230,
	440, 2280,
	441, 2280,
	-2, 2005,
	-1, 3243,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1929,
	-1, 3244,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1933,
	-1, 3250,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1935,
	-1, 3476,
	1, 698,
	599, 698,
	601, 698,
	603, 698,
	-2, 1462,
	-1, 3658,
	43, 2310,
	-2, 1063,
	-1, 3663,
	1, 1310,
	599, 1310,
	601, 1310,
	603, 1310,
	-2, 1599,
	-1, 3766,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1937,
	-1, 3773,
	246, 0,
	248, 0,
	334, 0,
	-2, 1956,
	-1, 3841,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1985,
	-1, 3842,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1986,
	-1, 3843,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1987,
	-1, 3847,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1991,
	-1, 3848,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1992,
	-1, 3849,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1993,
	-1, 3897,
	600, 2320,
	-2, 2334,
	-1, 4086,
	602, 2878,
	-2, 1525,
	-1, 4140,
	246, 0,
	248, 0,
	334, 0,
	-2, 1957,
	-1, 4143,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1960,
	-1, 4144,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1962,
	-1, 4246,
	602, 2335,
	-2, 1345,
	-1, 4404,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1961,
	-1, 4405,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 1963,
	-1, 4416,
	246, 0,
	-2, 1996,
	-1, 4598,
	246, 0,
	-2, 1997,
	-1, 4807,
	50, 0,
	221, 0,
	273, 0,
	469, 0,
	571, 0,
	584, 0,
	-2, 2725,
}

const sqlPrivate = 57344

const sqlLast = 133740

var sqlAct = [...]int{
	277, 3647, 4747, 3119, 4990, 4641, 4746, 3381, 4868, 4467,
	4794, 4921, 4852, 4633, 4806, 4684, 2920, 4817, 4934, 4705,
	3132, 3646, 2269, 4737, 4778, 1344, 4818, 1139, 4757, 4760,
	1540, 4819, 4449, 4544, 3806, 2962, 4568, 4242, 2176, 4531,
	2346, 4516, 4602, 2767, 4805, 4875, 4123, 4366, 4361, 1093,
	4321, 4296, 3758, 3089, 3494, 4472, 4425, 2503, 4393, 4078,
	1146, 4348, 3680, 1273, 4553, 2987, 1567, 4070, 4350, 4669,
	3999, 2358, 4341, 4243, 1337, 824, 2572, 3236, 4223, 4371,
	2109, 2356, 713, 3674, 2921, 2096, 3631, 4044, 3497, 2511,
	1810, 2504, 3557, 3636, 1668, 1084, 4028, 2040, 4026, 3006,
	2184, 4421, 3500, 824, 3144, 3711, 3108, 784, 3713, 3078,
	1330, 3105, 1405, 3635, 1498, 2354, 3103, 3613, 3620, 3638,
	2319, 3612, 3427, 3900, 3404, 3364, 3396, 4179, 899, 4,
	903, 4122, 3139, 3387, 3134, 3120, 3385, 724, 2256, 2212,
	1339, 1092, 182, 2196, 4853, 1972, 3054, 1150, 2258, 3434,
	4603, 2508, 3519, 2805, 3867, 2652, 1879, 1909, 3363, 2650,
	2585, 1145, 3220, 1342, 3138, 1505, 3082, 894, 1606, 819,
	2257, 780, 3023, 1122, 2252, 2961, 1948, 1262, 2233, 1711,
	271, 1253, 2240, 2807, 1143, 2164, 2041, 3090, 1386, 270,
	2168, 2021, 1798, 2785, 1316, 1148, 2107, 2569, 2154, 2641,
	2492, 1973, 2475, 2840, 2473, 1643, 757, 3113, 1609, 2764,
	2229, 821, 3639, 825, 4706, 2306, 826, 1666, 1569, 1373,
	4020, 2907, 2839, 1992, 972, 1943, 1256, 1982, 2644, 2804,
	1235, 2622, 2730, 700, 1893, 191, 182, 722, 1989, 2775,
	2794, 1811, 1812, 2696, 1270, 192, 2474, 2476, 1746, 1731,
	2332, 1252, 776, 2266, 1327, 830, 1641, 765, 1634, 1536,
	2305, 1506, 4869, 4922, 833, 2497, 717, 1124, 44, 43,
	41, 1268, 32, 714, 1233, 725, 30, 28, 1817, 3273,
	814, 1797, 1258, 830, 740, 1546, 993, 875, 3267, 3383,
	1825, 1826, 833, 2098, 3881, 876, 3882, 2098, 111, 5001,
	2098, 4441, 2098, 2784, 1265, 2098, 2098, 4993, 4982, 4846,
	4203, 3699, 2784, 1856, 920, 4981, 1088, 4955, 4953, 2784,
	1828, 4471, 4471, 4894, 4854, 4843, 4841, 2278, 4855, 2784,
	2784, 1737, 3689, 1193, 4838, 4835, 4803, 4438, 4839, 4836,
	2278, 1825, 1826, 4802, 4801, 4792, 1881, 2278, 3149, 4471,
	2119, 2119, 4790, 1512, 3690, 1827, 4471, 1825, 1826, 4787,
	3461, 3459, 4782, 4556, 1856, 1847, 4471, 1088, 4781, 4755,
	1382, 1828, 4471, 4471, 1844, 4725, 4718, 1250, 4717, 2848,
	2784, 4710, 2784, 3444, 4683, 2278, 4680, 1828, 2278, 4663,
	4471, 4600, 4582, 4312, 4546, 2848, 4107, 1881, 4547, 1560,
	4490, 2355, 2777, 4489, 2278, 1264, 1827, 2278, 4478, 2844,
	4477, 3699, 2278, 1141, 4471, 1078, 1382, 1266, 1069, 1236,
	1236, 4470, 1827, 4432, 2116, 4471, 4406, 2278, 1068, 4136,
	2848, 4382, 4379, 4291, 4269, 3149, 3699, 2784, 2784, 4142,
	4094, 4088, 4041, 2848, 3706, 3706, 4042, 3871, 2278, 3235,
	2119, 1850, 1851, 1852, 1853, 3892, 3890, 2868, 3874, 3893,
	3891, 1833, 2784, 3790, 3786, 3705, 1294, 2278, 2784, 3706,
	2116, 1287, 1083, 3380, 2784, 1825, 1826, 2784, 1858, 1859,
	1860, 1869, 1870, 1871, 3375, 3374, 3325, 3323, 2784, 2784,
	3326, 3324, 1089, 2119, 4726, 3315, 3313, 1862, 1856, 3316,
	2784, 3334, 3335, 3284, 1239, 1828, 1240, 2784, 94, 1855,
	1857, 1237, 1833, 1548, 1875, 3282, 3148, 4604, 4595, 3130,
	3149, 3283, 1347, 2342, 4583, 4556, 3149, 3871, 1833, 3334,
	3335, 1881, 3129, 2891, 1842, 1843, 2342, 2784, 2847, 2837,
	1827, 2829, 2848, 2784, 2119, 2278, 2776, 2783, 2341, 4359,
	1847, 2784, 2342, 4312, 2116, 1288, 4270, 4107, 1288, 1844,
	1855, 1857, 241, 4043, 2996, 2906, 2133, 1848, 2784, 2097,
	2113, 3084, 2277, 1677, 2647, 2189, 3349, 3016, 2904, 1968,
	1535, 2598, 2599, 2600, 2617, 2618, 2619, 3976, 3761, 3735,
	1990, 2245, 3691, 1713, 2821, 2820, 2819, 2818, 2817, 1241,
	241, 2620, 1238, 1077, 1076, 1075, 1074, 1073, 1072, 1071,
	243, 3692, 2679, 1067, 1559, 1066, 1065, 4197, 1848, 3272,
	1064, 1063, 1062, 1061, 1060, 1059, 1058, 1057, 1056, 1055,
	1054, 3193, 4373, 1053, 1881, 1052, 1850, 1851, 1852, 1853,
	1051, 1050, 1878, 1032, 970, 969, 1833, 968, 243, 1825,
	1826, 967, 966, 2610, 965, 964, 2099, 963, 242, 962,
	2099, 961, 2606, 2099, 960, 2099, 2648, 959, 2099, 2099,
	958, 235, 3340, 957, 956, 955, 1659, 954, 953, 1828,
	236, 952, 951, 950, 949, 1866, 948, 947, 1876, 946,
	945, 73, 944, 1878, 1855, 1857, 242, 943, 1854, 942,
	3340, 1554, 941, 940, 939, 938, 937, 193, 74, 1878,
	1872, 936, 1873, 935, 1827, 1512, 924, 2116, 923, 1842,
	1843, 1849, 922, 918, 79, 917, 910, 909, 908, 893,
	892, 849, 848, 847, 846, 837, 836, 1864, 835, 2611,
	2612, 2613, 2614, 3116, 834, 193, 2649, 800, 2646, 2605,
	791, 790, 1848, 789, 771, 1548, 265, 264, 1349, 1148,
	263, 262, 261, 260, 88, 259, 258, 257, 4828, 256,
	3689, 255, 1849, 254, 2677, 4154, 1288, 2116, 3350, 1880,
	253, 252, 251, 250, 241, 249, 1148, 1148, 1148, 248,
	247, 246, 245, 244, 3915, 3886, 3707, 3430, 1874, 3295,
	241, 3278, 3269, 3173, 1408, 901, 3350, 3064, 1408, 2852,
	2826, 2811, 3098, 153, 3378, 1349, 1863, 49, 2776, 110,
	1833, 1993, 2615, 2616, 2663, 94, 107, 1878, 2465, 2661,
	1880, 1911, 243, 2162, 2119, 1390, 1391, 1392, 2878, 4375,
	1148, 2097, 1148, 2116, 1148, 2118, 2113, 2468, 243, 1824,
	4827, 1572, 241, 1878, 2016, 2608, 3379, 1920, 1548, 3334,
	3335, 1377, 1792, 1542, 1845, 1841, 1394, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 1272, 1349, 4607, 4824,
	242, 1878, 1288, 1854, 1519, 95, 4804, 4789, 4691, 1514,
	1739, 4592, 4586, 235, 4584, 4462, 242, 1572, 4420, 4380,
	243, 1951, 236, 4358, 1572, 2651, 1849, 4209, 1950, 235,
	4177, 4176, 4170, 1148, 4169, 1148, 1553, 1503, 236, 4168,
	1572, 1829, 1830, 1831, 1832, 1834, 1835, 4161, 1148, 193,
	1148, 2285, 3351, 1867, 4160, 1954, 4054, 1829, 1830, 1831,
	1832, 1834, 1835, 4158, 4153, 193, 1321, 1324, 242, 1951,
	1369, 4150, 4149, 1615, 1618, 4040, 1950, 3919, 3918, 1334,
	3351, 235, 3917, 3896, 1880, 3334, 3335, 3862, 3861, 2418,
	236, 1681, 1371, 3860, 3782, 3777, 3425, 1524, 1572, 3371,
	3362, 3333, 3330, 1949, 1401, 3329, 1495, 1500, 3327, 1912,
	3322, 1910, 1621, 3321, 3320, 3317, 3314, 193, 1148, 3294,
	3277, 1148, 3334, 3335, 3270, 3352, 3353, 3354, 830, 2609,
	3268, 3131, 2812, 1918, 1913, 3334, 3335, 833, 2634, 1824,
	2645, 1911, 1249, 2283, 4138, 1823, 241, 2322, 1363, 4996,
	3340, 99, 4055, 4943, 4942, 1865, 4867, 4865, 1604, 182,
	182, 1538, 1274, 3808, 1537, 1839, 1840, 1846, 1868, 1845,
	1841, 2861, 1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834,
	1835, 3100, 1682, 4748, 4609, 1646, 1648, 1880, 4668, 4162,
	1547, 241, 4654, 4649, 243, 3334, 3335, 3349, 3345, 3343,
	3344, 3336, 3337, 3338, 3339, 3341, 3342, 190, 102, 3974,
	3451, 106, 4374, 4648, 4647, 4627, 4626, 4624, 4606, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 3343, 3344, 3336,
	3337, 3338, 3339, 3341, 3342, 1644, 4605, 241, 1377, 243,
	4580, 1377, 242, 2575, 3376, 902, 4566, 4563, 4562, 241,
	153, 4557, 1148, 4542, 4541, 235, 3340, 4486, 1148, 4457,
	4418, 4401, 4400, 1637, 236, 4344, 4337, 4334, 2595, 2596,
	2597, 2621, 2607, 2601, 241, 2603, 2604, 2602, 2589, 2590,
	2591, 2592, 2593, 2594, 1802, 243, 4313, 242, 73, 4196,
	4175, 193, 4108, 3340, 1825, 1826, 3962, 243, 3961, 3944,
	235, 2581, 1755, 3943, 3941, 74, 3340, 3877, 3865, 236,
	157, 4055, 3772, 1898, 3708, 1089, 3700, 1856, 1687, 1658,
	3666, 79, 243, 3580, 1828, 194, 3532, 3499, 3453, 3334,
	3335, 2678, 3299, 242, 1676, 1796, 3115, 3298, 3293, 3259,
	3077, 1825, 1826, 1957, 1956, 242, 235, 1955, 1952, 1944,
	1881, 1831, 1832, 1834, 1835, 236, 1942, 3356, 235, 1827,
	2859, 88, 3350, 1148, 1148, 1148, 3340, 236, 2858, 1148,
	242, 1828, 1548, 2823, 2816, 2782, 1270, 2659, 1270, 1897,
	2015, 1971, 193, 235, 3099, 1966, 1704, 1965, 1964, 1963,
	1962, 1961, 236, 1408, 193, 1960, 1959, 1958, 1939, 3350,
	1938, 1740, 901, 1268, 1148, 1268, 1827, 824, 1349, 1937,
	1936, 1935, 1979, 2058, 824, 1349, 110, 1349, 1934, 193,
	1970, 1933, 94, 107, 1803, 2019, 2025, 4608, 3422, 1932,
	1931, 1930, 1929, 2037, 1928, 1927, 1265, 1878, 1265, 1926,
	2086, 1799, 2088, 1925, 1924, 1913, 1899, 2031, 1069, 1896,
	1891, 1807, 1806, 1362, 1292, 1283, 4347, 1526, 1068, 4205,
	4146, 3914, 3889, 3880, 3281, 1833, 2814, 2850, 1801, 4439,
	4207, 1640, 3350, 3913, 1878, 1912, 1635, 1349, 3449, 1894,
	2026, 3695, 95, 1148, 2011, 1820, 1821, 1878, 4940, 2027,
	3334, 3335, 1389, 2676, 1953, 4933, 2988, 1934, 4272, 1387,
	3340, 4650, 2121, 4558, 4549, 4548, 2020, 1148, 4378, 1976,
	1977, 2000, 2153, 1855, 1857, 1408, 3351, 4315, 2153, 1611,
	4314, 182, 2153, 4271, 2178, 4554, 2125, 2103, 4199, 4113,
	2105, 4112, 4111, 4110, 1945, 1946, 2110, 1264, 1236, 1264,
	2112, 2151, 241, 2662, 241, 2115, 4109, 1878, 2660, 1266,
	1089, 1266, 3884, 3351, 3883, 3710, 2160, 1388, 3709, 3702,
	2052, 3338, 3339, 3341, 3342, 3701, 4058, 4820, 1377, 1993,
	2966, 1848, 4890, 2145, 2144, 4888, 1382, 2153, 2155, 2223,
	1382, 1382, 3759, 2024, 4587, 3566, 4585, 830, 2124, 1934,
	243, 1951, 243, 1383, 830, 1794, 833, 3988, 1950, 3319,
	3318, 3241, 2001, 833, 1998, 2948, 3350, 1385, 2846, 2139,
	3959, 4048, 1991, 4461, 1048, 3501, 1922, 3021, 2032, 1703,
	3649, 4911, 3648, 1712, 2347, 2081, 3351, 1756, 99, 1969,
	4545, 4850, 4831, 4816, 3621, 2101, 3145, 2242, 242, 1713,
	242, 2260, 4062, 241, 1663, 1355, 1878, 1091, 2010, 2009,
	2008, 235, 2006, 235, 1572, 1572, 2005, 2004, 1995, 1049,
	236, 4037, 236, 1408, 3344, 3336, 3337, 3338, 3339, 3341,
	3342, 3996, 2259, 2374, 3985, 2038, 1089, 3967, 3732, 2127,
	3474, 1878, 2352, 4422, 190, 102, 2642, 193, 106, 193,
	3287, 243, 3346, 3347, 3348, 3383, 2148, 3810, 4481, 3345,
	3343, 3344, 3336, 3337, 3338, 3339, 3341, 3342, 2647, 2323,
	3535, 1379, 2857, 4453, 241, 3336, 3337, 3338, 3339, 3341,
	3342, 1639, 902, 4825, 2219, 1849, 2227, 153, 1919, 1967,
	1947, 2222, 3629, 2123, 2316, 2237, 1614, 1531, 1358, 242,
	1248, 1320, 4840, 3013, 4837, 3002, 2055, 3685, 2270, 2275,
	2993, 2946, 235, 3935, 3010, 3008, 1691, 4642, 4362, 3172,
	3351, 236, 243, 4754, 4620, 3504, 3954, 3112, 1572, 2228,
	1572, 2156, 1572, 2146, 3604, 3336, 3337, 3338, 3339, 3341,
	3342, 4892, 4891, 1880, 2189, 2183, 4484, 157, 193, 4826,
	1572, 1572, 888, 4480, 1384, 4459, 3753, 3478, 4926, 4009,
	2648, 3450, 194, 1572, 4512, 2003, 2195, 3001, 2483, 4259,
	242, 2150, 2995, 2945, 1754, 1572, 4257, 1572, 1572, 1572,
	2262, 2263, 1640, 235, 4254, 1028, 2046, 1581, 1389, 2140,
	1753, 2230, 236, 2264, 2892, 1589, 830, 3056, 2217, 2432,
	2446, 824, 2443, 2312, 1106, 833, 2430, 4992, 1046, 2149,
	1044, 4658, 1380, 1042, 1040, 2187, 2373, 1037, 4505, 193,
	4492, 1381, 4305, 1148, 4304, 4289, 4008, 4288, 2481, 1538,
	2317, 4007, 1537, 1837, 1829, 1830, 1831, 1832, 1834, 1835,
	2649, 2128, 2646, 1533, 2910, 4006, 2216, 2213, 3998, 2232,
	2329, 3992, 3991, 1388, 3480, 2444, 2236, 889, 1148, 2908,
	3982, 3981, 3979, 2910, 3978, 2350, 3345, 3343, 3344, 3336,
	3337, 3338, 3339, 3341, 3342, 2276, 2366, 3966, 2908, 3930,
	4482, 1590, 2445, 3929, 3610, 3609, 1835, 3571, 2378, 2923,
	3443, 1752, 3292, 3291, 1148, 4454, 1148, 3290, 1689, 763,
	2337, 3289, 3245, 1148, 3019, 3501, 2058, 2058, 1408, 3564,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1644, 1148, 1644, 1148,
	1148, 1148, 1148, 2298, 2326, 2297, 2339, 3109, 3018, 3015,
	1637, 2467, 2334, 2335, 2334, 4927, 3004, 2331, 2360, 3938,
	1383, 1372, 2260, 2347, 2692, 1148, 2990, 763, 2482, 1148,
	1148, 830, 2485, 1363, 2343, 2982, 2344, 1148, 2851, 4253,
	833, 1148, 2472, 1148, 1148, 2981, 1382, 2231, 2976, 2651,
	2975, 1408, 2231, 2231, 4255, 2926, 2974, 1148, 1148, 1148,
	1148, 2953, 2403, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 2231, 2623, 2624, 2365, 2952, 1089, 2914, 1089, 2865,
	2838, 2556, 1639, 1800, 2382, 3342, 2623, 2639, 2970, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 2393, 4273,
	1389, 2480, 1148, 2052, 2052, 2963, 2964, 241, 241, 1585,
	241, 2963, 2964, 2687, 1270, 2963, 2964, 2642, 1087, 2691,
	3565, 1408, 2188, 2513, 1627, 1705, 1626, 2426, 3534, 2296,
	1270, 1981, 2733, 2733, 2747, 4521, 2623, 4399, 1379, 2768,
	2770, 1268, 2509, 2510, 2496, 2774, 1148, 1408, 2187, 4215,
	1383, 2185, 1735, 2842, 1034, 243, 243, 1268, 243, 2950,
	1306, 2189, 2567, 1684, 2645, 1388, 3733, 2483, 1534, 2463,
	2157, 2158, 2458, 1793, 1265, 2370, 762, 1790, 2455, 2471,
	2470, 2477, 2484, 1069, 2587, 2181, 1069, 1069, 2469, 2824,
	1265, 1598, 2565, 2500, 2899, 1713, 2501, 2502, 4891, 1713,
	2638, 2225, 1751, 242, 242, 1625, 242, 1624, 1086, 891,
	890, 1769, 4214, 2571, 2186, 1985, 235, 235, 2383, 235,
	2799, 1384, 2197, 2571, 3152, 236, 236, 2481, 236, 3012,
	2689, 1603, 2187, 3188, 1735, 2690, 2937, 2436, 2693, 3218,
	2694, 2695, 2828, 2182, 1765, 2201, 2214, 2791, 1825, 1826,
	1349, 1349, 193, 193, 762, 193, 2925, 2583, 3477, 1734,
	2424, 3011, 1988, 2000, 3233, 4635, 4256, 4957, 1379, 2936,
	712, 1856, 3009, 3007, 2636, 1264, 2887, 1983, 1828, 1380,
	2384, 1685, 1236, 2387, 2457, 764, 798, 1266, 1381, 2055,
	2055, 1264, 2390, 1408, 2579, 1986, 707, 2011, 2845, 1805,
	1732, 2577, 2198, 1266, 1881, 2841, 2790, 4928, 1361, 2479,
	1690, 182, 2189, 1827, 2381, 4822, 2336, 2873, 2881, 1701,
	1088, 2220, 2742, 2877, 2759, 1089, 3951, 3796, 2058, 2772,
	2853, 2729, 4017, 2561, 3963, 1089, 3256, 2888, 1984, 1089,
	3742, 1734, 2792, 2798, 1377, 2803, 2780, 2781, 2809, 2810,
	3199, 1384, 2880, 2909, 2864, 2562, 1998, 2796, 2797, 3551,
	2563, 2813, 1733, 764, 2568, 2215, 3254, 3741, 2431, 2046,
	2046, 3190, 3398, 2895, 2889, 2429, 1408, 2482, 1038, 1953,
	1038, 2169, 4522, 1038, 1039, 4251, 2170, 1038, 2884, 4637,
	4018, 2651, 1349, 2915, 4520, 2897, 2913, 1278, 796, 3232,
	4518, 1610, 3799, 2924, 2391, 2188, 4929, 3797, 4398, 1380,
	2883, 2202, 1280, 1148, 1148, 2860, 1148, 3552, 1381, 1833,
	2913, 4303, 2169, 1945, 1946, 2872, 3980, 2170, 1089, 2875,
	2949, 2876, 2898, 4016, 3977, 2863, 3922, 2243, 2867, 1275,
	824, 2912, 1349, 2890, 886, 3949, 885, 4517, 2882, 2454,
	2480, 933, 2971, 2896, 1608, 3005, 3909, 3616, 1766, 1987,
	3550, 3608, 3202, 1382, 3562, 3081, 3014, 1855, 1857, 2955,
	2973, 2951, 4904, 1572, 4519, 2052, 2203, 2204, 1748, 4937,
	2464, 3543, 2893, 3123, 1281, 2553, 1572, 4913, 1572, 2188,
	4823, 2239, 2940, 1584, 4238, 4912, 3140, 2186, 2282, 2281,
	2171, 2199, 1085, 3225, 3226, 1572, 2954, 3251, 2965, 2967,
	2968, 2969, 2918, 3096, 2956, 4931, 3059, 2175, 2238, 2972,
	2980, 3061, 2928, 2931, 2944, 1848, 2836, 3020, 4231, 1349,
	4958, 1349, 3048, 3049, 3252, 3153, 3154, 4880, 3257, 3544,
	3051, 2171, 4128, 4127, 1305, 2200, 3160, 3161, 3162, 3736,
	2564, 1279, 2234, 1148, 3174, 2456, 3175, 2246, 2175, 3617,
	2566, 2651, 2253, 2979, 3682, 3964, 2651, 3092, 3614, 4722,
	2209, 3397, 2749, 2994, 3196, 3683, 2986, 3000, 2984, 1587,
	3146, 2186, 3542, 4232, 2211, 2098, 2243, 2192, 830, 2911,
	4249, 2172, 2177, 1382, 2224, 4821, 3201, 833, 3052, 1767,
	1878, 4796, 3170, 4797, 3057, 4252, 3150, 3488, 4732, 3137,
	2235, 2226, 3155, 182, 3156, 4444, 797, 4643, 1610, 1148,
	830, 1538, 2989, 1507, 3062, 1148, 1148, 3198, 2210, 833,
	2978, 3169, 2172, 2177, 2255, 2977, 3075, 4665, 3516, 3127,
	3583, 3050, 2221, 708, 1539, 2193, 3179, 2223, 3181, 3143,
	3183, 3086, 3125, 3085, 3142, 1035, 2551, 4636, 3682, 2554,
	3479, 2055, 761, 925, 1686, 799, 3204, 2205, 3206, 795,
	3247, 2208, 3176, 3118, 2173, 2389, 2247, 911, 3128, 1849,
	2570, 1148, 1148, 1763, 1714, 2218, 1532, 1148, 2191, 926,
	1290, 1644, 2254, 2226, 1768, 3515, 2425, 4331, 3167, 3207,
	1148, 1148, 3209, 916, 1940, 3147, 1148, 1148, 2550, 3126,
	3447, 4930, 1148, 3107, 3178, 2173, 3180, 2225, 3182, 3526,
	3184, 3185, 2224, 2179, 3253, 709, 2827, 1764, 4879, 4031,
	1097, 3057, 4935, 3200, 3255, 4031, 3177, 1880, 4029, 2243,
	4124, 2046, 2206, 3194, 4029, 4860, 2578, 2386, 2179, 1080,
	4250, 1020, 2910, 3520, 4411, 4861, 4720, 1148, 1148, 1148,
	2167, 3248, 1804, 1148, 2179, 3950, 4395, 2929, 730, 1276,
	4901, 1360, 2886, 1148, 710, 1082, 711, 3524, 2380, 1890,
	3213, 4765, 1700, 1702, 1688, 3224, 1020, 4283, 4227, 3297,
	1148, 2795, 1985, 4228, 3280, 4959, 3615, 2808, 2633, 2222,
	4721, 3275, 3276, 4233, 3215, 3214, 3279, 3522, 1088, 4944,
	1082, 3812, 1981, 4946, 3489, 4346, 4118, 2496, 2165, 3219,
	3525, 1081, 1277, 4308, 3234, 1838, 1836, 1837, 1829, 1830,
	1831, 1832, 1834, 1835, 3910, 934, 1295, 4678, 4351, 1988,
	4129, 3755, 4936, 3216, 4685, 4230, 4770, 4704, 1719, 4565,
	3271, 4032, 4307, 4306, 2793, 4076, 3670, 4032, 4352, 2835,
	2304, 2166, 4234, 1978, 1293, 1286, 699, 1021, 4053, 2169,
	4125, 3521, 1986, 1815, 2170, 4173, 2499, 2985, 4938, 2190,
	2141, 3246, 1148, 1148, 1148, 1148, 1814, 3435, 1814, 4479,
	4670, 4574, 1148, 1148, 1148, 2250, 1985, 1148, 2138, 1809,
	3495, 4619, 1021, 4671, 2552, 4394, 2174, 1148, 1270, 1408,
	1020, 927, 928, 1148, 3047, 1148, 4332, 4077, 3390, 3391,
	4002, 3983, 4964, 3936, 1270, 912, 913, 3934, 3851, 3671,
	4878, 3662, 3491, 3097, 1082, 1268, 3091, 4672, 3079, 2330,
	3373, 2324, 1408, 1988, 4686, 1900, 2318, 2174, 2099, 4027,
	2310, 1268, 2290, 2248, 1270, 2289, 3392, 1408, 1983, 3795,
	1578, 3926, 2957, 1297, 3088, 4738, 770, 3866, 1265, 1349,
	3286, 3756, 2136, 2913, 4707, 2437, 1986, 2802, 4079, 2058,
	2134, 1268, 2786, 1408, 1265, 4367, 1903, 1814, 2171, 1813,
	1908, 1813, 4229, 1349, 3442, 2489, 2249, 4537, 4130, 1349,
	4859, 3415, 4674, 838, 1089, 2175, 3076, 1308, 4535, 4456,
	3507, 3503, 1026, 1025, 1265, 2789, 2137, 2371, 3457, 1984,
	3502, 1148, 3239, 3217, 4030, 4673, 1021, 3879, 3395, 845,
	4030, 4239, 4240, 3394, 2363, 1148, 1987, 1742, 1741, 2178,
	3906, 2353, 4675, 2287, 4396, 1349, 2834, 1026, 1025, 1736,
	3429, 2058, 2833, 2832, 3484, 3485, 2788, 3400, 1815, 1022,
	1815, 2787, 1086, 2930, 2831, 2830, 4036, 1633, 1148, 1264,
	3475, 3083, 4349, 2178, 1631, 3505, 932, 4174, 3509, 2172,
	2177, 1266, 4131, 1349, 3481, 1264, 4630, 4468, 3464, 3468,
	1813, 3466, 3467, 4322, 1022, 2934, 3470, 1266, 3471, 3421,
	3472, 3368, 3369, 3370, 1377, 1349, 3433, 1349, 3384, 929,
	930, 3437, 3438, 3439, 3440, 1264, 3399, 4049, 2025, 1890,
	3414, 3852, 3942, 914, 915, 2328, 2052, 1266, 3624, 2242,
	3853, 3428, 4963, 2490, 4898, 1408, 2958, 2959, 2242, 1619,
	1987, 3492, 4687, 4539, 3454, 3455, 1349, 3456, 3506, 3931,
	1349, 3511, 1620, 4442, 3513, 3586, 3055, 3588, 3401, 3927,
	3592, 3537, 2173, 3413, 3598, 3448, 3419, 3902, 3420, 3416,
	3417, 1026, 1025, 3460, 3445, 1572, 3151, 3060, 3058, 2357,
	4751, 2259, 1023, 1694, 4744, 3567, 4464, 4631, 1349, 1572,
	4463, 1572, 4469, 1720, 4451, 1408, 3584, 4735, 2052, 3465,
	4180, 3560, 824, 1572, 3541, 3868, 3469, 1079, 2658, 1024,
	4902, 2179, 1786, 3618, 1572, 3476, 4538, 1023, 1022, 3436,
	3555, 3903, 4772, 3563, 3634, 2450, 1349, 3482, 1788, 4903,
	1785, 4900, 4842, 3487, 3581, 1783, 1760, 3498, 1758, 4661,
	4651, 4452, 1730, 1270, 1024, 1728, 1726, 1724, 3904, 3678,
	3901, 839, 840, 3654, 769, 4417, 3523, 4172, 1722, 1716,
	1710, 1027, 3140, 1708, 4035, 3483, 1629, 3533, 1572, 3365,
	1268, 3140, 3547, 3539, 4745, 3546, 3548, 4632, 2428, 3771,
	1572, 3730, 1572, 3619, 3729, 3622, 3661, 3605, 3573, 3549,
	3572, 3458, 3328, 4676, 3258, 3553, 1027, 3080, 3003, 4677,
	2992, 2991, 3698, 1265, 2947, 3676, 2862, 3669, 1632, 3574,
	2459, 3687, 2055, 3932, 3582, 1630, 3606, 931, 2348, 2018,
	2014, 3595, 1789, 2980, 1670, 3601, 4524, 2395, 2268, 1408,
	3734, 4501, 1408, 4500, 3366, 3990, 3593, 3751, 3750, 1809,
	3599, 1023, 3192, 3191, 3158, 2478, 1747, 2398, 3607, 2309,
	2288, 3677, 2087, 1923, 3672, 1683, 1602, 3744, 2657, 4815,
	4284, 3987, 3986, 4290, 2955, 3611, 1148, 4268, 1024, 1036,
	4734, 3626, 1148, 1148, 4365, 4295, 1148, 1148, 1148, 3679,
	1148, 3658, 830, 3657, 2055, 3727, 3659, 4876, 4873, 1148,
	2058, 833, 2046, 3725, 2174, 4281, 842, 841, 1148, 3675,
	4220, 182, 182, 1148, 1264, 4219, 4075, 2452, 3585, 1408,
	3684, 4360, 2451, 3749, 4066, 1787, 1266, 1784, 1148, 3693,
	1027, 4005, 1782, 1759, 3984, 1757, 1408, 3696, 3697, 1729,
	3792, 3686, 1727, 1725, 1723, 3957, 2058, 2058, 1148, 1148,
	3746, 1148, 1148, 1148, 3748, 1721, 1715, 1709, 3955, 3752,
	1707, 3905, 3933, 1628, 3665, 3660, 3650, 3757, 3110, 1148,
	2427, 843, 844, 1148, 2046, 2058, 2058, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 3774, 1148, 3738,
	3824, 3739, 3825, 3740, 3745, 3102, 1148, 1148, 2058, 3728,
	3784, 3785, 3095, 1148, 3087, 3073, 3723, 3072, 3406, 2394,
	2267, 3053, 3754, 2879, 1148, 2874, 2286, 2284, 2261, 3721,
	2244, 3462, 2207, 2194, 2180, 1270, 1270, 2120, 3714, 1148,
	1041, 1043, 1045, 2117, 2114, 2111, 1245, 2052, 2106, 2104,
	2100, 2091, 3596, 4351, 1089, 2030, 3863, 2253, 3237, 1818,
	4892, 2142, 1268, 1268, 2130, 2131, 3781, 4629, 3779, 3210,
	3208, 1408, 1246, 4352, 3046, 4784, 4381, 3490, 4302, 4211,
	3898, 3791, 3141, 2161, 1349, 1349, 1583, 4576, 3807, 3802,
	3798, 3800, 3801, 2052, 2052, 1265, 1265, 3814, 2462, 1349,
	1349, 2910, 1349, 2935, 4569, 2910, 3723, 4087, 2189, 3907,
	3908, 2385, 3821, 2327, 3407, 3540, 2908, 1328, 3885, 3721,
	2932, 1148, 2052, 2052, 3920, 3921, 3829, 3923, 3714, 3855,
	3827, 2422, 2509, 3815, 3822, 1329, 3716, 3554, 3823, 3556,
	1148, 3870, 1780, 1781, 2460, 3864, 2417, 4783, 2392, 4297,
	4260, 3715, 1706, 4594, 3238, 2052, 2938, 4466, 182, 1825,
	1826, 2509, 3830, 3856, 1156, 3405, 3412, 4181, 3875, 3876,
	1819, 3597, 4159, 1148, 1148, 1825, 1826, 3518, 3594, 2939,
	2960, 1822, 3600, 1247, 1356, 3872, 3873, 2129, 2939, 1828,
	2461, 3924, 1296, 4895, 3859, 3925, 1264, 1264, 1329, 3411,
	4886, 266, 1329, 4001, 4851, 3071, 4063, 3724, 1266, 1266,
	273, 273, 273, 3887, 702, 703, 3968, 718, 702, 718,
	728, 1148, 3937, 768, 1827, 4000, 3716, 788, 2311, 1367,
	3010, 3008, 794, 2055, 3017, 3956, 2997, 3958, 2999, 273,
	1827, 3715, 2941, 3712, 2943, 1572, 4743, 4727, 696, 3916,
	1349, 2998, 4698, 4692, 2983, 2580, 4628, 2942, 3663, 4560,
	907, 4530, 4443, 4073, 3997, 4065, 4052, 273, 3895, 3664,
	3117, 1903, 2773, 2126, 2039, 2058, 4932, 3973, 3975, 2055,
	2055, 4465, 3972, 1530, 1529, 3446, 4962, 4774, 3334, 3335,
	3888, 1406, 4775, 2902, 2903, 1508, 1512, 3724, 1825, 1826,
	3989, 4003, 2900, 2901, 4694, 3408, 3409, 3410, 2055, 2055,
	3965, 3960, 4906, 2046, 4004, 4774, 1693, 1572, 1228, 4151,
	4775, 2653, 1692, 1148, 3912, 2902, 2755, 2900, 2688, 4072,
	4561, 1270, 1148, 2955, 4045, 4506, 4089, 4019, 4021, 4299,
	4294, 2055, 1572, 1572, 1572, 1762, 3123, 4293, 1761, 1572,
	1572, 1572, 4147, 3911, 3803, 3590, 3587, 1917, 1268, 2046,
	2046, 4096, 1916, 3140, 3722, 3717, 3718, 3719, 3720, 3212,
	1572, 4015, 2466, 4059, 4950, 4025, 1408, 4914, 4033, 4731,
	4730, 4080, 4034, 4081, 4084, 4100, 4729, 4012, 2046, 2046,
	4038, 1265, 4660, 4659, 4611, 4533, 4051, 4023, 4047, 4496,
	702, 702, 1408, 4440, 4024, 1148, 1148, 4437, 273, 4435,
	4339, 1148, 1148, 2058, 4083, 4064, 1148, 1148, 4319, 1148,
	4104, 2046, 2052, 4258, 1148, 4206, 4069, 4103, 4093, 4039,
	3953, 3945, 3668, 3667, 3512, 1148, 3463, 3197, 3189, 3166,
	4013, 3165, 4067, 3164, 3163, 3101, 3074, 2933, 2870, 2866,
	2855, 1148, 2854, 2843, 3722, 3717, 3718, 3719, 3720, 2582,
	2453, 3498, 4145, 2423, 4116, 4090, 4082, 4091, 4085, 2416,
	4114, 2415, 2414, 2413, 4095, 275, 4101, 2412, 4132, 4102,
	2325, 2299, 2295, 2294, 4115, 2293, 2292, 2291, 2094, 2093,
	2092, 2090, 1264, 2029, 1779, 1778, 1717, 1597, 1596, 1595,
	1594, 4133, 1593, 1592, 1266, 1591, 1586, 1582, 1580, 1579,
	4141, 1523, 1270, 2274, 1522, 1521, 1399, 1398, 1397, 1396,
	1270, 4126, 1395, 1359, 1408, 1408, 1315, 1408, 1314, 1313,
	1312, 1311, 1310, 1309, 1270, 1307, 1302, 1301, 1300, 1268,
	1299, 1298, 900, 8, 2132, 1572, 1572, 1268, 4186, 1047,
	1033, 4634, 4237, 4236, 4235, 2449, 1408, 93, 1588, 862,
	2052, 1268, 87, 4121, 2251, 3952, 4845, 999, 4771, 4664,
	1563, 870, 1265, 4753, 4061, 3514, 3022, 2397, 1718, 2399,
	1265, 3423, 1270, 2815, 1270, 4719, 4212, 4213, 4155, 3296,
	4601, 4410, 2656, 4171, 1265, 1921, 3377, 89, 1132, 1178,
	4330, 4329, 4221, 3939, 3637, 4326, 4325, 1349, 2055, 1268,
	2043, 1268, 4261, 2045, 1096, 4248, 1411, 1408, 4795, 1349,
	2143, 4247, 1349, 4189, 4191, 1138, 2159, 2152, 2856, 2732,
	1155, 1152, 4263, 4264, 4178, 2047, 2049, 1154, 1153, 1408,
	4183, 4184, 1265, 4185, 1265, 4182, 4188, 182, 2048, 1941,
	1151, 2042, 4071, 4187, 3121, 3694, 4195, 1638, 1636, 1001,
	2147, 2576, 4298, 4198, 4300, 4216, 2640, 4218, 3285, 1914,
	1110, 1112, 1134, 1264, 2637, 1291, 1572, 1572, 1123, 1111,
	3403, 1264, 3382, 3681, 3894, 1266, 4262, 2488, 2046, 880,
	4204, 3331, 2643, 1266, 1282, 1264, 4202, 2756, 2748, 4323,
	2744, 3473, 3111, 4210, 1349, 1795, 4424, 1266, 1892, 3122,
	1791, 3428, 1393, 1116, 2574, 1905, 1408, 4282, 3263, 2498,
	3688, 1572, 3426, 4301, 2849, 4777, 3811, 3195, 2303, 1244,
	1243, 1289, 1242, 4759, 4756, 2241, 4333, 4280, 4292, 3632,
	4277, 3633, 4320, 1264, 2135, 1264, 2055, 4317, 2894, 2586,
	1572, 1572, 1572, 1572, 1572, 1266, 3651, 1266, 4354, 4244,
	2017, 4244, 1128, 1517, 2441, 1408, 3388, 4050, 1599, 793,
	4473, 4318, 4014, 4357, 1140, 1877, 3043, 1148, 1148, 1148,
	3042, 4623, 4310, 1378, 4311, 4368, 4309, 4369, 1376, 1375,
	1374, 4923, 4316, 3948, 3947, 1408, 4266, 4328, 3946, 240,
	1148, 4336, 4324, 1148, 1148, 4335, 4345, 3231, 1816, 4275,
	1808, 237, 4278, 1148, 4372, 4363, 2058, 239, 238, 4340,
	3899, 1148, 1148, 3432, 4849, 4377, 2046, 4356, 3970, 4370,
	3623, 23, 22, 21, 116, 42, 20, 155, 1408, 133,
	1572, 152, 151, 125, 150, 4386, 149, 148, 147, 154,
	146, 4402, 145, 2755, 4384, 140, 4383, 144, 143, 142,
	4390, 141, 139, 137, 138, 1408, 132, 136, 135, 1284,
	134, 131, 4391, 1148, 130, 129, 128, 4397, 127, 126,
	124, 156, 2163, 123, 4407, 122, 1148, 121, 120, 119,
	118, 4413, 117, 781, 782, 1148, 61, 60, 115, 113,
	2058, 114, 1304, 19, 40, 14, 65, 66, 18, 1148,
	13, 35, 1148, 4419, 273, 39, 273, 273, 92, 1333,
	273, 1343, 105, 104, 103, 4430, 4431, 36, 101, 100,
	34, 1148, 1357, 17, 2755, 2755, 16, 15, 1408, 98,
	788, 97, 4476, 788, 96, 1349, 33, 31, 11, 4446,
	9, 4447, 37, 4445, 4448, 1572, 1572, 2002, 12, 5,
	187, 4495, 186, 2052, 2178, 189, 185, 273, 188, 273,
	273, 1333, 4455, 273, 273, 1270, 91, 184, 1343, 183,
	90, 29, 10, 179, 4552, 4057, 82, 4487, 4488, 4523,
	181, 180, 273, 4511, 1541, 178, 177, 176, 83, 80,
	4532, 3634, 1268, 175, 4536, 86, 1408, 4551, 4543, 1572,
	1561, 174, 4540, 81, 4498, 4497, 85, 1576, 4493, 84,
	27, 6, 4507, 64, 4509, 7, 4510, 4508, 4392, 3731,
	2279, 108, 109, 38, 4499, 1265, 1601, 78, 77, 1343,
	76, 1148, 1148, 273, 273, 4575, 1333, 2052, 75, 4525,
	4528, 4534, 4526, 26, 63, 25, 2493, 173, 1148, 2058,
	4559, 4579, 220, 4581, 219, 218, 4515, 788, 4555, 273,
	273, 4550, 217, 4570, 4573, 4571, 216, 4529, 215, 1349,
	214, 1664, 1349, 213, 4590, 4591, 4485, 208, 207, 212,
	210, 1671, 209, 211, 4572, 4578, 907, 4577, 1148, 206,
	1148, 230, 1148, 229, 4610, 4567, 223, 4612, 4372, 222,
	228, 227, 1270, 226, 225, 224, 2755, 2755, 2755, 2755,
	4589, 221, 234, 205, 4618, 1148, 3402, 1270, 204, 4267,
	203, 201, 197, 196, 200, 4513, 1264, 202, 199, 1268,
	198, 4276, 3424, 195, 4279, 233, 4593, 232, 1266, 2055,
	231, 72, 4244, 171, 1268, 172, 4599, 71, 170, 169,
	168, 167, 166, 165, 4646, 164, 4617, 70, 24, 2,
	1, 4616, 1265, 0, 273, 4613, 0, 4645, 0, 0,
	0, 0, 1270, 1270, 0, 4638, 0, 1265, 0, 1148,
	1148, 4639, 0, 4667, 0, 0, 0, 0, 273, 1148,
	0, 0, 2750, 269, 1270, 0, 2052, 1270, 0, 1268,
	1268, 1572, 0, 0, 0, 0, 0, 4655, 0, 4681,
	4682, 1572, 0, 0, 0, 0, 4353, 4657, 0, 2046,
	0, 1268, 0, 2055, 1268, 1148, 1148, 4656, 4689, 4690,
	0, 4701, 1265, 1265, 4703, 1148, 0, 4662, 0, 4679,
	0, 0, 0, 0, 0, 0, 4715, 4693, 4716, 4696,
	4688, 1110, 1110, 1110, 1265, 4695, 0, 1265, 0, 0,
	4700, 0, 4709, 1264, 4555, 0, 0, 4708, 4723, 1492,
	4712, 0, 4714, 1492, 0, 1266, 0, 0, 1264, 4244,
	1148, 1148, 4713, 4724, 0, 1148, 0, 0, 0, 1349,
	1266, 4728, 1349, 0, 4244, 4711, 0, 0, 0, 0,
	0, 4733, 0, 2046, 0, 2512, 3568, 3569, 3570, 0,
	4741, 4742, 0, 4776, 4768, 4779, 4780, 4769, 4773, 0,
	0, 0, 4749, 4762, 4758, 4761, 4750, 0, 4766, 0,
	4763, 0, 0, 1264, 1264, 0, 0, 0, 0, 4767,
	0, 0, 0, 0, 0, 1266, 1266, 0, 4800, 4244,
	4244, 1148, 1148, 1148, 1565, 1264, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 1266, 0, 0,
	1266, 4244, 4785, 0, 4244, 0, 0, 0, 0, 0,
	0, 4791, 2055, 0, 0, 1148, 4829, 4799, 0, 702,
	0, 4834, 4814, 0, 0, 0, 4811, 4812, 2654, 4813,
	0, 0, 0, 4798, 0, 0, 0, 1652, 0, 4830,
	273, 0, 273, 0, 0, 0, 273, 4857, 2178, 4858,
	0, 0, 0, 1667, 4856, 0, 4864, 0, 0, 1541,
	1333, 2022, 273, 0, 273, 2028, 4866, 0, 1148, 0,
	0, 273, 4848, 718, 0, 0, 4832, 0, 273, 0,
	4863, 0, 4877, 0, 4532, 4862, 0, 4514, 0, 0,
	0, 0, 2046, 2095, 4871, 0, 4872, 4893, 0, 0,
	0, 0, 4874, 0, 0, 273, 4889, 0, 4885, 0,
	4887, 1695, 273, 4844, 0, 4847, 4896, 4883, 4884, 0,
	4910, 4870, 0, 4908, 2825, 4897, 1270, 0, 1270, 4899,
	0, 4909, 4779, 4919, 4905, 0, 0, 0, 4917, 4916,
	4907, 0, 0, 4758, 4915, 788, 4761, 0, 0, 0,
	0, 0, 4925, 1268, 0, 1268, 0, 0, 0, 0,
	0, 4924, 0, 4918, 1349, 4920, 0, 0, 0, 0,
	4947, 4939, 0, 0, 4941, 0, 4948, 0, 4949, 0,
	0, 4954, 0, 0, 4952, 0, 1265, 0, 1265, 4945,
	0, 4951, 0, 1148, 1148, 0, 4956, 0, 0, 0,
	0, 1148, 0, 1148, 1148, 0, 0, 4960, 0, 0,
	4973, 4966, 0, 0, 4975, 4972, 0, 0, 0, 4976,
	0, 4980, 4977, 0, 4974, 4979, 0, 4970, 0, 4978,
	0, 2755, 2755, 0, 3123, 0, 0, 0, 0, 0,
	0, 4984, 0, 4985, 4991, 4987, 4967, 4968, 4989, 4995,
	4986, 4988, 4983, 4994, 0, 0, 4997, 1148, 0, 0,
	0, 0, 0, 4998, 4991, 5000, 5002, 0, 0, 0,
	2905, 0, 3260, 3261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1264, 0, 1264,
	0, 4969, 0, 0, 0, 1354, 0, 0, 0, 1266,
	4999, 1266, 0, 4244, 0, 4244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	273, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755,
	2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755,
	2755, 0, 2755, 4238, 0, 0, 0, 0, 0, 3221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1492, 0,
	0, 0, 0, 0, 0, 0, 1545, 4231, 1552, 0,
	1558, 4224, 0, 273, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 4222, 273,
	0, 0, 0, 0, 0, 0, 0, 4226, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 273, 0, 0,
	0, 702, 0, 273, 0, 0, 73, 1103, 0, 0,
	2750, 2750, 4232, 0, 0, 788, 0, 0, 0, 907,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 1657,
	0, 1662, 0, 0, 3358, 3359, 3360, 3361, 0, 79,
	0, 0, 0, 0, 1675, 0, 1680, 0, 273, 0,
	1333, 273, 0, 0, 0, 4225, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 788, 0, 0, 0, 0,
	1492, 0, 273, 0, 0, 0, 0, 1825, 1826, 88,
	2396, 0, 0, 0, 0, 273, 273, 0, 273, 0,
	273, 0, 273, 0, 273, 0, 0, 3993, 3994, 3995,
	1856, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 2433,
	901, 0, 2434, 0, 2435, 0, 0, 0, 0, 0,
	0, 0, 49, 1881, 110, 0, 273, 273, 273, 273,
	94, 107, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 1338,
	0, 1844, 0, 0, 0, 768, 0, 0, 0, 788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2750, 2750, 2750, 2750, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 1518, 1338, 0, 0, 3770, 4227, 1492, 0,
	0, 0, 4228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4233, 0, 0, 0, 0, 0, 1850, 1851,
	1852, 1853, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2588, 0, 0, 3334, 3335, 0, 3352, 3353,
	3354, 0, 0, 0, 4230, 0, 0, 0, 0, 0,
	0, 0, 1338, 1338, 0, 0, 0, 4137, 0, 0,
	0, 4234, 0, 0, 0, 0, 1855, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 702, 0, 0, 0, 0, 0, 0,
	3349, 0, 0, 0, 0, 0, 99, 0, 273, 0,
	0, 0, 0, 0, 1848, 0, 0, 702, 0, 0,
	0, 0, 0, 0, 273, 2345, 702, 0, 3334, 3335,
	0, 3352, 3353, 3354, 0, 2007, 0, 0, 273, 0,
	0, 0, 0, 2359, 2361, 0, 0, 0, 0, 0,
	3776, 0, 0, 0, 0, 0, 2364, 0, 273, 1343,
	0, 0, 190, 102, 0, 0, 106, 0, 2372, 0,
	2375, 2376, 2377, 0, 0, 0, 0, 4194, 0, 0,
	0, 4229, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 241, 0, 0, 0, 3340, 0, 0, 0,
	902, 0, 0, 3349, 0, 153, 0, 273, 1343, 0,
	0, 0, 718, 0, 0, 0, 2869, 0, 0, 0,
	4239, 4240, 273, 0, 0, 273, 3389, 0, 0, 273,
	0, 273, 0, 0, 0, 0, 1333, 0, 273, 273,
	243, 1343, 1343, 2885, 0, 1854, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3418,
	3356, 0, 0, 1492, 0, 157, 0, 0, 1849, 0,
	0, 0, 0, 0, 3431, 0, 0, 4286, 4287, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 242, 3767,
	3768, 0, 0, 0, 2922, 0, 0, 0, 0, 3340,
	3452, 235, 3350, 0, 0, 273, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 1649, 0, 0,
	0, 0, 0, 788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 3356, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 3831,
	3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840, 3841,
	3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 0,
	3854, 0, 273, 3063, 0, 3350, 0, 0, 0, 0,
	0, 1845, 1841, 0, 1838, 1836, 1837, 1829, 1830, 1831,
	1832, 1834, 1835, 0, 0, 0, 1492, 0, 0, 1541,
	0, 0, 273, 0, 273, 0, 0, 0, 0, 0,
	0, 273, 0, 1518, 0, 0, 0, 2750, 2750, 0,
	0, 3106, 1492, 0, 0, 0, 3351, 0, 0, 0,
	0, 2922, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 3135, 907, 2922, 0, 4433, 0, 4434, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 273, 0, 2755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3431, 0, 273, 1333, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 273, 0, 0,
	1333, 0, 1333, 0, 1333, 0, 0, 2750, 2750, 2750,
	2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750,
	2750, 2750, 2750, 2750, 2750, 2750, 2750, 2755, 2750, 3351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4502, 4503, 0, 0, 3038, 273,
	273, 273, 273, 1333, 0, 0, 1333, 0, 273, 0,
	0, 0, 0, 273, 0, 3346, 3347, 3348, 1492, 0,
	0, 0, 3345, 3343, 3344, 3336, 3337, 3338, 3339, 3341,
	3342, 3030, 3028, 0, 0, 0, 0, 2419, 3032, 3034,
	3024, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 1508, 0, 0, 1406,
	0, 73, 0, 46, 45, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 0, 0, 3346, 3347,
	3348, 0, 48, 895, 160, 3345, 3343, 3344, 3336, 3337,
	3338, 3339, 3341, 3342, 0, 0, 0, 0, 0, 0,
	0, 0, 47, 0, 88, 0, 3788, 0, 0, 0,
	73, 0, 898, 897, 0, 0, 0, 0, 0, 0,
	0, 0, 2755, 3804, 0, 0, 0, 74, 0, 0,
	0, 50, 68, 0, 0, 0, 0, 0, 1541, 0,
	51, 0, 0, 79, 0, 57, 0, 0, 0, 161,
	0, 0, 2315, 0, 0, 0, 0, 49, 0, 110,
	0, 0, 0, 0, 2755, 94, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3026, 0, 0, 88, 0, 0, 0, 0, 0, 2755,
	0, 3040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 0, 3039, 3031, 3029, 3033, 3035, 3025, 3027,
	3041, 0, 0, 0, 901, 95, 0, 0, 3159, 0,
	3037, 0, 0, 0, 0, 0, 49, 0, 110, 0,
	0, 0, 0, 1861, 94, 107, 0, 0, 0, 0,
	0, 0, 3334, 3335, 0, 3352, 3353, 3354, 3897, 0,
	0, 0, 0, 3044, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 702, 95, 0, 0, 0, 702, 0,
	0, 702, 0, 0, 702, 702, 0, 0, 2442, 0,
	702, 0, 0, 0, 0, 0, 0, 3349, 273, 0,
	0, 0, 0, 3334, 3335, 0, 3352, 3353, 3354, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 273, 273, 0, 0, 0, 0, 53,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 56, 0, 0, 0, 3349, 59,
	0, 0, 2922, 2922, 273, 0, 2022, 0, 0, 69,
	0, 0, 2922, 3340, 2028, 0, 58, 190, 102, 0,
	0, 106, 0, 2922, 2028, 54, 2922, 2028, 0, 162,
	2028, 0, 0, 3045, 0, 0, 0, 55, 0, 0,
	99, 0, 3036, 0, 273, 273, 2022, 241, 273, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 2022, 0,
	273, 0, 3559, 3559, 0, 159, 0, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 0, 0, 0, 3340, 243, 190, 102, 0, 0,
	106, 0, 0, 2922, 0, 2922, 0, 3591, 2922, 2022,
	0, 0, 2922, 2022, 0, 0, 788, 0, 0, 3350,
	157, 0, 0, 0, 0, 0, 241, 3065, 0, 0,
	3068, 0, 3070, 0, 902, 194, 0, 0, 0, 153,
	0, 1333, 0, 242, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 3356, 0,
	0, 0, 0, 0, 0, 236, 273, 1338, 3628, 0,
	0, 3630, 2922, 0, 243, 273, 0, 0, 3114, 273,
	0, 3114, 1343, 0, 1492, 4416, 0, 0, 0, 0,
	0, 0, 193, 0, 1878, 3, 0, 273, 0, 157,
	3350, 0, 3106, 0, 0, 1333, 0, 273, 0, 0,
	2922, 0, 702, 0, 194, 0, 1338, 1492, 0, 2922,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 0, 0, 235, 0, 0, 0, 73,
	0, 0, 0, 0, 236, 4458, 0, 1338, 1338, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 1492, 0,
	0, 0, 0, 3186, 0, 0, 0, 0, 3737, 0,
	0, 896, 79, 3351, 0, 1878, 0, 0, 0, 0,
	0, 1861, 0, 0, 0, 0, 0, 1861, 3743, 0,
	0, 1541, 0, 1861, 1333, 273, 1110, 273, 0, 0,
	1825, 1826, 0, 1333, 4193, 0, 1869, 1870, 1871, 0,
	1110, 0, 88, 0, 0, 1825, 1826, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 4208, 273, 0, 0, 0, 1856, 1875,
	0, 1501, 0, 2750, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 901, 3351, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 110, 0, 0,
	0, 1881, 0, 94, 107, 1847, 0, 0, 1518, 0,
	1827, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	1847, 0, 3809, 1861, 0, 0, 0, 0, 1861, 1844,
	0, 0, 0, 2750, 0, 0, 0, 0, 0, 0,
	1492, 1861, 3346, 3347, 3348, 0, 1861, 0, 0, 3345,
	3343, 3344, 3336, 3337, 3338, 3339, 3341, 3342, 0, 0,
	4598, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3765, 0, 0, 0, 0, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 0, 0, 0,
	1492, 1833, 4622, 0, 0, 0, 1850, 1851, 1852, 1853,
	0, 1861, 0, 0, 0, 0, 1833, 1861, 3602, 273,
	273, 0, 0, 3346, 3347, 3348, 0, 4644, 0, 0,
	3345, 3343, 3344, 3336, 3337, 3338, 3339, 3341, 3342, 0,
	1866, 0, 0, 1876, 702, 702, 3627, 0, 0, 1855,
	1857, 0, 0, 0, 0, 1518, 0, 3655, 0, 0,
	0, 0, 0, 0, 1855, 1857, 1338, 0, 0, 0,
	0, 0, 1406, 0, 1842, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	1843, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4408, 0, 0, 0, 0, 1848, 0, 99,
	0, 3704, 0, 0, 0, 0, 0, 0, 2750, 1518,
	0, 1518, 1848, 3726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 0, 4408, 0, 0, 0, 0,
	1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 0, 788,
	2750, 1825, 1826, 0, 0, 190, 102, 0, 0, 106,
	1861, 0, 2512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 1861, 1856, 2750, 0, 0, 0, 0,
	0, 1828, 3559, 0, 0, 241, 0, 1878, 0, 0,
	0, 0, 0, 902, 0, 0, 0, 0, 153, 0,
	0, 273, 0, 0, 1492, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 2754,
	0, 1492, 0, 2022, 0, 273, 0, 0, 1854, 718,
	718, 1343, 1861, 243, 0, 2512, 0, 0, 1861, 0,
	0, 0, 0, 1854, 273, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 273, 3106, 0, 157, 3106,
	2028, 0, 0, 0, 0, 273, 1849, 0, 0, 0,
	0, 0, 0, 194, 0, 273, 0, 0, 1867, 0,
	273, 242, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 2922, 273, 0, 3527, 3528, 1880,
	3529, 3530, 3531, 0, 3135, 3135, 0, 0, 0, 0,
	907, 2922, 1833, 0, 1880, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 3575, 3576, 0, 3577, 3578, 3579, 0,
	1855, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 1845, 1841, 0, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0, 1845,
	1841, 0, 1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834,
	1835, 0, 0, 4156, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 1541, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 1518, 1518, 73, 0, 0, 1343, 0, 0,
	0, 0, 0, 0, 2922, 2922, 0, 3559, 2922, 0,
	0, 74, 0, 0, 0, 0, 4246, 0, 4246, 1541,
	0, 0, 0, 0, 0, 0, 0, 79, 4010, 0,
	2922, 0, 2028, 0, 0, 0, 1541, 1541, 273, 2022,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 0, 273, 2022, 0, 273, 0, 3559,
	0, 0, 0, 0, 1518, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2922, 0, 2922, 273, 0, 0, 0, 0, 0, 2315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 901, 0,
	0, 0, 0, 0, 0, 0, 0, 2922, 2922, 0,
	49, 1492, 110, 3106, 3106, 4097, 4098, 4099, 94, 107,
	4342, 0, 2359, 4105, 4106, 0, 0, 0, 1861, 0,
	0, 273, 0, 0, 0, 0, 0, 1492, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 1836,
	1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
	1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
	1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
	1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 0, 1492,
	1492, 0, 1492, 1861, 0, 1861, 1861, 1861, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 2754, 2754, 0,
	0, 0, 0, 0, 2922, 2028, 0, 2028, 0, 0,
	4450, 1492, 1861, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 4474,
	0, 4474, 0, 0, 0, 0, 0, 0, 4200, 4201,
	0, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 788, 0, 0, 0, 0,
	0, 0, 0, 1861, 0, 0, 3559, 0, 1333, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 0,
	273, 0, 0, 1861, 1492, 0, 1861, 0, 0, 1861,
	190, 102, 1861, 0, 106, 0, 0, 0, 1861, 1861,
	1861, 1861, 1861, 1861, 1861, 0, 4450, 0, 0, 4246,
	0, 0, 1541, 0, 0, 0, 0, 0, 0, 2922,
	241, 0, 0, 0, 0, 0, 0, 0, 902, 0,
	1825, 1826, 0, 153, 0, 0, 0, 4564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 2359,
	1828, 1492, 0, 0, 1861, 0, 0, 3355, 243, 2754,
	2754, 2754, 2754, 273, 273, 0, 1861, 0, 1861, 0,
	0, 0, 0, 1861, 0, 0, 1881, 0, 0, 0,
	4068, 0, 0, 157, 0, 1827, 0, 3809, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 194, 0,
	1492, 0, 0, 0, 0, 0, 242, 3559, 4615, 0,
	0, 0, 0, 0, 0, 0, 4450, 0, 0, 235,
	0, 0, 0, 4385, 0, 4387, 4388, 4389, 236, 0,
	1492, 0, 0, 0, 0, 0, 4246, 0, 0, 1825,
	1826, 0, 0, 0, 0, 0, 4117, 0, 0, 0,
	0, 4246, 0, 0, 0, 1647, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 1492, 0, 0, 0, 273, 0, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 0, 0, 718,
	0, 1833, 1980, 0, 0, 1881, 0, 0, 0, 0,
	1492, 0, 0, 0, 1827, 0, 4246, 4246, 0, 0,
	0, 0, 4342, 4436, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 4246, 0,
	273, 4246, 0, 0, 0, 0, 0, 0, 0, 1855,
	1857, 2028, 0, 0, 0, 0, 0, 1110, 0, 0,
	1541, 0, 1541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 3764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4739,
	1338, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	1850, 1851, 1852, 1853, 0, 4474, 0, 801, 273, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4527, 0,
	0, 0, 812, 2922, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 1857,
	0, 0, 0, 0, 2315, 0, 0, 0, 0, 273,
	0, 0, 1878, 0, 1861, 1861, 0, 1861, 0, 0,
	0, 0, 0, 1842, 1843, 0, 0, 1095, 0, 0,
	0, 3809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4285, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 806, 0, 0, 1854, 0,
	0, 0, 818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4450, 4355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 1861, 810, 0, 0, 0,
	0, 0, 0, 0, 4376, 0, 0, 0, 0, 1880,
	0, 0, 0, 763, 0, 0, 0, 0, 0, 0,
	2922, 0, 0, 0, 1110, 1110, 0, 0, 0, 0,
	4246, 0, 4246, 0, 0, 1541, 0, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 1861, 1861, 0, 2754, 2754, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3355, 3355,
	1849, 0, 1861, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2359, 817, 1861, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 1861, 0,
	0, 3135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2922, 0, 0, 0, 1110, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 3135, 0, 0, 0,
	0, 0, 0, 0, 2754, 2754, 2754, 2754, 2754, 2754,
	2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754,
	2754, 2754, 2754, 2754, 0, 2754, 3355, 3355, 3355, 3355,
	0, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 1845, 1841, 0, 1838, 1836, 1837, 1829,
	1830, 1831, 1832, 1834, 1835, 0, 0, 0, 0, 0,
	1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 0,
	762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 1856, 0, 813, 0, 0, 0, 0,
	1828, 805, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 1862, 1856, 1827, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 1847, 0, 0, 802, 0,
	1875, 1144, 3334, 3335, 1844, 3352, 3353, 3354, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 809, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 764,
	0, 0, 0, 0, 0, 1844, 0, 272, 272, 272,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 815, 816, 0, 831, 3349, 0, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 831, 0, 4652, 4653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 1851, 1852, 1853, 0, 0, 0, 0,
	1866, 0, 1833, 1876, 0, 0, 4666, 0, 0, 1855,
	1857, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 1180, 1873, 0, 0,
	0, 0, 0, 0, 1842, 1843, 4699, 0, 1095, 1095,
	1095, 1866, 0, 3340, 1876, 0, 0, 0, 0, 0,
	1855, 1857, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 1848, 1873, 0,
	0, 0, 0, 0, 0, 1842, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 3357, 0, 0, 0, 0,
	0, 0, 1543, 1864, 1549, 0, 1555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3356, 1848, 0,
	0, 0, 0, 1874, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 1861, 0, 0, 1861, 3355, 3355, 1861, 0, 0,
	0, 1861, 1878, 0, 0, 0, 0, 0, 1861, 3350,
	0, 0, 3334, 3335, 1874, 3352, 3353, 3354, 0, 0,
	0, 1861, 0, 1518, 0, 1655, 0, 1660, 4786, 0,
	0, 0, 1863, 0, 4788, 0, 0, 0, 0, 0,
	1673, 0, 1678, 1878, 1861, 1861, 1861, 1861, 1861, 0,
	0, 0, 0, 0, 1861, 0, 1861, 0, 1854, 3355,
	3355, 3355, 3355, 3355, 3355, 3355, 3355, 3355, 3355, 3355,
	3355, 3355, 3355, 3355, 3355, 3355, 3355, 3355, 3355, 0,
	0, 1849, 3355, 0, 1878, 1861, 1861, 3349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 0, 1854,
	0, 0, 0, 0, 0, 0, 1861, 0, 1867, 0,
	1743, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 1338, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 3351, 0, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 3340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 0,
	1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 1902, 0, 0, 3356, 0, 0,
	1915, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836,
	1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0,
	0, 4164, 0, 0, 0, 4163, 0, 0, 0, 3350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3346, 3347, 3348, 0, 0, 0, 0, 3345,
	3343, 3344, 3336, 3337, 3338, 3339, 3341, 3342, 0, 0,
	1861, 2725, 2726, 2727, 2728, 2721, 2722, 2723, 2724, 0,
	1825, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 1974, 1974, 1974, 0, 0,
	1828, 0, 1861, 1861, 1878, 0, 0, 1861, 1861, 0,
	0, 1861, 1861, 0, 0, 0, 1861, 0, 0, 0,
	1861, 0, 0, 0, 0, 1861, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	2754, 2701, 2702, 2703, 2704, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2713, 2714, 2715, 2716, 2709, 2710,
	2711, 2712, 2717, 2718, 2719, 2720, 0, 0, 0, 0,
	0, 0, 0, 3351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2754, 0, 0, 0, 0, 0, 0, 0, 0, 3249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 272, 272, 0, 0, 272, 0, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 0, 0, 1095,
	0, 1833, 2697, 2698, 2699, 2700, 2705, 2706, 2707, 2708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 272, 272, 0, 0,
	272, 272, 0, 0, 0, 0, 0, 0, 0, 1855,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 0, 0, 0, 0,
	0, 0, 3346, 3347, 3348, 0, 0, 0, 0, 3345,
	3343, 3344, 3336, 3337, 3338, 3339, 3341, 3342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	272, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 1861, 1861, 0, 0, 272, 272, 0, 0,
	0, 0, 1861, 1861, 3355, 2754, 0, 0, 0, 0,
	0, 1861, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 0, 0, 0, 3355, 2754, 0, 0,
	1271, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 1861, 2754, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 0, 0, 0, 0, 1271, 1854, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 3355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	3355, 0, 0, 1861, 0, 2420, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 3355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 1841, 0, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 2487, 0, 2491, 0,
	0, 0, 0, 0, 0, 2505, 0, 0, 0, 0,
	0, 0, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 0, 2555,
	0, 2557, 2558, 2559, 2560, 0, 0, 1996, 0, 1267,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2584, 0, 272,
	1996, 272, 0, 0, 0, 0, 0, 0, 831, 1902,
	0, 0, 0, 2635, 0, 831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 2665,
	2668, 2671, 2674, 0, 0, 2680, 2681, 2682, 2683, 2684,
	2685, 2686, 272, 0, 0, 0, 0, 0, 0, 272,
	0, 1861, 0, 0, 1825, 1826, 0, 1858, 1859, 1860,
	1869, 1870, 1871, 2746, 0, 2758, 2760, 2765, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 1856, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 1271, 0, 1271, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 1851, 1852, 1853, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 0, 0, 272, 732, 0, 0, 831, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 1876, 0, 0,
	0, 1271, 0, 1855, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 1873, 0, 733, 0, 0, 0, 0, 1842, 1843,
	0, 0, 0, 0, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	272, 0, 0, 0, 272, 735, 0, 0, 0, 0,
	272, 1848, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 754, 0, 0,
	0, 0, 272, 0, 272, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 3066, 3067, 0, 3069, 0,
	0, 0, 737, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 1878, 0, 272, 0,
	1271, 1271, 0, 0, 0, 738, 0, 0, 739, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 763, 0, 0, 0, 0,
	0, 0, 831, 272, 0, 272, 0, 272, 0, 272,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 753,
	0, 0, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 272, 272, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 0, 0, 1271, 3187, 1271, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 0, 0, 1271, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 1271, 1271, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 760, 0,
	741, 0, 0, 0, 0, 0, 0, 1882, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 761,
	0, 742, 0, 0, 1839, 1840, 1846, 1868, 1845, 1841,
	0, 1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835,
	0, 0, 0, 0, 3309, 0, 0, 0, 3310, 0,
	0, 0, 0, 3243, 3244, 0, 0, 0, 0, 3250,
	0, 0, 762, 0, 0, 0, 0, 0, 0, 0,
	743, 0, 0, 0, 0, 758, 759, 756, 3264, 3265,
	0, 0, 0, 751, 2635, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 2059, 1271, 1267, 0, 0, 0, 0,
	0, 1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871,
	0, 1267, 0, 0, 0, 0, 0, 0, 745, 3274,
	752, 0, 0, 1862, 1856, 272, 0, 0, 746, 0,
	0, 1828, 0, 0, 0, 3288, 0, 0, 0, 0,
	1875, 0, 747, 0, 0, 272, 0, 755, 0, 0,
	0, 0, 3300, 0, 0, 0, 0, 1881, 0, 0,
	0, 764, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 749, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 1271, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 272, 0, 0, 0, 272, 0, 272, 0,
	0, 0, 0, 0, 0, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 2765, 2765, 2765, 1271, 0, 0,
	0, 0, 1850, 1851, 1852, 1853, 1271, 0, 0, 1974,
	0, 0, 1833, 0, 0, 0, 0, 3393, 0, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 748, 0, 0,
	0, 1866, 0, 0, 1876, 0, 0, 0, 0, 272,
	1855, 1857, 0, 0, 0, 0, 0, 731, 0, 0,
	0, 0, 732, 0, 0, 0, 1872, 0, 1873, 0,
	0, 0, 0, 0, 0, 1842, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 734, 1095, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 831, 0, 0, 1874, 754, 0, 0, 272, 1271,
	3517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 738, 0, 0, 739, 0, 0, 0,
	0, 272, 0, 272, 0, 0, 0, 0, 0, 1854,
	0, 0, 1271, 763, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 272, 272, 272, 272,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 1271, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 741, 0,
	0, 1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836,
	1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0,
	0, 2631, 0, 0, 0, 2632, 0, 761, 0, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2505, 0,
	0, 0, 0, 0, 3762, 3763, 0, 0, 3766, 0,
	762, 0, 3769, 0, 0, 0, 0, 0, 743, 0,
	0, 3773, 0, 758, 759, 756, 0, 0, 0, 0,
	3780, 751, 0, 0, 744, 3393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3793, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 0, 0,
	3816, 3817, 0, 3818, 3819, 3820, 745, 0, 752, 0,
	0, 0, 1856, 0, 0, 0, 746, 0, 0, 1828,
	0, 3826, 0, 0, 0, 3828, 0, 0, 1875, 0,
	747, 0, 0, 0, 0, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 764,
	0, 0, 0, 0, 1827, 0, 0, 0, 3857, 3858,
	749, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 3869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 3878, 1825, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 1881, 0,
	1850, 1851, 1852, 1853, 0, 0, 0, 1827, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 3928, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	272, 272, 3940, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 1876, 0, 0, 0, 0, 0, 1855, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 3969, 0, 0, 0,
	0, 3242, 0, 1842, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 1271, 0, 0, 0, 0,
	0, 1864, 0, 1850, 1851, 1852, 1853, 0, 0, 0,
	1271, 272, 272, 1833, 0, 272, 1848, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	1271, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 1857, 0, 0, 2059, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1260, 0, 0, 0, 0, 0, 1842, 1843, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 1974, 268, 268, 698, 0,
	0, 0, 0, 831, 4092, 0, 0, 2059, 0, 0,
	0, 0, 272, 0, 0, 0, 272, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4134, 4135, 1825,
	1826, 0, 0, 4139, 4140, 0, 0, 0, 4143, 4144,
	0, 1271, 0, 0, 0, 0, 4148, 0, 1880, 0,
	0, 0, 1856, 0, 0, 0, 0, 4152, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 0, 4157, 0, 0, 0, 0, 0, 0,
	0, 1271, 272, 0, 272, 1881, 0, 0, 0, 0,
	0, 0, 0, 1849, 1827, 1271, 0, 1271, 0, 0,
	0, 1271, 0, 0, 1847, 0, 0, 0, 0, 1271,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 1865,
	1271, 272, 0, 0, 0, 0, 0, 0, 0, 1839,
	1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837, 1829,
	1830, 1831, 1832, 1834, 1835, 0, 0, 0, 0, 1271,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 1271, 0,
	1850, 1851, 1852, 1853, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 274, 274, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 1271, 1845, 1841, 1271, 1838,
	1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 1855, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 1843, 0, 1267, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4403,
	4404, 4405, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2505, 0, 0, 4414, 4415, 0, 0, 0,
	0, 1271, 1271, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 4423, 4426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 1271, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1133, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4475, 0,
	0, 272, 0, 0, 0, 0, 0, 4483, 1880, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 4491, 272, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 272, 4504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 1841, 0, 1838, 1836, 1837, 1829,
	1830, 1831, 1832, 1834, 1835, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	1319, 0, 1319, 1319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1070, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1403, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	4621, 0, 0, 0, 4625, 0, 1254, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 1271,
	1271, 0, 0, 0, 0, 1271, 1271, 1271, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 1271, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 1653, 1654, 0, 0, 2059,
	0, 1095, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 4697, 0, 1996, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2505, 0,
	0, 272, 0, 0, 272, 0, 0, 4426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 274,
	1770, 274, 274, 1095, 0, 274, 1271, 0, 0, 0,
	1271, 1271, 0, 1271, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 1271, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 1271, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 274, 1412, 274, 274, 0, 1412, 274, 274,
	851, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	1271, 0, 0, 4810, 4810, 4810, 0, 274, 0, 0,
	853, 0, 0, 0, 0, 854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 1271, 0, 0, 0, 4833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 855, 1271, 872, 0, 274, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 856, 0, 1412, 274, 274, 857, 0, 0, 0,
	4810, 0, 1271, 1271, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 879,
	0, 0, 1271, 0, 0, 0, 272, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 852, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 1271, 1271, 1271,
	1271, 0, 0, 0, 0, 0, 859, 0, 0, 860,
	0, 1271, 2012, 0, 0, 0, 0, 0, 0, 274,
	0, 883, 0, 0, 0, 0, 763, 0, 2023, 0,
	1516, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 1271, 0, 274, 0, 4810, 4961, 0, 0, 0,
	0, 0, 0, 4965, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 1996, 0, 278, 0,
	0, 1319, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 1271, 0, 1271, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 877, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 823, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	861, 823, 0, 112, 0, 112, 0, 112, 0, 0,
	0, 863, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 1271, 1996, 0, 0, 0, 0, 0, 0,
	0, 0, 864, 0, 0, 0, 0, 0, 1996, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 1090,
	112, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 873, 0, 0, 272, 0, 112, 0, 112, 0,
	0, 0, 1271, 762, 0, 1271, 0, 0, 0, 0,
	0, 112, 0, 112, 0, 0, 850, 0, 874, 0,
	0, 274, 0, 1996, 1996, 0, 0, 865, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 274, 274, 274,
	0, 0, 0, 0, 0, 1996, 274, 272, 1996, 0,
	0, 0, 871, 274, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 866,
	0, 0, 0, 867, 886, 0, 885, 0, 112, 868,
	274, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 869, 0, 0, 0, 0, 878, 2301,
	0, 0, 0, 2308, 887, 0, 884, 0, 1271, 0,
	0, 0, 764, 0, 0, 2321, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 272, 0, 0, 0, 0,
	0, 2333, 0, 2333, 0, 0, 0, 0, 0, 2340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1070, 0, 0, 1271, 1271,
	0, 0, 0, 0, 2308, 0, 272, 2368, 0, 0,
	0, 0, 0, 0, 0, 0, 1895, 0, 0, 0,
	1271, 0, 0, 1271, 0, 0, 0, 1271, 2388, 0,
	0, 0, 0, 0, 1901, 0, 0, 1271, 1907, 0,
	0, 0, 2404, 0, 2406, 0, 2408, 0, 2410, 0,
	2411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2438, 2439, 2440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 1412, 1412, 274, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1149, 1994, 0,
	1997, 0, 112, 0, 0, 0, 0, 1996, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 274, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 1412,
	0, 1412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 274, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 1412, 1412, 1412, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 274, 0, 274, 0, 274, 0, 274, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 274, 274, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2871, 0,
	0, 1319, 0, 0, 0, 1319, 0, 1319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1409, 0, 2321, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1573, 0, 0, 0, 0,
	0, 0, 1573, 0, 0, 0, 0, 0, 0, 0,
	1090, 0, 1090, 0, 0, 0, 0, 0, 1573, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 1573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2308, 0,
	0, 0, 0, 0, 0, 0, 0, 2321, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	274, 0, 0, 0, 274, 0, 274, 0, 0, 0,
	0, 3157, 0, 274, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	3168, 0, 3171, 0, 0, 0, 0, 0, 0, 0,
	1070, 0, 0, 1070, 1070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 3203, 1516, 3205, 1516, 2573,
	0, 0, 0, 0, 3211, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1090,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1901,
	0, 0, 0, 1901, 0, 0, 0, 0, 0, 0,
	1319, 0, 0, 0, 274, 1412, 0, 0, 3240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1254, 274, 0, 274,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 1997, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 823, 0, 0, 0, 0,
	0, 0, 823, 0, 0, 1412, 0, 1412, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 1410, 0, 0, 0, 274,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 274, 274, 274, 274, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 0, 0,
	0, 1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871,
	0, 0, 0, 0, 0, 0, 3441, 0, 0, 0,
	0, 0, 0, 1862, 1856, 0, 0, 0, 0, 0,
	0, 1828, 1573, 1573, 0, 0, 0, 0, 0, 0,
	1875, 1409, 0, 0, 112, 0, 0, 112, 0, 112,
	0, 0, 0, 0, 0, 1319, 0, 1881, 0, 1516,
	1516, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	3486, 0, 0, 0, 0, 112, 0, 0, 112, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3536, 3538, 0, 0, 2321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1573, 0, 1573, 0,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 1851, 1852, 1853, 0, 0, 1573, 1573,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	112, 1573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 1573, 1573, 1573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 1876, 0, 0, 0, 1412, 823,
	1855, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 1873, 0,
	0, 0, 0, 0, 0, 1842, 1843, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3652, 0, 1864, 0, 3656, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 2573, 274, 274,
	0, 0, 0, 0, 1874, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1901, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3747, 0, 1516, 0, 0, 0, 0, 0, 274,
	274, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 1410, 0, 0, 274, 0, 0, 0, 1409,
	3760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 1409,
	1880, 0, 0, 274, 0, 0, 0, 0, 1412, 0,
	1412, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 274, 1412, 0, 0, 1409, 0, 0, 0, 0,
	274, 0, 0, 1412, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 1574, 0, 0, 0, 1254, 0, 0, 0,
	1410, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 1840, 1846, 1868, 1845, 1841, 1412, 1838, 1836,
	1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 1412,
	0, 1412, 0, 0, 0, 3778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	274, 1412, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 1574, 0, 1574, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 1574, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 0, 0, 0, 112, 112, 0, 112, 112, 112,
	0, 0, 1574, 0, 1574, 1574, 1574, 0, 1412, 0,
	1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 0,
	0, 0, 0, 0, 0, 1412, 0, 0, 0, 0,
	0, 0, 1862, 1856, 1409, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	112, 112, 0, 112, 112, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 2321, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 823, 0,
	2321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1573, 0, 0, 0, 1410, 2321, 0, 0, 0,
	0, 4074, 0, 0, 1573, 0, 1573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 1573, 0, 1254, 0, 0, 1090, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 0, 0, 0,
	0, 1833, 112, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 1876, 0, 0, 0, 0, 1410, 1855,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 1873, 0, 0,
	0, 0, 0, 0, 1842, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 1412, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 1412, 1412, 1412, 4265, 0, 0, 0, 1412, 1412,
	1412, 1849, 0, 0, 0, 0, 0, 1254, 1254, 0,
	2321, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 274, 0, 1412, 0, 0, 1867, 0,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4364, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0, 0,
	1409, 0, 0, 0, 3312, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 1412, 1409, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 1412, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 1412, 0, 0, 0, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4460, 1412, 0, 0, 274,
	0, 0, 274, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 1254, 0, 0, 0, 0, 1825, 1826,
	0, 1858, 1859, 1860, 1869, 1870, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 1412, 0, 0, 0,
	1862, 1856, 0, 0, 0, 0, 2321, 0, 1828, 0,
	0, 0, 0, 112, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 1409, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 1881, 1412, 274, 0, 0, 0,
	1412, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 1573, 0, 0, 0, 0, 0, 1412,
	1412, 1412, 1412, 1412, 0, 0, 0, 1573, 0, 1573,
	0, 0, 0, 1409, 1412, 0, 0, 0, 0, 0,
	823, 1573, 0, 0, 0, 0, 0, 0, 0, 4588,
	1516, 0, 1573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	1851, 1852, 1853, 0, 0, 0, 0, 0, 112, 1833,
	0, 0, 0, 0, 1254, 0, 1573, 1412, 0, 1412,
	0, 0, 1254, 0, 0, 0, 0, 0, 1573, 0,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 1866, 0,
	0, 1876, 0, 0, 274, 0, 0, 1855, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 1873, 0, 1409, 0, 0,
	1409, 0, 1842, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 274, 4702, 0, 0, 0,
	0, 0, 0, 112, 1412, 1412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 1410, 0, 0, 1863,
	0, 0, 0, 0, 0, 1412, 0, 0, 1412, 0,
	1878, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 4752, 0, 0, 0, 112, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 274,
	0, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4793, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 1825, 1826, 0, 1858, 1859, 1860, 1869,
	1870, 1871, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 0, 274, 0, 0, 1862, 1856, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 1847, 0,
	1412, 0, 0, 0, 0, 0, 0, 1844, 1865, 0,
	1412, 0, 1410, 0, 0, 0, 0, 0, 1839, 1840,
	1846, 1868, 1845, 1841, 0, 1838, 1836, 1837, 1829, 1830,
	1831, 1832, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 3311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 1574, 0,
	0, 0, 1410, 274, 0, 0, 0, 0, 0, 0,
	1574, 0, 0, 0, 1850, 1851, 1852, 1853, 0, 0,
	0, 1574, 0, 1573, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2573, 0, 1866, 274, 0, 1876, 0, 0, 0,
	0, 0, 1855, 1857, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 1872, 1574,
	1873, 0, 0, 0, 0, 1573, 0, 1842, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	1573, 1573, 1573, 0, 0, 0, 0, 1573, 1573, 1573,
	1848, 0, 0, 0, 0, 0, 1410, 0, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 1826, 0,
	1858, 1859, 1860, 1869, 1870, 1871, 1874, 0, 0, 0,
	1409, 0, 0, 112, 112, 0, 0, 0, 0, 1862,
	1856, 0, 0, 0, 1863, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 1878, 1875, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 112, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1409, 1409, 0, 1409, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 1573, 0, 0, 0, 1850, 1851,
	1852, 1853, 0, 0, 1409, 0, 0, 0, 1833, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 112, 0, 1866, 0, 0,
	1876, 112, 0, 0, 0, 0, 1855, 1857, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 1872, 0, 1873, 0, 0, 0, 0, 0,
	0, 1842, 1843, 1865, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 1839, 1840, 1846, 1868, 1845, 1841, 1864,
	1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 0,
	0, 0, 0, 0, 1848, 0, 0, 3308, 0, 0,
	0, 0, 0, 0, 1573, 1573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 1409, 0, 0, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 1573,
	1573, 1573, 1573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 1409, 0, 0, 1825, 1826, 0, 1858,
	1859, 1860, 1869, 1870, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 1856,
	0, 0, 0, 1409, 0, 1854, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 1574, 0, 1409, 0, 1573, 0,
	0, 1847, 0, 0, 0, 1867, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	1574, 1574, 0, 1409, 0, 0, 1574, 1574, 1574, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 1850, 1851, 1852,
	1853, 0, 0, 0, 0, 0, 1409, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 1573, 1573, 0, 0, 1839, 1840, 1846,
	1868, 1845, 1841, 0, 1838, 1836, 1837, 1829, 1830, 1831,
	1832, 1834, 1835, 0, 0, 0, 1866, 0, 0, 1876,
	0, 3307, 0, 0, 0, 1855, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 1873, 1409, 0, 0, 1573, 0, 0,
	1842, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 1410, 1848, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 1574, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 1574, 1574,
	1574, 1574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 1840, 1846, 1868,
	1845, 1841, 0, 1838, 1836, 1837, 1829, 1830, 1831, 1832,
	1834, 1835, 0, 0, 0, 1410, 0, 1574, 0, 0,
	3306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 1413, 289, 290, 1414, 1415, 1416,
	0, 1417, 644, 1418, 1419, 1420, 1421, 291, 292, 1211,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 1422, 649, 301, 302, 303, 304, 305,
	306, 1423, 1424, 0, 307, 650, 651, 652, 1425, 308,
	309, 653, 1426, 1493, 1427, 310, 311, 312, 313, 314,
	315, 316, 0, 1428, 318, 319, 320, 317, 321, 1429,
	322, 0, 323, 324, 325, 326, 327, 328, 1430, 329,
	330, 331, 1212, 332, 333, 334, 1431, 1432, 1434, 1433,
	1435, 1436, 1437, 335, 336, 337, 338, 339, 0, 340,
	342, 654, 655, 1438, 345, 341, 343, 1439, 346, 344,
	347, 1440, 348, 349, 350, 1441, 1442, 351, 352, 353,
	1443, 354, 355, 1444, 356, 357, 358, 1445, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 1446, 279, 1447, 1574, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 1574, 376,
	1448, 377, 378, 379, 1449, 1450, 1213, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 1451, 392, 662, 1452, 663, 393, 1453, 394, 395,
	396, 397, 398, 664, 665, 666, 481, 1215, 399, 400,
	1454, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 1455, 1214, 408, 667, 668, 1456, 669, 1457,
	409, 410, 1216, 670, 1217, 411, 412, 413, 1218, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1458,
	421, 423, 422, 1459, 424, 671, 1219, 425, 426, 1220,
	1460, 427, 428, 429, 430, 431, 432, 435, 1461, 1462,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1221,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1222, 477, 465, 1463, 281,
	1223, 478, 479, 1464, 672, 480, 673, 482, 483, 1465,
	0, 484, 0, 1466, 1467, 486, 487, 488, 1468, 1469,
	489, 490, 674, 1224, 491, 1225, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1470,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 1471, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 1472, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 1473, 544, 545, 546,
	1226, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 1474, 569, 570, 568, 571, 572, 573, 1475, 574,
	575, 557, 558, 576, 577, 1227, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 1476, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 1477, 601, 602, 0, 598, 589, 1478,
	603, 604, 605, 606, 607, 608, 609, 610, 1479, 611,
	685, 686, 687, 688, 1480, 620, 1481, 612, 613, 614,
	689, 615, 690, 1482, 616, 617, 618, 619, 0, 621,
	622, 1483, 1484, 623, 624, 625, 627, 628, 626, 629,
	1485, 630, 1486, 0, 631, 632, 633, 691, 692, 693,
	1487, 635, 634, 636, 694, 637, 638, 1488, 1489, 1490,
	1491, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 2800, 0, 0, 0, 0, 0,
	0, 0, 2801, 282, 284, 283, 285, 286, 287, 288,
	1413, 289, 290, 1414, 1415, 1416, 0, 1417, 644, 1418,
	1419, 1420, 1421, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 1422,
	649, 301, 302, 303, 304, 305, 306, 1423, 1424, 0,
	307, 650, 651, 652, 1425, 308, 309, 653, 1426, 1493,
	1427, 310, 311, 312, 313, 314, 315, 316, 0, 1428,
	318, 319, 320, 317, 321, 1429, 322, 0, 323, 324,
	325, 326, 327, 328, 1430, 329, 330, 331, 1212, 332,
	333, 334, 1431, 1432, 1434, 1433, 1435, 1436, 1437, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 1438,
	345, 341, 343, 1439, 346, 344, 347, 1440, 348, 349,
	350, 1441, 1442, 351, 352, 353, 1443, 354, 355, 1444,
	356, 357, 358, 1445, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 1446, 279, 1447, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 1448, 377, 378, 379,
	1449, 1450, 1213, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 1451, 392, 662,
	1452, 663, 393, 1453, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 1215, 399, 400, 1454, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 1455, 1214,
	408, 667, 668, 1456, 669, 1457, 409, 410, 1216, 670,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1458, 421, 423, 422, 1459,
	424, 671, 1219, 425, 426, 1220, 1460, 427, 428, 429,
	430, 431, 432, 435, 1461, 1462, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 1463, 281, 1223, 478, 479, 1464,
	672, 480, 673, 482, 483, 1465, 0, 484, 0, 1466,
	1467, 486, 487, 488, 1468, 1469, 489, 490, 674, 1224,
	491, 1225, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1470, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 1471, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 1472, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 1473, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 1474, 569, 570,
	568, 571, 572, 573, 1475, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 1476, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 1477,
	601, 602, 0, 598, 589, 1478, 603, 604, 605, 606,
	607, 608, 609, 610, 1479, 611, 685, 686, 687, 688,
	1480, 620, 1481, 612, 613, 614, 689, 615, 690, 1482,
	616, 617, 618, 619, 0, 621, 622, 1483, 1484, 623,
	624, 625, 627, 628, 626, 629, 1485, 630, 1486, 0,
	631, 632, 633, 691, 692, 693, 1487, 635, 634, 636,
	694, 637, 638, 1488, 1489, 1490, 1491, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 3787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3789, 282, 284, 283,
	285, 286, 287, 288, 1413, 289, 290, 1414, 1415, 1416,
	0, 1417, 644, 1418, 1419, 1420, 1421, 291, 292, 1211,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 1422, 649, 301, 302, 303, 304, 305,
	306, 1423, 1424, 0, 307, 650, 651, 652, 1425, 308,
	309, 653, 1426, 1493, 1427, 310, 311, 312, 313, 314,
	315, 316, 0, 1428, 318, 319, 320, 317, 321, 1429,
	322, 0, 323, 324, 325, 326, 327, 328, 1430, 329,
	330, 331, 1212, 332, 333, 334, 1431, 1432, 1434, 1433,
	1435, 1436, 1437, 335, 336, 337, 338, 339, 0, 340,
	342, 654, 655, 1438, 345, 341, 343, 1439, 346, 344,
	347, 1440, 348, 349, 350, 1441, 1442, 351, 352, 353,
	1443, 354, 355, 1444, 356, 357, 358, 1445, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 1446, 279, 1447, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	1448, 377, 378, 379, 1449, 1450, 1213, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 1451, 392, 662, 1452, 663, 393, 1453, 394, 395,
	396, 397, 398, 664, 665, 666, 481, 1215, 399, 400,
	1454, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 1455, 1214, 408, 667, 668, 1456, 669, 1457,
	409, 410, 1216, 670, 1217, 411, 412, 413, 1218, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1458,
	421, 423, 422, 1459, 424, 671, 1219, 425, 426, 1220,
	1460, 427, 428, 429, 430, 431, 432, 435, 1461, 1462,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1221,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1222, 477, 465, 1463, 281,
	1223, 478, 479, 1464, 672, 480, 673, 482, 483, 1465,
	0, 484, 0, 1466, 1467, 486, 487, 488, 1468, 1469,
	489, 490, 674, 1224, 491, 1225, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1470,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 1471, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 1472, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 1473, 544, 545, 546,
	1226, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 1474, 569, 570, 568, 571, 572, 573, 1475, 574,
	575, 557, 558, 576, 577, 1227, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 1476, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 1477, 601, 602, 0, 598, 589, 1478,
	603, 604, 605, 606, 607, 608, 609, 610, 1479, 611,
	685, 686, 687, 688, 1480, 620, 1481, 612, 613, 614,
	689, 615, 690, 1482, 616, 617, 618, 619, 0, 621,
	622, 1483, 1484, 623, 624, 625, 627, 628, 626, 629,
	1485, 630, 1486, 0, 631, 632, 633, 691, 692, 693,
	1487, 635, 634, 636, 694, 637, 638, 1488, 1489, 1490,
	1491, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4192, 282, 284, 283, 285, 286,
	287, 288, 1413, 289, 290, 1414, 1415, 1416, 0, 1417,
	644, 1418, 1419, 1420, 1421, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 646, 0, 299, 647, 300,
	648, 1422, 649, 301, 302, 303, 304, 305, 306, 1423,
	1424, 0, 307, 650, 651, 652, 1425, 308, 309, 653,
	1426, 1493, 1427, 310, 311, 312, 313, 314, 315, 316,
	0, 1428, 318, 319, 320, 317, 321, 1429, 322, 0,
	323, 324, 325, 326, 327, 328, 1430, 329, 330, 331,
	1212, 332, 333, 334, 1431, 1432, 1434, 1433, 1435, 1436,
	1437, 335, 336, 337, 338, 339, 0, 340, 342, 654,
	655, 1438, 345, 341, 343, 1439, 346, 344, 347, 1440,
	348, 349, 350, 1441, 1442, 351, 352, 353, 1443, 354,
	355, 1444, 356, 357, 358, 1445, 359, 360, 656, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	657, 658, 372, 1446, 279, 1447, 0, 0, 0, 0,
	373, 374, 375, 659, 0, 0, 0, 376, 1448, 377,
	378, 379, 1449, 1450, 1213, 380, 381, 382, 660, 661,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 1451,
	392, 662, 1452, 663, 393, 1453, 394, 395, 396, 397,
	398, 664, 665, 666, 481, 1215, 399, 400, 1454, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	1455, 1214, 408, 667, 668, 1456, 669, 1457, 409, 410,
	1216, 670, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1458, 421, 423,
	422, 1459, 424, 671, 1219, 425, 426, 1220, 1460, 427,
	428, 429, 430, 431, 432, 435, 1461, 1462, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 1463, 281, 1223, 478,
	479, 1464, 672, 480, 673, 482, 483, 1465, 0, 484,
	0, 1466, 1467, 486, 487, 488, 1468, 1469, 489, 490,
	674, 1224, 491, 1225, 675, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1470, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 678, 511,
	679, 512, 513, 1471, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 680, 523, 524, 526, 525, 527,
	1472, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 1473, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 681, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 1474,
	569, 570, 568, 571, 572, 573, 1475, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 682, 0, 585, 1476, 586, 587, 588, 590, 559,
	591, 596, 597, 683, 592, 593, 594, 595, 684, 599,
	600, 1477, 601, 602, 0, 598, 589, 1478, 603, 604,
	605, 606, 607, 608, 609, 610, 1479, 611, 685, 686,
	687, 688, 1480, 620, 1481, 612, 613, 614, 689, 615,
	690, 1482, 616, 617, 618, 619, 0, 621, 622, 1483,
	1484, 623, 624, 625, 627, 628, 626, 629, 1485, 630,
	1486, 0, 631, 632, 633, 691, 692, 693, 1487, 635,
	634, 636, 694, 637, 638, 1488, 1489, 1490, 1491, 639,
	640, 695, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4190, 282, 284, 283, 285, 286, 287, 288,
	1413, 289, 290, 1414, 1415, 1416, 0, 1417, 644, 1418,
	1419, 1420, 1421, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 1422,
	649, 301, 302, 303, 304, 305, 306, 1423, 1424, 0,
	307, 650, 651, 652, 1425, 308, 309, 653, 1426, 1493,
	1427, 310, 311, 312, 313, 314, 315, 316, 0, 1428,
	318, 319, 320, 317, 321, 1429, 322, 0, 323, 324,
	325, 326, 327, 328, 1430, 329, 330, 331, 1212, 332,
	333, 334, 1431, 1432, 1434, 1433, 1435, 1436, 1437, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 1438,
	345, 341, 343, 1439, 346, 344, 347, 1440, 348, 349,
	350, 1441, 1442, 351, 352, 353, 1443, 354, 355, 1444,
	356, 357, 358, 1445, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 1446, 279, 1447, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 1448, 377, 378, 379,
	1449, 1450, 1213, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 1451, 392, 662,
	1452, 663, 393, 1453, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 1215, 399, 400, 1454, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 1455, 1214,
	408, 667, 668, 1456, 669, 1457, 409, 410, 1216, 670,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1458, 421, 423, 422, 1459,
	424, 671, 1219, 425, 426, 1220, 1460, 427, 428, 429,
	430, 431, 432, 435, 1461, 1462, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 1463, 281, 1223, 478, 479, 1464,
	672, 480, 673, 482, 483, 1465, 0, 484, 0, 1466,
	1467, 486, 487, 488, 1468, 1469, 489, 490, 674, 1224,
	491, 1225, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1470, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 1471, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 1472, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 1473, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 1474, 569, 570,
	568, 571, 572, 573, 1475, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 1476, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 1477,
	601, 602, 0, 598, 589, 1478, 603, 604, 605, 606,
	607, 608, 609, 610, 1479, 611, 685, 686, 687, 688,
	1480, 620, 1481, 612, 613, 614, 689, 615, 690, 1482,
	616, 617, 618, 619, 0, 621, 622, 1483, 1484, 623,
	624, 625, 627, 628, 626, 629, 1485, 630, 1486, 0,
	631, 632, 633, 691, 692, 693, 1487, 635, 634, 636,
	694, 637, 638, 1488, 1489, 1490, 1491, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4409, 282, 284, 283, 285,
	286, 287, 288, 1413, 289, 290, 1414, 1415, 1416, 0,
	1417, 644, 1418, 1419, 1420, 1421, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 1422, 649, 301, 302, 303, 304, 305, 306,
	1423, 1424, 0, 307, 650, 651, 652, 1425, 308, 309,
	653, 1426, 1493, 1427, 310, 311, 312, 313, 314, 315,
	316, 0, 1428, 318, 319, 320, 317, 321, 1429, 322,
	0, 323, 324, 325, 326, 327, 328, 1430, 329, 330,
	331, 1212, 332, 333, 334, 1431, 1432, 1434, 1433, 1435,
	1436, 1437, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 1438, 345, 341, 343, 1439, 346, 344, 347,
	1440, 348, 349, 350, 1441, 1442, 351, 352, 353, 1443,
	354, 355, 1444, 356, 357, 358, 1445, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 1446, 279, 1447, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 1448,
	377, 378, 379, 1449, 1450, 1213, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	1451, 392, 662, 1452, 663, 393, 1453, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 1215, 399, 400, 1454,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 1455, 1214, 408, 667, 668, 1456, 669, 1457, 409,
	410, 1216, 670, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1458, 421,
	423, 422, 1459, 424, 671, 1219, 425, 426, 1220, 1460,
	427, 428, 429, 430, 431, 432, 435, 1461, 1462, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 1463, 281, 1223,
	478, 479, 1464, 672, 480, 673, 482, 483, 1465, 0,
	484, 0, 1466, 1467, 486, 487, 488, 1468, 1469, 489,
	490, 674, 1224, 491, 1225, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 1470, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 1471, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 1472, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 1473, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	1474, 569, 570, 568, 571, 572, 573, 1475, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 1476, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 1477, 601, 602, 0, 598, 589, 1478, 603,
	604, 605, 606, 607, 608, 609, 610, 1479, 611, 685,
	686, 687, 688, 1480, 620, 1481, 612, 613, 614, 689,
	615, 690, 1482, 616, 617, 618, 619, 0, 621, 622,
	1483, 1484, 623, 624, 625, 627, 628, 626, 629, 1485,
	630, 1486, 0, 631, 632, 633, 691, 692, 693, 1487,
	635, 634, 636, 694, 637, 638, 1488, 1489, 1490, 1491,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4274, 282,
	284, 283, 285, 286, 287, 288, 1413, 289, 290, 1414,
	1415, 1416, 0, 1417, 644, 1418, 1419, 1420, 1421, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 1422, 649, 301, 302, 303,
	304, 305, 306, 1423, 1424, 0, 307, 650, 651, 652,
	1425, 308, 309, 653, 1426, 1493, 1427, 310, 311, 312,
	313, 314, 315, 316, 0, 1428, 318, 319, 320, 317,
	321, 1429, 322, 0, 323, 324, 325, 326, 327, 328,
	1430, 329, 330, 331, 1212, 332, 333, 334, 1431, 1432,
	1434, 1433, 1435, 1436, 1437, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 1438, 345, 341, 343, 1439,
	346, 344, 347, 1440, 348, 349, 350, 1441, 1442, 351,
	352, 353, 1443, 354, 355, 1444, 356, 357, 358, 1445,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 657, 658, 372, 1446, 279, 1447,
	0, 0, 0, 0, 373, 374, 375, 659, 0, 0,
	0, 376, 1448, 377, 378, 379, 1449, 1450, 1213, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 1451, 392, 662, 1452, 663, 393, 1453,
	394, 395, 396, 397, 398, 664, 665, 666, 481, 1215,
	399, 400, 1454, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 1455, 1214, 408, 667, 668, 1456,
	669, 1457, 409, 410, 1216, 670, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1458, 421, 423, 422, 1459, 424, 671, 1219, 425,
	426, 1220, 1460, 427, 428, 429, 430, 431, 432, 435,
	1461, 1462, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1463, 281, 1223, 478, 479, 1464, 672, 480, 673, 482,
	483, 1465, 0, 484, 0, 1466, 1467, 486, 487, 488,
	1468, 1469, 489, 490, 674, 1224, 491, 1225, 675, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1470, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 678, 511, 679, 512, 513, 1471, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 680, 523,
	524, 526, 525, 527, 1472, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 1473, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 681, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 1474, 569, 570, 568, 571, 572, 573,
	1475, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 1476, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 684, 599, 600, 1477, 601, 602, 0, 598,
	589, 1478, 603, 604, 605, 606, 607, 608, 609, 610,
	1479, 611, 685, 686, 687, 688, 1480, 620, 1481, 612,
	613, 614, 689, 615, 690, 1482, 616, 617, 618, 619,
	0, 621, 622, 1483, 1484, 623, 624, 625, 627, 628,
	626, 629, 1485, 630, 1486, 0, 631, 632, 633, 691,
	692, 693, 1487, 635, 634, 636, 694, 637, 638, 1488,
	1489, 1490, 1491, 639, 640, 695, 641, 642, 643, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4120, 282, 284, 283, 285, 286, 287, 288, 1413,
	289, 290, 1414, 1415, 1416, 0, 1417, 644, 1418, 1419,
	1420, 1421, 291, 292, 1211, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 1422, 649,
	301, 302, 303, 304, 305, 306, 1423, 1424, 0, 307,
	650, 651, 652, 1425, 308, 309, 653, 1426, 1493, 1427,
	310, 311, 312, 313, 314, 315, 316, 0, 1428, 318,
	319, 320, 317, 321, 1429, 322, 0, 323, 324, 325,
	326, 327, 328, 1430, 329, 330, 331, 1212, 332, 333,
	334, 1431, 1432, 1434, 1433, 1435, 1436, 1437, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 1438, 345,
	341, 343, 1439, 346, 344, 347, 1440, 348, 349, 350,
	1441, 1442, 351, 352, 353, 1443, 354, 355, 1444, 356,
	357, 358, 1445, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	1446, 279, 1447, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 1448, 377, 378, 379, 1449,
	1450, 1213, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 1451, 392, 662, 1452,
	663, 393, 1453, 394, 395, 396, 397, 398, 664, 665,
	666, 481, 1215, 399, 400, 1454, 401, 402, 403, 404,
	0, 0, 0, 280, 405, 406, 407, 1455, 1214, 408,
	667, 668, 1456, 669, 1457, 409, 410, 1216, 670, 1217,
	411, 412, 413, 1218, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1458, 421, 423, 422, 1459, 424,
	671, 1219, 425, 426, 1220, 1460, 427, 428, 429, 430,
	431, 432, 435, 1461, 1462, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1221, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1222, 477, 465, 1463, 281, 1223, 478, 479, 1464, 672,
	480, 673, 482, 483, 1465, 0, 484, 0, 1466, 1467,
	486, 487, 488, 1468, 1469, 489, 490, 674, 1224, 491,
	1225, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1470, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	1471, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 1472, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 1473, 544, 545, 546, 1226, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 1474, 569, 570, 568,
	571, 572, 573, 1475, 574, 575, 557, 558, 576, 577,
	1227, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 1476, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 1477, 601,
	602, 0, 598, 589, 1478, 603, 604, 605, 606, 607,
	608, 609, 610, 1479, 611, 685, 686, 687, 688, 1480,
	620, 1481, 612, 613, 614, 689, 615, 690, 1482, 616,
	617, 618, 619, 0, 621, 622, 1483, 1484, 623, 624,
	625, 627, 628, 626, 629, 1485, 630, 1486, 0, 631,
	632, 633, 691, 692, 693, 1487, 635, 634, 636, 694,
	637, 638, 1488, 1489, 1490, 1491, 639, 640, 695, 641,
	642, 643, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3805, 282, 284, 283, 285, 286,
	287, 288, 1413, 289, 290, 1414, 1415, 1416, 0, 1417,
	644, 1418, 1419, 1420, 1421, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 646, 0, 299, 647, 300,
	648, 1422, 649, 301, 302, 303, 304, 305, 306, 1423,
	1424, 0, 307, 650, 651, 652, 1425, 308, 309, 653,
	1426, 1493, 1427, 310, 311, 312, 313, 314, 315, 316,
	0, 1428, 318, 319, 320, 317, 321, 1429, 322, 0,
	323, 324, 325, 326, 327, 328, 1430, 329, 330, 331,
	1212, 332, 333, 334, 1431, 1432, 1434, 1433, 1435, 1436,
	1437, 335, 336, 337, 338, 339, 0, 340, 342, 654,
	655, 1438, 345, 341, 343, 1439, 346, 344, 347, 1440,
	348, 349, 350, 1441, 1442, 351, 352, 353, 1443, 354,
	355, 1444, 356, 357, 358, 1445, 359, 360, 656, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	657, 658, 372, 1446, 279, 1447, 0, 0, 0, 0,
	373, 374, 375, 659, 0, 0, 0, 376, 1448, 377,
	378, 379, 1449, 1450, 1213, 380, 381, 382, 660, 661,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 1451,
	392, 662, 1452, 663, 393, 1453, 394, 395, 396, 397,
	398, 664, 665, 666, 481, 1215, 399, 400, 1454, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	1455, 1214, 408, 667, 668, 1456, 669, 1457, 409, 410,
	1216, 670, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1458, 421, 423,
	422, 1459, 424, 671, 1219, 425, 426, 1220, 1460, 427,
	428, 429, 430, 431, 432, 435, 1461, 1462, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 1463, 281, 1223, 478,
	479, 1464, 672, 480, 673, 482, 483, 1465, 0, 484,
	0, 1466, 1467, 486, 487, 488, 1468, 1469, 489, 490,
	674, 1224, 491, 1225, 675, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1470, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 678, 511,
	679, 512, 513, 1471, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 680, 523, 524, 526, 525, 527,
	1472, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 1473, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 681, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 1474,
	569, 570, 568, 571, 572, 573, 1475, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 682, 0, 585, 1476, 586, 587, 588, 590, 559,
	591, 596, 597, 683, 592, 593, 594, 595, 684, 599,
	600, 1477, 601, 602, 0, 598, 589, 1478, 603, 604,
	605, 606, 607, 608, 609, 610, 1479, 611, 685, 686,
	687, 688, 1480, 620, 1481, 612, 613, 614, 689, 615,
	690, 1482, 616, 617, 618, 619, 0, 621, 622, 1483,
	1484, 623, 624, 625, 627, 628, 626, 629, 1485, 630,
	1486, 0, 631, 632, 633, 691, 692, 693, 1487, 635,
	634, 636, 694, 637, 638, 1488, 1489, 1490, 1491, 639,
	640, 695, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3625, 282, 284,
	283, 285, 286, 287, 288, 1413, 289, 290, 1414, 1415,
	1416, 0, 1417, 644, 1418, 1419, 1420, 1421, 291, 292,
	1211, 293, 294, 295, 296, 297, 298, 645, 646, 0,
	299, 647, 300, 648, 1422, 649, 301, 302, 303, 304,
	305, 306, 1423, 1424, 0, 307, 650, 651, 652, 1425,
	308, 309, 653, 1426, 1493, 1427, 310, 311, 312, 313,
	314, 315, 316, 0, 1428, 318, 319, 320, 317, 321,
	1429, 322, 0, 323, 324, 325, 326, 327, 328, 1430,
	329, 330, 331, 1212, 332, 333, 334, 1431, 1432, 1434,
	1433, 1435, 1436, 1437, 335, 336, 337, 338, 339, 0,
	340, 342, 654, 655, 1438, 345, 341, 343, 1439, 346,
	344, 347, 1440, 348, 349, 350, 1441, 1442, 351, 352,
	353, 1443, 354, 355, 1444, 356, 357, 358, 1445, 359,
	360, 656, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 657, 658, 372, 1446, 279, 1447, 0,
	0, 0, 0, 373, 374, 375, 659, 0, 0, 0,
	376, 1448, 377, 378, 379, 1449, 1450, 1213, 380, 381,
	382, 660, 661, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 1451, 392, 662, 1452, 663, 393, 1453, 394,
	395, 396, 397, 398, 664, 665, 666, 481, 1215, 399,
	400, 1454, 401, 402, 403, 404, 0, 0, 0, 280,
	405, 406, 407, 1455, 1214, 408, 667, 668, 1456, 669,
	1457, 409, 410, 1216, 670, 1217, 411, 412, 413, 1218,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1458, 421, 423, 422, 1459, 424, 671, 1219, 425, 426,
	1220, 1460, 427, 428, 429, 430, 431, 432, 435, 1461,
	1462, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1221, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1222, 477, 465, 1463,
	281, 1223, 478, 479, 1464, 672, 480, 673, 482, 483,
	1465, 0, 484, 0, 1466, 1467, 486, 487, 488, 1468,
	1469, 489, 490, 674, 1224, 491, 1225, 675, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1470, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 678, 511, 679, 512, 513, 1471, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 680, 523, 524,
	526, 525, 527, 1472, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 1473, 544, 545,
	546, 1226, 547, 548, 549, 550, 551, 681, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 1474, 569, 570, 568, 571, 572, 573, 1475,
	574, 575, 557, 558, 576, 577, 1227, 578, 579, 580,
	581, 582, 583, 584, 682, 0, 585, 1476, 586, 587,
	588, 590, 559, 591, 596, 597, 683, 592, 593, 594,
	595, 684, 599, 600, 1477, 601, 602, 0, 598, 589,
	1478, 603, 604, 605, 606, 607, 608, 609, 610, 1479,
	611, 685, 686, 687, 688, 1480, 620, 1481, 612, 613,
	614, 689, 615, 690, 1482, 616, 617, 618, 619, 0,
	621, 622, 1483, 1484, 623, 624, 625, 627, 628, 626,
	629, 1485, 630, 1486, 0, 631, 632, 633, 691, 692,
	693, 1487, 635, 634, 636, 694, 637, 638, 1488, 1489,
	1490, 1491, 639, 640, 695, 641, 642, 643, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2655, 282, 284, 283, 285, 286, 287, 288, 1413, 289,
	290, 1414, 1415, 1416, 0, 1417, 644, 1418, 1419, 1420,
	1421, 291, 292, 1211, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 1422, 649, 301,
	302, 303, 304, 305, 306, 1423, 1424, 0, 307, 650,
	651, 652, 1425, 308, 309, 653, 1426, 1493, 1427, 310,
	311, 312, 313, 314, 315, 316, 0, 1428, 318, 319,
	320, 317, 321, 1429, 322, 0, 323, 324, 325, 326,
	327, 328, 1430, 329, 330, 331, 1212, 332, 333, 334,
	1431, 1432, 1434, 1433, 1435, 1436, 1437, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 1438, 345, 341,
	343, 1439, 346, 344, 347, 1440, 348, 349, 350, 1441,
	1442, 351, 352, 353, 1443, 354, 355, 1444, 356, 357,
	358, 1445, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 1446,
	279, 1447, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 1448, 377, 378, 379, 1449, 1450,
	1213, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 1451, 392, 662, 1452, 663,
	393, 1453, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 1215, 399, 400, 1454, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 1455, 1214, 408, 667,
	668, 1456, 669, 1457, 409, 410, 1216, 670, 1217, 411,
	412, 413, 1218, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1458, 421, 423, 422, 1459, 424, 671,
	1219, 425, 426, 1220, 1460, 427, 428, 429, 430, 431,
	432, 435, 1461, 1462, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1221, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1222,
	477, 465, 1463, 281, 1223, 478, 479, 1464, 672, 480,
	673, 482, 483, 1465, 0, 484, 0, 1466, 1467, 486,
	487, 488, 1468, 1469, 489, 490, 674, 1224, 491, 1225,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 1470, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 1471,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 1472, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	1473, 544, 545, 546, 1226, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 1474, 569, 570, 568, 571,
	572, 573, 1475, 574, 575, 557, 558, 576, 577, 1227,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	1476, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 1477, 601, 602,
	0, 598, 589, 1478, 603, 604, 605, 606, 607, 608,
	609, 610, 1479, 611, 685, 686, 687, 688, 1480, 620,
	1481, 612, 613, 614, 689, 615, 690, 1482, 616, 617,
	618, 619, 0, 621, 622, 1483, 1484, 623, 624, 625,
	627, 628, 626, 629, 1485, 630, 1486, 0, 631, 632,
	633, 691, 692, 693, 1487, 635, 634, 636, 694, 637,
	638, 1488, 1489, 1490, 1491, 639, 640, 695, 641, 642,
	643, 0, 0, 0, 0, 1504, 0, 1407, 0, 0,
	0, 1512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2280, 282, 284, 283, 285, 286, 287,
	288, 1413, 289, 290, 1414, 1415, 1416, 0, 1417, 644,
	1418, 1419, 1420, 1421, 291, 292, 1211, 293, 294, 295,
	296, 297, 298, 645, 646, 0, 299, 647, 300, 648,
	1422, 649, 301, 302, 303, 304, 305, 306, 1423, 1424,
	0, 307, 650, 651, 652, 1425, 308, 309, 653, 1426,
	1493, 1427, 310, 311, 312, 313, 314, 315, 316, 0,
	1428, 318, 319, 320, 317, 321, 1429, 322, 0, 323,
	324, 325, 326, 327, 328, 1430, 329, 330, 331, 1212,
	332, 333, 334, 1431, 1432, 1434, 1433, 1435, 1436, 1437,
	335, 336, 337, 338, 339, 0, 340, 342, 654, 655,
	1438, 345, 341, 343, 1439, 346, 344, 347, 1440, 348,
	349, 350, 1441, 1442, 351, 352, 353, 1443, 354, 355,
	1444, 356, 357, 358, 1445, 359, 360, 656, 361, 362,
	363, 365, 367, 364, 1510, 368, 369, 370, 371, 657,
	658, 372, 1446, 279, 1447, 0, 0, 0, 0, 373,
	374, 375, 659, 0, 0, 0, 376, 1448, 377, 378,
	379, 1449, 1450, 1213, 380, 381, 382, 660, 661, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 1451, 392,
	662, 1452, 663, 393, 1453, 394, 395, 396, 397, 398,
	664, 665, 666, 481, 1215, 399, 400, 1454, 401, 402,
	403, 404, 0, 0, 0, 280, 405, 406, 407, 1455,
	1214, 408, 667, 668, 1456, 669, 1457, 409, 410, 1216,
	670, 1217, 411, 412, 413, 1218, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1458, 421, 423, 422,
	1459, 424, 671, 1219, 425, 426, 1220, 1460, 427, 428,
	429, 430, 431, 432, 435, 1461, 1462, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1221, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1222, 477, 465, 1463, 281, 1223, 478, 479,
	1464, 672, 480, 673, 482, 483, 1465, 0, 484, 0,
	1466, 1467, 486, 487, 488, 1468, 1469, 489, 490, 674,
	1224, 491, 1225, 675, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 1470, 503, 504, 676,
	505, 506, 507, 677, 508, 509, 510, 678, 511, 679,
	512, 513, 1471, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 680, 523, 524, 526, 525, 527, 1472,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 1511, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 1473, 544, 545, 546, 1226, 547, 548,
	549, 550, 551, 681, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 1474, 569,
	570, 568, 571, 572, 573, 1475, 574, 575, 557, 558,
	576, 577, 1227, 578, 579, 580, 581, 582, 583, 584,
	682, 0, 585, 1476, 586, 587, 588, 590, 559, 591,
	596, 597, 683, 592, 593, 594, 595, 684, 599, 600,
	1477, 601, 602, 0, 598, 589, 1478, 603, 604, 605,
	606, 607, 608, 1509, 610, 1479, 611, 685, 686, 687,
	688, 1480, 620, 1481, 612, 613, 614, 689, 615, 690,
	1482, 616, 617, 618, 619, 0, 621, 622, 1483, 1484,
	623, 624, 625, 627, 628, 626, 629, 1485, 630, 1486,
	0, 631, 632, 633, 691, 692, 693, 1487, 635, 634,
	636, 694, 637, 638, 1488, 1489, 1490, 1491, 639, 640,
	695, 641, 642, 643, 1404, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	1413, 289, 290, 1414, 1415, 1416, 0, 1417, 644, 1418,
	1419, 1420, 1421, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 1422,
	649, 301, 302, 303, 304, 305, 306, 1423, 1424, 0,
	307, 650, 651, 652, 1425, 308, 309, 653, 1426, 1493,
	1427, 310, 311, 312, 313, 314, 315, 316, 0, 1428,
	318, 319, 320, 317, 321, 1429, 322, 0, 323, 324,
	325, 326, 327, 328, 1430, 329, 330, 331, 1212, 332,
	333, 334, 1431, 1432, 1434, 1433, 1435, 1436, 1437, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 1438,
	345, 341, 343, 1439, 346, 344, 347, 1440, 348, 349,
	350, 1441, 1442, 351, 352, 353, 1443, 354, 355, 1444,
	356, 357, 358, 1445, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 1446, 279, 1447, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 1448, 377, 378, 379,
	1449, 1450, 1213, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 1451, 392, 662,
	1452, 663, 393, 1453, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 1215, 399, 400, 1454, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 1455, 1214,
	408, 667, 668, 1456, 669, 1457, 409, 410, 1216, 670,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1458, 421, 423, 422, 1459,
	424, 671, 1219, 425, 426, 1220, 1460, 427, 428, 429,
	430, 431, 432, 435, 1461, 1462, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 1463, 281, 1223, 478, 479, 1464,
	672, 480, 673, 482, 483, 1465, 0, 484, 0, 1466,
	1467, 486, 487, 488, 1468, 1469, 489, 490, 674, 1224,
	491, 1225, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1470, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 1471, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 1472, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 1473, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 1474, 569, 570,
	568, 571, 572, 573, 1475, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 1476, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 1477,
	601, 602, 0, 598, 589, 1478, 603, 604, 605, 606,
	607, 608, 609, 610, 1479, 611, 685, 686, 687, 688,
	1480, 620, 1481, 612, 613, 614, 689, 615, 690, 1482,
	616, 617, 618, 619, 0, 621, 622, 1483, 1484, 623,
	624, 625, 627, 628, 626, 629, 1485, 630, 1486, 0,
	631, 632, 633, 691, 692, 693, 1487, 635, 634, 636,
	694, 637, 638, 1488, 1489, 1490, 1491, 639, 640, 695,
	641, 642, 643, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 1413, 289, 290,
	1414, 1415, 1416, 0, 1417, 644, 1418, 1419, 1420, 1421,
	291, 292, 1211, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 1422, 649, 301, 302,
	303, 304, 305, 306, 1423, 1424, 0, 307, 650, 651,
	652, 1425, 308, 309, 653, 1426, 1493, 1427, 310, 311,
	312, 313, 314, 315, 316, 0, 1428, 318, 319, 320,
	317, 321, 1429, 322, 0, 323, 324, 325, 326, 327,
	328, 1430, 329, 330, 331, 1212, 332, 333, 334, 1431,
	1432, 1434, 1433, 1435, 1436, 1437, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 1438, 345, 341, 343,
	1439, 346, 344, 347, 1440, 348, 349, 350, 1441, 1442,
	351, 352, 353, 1443, 354, 355, 1444, 356, 357, 358,
	1445, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 1446, 279,
	1447, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 1448, 377, 378, 379, 1449, 1450, 1213,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 1451, 392, 662, 1452, 663, 393,
	1453, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	1215, 399, 400, 1454, 401, 402, 403, 404, 0, 0,
	0, 280, 405, 406, 407, 1455, 1214, 408, 667, 668,
	1456, 669, 1457, 409, 410, 1216, 670, 1217, 411, 412,
	413, 1218, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1458, 421, 423, 422, 1459, 424, 671, 1219,
	425, 426, 1220, 1460, 427, 428, 429, 430, 431, 432,
	435, 1461, 1462, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1221, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1222, 477,
	465, 1463, 281, 1223, 478, 479, 1464, 672, 480, 673,
	482, 483, 1465, 0, 484, 0, 1466, 1467, 486, 487,
	488, 1468, 1469, 489, 490, 674, 1224, 491, 1225, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1470, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 1471, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 1472, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 1473,
	544, 545, 546, 1226, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 1474, 569, 570, 568, 571, 572,
	573, 1475, 574, 575, 557, 558, 576, 577, 1227, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 1476,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 1477, 601, 602, 0,
	598, 589, 1478, 603, 604, 605, 606, 607, 608, 609,
	610, 1479, 611, 685, 686, 687, 688, 1480, 620, 1481,
	612, 613, 614, 689, 615, 690, 1482, 616, 617, 618,
	619, 0, 621, 622, 1483, 1484, 623, 624, 625, 627,
	628, 626, 629, 1485, 630, 1486, 0, 631, 632, 633,
	691, 692, 693, 1487, 635, 634, 636, 694, 637, 638,
	1488, 1489, 1490, 1491, 639, 640, 695, 641, 642, 643,
	2630, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 2627, 289, 290, 0,
	0, 0, 0, 0, 1171, 1135, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 1184,
	0, 299, 1191, 300, 1190, 0, 1201, 301, 302, 303,
	304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	1194, 340, 342, 1188, 1187, 1107, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 2628, 0, 351,
	1179, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1113, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 1126, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1186, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 1199, 1200, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 1136, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 1214, 408, 1181, 1182, 0,
	1142, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 1114, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1185, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 1115, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 1183, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1230, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 1101, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1195, 1196, 1197, 1198, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 1125, 616, 617, 618, 619,
	0, 621, 622, 0, 1108, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 691,
	1192, 1229, 2626, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 2629, 0, 0, 0, 0, 0, 0, 1131, 2625,
	0, 1091, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1171, 1135, 0, 0, 0,
	291, 292, 1211, 293, 294, 295, 296, 297, 298, 645,
	1184, 0, 299, 1191, 300, 1190, 0, 1201, 301, 302,
	303, 304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232,
	652, 0, 308, 309, 1177, 0, 1158, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1212, 332, 333, 334, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338,
	339, 1194, 340, 342, 1188, 1187, 1107, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1179, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1113, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1202, 1203, 372, 1126, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 1186, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1213,
	380, 381, 382, 1199, 1200, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1209, 0, 1136, 393,
	0, 394, 395, 396, 397, 398, 1172, 1173, 1176, 481,
	1215, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 280, 405, 406, 407, 0, 1214, 408, 1181, 1182,
	0, 1142, 0, 409, 410, 1216, 1174, 1217, 411, 412,
	413, 1218, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1210, 1219,
	425, 426, 1220, 0, 427, 428, 429, 430, 431, 432,
	435, 1165, 1164, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1221, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1222, 477,
	465, 1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 1224, 491, 1225, 1204,
	492, 493, 1114, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 1205, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1185,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1226, 547, 548, 549, 550, 551, 1115,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 241, 569, 570, 568, 571, 572,
	573, 1168, 574, 575, 557, 558, 576, 577, 1227, 578,
	579, 580, 581, 582, 583, 584, 1183, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1230, 592,
	593, 594, 595, 1206, 599, 600, 0, 601, 602, 1101,
	598, 589, 243, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1195, 1196, 1197, 1198, 0, 620, 0,
	612, 613, 614, 1207, 615, 1208, 1125, 616, 617, 618,
	619, 0, 621, 622, 0, 1108, 623, 624, 625, 627,
	628, 626, 629, 1169, 630, 0, 0, 631, 632, 633,
	1645, 1192, 1229, 0, 635, 634, 636, 694, 637, 638,
	0, 0, 0, 235, 639, 640, 695, 641, 642, 643,
	1105, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1906,
	1904, 0, 0, 1129, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 1171, 1135, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 1184,
	0, 299, 1191, 300, 1190, 0, 1201, 301, 302, 303,
	304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	1194, 340, 342, 1188, 1187, 1107, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1179, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1113, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 1126, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1186, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 1199, 1200, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 1136, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 1214, 408, 1181, 1182, 0,
	1142, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 1114, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1185, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 1115, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 241, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 1183, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1230, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 1101, 598,
	589, 243, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1195, 1196, 1197, 1198, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 1125, 616, 617, 618, 619,
	0, 621, 622, 0, 1108, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 1645,
	1192, 1229, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 235, 639, 640, 695, 641, 642, 643, 1105,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1906, 3262,
	0, 0, 1129, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1171, 1135, 0, 0, 0, 291, 292,
	1211, 293, 294, 295, 296, 297, 298, 645, 1184, 0,
	299, 1191, 300, 1190, 0, 1201, 301, 302, 303, 304,
	305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0,
	308, 309, 1177, 0, 1158, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1212, 332, 333, 334, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 335, 336, 337, 338, 339, 1194,
	340, 342, 1188, 1187, 1107, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1179,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1113, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1202, 1203, 372, 1126, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 1186, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1213, 380, 381,
	382, 1199, 1200, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1209, 0, 1136, 393, 0, 394,
	395, 396, 397, 398, 1172, 1173, 1176, 481, 1215, 399,
	400, 0, 401, 402, 403, 404, 0, 0, 0, 280,
	405, 406, 407, 0, 1214, 408, 1181, 1182, 0, 1142,
	0, 409, 410, 1216, 1174, 1217, 411, 412, 413, 1218,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1210, 1219, 425, 426,
	1220, 0, 427, 428, 429, 430, 431, 432, 435, 1165,
	1164, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1221, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1222, 477, 465, 1104,
	281, 1223, 478, 479, 1127, 1175, 480, 1189, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 674, 1224, 491, 1225, 1204, 492, 493,
	1114, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 1205, 511, 679, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1185, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1226, 547, 548, 549, 550, 551, 1115, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 241, 569, 570, 568, 571, 572, 573, 1168,
	574, 575, 557, 558, 576, 577, 1227, 578, 579, 580,
	581, 582, 583, 584, 1183, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1230, 592, 593, 594,
	595, 1206, 599, 600, 0, 601, 602, 1101, 598, 589,
	243, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1195, 1196, 1197, 1198, 0, 620, 0, 612, 613,
	614, 1207, 615, 1208, 1125, 616, 617, 618, 619, 0,
	621, 622, 0, 1108, 623, 624, 625, 627, 628, 626,
	629, 1169, 630, 0, 0, 631, 632, 633, 1645, 1192,
	1229, 0, 635, 634, 636, 694, 637, 638, 0, 0,
	0, 235, 639, 640, 695, 641, 642, 643, 1105, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1906, 1904, 0,
	0, 1129, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1171, 1135, 0, 0, 0, 291, 292, 1211,
	293, 294, 295, 296, 297, 298, 645, 1184, 0, 299,
	1191, 300, 1190, 2761, 1201, 301, 302, 303, 304, 305,
	306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0, 308,
	309, 1177, 0, 1158, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 335, 336, 337, 338, 339, 1194, 340,
	342, 1188, 1187, 1107, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1179, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1113, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1202, 1203, 372, 1126, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1186, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 2766, 1213, 380, 381, 382,
	1199, 1200, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1209, 0, 1136, 393, 0, 394, 395,
	396, 397, 398, 1172, 1173, 1176, 481, 1215, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 1214, 408, 1181, 1182, 0, 1142, 0,
	409, 410, 1216, 1174, 1217, 411, 412, 413, 1218, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 2762, 424, 1210, 1219, 425, 426, 1220,
	0, 427, 428, 429, 430, 431, 432, 435, 1165, 1164,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1221,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1222, 477, 465, 1104, 281,
	1223, 478, 479, 1127, 1175, 480, 1189, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 1224, 491, 1225, 1204, 492, 493, 1114,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	1205, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1185, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1226, 547, 548, 549, 550, 551, 1115, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1168, 574,
	575, 557, 558, 576, 577, 1227, 578, 579, 580, 581,
	582, 583, 584, 1183, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1230, 592, 593, 594, 595,
	1206, 599, 600, 0, 601, 602, 1101, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1195, 1196, 1197, 1198, 0, 620, 2763, 612, 613, 614,
	1207, 615, 1208, 1125, 616, 617, 618, 619, 0, 621,
	622, 0, 1108, 623, 624, 625, 627, 628, 626, 629,
	1169, 630, 0, 0, 631, 632, 633, 691, 1192, 1229,
	0, 635, 634, 636, 694, 637, 638, 0, 0, 0,
	0, 639, 640, 695, 641, 642, 643, 1105, 0, 0,
	2675, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 282,
	284, 283, 285, 286, 287, 288, 1131, 289, 290, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 1184,
	0, 299, 1191, 300, 1190, 0, 1201, 301, 302, 303,
	304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	1194, 340, 342, 1188, 1187, 1107, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1179, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1113, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 1126, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1186, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 1199, 1200, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 1136, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 1214, 408, 1181, 1182, 0,
	1142, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 1114, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1185, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 1115, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 1183, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1230, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 1101, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1195, 1196, 1197, 1198, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 1125, 616, 617, 618, 619,
	0, 621, 622, 0, 1108, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 691,
	1192, 1229, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 0, 0, 0, 0, 0, 0, 1131, 2673,
	0, 2672, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1171, 1135, 0, 0, 0,
	291, 292, 1211, 293, 294, 295, 296, 297, 298, 645,
	1184, 0, 299, 1191, 300, 1190, 0, 1201, 301, 302,
	303, 304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232,
	652, 0, 308, 309, 1177, 0, 1158, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1212, 332, 333, 334, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338,
	339, 1194, 340, 342, 1188, 1187, 1107, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1179, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1113, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1202, 1203, 372, 1126, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 1186, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1213,
	380, 381, 382, 1199, 1200, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1209, 0, 1136, 393,
	0, 394, 395, 396, 397, 398, 1172, 1173, 1176, 481,
	1215, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 280, 405, 406, 407, 0, 1214, 408, 1181, 1182,
	0, 1142, 0, 409, 410, 1216, 1174, 1217, 411, 412,
	413, 1218, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1210, 1219,
	425, 426, 1220, 0, 427, 428, 429, 430, 431, 432,
	435, 1165, 1164, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1221, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1222, 477,
	465, 1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 1224, 491, 1225, 1204,
	492, 493, 1114, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 1205, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1185,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1226, 547, 548, 549, 550, 551, 1115,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1168, 574, 575, 557, 558, 576, 577, 1227, 578,
	579, 580, 581, 582, 583, 584, 1183, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1230, 592,
	593, 594, 595, 1206, 599, 600, 0, 601, 602, 1101,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1195, 1196, 1197, 1198, 0, 620, 0,
	612, 613, 614, 1207, 615, 1208, 1125, 616, 617, 618,
	619, 0, 621, 622, 0, 1108, 623, 624, 625, 627,
	628, 626, 629, 1169, 630, 0, 0, 631, 632, 633,
	691, 1192, 1229, 0, 635, 634, 636, 694, 637, 638,
	0, 0, 0, 0, 639, 640, 695, 641, 642, 643,
	1105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 0, 0, 0, 0, 0, 0, 1131,
	2670, 0, 2669, 1129, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1171, 1135, 0, 0,
	0, 291, 292, 1211, 293, 294, 295, 296, 297, 298,
	645, 1184, 0, 299, 1191, 300, 1190, 0, 1201, 301,
	302, 303, 304, 305, 306, 1137, 1170, 1102, 307, 1231,
	1232, 652, 0, 308, 309, 1177, 0, 1158, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1212, 332, 333, 334,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337,
	338, 339, 1194, 340, 342, 1188, 1187, 1107, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1179, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1113, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1202, 1203, 372, 1126,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1186,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1213, 380, 381, 382, 1199, 1200, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1209, 0, 1136,
	393, 0, 394, 395, 396, 397, 398, 1172, 1173, 1176,
	481, 1215, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 0, 1214, 408, 1181,
	1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217, 411,
	412, 413, 1218, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1210,
	1219, 425, 426, 1220, 0, 427, 428, 429, 430, 431,
	432, 435, 1165, 1164, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1221, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1222,
	477, 465, 1104, 281, 1223, 478, 479, 1127, 1175, 480,
	1189, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 1224, 491, 1225,
	1204, 492, 493, 1114, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 1205, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1185, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1226, 547, 548, 549, 550, 551,
	1115, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1168, 574, 575, 557, 558, 576, 577, 1227,
	578, 579, 580, 581, 582, 583, 584, 1183, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1230,
	592, 593, 594, 595, 1206, 599, 600, 0, 601, 602,
	1101, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1195, 1196, 1197, 1198, 0, 620,
	0, 612, 613, 614, 1207, 615, 1208, 1125, 616, 617,
	618, 619, 0, 621, 622, 0, 1108, 623, 624, 625,
	627, 628, 626, 629, 1169, 630, 0, 0, 631, 632,
	633, 691, 1192, 1229, 0, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 1105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 0, 0, 0, 0, 0, 0,
	1131, 2667, 0, 2666, 1129, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 1171, 1135, 0,
	0, 0, 291, 292, 1211, 293, 294, 295, 296, 297,
	298, 645, 1184, 0, 299, 1191, 300, 1190, 0, 1201,
	301, 302, 303, 304, 305, 306, 1137, 1170, 1102, 307,
	1231, 1232, 652, 0, 308, 309, 1177, 0, 1158, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1212, 332, 333,
	334, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336,
	337, 338, 339, 1194, 340, 342, 1188, 1187, 1107, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1179, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1113, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1202, 1203, 372,
	1126, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	1186, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1213, 380, 381, 382, 1199, 1200, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1209, 0,
	1136, 393, 0, 394, 395, 396, 397, 398, 1172, 1173,
	1176, 481, 1215, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 280, 405, 406, 407, 0, 1214, 408,
	1181, 1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217,
	411, 412, 413, 1218, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1210, 1219, 425, 426, 1220, 0, 427, 428, 429, 430,
	431, 432, 435, 1165, 1164, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1221, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1222, 477, 465, 1104, 281, 1223, 478, 479, 1127, 1175,
	480, 1189, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 1224, 491,
	1225, 1204, 492, 493, 1114, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 1205, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1185, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1226, 547, 548, 549, 550,
	551, 1115, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1168, 574, 575, 557, 558, 576, 577,
	1227, 578, 579, 580, 581, 582, 583, 584, 1183, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1230, 592, 593, 594, 595, 1206, 599, 600, 0, 601,
	602, 1101, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1195, 1196, 1197, 1198, 0,
	620, 0, 612, 613, 614, 1207, 615, 1208, 1125, 616,
	617, 618, 619, 0, 621, 622, 0, 1108, 623, 624,
	625, 627, 628, 626, 629, 1169, 630, 0, 0, 631,
	632, 633, 691, 1192, 1229, 0, 635, 634, 636, 694,
	637, 638, 0, 0, 0, 0, 639, 640, 695, 641,
	642, 643, 1105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 0, 0, 0, 0, 0, 0,
	0, 1131, 2664, 0, 1745, 1129, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 1171, 1135,
	0, 0, 0, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 1184, 0, 299, 1191, 300, 1190, 0,
	1201, 301, 302, 303, 304, 305, 306, 1137, 1170, 1102,
	307, 1231, 1232, 652, 0, 308, 309, 1177, 0, 1158,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1212, 332,
	333, 334, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335,
	336, 337, 338, 339, 1194, 340, 342, 1188, 1187, 1107,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1179, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1113, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1202, 1203,
	372, 1126, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 1186, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1213, 380, 381, 382, 1199, 1200, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1209,
	0, 1136, 393, 0, 394, 395, 396, 397, 398, 1172,
	1173, 1176, 481, 1215, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 1214,
	408, 1181, 1182, 0, 1142, 0, 409, 410, 1216, 1174,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1210, 1219, 425, 426, 1220, 0, 427, 428, 429,
	430, 431, 432, 435, 1165, 1164, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 1104, 281, 1223, 478, 479, 1127,
	1175, 480, 1189, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 1224,
	491, 1225, 1204, 492, 493, 1114, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 1205, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1185, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 1115, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1168, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 1183,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1230, 592, 593, 594, 595, 1206, 599, 600, 0,
	601, 602, 1101, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1195, 1196, 1197, 1198,
	0, 620, 0, 612, 613, 614, 1207, 615, 1208, 1125,
	616, 617, 618, 619, 0, 621, 622, 0, 1108, 623,
	624, 625, 627, 628, 626, 629, 1169, 630, 0, 0,
	631, 632, 633, 691, 1192, 1229, 0, 635, 634, 636,
	694, 637, 638, 1744, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 1105, 0, 0, 1094, 0, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 282, 284, 283, 285, 286,
	287, 288, 1131, 289, 290, 0, 1129, 0, 0, 0,
	1171, 1135, 0, 0, 0, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 1184, 0, 299, 1191, 300,
	1190, 0, 1201, 301, 302, 303, 304, 305, 306, 1137,
	1170, 1102, 307, 1231, 1232, 652, 0, 308, 309, 1177,
	0, 1158, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 335, 336, 337, 338, 339, 1194, 340, 342, 1188,
	1187, 1107, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1179, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1113, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1202, 1203, 372, 1126, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1186, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1213, 380, 381, 382, 1199, 1200,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1209, 0, 1136, 393, 0, 394, 395, 396, 397,
	398, 1172, 1173, 1176, 481, 1215, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 1214, 408, 1181, 1182, 0, 1142, 0, 409, 410,
	1216, 1174, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1210, 1219, 425, 426, 1220, 0, 427,
	428, 429, 430, 431, 432, 435, 1165, 1164, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 1104, 281, 1223, 478,
	479, 1127, 1175, 480, 1189, 482, 483, 0, 0, 484,
	0, 1109, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 1224, 491, 1225, 1204, 492, 493, 1114, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 1205, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1185, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 1115, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1168, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 1183, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1230, 592, 593, 594, 595, 1206, 599,
	600, 0, 601, 602, 1101, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1195, 1196,
	1197, 1198, 0, 620, 0, 612, 613, 614, 1207, 615,
	1208, 1125, 616, 617, 618, 619, 0, 621, 622, 0,
	1108, 623, 624, 625, 627, 628, 626, 629, 1169, 630,
	0, 0, 631, 632, 633, 691, 1192, 1229, 0, 635,
	634, 636, 694, 637, 638, 0, 0, 0, 0, 639,
	640, 695, 641, 642, 643, 1105, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 282, 284, 283,
	285, 286, 287, 288, 1131, 289, 290, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 291, 292, 1211,
	293, 294, 295, 296, 297, 298, 645, 1184, 0, 299,
	1191, 300, 1190, 0, 1201, 301, 302, 303, 304, 305,
	306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0, 308,
	309, 1177, 0, 1158, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 4764, 328, 0, 329,
	330, 331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 335, 336, 337, 338, 339, 1194, 340,
	342, 1188, 1187, 1107, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1179, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1113, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1202, 1203, 372, 1126, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1186, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1213, 380, 381, 382,
	1199, 1200, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1209, 0, 1136, 393, 0, 394, 395,
	396, 397, 398, 1172, 1173, 1176, 481, 1215, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 1214, 408, 1181, 1182, 0, 1142, 0,
	409, 410, 1216, 1174, 1217, 411, 412, 413, 1218, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1210, 1219, 425, 426, 1220,
	0, 427, 428, 429, 430, 431, 432, 435, 1165, 1164,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1221,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1222, 477, 465, 1104, 281,
	1223, 478, 479, 1127, 1175, 480, 1189, 482, 483, 0,
	0, 484, 0, 1109, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 1224, 491, 1225, 1204, 492, 493, 1114,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	1205, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1185, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1226, 547, 548, 549, 550, 551, 1115, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1168, 574,
	575, 557, 558, 576, 577, 1227, 578, 579, 580, 581,
	582, 583, 584, 1183, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1230, 592, 593, 594, 595,
	1206, 599, 600, 0, 601, 602, 1101, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1195, 1196, 1197, 1198, 0, 620, 0, 612, 613, 614,
	1207, 615, 1208, 1125, 616, 617, 618, 619, 0, 621,
	622, 0, 1108, 623, 624, 625, 627, 628, 626, 629,
	1169, 630, 0, 0, 631, 632, 633, 691, 1192, 1229,
	0, 635, 634, 636, 694, 637, 638, 0, 0, 0,
	0, 639, 640, 695, 641, 642, 643, 1105, 0, 0,
	0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 282,
	284, 283, 285, 286, 287, 288, 1131, 289, 290, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 1184,
	0, 299, 1191, 300, 1190, 0, 1201, 301, 302, 303,
	304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	1194, 340, 342, 1188, 1187, 1107, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1179, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1113, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 1126, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1186, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 1199, 1200, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 1136, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	2507, 405, 406, 407, 0, 1214, 408, 1181, 1182, 0,
	1142, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 1114, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 2506, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1185, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 1115, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 1183, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1230, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 1101, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1195, 1196, 1197, 1198, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 1125, 616, 617, 618, 619,
	0, 621, 622, 0, 1108, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 691,
	1192, 1229, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1105,
	0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 282, 284, 283, 285, 286, 287, 288, 1131, 289,
	290, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 291, 292, 1211, 293, 294, 295, 296, 297, 298,
	645, 1184, 0, 299, 1191, 300, 1190, 0, 1201, 301,
	302, 303, 304, 305, 306, 1137, 1170, 1102, 307, 1231,
	1232, 652, 0, 308, 309, 1177, 0, 1158, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1212, 332, 333, 334,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337,
	338, 339, 1194, 340, 342, 1188, 1187, 1107, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1179, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1113, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1202, 1203, 372, 1126,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1186,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1213, 380, 381, 382, 1199, 1200, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1209, 0, 1136,
	393, 0, 394, 395, 396, 397, 398, 1172, 1173, 1176,
	481, 1215, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 0, 1214, 408, 1181,
	1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217, 411,
	412, 413, 1218, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1210,
	1219, 425, 426, 1220, 0, 427, 428, 429, 430, 431,
	432, 435, 1165, 1164, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1221, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1222,
	477, 465, 1104, 281, 1223, 478, 479, 1127, 1175, 480,
	1189, 482, 483, 0, 0, 484, 0, 1109, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 1224, 491, 1225,
	1204, 492, 493, 1114, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 1205, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1185, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1226, 547, 548, 549, 550, 551,
	1115, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1168, 574, 575, 557, 558, 576, 577, 1227,
	578, 579, 580, 581, 582, 583, 584, 1183, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1230,
	592, 593, 594, 595, 1206, 599, 600, 0, 601, 602,
	1101, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1195, 1196, 1197, 1198, 0, 620,
	0, 612, 613, 614, 1207, 615, 1208, 1125, 616, 617,
	618, 619, 0, 621, 622, 0, 1108, 623, 624, 625,
	627, 628, 626, 629, 1169, 630, 0, 0, 631, 632,
	633, 691, 1192, 1229, 0, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 1105, 0, 0, 0, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 282, 284, 283, 285, 286, 287, 288,
	1131, 289, 290, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 1184, 0, 299, 1191, 300, 1190, 0,
	1201, 301, 302, 303, 304, 305, 306, 1137, 1170, 1102,
	307, 1231, 1232, 652, 0, 308, 309, 1177, 0, 1158,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 4494, 328, 0, 329, 330, 331, 1212, 332,
	333, 334, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335,
	336, 337, 338, 339, 1194, 340, 342, 1188, 1187, 1107,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1179, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1113, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1202, 1203,
	372, 1126, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 1186, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1213, 380, 381, 382, 1199, 1200, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1209,
	0, 1136, 393, 0, 394, 395, 396, 397, 398, 1172,
	1173, 1176, 481, 1215, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 1214,
	408, 1181, 1182, 0, 1142, 0, 409, 410, 1216, 1174,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1210, 1219, 425, 426, 1220, 0, 427, 428, 429,
	430, 431, 432, 435, 1165, 1164, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 1104, 281, 1223, 478, 479, 1127,
	1175, 480, 1189, 482, 483, 0, 0, 484, 0, 1109,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 1224,
	491, 1225, 1204, 492, 493, 1114, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 1205, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1185, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 1115, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1168, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 1183,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1230, 592, 593, 594, 595, 1206, 599, 600, 0,
	601, 602, 1101, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1195, 1196, 1197, 1198,
	0, 620, 0, 612, 613, 614, 1207, 615, 1208, 1125,
	616, 617, 618, 619, 0, 621, 622, 0, 1108, 623,
	624, 625, 627, 628, 626, 629, 1169, 630, 0, 0,
	631, 632, 633, 691, 1192, 1229, 0, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 1105, 0, 0, 0, 0, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 282, 284, 283, 285, 286,
	287, 288, 1131, 289, 290, 0, 1129, 0, 0, 0,
	1171, 1135, 0, 0, 0, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 1184, 0, 299, 1191, 300,
	1190, 0, 1201, 301, 302, 303, 304, 305, 306, 1137,
	1170, 1102, 307, 1231, 1232, 652, 0, 308, 309, 1177,
	0, 1158, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 335, 336, 337, 338, 339, 1194, 340, 342, 1188,
	1187, 1107, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1179, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1113, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1202, 1203, 372, 1126, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1186, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1213, 380, 381, 382, 1199, 1200,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1209, 0, 1136, 393, 0, 394, 395, 396, 397,
	398, 1172, 1173, 1176, 481, 1215, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 1214, 408, 1181, 1182, 0, 1142, 0, 409, 410,
	1216, 1174, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1210, 1219, 425, 426, 1220, 0, 427,
	428, 429, 430, 431, 432, 435, 1165, 1164, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 1104, 4086, 1223, 478,
	479, 1127, 1175, 480, 1189, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 1224, 491, 1225, 1204, 492, 493, 1114, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 1205, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1185, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 1115, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1168, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 1183, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1230, 592, 593, 594, 595, 1206, 599,
	600, 0, 601, 602, 1101, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1195, 1196,
	1197, 1198, 0, 620, 0, 612, 613, 614, 1207, 615,
	1208, 1125, 616, 617, 618, 619, 0, 621, 622, 0,
	1108, 623, 624, 625, 627, 628, 626, 629, 1169, 630,
	0, 0, 631, 632, 633, 691, 1192, 1229, 0, 635,
	634, 636, 694, 637, 638, 0, 0, 0, 0, 639,
	640, 695, 641, 642, 643, 1105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 1975, 0, 0,
	0, 0, 0, 0, 1131, 0, 0, 0, 1129, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1171, 1135, 0, 0, 0, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 1184, 0, 299, 1191,
	300, 1190, 0, 1201, 301, 302, 303, 304, 305, 306,
	1137, 1170, 1102, 307, 1231, 1232, 652, 0, 308, 309,
	1177, 0, 1158, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 335, 336, 337, 338, 339, 1194, 340, 342,
	1188, 1187, 1107, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1179, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 1113,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1202, 1203, 372, 1126, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 1186, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1213, 380, 381, 382, 1199,
	1200, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1209, 0, 1136, 393, 0, 394, 395, 396,
	397, 398, 1172, 1173, 1176, 481, 1215, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 1214, 408, 1181, 1182, 0, 1142, 0, 409,
	410, 1216, 1174, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1210, 1219, 425, 426, 1220, 0,
	427, 428, 429, 430, 431, 432, 435, 1165, 1164, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 1104, 281, 1223,
	478, 479, 1127, 1175, 480, 1189, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 1224, 491, 1225, 1204, 492, 493, 1114, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 1205,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1185, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 1115, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1168, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 1183, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1230, 592, 593, 594, 595, 1206,
	599, 600, 0, 601, 602, 1101, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1195,
	1196, 1197, 1198, 0, 620, 0, 612, 613, 614, 1207,
	615, 1208, 1125, 616, 617, 618, 619, 0, 621, 622,
	0, 1108, 623, 624, 625, 627, 628, 626, 629, 1169,
	630, 0, 0, 631, 632, 633, 691, 1192, 1229, 3783,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 1105, 0, 0, 0,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 282, 284,
	283, 285, 286, 287, 288, 1131, 289, 290, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 291, 292,
	1211, 293, 294, 295, 296, 297, 298, 645, 1184, 0,
	299, 1191, 300, 1190, 0, 1201, 301, 302, 303, 304,
	305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0,
	308, 309, 1177, 0, 1158, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1212, 332, 333, 334, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 335, 336, 337, 338, 339, 1194,
	340, 342, 1188, 1187, 1107, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1179,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1113, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1202, 1203, 372, 1126, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 1186, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1213, 380, 381,
	382, 1199, 1200, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1209, 0, 1136, 393, 0, 394,
	395, 396, 397, 398, 1172, 1173, 1176, 481, 1215, 399,
	400, 0, 401, 402, 403, 404, 0, 0, 0, 280,
	405, 406, 407, 0, 1214, 408, 1181, 1182, 0, 1142,
	0, 409, 410, 1216, 1174, 1217, 411, 412, 413, 1218,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1210, 1219, 425, 426,
	1220, 0, 427, 428, 429, 430, 431, 432, 435, 1165,
	1164, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1221, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1222, 477, 465, 1104,
	281, 1223, 478, 479, 1127, 1175, 480, 1189, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 674, 1224, 491, 1225, 1204, 492, 493,
	1114, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 1205, 511, 679, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1185, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1226, 547, 548, 549, 550, 551, 1115, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1168,
	574, 575, 557, 558, 576, 577, 1227, 578, 579, 580,
	581, 582, 583, 584, 1183, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1230, 592, 593, 594,
	595, 1206, 599, 600, 0, 601, 602, 1101, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1195, 1196, 1197, 1198, 0, 620, 0, 612, 613,
	614, 1207, 615, 1208, 1125, 616, 617, 618, 619, 0,
	621, 622, 0, 1108, 623, 624, 625, 627, 628, 626,
	629, 1169, 630, 0, 0, 631, 632, 633, 691, 1192,
	1229, 0, 635, 634, 636, 694, 637, 638, 0, 0,
	0, 0, 639, 640, 695, 641, 642, 643, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	1975, 0, 0, 0, 0, 0, 0, 1131, 0, 0,
	0, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 1171, 1135, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 1184,
	0, 299, 1191, 300, 1190, 0, 1201, 301, 302, 303,
	304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	1194, 340, 342, 1188, 1187, 1107, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1179, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1113, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 1126, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1186, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 2766, 1213, 380,
	381, 382, 1199, 1200, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 1136, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 1214, 408, 1181, 1182, 0,
	1142, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 1114, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1185, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 1115, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 1183, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1230, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 1101, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1195, 1196, 1197, 1198, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 1125, 616, 617, 618, 619,
	0, 621, 622, 0, 1108, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 691,
	1192, 1229, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1105,
	0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 282, 284, 283, 285, 286, 287, 288, 1131, 289,
	290, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 291, 292, 1211, 293, 294, 295, 296, 297, 298,
	645, 1184, 0, 299, 1191, 300, 1190, 0, 1201, 301,
	302, 303, 304, 305, 306, 1137, 1170, 1102, 307, 1231,
	1232, 652, 0, 308, 309, 1177, 0, 1158, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1212, 332, 333, 334,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337,
	338, 339, 1194, 340, 342, 1188, 1187, 1107, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1179, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1113, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1202, 1203, 372, 1126,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1186,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1213, 380, 381, 382, 1199, 1200, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1209, 0, 1136,
	393, 0, 394, 395, 396, 397, 398, 1172, 1173, 1176,
	481, 1215, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 0, 1214, 408, 1181,
	1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217, 411,
	412, 413, 1218, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1210,
	1219, 425, 426, 1220, 0, 427, 428, 429, 430, 431,
	432, 435, 1165, 1164, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1221, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1222,
	477, 465, 1104, 281, 1223, 478, 479, 1127, 1175, 480,
	1189, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 1224, 491, 1225,
	1204, 492, 493, 1114, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 1205, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1185, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1226, 547, 548, 549, 550, 551,
	1115, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1168, 574, 575, 557, 558, 576, 577, 1227,
	578, 579, 580, 581, 582, 583, 584, 1183, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1230,
	592, 593, 594, 595, 1206, 599, 600, 0, 601, 602,
	1101, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1195, 1196, 1197, 1198, 0, 620,
	0, 612, 613, 614, 1207, 615, 1208, 1125, 616, 617,
	618, 619, 0, 621, 622, 0, 1108, 623, 624, 625,
	627, 628, 626, 629, 1169, 630, 0, 0, 631, 632,
	633, 691, 1192, 1229, 0, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 1105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 0, 0, 0, 0, 0, 0,
	1131, 1904, 0, 2771, 1129, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 1171, 1135, 0,
	0, 0, 291, 292, 1211, 293, 294, 295, 296, 297,
	298, 645, 1184, 0, 299, 1191, 300, 1190, 0, 1201,
	301, 302, 303, 304, 305, 306, 1137, 1170, 1102, 307,
	1231, 1232, 652, 0, 308, 309, 1177, 0, 1158, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1212, 332, 333,
	334, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336,
	337, 338, 339, 1194, 340, 342, 1188, 1187, 1107, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1179, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1113, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1202, 1203, 372,
	1126, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	1186, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1213, 380, 381, 382, 1199, 1200, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1209, 0,
	1136, 393, 0, 394, 395, 396, 397, 398, 1172, 1173,
	1176, 481, 1215, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 280, 405, 406, 407, 0, 1214, 408,
	1181, 1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217,
	411, 412, 413, 1218, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1210, 1219, 425, 426, 1220, 0, 427, 428, 429, 430,
	431, 432, 435, 1165, 1164, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1221, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1222, 477, 465, 1104, 281, 1223, 478, 479, 1127, 1175,
	480, 1189, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 1224, 491,
	1225, 1204, 492, 493, 1114, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 1205, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1185, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1226, 547, 548, 549, 550,
	551, 1115, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1168, 574, 575, 557, 558, 576, 577,
	1227, 578, 579, 580, 581, 582, 583, 584, 1183, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1230, 592, 593, 594, 595, 1206, 599, 600, 0, 601,
	602, 1101, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1195, 1196, 1197, 1198, 0,
	620, 0, 612, 613, 614, 1207, 615, 1208, 1125, 616,
	617, 618, 619, 0, 621, 622, 0, 1108, 623, 624,
	625, 627, 628, 626, 629, 1169, 630, 0, 0, 631,
	632, 633, 691, 1192, 1229, 0, 635, 634, 636, 694,
	637, 638, 0, 0, 0, 0, 639, 640, 695, 641,
	642, 643, 1105, 0, 0, 2769, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 282, 284, 283, 285, 286, 287,
	288, 1131, 289, 290, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 291, 292, 1211, 293, 294, 295,
	296, 297, 298, 645, 1184, 0, 299, 1191, 300, 1190,
	0, 1201, 301, 302, 303, 304, 305, 306, 1137, 1170,
	1102, 307, 1231, 1232, 652, 0, 308, 309, 1177, 0,
	1158, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1212,
	332, 333, 334, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	335, 336, 337, 338, 339, 1194, 340, 342, 1188, 1187,
	1107, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1179, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1113, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1202,
	1203, 372, 1126, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 1186, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1213, 380, 381, 382, 1199, 1200, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1209, 0, 1136, 393, 0, 394, 395, 396, 397, 398,
	1172, 1173, 1176, 481, 1215, 399, 400, 0, 401, 402,
	403, 404, 0, 0, 0, 280, 405, 406, 407, 0,
	1214, 408, 1181, 1182, 0, 1142, 0, 409, 410, 1216,
	1174, 1217, 411, 412, 413, 1218, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1210, 1219, 425, 426, 1220, 0, 427, 428,
	429, 430, 431, 432, 435, 1165, 1164, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1221, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1222, 477, 465, 1104, 281, 1223, 478, 479,
	1127, 1175, 480, 1189, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 674,
	1224, 491, 1225, 1204, 492, 493, 1114, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 676,
	505, 506, 507, 677, 508, 509, 510, 1205, 511, 679,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1185, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1226, 547, 548,
	549, 550, 551, 1115, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1168, 574, 575, 557, 558,
	576, 577, 1227, 578, 579, 580, 581, 582, 583, 584,
	1183, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1230, 592, 593, 594, 595, 1206, 599, 600,
	0, 601, 602, 1101, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1195, 1196, 1197,
	1198, 0, 620, 0, 612, 613, 614, 1207, 615, 1208,
	1125, 616, 617, 618, 619, 0, 621, 622, 0, 1108,
	623, 624, 625, 627, 628, 626, 629, 1169, 630, 0,
	0, 631, 632, 633, 691, 1192, 1229, 0, 635, 634,
	636, 694, 637, 638, 0, 0, 0, 0, 639, 640,
	695, 641, 642, 643, 1105, 0, 0, 2757, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 282, 284, 283, 285,
	286, 287, 288, 1131, 289, 290, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 1184, 0, 299, 1191,
	300, 1190, 0, 1201, 301, 302, 303, 304, 305, 306,
	1137, 1170, 1102, 307, 1231, 1232, 652, 0, 308, 309,
	1177, 0, 1158, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 335, 336, 337, 338, 339, 1194, 340, 342,
	1188, 1187, 1107, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1179, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 1113,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1202, 1203, 372, 1126, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 1186, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1213, 380, 381, 382, 1199,
	1200, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1209, 0, 1136, 393, 0, 394, 395, 396,
	397, 398, 1172, 1173, 1176, 481, 1215, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 1214, 408, 1181, 1182, 0, 1142, 0, 409,
	410, 1216, 1174, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1210, 1219, 425, 426, 1220, 0,
	427, 428, 429, 430, 431, 432, 435, 1165, 1164, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 1104, 281, 1223,
	478, 479, 1127, 1175, 480, 1189, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 1224, 491, 1225, 1204, 492, 493, 1114, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 1205,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1185, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 1115, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1168, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 1183, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1230, 592, 593, 594, 595, 1206,
	599, 600, 0, 601, 602, 1101, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1195,
	1196, 1197, 1198, 0, 620, 0, 612, 613, 614, 1207,
	615, 1208, 1125, 616, 617, 618, 619, 0, 621, 622,
	0, 1108, 623, 624, 625, 627, 628, 626, 629, 1169,
	630, 0, 0, 631, 632, 633, 691, 1192, 1229, 0,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 1105, 0, 0, 2745,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 282, 284,
	283, 285, 286, 287, 288, 1131, 289, 290, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 291, 292,
	1211, 293, 294, 295, 296, 297, 298, 645, 1184, 0,
	299, 1191, 300, 1190, 0, 1201, 301, 302, 303, 304,
	305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0,
	308, 309, 1177, 0, 1158, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1212, 332, 333, 334, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 335, 336, 337, 338, 339, 1194,
	340, 342, 1188, 1187, 1107, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1179,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1113, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1202, 1203, 372, 1126, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 1186, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1213, 380, 381,
	382, 1199, 1200, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1209, 0, 1136, 393, 0, 394,
	395, 396, 397, 398, 1172, 1173, 1176, 481, 1215, 399,
	400, 0, 401, 402, 403, 404, 0, 0, 0, 280,
	405, 406, 407, 0, 1214, 408, 1181, 1182, 0, 1142,
	0, 409, 410, 1216, 1174, 1217, 411, 412, 413, 1218,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1210, 1219, 425, 426,
	1220, 0, 427, 428, 429, 430, 431, 432, 435, 1165,
	1164, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1221, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1222, 477, 465, 1104,
	281, 1223, 478, 479, 1127, 1175, 480, 1189, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 674, 1224, 491, 1225, 1204, 492, 493,
	1114, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 1205, 511, 679, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1185, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1226, 547, 548, 549, 550, 551, 1115, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1168,
	574, 575, 557, 558, 576, 577, 1227, 578, 579, 580,
	581, 582, 583, 584, 1183, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1230, 592, 593, 594,
	595, 1206, 599, 600, 0, 601, 602, 1101, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1195, 1196, 1197, 1198, 0, 620, 0, 612, 613,
	614, 1207, 615, 1208, 1125, 616, 617, 618, 619, 0,
	621, 622, 0, 1108, 623, 624, 625, 627, 628, 626,
	629, 1169, 630, 0, 0, 631, 632, 633, 691, 1192,
	1229, 0, 635, 634, 636, 694, 637, 638, 0, 0,
	0, 0, 639, 640, 695, 641, 642, 643, 1105, 0,
	0, 2743, 0, 2734, 2741, 1120, 1121, 1117, 1118, 1130,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	282, 284, 283, 285, 286, 287, 288, 1131, 289, 290,
	0, 1129, 0, 0, 0, 1171, 1135, 0, 0, 0,
	291, 292, 1211, 293, 294, 295, 296, 297, 298, 645,
	1184, 0, 299, 1191, 300, 1190, 0, 1201, 301, 302,
	303, 304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232,
	652, 0, 308, 309, 1177, 0, 1158, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1212, 332, 333, 334, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338,
	339, 1194, 2737, 342, 1188, 1187, 1107, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1179, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1113, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1202, 1203, 372, 1126, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 1186, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1213,
	380, 381, 382, 1199, 1200, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1209, 0, 1136, 393,
	0, 394, 395, 396, 2738, 398, 1172, 1173, 1176, 481,
	1215, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 280, 405, 406, 407, 0, 1214, 408, 1181, 1182,
	0, 1142, 0, 409, 410, 1216, 1174, 1217, 411, 412,
	413, 1218, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1210, 1219,
	425, 426, 1220, 0, 427, 428, 429, 430, 431, 432,
	435, 1165, 1164, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 2739, 445, 2736, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1221, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1222, 477,
	465, 1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 1224, 491, 1225, 1204,
	492, 493, 1114, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 1205, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1185,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1226, 547, 548, 549, 550, 551, 1115,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 2740, 0, 569, 570, 568, 571, 572,
	573, 1168, 574, 575, 557, 558, 576, 577, 1227, 578,
	579, 580, 581, 582, 583, 584, 1183, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1230, 592,
	593, 594, 595, 1206, 599, 600, 0, 601, 602, 1101,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1195, 1196, 1197, 1198, 0, 620, 0,
	612, 613, 614, 1207, 615, 1208, 1125, 616, 617, 618,
	619, 0, 621, 622, 0, 1108, 623, 624, 625, 627,
	628, 626, 629, 1169, 630, 0, 0, 631, 632, 633,
	691, 1192, 1229, 0, 635, 634, 636, 694, 637, 638,
	0, 0, 0, 0, 639, 640, 695, 641, 2735, 643,
	1105, 0, 0, 2731, 0, 2734, 2741, 1120, 1121, 1117,
	1118, 1130, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 282, 284, 283, 285, 286, 287, 288, 1131,
	289, 290, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 291, 292, 1211, 293, 294, 295, 296, 297,
	298, 645, 1184, 0, 299, 1191, 300, 1190, 0, 1201,
	301, 302, 303, 304, 305, 306, 1137, 1170, 1102, 307,
	1231, 1232, 652, 0, 308, 309, 1177, 0, 1158, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1212, 332, 333,
	334, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336,
	337, 338, 339, 1194, 2737, 342, 1188, 1187, 1107, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1179, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1113, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1202, 1203, 372,
	1126, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	1186, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1213, 380, 381, 382, 1199, 1200, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1209, 0,
	1136, 393, 0, 394, 395, 396, 2738, 398, 1172, 1173,
	1176, 481, 1215, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 280, 405, 406, 407, 0, 1214, 408,
	1181, 1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217,
	411, 412, 413, 1218, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1210, 1219, 425, 426, 1220, 0, 427, 428, 429, 430,
	431, 432, 435, 1165, 1164, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 2739, 445, 2736, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1221, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1222, 477, 465, 1104, 281, 1223, 478, 479, 1127, 1175,
	480, 1189, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 1224, 491,
	1225, 1204, 492, 493, 1114, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 1205, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1185, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1226, 547, 548, 549, 550,
	551, 1115, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 2740, 0, 569, 570, 568,
	571, 572, 573, 1168, 574, 575, 557, 558, 576, 577,
	1227, 578, 579, 580, 581, 582, 583, 584, 1183, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1230, 592, 593, 594, 595, 1206, 599, 600, 0, 601,
	602, 1101, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1195, 1196, 1197, 1198, 0,
	620, 0, 612, 613, 614, 1207, 615, 1208, 1125, 616,
	617, 618, 619, 0, 621, 622, 0, 1108, 623, 624,
	625, 627, 628, 626, 629, 1169, 630, 0, 0, 631,
	632, 633, 691, 1192, 1229, 0, 635, 634, 636, 694,
	637, 638, 0, 0, 0, 0, 639, 640, 695, 641,
	2735, 643, 1105, 0, 0, 0, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 282, 284, 283, 285, 286, 287,
	288, 1131, 289, 290, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 291, 292, 1211, 293, 294, 295,
	296, 297, 298, 645, 1184, 0, 299, 1191, 300, 1190,
	0, 1201, 301, 302, 303, 304, 305, 306, 1137, 1170,
	1102, 307, 1231, 1232, 652, 0, 308, 309, 1177, 0,
	1158, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1212,
	332, 333, 334, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	335, 336, 337, 338, 339, 1194, 340, 342, 1188, 1187,
	1107, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1179, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1113, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1202,
	1203, 372, 1126, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 1186, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1213, 380, 381, 382, 1199, 1200, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1209, 0, 1136, 393, 0, 394, 395, 396, 397, 398,
	1172, 1173, 1176, 481, 1215, 399, 400, 0, 401, 402,
	403, 404, 0, 0, 0, 280, 405, 406, 407, 0,
	1214, 408, 1181, 1182, 0, 1142, 0, 409, 410, 1216,
	1174, 1217, 411, 412, 413, 1218, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1210, 1219, 425, 426, 1220, 0, 427, 428,
	429, 430, 431, 432, 435, 1165, 1164, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1221, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1222, 477, 465, 1104, 281, 1223, 478, 479,
	1127, 1175, 480, 1189, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 674,
	1224, 491, 1225, 1204, 492, 493, 1114, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 676,
	505, 506, 507, 677, 508, 509, 510, 1205, 511, 679,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1185, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1226, 547, 548,
	549, 550, 551, 1115, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1168, 574, 575, 557, 558,
	576, 577, 1227, 578, 579, 580, 581, 582, 583, 584,
	1183, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1230, 592, 593, 594, 595, 1206, 599, 600,
	0, 601, 602, 1101, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1195, 1196, 1197,
	1198, 0, 620, 0, 612, 613, 614, 1207, 615, 1208,
	1125, 616, 617, 618, 619, 0, 621, 622, 0, 1108,
	623, 624, 625, 627, 628, 626, 629, 1169, 630, 0,
	0, 631, 632, 633, 691, 1192, 1229, 0, 635, 634,
	636, 694, 637, 638, 0, 0, 0, 0, 639, 640,
	695, 641, 642, 643, 1105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 0, 0, 0,
	0, 1912, 0, 1131, 0, 0, 0, 1129, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 2486, 289, 290, 0, 0, 0, 0, 0,
	1171, 1135, 0, 0, 0, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 1184, 0, 299, 1191, 300,
	1190, 0, 1201, 301, 302, 303, 304, 305, 306, 1137,
	1170, 1102, 307, 1231, 1232, 652, 0, 308, 309, 1177,
	0, 1158, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 335, 336, 337, 338, 339, 1194, 340, 342, 1188,
	1187, 1107, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1179, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1113, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1202, 1203, 372, 1126, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1186, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1213, 380, 381, 382, 1199, 1200,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1209, 0, 1136, 393, 0, 394, 395, 396, 397,
	398, 1172, 1173, 1176, 481, 1215, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 1214, 408, 1181, 1182, 0, 1142, 0, 409, 410,
	1216, 1174, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1210, 1219, 425, 426, 1220, 0, 427,
	428, 429, 430, 431, 432, 435, 1165, 1164, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 1104, 281, 1223, 478,
	479, 1127, 1175, 480, 1189, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 1224, 491, 1225, 1204, 492, 493, 1114, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 1205, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1185, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 1115, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1168, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 1183, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1230, 592, 593, 594, 595, 1206, 599,
	600, 0, 601, 602, 1101, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1195, 1196,
	1197, 1198, 0, 620, 0, 612, 613, 614, 1207, 615,
	1208, 1125, 616, 617, 618, 619, 0, 621, 622, 0,
	1108, 623, 624, 625, 627, 628, 626, 629, 1169, 630,
	0, 0, 631, 632, 633, 691, 1192, 1229, 0, 635,
	634, 636, 694, 637, 638, 0, 0, 0, 0, 639,
	640, 695, 641, 642, 643, 1105, 0, 0, 2448, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 282, 284, 283,
	285, 286, 287, 288, 1131, 289, 290, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 291, 292, 1211,
	293, 294, 295, 296, 297, 298, 645, 1184, 0, 299,
	1191, 300, 1190, 0, 1201, 301, 302, 303, 304, 305,
	306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0, 308,
	309, 1177, 0, 1158, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 335, 336, 337, 338, 339, 1194, 340,
	342, 1188, 1187, 1107, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1179, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1113, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1202, 1203, 372, 1126, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1186, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1213, 380, 381, 382,
	1199, 1200, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1209, 0, 1136, 393, 0, 394, 395,
	396, 397, 398, 1172, 1173, 1176, 481, 1215, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 1214, 408, 1181, 1182, 0, 1142, 0,
	409, 410, 1216, 1174, 1217, 411, 412, 413, 1218, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1210, 1219, 425, 426, 1220,
	0, 427, 428, 429, 430, 431, 432, 435, 1165, 1164,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1221,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1222, 477, 465, 1104, 281,
	1223, 478, 479, 1127, 1175, 480, 1189, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 1224, 491, 1225, 1204, 492, 493, 1114,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	1205, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1185, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1226, 547, 548, 549, 550, 551, 1115, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1168, 574,
	575, 557, 558, 576, 577, 1227, 578, 579, 580, 581,
	582, 583, 584, 1183, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1230, 592, 593, 594, 595,
	1206, 599, 600, 0, 601, 602, 1101, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1195, 1196, 1197, 1198, 0, 620, 0, 612, 613, 614,
	1207, 615, 1208, 1125, 616, 617, 618, 619, 0, 621,
	622, 0, 1108, 623, 624, 625, 627, 628, 626, 629,
	1169, 630, 0, 0, 631, 632, 633, 691, 1192, 1229,
	0, 635, 634, 636, 694, 637, 638, 0, 0, 0,
	0, 639, 640, 695, 641, 642, 643, 1105, 0, 0,
	2421, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 282,
	284, 283, 285, 286, 287, 288, 1131, 289, 290, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 1184,
	0, 299, 1191, 300, 1190, 0, 1201, 301, 302, 303,
	304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	1194, 340, 342, 1188, 1187, 1107, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1179, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1113, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 1126, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1186, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 1199, 1200, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 1136, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 1214, 408, 1181, 1182, 0,
	1142, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 1114, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1185, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 1115, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 1183, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1230, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 1101, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1195, 1196, 1197, 1198, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 1125, 616, 617, 618, 619,
	0, 621, 622, 0, 1108, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 691,
	1192, 1229, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1105,
	0, 0, 1750, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 282, 284, 283, 285, 286, 287, 288, 1131, 289,
	290, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 291, 292, 1211, 293, 294, 295, 296, 297, 298,
	645, 1184, 0, 299, 1191, 300, 1190, 0, 1201, 301,
	302, 303, 304, 305, 306, 1137, 1170, 1102, 307, 1231,
	1232, 652, 0, 308, 309, 1177, 0, 1158, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1212, 332, 333, 334,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337,
	338, 339, 1194, 340, 342, 1188, 1187, 1107, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1179, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1113, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1202, 1203, 372, 1126,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1186,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1213, 380, 381, 382, 1199, 1200, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1209, 0, 1136,
	393, 0, 394, 395, 396, 397, 398, 1172, 1173, 1176,
	481, 1215, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 0, 1214, 408, 1181,
	1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217, 411,
	412, 413, 1218, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1210,
	1219, 425, 426, 1220, 0, 427, 428, 429, 430, 431,
	432, 435, 1165, 1164, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1221, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1222,
	477, 465, 1104, 281, 1223, 478, 479, 1127, 1175, 480,
	1189, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 1224, 491, 1225,
	1204, 492, 493, 1114, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 1205, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1185, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1226, 547, 548, 549, 550, 551,
	1115, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1168, 574, 575, 557, 558, 576, 577, 1227,
	578, 579, 580, 581, 582, 583, 584, 1183, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1230,
	592, 593, 594, 595, 1206, 599, 600, 0, 601, 602,
	1101, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1195, 1196, 1197, 1198, 0, 620,
	0, 612, 613, 614, 1207, 615, 1208, 1125, 616, 617,
	618, 619, 0, 621, 622, 0, 1108, 623, 624, 625,
	627, 628, 626, 629, 1169, 630, 0, 0, 631, 632,
	633, 691, 1192, 1229, 0, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 1105, 0, 0, 1679, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 282, 284, 283, 285, 286, 287, 288,
	1131, 289, 290, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 1184, 0, 299, 1191, 300, 1190, 0,
	1201, 301, 302, 303, 304, 305, 306, 1137, 1170, 1102,
	307, 1231, 1232, 652, 0, 308, 309, 1177, 0, 1158,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1212, 332,
	333, 334, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335,
	336, 337, 338, 339, 1194, 340, 342, 1188, 1187, 1107,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1179, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1113, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1202, 1203,
	372, 1126, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 1186, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1213, 380, 381, 382, 1199, 1200, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1209,
	0, 1136, 393, 0, 394, 395, 396, 397, 398, 1172,
	1173, 1176, 481, 1215, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 1214,
	408, 1181, 1182, 0, 1142, 0, 409, 410, 1216, 1174,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1210, 1219, 425, 426, 1220, 0, 427, 428, 429,
	430, 431, 432, 435, 1165, 1164, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 1104, 281, 1223, 478, 479, 1127,
	1175, 480, 1189, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 1224,
	491, 1225, 1204, 492, 493, 1114, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 1205, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1185, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 1115, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1168, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 1183,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1230, 592, 593, 594, 595, 1206, 599, 600, 0,
	601, 602, 1101, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1195, 1196, 1197, 1198,
	0, 620, 0, 612, 613, 614, 1207, 615, 1208, 1125,
	616, 617, 618, 619, 0, 621, 622, 0, 1108, 623,
	624, 625, 627, 628, 626, 629, 1169, 630, 0, 0,
	631, 632, 633, 691, 1192, 1229, 0, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 1105, 0, 0, 1674, 0, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 282, 284, 283, 285, 286,
	287, 288, 1131, 289, 290, 0, 1129, 0, 0, 0,
	1171, 1135, 0, 0, 0, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 1184, 0, 299, 1191, 300,
	1190, 0, 1201, 301, 302, 303, 304, 305, 306, 1137,
	1170, 1102, 307, 1231, 1232, 652, 0, 308, 309, 1177,
	0, 1158, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 335, 336, 337, 338, 339, 1194, 340, 342, 1188,
	1187, 1107, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1179, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1113, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1202, 1203, 372, 1126, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1186, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1213, 380, 381, 382, 1199, 1200,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1209, 0, 1136, 393, 0, 394, 395, 396, 397,
	398, 1172, 1173, 1176, 481, 1215, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 1214, 408, 1181, 1182, 0, 1142, 0, 409, 410,
	1216, 1174, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1210, 1219, 425, 426, 1220, 0, 427,
	428, 429, 430, 431, 432, 435, 1165, 1164, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 1104, 281, 1223, 478,
	479, 1127, 1175, 480, 1189, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 1224, 491, 1225, 1204, 492, 493, 1114, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 1205, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1185, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 1115, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1168, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 1183, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1230, 592, 593, 594, 595, 1206, 599,
	600, 0, 601, 602, 1101, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1195, 1196,
	1197, 1198, 0, 620, 0, 612, 613, 614, 1207, 615,
	1208, 1125, 616, 617, 618, 619, 0, 621, 622, 0,
	1108, 623, 624, 625, 627, 628, 626, 629, 1169, 630,
	0, 0, 631, 632, 633, 691, 1192, 1229, 0, 635,
	634, 636, 694, 637, 638, 0, 0, 0, 0, 639,
	640, 695, 641, 642, 643, 1105, 0, 0, 1661, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 282, 284, 283,
	285, 286, 287, 288, 1131, 289, 290, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 291, 292, 1211,
	293, 294, 295, 296, 297, 298, 645, 1184, 0, 299,
	1191, 300, 1190, 0, 1201, 301, 302, 303, 304, 305,
	306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0, 308,
	309, 1177, 0, 1158, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 335, 336, 337, 338, 339, 1194, 340,
	342, 1188, 1187, 1107, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1179, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1113, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1202, 1203, 372, 1126, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1186, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1213, 380, 381, 382,
	1199, 1200, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1209, 0, 1136, 393, 0, 394, 395,
	396, 397, 398, 1172, 1173, 1176, 481, 1215, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 1214, 408, 1181, 1182, 0, 1142, 0,
	409, 410, 1216, 1174, 1217, 411, 412, 413, 1218, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1210, 1219, 425, 426, 1220,
	0, 427, 428, 429, 430, 431, 432, 435, 1165, 1164,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1221,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1222, 477, 465, 1104, 281,
	1223, 478, 479, 1127, 1175, 480, 1189, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 1224, 491, 1225, 1204, 492, 493, 1114,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	1205, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1185, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1226, 547, 548, 549, 550, 551, 1115, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1168, 574,
	575, 557, 558, 576, 577, 1227, 578, 579, 580, 581,
	582, 583, 584, 1183, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1230, 592, 593, 594, 595,
	1206, 599, 600, 0, 601, 602, 1101, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1195, 1196, 1197, 1198, 0, 620, 0, 612, 613, 614,
	1207, 615, 1208, 1125, 616, 617, 618, 619, 0, 621,
	622, 0, 1108, 623, 624, 625, 627, 628, 626, 629,
	1169, 630, 0, 0, 631, 632, 633, 691, 1192, 1229,
	0, 635, 634, 636, 694, 637, 638, 0, 0, 0,
	0, 639, 640, 695, 641, 642, 643, 1105, 0, 0,
	1656, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 282,
	284, 283, 285, 286, 287, 288, 1131, 289, 290, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 1184,
	0, 299, 1191, 300, 1190, 0, 1201, 301, 302, 303,
	304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	1194, 340, 342, 1188, 1187, 1107, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1179, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1113, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 1126, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1186, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 1199, 1200, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 1136, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 1214, 408, 1181, 1182, 0,
	1142, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 1114, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1185, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 1115, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 1183, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1230, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 1101, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1195, 1196, 1197, 1198, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 1125, 616, 617, 618, 619,
	0, 621, 622, 0, 1108, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 691,
	1192, 1229, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1105,
	0, 0, 1557, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 282, 284, 283, 285, 286, 287, 288, 1131, 289,
	290, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 291, 292, 1211, 293, 294, 295, 296, 297, 298,
	645, 1184, 0, 299, 1191, 300, 1190, 0, 1201, 301,
	302, 303, 304, 305, 306, 1137, 1170, 1102, 307, 1231,
	1232, 652, 0, 308, 309, 1177, 0, 1158, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1212, 332, 333, 334,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337,
	338, 339, 1194, 340, 342, 1188, 1187, 1107, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1179, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1113, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1202, 1203, 372, 1126,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1186,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1213, 380, 381, 382, 1199, 1200, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1209, 0, 1136,
	393, 0, 394, 395, 396, 397, 398, 1556, 1173, 1176,
	481, 1215, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 0, 1214, 408, 1181,
	1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217, 411,
	412, 413, 1218, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1210,
	1219, 425, 426, 1220, 0, 427, 428, 429, 430, 431,
	432, 435, 1165, 1164, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1221, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1222,
	477, 465, 1104, 281, 1223, 478, 479, 1127, 1175, 480,
	1189, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 1224, 491, 1225,
	1204, 492, 493, 1114, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 1205, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1185, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1226, 547, 548, 549, 550, 551,
	1115, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1168, 574, 575, 557, 558, 576, 577, 1227,
	578, 579, 580, 581, 582, 583, 584, 1183, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1230,
	592, 593, 594, 595, 1206, 599, 600, 0, 601, 602,
	1101, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1195, 1196, 1197, 1198, 0, 620,
	0, 612, 613, 614, 1207, 615, 1208, 1125, 616, 617,
	618, 619, 0, 621, 622, 0, 1108, 623, 624, 625,
	627, 628, 626, 629, 1169, 630, 0, 0, 631, 632,
	633, 691, 1192, 1229, 0, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 1105, 0, 0, 1551, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 282, 284, 283, 285, 286, 287, 288,
	1131, 289, 290, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 1184, 0, 299, 1191, 300, 1190, 0,
	1201, 301, 302, 303, 304, 305, 306, 1137, 1170, 1102,
	307, 1231, 1232, 652, 0, 308, 309, 1177, 0, 1158,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1212, 332,
	333, 334, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335,
	336, 337, 338, 339, 1194, 340, 342, 1188, 1187, 1107,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1179, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1113, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1202, 1203,
	372, 1126, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 1186, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1213, 380, 381, 382, 1199, 1200, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1209,
	0, 1136, 393, 0, 394, 395, 396, 397, 398, 1550,
	1173, 1176, 481, 1215, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 1214,
	408, 1181, 1182, 0, 1142, 0, 409, 410, 1216, 1174,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1210, 1219, 425, 426, 1220, 0, 427, 428, 429,
	430, 431, 432, 435, 1165, 1164, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 1104, 281, 1223, 478, 479, 1127,
	1175, 480, 1189, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 1224,
	491, 1225, 1204, 492, 493, 1114, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 1205, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1185, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 1115, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1168, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 1183,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1230, 592, 593, 594, 595, 1206, 599, 600, 0,
	601, 602, 1101, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1195, 1196, 1197, 1198,
	0, 620, 0, 612, 613, 614, 1207, 615, 1208, 1125,
	616, 617, 618, 619, 0, 621, 622, 0, 1108, 623,
	624, 625, 627, 628, 626, 629, 1169, 630, 0, 0,
	631, 632, 633, 691, 1192, 1229, 0, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 1105, 0, 0, 1544, 0, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 282, 284, 283, 285, 286,
	287, 288, 1131, 289, 290, 0, 1129, 0, 0, 0,
	1171, 1135, 0, 0, 0, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 1184, 0, 299, 1191, 300,
	1190, 0, 1201, 301, 302, 303, 304, 305, 306, 1137,
	1170, 1102, 307, 1231, 1232, 652, 0, 308, 309, 1177,
	0, 1158, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 335, 336, 337, 338, 339, 1194, 340, 342, 1188,
	1187, 1107, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1179, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1113, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1202, 1203, 372, 1126, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1186, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1213, 380, 381, 382, 1199, 1200,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1209, 0, 1136, 393, 0, 394, 395, 396, 397,
	398, 1172, 1173, 1176, 481, 1215, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 1214, 408, 1181, 1182, 0, 1142, 0, 409, 410,
	1216, 1174, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1210, 1219, 425, 426, 1220, 0, 427,
	428, 429, 430, 431, 432, 435, 1165, 1164, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 1104, 281, 1223, 478,
	479, 1127, 1175, 480, 1189, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 1224, 491, 1225, 1204, 492, 493, 1114, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 1205, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1185, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 1115, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1168, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 1183, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1230, 592, 593, 594, 595, 1206, 599,
	600, 0, 601, 602, 1101, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1195, 1196,
	1197, 1198, 0, 620, 0, 612, 613, 614, 1207, 615,
	1208, 1125, 616, 617, 618, 619, 0, 621, 622, 0,
	1108, 623, 624, 625, 627, 628, 626, 629, 1169, 630,
	0, 0, 631, 632, 633, 691, 1192, 1229, 0, 635,
	634, 636, 694, 637, 638, 0, 0, 0, 0, 639,
	640, 695, 641, 642, 643, 1105, 0, 0, 1353, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 282, 284, 283,
	285, 286, 287, 288, 1131, 289, 290, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 291, 292, 1211,
	293, 294, 295, 296, 297, 298, 645, 1184, 0, 299,
	1191, 300, 1190, 0, 1201, 301, 302, 303, 304, 305,
	306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0, 308,
	309, 1177, 0, 1158, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 335, 336, 337, 338, 339, 1194, 340,
	342, 1188, 1187, 1107, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1179, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1113, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1202, 1203, 372, 1126, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1186, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1213, 380, 381, 382,
	1199, 1200, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1209, 0, 1136, 393, 0, 394, 395,
	396, 397, 398, 1172, 1173, 1176, 481, 1215, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 1214, 408, 1181, 1182, 0, 1142, 0,
	409, 410, 1216, 1174, 1217, 411, 412, 413, 1218, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1210, 1219, 425, 426, 1220,
	0, 427, 428, 429, 430, 431, 432, 435, 1165, 1164,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1221,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1222, 477, 465, 1104, 281,
	1223, 478, 479, 1127, 1175, 480, 1189, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 1224, 491, 1225, 1204, 492, 493, 1114,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	1205, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1185, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1226, 547, 548, 549, 550, 551, 1115, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1168, 574,
	575, 557, 558, 576, 577, 1227, 578, 579, 580, 581,
	582, 583, 584, 1183, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1230, 592, 593, 594, 595,
	1206, 599, 600, 0, 601, 602, 1101, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1195, 1196, 1197, 1198, 0, 620, 0, 612, 613, 614,
	1207, 615, 1208, 1125, 616, 617, 618, 619, 0, 621,
	622, 0, 1108, 623, 624, 625, 627, 628, 626, 629,
	1169, 630, 0, 0, 631, 632, 633, 691, 1192, 1229,
	0, 635, 634, 636, 694, 637, 638, 0, 0, 0,
	0, 639, 640, 695, 641, 642, 643, 1105, 0, 0,
	0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 282,
	284, 283, 285, 286, 287, 288, 1131, 289, 290, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 1184,
	0, 299, 1191, 300, 1190, 0, 1201, 301, 302, 303,
	304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	1194, 340, 342, 1188, 1187, 1107, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1179, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1113, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 1126, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1186, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 1199, 1200, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 1136, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 1214, 408, 1181, 1182, 0,
	1142, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 1114, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1185, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 1115, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 1183, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1230, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 1101, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1195, 1196, 1197, 1198, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 1125, 616, 617, 618, 619,
	0, 621, 622, 0, 1108, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 691,
	1192, 1229, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1105,
	0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 282, 284, 283, 285, 286, 287, 288, 1131, 289,
	290, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 291, 292, 1211, 293, 294, 295, 296, 297, 298,
	645, 1184, 0, 299, 1191, 300, 1190, 0, 1201, 301,
	302, 303, 304, 305, 306, 1137, 1170, 1102, 307, 1231,
	1232, 652, 0, 308, 309, 1177, 0, 1158, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1212, 332, 333, 4809,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337,
	338, 339, 1194, 340, 342, 1188, 1187, 1107, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1179, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1113, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1202, 1203, 372, 1126,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1186,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1213, 380, 381, 382, 1199, 1200, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1209, 0, 1136,
	393, 0, 394, 395, 396, 397, 398, 1172, 1173, 1176,
	481, 1215, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 0, 1214, 408, 1181,
	1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217, 411,
	412, 413, 1218, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1210,
	1219, 425, 426, 1220, 0, 427, 428, 429, 430, 431,
	432, 435, 1165, 1164, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1221, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1222,
	477, 465, 1104, 281, 1223, 478, 479, 1127, 1175, 480,
	1189, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 1224, 491, 1225,
	1204, 492, 493, 1114, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 1205, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1185, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1226, 547, 548, 549, 550, 551,
	1115, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1168, 574, 575, 557, 558, 576, 577, 1227,
	578, 579, 580, 581, 582, 583, 584, 1183, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1230,
	592, 593, 594, 595, 1206, 599, 600, 0, 601, 602,
	1101, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1195, 1196, 1197, 1198, 0, 620,
	0, 612, 613, 614, 1207, 615, 1208, 1125, 616, 617,
	618, 619, 0, 4808, 622, 0, 1108, 623, 624, 625,
	627, 628, 626, 629, 1169, 630, 0, 0, 631, 632,
	633, 691, 1192, 1229, 0, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 1105, 0, 0, 0, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 282, 284, 283, 285, 286, 287, 288,
	1131, 289, 290, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 4807, 1184, 0, 299, 1191, 300, 1190, 0,
	1201, 301, 302, 303, 304, 305, 306, 1137, 1170, 1102,
	307, 1231, 1232, 652, 0, 308, 309, 1177, 0, 1158,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1212, 332,
	333, 4809, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335,
	336, 337, 338, 339, 1194, 340, 342, 1188, 1187, 1107,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1179, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1113, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1202, 1203,
	372, 1126, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 1186, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1213, 380, 381, 382, 1199, 1200, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1209,
	0, 1136, 393, 0, 394, 395, 396, 397, 398, 1172,
	1173, 1176, 481, 1215, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 1214,
	408, 1181, 1182, 0, 1142, 0, 409, 410, 1216, 1174,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1210, 1219, 425, 426, 1220, 0, 427, 428, 429,
	430, 431, 432, 435, 1165, 1164, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 1104, 281, 1223, 478, 479, 1127,
	1175, 480, 1189, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 1224,
	491, 1225, 1204, 492, 493, 1114, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 1205, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1185, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 1115, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1168, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 1183,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1230, 592, 593, 594, 595, 1206, 599, 600, 0,
	601, 602, 1101, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1195, 1196, 1197, 1198,
	0, 620, 0, 612, 613, 614, 1207, 615, 1208, 1125,
	616, 617, 618, 619, 0, 4808, 622, 0, 1108, 623,
	624, 625, 627, 628, 626, 629, 1169, 630, 0, 0,
	631, 632, 633, 691, 1192, 1229, 0, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 1105, 0, 0, 0, 0, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 282, 284, 283, 285, 286,
	287, 288, 1131, 289, 290, 0, 1129, 0, 0, 0,
	1171, 1135, 0, 0, 0, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 1184, 0, 299, 1191, 300,
	1190, 0, 1201, 301, 302, 303, 304, 305, 306, 1137,
	1170, 1102, 307, 1231, 1232, 652, 0, 308, 309, 1177,
	0, 1158, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1212, 332, 4428, 334, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 335, 336, 337, 338, 339, 1194, 340, 342, 1188,
	1187, 1107, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1179, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1113, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1202, 1203, 372, 1126, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1186, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1213, 380, 381, 382, 1199, 1200,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1209, 0, 4429, 393, 0, 394, 395, 396, 397,
	398, 1172, 1173, 1176, 481, 1215, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 1214, 408, 1181, 1182, 0, 1142, 0, 409, 410,
	1216, 1174, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1210, 1219, 425, 426, 1220, 0, 427,
	428, 429, 430, 431, 432, 435, 1165, 1164, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 1104, 281, 1223, 478,
	479, 1127, 1175, 480, 1189, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 1224, 491, 1225, 1204, 492, 493, 1114, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 1205, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1185, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1226, 547,
	548, 549, 4427, 551, 1115, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1168, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 1183, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1230, 592, 593, 594, 595, 1206, 599,
	600, 0, 601, 602, 1101, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1195, 1196,
	1197, 1198, 0, 620, 0, 612, 613, 614, 1207, 615,
	1208, 1125, 616, 617, 618, 619, 0, 621, 622, 0,
	1108, 623, 624, 625, 627, 628, 626, 629, 1169, 630,
	0, 0, 631, 632, 633, 691, 1192, 1229, 0, 635,
	634, 636, 694, 637, 638, 0, 0, 0, 0, 639,
	640, 695, 641, 642, 643, 1105, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 3229, 3230, 1130, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 282, 284, 283,
	285, 286, 287, 288, 1131, 289, 290, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 291, 292, 1211,
	293, 294, 295, 296, 297, 298, 645, 1184, 0, 299,
	1191, 300, 1190, 0, 1201, 301, 302, 303, 304, 305,
	306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0, 308,
	309, 1177, 0, 1158, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 335, 336, 337, 338, 339, 1194, 340,
	342, 1188, 1187, 1107, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1179, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1113, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1202, 1203, 372, 1126, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1186, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1213, 380, 381, 382,
	1199, 1200, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1209, 0, 1136, 393, 0, 394, 395,
	396, 397, 398, 1172, 1173, 1176, 481, 1215, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 1214, 408, 1181, 1182, 0, 1142, 0,
	409, 410, 1216, 1174, 1217, 411, 412, 413, 1218, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1210, 1219, 425, 426, 1220,
	0, 427, 428, 429, 430, 431, 432, 435, 1165, 1164,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1221,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1222, 477, 465, 1104, 281,
	1223, 478, 479, 1127, 1175, 480, 1189, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 1224, 491, 1225, 1204, 492, 493, 1114,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	1205, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1185, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1226, 547, 548, 549, 550, 551, 1115, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1168, 574,
	575, 557, 558, 576, 577, 1227, 578, 579, 580, 581,
	582, 583, 584, 1183, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1230, 592, 593, 594, 595,
	1206, 599, 600, 0, 601, 602, 1101, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1195, 1196, 1197, 1198, 0, 620, 0, 612, 613, 614,
	1207, 615, 1208, 1125, 616, 617, 618, 619, 0, 621,
	622, 0, 1108, 623, 624, 625, 627, 628, 626, 629,
	1169, 630, 0, 0, 631, 632, 633, 691, 1192, 1229,
	0, 635, 634, 636, 694, 637, 638, 0, 0, 0,
	0, 639, 640, 695, 641, 642, 643, 1105, 0, 0,
	0, 0, 1147, 1119, 1120, 1121, 3227, 3228, 1130, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 282,
	284, 283, 285, 286, 287, 288, 1131, 289, 290, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 1184,
	0, 299, 1191, 300, 1190, 0, 1201, 301, 302, 303,
	304, 305, 306, 1137, 1170, 1102, 307, 1231, 1232, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	1194, 340, 342, 1188, 1187, 1107, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1179, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1113, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 1126, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1186, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 1199, 1200, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 1136, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 1214, 408, 1181, 1182, 0,
	1142, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	1104, 281, 1223, 478, 479, 1127, 1175, 480, 1189, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 1114, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1185, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 1115, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 1183, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1230, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 1101, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1195, 1196, 1197, 1198, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 1125, 616, 617, 618, 619,
	0, 621, 622, 0, 1108, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 691,
	1192, 1229, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1105,
	0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 282, 284, 283, 285, 286, 287, 288, 1131, 289,
	290, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 291, 292, 1211, 293, 294, 295, 296, 297, 298,
	645, 1184, 0, 299, 1191, 300, 1190, 0, 1201, 301,
	302, 303, 304, 305, 306, 1137, 1170, 1102, 307, 1231,
	1232, 652, 0, 308, 309, 1177, 0, 1158, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1212, 332, 333, 334,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 335, 336, 337,
	338, 339, 1194, 340, 342, 1188, 1187, 1107, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1179, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1113, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1202, 1203, 372, 1126,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1186,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1213, 380, 381, 382, 1199, 1200, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1209, 0, 1136,
	393, 0, 394, 395, 396, 397, 398, 1172, 1173, 1176,
	481, 1215, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 0, 1214, 408, 1181,
	1182, 0, 1142, 0, 409, 410, 1216, 1174, 1217, 411,
	412, 413, 1218, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1210,
	1219, 425, 426, 1220, 0, 427, 428, 429, 430, 431,
	432, 435, 1165, 1164, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1221, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1222,
	477, 465, 1104, 281, 1223, 478, 479, 1127, 1175, 480,
	1189, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 1224, 491, 1225,
	1204, 492, 493, 1114, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 1205, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1185, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1226, 547, 548, 549, 550, 551,
	1115, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1168, 574, 575, 557, 558, 576, 577, 1227,
	578, 579, 580, 581, 582, 583, 584, 1183, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1230,
	592, 593, 594, 595, 1206, 599, 600, 0, 601, 602,
	1101, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1195, 1196, 1197, 1198, 0, 620,
	0, 612, 613, 614, 1207, 615, 1208, 1125, 616, 617,
	618, 619, 0, 621, 622, 0, 1108, 623, 624, 625,
	627, 628, 626, 629, 1169, 630, 0, 0, 631, 632,
	633, 691, 1192, 1229, 0, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 1105, 0, 0, 0, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 1100, 0, 0, 0, 0, 0,
	0, 2494, 2495, 282, 284, 283, 285, 286, 287, 288,
	1131, 289, 290, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 1184, 0, 299, 1191, 300, 1190, 0,
	1201, 301, 302, 303, 304, 305, 306, 1137, 1170, 0,
	307, 1231, 1232, 652, 0, 308, 309, 1177, 0, 1158,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1212, 332,
	333, 334, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335,
	336, 337, 338, 339, 1194, 340, 342, 1188, 1187, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1179, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1113, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1202, 1203,
	372, 1126, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 1186, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1213, 380, 381, 382, 1199, 1200, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1209,
	0, 1136, 393, 0, 394, 395, 396, 397, 398, 1172,
	1173, 1176, 481, 1215, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 1214,
	408, 1181, 1182, 0, 1142, 0, 409, 410, 1216, 1174,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1210, 1219, 425, 426, 1220, 0, 427, 428, 429,
	430, 431, 432, 435, 1165, 1164, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 0, 281, 1223, 478, 479, 1127,
	1175, 480, 1189, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 1224,
	491, 1225, 1204, 492, 493, 1114, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 1205, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1185, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 1115, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1168, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 1183,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1230, 592, 593, 594, 595, 1206, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1195, 1196, 1197, 1198,
	0, 620, 0, 612, 613, 614, 1207, 615, 1208, 1125,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 1169, 630, 0, 0,
	631, 632, 633, 691, 1192, 1229, 0, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 2753, 0, 0, 0,
	0, 0, 0, 2751, 2752, 282, 284, 283, 285, 286,
	287, 288, 1131, 289, 290, 0, 1129, 0, 0, 0,
	1171, 1135, 0, 0, 0, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 1184, 0, 299, 1191, 300,
	1190, 0, 1201, 301, 302, 303, 304, 305, 306, 1137,
	1170, 0, 307, 1231, 1232, 652, 0, 308, 309, 1177,
	0, 1158, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 335, 336, 337, 338, 339, 1194, 340, 342, 1188,
	1187, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1179, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1113, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1202, 1203, 372, 1126, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1186, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1213, 380, 381, 382, 1199, 1200,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1209, 0, 1136, 393, 0, 394, 395, 396, 397,
	398, 1172, 1173, 1176, 481, 1215, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 1214, 408, 1181, 1182, 0, 1142, 0, 409, 410,
	1216, 1174, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1210, 1219, 425, 426, 1220, 0, 427,
	428, 429, 430, 431, 432, 435, 1165, 1164, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 0, 281, 1223, 478,
	479, 1127, 1175, 480, 1189, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 1224, 491, 1225, 1204, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 1205, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1185, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 3222, 3223, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1168, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 1183, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1230, 592, 593, 594, 595, 1206, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1195, 1196,
	1197, 1198, 0, 620, 0, 612, 613, 614, 1207, 615,
	1208, 1125, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 1169, 630,
	0, 0, 631, 632, 633, 691, 1192, 1229, 0, 635,
	634, 636, 694, 637, 638, 0, 0, 0, 0, 639,
	640, 695, 641, 642, 643, 0, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 0, 0,
	0, 0, 0, 0, 0, 2157, 2158, 282, 284, 283,
	285, 286, 287, 288, 1131, 289, 290, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 291, 292, 1211,
	293, 294, 295, 296, 297, 298, 0, 1184, 0, 299,
	1191, 300, 1190, 0, 1201, 301, 302, 303, 304, 305,
	306, 1137, 1170, 1102, 307, 1231, 1232, 652, 0, 308,
	309, 1177, 0, 1158, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1212, 332, 333, 4809, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 335, 336, 337, 338, 339, 1194, 340,
	342, 1188, 1187, 1107, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1179, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1113, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1202, 1203, 372, 1126, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1186, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1213, 380, 381, 382,
	1199, 1200, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1209, 0, 1136, 393, 0, 394, 395,
	396, 397, 398, 1172, 1173, 1176, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 1214, 408, 1181, 1182, 0, 1142, 0,
	409, 410, 0, 1174, 0, 411, 412, 413, 1218, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1210, 1219, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 1165, 1164,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1221,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1222, 477, 465, 1104, 281,
	0, 478, 479, 1127, 1175, 480, 1189, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 1224, 491, 1225, 1204, 492, 493, 1114,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	1205, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1185, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1226, 547, 548, 549, 550, 551, 1115, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1168, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 1183, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1230, 592, 593, 594, 595,
	1206, 599, 600, 0, 601, 602, 1101, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1195, 1196, 1197, 1198, 0, 620, 0, 612, 613, 614,
	1207, 615, 1208, 1125, 616, 617, 618, 619, 0, 4808,
	622, 0, 1108, 623, 624, 625, 627, 628, 626, 629,
	1169, 630, 0, 0, 631, 632, 633, 691, 1192, 1229,
	0, 635, 634, 636, 694, 637, 638, 0, 0, 0,
	0, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	1091, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1098, 1099, 282,
	284, 283, 285, 286, 287, 288, 1131, 289, 290, 0,
	1129, 0, 0, 0, 1171, 0, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 0, 649, 301, 302, 303,
	304, 305, 306, 0, 1170, 0, 307, 650, 651, 652,
	0, 308, 309, 1177, 0, 1158, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1202, 1203, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 659, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1209, 0, 663, 393, 0,
	394, 395, 396, 397, 398, 1172, 1173, 1176, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 1214, 408, 667, 668, 0,
	669, 0, 409, 410, 1216, 1174, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1255, 421, 423, 422, 0, 424, 1210, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	1165, 1164, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	0, 281, 1223, 478, 479, 0, 1175, 480, 673, 482,
	483, 0, 0, 484, 0, 0, 1261, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 1204, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 1205, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 680, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 681, 1263,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 241, 569, 570, 568, 571, 572, 573,
	1168, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 1206, 599, 600, 0, 601, 602, 0, 598,
	589, 243, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 685, 686, 687, 688, 0, 620, 0, 612,
	613, 614, 1207, 615, 1208, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 1169, 630, 0, 0, 631, 632, 633, 1645,
	692, 693, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 235, 639, 640, 695, 641, 642, 643, 1269,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 1259, 0, 1999, 0,
	0, 1171, 0, 0, 0, 0, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 1170, 0, 307, 650, 651, 652, 0, 308, 309,
	1177, 0, 1158, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1202, 1203, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1213, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1209, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 1172, 1173, 1176, 481, 1215, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 1214, 408, 667, 668, 0, 669, 0, 409,
	410, 1216, 1174, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1255, 421,
	423, 422, 0, 424, 1210, 1219, 425, 426, 1220, 0,
	427, 428, 429, 430, 431, 432, 435, 1165, 1164, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 0, 281, 1223,
	478, 479, 0, 1175, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 1261, 486, 487, 488, 0, 0, 489,
	490, 674, 1224, 491, 1225, 1204, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 1205,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 681, 1263, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	241, 569, 570, 568, 571, 572, 573, 1168, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 1206,
	599, 600, 0, 601, 602, 0, 598, 589, 243, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 1207,
	615, 1208, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 1169,
	630, 0, 0, 631, 632, 633, 1645, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 235,
	639, 640, 695, 641, 642, 643, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 3386, 0, 1269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1259, 0, 1999, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 0, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 1170, 0, 307, 650, 651, 652, 0, 308, 309,
	1177, 0, 1158, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1202, 1203, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1213, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1209, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 1172, 1173, 1176, 481, 1215, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 1214, 408, 667, 668, 0, 669, 0, 409,
	410, 1216, 1174, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1255, 421,
	423, 422, 0, 424, 1210, 1219, 425, 426, 1220, 0,
	427, 428, 429, 430, 431, 432, 435, 1165, 1164, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 0, 281, 1223,
	478, 479, 0, 1175, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 1261, 486, 487, 488, 0, 0, 489,
	490, 674, 1224, 491, 1225, 1204, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 1205,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 681, 1263, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1168, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 1206,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 1207,
	615, 1208, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 1169,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 0, 1251, 0, 1269,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1171, 0, 1259, 0, 1257, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 1170, 0, 307, 650, 651, 652, 0, 308, 309,
	1177, 0, 1158, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1202, 1203, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1213, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1209, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 1172, 1173, 1176, 481, 1215, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 1214, 408, 667, 668, 0, 669, 0, 409,
	410, 1216, 1174, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1255, 421,
	423, 422, 0, 424, 1210, 1219, 425, 426, 1220, 0,
	427, 428, 429, 430, 431, 432, 435, 1165, 1164, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 0, 281, 1223,
	478, 479, 0, 1175, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 1261, 486, 487, 488, 0, 0, 489,
	490, 674, 1224, 491, 1225, 1204, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 1205,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 681, 1263, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1168, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 1206,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 1207,
	615, 1208, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 1169,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 1269,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1171, 0, 1259, 0, 1257, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 1170, 0, 307, 650, 651, 652, 0, 308, 309,
	1177, 0, 1158, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1202, 1203, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1213, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1209, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 1172, 1173, 1176, 481, 1215, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 1214, 408, 667, 668, 0, 669, 0, 409,
	410, 1216, 1174, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1255, 421,
	423, 422, 0, 424, 1210, 1219, 425, 426, 1220, 0,
	427, 428, 429, 430, 431, 432, 435, 1165, 1164, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 0, 281, 1223,
	478, 479, 0, 1175, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 1261, 486, 487, 488, 0, 0, 489,
	490, 674, 1224, 491, 1225, 1204, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 1205,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 681, 1263, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1168, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 1206,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 1207,
	615, 1208, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 1169,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 1269,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1171, 0, 1259, 0, 1257, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 1170, 0, 307, 650, 651, 652, 0, 308, 309,
	1177, 0, 1158, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1202, 1203, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1213, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1209, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 1172, 1173, 1176, 481, 1215, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 1214, 408, 667, 668, 0, 669, 0, 409,
	410, 1216, 1174, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1210, 1219, 425, 426, 1220, 0,
	427, 428, 429, 430, 431, 432, 435, 1165, 1164, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 0, 281, 1223,
	478, 479, 0, 1175, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 1224, 491, 1225, 1204, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 1205,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1168, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 1206,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 1207,
	615, 1208, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 1169,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 1269,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 4245, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 1170, 0, 307, 650, 651, 652, 0, 308, 309,
	1177, 0, 1158, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1212, 332, 333, 334, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1202, 1203, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1213, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1209, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 1172, 1173, 1176, 481, 1215, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 1214, 408, 667, 668, 0, 669, 0, 409,
	410, 1216, 1174, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1210, 1219, 425, 426, 1220, 0,
	427, 428, 429, 430, 431, 432, 435, 1165, 1164, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 0, 281, 1223,
	478, 479, 0, 1175, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 1224, 491, 1225, 1204, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 1205,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 681, 1263, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1168, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 1206,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 1207,
	615, 1208, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 1169,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 276, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 2598, 2599, 2600, 2617,
	2618, 2619, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 2620, 0, 644, 0,
	0, 0, 0, 291, 292, 1896, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 1881,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 2610, 0,
	318, 319, 320, 317, 321, 0, 322, 2606, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 2611, 2612, 2613, 2614, 373, 374,
	375, 659, 0, 0, 2605, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 2615, 2616, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	2608, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 2609, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 1880, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	1091, 0, 1571, 2595, 2596, 2597, 2621, 2607, 2601, 0,
	2603, 2604, 2602, 2589, 2590, 2591, 2592, 2593, 2594, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 644, 0, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 0, 649, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 650, 651, 652,
	0, 308, 309, 653, 0, 1493, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 657, 658, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 659, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 662, 0, 663, 393, 0,
	394, 395, 396, 397, 398, 664, 665, 666, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 1214, 408, 667, 668, 0,
	669, 0, 409, 410, 1216, 670, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 671, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	0, 0, 1223, 478, 479, 0, 672, 480, 673, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 675, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 678, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 680, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 681, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 241, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 684, 599, 600, 0, 601, 602, 0, 598,
	589, 243, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 685, 686, 687, 688, 0, 620, 0, 612,
	613, 614, 689, 615, 690, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 1645,
	692, 693, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 235, 639, 640, 695, 641, 642, 643, 0,
	0, 236, 1642, 0, 1571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 193, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 1211, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 1493, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1212, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1213, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 1215, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 1214, 408, 667,
	668, 0, 669, 0, 409, 410, 1216, 670, 1217, 411,
	412, 413, 1218, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	1219, 425, 426, 1220, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1221, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1222,
	477, 465, 0, 0, 1223, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 1224, 491, 1225,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1226, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 241, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 1227,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 243, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 1645, 692, 693, 0, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 235, 639, 640, 695, 641, 642,
	643, 1571, 1570, 236, 0, 0, 0, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	193, 0, 0, 644, 0, 0, 0, 0, 291, 292,
	1211, 293, 294, 295, 296, 297, 298, 645, 646, 0,
	299, 647, 300, 648, 0, 649, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 650, 651, 652, 0,
	308, 309, 653, 0, 1493, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1212, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 654, 655, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 656, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 657, 658, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 659, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1213, 380, 381,
	382, 660, 661, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 662, 0, 663, 393, 0, 394,
	395, 396, 397, 398, 664, 665, 666, 481, 1215, 399,
	400, 0, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 1214, 408, 667, 668, 0, 669,
	0, 409, 410, 1216, 670, 1217, 411, 412, 413, 1218,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 671, 1219, 425, 426,
	1220, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1221, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1222, 477, 465, 0,
	0, 1223, 478, 479, 0, 672, 480, 673, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 674, 1224, 491, 1225, 675, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 678, 511, 679, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 680, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1226, 547, 548, 549, 550, 551, 681, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 1227, 578, 579, 580,
	581, 582, 583, 584, 682, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 683, 592, 593, 594,
	595, 684, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 685, 686, 687, 688, 0, 620, 0, 612, 613,
	614, 689, 615, 690, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 691, 692,
	693, 0, 635, 634, 636, 694, 637, 638, 0, 0,
	0, 0, 639, 640, 695, 641, 642, 643, 1571, 1570,
	0, 0, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 1669, 0, 0,
	644, 0, 0, 0, 0, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 646, 0, 299, 647, 300,
	648, 0, 649, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 650, 651, 652, 0, 308, 309, 653,
	0, 1493, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1212, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 654,
	655, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 656, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	657, 658, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 659, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1213, 380, 381, 382, 660, 661,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 662, 0, 663, 393, 0, 394, 395, 396, 397,
	398, 664, 665, 666, 481, 1215, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 1214, 408, 667, 668, 0, 669, 0, 409, 410,
	1216, 670, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 671, 1219, 425, 426, 1220, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 0, 0, 1223, 478,
	479, 0, 672, 480, 673, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 1224, 491, 1225, 675, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 678, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 680, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 681, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 682, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 683, 592, 593, 594, 595, 684, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 685, 686,
	687, 688, 0, 620, 0, 612, 613, 614, 689, 615,
	690, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 691, 692, 693, 0, 635,
	634, 636, 694, 637, 638, 0, 0, 0, 0, 639,
	640, 695, 641, 642, 643, 1571, 1570, 0, 0, 0,
	0, 1568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 3703, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 1211, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 0, 308, 309, 653, 0, 1493, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1212, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1213, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 664, 665,
	666, 481, 1215, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 1214, 408,
	667, 668, 0, 669, 0, 409, 410, 1216, 670, 1217,
	411, 412, 413, 1218, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 1219, 425, 426, 1220, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1221, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1222, 477, 465, 0, 0, 1223, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 1224, 491,
	1225, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 2362, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1226, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	1227, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 0, 635, 634, 636, 694,
	637, 638, 0, 0, 0, 0, 639, 640, 695, 641,
	642, 643, 1571, 2272, 0, 0, 0, 0, 2273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 1669, 0, 0, 644, 0, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 0, 649, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 650, 651, 652,
	0, 308, 309, 653, 0, 1493, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 657, 658, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 659, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 662, 0, 663, 393, 0,
	394, 395, 396, 397, 398, 664, 665, 666, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 1214, 408, 667, 668, 0,
	669, 0, 409, 410, 1216, 670, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 2271, 423, 422, 0, 424, 671, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	0, 0, 1223, 478, 479, 0, 672, 480, 673, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 675, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 678, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 680, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 681, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 684, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 685, 686, 687, 688, 0, 620, 0, 612,
	613, 614, 689, 615, 690, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 691,
	692, 693, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1571,
	1570, 0, 0, 0, 0, 1568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 1669, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 1211, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 1493, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1212, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1213, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 1215, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 1214, 408, 667, 668, 0, 669, 0, 409,
	410, 1216, 670, 1217, 411, 412, 413, 1218, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 1219, 425, 426, 1220, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1221, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1222, 477, 465, 0, 0, 1223,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 1224, 491, 1225, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1226,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 1227, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 0, 1091, 0, 276,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 1651, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	241, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 243, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 1645, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 276, 0, 0, 235,
	639, 640, 695, 641, 642, 643, 0, 0, 236, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 193, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 1269, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 2013, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 1170, 0,
	307, 650, 651, 652, 0, 308, 309, 1177, 0, 1158,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1212, 332,
	333, 334, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1202, 1203,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1213, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1209,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 1172,
	1173, 1176, 481, 1215, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 1214,
	408, 667, 668, 0, 669, 0, 409, 410, 1216, 1174,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1210, 1219, 425, 426, 1220, 0, 427, 428, 429,
	430, 431, 432, 435, 1165, 1164, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 0, 281, 1223, 478, 479, 0,
	1175, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 1224,
	491, 1225, 1204, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 1205, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1168, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 1206, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 1207, 615, 1208, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 1169, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 276, 3136, 0, 0, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 0, 635, 634, 636, 694, 637, 638,
	276, 0, 0, 0, 639, 640, 695, 641, 642, 643,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 0, 291, 292, 4971,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 0, 649, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 650, 651, 652, 0, 308,
	309, 653, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 654, 655, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 662, 0, 663, 393, 0, 394, 395,
	396, 397, 398, 664, 665, 666, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 0, 408, 667, 668, 0, 669, 0,
	409, 410, 0, 670, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 671, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 281,
	0, 478, 479, 0, 672, 480, 673, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 0, 491, 0, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	685, 686, 687, 688, 0, 620, 0, 612, 613, 614,
	689, 615, 690, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 691, 692, 693,
	0, 635, 634, 636, 694, 637, 638, 0, 276, 0,
	0, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	644, 0, 0, 0, 3653, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 645, 646, 0, 299, 647, 300,
	648, 0, 649, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 650, 651, 652, 0, 308, 309, 653,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 654,
	655, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 656, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	657, 658, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 659, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 660, 661,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 662, 0, 663, 393, 0, 394, 395, 396, 397,
	398, 664, 665, 666, 481, 0, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 0, 408, 667, 668, 0, 669, 0, 409, 410,
	0, 670, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 671, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 281, 0, 478,
	479, 0, 672, 480, 673, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 0, 491, 0, 675, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 678, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 680, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 681, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 682, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 683, 592, 593, 594, 595, 684, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 685, 686,
	687, 688, 0, 620, 0, 612, 613, 614, 689, 615,
	690, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 691, 692, 693, 0, 635,
	634, 636, 694, 637, 638, 0, 276, 0, 0, 639,
	640, 695, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 1639, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 276, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 3124, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 0, 635, 634, 636, 694, 637, 638,
	276, 0, 0, 0, 639, 640, 695, 641, 642, 643,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 0, 291, 292, 3808,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 0, 649, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 650, 651, 652, 0, 308,
	309, 653, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 654, 655, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 662, 0, 663, 393, 0, 394, 395,
	396, 397, 398, 664, 665, 666, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 667, 668, 0, 669, 0,
	409, 410, 0, 670, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 671, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 672, 480, 673, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 0, 491, 0, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	685, 686, 687, 688, 0, 620, 0, 612, 613, 614,
	689, 615, 690, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 691, 692, 693,
	0, 635, 634, 636, 694, 637, 638, 0, 921, 0,
	822, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 2349, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 0, 649, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 650, 651, 652, 0, 308,
	309, 653, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 829, 339, 0, 340,
	342, 654, 655, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 919, 0, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 662, 0, 663, 393, 0, 394, 395,
	396, 397, 398, 664, 665, 666, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 0, 408, 667, 668, 0, 669, 0,
	409, 410, 0, 670, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 671, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 281,
	0, 478, 479, 0, 672, 480, 673, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 0, 491, 0, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 0, 601, 602, 0, 598, 589, 827,
	603, 604, 605, 606, 607, 828, 609, 610, 0, 611,
	685, 686, 687, 688, 0, 620, 0, 612, 613, 614,
	689, 615, 690, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 691, 692, 693,
	822, 635, 634, 636, 694, 637, 638, 0, 0, 0,
	0, 639, 640, 695, 641, 642, 643, 282, 284, 283,
	285, 286, 287, 288, 2084, 289, 290, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 0, 291, 292, 832,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 0, 649, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 650, 651, 652, 0, 308,
	309, 653, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 829, 339, 0, 340,
	342, 654, 655, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 662, 0, 663, 393, 0, 394, 395,
	396, 397, 398, 664, 665, 666, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 0, 408, 667, 668, 0, 669, 0,
	409, 410, 0, 670, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 671, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 281,
	0, 478, 479, 0, 672, 480, 673, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 0, 491, 0, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 2083, 564, 565, 566,
	567, 0, 2085, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 0, 601, 602, 0, 598, 589, 827,
	603, 604, 605, 606, 607, 828, 609, 610, 0, 611,
	685, 686, 687, 688, 0, 620, 0, 612, 613, 614,
	689, 615, 690, 0, 616, 617, 2082, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 691, 692, 693,
	822, 635, 634, 636, 694, 637, 638, 0, 0, 0,
	0, 639, 640, 695, 641, 642, 643, 282, 284, 283,
	285, 286, 287, 288, 2035, 289, 290, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 0, 291, 292, 832,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 0, 649, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 650, 651, 652, 0, 308,
	309, 653, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 829, 339, 0, 340,
	342, 654, 655, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 662, 0, 663, 393, 0, 394, 395,
	396, 397, 398, 664, 665, 666, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 0, 408, 667, 668, 0, 669, 0,
	409, 410, 0, 670, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 671, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 281,
	0, 478, 479, 0, 672, 480, 673, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 0, 491, 0, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 2034, 564, 565, 566,
	567, 0, 2036, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 0, 601, 602, 0, 598, 589, 827,
	603, 604, 605, 606, 607, 828, 609, 610, 0, 611,
	685, 686, 687, 688, 0, 620, 0, 612, 613, 614,
	689, 615, 690, 0, 616, 617, 2033, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 691, 692, 693,
	0, 635, 634, 636, 694, 637, 638, 820, 0, 822,
	0, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 832,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 829, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 281, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 827, 603,
	604, 605, 606, 607, 828, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 2057, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 832, 0,
	0, 0, 0, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 0, 2063, 0, 299, 2053, 300, 2069, 0,
	2076, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 2079, 2080, 0, 0, 308, 309, 0, 0, 1493,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1212, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 1194, 340, 342, 2067, 2066, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1179, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 0, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 2065, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1213, 380, 381, 382, 2074, 2075, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 0,
	0, 0, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 481, 1215, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 1214,
	408, 2060, 2061, 0, 2056, 0, 409, 410, 1216, 0,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 0, 1219, 425, 426, 1220, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 0, 0, 1223, 478, 479, 0,
	0, 480, 2068, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 0, 1224,
	491, 1225, 0, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 2050, 505,
	506, 507, 2051, 508, 509, 510, 0, 511, 0, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 2064, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 0, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 2062,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 2078, 592, 593, 594, 595, 0, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 2070, 2071, 2072, 2073,
	0, 620, 0, 612, 613, 614, 0, 615, 0, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 0, 2054, 2077, 0, 635, 634, 636,
	0, 637, 638, 0, 0, 0, 0, 639, 640, 0,
	641, 642, 643, 822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 2044, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 829,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 280, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 281, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 827, 603, 604, 605, 606, 607, 828, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 822, 635, 634, 636, 694, 637, 638,
	0, 0, 0, 0, 639, 640, 695, 641, 642, 643,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 832, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 829,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 280, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 281, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 2400, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 2401,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 827, 603, 604, 605, 606, 607, 828, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 2402,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 276, 635, 634, 636, 694, 637, 638,
	0, 0, 0, 0, 639, 640, 695, 641, 642, 643,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 832, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 280, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 281, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 0, 635, 634, 636, 694, 637, 638,
	0, 0, 0, 0, 639, 640, 695, 641, 642, 643,
	0, 0, 0, 0, 0, 0, 1571, 1570, 0, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 832, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 1211, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 1493,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1212, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1213, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 1215, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 1214,
	408, 667, 668, 0, 669, 0, 409, 410, 1216, 670,
	1217, 411, 412, 413, 1218, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 1219, 425, 426, 1220, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1221, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1222, 477, 465, 0, 0, 1223, 478, 479, 4011,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 1224,
	491, 1225, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1226, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 1227, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 1571, 1570, 0, 0, 0, 0, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 1211, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 1493, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1212, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1213,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	1215, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 1214, 408, 667, 668,
	0, 669, 0, 409, 410, 1216, 670, 1217, 411, 412,
	413, 1218, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 1219,
	425, 426, 1220, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1221, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1222, 477,
	465, 0, 0, 1223, 478, 479, 3603, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 1224, 491, 1225, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1226, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 1227, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 0, 635, 634, 636, 694, 637, 638,
	0, 0, 0, 0, 639, 640, 695, 641, 642, 643,
	1699, 0, 1571, 1570, 0, 0, 0, 0, 1568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 644, 0, 0, 0, 0, 291,
	292, 1211, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 0, 649, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 650, 651, 652,
	0, 308, 309, 653, 0, 1493, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1212, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 657, 658, 372, 0, 279, 0,
	0, 0, 0, 0, 1698, 374, 375, 659, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1213, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 662, 0, 663, 393, 0,
	394, 395, 396, 397, 398, 664, 665, 666, 481, 1215,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 1214, 408, 667, 668, 0,
	669, 0, 409, 410, 1216, 670, 1217, 411, 412, 413,
	1218, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 671, 1219, 425,
	426, 1220, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1221, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1222, 477, 465,
	0, 0, 1223, 478, 479, 0, 672, 480, 673, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 1224, 491, 1225, 675, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 678, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 1697, 522, 680, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1226, 547, 548, 549, 550, 551, 681, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 1696,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 1227, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 684, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 685, 686, 687, 688, 0, 620, 0, 612,
	613, 614, 689, 615, 690, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 691,
	692, 693, 0, 635, 634, 636, 694, 637, 638, 0,
	0, 0, 0, 639, 640, 695, 641, 642, 643, 1564,
	0, 1571, 1570, 0, 0, 0, 0, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 644, 0, 0, 0, 0, 291, 292,
	1211, 293, 294, 295, 296, 297, 298, 645, 646, 0,
	299, 647, 300, 648, 0, 649, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 650, 651, 652, 0,
	308, 309, 653, 0, 1493, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1212, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 654, 655, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 656, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 657, 658, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 659, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1213, 380, 381,
	382, 660, 661, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 662, 0, 663, 393, 0, 394,
	395, 396, 397, 398, 1566, 665, 666, 481, 1215, 399,
	400, 0, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 1214, 408, 667, 668, 0, 669,
	0, 409, 410, 1216, 670, 1217, 411, 412, 413, 1218,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 671, 1219, 425, 426,
	1220, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1221, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1222, 477, 465, 0,
	0, 1223, 478, 479, 0, 672, 480, 673, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 674, 1224, 491, 1225, 675, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 678, 511, 679, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 680, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1226, 547, 548, 549, 550, 551, 681, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 1227, 578, 579, 580,
	581, 582, 583, 584, 682, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 683, 592, 593, 594,
	595, 684, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 685, 686, 687, 688, 0, 620, 0, 612, 613,
	614, 689, 615, 690, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 691, 692,
	693, 0, 635, 634, 636, 694, 637, 638, 0, 0,
	0, 0, 639, 640, 695, 641, 642, 643, 1571, 1570,
	0, 0, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	644, 0, 0, 0, 0, 291, 292, 1211, 293, 294,
	295, 296, 297, 298, 645, 646, 0, 299, 647, 300,
	648, 0, 649, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 650, 651, 652, 0, 308, 309, 653,
	0, 1493, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1212, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 654,
	655, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 656, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	657, 658, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 659, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1213, 380, 381, 382, 660, 661,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 662, 0, 663, 393, 0, 394, 395, 396, 397,
	398, 664, 665, 666, 481, 1215, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 1214, 408, 667, 668, 0, 669, 0, 409, 410,
	1216, 670, 1217, 411, 412, 413, 1218, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 671, 1219, 425, 426, 1220, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1221, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1222, 477, 465, 0, 0, 1223, 478,
	479, 0, 672, 480, 673, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 1224, 491, 1225, 675, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 678, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 680, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1226, 547,
	548, 549, 550, 551, 681, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 1227, 578, 579, 580, 581, 582, 583,
	584, 682, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 683, 592, 593, 594, 595, 684, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 685, 686,
	687, 688, 0, 620, 0, 612, 613, 614, 689, 615,
	690, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 691, 692, 693, 0, 635,
	634, 636, 694, 637, 638, 1571, 1570, 0, 0, 639,
	640, 695, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 1211, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 0, 308, 309, 653, 0, 1493, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1212, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1213, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 664, 665,
	666, 481, 1215, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 1214, 408,
	667, 668, 0, 669, 0, 409, 410, 1216, 670, 1217,
	411, 412, 413, 1218, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 1219, 425, 426, 1220, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1221, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1222, 477, 465, 0, 0, 1223, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 1224, 491,
	1225, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1226, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	1227, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 1571, 635, 634, 636, 694,
	637, 638, 0, 0, 0, 0, 639, 640, 695, 641,
	642, 643, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 1211, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 0, 308, 309, 653, 0, 1493, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1212, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1213, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 664, 665,
	666, 481, 1215, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 1214, 408,
	667, 668, 0, 669, 0, 409, 410, 1216, 670, 1217,
	411, 412, 413, 1218, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 1219, 425, 426, 1220, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1221, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1222, 477, 465, 0, 0, 1223, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 1224, 491,
	1225, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1226, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	1227, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 276, 635, 634, 636, 694,
	637, 638, 0, 0, 0, 0, 639, 640, 695, 641,
	642, 643, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 2923, 308, 309, 653, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 3645, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 2927, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 3644, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 2926,
	0, 0, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 664, 665,
	666, 481, 0, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 3641, 405, 406, 407, 0, 0, 408,
	667, 668, 0, 669, 0, 409, 3643, 0, 670, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 0, 425, 426, 3640, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 0, 491,
	0, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	2925, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 3642, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 276, 635, 634, 636, 694,
	637, 638, 0, 0, 0, 0, 639, 640, 695, 641,
	642, 643, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 2923, 308, 309, 653, 0, 0, 2917,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 2919, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 2927, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 2926,
	0, 0, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 2916, 665,
	666, 481, 0, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	667, 668, 0, 669, 0, 409, 410, 0, 670, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 0, 491,
	0, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	2925, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 2924, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 0, 635, 634, 636, 694,
	637, 638, 1776, 0, 276, 0, 639, 640, 695, 641,
	642, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 1775, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	1774, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 281, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 1777, 556,
	563, 564, 565, 566, 567, 0, 1773, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 1771, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 0, 1772, 634, 636, 694, 637,
	638, 1497, 0, 276, 0, 639, 640, 695, 641, 642,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 1499, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 280, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 281, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 1261, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 0, 635, 634, 636, 694, 637, 638,
	1494, 0, 276, 0, 639, 640, 695, 641, 642, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 644, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 0, 649, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 650, 651, 652,
	0, 308, 309, 653, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 657, 658, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 659, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 662, 0, 663, 393, 0,
	394, 395, 396, 397, 398, 1496, 665, 666, 481, 0,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 0, 408, 667, 668, 0,
	669, 0, 409, 410, 0, 670, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 671, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 281, 0, 478, 479, 0, 672, 480, 673, 482,
	483, 0, 0, 484, 0, 0, 1261, 486, 487, 488,
	0, 0, 489, 490, 674, 0, 491, 0, 675, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 678, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 680, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 681, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 684, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 685, 686, 687, 688, 0, 620, 0, 612,
	613, 614, 689, 615, 690, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 691,
	692, 693, 0, 635, 634, 636, 694, 637, 638, 1400,
	0, 276, 0, 639, 640, 695, 641, 642, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 644, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 645, 646, 0,
	299, 647, 300, 648, 0, 649, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 650, 651, 652, 0,
	308, 309, 653, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 654, 655, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 656, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 657, 658, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 659, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 660, 661, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 662, 0, 663, 393, 0, 394,
	395, 396, 397, 398, 1402, 665, 666, 481, 0, 399,
	400, 0, 401, 402, 403, 404, 0, 0, 0, 280,
	405, 406, 407, 0, 0, 408, 667, 668, 0, 669,
	0, 409, 410, 0, 670, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 671, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	281, 0, 478, 479, 0, 672, 480, 673, 482, 483,
	0, 0, 484, 0, 0, 1261, 486, 487, 488, 0,
	0, 489, 490, 674, 0, 491, 0, 675, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 678, 511, 679, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 680, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 681, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 682, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 683, 592, 593, 594,
	595, 684, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 685, 686, 687, 688, 0, 620, 0, 612, 613,
	614, 689, 615, 690, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 691, 692,
	693, 0, 635, 634, 636, 694, 637, 638, 727, 0,
	276, 0, 639, 640, 695, 641, 642, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 726, 287, 288, 716, 289, 290, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 0, 649, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 650, 651, 652, 0, 308,
	309, 653, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 719, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 654, 655, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 720, 392, 662, 0, 663, 393, 0, 394, 395,
	396, 397, 398, 664, 665, 666, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 667, 668, 0, 669, 0,
	409, 410, 0, 670, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 671, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 672, 480, 673, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 0, 491, 0, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 721, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	685, 686, 687, 688, 0, 620, 0, 612, 613, 614,
	689, 615, 690, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 691, 692, 693,
	0, 635, 634, 636, 694, 637, 638, 715, 0, 276,
	0, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 716, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 719, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	720, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	721, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 276,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 282, 284, 283, 285,
	286, 287, 288, 716, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 719, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	720, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	721, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 276,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 282, 284, 283, 285,
	286, 287, 288, 716, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 719, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	4022, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	721, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 276,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 281, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 1261, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 276,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 3545, 477, 465, 0, 281, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 3094, 0, 276, 0,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	644, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 645, 646, 0, 299, 647, 300,
	648, 0, 649, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 650, 651, 652, 0, 308, 309, 653,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 654,
	655, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 656, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	657, 658, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 659, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 660, 661,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 662, 0, 663, 393, 0, 394, 395, 396, 397,
	398, 3093, 665, 666, 481, 0, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 0, 408, 667, 668, 0, 669, 0, 409, 410,
	0, 670, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 671, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 281, 0, 478,
	479, 0, 672, 480, 673, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 0, 491, 0, 675, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 678, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 680, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 681, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 682, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 683, 592, 593, 594, 595, 684, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 685, 686,
	687, 688, 0, 620, 0, 612, 613, 614, 689, 615,
	690, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 691, 692, 693, 0, 635,
	634, 636, 694, 637, 638, 2369, 0, 276, 0, 639,
	640, 695, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 644,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 645, 646, 0, 299, 647, 300, 648,
	0, 649, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 650, 651, 652, 0, 308, 309, 653, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 654, 655,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 656, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 657,
	658, 372, 0, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 659, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 660, 661, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	662, 0, 663, 393, 0, 394, 395, 396, 397, 398,
	664, 665, 666, 481, 0, 399, 400, 0, 401, 402,
	403, 404, 0, 0, 0, 280, 405, 406, 407, 0,
	0, 408, 667, 668, 0, 669, 0, 409, 410, 0,
	670, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 671, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 281, 0, 478, 479,
	0, 672, 480, 673, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 674,
	0, 491, 0, 675, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 676,
	505, 506, 507, 677, 508, 509, 510, 678, 511, 679,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 680, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 681, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	682, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 683, 592, 593, 594, 595, 684, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 685, 686, 687,
	688, 0, 620, 0, 612, 613, 614, 689, 615, 690,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 691, 692, 693, 276, 635, 634,
	636, 694, 637, 638, 0, 0, 0, 0, 639, 640,
	695, 641, 642, 643, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 644,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 645, 646, 0, 299, 647, 300, 648,
	0, 649, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 650, 651, 652, 0, 308, 309, 653, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 654, 655,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 656, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 657,
	658, 372, 0, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 659, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 660, 661, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	662, 0, 663, 393, 0, 394, 395, 396, 397, 398,
	664, 665, 666, 481, 0, 399, 400, 0, 401, 402,
	403, 404, 0, 0, 0, 280, 405, 406, 407, 0,
	0, 408, 667, 668, 0, 669, 0, 409, 410, 0,
	670, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 671, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 281, 0, 478, 479,
	0, 672, 480, 673, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 674,
	0, 491, 0, 675, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 676,
	505, 506, 507, 677, 508, 509, 510, 678, 511, 679,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 680, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 681, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	682, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 683, 592, 593, 594, 595, 684, 599, 600,
	0, 601, 602, 0, 598, 589, 2307, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 685, 686, 687,
	688, 0, 620, 0, 612, 613, 614, 689, 615, 690,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 691, 692, 693, 0, 635, 634,
	636, 694, 637, 638, 2314, 0, 276, 0, 639, 640,
	695, 641, 642, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 2313,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 2300, 0, 276, 0, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 0, 308, 309, 653, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 2302, 665,
	666, 481, 0, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 280, 405, 406, 407, 0, 0, 408,
	667, 668, 0, 669, 0, 409, 410, 0, 670, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 281, 0, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 0, 491,
	0, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 276, 635, 634, 636, 694,
	637, 638, 0, 0, 0, 0, 639, 640, 695, 641,
	642, 643, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 0, 308, 309, 653, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 2265, 665,
	666, 481, 0, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 280, 405, 406, 407, 0, 0, 408,
	667, 668, 0, 669, 0, 409, 410, 0, 670, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 281, 0, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 1261,
	486, 487, 488, 0, 0, 489, 490, 674, 0, 491,
	0, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 0, 635, 634, 636, 694,
	637, 638, 1617, 0, 276, 0, 639, 640, 695, 641,
	642, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 1616, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 280, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 281, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 0, 635, 634, 636, 694, 637,
	638, 1520, 0, 276, 0, 639, 640, 695, 641, 642,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 280, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 281, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 0, 635, 634, 636, 694, 637, 638,
	1513, 0, 276, 0, 639, 640, 695, 641, 642, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 644, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 0, 649, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 650, 651, 652,
	0, 308, 309, 653, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 657, 658, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 659, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 662, 0, 663, 393, 0,
	394, 395, 396, 397, 398, 1515, 665, 666, 481, 0,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	280, 405, 406, 407, 0, 0, 408, 667, 668, 0,
	669, 0, 409, 410, 0, 670, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 671, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 281, 0, 478, 479, 0, 672, 480, 673, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 0, 491, 0, 675, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 678, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 680, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 681, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 684, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 685, 686, 687, 688, 0, 620, 0, 612,
	613, 614, 689, 615, 690, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 691,
	692, 693, 0, 635, 634, 636, 694, 637, 638, 1336,
	0, 276, 0, 639, 640, 695, 641, 642, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 644, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 645, 646, 0,
	299, 647, 300, 648, 0, 649, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 650, 651, 652, 0,
	308, 309, 653, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 654, 655, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 656, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 657, 658, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 659, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 660, 661, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 662, 0, 663, 393, 0, 394,
	395, 396, 397, 398, 1335, 665, 666, 481, 0, 399,
	400, 0, 401, 402, 403, 404, 0, 0, 0, 280,
	405, 406, 407, 0, 0, 408, 667, 668, 0, 669,
	0, 409, 410, 0, 670, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 671, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	281, 0, 478, 479, 0, 672, 480, 673, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 674, 0, 491, 0, 675, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 678, 511, 679, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 680, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 681, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 682, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 683, 592, 593, 594,
	595, 684, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 685, 686, 687, 688, 0, 620, 0, 612, 613,
	614, 689, 615, 690, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 691, 692,
	693, 0, 635, 634, 636, 694, 637, 638, 1326, 0,
	276, 0, 639, 640, 695, 641, 642, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 0, 649, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 650, 651, 652, 0, 308,
	309, 653, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 654, 655, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 662, 0, 663, 393, 0, 394, 395,
	396, 397, 398, 1325, 665, 666, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 280, 405,
	406, 407, 0, 0, 408, 667, 668, 0, 669, 0,
	409, 410, 0, 670, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 671, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 281,
	0, 478, 479, 0, 672, 480, 673, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 0, 491, 0, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	685, 686, 687, 688, 0, 620, 0, 612, 613, 614,
	689, 615, 690, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 691, 692, 693,
	0, 635, 634, 636, 694, 637, 638, 1323, 0, 276,
	0, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 1322, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 280, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 281, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 1318, 0, 276, 0,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	644, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 645, 646, 0, 299, 647, 300,
	648, 0, 649, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 650, 651, 652, 0, 308, 309, 653,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 654,
	655, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 656, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	657, 658, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 659, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 660, 661,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 662, 0, 663, 393, 0, 394, 395, 396, 397,
	398, 1317, 665, 666, 481, 0, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 280, 405, 406, 407,
	0, 0, 408, 667, 668, 0, 669, 0, 409, 410,
	0, 670, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 671, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 281, 0, 478,
	479, 0, 672, 480, 673, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 0, 491, 0, 675, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 678, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 680, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 681, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 682, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 683, 592, 593, 594, 595, 684, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 685, 686,
	687, 688, 0, 620, 0, 612, 613, 614, 689, 615,
	690, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 691, 692, 693, 0, 635,
	634, 636, 694, 637, 638, 697, 0, 276, 0, 639,
	640, 695, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 644,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 645, 646, 0, 299, 647, 300, 648,
	0, 649, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 650, 651, 652, 0, 308, 309, 653, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 654, 655,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 656, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 657,
	658, 372, 0, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 659, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 660, 661, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	662, 0, 663, 393, 0, 394, 395, 396, 397, 398,
	664, 665, 666, 481, 0, 399, 400, 0, 401, 402,
	403, 404, 0, 0, 0, 280, 405, 406, 407, 0,
	0, 408, 667, 668, 0, 669, 0, 409, 410, 0,
	670, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 671, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 281, 0, 478, 479,
	0, 672, 480, 673, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 674,
	0, 491, 0, 675, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 676,
	505, 506, 507, 677, 508, 509, 510, 678, 511, 679,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 680, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 681, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	682, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 683, 592, 593, 594, 595, 684, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 685, 686, 687,
	688, 0, 620, 0, 612, 613, 614, 689, 615, 690,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 691, 692, 693, 0, 635, 634,
	636, 694, 637, 638, 267, 0, 276, 0, 639, 640,
	695, 641, 642, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 719, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 720, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 721, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 2409, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 2407, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 2405, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 2320,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 2108,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 2102,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 280, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 281, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 906, 0, 276, 0, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 0, 308, 309, 653, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 664, 665,
	666, 481, 0, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	667, 668, 0, 669, 905, 409, 410, 0, 670, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 0, 491,
	0, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 904, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 276, 635, 634, 636, 694,
	637, 638, 0, 0, 0, 0, 639, 640, 695, 641,
	642, 643, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 0, 308, 309, 653, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 3644, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 664, 665,
	666, 481, 0, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	667, 668, 0, 669, 0, 409, 410, 0, 670, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 0, 491,
	0, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	4327, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 0, 635, 634, 636, 694,
	637, 638, 1364, 0, 276, 0, 639, 640, 695, 641,
	642, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 1367, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 1365, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 787, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 786, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	785, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	1368, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 783, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 0, 635, 634, 636, 694, 637,
	638, 1364, 0, 276, 0, 639, 640, 695, 641, 642,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 1367, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	1365, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 787, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 786, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 785,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 1368,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 783, 686, 687, 688, 0, 620, 0,
	612, 1366, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 0, 635, 634, 636, 694, 637, 638,
	706, 0, 276, 0, 639, 640, 695, 641, 642, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 705, 289, 290, 0,
	0, 0, 0, 0, 644, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 0, 649, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 650, 651, 652,
	0, 308, 309, 653, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 657, 658, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 659, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 662, 0, 663, 393, 0,
	394, 395, 396, 397, 398, 664, 665, 666, 481, 0,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 667, 668, 0,
	669, 0, 409, 410, 0, 670, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 671, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 672, 480, 673, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 0, 491, 0, 675, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 678, 511, 679, 704, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 680, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 681, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 684, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 685, 686, 687, 688, 0, 620, 0, 612,
	613, 614, 689, 615, 690, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 691,
	692, 693, 0, 635, 634, 636, 694, 637, 638, 276,
	3136, 0, 0, 639, 640, 695, 641, 642, 643, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 276, 4343, 0, 0,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 4614, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 4217, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 3971,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 276, 635, 634, 636,
	694, 637, 638, 0, 0, 0, 0, 639, 640, 695,
	641, 642, 643, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	2806, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 276, 3136, 0, 0, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	3133, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 276, 635, 634, 636, 694, 637, 638,
	0, 0, 0, 0, 639, 640, 695, 641, 642, 643,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 2226, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 786, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 785,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 783, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 276, 635, 634, 636, 694, 637, 638,
	0, 0, 0, 0, 639, 640, 695, 641, 642, 643,
	282, 284, 283, 285, 286, 287, 288, 2379, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 0, 635, 634, 636, 694, 637, 638,
	2367, 0, 276, 0, 639, 640, 695, 641, 642, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 644, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 0, 649, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 650, 651, 652,
	0, 308, 309, 653, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 657, 658, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 659, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 662, 0, 663, 393, 0,
	394, 395, 396, 397, 398, 664, 665, 666, 481, 0,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 667, 668, 0,
	669, 0, 409, 410, 0, 670, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 671, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 672, 480, 673, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 0, 491, 0, 675, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 678, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 680, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 681, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 684, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 685, 686, 687, 688, 0, 620, 0, 612,
	613, 614, 689, 615, 690, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 691,
	692, 693, 0, 635, 634, 636, 694, 637, 638, 1672,
	0, 276, 0, 639, 640, 695, 641, 642, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 644, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 645, 646, 0,
	299, 647, 300, 648, 0, 649, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 650, 651, 652, 0,
	308, 309, 653, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 654, 655, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 656, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 657, 658, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 659, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 660, 661, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 662, 0, 663, 393, 0, 394,
	395, 396, 397, 398, 664, 665, 666, 481, 0, 399,
	400, 0, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 667, 668, 0, 669,
	0, 409, 410, 0, 670, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 671, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 672, 480, 673, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 674, 0, 491, 0, 675, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 678, 511, 679, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 680, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 681, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 682, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 683, 592, 593, 594,
	595, 684, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 685, 686, 687, 688, 0, 620, 0, 612, 613,
	614, 689, 615, 690, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 691, 692,
	693, 0, 635, 634, 636, 694, 637, 638, 1665, 0,
	276, 0, 639, 640, 695, 641, 642, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 0, 649, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 650, 651, 652, 0, 308,
	309, 653, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 654, 655, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 662, 0, 663, 393, 0, 394, 395,
	396, 397, 398, 664, 665, 666, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 667, 668, 0, 669, 0,
	409, 410, 0, 670, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 671, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 672, 480, 673, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 0, 491, 0, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	685, 686, 687, 688, 0, 620, 0, 612, 613, 614,
	689, 615, 690, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 691, 692, 693,
	0, 635, 634, 636, 694, 637, 638, 777, 0, 276,
	0, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 773,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 778, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 787, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	786, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 785, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 1650, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 783,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 1623, 0, 276, 0,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	644, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 645, 646, 0, 299, 647, 300,
	648, 0, 649, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 650, 651, 652, 0, 308, 309, 653,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 654,
	655, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 656, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	657, 658, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 659, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 660, 661,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 662, 0, 663, 393, 0, 394, 395, 396, 397,
	398, 1622, 665, 666, 481, 0, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 667, 668, 0, 669, 0, 409, 410,
	0, 670, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 671, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 672, 480, 673, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 0, 491, 0, 675, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 678, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 680, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 681, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 682, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 683, 592, 593, 594, 595, 684, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 685, 686,
	687, 688, 0, 620, 0, 612, 613, 614, 689, 615,
	690, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 691, 692, 693, 0, 635,
	634, 636, 694, 637, 638, 1607, 0, 276, 0, 639,
	640, 695, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 644,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 645, 646, 0, 299, 647, 300, 648,
	0, 649, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 650, 651, 652, 0, 308, 309, 653, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 654, 655,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 656, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 657,
	658, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 659, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 660, 661, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	662, 0, 663, 393, 0, 394, 395, 396, 397, 398,
	1605, 665, 666, 481, 0, 399, 400, 0, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 667, 668, 0, 669, 0, 409, 410, 0,
	670, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 671, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 672, 480, 673, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 674,
	0, 491, 0, 675, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 676,
	505, 506, 507, 677, 508, 509, 510, 678, 511, 679,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 680, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 681, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	682, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 683, 592, 593, 594, 595, 684, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 685, 686, 687,
	688, 0, 620, 0, 612, 613, 614, 689, 615, 690,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 691, 692, 693, 0, 635, 634,
	636, 694, 637, 638, 1600, 0, 276, 0, 639, 640,
	695, 641, 642, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 1577, 0, 276, 0, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 0, 308, 309, 653, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 1575, 665,
	666, 481, 0, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	667, 668, 0, 669, 0, 409, 410, 0, 670, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 0, 491,
	0, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 0, 635, 634, 636, 694,
	637, 638, 1562, 0, 276, 0, 639, 640, 695, 641,
	642, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 0, 635, 634, 636, 694, 637,
	638, 1525, 0, 276, 0, 639, 640, 695, 641, 642,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 645,
	646, 0, 299, 647, 300, 648, 0, 649, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 650, 651,
	652, 0, 308, 309, 653, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 654, 655, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 656, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 657, 658, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 659, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 660, 661, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 662, 0, 663, 393,
	0, 394, 395, 396, 397, 398, 664, 665, 666, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 667, 668,
	0, 669, 0, 409, 410, 0, 670, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 671, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 672, 480, 673,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 674, 0, 491, 0, 675,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 676, 505, 506, 507, 677,
	508, 509, 510, 678, 511, 679, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 680,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 681,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 682, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 683, 592,
	593, 594, 595, 684, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 685, 686, 687, 688, 0, 620, 0,
	612, 613, 614, 689, 615, 690, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	691, 692, 693, 0, 635, 634, 636, 694, 637, 638,
	1502, 0, 276, 0, 639, 640, 695, 641, 642, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 644, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 645, 646,
	0, 299, 647, 300, 648, 0, 649, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 650, 651, 652,
	0, 308, 309, 653, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 654, 655, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 656, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 657, 658, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 659, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 660, 661, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 662, 0, 663, 393, 0,
	394, 395, 396, 397, 398, 664, 665, 666, 481, 0,
	399, 400, 0, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 667, 668, 0,
	669, 0, 409, 410, 0, 670, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 671, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 672, 480, 673, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 674, 0, 491, 0, 675, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 676, 505, 506, 507, 677, 508,
	509, 510, 678, 511, 679, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 680, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 681, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 682, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 683, 592, 593,
	594, 595, 684, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 685, 686, 687, 688, 0, 620, 0, 612,
	613, 614, 689, 615, 690, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 691,
	692, 693, 0, 635, 634, 636, 694, 637, 638, 1370,
	0, 276, 0, 639, 640, 695, 641, 642, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 644, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 645, 646, 0,
	299, 647, 300, 648, 0, 649, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 650, 651, 652, 0,
	308, 309, 653, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 654, 655, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 656, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 657, 658, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 659, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 660, 661, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 662, 0, 663, 393, 0, 394,
	395, 396, 397, 398, 664, 665, 666, 481, 0, 399,
	400, 0, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 667, 668, 0, 669,
	0, 409, 410, 0, 670, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 671, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 672, 480, 673, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 674, 0, 491, 0, 675, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 676, 505, 506, 507, 677, 508, 509,
	510, 678, 511, 679, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 680, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 786, 548, 549, 550, 551, 681, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 785, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 682, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 683, 592, 593, 594,
	595, 684, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 783, 686, 687, 688, 0, 620, 0, 612, 613,
	614, 689, 615, 690, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 691, 692,
	693, 0, 635, 634, 636, 694, 637, 638, 1341, 0,
	276, 0, 639, 640, 695, 641, 642, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 645, 646, 0, 299,
	647, 300, 648, 0, 649, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 650, 651, 652, 0, 308,
	309, 653, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 654, 655, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	656, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 657, 658, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 659, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	660, 661, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 662, 0, 663, 393, 0, 394, 395,
	396, 397, 398, 1340, 665, 666, 481, 0, 399, 400,
	0, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 667, 668, 0, 669, 0,
	409, 410, 0, 670, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 671, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 672, 480, 673, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 674, 0, 491, 0, 675, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 676, 505, 506, 507, 677, 508, 509, 510,
	678, 511, 679, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 680, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 681, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 682, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 683, 592, 593, 594, 595,
	684, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	685, 686, 687, 688, 0, 620, 0, 612, 613, 614,
	689, 615, 690, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 691, 692, 693,
	0, 635, 634, 636, 694, 637, 638, 1332, 0, 276,
	0, 639, 640, 695, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 1331, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 276,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 282, 284, 283, 285,
	286, 287, 288, 1285, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 276,
	635, 634, 636, 694, 637, 638, 0, 0, 0, 0,
	639, 640, 695, 641, 642, 643, 282, 284, 283, 285,
	286, 287, 288, 792, 289, 290, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 645, 646, 0, 299, 647,
	300, 648, 0, 649, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 650, 651, 652, 0, 308, 309,
	653, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	654, 655, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 656,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 657, 658, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 659, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 660,
	661, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 662, 0, 663, 393, 0, 394, 395, 396,
	397, 398, 664, 665, 666, 481, 0, 399, 400, 0,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 667, 668, 0, 669, 0, 409,
	410, 0, 670, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 671, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 672, 480, 673, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 674, 0, 491, 0, 675, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 676, 505, 506, 507, 677, 508, 509, 510, 678,
	511, 679, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 680, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 681, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 682, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 683, 592, 593, 594, 595, 684,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 685,
	686, 687, 688, 0, 620, 0, 612, 613, 614, 689,
	615, 690, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 691, 692, 693, 0,
	635, 634, 636, 694, 637, 638, 777, 0, 276, 0,
	639, 640, 695, 641, 642, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	644, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 645, 646, 0, 299, 647, 300,
	648, 0, 649, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 650, 651, 652, 0, 308, 773, 653,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 772, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 654,
	655, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 656, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	657, 658, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 659, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 660, 661,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 662, 0, 663, 393, 0, 394, 395, 396, 397,
	398, 664, 665, 666, 481, 0, 399, 400, 0, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 667, 668, 0, 669, 0, 409, 410,
	0, 670, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 671, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 778, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 787, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 672, 480, 673, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	674, 0, 491, 0, 675, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	676, 505, 506, 507, 677, 508, 509, 510, 678, 511,
	679, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 680, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 786,
	548, 549, 550, 551, 774, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 785, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 775, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 682, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 683, 592, 593, 594, 595, 684, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 783, 686,
	687, 688, 0, 620, 0, 612, 779, 614, 689, 615,
	690, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 691, 692, 693, 0, 635,
	634, 636, 694, 637, 638, 766, 0, 276, 0, 639,
	640, 695, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 644,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 645, 646, 0, 299, 647, 300, 648,
	0, 649, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 650, 651, 652, 0, 308, 309, 653, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 654, 655,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 656, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 657,
	658, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 659, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 660, 661, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	662, 0, 663, 393, 0, 394, 395, 396, 397, 398,
	664, 665, 666, 481, 0, 399, 400, 0, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 667, 668, 0, 669, 0, 409, 410, 0,
	670, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 671, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 672, 480, 673, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 674,
	0, 491, 0, 675, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 676,
	505, 506, 507, 677, 508, 509, 510, 678, 511, 679,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 680, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 681, 552, 0, 553, 554, 767, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	682, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 683, 592, 593, 594, 595, 684, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 685, 686, 687,
	688, 0, 620, 0, 612, 613, 614, 689, 615, 690,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 691, 692, 693, 0, 635, 634,
	636, 694, 637, 638, 729, 0, 276, 0, 639, 640,
	695, 641, 642, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 645, 646, 0, 299, 647, 300, 648, 0,
	649, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 650, 651, 652, 0, 308, 309, 653, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 654, 655, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 656, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 657, 658,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 659, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 660, 661, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 662,
	0, 663, 393, 0, 394, 395, 396, 397, 398, 664,
	665, 666, 481, 0, 399, 400, 0, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 667, 668, 0, 669, 0, 409, 410, 0, 670,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 671, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	672, 480, 673, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 674, 0,
	491, 0, 675, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 676, 505,
	506, 507, 677, 508, 509, 510, 678, 511, 679, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 680, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 681, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 682,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 683, 592, 593, 594, 595, 684, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 685, 686, 687, 688,
	0, 620, 0, 612, 613, 614, 689, 615, 690, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 691, 692, 693, 0, 635, 634, 636,
	694, 637, 638, 723, 0, 276, 0, 639, 640, 695,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 645, 646, 0, 299, 647, 300, 648, 0, 649,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	650, 651, 652, 0, 308, 309, 653, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 654, 655, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 656, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 657, 658, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	659, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 660, 661, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 662, 0,
	663, 393, 0, 394, 395, 396, 397, 398, 664, 665,
	666, 481, 0, 399, 400, 0, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	667, 668, 0, 669, 0, 409, 410, 0, 670, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	671, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 672,
	480, 673, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 674, 0, 491,
	0, 675, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 676, 505, 506,
	507, 677, 508, 509, 510, 678, 511, 679, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 680, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 681, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 682, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	683, 592, 593, 594, 595, 684, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 685, 686, 687, 688, 0,
	620, 0, 612, 613, 614, 689, 615, 690, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 691, 692, 693, 0, 635, 634, 636, 694,
	637, 638, 701, 0, 276, 0, 639, 640, 695, 641,
	642, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 3673, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 786, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	785, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 783, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 3589, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 3561, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 3558, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 3510, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 3508, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 3496, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 3493, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 3104, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 767, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 2338, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 0, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 1303, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	393, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	680, 523, 524, 1234, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 276, 635, 634, 636, 694, 637,
	638, 0, 0, 0, 0, 639, 640, 695, 641, 642,
	643, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	645, 646, 0, 299, 647, 300, 648, 0, 649, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 650,
	651, 652, 0, 308, 309, 653, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 654, 655, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 656, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 657, 658, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 659,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 660, 661, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 662, 0, 663,
	0, 0, 394, 395, 396, 397, 398, 664, 665, 666,
	481, 0, 399, 400, 0, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 667,
	668, 0, 669, 0, 409, 410, 0, 670, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 671,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 672, 480,
	673, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 674, 0, 491, 0,
	675, 492, 493, 485, 494, 495, 0, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 676, 505, 506, 507,
	677, 508, 509, 510, 678, 511, 679, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 0, 521, 522,
	680, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	681, 0, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 682, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 683,
	592, 593, 594, 595, 684, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 685, 686, 687, 688, 0, 620,
	0, 612, 613, 614, 689, 615, 690, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 691, 692, 693, 0, 635, 634, 636, 694, 637,
	638, 1613, 0, 1348, 0, 639, 640, 695, 641, 642,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 0, 0,
	0, 0, 308, 309, 0, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 1350, 335, 336, 337, 338,
	339, 0, 340, 342, 0, 0, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 0, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 0, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 0, 0, 0, 393,
	0, 394, 395, 396, 397, 398, 1612, 0, 0, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 0, 0,
	0, 0, 0, 409, 410, 0, 0, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 0, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1351, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 0, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 0, 0, 0, 0, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 1528, 0, 1348, 635, 634, 636, 0, 637, 638,
	0, 0, 0, 0, 639, 640, 0, 641, 642, 643,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 0, 0,
	0, 0, 308, 309, 0, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 1350, 335, 336, 337, 338,
	339, 0, 340, 342, 0, 0, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 0, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 0, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 0, 0, 0, 393,
	0, 394, 395, 396, 397, 398, 1527, 0, 0, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 0, 0,
	0, 0, 0, 409, 410, 0, 0, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 0, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1351, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 0, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 0, 0, 0, 0, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 1346, 0, 1348, 635, 634, 636, 0, 637, 638,
	0, 0, 0, 0, 639, 640, 0, 641, 642, 643,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 0, 0,
	0, 0, 308, 309, 0, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 1350, 335, 336, 337, 338,
	339, 0, 340, 342, 0, 0, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 0, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 0, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 0, 0, 0, 393,
	0, 394, 395, 396, 397, 398, 1345, 0, 0, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 0, 0,
	0, 0, 0, 409, 410, 0, 0, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 0, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1351, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 0, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 0, 0, 0, 0, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 2122, 0, 1348, 635, 634, 636, 0, 637, 638,
	0, 0, 0, 0, 639, 640, 0, 641, 642, 643,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 0, 0,
	0, 0, 308, 309, 0, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 1350, 335, 336, 337, 338,
	339, 0, 340, 342, 0, 0, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 0, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 0, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 0, 0, 0, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 0, 0,
	0, 0, 0, 409, 410, 0, 0, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 0, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1351, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 0, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 0, 0, 0, 0, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 2089, 0, 1348, 635, 634, 636, 0, 637, 638,
	0, 0, 0, 0, 639, 640, 0, 641, 642, 643,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 0, 0,
	0, 0, 308, 309, 0, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 1350, 335, 336, 337, 338,
	339, 0, 340, 342, 0, 0, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 0, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 0, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 0, 0, 0, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 0, 0,
	0, 0, 0, 409, 410, 0, 0, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 0, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1351, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 0, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 0, 0, 0, 0, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 0, 0, 1348, 635, 634, 636, 0, 637, 638,
	0, 0, 0, 0, 639, 640, 0, 641, 642, 643,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 0, 0,
	0, 0, 308, 309, 0, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 1350, 335, 336, 337, 338,
	339, 0, 340, 342, 0, 0, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 0, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 0, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 0, 0, 0, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 481,
	0, 399, 400, 0, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 0, 0,
	0, 0, 0, 409, 410, 0, 0, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 0, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1351, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 0, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 0, 0, 0, 0, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 0, 0, 0, 635, 634, 636, 0, 637, 638,
	0, 0, 0, 0, 639, 640, 0, 641, 642, 643,
	1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 1856, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 1825, 1826, 1875,
	1858, 1859, 1860, 1869, 1870, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 1862,
	1856, 0, 0, 0, 0, 1827, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 1847, 1875, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 1851,
	1852, 1853, 0, 0, 0, 0, 0, 0, 1833, 0,
	1866, 0, 0, 1876, 0, 0, 0, 0, 0, 1855,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 1873, 0, 0,
	0, 0, 0, 0, 1842, 1843, 0, 1866, 0, 0,
	1876, 0, 0, 0, 0, 0, 1855, 1857, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 1873, 0, 0, 1848, 0, 0,
	0, 1842, 1843, 0, 0, 0, 0, 0, 0, 0,
	1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 1856, 1848, 0, 0, 0, 0, 0,
	1828, 0, 0, 1874, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 1878, 0, 0, 1827, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 0, 1867, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 1825, 1826, 0, 1858, 1859, 1860,
	1869, 1870, 1871, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 1867, 1862, 1856, 0, 0,
	1866, 0, 0, 1876, 1828, 0, 0, 0, 0, 1855,
	1857, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 1880, 1873, 0, 0,
	1881, 0, 0, 0, 1842, 1843, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 1864, 0, 0, 0, 0, 0, 1844, 0,
	1865, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 2632, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 1840, 1846,
	1868, 1845, 1841, 1874, 1838, 1836, 1837, 1829, 1830, 1831,
	1832, 1834, 1835, 0, 0, 0, 0, 4740, 0, 0,
	0, 1863, 0, 0, 0, 1850, 1851, 1852, 1853, 0,
	0, 0, 1878, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1826, 0, 1858,
	1859, 1860, 1869, 1870, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 1876, 1862, 1856,
	0, 0, 0, 1855, 1857, 0, 1828, 0, 1854, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1872,
	0, 1873, 0, 0, 0, 0, 0, 0, 1842, 1843,
	0, 1849, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 1867, 0,
	1844, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 1850, 1851, 1852,
	1853, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 1866, 0, 0, 1876,
	4736, 0, 1854, 0, 0, 1855, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 1873, 0, 1849, 0, 0, 0, 0,
	1842, 1843, 0, 0, 0, 0, 0, 0, 0, 1825,
	1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 1864, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 1856, 1848, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 1840, 1846, 1868, 1845, 1841,
	0, 1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835,
	0, 0, 0, 0, 4640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	1850, 1851, 1852, 1853, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 1825, 1826, 0, 1858, 1859, 1860, 1869,
	1870, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 1862, 1856, 0, 0, 1866,
	0, 0, 1876, 1828, 0, 0, 0, 0, 1855, 1857,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 1880, 1873, 0, 0, 1881,
	0, 0, 0, 1842, 1843, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 1864, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 1840, 1846, 1868,
	1845, 1841, 1874, 1838, 1836, 1837, 1829, 1830, 1831, 1832,
	1834, 1835, 0, 0, 0, 0, 4597, 0, 0, 0,
	1863, 0, 0, 0, 1850, 1851, 1852, 1853, 0, 0,
	0, 1878, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 0, 1858, 1859,
	1860, 1869, 1870, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 1876, 1862, 1856, 0,
	0, 0, 1855, 1857, 0, 1828, 0, 1854, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 1872, 0,
	1873, 0, 0, 0, 0, 0, 0, 1842, 1843, 0,
	1849, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 1867, 0, 1844,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 1850, 1851, 1852, 1853,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837, 1829,
	1830, 1831, 1832, 1834, 1835, 1866, 0, 0, 1876, 4596,
	0, 1854, 0, 0, 1855, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 1873, 0, 1849, 0, 0, 0, 0, 1842,
	1843, 0, 0, 0, 0, 0, 0, 0, 1825, 1826,
	0, 1858, 1859, 1860, 1869, 1870, 1871, 1864, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 1856, 1848, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 1840, 1846, 1868, 1845, 1841, 0,
	1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 0,
	0, 0, 0, 4412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 1850,
	1851, 1852, 1853, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 1825, 1826, 0, 1858, 1859, 1860, 1869, 1870,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 1862, 1856, 0, 0, 1866, 0,
	0, 1876, 1828, 0, 0, 0, 0, 1855, 1857, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 1880, 1873, 0, 0, 1881, 0,
	0, 0, 1842, 1843, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	1864, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 1840, 1846, 1868, 1845,
	1841, 1874, 1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834,
	1835, 0, 0, 0, 0, 4241, 0, 0, 0, 1863,
	0, 0, 0, 1850, 1851, 1852, 1853, 0, 0, 0,
	1878, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1826, 0, 1858, 1859, 1860,
	1869, 1870, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 1876, 1862, 1856, 0, 0,
	0, 1855, 1857, 0, 1828, 0, 1854, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1872, 0, 1873,
	0, 0, 0, 0, 0, 0, 1842, 1843, 0, 1849,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 1867, 0, 1844, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 1850, 1851, 1852, 1853, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 1840,
	1846, 1868, 1845, 1841, 0, 1838, 1836, 1837, 1829, 1830,
	1831, 1832, 1834, 1835, 1866, 0, 0, 1876, 4167, 0,
	1854, 0, 0, 1855, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 1873, 0, 1849, 0, 0, 0, 0, 1842, 1843,
	0, 0, 0, 0, 0, 0, 0, 1825, 1826, 0,
	1858, 1859, 1860, 1869, 1870, 1871, 1864, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	1856, 1848, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 1840, 1846, 1868, 1845, 1841, 0, 1838,
	1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0,
	0, 0, 4166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 1850, 1851,
	1852, 1853, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 1862, 1856, 0, 0, 1866, 0, 0,
	1876, 1828, 0, 0, 0, 0, 1855, 1857, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 1880, 1873, 0, 0, 1881, 0, 0,
	0, 1842, 1843, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 1864,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 1840, 1846, 1868, 1845, 1841,
	1874, 1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835,
	0, 0, 0, 0, 4165, 0, 0, 0, 1863, 0,
	0, 0, 1850, 1851, 1852, 1853, 0, 0, 0, 1878,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 1826, 0, 1858, 1859, 1860, 1869,
	1870, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 1876, 1862, 1856, 0, 0, 0,
	1855, 1857, 0, 1828, 0, 1854, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 1872, 0, 1873, 0,
	0, 0, 0, 0, 0, 1842, 1843, 0, 1849, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 1867, 0, 1844, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 1850, 1851, 1852, 1853, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 1840, 1846,
	1868, 1845, 1841, 0, 1838, 1836, 1837, 1829, 1830, 1831,
	1832, 1834, 1835, 1866, 0, 0, 1876, 3813, 0, 1854,
	0, 0, 1855, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	1873, 0, 1849, 0, 0, 0, 0, 1842, 1843, 0,
	0, 0, 0, 0, 0, 0, 1825, 1826, 0, 1858,
	1859, 1860, 1869, 1870, 1871, 1864, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 1856,
	1848, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836,
	1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0,
	0, 3304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 1850, 1851, 1852,
	1853, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 1862, 1856, 0, 0, 1866, 0, 0, 1876,
	1828, 0, 0, 0, 0, 1855, 1857, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 1880, 1873, 0, 0, 1881, 0, 0, 0,
	1842, 1843, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 1864, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 1840, 1846, 1868, 1845, 1841, 1874,
	1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 0,
	0, 0, 0, 3303, 0, 0, 0, 1863, 0, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 0, 1878, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 1826, 0, 1858, 1859, 1860, 1869, 1870,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 1876, 1862, 1856, 0, 0, 0, 1855,
	1857, 0, 1828, 0, 1854, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1872, 0, 1873, 0, 0,
	0, 0, 0, 0, 1842, 1843, 0, 1849, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 1867, 0, 1844, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 1850, 1851, 1852, 1853, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 1840, 1846, 1868,
	1845, 1841, 0, 1838, 1836, 1837, 1829, 1830, 1831, 1832,
	1834, 1835, 1866, 0, 0, 1876, 3302, 0, 1854, 0,
	0, 1855, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 1873,
	0, 1849, 0, 0, 0, 0, 1842, 1843, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 0, 1858, 1859,
	1860, 1869, 1870, 1871, 1864, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 1856, 1848,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0, 0,
	3301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 1850, 1851, 1852, 1853,
	0, 0, 0, 0, 0, 0, 1833, 4882, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 1825,
	1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 1862, 1856, 0, 0, 1866, 0, 0, 1876, 1828,
	0, 0, 0, 0, 1855, 1857, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 1880, 1873, 0, 0, 1881, 0, 0, 0, 1842,
	1843, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 1864, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 1840, 1846, 1868, 1845, 1841, 1874, 1838,
	1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0,
	3266, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	1850, 1851, 1852, 1853, 0, 0, 0, 1878, 0, 0,
	1833, 0, 3366, 0, 0, 0, 0, 3365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 0, 1866,
	0, 0, 1876, 0, 0, 0, 0, 0, 1855, 1857,
	0, 1862, 1856, 1854, 0, 0, 0, 3237, 0, 1828,
	0, 0, 0, 0, 1872, 0, 1873, 0, 1875, 0,
	0, 0, 0, 1842, 1843, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 1864, 1825, 1826, 1827, 1858, 1859, 1860, 1869, 1870,
	1871, 0, 0, 1867, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1844, 1862, 1856, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 1874, 3238, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	1863, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 1851, 1852, 1853, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 1840, 1846, 1868, 1845,
	1841, 0, 1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834,
	1835, 0, 0, 0, 0, 0, 0, 1854, 0, 1866,
	0, 0, 1876, 0, 0, 0, 0, 0, 1855, 1857,
	0, 0, 0, 1850, 1851, 1852, 1853, 0, 0, 0,
	1849, 0, 0, 1833, 1872, 0, 1873, 0, 0, 0,
	0, 0, 0, 1842, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2779, 0, 1867, 0, 0,
	0, 1864, 1825, 1826, 0, 1858, 1859, 1860, 1869, 1870,
	1871, 0, 1866, 0, 0, 1876, 1848, 0, 0, 0,
	0, 1855, 1857, 0, 1862, 1856, 0, 0, 1880, 2778,
	0, 0, 1828, 0, 0, 0, 0, 1872, 0, 1873,
	0, 1875, 0, 0, 0, 0, 1842, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 1874, 0, 1864, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 1848,
	1863, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837, 1829,
	1830, 1831, 1832, 1834, 1835, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 1088, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 1851, 1852, 1853, 0, 0, 0,
	1849, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1826, 0, 1858, 1859, 1860,
	1869, 1870, 1871, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 1856, 0, 0,
	1854, 0, 1866, 0, 1828, 1876, 0, 0, 0, 0,
	0, 1855, 1857, 1875, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 1849, 0, 0, 0, 1872, 0, 1873,
	1881, 0, 0, 0, 0, 0, 1842, 1843, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	1867, 0, 0, 0, 1864, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837, 1829,
	1830, 1831, 1832, 1834, 1835, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 1850, 1851, 1852, 1853, 0,
	0, 0, 0, 0, 1878, 1833, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 1840, 1846, 1868, 1845, 1841, 0, 1838,
	1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 1876, 0, 0,
	0, 0, 0, 1855, 1857, 0, 0, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 1873, 0, 0, 0, 0, 0, 0, 1842, 1843,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 1825, 1826, 0,
	1858, 1859, 1860, 1869, 1870, 1871, 0, 0, 0, 0,
	1867, 1848, 0, 0, 0, 0, 0, 0, 0, 1862,
	1856, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 1874, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 1863, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 1840, 1846, 1868, 1845, 1841, 0, 1838,
	1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 1851,
	1852, 1853, 0, 0, 0, 1849, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 3372, 0, 0, 0, 0,
	0, 1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 1856, 0, 0, 1866, 3367, 0,
	1876, 1828, 0, 0, 0, 0, 1855, 1857, 0, 0,
	1875, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 1873, 3794, 0, 1881, 0, 0,
	0, 1842, 1843, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 1864,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 1840, 1846, 1868, 1845, 1841,
	0, 1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 1850, 1851, 1852, 1853, 0, 0, 0, 1878,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 1826, 0, 1858, 1859, 1860, 1869,
	1870, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 1876, 1862, 1856, 0, 0, 0,
	1855, 1857, 0, 1828, 0, 1854, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 1872, 0, 1873, 0,
	0, 0, 0, 0, 0, 1842, 1843, 0, 1849, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 1867, 0, 1844, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 1850, 1851, 1852, 1853, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 1840, 1846,
	1868, 1845, 1841, 0, 1838, 1836, 1837, 1829, 1830, 1831,
	1832, 1834, 1835, 1866, 0, 0, 1876, 0, 0, 1854,
	0, 0, 1855, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	1873, 0, 1849, 0, 0, 0, 0, 1842, 1843, 0,
	0, 0, 0, 0, 0, 0, 1825, 1826, 0, 1858,
	1859, 1860, 1869, 1870, 1871, 1864, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 1856,
	1848, 0, 0, 3305, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3332, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836,
	1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 1850, 1851, 1852,
	1853, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	1825, 1826, 0, 1858, 1859, 1860, 1869, 1870, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 1862, 1856, 0, 0, 1866, 0, 0, 1876,
	1828, 0, 0, 0, 0, 1855, 1857, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 1880, 1873, 0, 0, 1881, 0, 0, 0,
	1842, 1843, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 1864, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 1840, 1846, 1868, 1845, 1841, 1874,
	1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 0, 1878, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 1826, 0, 1858, 1859, 1860, 1869, 1870,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 1876, 1862, 1856, 0, 0, 0, 1855,
	1857, 0, 1828, 0, 1854, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1872, 0, 1873, 0, 0,
	0, 0, 0, 0, 1842, 1843, 0, 1849, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 1867, 0, 1844, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 1850, 1851, 1852, 1853, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 1840, 1846, 1868,
	1845, 1841, 0, 1838, 1836, 1837, 1829, 1830, 1831, 1832,
	1834, 1835, 1866, 0, 0, 1876, 0, 0, 1854, 0,
	0, 1855, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 1873,
	0, 1849, 0, 0, 0, 0, 1842, 1843, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 0, 1858, 1859,
	1860, 1869, 1870, 1871, 1864, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 1848,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 2351, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 1840, 1846, 1868, 1845, 1841, 0, 1838, 1836, 1837,
	1829, 1830, 1831, 1832, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 971, 0, 1020, 0, 0, 1850, 1851, 1852, 1853,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 994, 0, 977, 976, 0, 0, 0,
	1867, 0, 0, 0, 0, 1866, 0, 0, 1876, 0,
	0, 0, 0, 0, 1855, 1857, 0, 996, 0, 0,
	0, 0, 0, 978, 0, 0, 0, 0, 981, 0,
	1872, 1880, 1873, 1031, 0, 0, 0, 0, 0, 1842,
	1843, 0, 991, 992, 0, 0, 0, 0, 0, 0,
	0, 1009, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1021,
	983, 0, 1848, 0, 0, 0, 984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 985, 0,
	0, 0, 1865, 0, 0, 0, 0, 1018, 0, 0,
	0, 0, 1839, 1840, 1846, 1868, 1845, 1841, 1874, 1838,
	1836, 1837, 1829, 1830, 1831, 1832, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1019,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 987, 0, 0, 0, 0,
	0, 0, 0, 975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 988, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 997,
	995, 0, 0, 1854, 0, 0, 0, 990, 0, 0,
	0, 1006, 0, 0, 1026, 1025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 1028,
	1017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 1022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 980, 0, 0, 0, 1013, 1014, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	1016, 0, 0, 0, 0, 1839, 1840, 1846, 1868, 1845,
	1841, 0, 1838, 1836, 1837, 1829, 1830, 1831, 1832, 1834,
	1835, 0, 0, 0, 1023, 1011, 0, 0, 0, 0,
	0, 0, 0, 1029, 1007, 0, 0, 1000, 998, 0,
	1003, 0, 0, 0, 0, 0, 1004, 0, 0, 973,
	0, 1024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1015, 0, 1005, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1027, 0, 0, 0, 0, 0, 0,
	0, 1008, 0, 0, 0, 0, 0, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1012,
}

var sqlPact = [...]int{
	6022, -1000, -1000, -1000, -1000, 190, -1000, -1000, 189, 188,
	187, 186, 182, 180, 179, 178, 177, 170, 168, -1000,
	-1000, -1000, -1000, -1000, -1000, 166, -1000, -1000, 164, -1000,
	163, 162, 160, -1000, -1000, 159, -1000, 158, -1000, -1000,
	-1000, -1000, 157, 154, 153, 90672, 90113, 91222, 2389, 114550,
	97858, 2138, 80105, 113991, 79546, 113432, 2277, 10177, 112873, 2834,
	151, -1000, 112314, 150, 148, 147, -1000, 111755, -1000, 2036,
	-1000, 144, -1000, 8165, 69475, 141, 135, 133, 132, 2871,
	131, -1000, 130, 129, -1000, -1000, 128, -1000, 12758, 1539,
	-1000, 127, 126, -1000, 6101, 95631, 125, 124, 123, 2545,
	122, 120, 67816, 119, 115, 113, 2531, 2944, -1000, -1000,
	2253, -1000, -1000, 110, 108, 103, 102, 101, 100, 99,
	96, 94, 89, 87, 86, 84, -1000, 83, 81, 80,
	79, 78, -1000, 75, 74, 72, -1000, 71, -1000, 70,
	67, 64, 61, 58, 56, 54, 52, 51, 49, 48,
	44, 42, 41, 133169, -1000, -1000, 40, 2022, 1735, 1732,
	1731, 1728, 1726, 972, 38, 37, 32, 30, 27, 26,
	25, 24, 23, 22, 21, 20, 19, 18, 17, 13,
	12, 10, 145, 6, 5, 4, 3, 2, 1, 0,
	2617, -1000, 1837, 1525, 31884, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 122800, 115100, -1, -99, -4,
	-1000, 3404, 1020, 56015, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 274, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 442, 2189,
	735, -1000, -1000, -1000, 111205, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2388, -47, -1000, 2169, -1000, -1000, -1000,
	-1000, -1000, 734, -1000, 2387, 277, 2356, -1000, -1000, -1000,
	3492, 2539, 3899, 3898, 3896, 3895, 3894, 122250, 1911, 3893,
	2616, 3891, 3890, 3889, 3888, 3887, 3886, 3884, -1000, 89554,
	1066, 88995, 88436, 3475, 110655, 87877, 110096, 125009, 48016, 1523,
	3484, -1000, -1000, -1000, -1000, -1000, -1000, 115100, -1000, 1063,
	-1000, -1000, 3881, 2176, 733, 97299, -1000, -1000, 109537, 1889,
	-1000, -1000, -1000, 917, 1190, 33600, 33600, 33600, 264, -1000,
	-1000, -1000, -1000, -1000, -1000, 3880, 3877, 3876, 3875, 3874,
	-1000, -1000, 78987, 24832, 78428, 77869, 108978, 24263, 87318, 86759,
	3873, 3872, 3869, 108419, 124459, 3616, 3615, 1062, 2165, 1520,
	-1000, -1000, -1000, -1000, -1000, -1000, -25, 71699, 3648, 115100,
	-1000, 261, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47444,
	1068, 46872, 699, 46300, 397, 107860, -1000, -1000, -1000, -1000,
	73977, -1000, 107301, 2536, 3867, 3866, 1182, 3865, 3348, 1860,
	3864, 2027, 1272, 3863, 3861, 3860, 3858, 3857, 3856, 3855,
	1558, 106742, 3042, 1614, 106183, 1868, 123909, 1061, 86200, 91222,
	2777, 105624, 1569, 1488, -1000, -1000, -1000, -1000, 3134, 2942,
	2935, 1354, -1000, -1000, -1000, -1000, 59400, 7415, 5137, -1000,
	-1000, 10865, 105065, 62235, 91222, 91222, -1000, -1000, -1000, -1000,
	-1000, -1000, 45728, 674, 45156, 1522, 104506, -1000, -1000, 59967,
	3005, -1000, -1000, -1000, -1000, -1000, 103947, 44584, 571, 44012,
	969, 115100, -1000, 3041, 2031, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2652, 1634, 3674, 2829, 73408, 2187, 1425,
	3438, 3131, 3128, 1501, 2163, 3127, 3854, 2716, 3126, 3115,
	3114, 3113, 3110, 1709, 2668, 329, 2657, 31312, 3032, 1899,
	43440, 1551, 1505, 3106, 3104, 3703, 2157, 2112, 2079, 77310,
	3853, 3852, 3414, 3103, 3098, 2878, 3096, -1000, 3003, 1544,
	260, -1000, -1000, -1000, -1000, -1000, -1000, 1473, -1000, -1000,
	-1000, -1000, -1000, 81755, -1000, -1000, 1342, -1000, -1000, 1342,
	-1000, -1000, -1000, -1000, -1000, 1435, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1837, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2776,
	-1000, 2167, -1000, -1000, 2585, 3391, 3391, 3391, 3481, 424,
	418, -1000, 145, -1000, -1000, 132751, -1000, -1000, 48588, 48588,
	48588, 48588, 48588, 48588, 48588, 48588, 2290, -1000, 730, -1000,
	-1000, 761, -1000, 729, 659, 593, -1000, -1000, -1000, -1000,
	-1000, -1000, 726, -1000, -1000, -1000, -1000, -1000, -1000, 3648,
	-1000, 27747, -1000, -1000, -1000, 391, 725, 48588, -1000, -1000,
	3717, 3712, 1008, -1000, 255, 931, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3039, 724,
	723, -1000, 719, 715, 714, 712, 711, -1000, 710, -1000,
	709, 701, 698, 691, 690, 689, 680, 678, -1000, 2188,
	-1000, -1000, -1000, -1000, -1000, -1000, 636, 629, 629, 629,
	-1000, 1054, -1000, -1000, -1000, 383, 628, 335, 627, 624,
	623, -1000, 677, 676, 675, 671, 670, 669, 668, 667,
	665, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1053, -1000,
	-1000, -1000, -1000, -26, 115100, -1000, 442, -26, -1000, -1000,
	661, -1000, 35917, 35917, 35917, -1000, -1000, 2386, 48588, -1000,
	2576, -1000, -14, -14, 876, 57695, -1000, 54875, 876, 345,
	771, 63352, -1000, 3001, -1000, -1000, 660, 252, -1000, -1000,
	-1000, -1000, 25399, 3000, 115100, 115100, 115100, 91222, 91222, 91222,
	115100, 3851, 3277, 48588, -1000, -1000, 68916, 126659, 91772, -1000,
	-1000, 3596, 70032, 68366, 126659, 3038, 126109, 3849, -1000, -1000,
	-1000, -1000, -1000, 3257, 3848, 3847, 3846, -1000, 115100, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 236, 3256, -1000, -1000,
	95072, 236, 3255, -1000, 236, 3254, -1000, 94522, -1000, -1000,
	2391, 3251, -1000, -1000, 241, 3250, -1000, -1000, -1000, 238,
	3249, -1000, -1000, 243, -112, 3243, -1000, -1000, -1000, -1000,
	-1000, -1000, 132751, -1000, -1000, -1000, 125559, -1000, 3408, -1000,
	115100, -1000, 48588, -1000, -1000, 3595, 1759, 3420, 3546, -1000,
	-1000, -39, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2578,
	2555, 1141, 2409, -1000, 3290, 1449, 33600, 3334, -1000, -1000,
	-1000, -1000, -1000, 231, 25399, -1000, -1000, -1000, -1000, -1000,
	-1000, 2268, 3240, 1574, -1000, 2408, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2095, 3239, -1000, 2054, 3238,
	2078, -1000, -1000, 2092, -1000, 3378, 1381, 1857, -1000, -1000,
	-1000, -1000, -1000, -1000, 1941, 3236, -13, -1000, -1000, 2403,
	-1000, -1000, -1000, -1000, 2142, -1000, 1328, 3234, -1000, 2827,
	2827, 85641, 3196, 61668, 59967, 71699, -33, -1000, -1000, -1000,
	-157, -1000, 23690, 132751, -1000, -1000, -1000, -1000, 1920, 132751,
	869, -1000, -1000, 3233, -1000, 132751, 777, -1000, -1000, 3232,
	-1000, 2662, -1000, 3036, -1000, -1000, 2493, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2490, -1000, -1000, 3845, -1000,
	-1000, 3844, -1000, 3843, 3841, 3840, -1000, 1808, 2140, 3839,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 85091, 2383,
	-1000, -1000, 83973, 3035, -1000, 2488, 3545, -1000, 84532, 1059,
	-1000, 957, 2484, -1000, 93972, 989, 2479, -1000, 3838, 3471,
	2763, 957, 2477, -1000, -1000, -1000, -1000, -1000, 1003, -1000,
	65584, -1000, 65584, -1000, 1723, -1000, 121700, -14, 91222, 3648,
	-1000, -53, -1000, -1000, -1000, 1020, -1000, 58828, -1000, 58828,
	96740, 74544, 940, 2999, 67256, 132559, -1000, 998, -1000, -1000,
	132751, -1000, -1000, -1000, 2660, -1000, -204, 2825, -1000, 74544,
	61101, 2653, -1000, 132751, -1000, -1000, -1000, -1000, 132751, -1000,
	-1000, -1000, 74544, 83973, -1000, 103388, 83423, -1000, -1000, 1542,
	2634, -1000, -1000, -1000, 74544, 1329, 74544, 74544, 74544, -1000,
	102829, -1000, -1000, 2182, 1627, 3382, 2151, 91222, -1000, 2042,
	-1000, -1000, -1000, 3428, 3195, 115100, -1000, -1000, 3033, -1000,
	71149, 93422, -1000, 92872, -1000, 92322, -1000, 91222, -1000, 91222,
	-1000, 3835, 3831, 3830, -1000, -1000, 3829, -1000, 3827, 3421,
	-1000, 967, 42868, 132751, 3406, -1000, 3821, 2084, 3032, 132751,
	-1000, 3146, 1724, 1717, 115100, -1000, -1000, 115100, -1000, 115100,
	-1000, -1000, -1000, 1623, -1000, -1000, 2573, -1000, -1000, -1000,
	-1000, 91222, 91222, 91222, 91222, 1271, -1000, 42296, -1000, -1000,
	3093, 3818, 1816, -1000, 1922, -1000, 2991, 3430, -1000, 1536,
	1904, 226, 3728, -1000, -1000, 242, -1000, -1000, -39, -1000,
	121150, -1000, 2585, -1000, 115100, -1000, 2587, 3025, 3031, 1780,
	2400, 2686, -1000, 41724, 2687, 52020, 2405, 145, -1000, -1000,
	145, 145, 33028, -1000, -1000, 70032, 70032, 25399, 1479, 48588,
	48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588,
	48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588,
	48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588,
	48588, 48588, 48588, 48588, 48588, 2305, 48588, 1433, 48588, 48588,
	48588, 48588, 1893, -1000, -1000, 2053, 523, 2136, 659, -1000,
	-1000, -1000, 3647, 3647, 3647, 346, 346, 346, 133004, 133004,
	581, 3817, 761, -1000, 48588, -1000, 107, 58252, 48588, 25968,
	-1000, 418, 10650, 2630, -1000, 417, 26569, -1000, -1000, -1000,
	27747, 593, 41123, 48588, 1005, 132751, -1000, -1000, 1465, 3673,
	23117, 3051, 2870, 657, 827, 822, 30711, 30110, 29509, 28908,
	772, 610, 48588, 48588, 48588, 48588, 48588, 48588, 48588, 48588,
	-1000, -1000, 3680, -1000, 3673, -1000, -1000, -1000, -1000, 3673,
	1475, 1380, 3673, -1000, 3673, 3673, 9066, 9066, 40551, 39979,
	39407, 52592, 38835, 48588, 28336, 38263, 37691, -1000, 115100, -26,
	3594, 48588, 213, -1000, 131301, -1000, 213, 213, 655, -54,
	132751, 2640, 2640, 56575, 2472, 2304, 2304, 2304, -1000, 876,
	17926, 876, 101172, 2313, 876, 876, 209, 248, 411, 54308,
	2576, 101172, 747, 654, -5, -6, -7, -1000, -1000, -8,
	-9, -1000, -1000, 91222, 653, 25968, 25399, 208, 2110, -60,
	2689, 2688, -1000, 2677, 2676, -1000, 2670, 2382, -1000, -1000,
	1955, -62, 1432, 91222, 115100, 1519, 3811, -155, -1000, 1139,
	-63, -1000, 1310, 207, 3673, -1000, -1000, -1000, -1000, -1000,
	3810, 3808, -1000, 1036, 648, 640, 451, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 636, 629, 629, 629, -1000,
	383, 628, 335, 627, 624, 623, -1000, -1000, -1000, -1000,
	-1000, 2987, 91222, 115100, 1445, 3807, -112, 91772, -61, -1000,
	-1000, 115100, -1000, -1000, -1000, 3806, -1000, 91222, -1000, -1000,
	91222, 236, 3231, -1000, 91222, -1000, 91222, 233, 3229, -1000,
	-1000, 115100, -1000, 91222, 91222, -1000, 115100, 115100, 115100, 126659,
	126659, 229, -1000, 91222, 854, -68, 1192, -39, -1000, -1000,
	-1000, -1000, 1342, -1000, 1844, -1000, -1000, -1000, -1000, -1000,
	-1000, 1565, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1008, -1000, -1000, -1000, -1000, -1000, -1000, 3654, 3645, -27,
	-1000, -1000, 25399, -1000, -40, 1705, 2009, 1429, -1000, 76751,
	2544, 3387, 3805, 2731, 3370, 1676, -1000, 1622, -1000, 3488,
	81755, 3561, 3576, 1363, -1000, 2985, -1000, -1000, -1000, 915,
	1797, 1891, 1427, 1413, 81755, 2054, -1000, 70032, -1000, 2714,
	3480, 1384, 1390, 1384, 1384, 1394, -1000, 81755, 1890, 1408,
	1402, 1400, -1000, -1000, 2096, 2091, -1000, -1000, 102279, -1000,
	1397, 1387, 3586, 2776, 2319, 793, 2083, -1000, 1378, 2982,
	2981, -1000, 1362, -41, 3555, 3570, 1357, -1000, 2979, 1368,
	-1000, -1000, -1000, 3479, 91222, 25399, 1593, 1592, 1581, 1886,
	1361, -28, -1000, 3552, 1360, 1306, -1000, 1034, 5915, 3314,
	-1000, 126659, 1034, 1034, 2048, 3227, 2802, 1689, -1000, 2824,
	887, 2823, -1000, -1000, -1000, 887, -33, 71699, 115100, 205,
	-1000, 107, 48588, 48588, 107, 48588, 107, -1000, 3519, 3223,
	3221, -1000, -1000, -1000, -1000, -1000, 3804, 2085, 2615, -1000,
	-1000, 620, 2476, 2978, 115100, 2698, -34, 91222, -1000, 70599,
	3220, 126659, 2054, 2474, -1000, -1000, 82864, -1000, 3218, 442,
	2471, -1000, 664, 3803, 3211, -1000, 120600, -1000, 3408, 1370,
	3174, 1101, 616, 3592, -1000, 616, 66142, -1000, 115100, -1000,
	-14, 662, 75651, -69, -82, 410, -1000, 101729, 115100, 115100,
	3323, 2123, 2118, -1000, 952, 59967, -1000, 59967, -85, -1000,
	-204, 2822, 1607, -1000, 940, 940, 887, -1000, 887, -1000,
	91222, 3030, -1000, -1000, 74544, 940, 940, 940, -1000, -1000,
	-1000, -1000, 3802, 3801, 3799, 3797, -1000, -1000, 955, 91222,
	115100, 91222, -1000, -1000, 1611, -1000, 201, -1000, 126659, -1000,
	126659, 115100, 91222, -1000, 955, 115100, 955, 115100, 955, 115100,
	955, 955, -1000, -1000, -1000, -1000, -1000, 107, -1000, -1000,
	132751, -1000, 48588, -1000, -1000, 1619, 3796, 1781, -1000, 3029,
	-1000, 3028, -1000, 29, -1000, -1000, 2014, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3795, 132751, -1000, 2100,
	-1000, -1000, -1000, -1000, 91222, 91222, 91222, 91222, 115100, 3310,
	-1000, 115100, 3308, 91222, -1000, 3725, -1000, -1000, 81755, -1000,
	2587, 3025, -1000, -1000, -1000, -1000, -1000, -1000, 1431, 2365,
	-1000, 2636, -1000, 1642, -1000, -1000, -1000, 132751, 53164, -1000,
	-1000, 132751, 1933, -1000, 51448, 50876, -1000, -1000, 1798, 91222,
	2691, -1000, 2691, -156, -1000, 131038, 2635, 91222, -1000, -1000,
	-1000, -1000, -1000, 911, 638, 638, 1210, 1210, 1210, 1210,
	3508, 1163, 330, 7050, 6719, 6719, 7869, 7869, 7869, 7869,
	7869, 6719, 2107, 346, 346, 2107, 2107, 2107, 2107, 2107,
	346, 346, 346, 6719, 6719, 6719, 346, 133004, 8579, 11441,
	48588, 48588, 1304, 2043, 523, 9259, 48588, 11808, 11808, 11808,
	11808, -1000, 2067, -1000, -1000, -1000, -1000, 2975, 619, 52592,
	52592, -1000, -1000, -1000, -1000, 27158, 48588, -1000, -1000, -1000,
	-1000, 37090, -1000, -1000, 130401, -320, 409, -1000, 200, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 403, -131, 14, -1000, 48588, 48588, 48588, 399,
	-1000, 199, 48588, 115100, -1000, 127219, 745, -84, -1000, -98,
	1426, -1000, 48588, -1000, -1000, 1303, -1000, 1299, 1295, 1294,
	-1000, 618, 398, -1000, 197, -1000, 2301, 617, 612, 48588,
	-1000, -1000, -1000, -1000, -1000, 130209, -1000, -1000, 130025, -1000,
	-1000, 129772, -1000, -1000, 129580, -1000, -1000, -1000, -1000, -1000,
	132375, 17125, 16746, 16432, 9993, 15957, 15219, -105, 395, -106,
	394, 910, 909, 393, 392, 389, -114, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -115,
	387, -1000, 2973, -131, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 384, -1000, 381, -1000, 132122, -131, 380, 8661,
	-1000, 52592, 52592, 52592, 52592, -1000, 379, -1000, 130838, -1000,
	131930, 36518, 36518, 36518, 378, 131746, 48588, -131, -116, -1000,
	-117, -1000, -1000, 524, -128, 1013, 35917, 55455, 25399, -1000,
	1013, 1013, 48588, -1000, 48588, 2651, -1000, -1000, -1000, -1000,
	2646, 1895, 2640, 56575, -1000, -1000, -1000, -1000, 101172, -1000,
	3648, 3339, -1000, 101172, -1000, -1000, 115100, 442, -1000, 101172,
	101172, 25399, 876, -1000, 876, 101172, 707, -1000, -1000, -1000,
	-1000, -1000, 375, 63912, 14, 195, 25399, 957, -1000, -1000,
	2752, 2752, 2752, 2752, 2752, 91222, -1000, -1000, 126659, 1292,
	-35, -135, 2820, -1000, 3620, -1000, 2206, -1000, 70032, -1000,
	760, 1082, 25399, -1000, -1000, -1000, 608, -1000, 3673, 3673,
	-1000, 3673, 126659, 2972, 172, 2819, -1000, 171, 126659, 3794,
	-1000, -1000, 236, -1000, 91222, 236, 236, -1000, 91222, 91222,
	2391, -1000, 241, -1000, 238, -1000, -1000, -112, -1000, 996,
	33600, -1000, 1342, -1000, -1000, 1594, -1000, 2131, -1000, 1260,
	-1000, -1000, -1000, -1000, 33600, -1000, 2715, 115100, 115100, 91222,
	-1000, 115100, -1000, 2274, 126659, -1000, 2470, 120050, 2438, 119500,
	70032, -1000, -1000, 607, 929, 2633, 2624, 1099, 115100, 115100,
	2623, 118950, 118400, -1000, 3792, 115100, 2166, 48588, 3477, 2344,
	2227, 107, 107, -1000, 107, 107, 107, 606, 1452, 91222,
	91222, 115100, 126659, 91222, 1989, -1000, -1000, -1000, -1000, -1000,
	82305, -1000, -1000, 3679, 3677, -1000, 1384, -1000, -1000, -1000,
	1384, 2054, 1867, 115100, 126659, 91222, 126659, 117850, 117300, -1000,
	-1000, 1884, 115100, -1000, -1000, -1000, -1000, 1420, -1000, 793,
	3648, 3648, 3648, 1289, 2971, 2969, 2243, 107, 107, -1000,
	107, 107, 107, 603, 25399, 2090, -1000, 3061, 115100, 3711,
	116750, 3710, 115100, 115100, 115100, 126659, 3388, 115100, 115100, 126659,
	-1000, 116200, 5915, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 72839, 1112, 115100, 1328, -1000, -1000,
	1881, 1287, 1286, 81755, 2233, 1877, 1993, 126659, 59967, 950,
	59967, 2770, -1000, -1000, 22544, -1000, 132751, 132751, -1000, 132751,
	-1000, 70599, 74544, 115100, -1000, 1057, 115100, 76201, 936, 3172,
	65026, -157, 940, 74544, 91222, -34, 2698, 115100, -1000, -1000,
	2054, 3171, 442, 2469, -1000, 126659, 3591, 3170, 600, 3791,
	3790, -1000, 91222, 2379, 2467, -1000, -1000, 115650, 3124, 793,
	115100, 1013, 56575, 2098, -1000, 62795, 1076, 115100, 2004, 165,
	-1000, -1000, -1000, 9, 115100, -1000, 768, -1000, -1000, 662,
	662, 940, -194, 596, -1000, 862, 856, 60534, -136, -1000,
	194, 594, 855, 852, -1000, 3252, -1000, -204, -1000, 74544,
	952, 59967, 2965, 2962, -1000, -1000, 994, -1000, 1533, 940,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -15, 1983, 115100, -112, -112, -51, -35, -1000, 955,
	-1000, 955, -1000, 955, -1000, -1000, -1000, 132751, -1000, -1000,
	-1000, 1777, 1750, 115100, -1000, -1000, 115100, -1000, 25399, 115100,
	91222, 25399, 91222, 3024, 3023, -1000, -1000, -1000, 115100, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1136, -1000, 1933,
	2363, -1000, 593, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2557, -1000, -36, 33028, 890, -1000, -1000, 91222,
	-16, 48588, 48588, 7988, 6734, 48588, 52592, 52592, -1000, 48588,
	5226, -1000, -1000, -1000, -1000, -1000, 2960, 592, 48588, 70032,
	6342, 5517, -1000, 374, 14500, 2107, -1000, 48588, -1000, 567,
	-1000, 373, 35345, -1000, 131101, -37, -137, -1000, 18512, -131,
	-138, -1000, -1000, 757, -1000, 3153, -1000, 48588, 131483, 2532,
	1982, 1977, 1807, 3673, 3709, 21971, -1000, 66699, 1015, 2328,
	129396, -1000, -1000, -1000, -1000, 70032, 70032, 48588, 48588, -1000,
	48588, 48588, 48588, -1000, -1000, -1000, 3673, 905, -1000, -1000,
	-1000, 905, -1000, -1000, 1384, -1000, 1384, -1000, 48588, -1000,
	-1000, 2950, 48588, -1000, 70032, 70032, 52592, 52592, 52592, 52592,
	52592, 52592, 52592, 52592, 52592, 52592, 52592, 52592, 52592, 52592,
	52592, 52592, 52592, 52592, 52592, 52592, 2659, 52592, 3637, 3637,
	3637, 1004, -1000, 3020, 2950, 48588, 48588, 70032, 372, 367,
	366, -1000, 48588, -131, -1000, -1000, 6640, 588, -1000, 2547,
	-1000, 2867, -1000, 48588, -1000, -158, -1000, 2576, -1000, -1000,
	2867, 2867, -143, 132751, 56575, 56575, -1000, 587, 48588, 2645,
	-1000, -1000, 744, -311, -1000, 851, -1000, -1000, -1000, -1000,
	-1000, -1000, 849, -1000, 442, -1000, -1000, -1000, 193, 101172,
	101172, 743, -1000, -145, -1000, -1000, -146, -1000, 3590, 362,
	25399, -1000, 1013, 2984, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2664, -112, 126659, 126659, 1876, 2354, 3708, -1000, 3676,
	755, 742, 192, 3673, 361, 357, 356, -112, 126659, 126659,
	1856, 126659, -1000, -1000, -1000, 236, -1000, -1000, -1000, 233,
	-1000, -1000, -1000, -1000, 2712, -1000, -39, -1000, -1000, -1000,
	48588, -1000, -1000, 3383, 1285, 1281, -1000, -1000, -1000, 2959,
	-1000, 3168, -1000, 2465, -1000, 1085, 2461, 1737, -1000, 48588,
	584, 2760, 583, 579, 3789, 2172, 3788, 1100, 3164, 2391,
	3151, 2391, -1000, -1000, -1000, 922, -1000, 132751, 2344, -1000,
	578, 576, -1000, -40, 1686, 1985, 1279, 993, -1000, -1000,
	-1000, -1000, 48588, 48588, 100622, -1000, 485, 3378, -17, -1000,
	-1000, -1000, 1854, 1266, 1264, -1000, -1000, -1000, -1000, 2054,
	1846, 1263, 1262, -1000, -1000, -1000, -1000, -1000, 2459, -1000,
	-1000, 3140, 990, -1000, 3064, 3063, 907, 115100, 3021, 1254,
	1253, 3648, 3648, 3648, -1000, 987, -1000, -1000, -1000, -1000,
	48588, -1000, -41, 1250, 3537, 2458, 91222, -1000, 2391, 3137,
	1247, -1000, 1233, -1000, -1000, -1000, 3549, 3548, 1216, -1000,
	-1000, -1000, -1000, -1000, 72272, -1000, -1000, 1034, 115100, 126659,
	91222, 1840, -1000, -1000, 80655, 81205, 115100, 2802, -112, 887,
	-1000, 2468, 887, 950, 2945, -1000, 2693, -1000, 977, 91222,
	3787, 354, -159, -42, 70032, -1000, -1000, -1000, -1000, 2438,
	91222, 115100, 1259, 2755, 115100, 115100, 3588, -1000, 2393, 591,
	91222, 882, -1000, 3648, -1000, -1000, -1000, 958, -1000, 3523,
	91222, 3587, 3130, 957, 107, 91222, 3684, -1000, -1000, 3585,
	91222, 3122, 2378, 2455, 2582, 793, 75101, 957, 2325, -78,
	-1000, 2004, 34744, 3376, -160, -1000, -1000, -1000, 1013, 66142,
	56575, 48588, 3786, -161, -1000, -1000, -1000, -1000, -1000, 98415,
	98415, 74544, 74544, 74544, 940, 115100, 115100, 3785, 74544, 74544,
	74544, -48, 572, -1000, 843, 830, 829, -1000, -1000, -1000,
	-1000, -1000, -1000, 828, 826, 952, -1000, -1000, -204, 59967,
	107, -1000, 2335, 91222, -1000, 21398, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 955, -157, -1000, -1000, 2244, 2399, 2244,
	1973, 1972, -1000, -1000, 2362, -1000, -1000, -1000, -1000, 2690,
	3379, 25399, 3524, 11808, 48588, 48588, 279, 5414, 991, 11808,
	48588, 48588, 70032, 11338, -162, 48588, 48588, -1000, 48588, 741,
	132751, -1000, 3707, 48588, 351, 350, -1000, -1000, -1000, 3671,
	-1000, -1000, -1000, 132751, 48588, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 343, -1000, 173, -1000, -1000, -1000, 123350, -1000,
	48588, 342, 3472, -1000, 333, 326, 464, 8620, 129143, 128951,
	128767, 318, -1000, -1000, 313, 311, 132751, 3020, 132751, -1000,
	-1000, 848, 848, 1359, 1359, 1359, 1359, 3637, 954, 1064,
	518, 490, 490, 490, 1198, 1004, 1004, 490, 490, 490,
	1004, 2938, 2606, 570, 8941, -1000, -1000, 132751, 132751, 310,
	-1000, -1000, -1000, -131, 309, 6640, -1000, 2859, 3467, 132751,
	-1000, 56575, 2859, 2859, -1000, -1000, 1895, 115100, 132751, 56575,
	-1000, 3339, -1000, 19674, 19096, -1000, 25399, -1000, -1000, -1000,
	-1000, 3648, -1000, 63912, -1000, 569, -1000, 15, -1000, 2984,
	-1000, 825, -1000, -1000, 74544, 74544, 2752, -112, -254, 115100,
	-1000, -1000, 740, 3783, 752, 25399, 306, -1000, -1000, -1000,
	-112, -112, 115100, -112, -1000, -1000, -1000, 3320, 132751, 115100,
	115100, 1579, 100072, 115100, 3121, -1000, 3116, -1000, 1099, 5045,
	128514, 57135, -1000, 57135, 115100, -1000, -1000, -1000, -1000, 2128,
	1577, 3781, 1159, -1000, 3431, 115100, -1000, 115100, -1000, -1000,
	-1000, 115100, 115100, 91222, 115100, -1000, 126659, 3075, -167, 132751,
	-49, -1000, 820, -1000, 1376, -1000, 20825, 115100, 126659, 91222,
	115100, 126659, 91222, 3111, 115100, 2293, -1000, -1000, 3062, -1000,
	107, 3648, 3648, -1000, 1229, 1227, 3071, -168, 25399, -1000,
	3702, 3695, 3091, 3433, -1000, 115100, 3694, 115100, 91222, 3319,
	-1000, -1000, -1000, -1000, -1000, -1000, 1841, 1226, 1224, 2376,
	-50, 2375, 2343, -51, 2233, 950, -52, 566, -1000, 817,
	-1000, -1000, 814, 950, -1000, 74544, 59967, 3776, 442, -1000,
	2729, -1000, 96181, 76201, 2397, -1000, -1000, 547, 115100, 115100,
	546, -1000, 107, -1000, 3768, 98972, 545, -1000, 2334, -1000,
	737, -1000, 2591, 126659, 2054, 107, 91222, -1000, -1000, 442,
	302, -56, -1000, 3133, 1092, 25399, 91222, 3090, 2590, 793,
	75101, -1000, 1370, 2686, -1000, -59, -1000, 492, 107, 2325,
	-1000, -78, 132751, -1000, 805, -1000, -169, -1000, -1000, 298,
	-1000, 3317, -1000, -1000, -170, -1000, -1000, 3342, 3342, 74544,
	59967, 74544, 74544, 74544, -1000, 952, 887, -1000, 2543, -1000,
	-1000, -1000, -1000, -1000, 25399, 1775, -1000, 542, 541, -1000,
	-1000, -1000, -1000, 3379, 11808, 11808, 48588, 48588, 48588, 11808,
	11338, -175, -1000, 11808, 11808, -131, -1000, -1000, 131101, -1000,
	-1000, -1000, 132751, -1000, 20252, 2258, -1000, 128322, -1000, 33028,
	-1000, -1000, 48588, 48588, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 52592, 2936, 540, 70032, -1000, -1000, 297, 1000,
	48588, 50304, 2576, 1000, 1000, -1000, -178, -1000, -1000, -1000,
	3648, -1000, 3648, 15, -1000, -1000, 3767, 25399, -1000, 74544,
	-1000, -1000, -1000, 3765, -181, 751, -1000, 3761, -1000, -1000,
	112, -1000, -1000, -1000, 2799, 3584, -1000, 2076, -1000, 115100,
	115100, -1000, 115100, -1000, 25399, 115100, 2894, 1256, -1000, 929,
	2622, 539, 52592, 1135, 91222, 893, 2844, 2840, -1000, 3611,
	3457, 2826, -180, -1000, 115100, 48588, 115100, -191, -193, 2422,
	-1000, -1000, 1133, 1241, 48588, 1126, -1000, -1000, -1000, 70032,
	537, 2391, 2391, -198, -201, -1000, -1000, -1000, 48588, 1222,
	115100, 34172, -1000, 3757, 3378, -1000, -1000, -1000, -1000, -1000,
	-1000, 115100, -1000, 115100, -1000, -1000, 3019, 3017, 3648, 3648,
	48588, 1220, -1000, -1000, -1000, 3690, 2391, 25399, 2391, -1000,
	2391, 3433, 1154, 115100, 126659, 91222, 1813, 1813, 3012, -1000,
	-1000, -1000, 2462, 2462, 74544, 59967, -1000, -79, 950, -1000,
	3583, 2252, 3753, -1000, -1000, -1000, -1000, 2621, -1000, -1000,
	-1000, 115100, 2610, 2860, 57135, 534, 533, 115100, 946, -1000,
	-207, -1000, 802, 801, 76201, 936, 886, -1000, -80, 531,
	-1000, 800, -1000, -1000, -1000, -1000, 442, 3581, -1000, 3685,
	528, 527, 115100, 2372, 526, 25399, 3372, 793, 75101, -1000,
	3124, 2004, -1000, 2428, 115100, 3354, -1000, 2686, 523, -1000,
	940, 520, 940, -1000, -209, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -81, -1000, 866, 864, -1000, -1000, 91222, 91222,
	48588, 48588, -1000, 11808, 11808, 11808, -1000, 290, -1000, -1000,
	2325, 3453, -1000, -87, 128138, 127885, 6261, 52592, 70032, -210,
	-1000, -1000, 115100, 132751, -88, -1000, 132751, 516, 498, 414,
	-1000, -1000, -1000, 708, 465, -1000, -1000, -1000, 126659, 3752,
	-1000, 126659, 99522, 115100, -1000, -1000, 1737, 2326, -1000, -1000,
	-1000, 115100, 2439, -1000, -1000, -1000, 1098, 48588, 8941, 52592,
	497, 48588, -1000, 496, 495, 3578, 3300, -1000, 2720, 2925,
	2034, 57135, -1000, 3379, -1000, 127693, -1000, 1091, 2081, -1000,
	-1000, -1000, -1000, 132751, 52592, 3433, 57135, -1000, -1000, 494,
	493, 132751, 473, 798, 2921, -1000, -1000, -1000, -1000, -1000,
	107, 107, -1000, -1000, 132751, 472, 3537, -1000, -1000, -1000,
	-1000, 2391, 91222, -1000, -1000, -1000, 1213, -1000, -1000, -1000,
	-1000, 3751, 3750, 2920, 80655, -1000, -212, -1000, -1000, 2103,
	107, 936, -1000, -1000, 2397, 468, -1000, -1000, 2679, 2679,
	-215, 57135, 57135, -217, 2367, 2695, -1000, 98972, 33600, 33600,
	287, 3575, 886, -1000, 3655, -1000, 3296, 3296, 48588, 3574,
	107, -1000, 3684, 57135, -1000, 91222, 57135, 2370, 2174, 2570,
	75101, -1000, 2582, -1000, -1000, -220, 115100, 2004, -1000, -1000,
	74544, -1000, -1000, 2543, -1000, 115100, -1000, 115100, -1000, -1000,
	-223, -225, -1000, 2229, 48588, 33028, -1000, -1000, 6261, -226,
	-1000, -111, -1000, 3569, 50304, 3744, 3738, 3737, -1000, -1000,
	-112, -1000, -112, -1000, 2069, -1000, 2438, -1000, -1000, 3086,
	2855, 127509, 8941, 2546, 115100, 127256, 2054, 2054, -1000, 3568,
	2922, -1000, -1000, 2243, 463, -1000, -1000, -1000, -1000, 890,
	115100, -1000, 2838, 91222, 8941, 1097, -232, 2244, 2244, 48588,
	32456, 2287, -1000, -1000, 48588, -1000, -1000, 3433, 126659, -1000,
	-1000, 126659, 2369, -1000, 2902, 3670, -1000, 2367, 115100, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1091, -233, -239, -1000, -1000, 3425, -1000, 3316, -1000, -1000,
	-1000, 2729, 107, -1000, -1000, -1000, -242, 132751, 107, -1000,
	286, -249, 1092, -256, 91222, 2062, -1000, 793, -1000, 2590,
	1013, -1000, -1000, -257, -1000, -258, -265, -1000, -1000, 285,
	49732, 49732, 49732, -131, -156, -1000, 115100, 443, -1000, -1000,
	-1000, -1000, -1000, -1000, 3059, 949, -1000, 867, 1995, 278,
	1111, 249, 167, -1000, -1000, -1000, 2826, -1000, 115100, -1000,
	-1000, 948, 442, -1000, 48588, 1091, -266, -1000, 1073, -267,
	-1000, 1071, -275, -1000, 2913, -1000, -276, 2391, -255, 229,
	1813, 947, 3518, -1000, -1000, -1000, 2562, -277, -1000, -1000,
	2034, 1091, 2243, 2482, -1000, 2252, 946, -1000, -1000, -1000,
	1091, 437, 2034, 436, 1576, 793, -1000, -1000, 1384, 3372,
	3118, 940, -1000, -1000, -1000, 3105, -1000, 53736, 2415, 1967,
	130654, 3105, 3105, -1000, -1000, 115100, 3505, -1000, 875, 872,
	1528, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1013,
	-278, 3498, 2546, 132751, -1000, -1000, 2244, 2780, -1000, 2244,
	2912, -1000, 2276, -1000, -1000, -1000, 2875, -1000, 2910, -1000,
	1894, 3642, -1000, -1000, -1000, 115100, 2243, 2034, 937, 1924,
	1916, 3735, 936, 2367, 2034, 57135, 2243, 57135, 2220, -1000,
	115100, -1000, 2174, 1345, -1000, -1000, 2068, 3603, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 792, -1000, 3287, -1000,
	1122, 2285, 2285, -1000, -1000, 785, 867, -1000, 434, -1000,
	433, -1000, 2329, 126659, 2332, -1000, -1000, -1000, 937, 2243,
	1013, 432, -1000, 3732, -1000, 2367, -1000, 2243, -283, 937,
	-284, -1000, -1000, -1000, -157, 2062, -1000, 1674, 1960, -1000,
	-1000, 2310, 49160, 48588, -1000, 3623, -1000, -1000, 2665, -1000,
	48588, 2826, 48588, 48588, -1000, 229, 64469, 1013, 937, -1000,
	-1000, 2562, 937, 1091, 1013, 2034, 1576, 66142, -1000, -1000,
	-1000, 132751, -1000, -1000, -1000, 132751, -1000, -286, -293, -1000,
	-194, 98415, -1000, 1013, -1000, 1013, 2034, -1000, 2243, 2220,
	-273, 2243, 1209, -294, -1000, -1000, 2243, 937, -1000, -1000,
	-1000, -1000, 429, -1000, 937, 1013, 48588, 1013, -1000, -302,
	-1000, 2243, -1000,
}

var sqlPgo = [...]int{
	0, 4530, 4529, 4528, 4527, 4525, 4523, 4522, 4521, 4520,
	4519, 4518, 4517, 139, 4515, 4513, 4511, 4510, 4507, 4505,
	4503, 4500, 4498, 4497, 4494, 4493, 4492, 4491, 4490, 4488,
	4483, 4482, 4481, 4475, 4474, 4473, 4471, 4470, 4469, 4466,
	4463, 4461, 4459, 4453, 4452, 4450, 4449, 4448, 4447, 4443,
	4440, 4438, 4436, 4432, 4425, 4424, 4422, 4417, 4415, 4414,
	4413, 4408, 4400, 4398, 4397, 4393, 4392, 4391, 4389, 4388,
	58, 4385, 4383, 4381, 4380, 4379, 4376, 4373, 4371, 4365,
	4363, 4359, 4358, 4357, 4356, 4355, 4351, 4350, 4346, 4345,
	4344, 64, 4343, 277, 4342, 4341, 4340, 4339, 4337, 4336,
	4328, 4326, 4325, 4322, 4320, 4319, 276, 4318, 128, 167,
	4317, 4312, 3902, 4310, 4308, 272, 4307, 4306, 4304, 4301,
	4299, 285, 4297, 4296, 4293, 4290, 4289, 4288, 4287, 4284,
	4283, 4282, 4278, 4271, 94, 217, 4270, 4268, 4275, 4267,
	4266, 4265, 4264, 4263, 4261, 4259, 4258, 4257, 4256, 4254,
	252, 171, 4253, 270, 4252, 4250, 4249, 4248, 4247, 4245,
	4243, 4241, 4240, 4239, 4238, 4236, 4235, 4234, 4231, 4230,
	4228, 4227, 4226, 4224, 4223, 4222, 4221, 4219, 4218, 4217,
	4215, 4212, 4210, 4209, 4208, 4207, 4206, 4204, 4203, 4202,
	4201, 4199, 4197, 249, 224, 149, 4196, 4195, 269, 268,
	4194, 4193, 4192, 4191, 4190, 134, 20, 40, 4188, 4184,
	118, 96, 98, 104, 108, 105, 4183, 123, 4180, 130,
	72, 4179, 21, 1, 298, 245, 12272, 235, 4178, 4177,
	4171, 247, 202, 4170, 242, 4168, 4167, 4159, 4158, 4154,
	4153, 77, 52, 190, 185, 182, 178, 85, 54, 106,
	83, 59, 47, 10, 92, 214, 19, 11, 263, 4151,
	262, 8, 144, 12, 36, 4150, 4149, 4148, 4143, 3524,
	111, 4141, 266, 257, 172, 4140, 4136, 4135, 173, 4134,
	4130, 51, 4129, 110, 99, 116, 16, 132, 4128, 150,
	170, 32, 4127, 183, 88, 4126, 165, 112, 89, 8671,
	11690, 4124, 4123, 114, 74, 120, 4563, 189, 180, 203,
	191, 163, 168, 140, 216, 213, 184, 27, 4122, 250,
	4116, 3561, 80, 196, 156, 5167, 4109, 4108, 4104, 86,
	4101, 109, 4099, 4096, 69, 15, 4, 2, 152, 39,
	38, 6, 4095, 46, 131, 50, 28, 4094, 29, 4093,
	4092, 4091, 4090, 4089, 63, 164, 4088, 4087, 279, 4086,
	95, 57, 37, 4085, 30, 220, 4084, 239, 136, 4082,
	4080, 259, 215, 194, 4079, 43, 231, 4078, 4075, 4074,
	4073, 4072, 4070, 145, 3, 135, 4069, 4068, 154, 4066,
	56, 246, 204, 4065, 62, 4062, 4061, 187, 53, 143,
	278, 179, 240, 126, 227, 193, 232, 4060, 4058, 4057,
	209, 4054, 4052, 228, 159, 4051, 4049, 254, 286, 102,
	48, 90, 241, 79, 200, 162, 4047, 207, 4044, 4043,
	281, 192, 219, 5, 13, 93, 113, 4042, 7, 234,
	160, 238, 124, 4040, 8052, 2442, 2600, 4039, 4038, 158,
	125, 76, 127, 157, 267, 97, 4035, 4034, 1724, 4032,
	4031, 4029, 4028, 199, 4026, 4021, 4020, 153, 229, 223,
	4019, 91, 73, 55, 24, 133, 251, 282, 122, 226,
	181, 258, 4018, 4017, 4015, 201, 4014, 81, 115, 166,
	205, 256, 67, 4012, 186, 4011, 151, 413, 70, 176,
	4010, 225, 4009, 4008, 3998, 3997, 3996, 3995, 3991, 333,
	243, 3990, 3989, 3988, 35, 198, 3987, 265, 155, 175,
	1685, 49, 3986, 107, 2847, 3985, 147, 218, 66, 522,
	25, 3980, 3873, 71, 3978, 0, 13527, 8826, 11949, 13008,
	3976, 3835, 3974, 3973, 3970, 212, 84, 3966, 3965, 3964,
	119, 3963, 87, 3962, 3961, 78, 3960, 23, 17, 18,
	31, 26, 161, 60, 3959, 3958, 177, 148, 141, 3957,
	274, 230, 3956, 3955, 3952, 3951, 101, 3950, 42, 3949,
	34, 3948, 3945, 44, 14, 45, 3943, 3941, 211, 3939,
	222, 260, 3938, 169, 3937, 82, 138, 3936, 3935, 3934,
	68, 61, 261, 100, 3933, 287, 3931, 206, 3930, 3929,
	22, 3928, 3927, 248, 121, 117, 3926, 253, 146, 41,
	210, 188, 221, 3925, 3924, 174, 3922, 3919, 3918, 284,
	3917, 3915, 33, 3914, 3913, 3912, 9, 3911, 3910, 208,
	3239, 3909, 3904, 65, 3678, 197,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 54, 54, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 39, 41, 40,
	34, 34, 35, 35, 36, 37, 37, 10, 10, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	20, 20, 42, 42, 21, 21, 44, 44, 22, 22,
	45, 45, 602, 602, 602, 620, 620, 25, 25, 47,
	47, 26, 48, 17, 18, 18, 19, 19, 19, 19,
	603, 603, 603, 603, 38, 27, 49, 31, 31, 31,
	31, 31, 208, 208, 208, 208, 24, 24, 43, 43,
	244, 244, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	598, 598, 246, 246, 245, 238, 238, 239, 239, 240,
	240, 604, 604, 247, 247, 247, 248, 248, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 498, 498,
	498, 529, 529, 529, 529, 530, 530, 624, 624, 625,
	625, 625, 625, 625, 137, 137, 396, 396, 396, 58,
	58, 58, 58, 58, 593, 593, 210, 210, 210, 212,
	212, 211, 211, 211, 211, 82, 82, 610, 610, 609,
	608, 608, 608, 611, 611, 611, 209, 209, 209, 133,
	133, 133, 133, 133, 133, 134, 134, 135, 135, 213,
	213, 213, 215, 215, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 219, 16, 16, 16, 116,
	116, 116, 116, 116, 116, 116, 111, 111, 532, 532,
	533, 533, 204, 204, 205, 205, 205, 205, 206, 206,
	207, 207, 207, 73, 73, 216, 216, 218, 218, 217,
	217, 217, 217, 217, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 61, 61, 61, 61, 61, 62, 62,
	62, 62, 62, 62, 63, 63, 63, 63, 63, 63,
	64, 64, 71, 71, 71, 71, 71, 71, 71, 195,
	195, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 79, 79, 79, 79, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 627, 627, 628,
	628, 629, 629, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 88,
	88, 356, 356, 320, 320, 89, 89, 89, 90, 90,
	91, 91, 75, 75, 591, 591, 372, 372, 489, 489,
	76, 599, 599, 599, 601, 601, 600, 600, 93, 93,
	395, 395, 94, 94, 94, 94, 94, 94, 95, 95,
	95, 95, 95, 95, 95, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 103,
	103, 103, 103, 103, 104, 104, 104, 101, 101, 101,
	98, 98, 98, 97, 97, 97, 102, 102, 102, 590,
	309, 309, 100, 100, 100, 99, 99, 99, 373, 373,
	105, 105, 105, 105, 321, 106, 106, 106, 106, 106,
	106, 106, 106, 109, 109, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 491, 491,
	107, 107, 107, 456, 456, 112, 112, 112, 411, 411,
	113, 113, 113, 113, 113, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 136, 136, 136, 136, 136, 136,
	136, 136, 595, 595, 365, 365, 272, 272, 272, 272,
	125, 125, 125, 125, 126, 126, 126, 127, 127, 200,
	200, 143, 143, 143, 143, 142, 142, 142, 142, 142,
	142, 142, 142, 65, 65, 65, 66, 66, 67, 67,
	68, 68, 69, 69, 70, 70, 70, 70, 70, 146,
	146, 621, 621, 148, 145, 145, 145, 145, 145, 144,
	144, 147, 147, 147, 147, 149, 151, 151, 151, 151,
	151, 150, 150, 150, 150, 150, 152, 152, 523, 523,
	381, 381, 521, 521, 542, 542, 522, 522, 327, 327,
	327, 327, 327, 328, 328, 328, 531, 531, 531, 531,
	531, 531, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 201, 201, 202, 203, 203,
	203, 203, 203, 178, 178, 178, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 382, 382, 181,
	181, 181, 165, 165, 154, 154, 154, 154, 154, 154,
	154, 159, 159, 159, 159, 159, 159, 159, 159, 155,
	155, 167, 167, 167, 167, 167, 160, 160, 161, 161,
	161, 162, 162, 162, 162, 188, 188, 164, 164, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 156, 156,
	156, 156, 169, 169, 169, 169, 418, 418, 418, 193,
	193, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 191, 191, 191,
	191, 191, 191, 612, 612, 613, 613, 613, 185, 185,
	185, 185, 185, 185, 470, 470, 179, 179, 179, 179,
	184, 184, 184, 184, 187, 187, 187, 187, 401, 401,
	176, 176, 176, 177, 177, 177, 182, 182, 183, 357,
	357, 180, 180, 186, 186, 186, 186, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 158, 158, 158, 158,
	189, 189, 175, 175, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 631, 631, 171, 171, 171,
	170, 170, 170, 170, 173, 173, 174, 174, 174, 174,
	174, 174, 172, 163, 192, 592, 592, 588, 588, 588,
	588, 588, 588, 588, 588, 589, 589, 589, 589, 594,
	594, 117, 117, 117, 117, 117, 117, 117, 128, 128,
	128, 128, 128, 128, 128, 131, 131, 118, 118, 118,
	118, 118, 118, 118, 121, 121, 119, 119, 119, 119,
	120, 120, 83, 83, 83, 83, 83, 15, 15, 15,
	84, 84, 263, 263, 222, 222, 222, 345, 345, 223,
	223, 335, 335, 335, 335, 220, 220, 221, 221, 85,
	85, 632, 632, 632, 605, 605, 605, 606, 606, 606,
	606, 606, 606, 329, 329, 330, 330, 436, 436, 436,
	436, 436, 333, 333, 333, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 343, 344, 344, 336, 336, 342,
	341, 341, 340, 340, 339, 339, 337, 338, 338, 338,
	347, 347, 346, 349, 349, 348, 435, 551, 551, 553,
	553, 553, 553, 553, 553, 553, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 419, 419, 633, 633, 634, 635, 549,
	549, 549, 550, 545, 545, 546, 546, 546, 546, 546,
	331, 331, 332, 332, 332, 332, 547, 548, 363, 363,
	474, 552, 552, 554, 554, 556, 636, 636, 636, 636,
	636, 636, 637, 637, 637, 434, 434, 433, 433, 354,
	354, 557, 557, 557, 557, 558, 558, 558, 558, 558,
	561, 560, 559, 559, 559, 559, 559, 87, 87, 87,
	398, 398, 397, 397, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 197,
	197, 275, 275, 81, 81, 81, 12, 12, 12, 12,
	12, 12, 12, 290, 290, 13, 13, 13, 607, 607,
	607, 86, 86, 86, 86, 86, 86, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 597, 597, 596,
	596, 276, 276, 639, 639, 92, 92, 92, 92, 92,
	92, 92, 92, 492, 492, 493, 493, 80, 80, 80,
	80, 80, 420, 420, 417, 417, 416, 416, 362, 362,
	472, 472, 472, 473, 280, 280, 281, 281, 241, 241,
	241, 33, 32, 23, 23, 28, 28, 29, 29, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 30, 30,
	51, 51, 51, 51, 52, 52, 52, 52, 55, 55,
	56, 56, 50, 50, 50, 50, 53, 53, 46, 46,
	57, 57, 57, 57, 57, 614, 616, 616, 615, 615,
	619, 619, 619, 619, 619, 619, 617, 617, 618, 618,
	622, 622, 623, 623, 124, 124, 129, 129, 129, 129,
	129, 130, 130, 130, 130, 132, 132, 132, 132, 141,
	141, 196, 196, 196, 196, 196, 196, 196, 59, 59,
	59, 59, 72, 72, 72, 72, 139, 641, 641, 641,
	140, 140, 140, 640, 640, 273, 273, 430, 430, 431,
	431, 642, 642, 432, 432, 432, 432, 432, 266, 265,
	267, 267, 268, 268, 78, 78, 78, 256, 256, 255,
	257, 257, 258, 258, 253, 253, 534, 534, 260, 260,
	260, 261, 261, 249, 249, 250, 250, 251, 251, 252,
	252, 264, 264, 643, 643, 115, 115, 115, 199, 199,
	319, 319, 319, 427, 427, 427, 355, 355, 287, 287,
	429, 429, 429, 429, 394, 394, 394, 198, 198, 370,
	370, 384, 384, 385, 385, 486, 486, 386, 122, 122,
	123, 123, 138, 138, 226, 226, 224, 224, 224, 224,
	224, 224, 224, 224, 231, 231, 232, 232, 233, 233,
	234, 235, 235, 235, 235, 374, 374, 236, 236, 236,
	225, 225, 225, 227, 227, 227, 227, 227, 227, 227,
	230, 230, 230, 230, 237, 237, 237, 229, 229, 568,
	568, 568, 570, 570, 572, 572, 571, 571, 567, 567,
	569, 569, 638, 638, 400, 400, 400, 352, 353, 350,
	350, 351, 351, 360, 360, 358, 359, 359, 361, 361,
	471, 471, 471, 242, 242, 242, 391, 391, 391, 391,
	392, 392, 423, 423, 421, 421, 421, 421, 422, 422,
	424, 424, 424, 425, 425, 426, 426, 388, 388, 389,
	389, 390, 390, 390, 390, 452, 452, 228, 228, 228,
	367, 367, 367, 368, 368, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 443, 443, 441, 441,
	441, 441, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 476, 477, 477, 369, 369, 478, 428, 428, 586,
	586, 586, 587, 587, 469, 469, 479, 479, 479, 479,
	479, 479, 467, 467, 468, 468, 487, 488, 488, 404,
	404, 404, 404, 402, 402, 405, 405, 405, 405, 405,
	403, 403, 480, 480, 480, 480, 393, 393, 481, 481,
	481, 481, 482, 483, 483, 484, 484, 437, 438, 438,
	494, 494, 494, 494, 496, 366, 366, 366, 366, 366,
	544, 543, 543, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 511, 511, 511, 511, 511, 511,
	511, 497, 497, 497, 497, 497, 501, 501, 501, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	502, 502, 507, 507, 508, 508, 508, 503, 504, 509,
	509, 509, 509, 644, 644, 513, 513, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 499, 499, 499, 506,
	506, 506, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 412, 412, 414, 414, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	446, 446, 446, 446, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 562,
	562, 562, 562, 562, 562, 562, 562, 448, 448, 565,
	565, 566, 566, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 573, 573, 574, 574, 576, 576,
	577, 577, 578, 579, 579, 579, 580, 581, 581, 575,
	575, 582, 582, 582, 582, 583, 583, 584, 584, 584,
	584, 584, 585, 585, 585, 585, 585, 458, 458, 459,
	459, 465, 465, 465, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 326,
	326, 325, 277, 277, 277, 277, 277, 277, 379, 379,
	377, 377, 377, 380, 380, 378, 378, 376, 376, 375,
	375, 455, 455, 453, 453, 457, 457, 406, 406, 512,
	512, 512, 512, 512, 512, 512, 512, 407, 407, 407,
	415, 408, 408, 409, 409, 409, 409, 409, 449, 450,
	410, 410, 410, 451, 451, 460, 464, 464, 463, 462,
	462, 461, 461, 439, 439, 440, 440, 387, 387, 645,
	645, 383, 383, 485, 485, 485, 485, 323, 323, 371,
	371, 322, 322, 314, 314, 315, 315, 315, 315, 364,
	364, 466, 466, 514, 514, 515, 515, 516, 516, 517,
	517, 518, 519, 520, 454, 454, 298, 297, 284, 285,
	296, 295, 294, 283, 286, 291, 292, 293, 288, 289,
	305, 304, 303, 254, 259, 310, 311, 311, 313, 313,
	312, 312, 300, 301, 302, 490, 282, 316, 316, 317,
	317, 317, 318, 318, 318, 318, 278, 278, 279, 279,
	306, 306, 307, 308, 308, 299, 299, 299, 269, 269,
	269, 270, 270, 271, 271, 528, 528, 525, 525, 525,
	526, 526, 526, 527, 527, 527, 527, 524, 524, 524,
	524, 524, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 536, 536, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 538, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 541, 541,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 1, 0, 6, 6, 6,
	6, 6, 6, 4, 8, 7, 10, 9, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 9, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 1, 2,
	1, 4, 0, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 1, 3, 3, 3, 6,
	4, 9, 7, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	4, 3, 6, 6, 6, 6, 6, 8, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	9, 10, 5, 2, 6, 4, 7, 7, 7, 10,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 3, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 6, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 16, 19, 15,
	18, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 2, 2, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 13, 16, 3, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 603, -108, -105, -73, -71, -112, -113,
	-94, -114, -107, -136, -141, -122, -123, -124, -137, -143,
	-196, -201, -202, -203, -3, -58, -60, -74, -93, -95,
	-106, -116, -115, -117, -125, -133, -128, -111, -65, -138,
	-142, -153, -197, -198, -199, 32, 31, 100, 80, 155,
	129, 138, 205, 387, 433, 445, 402, 143, 424, 407,
	-147, -148, 463, -59, -72, -140, -139, 73, 130, 417,
	-4, -12, -16, 29, 46, -61, -62, -63, -64, 62,
	-81, -77, -88, -82, -75, -76, -79, -626, 102, -569,
	-96, -99, -132, -630, 163, 223, -118, -119, -120, 369,
	-126, -127, 426, -129, -130, -131, 429, 164, -67, -66,
	157, -224, -226, -145, -144, -146, -200, -154, -155, -156,
	-157, -158, -159, -160, -162, -188, -163, -164, -165, -166,
	-167, -168, -172, -191, -169, -170, -171, -174, -173, -175,
	-180, -176, -177, -178, -179, -181, -182, -184, -185, -186,
	-187, -189, -190, 468, -183, -192, -161, 528, 49, 483,
	82, 147, 437, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -57, -78, -80, -83, -84, -85, -92,
	-86, -87, -568, -97, -98, -101, -103, -104, -100, -102,
	425, -227, -225, 600, 543, -20, -25, -26, -21, -22,
	-24, -27, -23, -28, -29, -30, -42, -47, -48, -44,
	-45, -43, -46, -49, -50, -51, -52, -53, -54, -55,
	-56, -32, -38, -39, -33, -34, -35, -36, -37, -40,
	-41, -17, -18, -19, -31, 564, 573, -230, -228, -229,
	-237, 455, 551, 503, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, -321, 2, -300, -306,
	-307, -308, -299, -269, -538, -541, 4, -535, -539, 170,
	232, 333, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 49, 53,
	55, 59, 60, 61, 62, 63, 64, 68, 73, 74,
	79, 80, 81, 82, 83, 84, 85, 91, 88, 89,
	90, 92, 94, 96, 97, 98, 99, 100, 101, 103,
	104, 105, 107, 108, 109, 117, 118, 119, 120, 121,
	123, 129, 124, 130, 133, 128, 132, 134, 136, 137,
	138, 141, 142, 143, 145, 146, 148, 149, 150, 152,
	153, 155, 156, 157, 160, 158, 161, 159, 162, 163,
	164, 165, 168, 176, 177, 178, 183, 185, 186, 187,
	191, 192, 193, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 206, 210, 212, 213, 214, 215, 216, 222,
	223, 225, 226, 227, 228, 233, 234, 235, 238, 244,
	245, 249, 250, 251, 253, 257, 258, 259, 260, 261,
	262, 264, 266, 265, 268, 271, 272, 275, 276, 277,
	278, 279, 280, 284, 285, 281, 286, 287, 289, 290,
	293, 291, 294, 295, 292, 296, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 309, 297, 312,
	310, 314, 315, 316, 317, 331, 326, 327, 328, 321,
	322, 318, 323, 319, 320, 324, 325, 330, 335, 336,
	339, 220, 341, 342, 345, 363, 349, 350, 351, 354,
	355, 358, 361, 362, 364, 365, 366, 367, 368, 369,
	370, 371, 372, 374, 375, 377, 378, 379, 381, 382,
	383, 385, 387, 388, 390, 391, 393, 394, 395, 396,
	397, 398, 399, 401, 402, 404, 403, 405, 407, 409,
	410, 411, 417, 424, 418, 420, 421, 422, 423, 425,
	426, 427, 428, 429, 431, 432, 433, 435, 436, 437,
	438, 439, 441, 443, 444, 448, 449, 465, 466, 485,
	445, 446, 447, 450, 451, 452, 453, 454, 458, 456,
	457, 459, 460, 461, 463, 464, 467, 468, 470, 471,
	472, 473, 474, 475, 476, 479, 481, 482, 483, 502,
	484, 486, 490, 491, 492, 493, 487, 488, 501, 495,
	496, 498, 499, 504, 505, 506, 507, 508, 509, 510,
	511, 513, 521, 522, 523, 525, 528, 529, 530, 531,
	519, 533, 534, 537, 538, 539, 542, 540, 541, 543,
	545, 548, 549, 550, 556, 555, 557, 559, 560, 565,
	566, 568, 569, 570, 36, 50, 51, 54, 56, 58,
	69, 70, 71, 75, 125, 126, 154, 166, 167, 179,
	194, 195, 207, 209, 217, 218, 219, 239, 240, 242,
	247, 269, 338, 340, 356, 360, 376, 380, 384, 386,
	400, 440, 477, 489, 494, 514, 515, 516, 517, 524,
	526, 551, 552, 553, 558, 567, -321, 2, -300, 347,
	-293, 2, -269, -269, 387, 28, 2, 28, 375, 457,
	506, 508, 2, -595, -365, 2, 28, -272, -269, 102,
	205, 455, -293, 2, -595, -365, 25, 2, -269, 2,
	361, 22, 27, 66, 77, 98, 141, 165, 188, 191,
	-629, 363, 394, 443, 459, 501, 511, 525, 2, 555,
	290, 456, 503, 232, 120, 530, 450, -607, 448, 449,
	361, 392, 435, 208, 544, -273, 2, 445, -269, 290,
	2, 603, 94, 74, 440, 460, -150, 2, 280, 522,
	-151, -152, -149, 514, -523, 450, 435, 312, -269, 603,
	603, 603, 28, -282, -269, 503, 232, 450, 120, 499,
	603, 2, 503, 366, 555, 456, 120, 397, 232, 530,
	191, 141, 27, 450, -607, 578, 579, 290, 127, -593,
	2, -588, 4, -539, -535, -315, -314, 503, 509, 120,
	-308, -299, 593, -307, 603, 603, 603, 603, 2, 250,
	251, 396, 395, 460, 461, 28, 603, 603, 603, 603,
	448, 2, 165, 22, 27, 66, 93, 98, 127, 188,
	191, 352, -627, 363, 394, 459, 501, 505, 511, 525,
	-606, 484, 68, 423, 450, -605, -607, 290, 530, 141,
	-416, 120, 280, 203, 538, 508, 506, 536, 133, 238,
	541, 540, 603, 603, -109, 2, 600, 32, 31, -108,
	-112, 143, 463, -219, 503, 243, 2, -269, 603, 603,
	603, 2, 250, 251, 448, 449, 28, 603, 603, 189,
	-588, 2, 603, 603, 603, 2, 28, 250, 251, 448,
	449, 243, 2, 68, 452, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 2, -194, 460, 484, 214, 47, 46, 74, 28,
	393, 79, 367, 121, 127, 149, 531, 206, 232, 233,
	258, 93, 94, -418, 44, 251, 68, 250, 449, -612,
	448, -470, 504, 451, 457, 498, 262, 445, 522, 102,
	545, 436, 570, 397, 398, 496, 411, 281, 158, 190,
	4, 120, 312, 435, 462, 266, 265, 514, 280, 444,
	370, 84, 603, -638, 2, 503, -640, 2, 522, 522,
	2, -640, 2, -640, 2, -640, 2, -641, 522, 567,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, -225, -227,
	-226, 603, 603, 603, 603, 603, 603, 603, -194, 460,
	2, 74, 28, -358, -360, 535, 241, 151, 353, -224,
	-226, 2, -568, -521, 2, -444, -542, -446, 591, 592,
	584, 500, 67, -325, 332, 571, -458, 127, 536, 347,
	-541, -447, -460, 154, 363, 440, -380, 8, 9, 5,
	6, 7, -278, -448, -454, 527, 169, 337, -318, 604,
	10, 600, -565, -226, -459, 37, 209, 65, -525, -317,
	-279, -497, 242, -316, -299, -562, -563, 4, -535, -536,
	-526, -500, -508, -504, -505, -511, -269, -538, 77, 111,
	112, 110, 115, 114, 283, 282, 116, 113, 462, 544,
	66, 36, 217, 218, 247, 338, 219, 75, -564, 142,
	-537, 239, 240, 477, 51, 400, 179, 126, 125, 340,
	56, 54, 552, -509, 122, 514, 515, 516, 517, 194,
	195, 58, 166, 167, 360, 384, 494, 524, 526, 207,
	269, 43, 106, 190, 237, 221, 246, 248, 252, 270,
	273, 313, 329, 334, 357, 359, 434, 469, -644, 553,
	489, 69, 70, -570, 403, -571, -293, -570, 603, 603,
	605, 603, -350, -352, -353, 2, 28, 139, 600, 2,
	-475, 2, -476, -480, -226, 263, -479, 600, -477, 598,
	-300, 348, -566, 441, -562, -563, -278, -299, -317, 4,
	-535, -537, 602, -354, 600, 120, 450, 503, 78, 232,
	93, 165, -411, 600, -269, 28, 347, 518, 605, -351,
	391, -456, 600, 347, 189, 350, 60, 294, 2, 2,
	2, 2, 2, 217, -269, 503, 119, 2, 261, 2,
	2, 2, 2, 2, 2, 2, -373, 217, 2, -300,
	555, -373, 217, 2, -373, 217, 2, -417, 2, 87,
	-283, 217, 2, -269, -309, 217, 2, -304, -306, -313,
	217, 2, -311, -269, -530, 217, 2, -529, 4, -535,
	116, 462, -444, 2, -138, 2, 60, -269, 555, 2,
	465, 2, 600, -150, 2, 71, 522, 43, 460, -151,
	2, -431, 2, -432, -265, -266, -267, -487, -268, 249,
	390, 399, 574, 131, 332, 570, -621, 189, 583, 518,
	-521, -521, -521, -381, 602, 2, 2, 2, 2, 2,
	2, -480, 217, -300, 2, -297, -524, 4, -535, -539,
	-536, -540, -538, 28, 31, 32, 33, 35, 37, 38,
	39, 40, 57, 65, 66, 72, 76, 78, 87, 93,
	102, 110, 111, 113, 112, 114, 115, 116, 127, 131,
	135, 139, 140, 144, 147, 151, 169, 171, 184, 188,
	189, 205, 208, 211, 224, 236, 241, 243, 263, 267,
	274, 282, 283, 332, 337, 343, 347, 348, 352, 353,
	373, 389, 406, 430, 455, 462, 480, 497, 503, 512,
	518, 520, 527, 535, 536, 544, 546, 554, 561, 562,
	563, 564, -541, 77, 2, -480, 217, 2, -303, 217,
	-480, -306, 2, -283, 2, -296, -602, -520, -524, 510,
	161, 418, 8, 2, -322, 217, -300, -302, -306, -304,
	2, 2, 2, 2, -311, 2, -529, 217, 2, 28,
	28, 555, 391, 243, 518, 605, -371, -314, -315, -520,
	-364, -269, 602, -444, 2, -138, -121, 2, 184, -444,
	217, 2, -138, 217, 2, -444, 217, 2, -138, 217,
	2, -269, 2, -608, 2, -532, 217, -528, 10, -527,
	5, 4, -535, -539, -536, 217, -269, 2, 294, 2,
	2, 525, 2, 98, 503, 119, 2, 422, -628, 443,
	529, 2, 2, 2, 2, 2, 2, 2, 503, -288,
	2, -269, 184, 487, -311, 217, -312, 2, 456, -639,
	403, -529, 217, 2, 555, -304, 217, 2, -304, 232,
	245, -283, 217, 2, 508, 506, 508, 506, 189, 2,
	243, 2, 243, 2, -481, 2, -482, -476, -483, 598,
	348, -491, 2, -490, -527, 551, -109, 600, -109, 600,
	460, 600, -532, -300, -300, -444, 2, -138, -121, 2,
	-444, 2, -138, 2, -269, 2, -135, -532, -134, 600,
	189, -269, 2, -444, 2, -138, -121, 2, -444, 2,
	-138, 2, -219, 184, 2, 120, 503, -194, 2, 184,
	546, 2, 8, 2, 224, -532, 451, 398, 176, 2,
	465, 2, 466, 74, -418, 570, 74, 189, 2, 189,
	2, -401, 2, 564, 391, 189, 2, 2, -592, 2,
	347, 189, 2, 189, 2, 189, 2, 189, 2, 189,
	2, -193, 461, 523, 502, 395, 251, 2, -138, 561,
	-121, 251, 250, -444, 561, 2, -613, 184, 449, -444,
	2, 521, 260, 159, 189, -401, 2, 189, 2, 189,
	2, 5, 2, 396, 485, 2, 249, 390, 485, 2,
	-300, 503, 555, 456, 120, 28, 2, 448, 2, 2,
	88, 89, 189, 2, 189, 2, 204, 189, 2, 189,
	503, -382, 602, 570, 2, -393, -480, -430, -431, -430,
	518, -358, -360, -194, 465, 2, -231, -391, -233, 184,
	-421, -422, -234, 274, 171, 343, -235, -400, 28, 139,
	-400, -400, 60, 601, 601, 11, 12, 76, 41, 591,
	592, 593, 594, 182, 595, 596, 589, 590, 588, 581,
	582, 586, 255, 256, 95, 585, 583, 86, 288, 442,
	172, 173, 174, 175, 419, 230, 34, 231, 14, 15,
	16, -325, 33, 352, 273, 571, 221, 469, 584, 17,
	18, 19, 246, 248, 334, 50, 224, -277, 363, -324,
	500, 67, -444, -444, -444, -444, -444, -444, -444, -444,
	359, 600, -387, -439, 598, -226, 600, 600, 600, 600,
	-520, -226, -444, -458, 601, -378, 600, -226, -458, -453,
	600, 440, 598, 600, -461, -444, 5, 5, 5, 600,
	602, -573, 565, 184, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	386, -502, 600, -501, 600, -501, -501, 556, -499, 600,
	573, 566, 600, -499, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 556, 605, -570,
	-354, 600, -383, -485, -444, 593, -383, -383, 347, -375,
	-444, 106, -404, 252, 313, 190, 270, 434, 237, -441,
	604, -441, -469, 573, -226, -477, -299, -226, -479, 600,
	-475, -469, -110, -520, -93, -106, -115, -138, -153, -198,
	-199, 593, -300, 600, 189, 600, 602, -524, 189, -364,
	-283, -310, -269, -300, -316, -317, -322, -294, -269, 2,
	138, -375, -588, 530, 450, 28, 456, -530, -272, 38,
	-455, -494, -495, -544, 604, -543, -497, -507, -503, -506,
	376, 380, -526, 54, 552, -509, 242, 4, -535, -537,
	239, 240, 477, 51, 400, 179, 126, 125, 340, 56,
	514, 515, 516, 517, 194, 195, 58, 553, 489, 69,
	70, -588, 530, 450, 28, 456, -530, 184, -530, 2,
	2, 154, 2, 2, 2, -269, -247, 605, 64, 427,
	154, -373, 217, -247, 154, -247, 154, -323, 217, -322,
	-247, 154, -247, 605, 154, -247, 605, 154, 602, 605,
	154, -530, 2, -417, -523, -375, 38, -431, 2, 127,
	4, 5, -642, 605, 272, -328, 287, 331, 213, 348,
	568, 341, 131, -531, 5, 4, -454, -466, 127, 280,
	242, -514, -516, 8, -515, 9, -517, 591, 592, -522,
	-521, 109, 602, -524, -244, 420, 463, 362, -243, 24,
	29, 143, 234, 317, 549, 160, -340, 235, -337, 366,
	154, 481, 539, -602, -603, 447, 510, 161, 418, 90,
	341, 463, 362, 420, 154, -397, -399, 38, 118, 317,
	361, 61, 227, 292, 293, 483, 558, 154, 463, 362,
	420, 362, -13, -258, 24, 143, -260, -255, 463, -603,
	99, 420, 577, 425, 372, 495, 389, -603, 268, -620,
	330, 560, -602, -246, 481, 539, -602, -603, 447, 420,
	-245, -342, -337, 366, 154, 604, 24, 143, 420, 463,
	362, -624, -625, 29, 420, 362, -596, -290, -567, 224,
	564, 154, -290, -290, -480, 217, -617, 184, 2, -610,
	-134, 264, 5, 10, -532, -134, -371, 605, 605, -524,
	593, 449, 448, 154, 154, 154, 154, 251, 184, 332,
	332, 2, 2, 2, 2, 2, 191, -605, -629, 2,
	2, -300, 217, -356, 347, -591, -372, 503, -300, 184,
	332, 43, -303, 217, 2, -306, 555, -596, 332, -305,
	217, -300, 38, 600, 332, 2, -417, 2, 232, -567,
	332, -481, -319, -300, -476, -319, 463, -293, 38, -441,
	-300, 601, 605, -491, -491, -532, -207, 564, 189, 600,
	-219, 564, 564, 251, -488, 605, -487, 224, -533, -532,
	-135, -532, 423, 251, -532, -591, -283, 2, -300, 2,
	503, 253, -532, -207, 224, -532, -532, -532, -523, 28,
	466, 2, -193, 461, 523, 89, 466, 2, -300, 503,
	120, 232, 80, -617, 184, 2, -269, -594, 184, -589,
	435, 450, 530, -588, -300, 120, -300, 120, -300, 120,
	-300, -300, 2, 2, 2, 2, 2, 85, 2, -138,
	-444, 2, 85, 2, 46, 482, -613, 184, 2, 521,
	2, 521, 2, -269, -269, -269, 484, 272, -300, -300,
	-300, -301, -306, 451, 504, 531, 449, -444, 2, -631,
	2, 189, 184, 2, 503, 232, 503, 232, 120, 189,
	74, 120, 28, 503, 446, 602, 4, -247, 605, -273,
	-231, -391, -523, -392, -391, -232, -231, -234, 184, 399,
	540, 317, 467, 257, -422, -421, 28, -444, -426, 178,
	316, -444, -424, -446, 591, 592, -515, -517, -374, 341,
	-225, -225, -225, -361, -471, -444, 389, 232, -496, -494,
	-494, -298, -524, 514, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	273, 221, 469, 50, 224, -444, 518, -444, -444, -444,
	-444, 310, 332, 337, 527, 169, 537, 139, 341, -645,
	497, 40, -451, -226, -379, 600, -465, 35, 480, 28,
	-458, 600, 2, -439, -444, -440, -326, -324, -269, 591,
	592, 593, 594, 595, 596, 581, 582, 583, 14, 15,
	16, 586, 590, 588, 589, 182, 95, 585, 288, 442,
	86, 172, 173, 174, 175, 255, 256, 17, 18, 19,
	34, 584, -376, -375, -375, 601, 554, 28, 139, 593,
	2, 601, 605, 38, 601, -444, -376, -457, -453, -375,
	-464, -463, 561, -412, -413, 569, 297, 123, 215, 295,
	-414, 454, -518, 8, -524, 593, -574, 177, 208, 600,
	601, 2, 601, 2, 601, -444, 2, 601, -444, 2,
	601, -444, 2, 601, -444, 2, 601, 2, 601, 2,
	-444, -444, -444, -444, -444, -444, -444, -375, 8, -518,
	-518, 514, 514, -518, -518, -518, -510, 376, 377, 378,
	379, 275, 276, 277, 278, 380, 381, 382, 383, 302,
	303, 304, 305, 298, 299, 300, 301, 306, 307, 308,
	309, 199, 200, 201, 202, 195, 196, 197, 198, -510,
	-406, 2, -512, -375, 4, 569, 297, 123, 215, 295,
	454, 5, -406, 2, -407, 2, -444, -375, -408, -445,
	-446, 591, 592, 584, -325, -458, -409, 2, -444, -376,
	-444, 57, 267, 520, -410, -444, 189, -375, -375, 2,
	-375, 2, -571, 38, -375, -367, 605, 189, 38, 4,
	-367, -367, 600, 601, 605, -405, 212, 291, 286, 245,
	-405, -475, -404, 252, -402, 357, -402, -402, -469, -284,
	598, 606, -524, -469, -468, -467, 38, -293, 354, -469,
	-469, 602, 601, -468, 599, -586, 600, 603, 603, 603,
	603, 603, -300, 600, -375, -524, 602, 486, 2, 601,
	246, 246, 246, 246, 246, 347, 441, 601, 518, -590,
	-309, -313, 504, 2, 564, -108, 349, 601, 605, -366,
	37, 598, 602, -518, 2, 2, -513, 556, 600, 600,
	-413, 600, 189, -590, -313, 504, 2, -365, 518, -269,
	2, -300, -373, -247, 154, -373, -373, -247, 605, 154,
	-283, -304, -309, -311, -313, -269, -529, -530, -247, -305,
	-621, 601, 522, -432, -327, 399, 479, 421, 458, 499,
	8, 9, 8, 9, 605, -524, 605, -622, 93, 518,
	78, 450, -262, 281, 518, -435, 217, 78, -545, 93,
	-286, -546, -269, 72, 536, 389, 188, 152, -622, 93,
	389, -622, 93, 2, 234, 93, 463, 484, 28, 60,
	-480, 41, 41, 28, -620, 330, 268, 189, 570, 503,
	232, 450, 518, 518, -480, -399, -494, 118, 292, 293,
	60, -519, -514, 591, 592, -519, 60, -519, -519, -519,
	564, -303, -480, 450, 518, 518, 518, 409, 409, -255,
	-151, 518, 518, 28, -194, 428, 127, -643, 583, 409,
	518, 189, 189, 268, -620, 330, 605, 41, 41, 28,
	-620, 330, 268, 189, 518, -322, -284, 550, 42, 550,
	42, 550, 518, 42, 450, 518, 605, 42, 518, 518,
	-13, 463, -597, -274, 105, 323, 285, 324, 97, 320,
	96, 319, 103, 321, 104, 322, 557, 335, 63, 318,
	296, 325, -275, -276, 368, 548, 120, -529, -13, -13,
	463, 362, 420, 154, -618, 224, 28, -607, 224, -488,
	224, -488, -314, -269, 602, -138, -444, -444, -138, -444,
	-138, 46, 154, 154, 2, -639, 261, 600, -331, 332,
	189, -364, -489, 243, 605, -372, -588, 154, -529, -398,
	-397, 332, -305, 217, 2, 154, -354, 332, 148, 600,
	397, 2, 154, -285, 217, -270, -269, -417, -249, 507,
	154, -395, 546, -427, -138, 600, 127, 38, -427, -384,
	-385, -486, -386, -286, 600, -293, -441, -109, -490, 601,
	601, 601, -206, 351, -205, -269, 5, -219, -355, -287,
	-286, 119, 401, 401, -213, 564, -134, -135, 601, 605,
	-488, 224, 487, -207, -207, -488, -488, -300, 184, -532,
	-207, -207, -207, 2, 2, 2, 2, -401, -300, -283,
	-322, -300, 28, 602, -530, -530, -313, -309, -401, -283,
	-401, -283, -401, -283, -401, -401, -138, -444, 484, 2,
	460, 184, 184, 602, -401, -357, 430, 2, 397, 120,
	503, 366, 232, -300, -322, -300, -322, -283, 120, -283,
	121, -300, 4, -480, -392, -232, 348, 257, 467, -424,
	-425, -446, 440, 441, -425, 440, 441, 8, 9, 8,
	9, -236, 471, 336, -373, 605, -241, 39, 135, 257,
	-300, 570, 150, -444, -444, 518, -645, 497, -451, 150,
	-444, 310, 337, 527, 169, 537, 139, 341, 189, 600,
	-445, -445, 601, -377, -444, -444, 599, 608, 601, 602,
	601, -360, 605, -358, -444, -375, -375, 601, 602, -375,
	-364, 599, 599, 605, 601, -462, -463, 144, -444, 518,
	518, 518, 518, 600, 601, 602, -579, 358, 600, 600,
	-444, 601, 601, 601, 601, 38, 605, 605, 605, 601,
	605, 605, 605, 601, 601, 601, 605, 601, 570, 570,
	601, 601, 601, 601, 605, 601, 605, 601, 189, 601,
	601, -415, 373, 601, 11, 12, 591, 592, 593, 594,
	182, 595, 596, 589, 590, 588, 581, 582, 583, 86,
	288, 442, 14, 15, 16, -325, 246, 224, -445, -445,
	-445, -445, 601, -449, -450, 189, 184, 38, -410, -410,
	-410, 601, 189, -375, 601, 601, 600, -572, 290, 332,
	601, -438, -437, 562, -485, -368, 2, -475, -295, -524,
	-438, -438, -375, -444, 252, 252, -403, 546, 347, -405,
	-475, -468, -520, -443, -442, 186, 39, 135, 326, 327,
	328, 220, 187, -468, -293, -354, -468, -468, -524, -469,
	-469, -467, 601, -587, -520, 601, -369, -478, -566, -360,
	602, -524, -216, -567, -195, 5, 337, -195, -195, -195,
	-195, -300, -530, 518, 518, 224, 25, 374, -494, 598,
	599, 8, -524, 600, -518, -518, -518, -530, 189, 189,
	224, 189, -529, 2, -247, -373, -247, -247, -322, -323,
	-247, -247, -247, -396, 564, -521, -431, 534, 83, 399,
	514, -521, -243, 420, -286, -286, -300, -310, 203, 410,
	-529, 332, -435, 217, -248, 332, 217, -294, -494, 600,
	-419, 566, 257, 257, 546, -286, -294, 257, 217, -286,
	217, -294, 2, -294, -598, 399, 342, -444, 60, -338,
	279, 397, 333, -244, 420, 463, 362, -138, -138, -138,
	-138, -138, 600, -621, 546, 138, -300, -322, -300, -310,
	-529, -305, 463, 362, 420, 329, -316, -519, -519, -397,
	463, 362, 420, -310, -529, -303, -529, -254, 217, -269,
	-254, 217, 450, -283, 409, 570, 45, -643, -520, -520,
	-520, 518, 189, 189, -245, -138, -138, -138, -138, -138,
	600, -284, -246, 420, 5, 217, -286, 5, -286, 217,
	5, -269, -286, -310, -529, -625, 24, 143, -286, -310,
	-529, -274, -532, 337, 542, -283, -596, -290, 450, 518,
	518, -480, -614, -615, 205, 433, 450, 436, -530, -134,
	-210, 564, -134, -204, 228, 593, -593, -532, -269, 555,
	-269, -329, -332, -330, -286, -436, -435, -549, -550, -545,
	273, 232, 536, 245, 170, 93, -222, -223, 566, 564,
	154, -320, -300, 598, -207, -532, -300, -489, -311, -312,
	154, -354, 332, -529, 38, 154, 600, 2, 2, -304,
	347, 332, -285, 217, -250, 145, -643, -283, -438, -368,
	-394, -429, 430, 347, -355, 551, -293, -394, -370, 605,
	189, 583, 602, -355, -484, 593, -109, -109, -207, 605,
	600, 583, 583, 600, -532, 601, 605, 602, 600, 583,
	583, -215, 351, -214, 146, 259, 244, 473, 474, 475,
	476, 137, 472, 124, 315, -488, -532, -213, -135, 189,
	189, -68, 564, 503, -207, 604, 436, -269, -401, -401,
	-401, 460, 460, -269, -364, -296, -283, -300, -297, -322,
	184, 184, -283, 540, -425, 348, 284, -471, -242, 572,
	-300, 604, -444, -444, 150, 150, -444, -445, -445, -444,
	150, 189, 600, -444, -455, 33, 33, 601, 605, -440,
	-444, -324, 601, 554, -360, -360, 601, 593, -524, 604,
	601, -453, 147, -444, 512, 297, 215, 295, -414, 295,
	-414, -414, -518, 5, -524, 593, -580, -289, 600, -269,
	562, -359, 353, 601, -496, -494, -444, -444, -444, -444,
	-444, -518, -499, -499, -514, -514, -444, -449, -444, -496,
	-494, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, 139, 332, 341, -445, -450, -449, -444, -444, -494,
	601, 601, 601, -375, -108, 600, 290, -388, 208, -444,
	-488, 605, -388, -388, 601, -475, -475, 600, -444, 252,
	599, 605, 607, 583, 583, -354, 602, -467, -468, 599,
	601, 605, 601, 605, -428, 38, 601, -524, -438, -218,
	-217, 136, 53, 107, 134, 337, 246, -530, -530, 450,
	350, 5, 8, 598, 599, 602, -518, 601, 601, 601,
	-530, -530, 450, -530, -247, -247, 119, 317, -444, 518,
	518, 60, 224, 154, 332, 548, 332, -546, 152, -551,
	-444, 600, 232, 600, 600, 2, -238, -239, -240, 143,
	463, 24, -623, 2, 546, 154, -247, 154, -247, 568,
	-338, 600, 600, 518, 450, -262, 518, 564, -375, -444,
	-208, 127, -523, -603, 604, -603, 604, 450, 518, 518,
	450, 518, 518, 332, 154, 564, 168, 168, 570, -254,
	184, 518, 518, -520, -520, -520, 564, -375, 518, -498,
	48, 26, 332, -304, -247, 154, 518, 518, 530, 463,
	-532, 337, -13, -310, -529, -305, 463, 362, 420, -595,
	-365, -595, 205, -313, -618, -488, -212, 351, -211, 146,
	432, 137, 259, -488, -210, 189, 243, 564, -305, 2,
	601, 601, 605, 605, -552, -248, -300, -285, 232, 232,
	-292, -270, 38, 345, 345, 600, -300, -89, 564, -487,
	-520, -599, 564, 43, -303, 38, 154, -596, -138, -305,
	-492, -493, 5, 38, -300, 154, 347, 332, -251, 266,
	-643, -528, -567, -360, -394, -383, 333, 91, 601, -438,
	-385, -368, -444, 2, 601, -205, -206, -532, -532, -532,
	-207, -219, -287, 2, -533, -532, -532, 605, 600, 583,
	583, 583, 583, 583, -213, -488, -134, -138, 351, -300,
	593, -401, -344, -343, 366, 341, -344, 440, 440, 348,
	178, 262, -241, -284, -444, -444, 150, 33, 33, -444,
	-444, -455, 601, -444, -444, -375, 599, 5, -444, 601,
	601, 8, -444, 601, 602, -581, -269, -444, 601, 60,
	601, 601, 605, 605, 601, 601, 601, 601, 601, 601,
	601, -450, 189, 139, 341, 600, 601, 601, -108, -452,
	211, 60, -475, -452, -452, -403, -364, -475, -442, -284,
	598, -284, 598, -524, -520, -478, 600, 602, -217, 583,
	-532, -532, -195, 564, -313, 599, 2, 598, -524, 601,
	-313, 119, -286, -286, 503, 440, -254, 389, -435, 154,
	154, -553, 93, -555, 76, 170, 102, 332, 337, 536,
	389, 72, 127, 347, 406, -633, -634, -635, 38, 575,
	576, 601, -362, -472, -566, 600, -269, -362, -364, 332,
	492, 127, 347, 332, 127, 347, 559, 119, 2, 530,
	79, -286, -294, -364, -364, -300, -310, -529, 162, 601,
	605, 583, 2, 593, 593, -310, -529, -305, -310, -529,
	-303, 154, -254, 364, 168, -138, -520, -520, 518, 518,
	162, 601, -284, 5, 5, 154, -281, 76, -286, 5,
	-286, -304, 119, 450, 518, 518, 347, 347, 350, -614,
	-615, -210, 605, 600, 583, 583, -210, -533, -134, 2,
	-354, -345, 234, -286, -550, -547, -548, 389, -436, -554,
	-556, 170, 389, -333, 600, -285, -270, 600, -138, 2,
	-221, -220, -269, 5, 600, -331, 351, 599, -601, 351,
	-600, 117, 137, -529, -398, -138, -305, -354, 601, 605,
	148, -420, 546, -284, -300, 154, -252, 265, -643, -528,
	-249, -423, -421, 140, 600, 347, -138, -360, 583, 601,
	601, 119, 601, -214, -215, -532, -134, -532, -532, -532,
	-213, -488, -69, -70, 232, 93, 371, -297, 503, 232,
	600, 600, -241, -444, -444, -444, 601, -360, -524, 593,
	-575, 366, 601, -471, -444, -444, -445, 189, 600, -455,
	601, -576, 563, -444, -389, -390, -444, 438, 108, 209,
	-576, -576, 601, -520, -520, 2, -532, 2, 518, 598,
	2, 189, 224, 38, 409, -435, -294, -294, -298, -291,
	-269, 170, 217, 337, 559, -419, 257, 600, -445, 540,
	-300, 600, 2, 216, 216, 30, 60, -636, 131, 236,
	601, 605, -473, -280, -269, -444, -473, 601, 601, 337,
	540, 337, 559, -444, 540, -494, 600, -247, -247, 601,
	601, -444, 518, -523, 100, -521, 2, -603, -254, -283,
	184, 184, -520, -520, -444, 518, 5, -247, -298, -247,
	-247, -281, 530, -310, -529, -305, -619, 504, 457, 531,
	451, 192, 439, -619, 184, -211, -212, -532, -134, -210,
	38, -339, -340, 2, -552, 257, -291, 257, 226, 153,
	-362, 600, 600, -364, -632, 564, 601, 605, 583, 583,
	-329, -222, -90, -91, 519, -487, 605, 600, 583, -354,
	38, 5, 600, 600, -269, 347, 600, -284, -264, 92,
	-643, -528, -250, -394, 333, -364, 93, -423, -451, -207,
	600, -207, 601, 605, 28, 600, 28, 600, -300, -322,
	-375, -375, 601, -360, 60, 605, 601, 601, -445, -455,
	601, -577, -578, -289, 605, 600, 600, 464, 599, 599,
	-530, 2, -530, -254, 389, -269, -546, -555, -291, 332,
	546, -444, -445, -271, 600, -444, 600, 600, 38, 127,
	236, 132, 222, -434, -637, 101, 493, 225, -472, -241,
	601, -433, 546, 406, -445, -281, -362, 600, 600, 600,
	583, 189, -138, -138, 600, -498, -247, -304, 518, 2,
	2, 189, -595, 601, -609, 404, -138, -222, 600, -334,
	81, 94, 128, 216, 193, 233, 484, 490, 28, -334,
	601, -362, -362, 601, -335, 347, 119, 317, -220, -521,
	-521, 601, 38, -91, 9, -600, -601, -444, 38, -138,
	-492, -362, -300, -362, 347, -256, -255, 274, -528, -251,
	601, -294, -394, -533, -70, -364, -364, 601, 601, -582,
	397, 441, 210, -375, -361, 601, 605, 38, -390, 2,
	2, 2, 409, -248, 154, 212, 601, -557, 289, -269,
	601, -398, -398, 38, 132, 222, -341, -337, 600, -242,
	-473, 212, -300, -604, 546, 601, -347, -346, -343, -349,
	-348, -343, -375, -521, 100, 364, -375, -281, -530, -530,
	347, -611, 190, -610, 5, 10, -335, -363, -474, -286,
	-433, 601, 601, 82, 119, -345, -138, 601, -138, 601,
	601, -420, 601, -300, -253, -534, 409, 411, -643, -252,
	-438, 601, 601, 601, 601, -583, -584, 50, 533, 109,
	-444, -583, -583, -578, -580, 170, 564, -558, -561, -560,
	580, 470, 190, 365, 601, 492, 558, 601, 601, -636,
	-364, 564, -354, -444, -433, 601, 605, 551, 601, 605,
	551, 601, 189, 601, -247, -616, 564, -247, -619, -209,
	564, 46, -263, -262, 601, 605, -434, -433, -341, 388,
	133, 143, -339, -632, -433, 600, -434, 600, -261, -260,
	-643, -514, -264, 140, -207, -585, 152, -584, 385, 183,
	440, 385, 183, -585, -585, -291, 55, -560, 580, -561,
	580, 540, 133, -438, 601, 55, -557, -346, 224, -348,
	189, 364, 205, 189, 448, -610, 30, -474, -341, -434,
	-223, 564, 441, 441, 2, -222, -335, -434, -362, -341,
	-362, -257, -258, -259, -364, -256, 333, 540, 109, 208,
	513, 317, 33, 583, -559, 317, 427, 64, 463, -559,
	583, -558, 600, 600, 350, -530, 351, -223, -341, -438,
	2, -335, -341, 601, -223, 601, -253, 463, 440, 355,
	-584, -444, 23, 337, 127, -444, -636, -375, -375, -247,
	-206, 600, -438, -223, -263, -223, -433, -438, -434, -261,
	-384, 601, 601, -206, -438, -438, -434, -341, -257, -438,
	-336, -337, 518, 601, -341, -223, 600, -223, -438, -375,
	-438, 601, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 565, 566, 568, 569, 570, 572,
	573, 575, 577, 579, 580, 581, 583, 584, 586, 587,
	588, 589, 590, 592, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	661, 663, 0, 1431, 1433, 1435, 1437, 0, 817, 0,
	36, 37, 39, 0, -2, 344, 346, 348, 350, 0,
	381, 383, 384, 386, 388, 389, 390, 392, -2, 0,
	498, 499, 501, 503, -2, 0, 1031, 1033, 1035, 0,
	650, 652, 0, 1038, 1040, 1042, 0, 0, 673, 674,
	0, 1542, -2, 665, 667, 669, 671, 742, 744, 746,
	748, 750, 752, 754, 756, 758, 760, 761, 763, 765,
	767, 769, 771, 772, 774, 776, 778, 779, 781, 782,
	784, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	804, 806, 808, -2, 811, 812, 813, -2, -2, 0,
	-2, -2, -2, 1449, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 442, 444, 446, 448, 450, 453,
	455, 457, 1600, 505, 507, 509, 511, 513, 515, 517,
	0, -2, 1614, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 111, 112, 113, 114,
	115, 116, 117, 118, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 108, 109, 73, 0, 0, 1573, 1575, 1577,
	1579, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 567, 571, 574, 576,
	578, 582, 585, 591, 593, 595, 550, 551, 554, 2312,
	2330, 2331, 2332, 2335, 2336, 2337, 2338, 2339, 2340, 2796,
	2877, 2878, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
	2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 552, 553, 1220, 0,
	619, 617, 2297, 620, 2592, 622, 624, 492, 493, 494,
	495, 496, 497, 0, 643, 633, 1612, 644, 646, 647,
	648, 649, 614, 612, 0, 643, 2366, 641, 1429, 1430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 421, 1278, 1279, 1280, 1414, 1415, 2640, 1456, 0,
	245, 662, -2, -2, 2761, -2, 696, 697, -2, -2,
	711, 715, 706, 2765, 0, 2643, 2627, -2, 718, 1432,
	1434, 1436, 815, 816, 2316, 0, 0, 0, 0, 0,
	38, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 255, -2, -2, -2, -2, 0, 0, 2688, 2418,
	2265, 2332, 2268, 2263, 345, 347, 349, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 382, 385, 387, 391,
	-2, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 1094, 1095, 1336, 0, 0,
	0, -2, 500, 502, 555, 556, 0, 1601, 1601, 563,
	564, -2, 0, 0, 0, 0, 315, 305, 1032, 1034,
	1036, 1037, 0, 0, 0, 0, 0, 651, 653, 0,
	0, 284, 1039, 1041, 1043, 1044, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 666, 668, 670, 672, 743,
	745, 747, 749, 751, 753, 755, 757, 759, 762, 764,
	766, 768, 770, 773, 775, 777, 780, 783, 785, 787,
	789, 791, 793, 795, 797, 799, 801, 803, 805, 807,
	809, 810, 823, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 925, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 1012, 0, 0,
	826, 829, 830, 831, 832, 833, 834, 0, 898, 923,
	924, 934, 814, 0, 1260, 1602, 1458, 1439, 1453, 1458,
	1441, 1442, 1443, 1444, 1445, 1450, 1452, 1446, 1447, 1448,
	42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
	443, 445, 447, 449, 451, 454, 456, 458, -2, 1571,
	1572, 506, 508, 510, 512, 514, 516, 518, 654, 0,
	656, 0, 828, -2, 0, 1606, 1606, 1606, 0, 0,
	1572, 1570, 0, 659, 660, 722, 723, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 2139, 1967, 0, 724,
	-2, 2000, 2002, 2736, 2565, 2761, 2138, 2004, 2005, 2006,
	2007, 2008, 0, 2010, 2011, 2012, 2013, 2014, 2015, 0,
	2017, 0, 2022, 2023, 2024, 0, 2743, 2242, 2326, -2,
	0, 0, 2749, 2322, 0, 2105, 2040, -2, -2, 2349,
	2328, 1811, 1812, 1813, 1814, 1815, -2, -2, 2779, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	0, 2724, 2744, 2745, 2750, 2752, 2746, 2733, 2065, 2432,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1838, 1847, -2, -2, -2, -2, -2,
	-2, -2, 2737, 2738, 2755, 2758, 2764, 2769, 2770, 2742,
	2751, 2778, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 1839, -2,
	-2, -2, -2, 1589, 2606, 1592, 1220, 1590, 1574, 1576,
	0, 1578, 0, 0, 0, 1583, 1609, 1607, 0, 1658,
	1587, 1588, 1681, 1681, 1705, 0, 1686, 0, 1705, 1601,
	1732, 0, 1692, 2632, 2041, 2042, 0, 2332, 2327, -2,
	-2, 2776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 615, 0, 621, 623, 0, 0, 0, 642,
	1611, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 427, 428, 2744, 0, 0, 0, 433, 0, 435,
	436, 437, 438, 439, 440, 441, 215, 2744, 523, 548,
	0, 215, 2744, 526, 215, 2744, 529, 0, 532, 1334,
	215, 2744, 535, 2293, 215, 2744, 538, 540, 2301, 215,
	2744, 544, 2308, 2306, 545, 0, 547, 235, 231, 232,
	233, 234, 1425, 1426, 1427, 1428, 0, 1455, 1335, 664,
	0, 690, 0, 694, 695, 2732, -2, 0, 2652, 699,
	700, -2, 702, 1459, 1463, 1464, 1465, 1466, 1467, 0,
	0, 0, 0, 1472, 0, 0, 0, 0, 691, 692,
	709, 710, 716, 719, 0, 818, 819, 820, 821, 822,
	72, 0, 2744, 1732, 74, 0, 2287, 2357, 2358, 2359,
	2360, 2361, 2777, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2779, 78, 0, 2744, 83, 0, 2744,
	0, -2, 96, 0, 110, 0, 136, 0, 2290, -2,
	-2, -2, 2283, 119, 0, 2744, 0, 2262, -2, 0,
	227, 306, 307, 308, 0, 1069, -2, 0, 1272, 1274,
	1274, 0, -2, 0, 0, 0, 1022, 2259, 2264, 1023,
	1024, 2269, 0, 353, 354, 355, 356, 357, 0, 358,
	2744, 360, 361, 0, 363, 364, 2744, 366, 367, 0,
	369, 0, 371, 0, 266, 270, 2744, 318, 319, 2345,
	2346, 2353, 2354, 2355, 2356, 2744, 395, 397, 0, 399,
	400, 0, 402, 0, 0, 0, 406, -2, 422, 0,
	419, 409, 410, 412, 413, 414, 415, 416, 0, 462,
	460, 2298, 0, 0, -2, 2744, 0, 1066, 0, 0,
	1314, -2, 0, 1265, 0, 1321, 2744, 1317, 0, -2,
	0, 1599, 2744, 1476, 1098, 1099, 1100, 1101, 1744, 489,
	0, 1507, 0, 1509, 0, 1528, 1738, 1681, 0, 0,
	1743, 0, -2, 608, 2315, -2, 558, 0, 559, 0,
	-2, 0, 332, 0, 0, 1047, 1049, 1050, 1052, 1053,
	1056, 1057, 1058, 1059, 0, 1061, 1718, 285, 287, 0,
	0, 0, 1046, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 0, 0, 675, 0, 0, 824, 825, 0,
	0, 841, 842, 843, 0, 332, 2644, 2601, 2453, 850,
	0, 853, 856, -2, 0, 0, 0, 0, 860, 0,
	865, 866, 867, 0, -2, 0, 874, 876, 1030, 878,
	0, 0, 880, 0, 884, 0, 887, 0, 889, 0,
	891, -2, -2, -2, 899, 900, -2, 905, -2, 0,
	909, -2, 0, 912, 0, 915, -2, 0, 925, 921,
	922, 0, 0, 0, 0, 942, 943, 0, 952, 0,
	955, 956, 957, 0, 961, 962, 0, 964, 965, 966,
	967, 0, 2715, 2649, 2418, 0, 975, -2, 981, 983,
	0, -2, 0, 999, 0, 1003, 0, 0, 1011, 0,
	0, 827, 0, 835, 836, 215, 1736, 1438, -2, 1440,
	0, -2, 0, 655, 0, 658, 1631, 1557, 1554, 0,
	1628, 1629, 1558, 0, 0, 0, 1565, 0, 1604, 1605,
	0, 0, 0, 1544, 1545, 0, 0, 0, 0, 2144,
	2145, 2146, 2147, 2160, 2148, 2149, 2159, 2157, 2158, 2150,
	2151, 2156, 2170, 2171, 2161, 2162, 2152, 2165, 2163, 2164,
	2166, 2167, 2168, 2169, 0, 0, 2175, 0, 2153, 2154,
	2155, 2183, 0, 0, 2184, 0, 2186, 0, 2176, 2172,
	2173, 2174, 0, 1946, 1948, 2250, 0, 0, 0, 2182,
	2177, 2178, 1884, 1885, 1886, 1887, 1888, 1921, 1925, 1926,
	0, 0, 2001, 2247, 2246, 2003, 0, 0, 2198, 0,
	2016, -2, 0, 2139, 2193, 0, 0, 2025, 2026, 2027,
	0, 0, 2198, 0, 0, 2241, 2037, 2038, 1876, 0,
	0, 2107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 1824, 0, 1826, 0, 1827, 1828, 1835, 1848, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 2222, -2, 0, 0, 0, 0, 1840, 0, 1591,
	0, 0, 1662, 2251, 2255, 2256, 1662, 1662, 0, 0,
	2199, 1729, 1729, 0, 0, 1724, 1724, 1724, 1722, 1705,
	0, 1705, 1715, 0, 1705, 1705, 0, -2, 1686, 0,
	0, 1715, 0, 1699, 596, 598, 600, 602, 603, 604,
	606, 1733, 1734, 0, 0, 0, 0, 2333, 0, 0,
	0, 0, 2305, 0, 0, 2318, 0, 0, 2292, 378,
	0, 0, 0, 2698, 2643, 0, -2, 626, 645, 1601,
	0, 2201, 1759, 1763, 0, 1765, 1766, 1767, 1768, 1769,
	0, 0, 1760, -2, 1836, 1838, 1859, 2350, 2351, 2352,
	1819, 1820, 1821, 1822, 1823, 1831, 1818, 1818, 1818, 1829,
	1858, 1850, 1858, 1854, 1804, 1805, 1806, 1841, 1842, 1843,
	1844, 0, 2698, 2643, 0, -2, 635, 0, 0, 1539,
	423, 0, 430, 431, 432, 0, 519, 0, 213, 214,
	0, 215, 2744, 524, 0, 527, 0, 215, 2744, 2257,
	533, 0, 536, 0, 0, 542, 0, 0, 0, 0,
	0, 215, 1541, 0, 0, 0, 0, -2, 704, 712,
	713, 714, 0, 1461, 0, 1468, 733, 734, 735, 1470,
	1471, 0, 1473, 707, 736, 737, 738, 739, 740, 741,
	0, 2271, 2272, 2273, 2274, 2277, 2278, 0, 0, 705,
	726, 708, 0, 720, 120, 1411, 0, 0, 170, 0,
	1411, 1411, 0, 0, 0, 0, 198, 0, 1132, 0,
	0, 0, 0, 136, 155, 166, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 84, 1242, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 98, 99, 0, 0, 104, 105, 0, 154,
	0, 0, 0, 0, 0, 1504, 0, 143, 0, 0,
	0, 135, 136, 122, 0, 0, 136, 156, 168, 0,
	202, 204, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 237, 0, 0, 0, 1266, 0, 0, 0,
	1598, 0, 0, 0, 0, 2744, 1409, 0, 1394, 0,
	1718, 2501, -2, -2, 285, 1718, 1021, 0, 0, 2333,
	2267, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 398, 401, 403, 404, 405, 0, 1313, 0, 411,
	452, 1191, 2744, 0, 0, 479, 474, 0, 476, 0,
	0, 0, 1241, 2744, 1239, 2302, 0, 1263, 0, 1220,
	2744, 2300, 0, 0, 0, 1322, 2342, 1331, 1335, 1494,
	0, 491, 0, 1510, 1512, 0, 0, 1739, 0, 1741,
	1681, 1601, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 0, 1060, 291, 0, 1717, 0, 0, 320,
	1718, 285, 2618, 1045, 332, 332, 1718, 677, 1718, 679,
	0, 0, 844, 845, 0, 332, 332, 332, 851, 852,
	854, 855, -2, -2, -2, -2, 857, 858, 949, 0,
	0, 0, 948, 868, 0, 870, 873, 877, 0, 1015,
	2627, 2643, 2698, 1028, 949, 2418, 949, 2418, 949, 2418,
	949, 949, 893, 937, 945, 904, 911, 0, 906, 910,
	913, 916, 0, 918, 926, 0, -2, 0, 929, 0,
	931, 0, 933, 949, 950, 953, 960, 963, 968, 969,
	970, 971, 2313, 972, 973, 974, -2, 978, 979, 0,
	990, 995, 996, 992, 0, 0, 0, 0, 0, 0,
	1006, 1007, 0, 0, 1014, 0, 837, 1259, 0, 1451,
	1631, 1557, 657, 1548, 1630, 1549, 1556, 1559, 0, 0,
	1561, 0, 1563, 0, 1626, 1627, 1634, 1635, 0, 1645,
	1646, 1638, 0, -2, 0, 0, 1641, 1642, 1567, 0,
	1584, 1585, 1586, 1615, 1618, 1350, 0, 2877, 1880, 1754,
	1881, 1882, 2286, 0, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, -2, -2, -2, -2, -2, -2,
	-2, -2, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, -2, -2, -2, 1922, 1923, 1924, -2,
	2185, 2187, 0, 2250, 0, -2, 0, -2, -2, -2,
	-2, 1943, 0, 1945, 1950, 1952, 1954, 0, 0, 0,
	0, 2249, 1964, 2233, 2234, 0, 0, 2141, 2142, 2143,
	1949, 0, 1968, 2248, 2245, 0, 0, 2179, 0, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 0, 2197, 1614, 2029, 0, 0, 0, 0,
	2036, 2021, 2195, 0, 2194, 0, 0, 0, 2205, 0,
	2240, 2236, 0, 2284, 1875, 1862, 1863, 1864, 1865, 1866,
	1867, 1877, 0, 2281, 2319, 2325, 2115, 0, 0, 0,
	2066, 2067, 2068, 2069, 2070, 0, 2072, 2073, 0, 2075,
	2076, 0, 2078, 2079, 0, 2081, 2082, 2083, 2084, 2085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 0,
	0, 2087, 0, 2208, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 2089, 0, 2091, 2199, 2219, 0, 0,
	1969, 0, 0, 0, 0, 2139, 0, 2094, 2199, 2227,
	0, 0, 0, 0, 0, 2199, 0, 2232, 0, 2101,
	0, 2103, 1593, 0, 0, 1749, 0, 0, 0, 2254,
	1749, 1749, 0, 1657, 0, 0, 1725, 1726, 1727, 1728,
	0, 0, 1729, 0, 1719, 1723, 1720, 1721, 1715, 1678,
	0, 0, 2288, 1715, 1684, 1714, 0, 1220, 1704, 1715,
	1715, 0, -2, 1688, 1705, 0, 0, 597, 599, 601,
	605, 607, 0, 0, 1614, -2, 0, -2, 334, 1219,
	0, 0, 0, 0, 0, 0, 616, 618, 0, 0,
	539, 0, 0, 632, 0, 610, 0, 613, 0, 1750,
	1753, 0, 0, 1764, 1770, 1771, 0, -2, 0, 0,
	1860, 0, 0, 0, 0, 0, 640, 0, 0, 0,
	434, 549, 215, 521, 0, 215, 215, 530, 0, 0,
	215, 541, 215, 2309, 215, 2307, 236, 546, 1540, 248,
	0, 693, 0, 1460, 1469, 0, 730, 0, 732, 0,
	2275, 2279, 2276, 2280, 0, 721, 0, 0, 0, 0,
	1410, 0, 1357, 0, 0, 174, 2744, 0, 217, 0,
	0, 1184, 2294, 0, 1174, 0, 0, 2439, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1243, 1244, 1246, 1253, 1255,
	0, 1249, 2282, 0, 0, 1250, 0, 1252, 1254, 1256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	1275, 0, 0, 1276, 1277, 1482, 1483, 0, 1503, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 2261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1268, 0, 1309, 1307, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 0, 0, 0, -2, 1270, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 323, 2260, 2270, 0, 1054, 1055, 359, 362, 365,
	368, 254, 0, 0, 407, 0, 0, 1104, 1079, 0,
	0, 461, 332, 0, 0, 475, 479, 2311, 1064, 1237,
	1240, 0, 1220, 2744, 1286, 0, 0, 0, 0, 0,
	0, 1320, 0, 0, 2744, 2289, 2341, 2342, 1496, 1504,
	0, 1749, 0, 1526, 1513, 0, 0, 0, 1526, 1530,
	1531, 1533, 1534, 0, 0, 1740, 1746, 557, 609, 1601,
	1601, 332, 330, 2568, 328, 325, 327, 0, 0, 1516,
	1518, 0, 0, 0, 279, 0, 288, 1718, 286, 0,
	291, 0, 0, 0, 473, 676, 681, 839, 0, 332,
	847, 848, 849, 895, 939, 947, 994, 859, 861, 862,
	863, 0, 0, 0, 1029, 1025, 1026, 1027, 879, 949,
	882, 949, 885, 949, 888, 890, 908, 914, 927, 920,
	928, 0, 0, 0, 941, 958, 0, 977, 0, 0,
	0, 0, 0, 0, 0, 1000, 1001, 1002, 1004, 1009,
	1008, 1013, 838, 1737, 1552, 1553, 1555, 0, 1564, 0,
	0, 1640, -2, -2, 1639, 1643, 1644, -2, -2, -2,
	-2, 1560, 0, 1569, 1566, 0, 1625, 1348, 1349, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 1965, 0,
	-2, 1944, 1947, 1951, 1953, 1955, 0, 0, 0, 0,
	0, 0, 2188, 0, 2190, 1966, 2243, 2246, 2181, 0,
	2137, 0, 0, 1613, 1614, 1614, 0, 2035, 0, 2196,
	0, 2203, 2204, 0, 2028, 0, 2237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 2071, 2074, 2077, 2080, 0, 0, 0, 0, 2060,
	0, 0, 0, 2064, 1830, 1816, 0, 1858, 1856, 1857,
	1851, 1858, 1855, 1808, 0, 1807, 0, 2086, 0, 2088,
	2090, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 1973,
	1974, 1994, 2093, 2225, 2226, 0, 0, 0, 0, 0,
	0, 2099, 0, 2231, 2100, 2102, 1601, 0, 1594, 0,
	1659, 1648, 1748, 0, 2252, 1718, 1661, 1663, 2253, 2291,
	1648, 1648, 0, 2200, 0, 0, 1709, 0, 0, 0,
	1711, 1682, 0, 0, 1676, 0, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1683, 1220, 1713, 1685, 1689, 2319, 0,
	1715, 0, 1700, 0, 1702, 1735, 0, 1694, 1697, 0,
	0, 2334, 1749, 0, 372, 379, 380, 373, 374, 375,
	376, 0, 625, 0, 0, 0, 0, 0, 2202, 0,
	1755, 0, 1761, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 1538, 429, 520, 215, 525, 528, 2258, 215,
	534, 537, 543, 244, 0, 689, -2, 728, 729, 731,
	0, 727, 171, 1411, 0, 0, 1353, 1355, 1359, 1365,
	1368, 0, 176, 2744, 188, 0, 2744, 0, 1148, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 2744, 215,
	2744, 215, 192, 194, 197, 0, 201, 199, 0, 1136,
	0, 0, 1139, 121, 1411, 0, 0, 124, 128, 137,
	138, 141, 0, 0, 0, 153, 0, 0, 0, 1370,
	1374, 1382, 0, 0, 0, 1247, 1248, 1251, 1257, 85,
	0, 0, 0, 1378, 1380, 1386, 97, 100, 2744, 2303,
	102, 2744, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 126, 130, 139, 140, 142,
	0, 1388, 123, 0, 230, 0, 0, 220, 215, 2744,
	0, 222, 0, 223, 224, 238, 0, 0, 0, 1067,
	1068, 1308, 1261, 1262, 0, 1273, 1267, 0, 0, 0,
	0, 0, 1390, 1391, 0, 0, 0, 1409, 1406, 1718,
	250, 0, 1718, 258, 0, 2266, 0, 271, 394, 0,
	0, 0, 0, 1103, 1202, 1105, 1107, 1108, 1109, 217,
	0, 2342, 1174, 2490, 2342, 0, 0, 1074, 0, 0,
	0, 467, 463, 0, 472, 478, 477, 483, -2, 0,
	0, 0, 0, -2, 0, 0, 1324, 1318, 1319, 0,
	0, 0, 0, 2744, 1498, 1504, 0, 1599, 1614, 490,
	1505, 1526, 0, 0, 0, 1515, 1511, 1508, 1749, 0,
	0, 0, 0, 0, 1742, 1745, 560, 561, 309, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 289, 0, 292, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 0, 0, 291, 321, 281, 1718, 0,
	0, 678, 0, 0, 846, 0, 869, 872, 881, 883,
	886, 930, 932, 949, 959, 984, 985, 1126, 0, 1126,
	0, 0, 1005, 1562, 0, 1637, 1568, 1619, 1620, 0,
	1350, 0, 1883, 1928, 0, 0, -2, 0, 0, 1932,
	0, 0, 0, -2, 0, 0, 0, 2189, 2191, 0,
	2245, 2180, 2030, 0, 0, 0, 2034, 2018, 2019, 0,
	2140, 2206, 2235, 2239, 0, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 0, 2285, 2320, 2324, 2113, 2114, 2118, 2299,
	0, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 1853, 0, 0, 2207, 2218, 2220, 1970,
	1971, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, -2, -2, -2, 1988, 1989, 1990, -2, -2, -2,
	1995, 0, 0, 0, 2221, 2223, 2224, 2228, 2229, 0,
	2096, 2097, 2098, 2230, 0, 1601, 1595, 1656, 0, 1747,
	1660, 0, 1656, 1656, 1608, 1707, 0, 0, 1731, 0,
	1679, 0, 1680, 0, 0, 1712, 0, 1687, 1690, 1691,
	1701, 0, 1693, 0, 1696, 0, 2030, -2, 333, 335,
	337, 0, 340, 341, 0, 0, 0, 628, 629, 0,
	627, 611, 0, 0, 1757, 0, 0, 1833, 1837, 1861,
	637, 638, 0, 636, 522, 531, 246, 0, 1716, 0,
	0, 0, 0, 0, 0, 216, 0, 1183, 0, 1146,
	0, 0, 1173, 0, 0, 1189, 178, 179, 180, 0,
	0, 0, 0, 190, 0, 0, 186, 0, 196, 200,
	1133, 0, 0, 0, 0, 1358, 0, 0, 0, 150,
	151, 152, 0, 157, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1488, 1489, 0, 1479,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 1347, 240, 0, 0, 0, 0, 0,
	1311, 1312, 1269, 1371, 1375, 1383, 0, 0, 0, 0,
	643, 0, 648, 1408, 0, 258, 256, 0, 259, 0,
	262, 263, 0, 258, 252, 0, 0, 0, 1220, 408,
	1077, 1190, 0, 0, 1192, 1110, 1114, 0, 2342, 2342,
	0, 2296, 0, 1075, 0, 0, 1191, 459, 0, 466,
	0, 480, 0, 0, 1241, 0, 0, 1264, 1284, 1220,
	0, 1323, 1325, 0, 1333, 0, 0, 0, 1500, 1504,
	0, 1493, 1494, 1633, 1506, 1524, -2, 0, 0, 1614,
	1532, 1529, 1535, 1536, 0, 329, 0, 324, 326, 0,
	312, 0, 1517, 1519, 0, 1048, 1051, 0, 0, 0,
	0, 0, 0, 0, 280, 291, 1718, 316, 0, 840,
	864, 940, 986, 1125, 0, 0, 988, 0, 0, 1636,
	1623, 1624, 1621, 1350, 1930, 1934, 0, 0, 0, 1936,
	-2, 0, 1958, -2, -2, 2192, 2244, 2009, 1614, 2031,
	2033, 2020, 2238, 1878, 0, 2120, 2117, 0, 2104, 0,
	2055, 2056, 0, 0, 2059, 2061, 2062, 2063, 1817, 1810,
	1809, 2217, 0, 0, 0, 0, 2095, 1596, 0, 2109,
	0, 0, 1664, 2109, 2109, 1708, 0, 1710, 1677, 1665,
	0, 1674, 0, 2320, 1703, 1695, 0, 0, 338, 0,
	342, 343, 377, 0, 0, 1751, 1756, 0, 1762, 1832,
	0, 247, 172, 173, 1362, 1366, 1363, 0, 175, 0,
	0, 1147, 0, 1150, 0, 0, 0, 0, 1157, 1174,
	0, 0, 0, 0, 0, 0, 1176, 0, 1175, 0,
	0, 1206, 0, 1338, 1345, 0, -2, 0, 0, 0,
	182, 206, 0, 0, 0, 0, 209, 1412, 184, 0,
	0, 215, 215, 0, 0, 1354, 1356, 1369, 0, 0,
	0, 0, 160, 0, 0, 1372, 1376, 1384, 1379, 1381,
	1387, 0, 103, 0, 1490, 144, 0, 0, 0, 0,
	0, 0, 1389, 228, 229, 0, 215, 0, 215, 221,
	215, 1347, 0, 0, 0, 0, 0, 0, 0, 1392,
	1393, 249, 0, 0, 0, 0, 251, 322, 258, 396,
	0, 1135, 0, 1202, 1194, 1195, 1196, 0, 1106, 1201,
	1203, 0, 0, 1111, 0, 0, 0, 0, 1091, 1076,
	0, 1087, 0, 0, 1104, 1079, 0, 464, 481, 0,
	484, 0, 487, 1065, 1238, 1281, 1220, 0, 1315, 0,
	0, 0, 0, 0, 0, 0, 1502, 1504, 0, 1495,
	1496, 1526, 1632, 0, 0, 0, 1514, 1633, 0, 331,
	332, 0, 332, 293, 0, 294, 295, 296, 303, 304,
	282, 283, 680, 682, 0, 0, 688, 1124, 0, 0,
	0, 0, 1622, 1938, -2, -2, 1959, 0, 2321, 2323,
	1614, 0, 2106, 1616, 0, 0, -2, 0, 0, 0,
	1597, 1580, 0, 1655, 1647, 1649, 1651, 2630, 2413, 2743,
	1581, 1582, 1730, 0, 0, 1698, 339, 630, 0, 0,
	1758, 0, 0, 0, 1364, 177, 0, 0, 1151, 1152,
	2295, 1154, 0, 1156, 1158, 1159, 1160, 0, 1163, 0,
	2344, 0, 1168, 1171, 1172, 0, 0, 1185, 1207, 0,
	1216, 0, 1340, 1350, 1344, 0, 1342, 1218, 0, 181,
	208, 183, 210, 205, 0, 1347, 0, 185, 195, 0,
	0, 125, 0, 0, 2407, 163, 161, 159, 101, 1351,
	0, 0, 147, 149, 127, 0, 230, 239, 1346, 241,
	225, 215, 0, 1373, 1377, 1385, 0, 1400, 1401, 1402,
	1403, 0, 0, 0, 0, 260, 0, 261, 264, 0,
	0, 1079, 1134, 1078, 1193, 0, 1204, 1205, 0, 0,
	0, 0, 0, 0, 1081, 0, 1080, 0, 0, 0,
	0, 0, 465, 468, 0, 471, 0, 0, 0, 0,
	0, 1326, 1324, 0, 1332, 0, 0, 0, 1478, 0,
	0, 1497, 1498, 488, 1520, 0, 0, 1526, 1537, 311,
	0, 314, 290, 0, 684, 0, 686, 0, 987, 989,
	0, 0, 2032, 2124, 0, 0, 2057, 2058, -2, 0,
	1998, 2108, 2110, 0, 0, 0, 0, 0, 1666, 1675,
	631, 1752, 639, 1360, 0, 1367, 217, 1149, 1153, 0,
	0, 0, 1164, 1224, 0, 0, 1241, 1241, 1177, 0,
	0, 1210, 1211, 1131, 0, 1212, 1213, 1214, 1339, 1625,
	1345, 1187, 0, 0, 207, 212, 0, 0, 0, 0,
	0, 0, 146, 148, 0, 219, 242, 1347, 0, 1404,
	1405, 0, 0, 257, 275, 0, 1282, 1081, 0, 1112,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1113,
	1218, 0, 0, 1182, 1089, 0, 1092, 0, 1088, 1085,
	1086, 1077, 0, 469, 470, 485, 0, 486, 0, 1285,
	0, 0, 1333, 0, 0, 1485, 1477, 1504, 1499, 1500,
	1749, 1523, 1527, 0, 683, 0, 0, 997, 998, 0,
	0, 0, 0, 2119, 1617, 1999, 0, 0, 1650, 1652,
	1653, 1654, 1361, 189, 0, 0, 1162, 1229, 0, 0,
	0, 0, 0, 1178, 1208, 1209, 1206, 1130, 0, 1343,
	1341, 0, 1220, 187, 0, 1218, 0, 1140, 0, 0,
	1143, 0, 0, 164, 2407, 162, 0, 215, 1397, 215,
	0, 278, 0, 269, 267, 268, 1073, 0, 1198, 1200,
	1216, 1218, 1131, 0, 1093, 1135, 1091, 482, 1283, 1316,
	1218, 0, 1216, 0, 1492, 1504, 1486, 1487, 0, 1502,
	0, 332, 685, 687, 2116, 2136, 2125, -2, 2701, 2414,
	0, 2136, 2136, 2111, 2112, 0, 0, 1165, 1225, 1226,
	0, 1221, 1222, 1223, 2343, 1166, 1167, 1169, 1170, 1749,
	0, 0, 1224, 211, 193, 1137, 0, 0, 1138, 0,
	0, 167, 0, 169, 243, 1395, 0, 1398, 0, 265,
	0, 0, 1070, 1072, 1197, 0, 1131, 1216, 1079, 0,
	0, 0, 1079, 1081, 1216, 0, 1131, 0, 1481, 1491,
	0, 1501, 1478, 0, 313, 2121, 0, 0, 2127, 2128,
	2129, 2130, 2131, 2122, 2123, 1155, 0, 1227, 0, 1228,
	0, 0, 0, 1186, 1215, 0, 1229, 1141, 0, 1144,
	0, 165, 0, 0, 0, 273, 274, 1199, 1079, 1131,
	1749, 0, 1082, 0, 1084, 1081, 1090, 1131, 0, 1079,
	0, 1474, 1480, 1484, 2304, 1485, 1521, 0, 0, 2133,
	2134, 0, 0, 0, 1230, 0, 1233, 1234, 0, 1231,
	0, 1206, 0, 0, 1396, 215, 0, 1749, 1079, 1181,
	1083, 1073, 1079, 1218, 1749, 1216, 1492, 0, 2132, 2135,
	2126, 1161, 1232, 1235, 1236, 1217, 1188, 0, 0, 1399,
	276, 0, 1179, 1749, 1071, 1749, 1216, 1329, 1131, 1481,
	1749, 1128, 0, 0, 1180, 1327, 1131, 1079, 1475, 1522,
	1142, 1127, 0, 277, 1079, 1749, 0, 1749, 1330, 0,
	1328, 1128, 1145,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 589, 3, 595, 590, 3,
	600, 601, 593, 591, 605, 592, 602, 594, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 608, 3,
	581, 583, 582, 586, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 598, 3, 599, 596, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 606, 588, 607, 584,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 585, 57924, 587,
	57925, 597, 57926, 603, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1629
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1648
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1690
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1697
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1799
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1864
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1885
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1893
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1917
		{
		}
	case 136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1918
		{
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1922
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1931
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1943
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1948
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1967
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[8].union.slct(),
				ToStoreID:         sqlDollar[6].union.int64(),
				RelocateLease:     true,
				RelocateNonVoters: false,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				ToStoreID:         sqlDollar[7].union.int64(),
				RelocateLease:     true,
				RelocateNonVoters: false,
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2004
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[10].union.slct(),
				FromStoreID:       sqlDollar[6].union.int64(),
				ToStoreID:         sqlDollar[8].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: false,
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				FromStoreID:       sqlDollar[7].union.int64(),
				ToStoreID:         sqlDollar[9].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: false,
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2026
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[10].union.slct(),
				FromStoreID:       sqlDollar[6].union.int64(),
				ToStoreID:         sqlDollar[8].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: true,
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				FromStoreID:       sqlDollar[7].union.int64(),
				ToStoreID:         sqlDollar[9].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: true,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2050
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2059
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2070
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2078
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2089
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2099
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2109
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2118
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2129
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2135
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2161
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2166
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2187
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2301
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2311
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2320
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2371
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = true
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = false
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2554
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2558
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2561
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2645
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2728
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2736
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2763
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2886
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = nil
		}
	case 279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3020
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3064
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			return unimplemented(sqllex, "alter function")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3170
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3179
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3185
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3190
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3195
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3227
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = nil
		}
	case 333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3303
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3317
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3487
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3499
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3524
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3529
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3548
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "CREATE")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3562
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3566
		{
			return unimplemented(sqllex, "create access method")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3567
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			return unimplemented(sqllex, "create cast")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3569
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3571
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3572
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3573
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3575
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3576
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			return unimplemented(sqllex, "create publication")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplemented(sqllex, "create rule")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplemented(sqllex, "create server")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3587
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3588
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3591
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3592
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3595
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3596
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3599
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3602
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3605
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3606
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3607
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3608
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3610
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "drop server")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3624
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3626
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3628
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3743
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3778
		{

			sqlVAL.union.val = nil
		}
	case 480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3825
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "DELETE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3864
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3865
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3876
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3878
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3891
		{
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			return helpWith(sqllex, "DROP")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3900
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4034
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4091
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4157
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4181
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4189
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "DELETE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "INSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "DELETE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "INSERT")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4270
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4303
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4393
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4408
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "GRANT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4471
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4474
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "RESET")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "RESET")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4538
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "USE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4557
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4558
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "USE")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4713
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4730
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4764
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			return unimplemented(sqllex, "set from current")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4805
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4810
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4848
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = tree.Low
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = tree.Normal
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = tree.High
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4964
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4965
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4966
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4968
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4970
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4973
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4989
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4992
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4994
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4997
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4999
		{
			return helpWith(sqllex, "SHOW")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5007
		{
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5011
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5025
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5035
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.str = "client_encoding"
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.str = "timezone"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5097
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5112
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5160
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5169
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5208
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5322
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5374
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = false
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5431
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5501
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5545
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5552
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5556
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = true
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = false
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5571
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5617
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = true
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = false
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5640
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5669
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5680
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5694
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5702
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5707
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5737
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5742
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5747
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5763
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5781
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5821
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5829
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5850
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5855
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5860
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5864
		{
		}
	case 997:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5873
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5896
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5908
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5967
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5977
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5990
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6123
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6175
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6225
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6237
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6238
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6292
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6407
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6443
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6458
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{

			sqlVAL.union.val = nil
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6492
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.str = ""
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6502
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = nil
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6525
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6529
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6555
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6568
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6582
		{
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6639
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6665
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6676
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6679
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6683
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.str = ""
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6821
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6925
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6970
		{

			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = false
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6984
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6987
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7083
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7094
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7111
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7121
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7136
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7201
		{
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7202
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7203
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7204
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7205
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7363
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7372
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7380
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7391
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7414
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7416
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7418
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7420
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7423
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7426
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7428
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7441
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.str = ""
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = true
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7534
		{

			sqlVAL.union.val = true
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = false
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7549
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7563
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7575
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7587
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7597
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7607
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = nil
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7716
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7717
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7742
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7744
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7746
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7748
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7752
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7787
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7804
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7822
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7838
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7854
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7858
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = false
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = true
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = false
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = true
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = false
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7912
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7918
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7924
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.str = ""
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.str = ""
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7991
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7997
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8222
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8228
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8240
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8246
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8260
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8266
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8325
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = true
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = false
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = tree.Types
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8385
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8389
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8414
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8417
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8418
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8429
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8447
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8456
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8477
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8525
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8529
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8531
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8568
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8583
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8584
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8601
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8604
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8605
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8633
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8646
		{
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8648
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8652
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8741
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.str = ""
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8764
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8769
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8786
		{

		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8801
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.str = ""
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.str = ""
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.str = ""
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.str = ""
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8856
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8869
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8870
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8899
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8917
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8921
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8930
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8979
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9006
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9080
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9101
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9116
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9260
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9418
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = true
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9471
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9472
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = nil
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9485
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9486
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = true
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = false
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = false
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = true
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9515
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9516
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9519
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9520
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9561
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9573
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9578
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9604
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9637
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9732
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9733
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9763
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9765
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9780
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9802
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9833
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9849
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9880
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9922
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9932
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9978
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10008
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10041
		{
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10043
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = nil
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = true
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = false
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.str = tree.AstFull
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.str = tree.AstRight
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.str = tree.AstInner
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10160
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10161
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.str = tree.AstHash
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.str = ""
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10230
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10235
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10253
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10265
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10275
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = true
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = false
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = true
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = false
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10324
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10337
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10345
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10346
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10364
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10374
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10394
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10443
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10455
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10456
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = types.Geography
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10505
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10513
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10539
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10547
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = nil
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = types.Int2
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = types.Int
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = types.Float4
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = types.Float
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10598
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = types.Bool
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10620
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = types.Float
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10639
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10645
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10667
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = types.String
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = true
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = false
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = types.Date
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10716
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10724
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10738
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10747
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10755
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10772
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = true
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = false
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = false
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = types.Interval
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10796
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10880
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10895
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = nil
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10925
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10985
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11134
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11255
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11321
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11343
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11451
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11459
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11555
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11560
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11586
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11595
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11610
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11640
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11651
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11652
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11667
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11676
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11742
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11867
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11890
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11899
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11913
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11918
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11923
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11928
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11942
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11943
		{
			return unimplemented(sqllex, "treat")
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11964
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.str = ""
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12105
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12118
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12186
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12215
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12265
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12291
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12533
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12631
		{
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12632
		{
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12704
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12712
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12785
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12797
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12801
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12810
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12821
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12830
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12838
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12855
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13074
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13087
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13094
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.str = ""
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
