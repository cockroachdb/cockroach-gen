// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:979
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCLUDE_ALL_SECONDARY_TENANTS = lexbase.INCLUDE_ALL_SECONDARY_TENANTS
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const INVISIBLE = lexbase.INVISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCLUDE_ALL_SECONDARY_TENANTS",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"INVISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15896

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1925,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	285, 587,
	-2, 0,
	-1, 76,
	8, 1060,
	29, 1060,
	653, 1060,
	654, 1060,
	-2, 0,
	-1, 77,
	8, 1060,
	29, 1060,
	653, 1060,
	654, 1060,
	-2, 0,
	-1, 80,
	1, 1772,
	140, 1772,
	272, 1772,
	360, 1772,
	423, 1772,
	433, 1772,
	634, 1772,
	666, 1772,
	-2, 0,
	-1, 81,
	1, 1772,
	666, 1772,
	-2, 0,
	-1, 87,
	265, 296,
	567, 296,
	-2, 0,
	-1, 101,
	205, 487,
	251, 1645,
	267, 1645,
	285, 487,
	425, 487,
	437, 1388,
	481, 487,
	498, 1388,
	551, 1388,
	580, 487,
	609, 1388,
	-2, 0,
	-1, 108,
	142, 1925,
	260, 1925,
	592, 1925,
	593, 1925,
	-2, 0,
	-1, 126,
	162, 1896,
	183, 1896,
	196, 1896,
	263, 1896,
	299, 1896,
	373, 1896,
	384, 1896,
	586, 1896,
	-2, 1867,
	-1, 170,
	170, 1198,
	283, 1198,
	428, 1159,
	503, 1159,
	550, 1159,
	570, 1198,
	572, 1159,
	-2, 0,
	-1, 175,
	4, 1927,
	21, 1927,
	22, 1927,
	23, 1927,
	24, 1927,
	25, 1927,
	26, 1927,
	27, 1927,
	28, 1927,
	30, 1927,
	31, 1927,
	37, 1927,
	41, 1927,
	43, 1927,
	44, 1927,
	45, 1927,
	47, 1927,
	48, 1927,
	49, 1927,
	50, 1927,
	51, 1927,
	52, 1927,
	53, 1927,
	54, 1927,
	55, 1927,
	57, 1927,
	58, 1927,
	59, 1927,
	60, 1927,
	62, 1927,
	63, 1927,
	64, 1927,
	65, 1927,
	66, 1927,
	67, 1927,
	68, 1927,
	69, 1927,
	73, 1927,
	74, 1927,
	75, 1927,
	76, 1927,
	78, 1927,
	79, 1927,
	80, 1927,
	84, 1927,
	85, 1927,
	86, 1927,
	87, 1927,
	88, 1927,
	89, 1927,
	90, 1927,
	91, 1927,
	94, 1927,
	95, 1927,
	96, 1927,
	97, 1927,
	98, 1927,
	99, 1927,
	101, 1927,
	103, 1927,
	104, 1927,
	105, 1927,
	106, 1927,
	107, 1927,
	108, 1927,
	109, 1927,
	111, 1927,
	112, 1927,
	113, 1927,
	115, 1927,
	116, 1927,
	117, 1927,
	125, 1927,
	126, 1927,
	127, 1927,
	128, 1927,
	129, 1927,
	131, 1927,
	132, 1927,
	133, 1927,
	134, 1927,
	136, 1927,
	137, 1927,
	138, 1927,
	139, 1927,
	141, 1927,
	142, 1927,
	143, 1927,
	144, 1927,
	146, 1927,
	147, 1927,
	148, 1927,
	151, 1927,
	152, 1927,
	153, 1927,
	155, 1927,
	156, 1927,
	157, 1927,
	159, 1927,
	160, 1927,
	161, 1927,
	163, 1927,
	164, 1927,
	165, 1927,
	166, 1927,
	167, 1927,
	168, 1927,
	169, 1927,
	170, 1927,
	171, 1927,
	172, 1927,
	173, 1927,
	174, 1927,
	175, 1927,
	176, 1927,
	177, 1927,
	178, 1927,
	179, 1927,
	180, 1927,
	182, 1927,
	188, 1927,
	189, 1927,
	190, 1927,
	191, 1927,
	195, 1927,
	197, 1927,
	198, 1927,
	199, 1927,
	201, 1927,
	202, 1927,
	205, 1927,
	206, 1927,
	207, 1927,
	208, 1927,
	209, 1927,
	210, 1927,
	211, 1927,
	212, 1927,
	213, 1927,
	214, 1927,
	215, 1927,
	216, 1927,
	217, 1927,
	218, 1927,
	220, 1927,
	221, 1927,
	223, 1927,
	224, 1927,
	226, 1927,
	227, 1927,
	228, 1927,
	229, 1927,
	230, 1927,
	231, 1927,
	232, 1927,
	233, 1927,
	234, 1927,
	235, 1927,
	236, 1927,
	238, 1927,
	239, 1927,
	240, 1927,
	242, 1927,
	243, 1927,
	244, 1927,
	245, 1927,
	246, 1927,
	247, 1927,
	251, 1927,
	252, 1927,
	253, 1927,
	254, 1927,
	257, 1927,
	258, 1927,
	259, 1927,
	260, 1927,
	261, 1927,
	262, 1927,
	264, 1927,
	266, 1927,
	267, 1927,
	268, 1927,
	270, 1927,
	272, 1927,
	273, 1927,
	274, 1927,
	276, 1927,
	280, 1927,
	281, 1927,
	282, 1927,
	283, 1927,
	284, 1927,
	285, 1927,
	286, 1927,
	288, 1927,
	289, 1927,
	290, 1927,
	292, 1927,
	293, 1927,
	294, 1927,
	296, 1927,
	297, 1927,
	300, 1927,
	301, 1927,
	302, 1927,
	303, 1927,
	304, 1927,
	305, 1927,
	306, 1927,
	309, 1927,
	310, 1927,
	311, 1927,
	312, 1927,
	314, 1927,
	315, 1927,
	316, 1927,
	317, 1927,
	318, 1927,
	319, 1927,
	320, 1927,
	321, 1927,
	322, 1927,
	323, 1927,
	324, 1927,
	325, 1927,
	326, 1927,
	327, 1927,
	328, 1927,
	329, 1927,
	330, 1927,
	331, 1927,
	332, 1927,
	333, 1927,
	334, 1927,
	335, 1927,
	336, 1927,
	338, 1927,
	340, 1927,
	341, 1927,
	342, 1927,
	343, 1927,
	344, 1927,
	345, 1927,
	346, 1927,
	347, 1927,
	348, 1927,
	349, 1927,
	350, 1927,
	351, 1927,
	352, 1927,
	353, 1927,
	354, 1927,
	355, 1927,
	356, 1927,
	358, 1927,
	359, 1927,
	361, 1927,
	363, 1927,
	364, 1927,
	365, 1927,
	366, 1927,
	368, 1927,
	369, 1927,
	370, 1927,
	371, 1927,
	372, 1927,
	375, 1927,
	377, 1927,
	379, 1927,
	380, 1927,
	381, 1927,
	382, 1927,
	385, 1927,
	386, 1927,
	387, 1927,
	389, 1927,
	391, 1927,
	392, 1927,
	393, 1927,
	394, 1927,
	395, 1927,
	396, 1927,
	397, 1927,
	398, 1927,
	399, 1927,
	400, 1927,
	401, 1927,
	402, 1927,
	403, 1927,
	404, 1927,
	406, 1927,
	407, 1927,
	408, 1927,
	409, 1927,
	410, 1927,
	411, 1927,
	412, 1927,
	413, 1927,
	414, 1927,
	415, 1927,
	416, 1927,
	417, 1927,
	418, 1927,
	419, 1927,
	420, 1927,
	422, 1927,
	423, 1927,
	424, 1927,
	426, 1927,
	427, 1927,
	428, 1927,
	429, 1927,
	430, 1927,
	431, 1927,
	432, 1927,
	433, 1927,
	434, 1927,
	435, 1927,
	436, 1927,
	437, 1927,
	438, 1927,
	439, 1927,
	441, 1927,
	443, 1927,
	444, 1927,
	445, 1927,
	451, 1927,
	452, 1927,
	453, 1927,
	455, 1927,
	456, 1927,
	457, 1927,
	458, 1927,
	459, 1927,
	460, 1927,
	461, 1927,
	462, 1927,
	463, 1927,
	464, 1927,
	465, 1927,
	467, 1927,
	468, 1927,
	469, 1927,
	470, 1927,
	471, 1927,
	473, 1927,
	474, 1927,
	475, 1927,
	476, 1927,
	477, 1927,
	478, 1927,
	479, 1927,
	481, 1927,
	482, 1927,
	483, 1927,
	484, 1927,
	485, 1927,
	486, 1927,
	487, 1927,
	488, 1927,
	489, 1927,
	490, 1927,
	491, 1927,
	492, 1927,
	493, 1927,
	494, 1927,
	495, 1927,
	496, 1927,
	498, 1927,
	499, 1927,
	500, 1927,
	501, 1927,
	502, 1927,
	503, 1927,
	505, 1927,
	506, 1927,
	507, 1927,
	508, 1927,
	509, 1927,
	510, 1927,
	511, 1927,
	513, 1927,
	514, 1927,
	515, 1927,
	516, 1927,
	517, 1927,
	518, 1927,
	519, 1927,
	520, 1927,
	522, 1927,
	524, 1927,
	525, 1927,
	526, 1927,
	527, 1927,
	528, 1927,
	529, 1927,
	530, 1927,
	531, 1927,
	532, 1927,
	533, 1927,
	534, 1927,
	535, 1927,
	536, 1927,
	537, 1927,
	538, 1927,
	539, 1927,
	540, 1927,
	541, 1927,
	542, 1927,
	543, 1927,
	544, 1927,
	546, 1927,
	547, 1927,
	549, 1927,
	550, 1927,
	552, 1927,
	553, 1927,
	554, 1927,
	555, 1927,
	556, 1927,
	557, 1927,
	559, 1927,
	560, 1927,
	562, 1927,
	563, 1927,
	564, 1927,
	565, 1927,
	566, 1927,
	568, 1927,
	570, 1927,
	571, 1927,
	572, 1927,
	573, 1927,
	574, 1927,
	575, 1927,
	576, 1927,
	577, 1927,
	579, 1927,
	580, 1927,
	581, 1927,
	582, 1927,
	583, 1927,
	584, 1927,
	585, 1927,
	588, 1927,
	589, 1927,
	590, 1927,
	591, 1927,
	592, 1927,
	593, 1927,
	594, 1927,
	595, 1927,
	596, 1927,
	598, 1927,
	601, 1927,
	602, 1927,
	603, 1927,
	604, 1927,
	605, 1927,
	606, 1927,
	608, 1927,
	609, 1927,
	610, 1927,
	611, 1927,
	612, 1927,
	613, 1927,
	614, 1927,
	615, 1927,
	616, 1927,
	617, 1927,
	618, 1927,
	619, 1927,
	620, 1927,
	625, 1927,
	626, 1927,
	627, 1927,
	628, 1927,
	629, 1927,
	630, 1927,
	-2, 0,
	-1, 177,
	1, 1772,
	666, 1772,
	669, 1772,
	-2, 0,
	-1, 178,
	1, 1772,
	567, 1772,
	666, 1772,
	669, 1772,
	-2, 0,
	-1, 214,
	162, 1895,
	183, 1895,
	196, 1895,
	263, 1895,
	299, 1895,
	373, 1895,
	384, 1895,
	586, 1895,
	-2, 1870,
	-1, 275,
	4, 1934,
	5, 1934,
	6, 1934,
	7, 1934,
	8, 1934,
	9, 1934,
	10, 1934,
	21, 1934,
	22, 1934,
	23, 1934,
	24, 1934,
	25, 1934,
	26, 1934,
	27, 1934,
	28, 1934,
	30, 1934,
	31, 1934,
	37, 1934,
	38, 1934,
	41, 1934,
	43, 1934,
	44, 1934,
	45, 1934,
	46, 1934,
	47, 1934,
	48, 1934,
	49, 1934,
	50, 1934,
	51, 1934,
	52, 1934,
	53, 1934,
	54, 1934,
	55, 1934,
	57, 1934,
	58, 1934,
	59, 1934,
	60, 1934,
	62, 1934,
	63, 1934,
	64, 1934,
	65, 1934,
	66, 1934,
	67, 1934,
	68, 1934,
	69, 1934,
	70, 1934,
	71, 1934,
	72, 1934,
	73, 1934,
	74, 1934,
	75, 1934,
	76, 1934,
	78, 1934,
	79, 1934,
	80, 1934,
	82, 1934,
	84, 1934,
	85, 1934,
	86, 1934,
	87, 1934,
	88, 1934,
	89, 1934,
	90, 1934,
	91, 1934,
	94, 1934,
	95, 1934,
	96, 1934,
	97, 1934,
	98, 1934,
	99, 1934,
	101, 1934,
	103, 1934,
	104, 1934,
	105, 1934,
	106, 1934,
	107, 1934,
	108, 1934,
	109, 1934,
	111, 1934,
	112, 1934,
	113, 1934,
	114, 1934,
	115, 1934,
	116, 1934,
	117, 1934,
	118, 1934,
	119, 1934,
	120, 1934,
	121, 1934,
	122, 1934,
	123, 1934,
	124, 1934,
	125, 1934,
	126, 1934,
	127, 1934,
	128, 1934,
	129, 1934,
	130, 1934,
	131, 1934,
	132, 1934,
	133, 1934,
	134, 1934,
	135, 1934,
	136, 1934,
	137, 1934,
	138, 1934,
	139, 1934,
	141, 1934,
	142, 1934,
	143, 1934,
	144, 1934,
	146, 1934,
	147, 1934,
	148, 1934,
	151, 1934,
	152, 1934,
	153, 1934,
	155, 1934,
	156, 1934,
	157, 1934,
	159, 1934,
	160, 1934,
	161, 1934,
	163, 1934,
	164, 1934,
	165, 1934,
	166, 1934,
	167, 1934,
	168, 1934,
	169, 1934,
	170, 1934,
	171, 1934,
	172, 1934,
	173, 1934,
	174, 1934,
	175, 1934,
	176, 1934,
	177, 1934,
	178, 1934,
	179, 1934,
	180, 1934,
	181, 1934,
	182, 1934,
	188, 1934,
	189, 1934,
	190, 1934,
	191, 1934,
	195, 1934,
	197, 1934,
	198, 1934,
	199, 1934,
	201, 1934,
	202, 1934,
	204, 1934,
	205, 1934,
	206, 1934,
	207, 1934,
	208, 1934,
	209, 1934,
	210, 1934,
	211, 1934,
	212, 1934,
	213, 1934,
	214, 1934,
	215, 1934,
	216, 1934,
	217, 1934,
	218, 1934,
	220, 1934,
	221, 1934,
	223, 1934,
	224, 1934,
	226, 1934,
	227, 1934,
	228, 1934,
	229, 1934,
	230, 1934,
	231, 1934,
	232, 1934,
	233, 1934,
	234, 1934,
	235, 1934,
	236, 1934,
	237, 1934,
	238, 1934,
	239, 1934,
	240, 1934,
	242, 1934,
	243, 1934,
	244, 1934,
	245, 1934,
	246, 1934,
	247, 1934,
	251, 1934,
	252, 1934,
	253, 1934,
	254, 1934,
	256, 1934,
	257, 1934,
	258, 1934,
	259, 1934,
	260, 1934,
	261, 1934,
	262, 1934,
	264, 1934,
	266, 1934,
	267, 1934,
	268, 1934,
	269, 1934,
	270, 1934,
	271, 1934,
	272, 1934,
	273, 1934,
	274, 1934,
	275, 1934,
	276, 1934,
	280, 1934,
	281, 1934,
	282, 1934,
	283, 1934,
	284, 1934,
	285, 1934,
	286, 1934,
	288, 1934,
	289, 1934,
	290, 1934,
	292, 1934,
	293, 1934,
	294, 1934,
	295, 1934,
	296, 1934,
	297, 1934,
	298, 1934,
	300, 1934,
	301, 1934,
	302, 1934,
	303, 1934,
	304, 1934,
	305, 1934,
	306, 1934,
	307, 1934,
	308, 1934,
	309, 1934,
	310, 1934,
	311, 1934,
	312, 1934,
	314, 1934,
	315, 1934,
	316, 1934,
	317, 1934,
	318, 1934,
	319, 1934,
	320, 1934,
	321, 1934,
	322, 1934,
	323, 1934,
	324, 1934,
	325, 1934,
	326, 1934,
	327, 1934,
	328, 1934,
	329, 1934,
	330, 1934,
	331, 1934,
	332, 1934,
	333, 1934,
	334, 1934,
	335, 1934,
	336, 1934,
	338, 1934,
	339, 1934,
	340, 1934,
	341, 1934,
	342, 1934,
	343, 1934,
	344, 1934,
	345, 1934,
	346, 1934,
	347, 1934,
	348, 1934,
	349, 1934,
	350, 1934,
	351, 1934,
	352, 1934,
	353, 1934,
	354, 1934,
	355, 1934,
	356, 1934,
	357, 1934,
	358, 1934,
	359, 1934,
	360, 1934,
	361, 1934,
	362, 1934,
	363, 1934,
	364, 1934,
	365, 1934,
	366, 1934,
	367, 1934,
	368, 1934,
	369, 1934,
	370, 1934,
	371, 1934,
	372, 1934,
	375, 1934,
	377, 1934,
	380, 1934,
	381, 1934,
	382, 1934,
	385, 1934,
	386, 1934,
	387, 1934,
	388, 1934,
	389, 1934,
	390, 1934,
	391, 1934,
	392, 1934,
	393, 1934,
	394, 1934,
	395, 1934,
	396, 1934,
	397, 1934,
	398, 1934,
	399, 1934,
	400, 1934,
	401, 1934,
	402, 1934,
	403, 1934,
	404, 1934,
	406, 1934,
	407, 1934,
	408, 1934,
	409, 1934,
	410, 1934,
	411, 1934,
	412, 1934,
	413, 1934,
	414, 1934,
	415, 1934,
	416, 1934,
	417, 1934,
	418, 1934,
	419, 1934,
	420, 1934,
	422, 1934,
	423, 1934,
	424, 1934,
	426, 1934,
	427, 1934,
	428, 1934,
	429, 1934,
	430, 1934,
	431, 1934,
	432, 1934,
	433, 1934,
	434, 1934,
	435, 1934,
	436, 1934,
	437, 1934,
	438, 1934,
	439, 1934,
	441, 1934,
	443, 1934,
	444, 1934,
	445, 1934,
	451, 1934,
	452, 1934,
	453, 1934,
	455, 1934,
	456, 1934,
	457, 1934,
	458, 1934,
	459, 1934,
	460, 1934,
	461, 1934,
	462, 1934,
	463, 1934,
	464, 1934,
	465, 1934,
	467, 1934,
	468, 1934,
	469, 1934,
	470, 1934,
	471, 1934,
	472, 1934,
	473, 1934,
	474, 1934,
	475, 1934,
	476, 1934,
	477, 1934,
	478, 1934,
	479, 1934,
	481, 1934,
	482, 1934,
	483, 1934,
	484, 1934,
	485, 1934,
	486, 1934,
	487, 1934,
	488, 1934,
	489, 1934,
	490, 1934,
	491, 1934,
	492, 1934,
	493, 1934,
	494, 1934,
	495, 1934,
	496, 1934,
	498, 1934,
	499, 1934,
	500, 1934,
	501, 1934,
	502, 1934,
	503, 1934,
	504, 1934,
	505, 1934,
	506, 1934,
	507, 1934,
	508, 1934,
	509, 1934,
	510, 1934,
	511, 1934,
	512, 1934,
	513, 1934,
	514, 1934,
	515, 1934,
	516, 1934,
	517, 1934,
	518, 1934,
	519, 1934,
	520, 1934,
	522, 1934,
	524, 1934,
	525, 1934,
	526, 1934,
	527, 1934,
	528, 1934,
	529, 1934,
	530, 1934,
	531, 1934,
	532, 1934,
	533, 1934,
	534, 1934,
	535, 1934,
	536, 1934,
	537, 1934,
	538, 1934,
	539, 1934,
	540, 1934,
	541, 1934,
	542, 1934,
	543, 1934,
	544, 1934,
	546, 1934,
	547, 1934,
	548, 1934,
	549, 1934,
	550, 1934,
	552, 1934,
	553, 1934,
	554, 1934,
	555, 1934,
	556, 1934,
	557, 1934,
	559, 1934,
	560, 1934,
	562, 1934,
	563, 1934,
	564, 1934,
	565, 1934,
	566, 1934,
	568, 1934,
	570, 1934,
	571, 1934,
	572, 1934,
	573, 1934,
	574, 1934,
	575, 1934,
	576, 1934,
	577, 1934,
	578, 1934,
	579, 1934,
	580, 1934,
	581, 1934,
	582, 1934,
	583, 1934,
	584, 1934,
	585, 1934,
	587, 1934,
	588, 1934,
	589, 1934,
	590, 1934,
	591, 1934,
	592, 1934,
	593, 1934,
	594, 1934,
	595, 1934,
	596, 1934,
	597, 1934,
	598, 1934,
	601, 1934,
	602, 1934,
	603, 1934,
	604, 1934,
	605, 1934,
	606, 1934,
	608, 1934,
	609, 1934,
	610, 1934,
	611, 1934,
	612, 1934,
	613, 1934,
	614, 1934,
	615, 1934,
	616, 1934,
	617, 1934,
	618, 1934,
	619, 1934,
	620, 1934,
	625, 1934,
	626, 1934,
	627, 1934,
	628, 1934,
	629, 1934,
	630, 1934,
	631, 1934,
	646, 1934,
	653, 1934,
	654, 1934,
	655, 1934,
	663, 1934,
	667, 1934,
	-2, 0,
	-1, 857,
	4, 1643,
	21, 1643,
	22, 1643,
	23, 1643,
	24, 1643,
	25, 1643,
	26, 1643,
	27, 1643,
	28, 1643,
	30, 1643,
	31, 1643,
	37, 1643,
	41, 1643,
	43, 1643,
	44, 1643,
	45, 1643,
	47, 1643,
	48, 1643,
	49, 1643,
	50, 1643,
	51, 1643,
	52, 1643,
	53, 1643,
	54, 1643,
	55, 1643,
	57, 1643,
	58, 1643,
	59, 1643,
	60, 1643,
	62, 1643,
	63, 1643,
	64, 1643,
	65, 1643,
	66, 1643,
	67, 1643,
	68, 1643,
	69, 1643,
	73, 1643,
	74, 1643,
	75, 1643,
	76, 1643,
	78, 1643,
	79, 1643,
	80, 1643,
	84, 1643,
	85, 1643,
	86, 1643,
	87, 1643,
	88, 1643,
	89, 1643,
	90, 1643,
	91, 1643,
	94, 1643,
	95, 1643,
	96, 1643,
	97, 1643,
	98, 1643,
	99, 1643,
	101, 1643,
	103, 1643,
	104, 1643,
	105, 1643,
	106, 1643,
	107, 1643,
	108, 1643,
	109, 1643,
	111, 1643,
	112, 1643,
	113, 1643,
	115, 1643,
	116, 1643,
	117, 1643,
	125, 1643,
	126, 1643,
	127, 1643,
	128, 1643,
	129, 1643,
	131, 1643,
	132, 1643,
	133, 1643,
	134, 1643,
	136, 1643,
	137, 1643,
	138, 1643,
	139, 1643,
	141, 1643,
	142, 1643,
	143, 1643,
	144, 1643,
	146, 1643,
	147, 1643,
	148, 1643,
	151, 1643,
	152, 1643,
	153, 1643,
	155, 1643,
	156, 1643,
	157, 1643,
	159, 1643,
	160, 1643,
	161, 1643,
	163, 1643,
	164, 1643,
	165, 1643,
	166, 1643,
	167, 1643,
	168, 1643,
	169, 1643,
	170, 1643,
	171, 1643,
	172, 1643,
	173, 1643,
	174, 1643,
	175, 1643,
	176, 1643,
	177, 1643,
	178, 1643,
	179, 1643,
	180, 1643,
	182, 1643,
	188, 1643,
	189, 1643,
	190, 1643,
	191, 1643,
	195, 1643,
	197, 1643,
	198, 1643,
	199, 1643,
	201, 1643,
	202, 1643,
	205, 1643,
	206, 1643,
	207, 1643,
	208, 1643,
	209, 1643,
	210, 1643,
	211, 1643,
	212, 1643,
	213, 1643,
	214, 1643,
	215, 1643,
	216, 1643,
	217, 1643,
	218, 1643,
	220, 1643,
	221, 1643,
	223, 1643,
	224, 1643,
	226, 1643,
	227, 1643,
	228, 1643,
	229, 1643,
	230, 1643,
	231, 1643,
	232, 1643,
	233, 1643,
	234, 1643,
	235, 1643,
	236, 1643,
	238, 1643,
	239, 1643,
	240, 1643,
	242, 1643,
	243, 1643,
	244, 1643,
	245, 1643,
	246, 1643,
	247, 1643,
	251, 1643,
	252, 1643,
	253, 1643,
	254, 1643,
	257, 1643,
	258, 1643,
	259, 1643,
	260, 1643,
	261, 1643,
	262, 1643,
	264, 1643,
	266, 1643,
	267, 1643,
	268, 1643,
	270, 1643,
	272, 1643,
	273, 1643,
	274, 1643,
	276, 1643,
	280, 1643,
	281, 1643,
	282, 1643,
	283, 1643,
	284, 1643,
	285, 1643,
	286, 1643,
	288, 1643,
	289, 1643,
	290, 1643,
	292, 1643,
	293, 1643,
	294, 1643,
	296, 1643,
	297, 1643,
	300, 1643,
	301, 1643,
	302, 1643,
	303, 1643,
	304, 1643,
	305, 1643,
	306, 1643,
	309, 1643,
	310, 1643,
	311, 1643,
	312, 1643,
	314, 1643,
	315, 1643,
	316, 1643,
	317, 1643,
	318, 1643,
	319, 1643,
	320, 1643,
	321, 1643,
	322, 1643,
	323, 1643,
	324, 1643,
	325, 1643,
	326, 1643,
	327, 1643,
	328, 1643,
	329, 1643,
	330, 1643,
	331, 1643,
	332, 1643,
	333, 1643,
	334, 1643,
	335, 1643,
	336, 1643,
	338, 1643,
	340, 1643,
	341, 1643,
	342, 1643,
	343, 1643,
	344, 1643,
	345, 1643,
	346, 1643,
	347, 1643,
	348, 1643,
	349, 1643,
	350, 1643,
	351, 1643,
	352, 1643,
	353, 1643,
	354, 1643,
	355, 1643,
	356, 1643,
	358, 1643,
	359, 1643,
	361, 1643,
	363, 1643,
	364, 1643,
	365, 1643,
	366, 1643,
	368, 1643,
	369, 1643,
	370, 1643,
	371, 1643,
	372, 1643,
	375, 1643,
	377, 1643,
	380, 1643,
	381, 1643,
	382, 1643,
	385, 1643,
	386, 1643,
	387, 1643,
	389, 1643,
	391, 1643,
	392, 1643,
	393, 1643,
	394, 1643,
	395, 1643,
	396, 1643,
	397, 1643,
	398, 1643,
	399, 1643,
	400, 1643,
	401, 1643,
	402, 1643,
	403, 1643,
	404, 1643,
	406, 1643,
	407, 1643,
	408, 1643,
	409, 1643,
	410, 1643,
	411, 1643,
	412, 1643,
	413, 1643,
	414, 1643,
	415, 1643,
	416, 1643,
	417, 1643,
	418, 1643,
	419, 1643,
	420, 1643,
	422, 1643,
	423, 1643,
	424, 1643,
	426, 1643,
	427, 1643,
	428, 1643,
	429, 1643,
	430, 1643,
	431, 1643,
	432, 1643,
	433, 1643,
	434, 1643,
	435, 1643,
	436, 1643,
	437, 1643,
	438, 1643,
	439, 1643,
	441, 1643,
	443, 1643,
	444, 1643,
	445, 1643,
	451, 1643,
	452, 1643,
	453, 1643,
	455, 1643,
	456, 1643,
	457, 1643,
	458, 1643,
	459, 1643,
	460, 1643,
	461, 1643,
	462, 1643,
	463, 1643,
	464, 1643,
	465, 1643,
	467, 1643,
	468, 1643,
	469, 1643,
	470, 1643,
	471, 1643,
	473, 1643,
	474, 1643,
	475, 1643,
	476, 1643,
	477, 1643,
	478, 1643,
	479, 1643,
	481, 1643,
	482, 1643,
	483, 1643,
	484, 1643,
	485, 1643,
	486, 1643,
	487, 1643,
	488, 1643,
	489, 1643,
	490, 1643,
	491, 1643,
	492, 1643,
	493, 1643,
	494, 1643,
	495, 1643,
	496, 1643,
	498, 1643,
	499, 1643,
	500, 1643,
	501, 1643,
	502, 1643,
	503, 1643,
	505, 1643,
	506, 1643,
	507, 1643,
	508, 1643,
	509, 1643,
	510, 1643,
	511, 1643,
	513, 1643,
	514, 1643,
	515, 1643,
	516, 1643,
	517, 1643,
	518, 1643,
	519, 1643,
	520, 1643,
	522, 1643,
	524, 1643,
	525, 1643,
	526, 1643,
	527, 1643,
	528, 1643,
	529, 1643,
	530, 1643,
	531, 1643,
	532, 1643,
	533, 1643,
	534, 1643,
	535, 1643,
	536, 1643,
	537, 1643,
	538, 1643,
	539, 1643,
	540, 1643,
	541, 1643,
	542, 1643,
	543, 1643,
	544, 1643,
	546, 1643,
	547, 1643,
	549, 1643,
	550, 1643,
	552, 1643,
	553, 1643,
	554, 1643,
	555, 1643,
	556, 1643,
	557, 1643,
	559, 1643,
	560, 1643,
	562, 1643,
	563, 1643,
	564, 1643,
	565, 1643,
	566, 1643,
	568, 1643,
	570, 1643,
	571, 1643,
	572, 1643,
	573, 1643,
	574, 1643,
	575, 1643,
	576, 1643,
	577, 1643,
	579, 1643,
	580, 1643,
	581, 1643,
	582, 1643,
	583, 1643,
	584, 1643,
	585, 1643,
	588, 1643,
	589, 1643,
	590, 1643,
	591, 1643,
	592, 1643,
	593, 1643,
	594, 1643,
	595, 1643,
	596, 1643,
	598, 1643,
	601, 1643,
	602, 1643,
	603, 1643,
	604, 1643,
	605, 1643,
	606, 1643,
	608, 1643,
	609, 1643,
	610, 1643,
	611, 1643,
	612, 1643,
	613, 1643,
	614, 1643,
	615, 1643,
	616, 1643,
	617, 1643,
	618, 1643,
	619, 1643,
	620, 1643,
	625, 1643,
	626, 1643,
	627, 1643,
	628, 1643,
	629, 1643,
	630, 1643,
	-2, 0,
	-1, 876,
	203, 2752,
	567, 2752,
	645, 2752,
	665, 2752,
	-2, 0,
	-1, 877,
	203, 2737,
	567, 2737,
	645, 2737,
	665, 2737,
	-2, 0,
	-1, 879,
	203, 3037,
	567, 3037,
	645, 3037,
	665, 3037,
	-2, 0,
	-1, 882,
	203, 2879,
	567, 2879,
	645, 2879,
	665, 2879,
	-2, 0,
	-1, 883,
	203, 3084,
	567, 3084,
	645, 3084,
	665, 3084,
	-2, 0,
	-1, 891,
	203, 2907,
	567, 2907,
	645, 2907,
	665, 2907,
	-2, 922,
	-1, 907,
	8, 1059,
	29, 1059,
	653, 1059,
	654, 1059,
	-2, 1064,
	-1, 911,
	1, 2810,
	666, 2810,
	669, 2810,
	-2, 1064,
	-1, 912,
	1, 2866,
	666, 2866,
	669, 2866,
	-2, 1064,
	-1, 915,
	1, 2912,
	666, 2912,
	669, 2912,
	-2, 1057,
	-1, 916,
	1, 2969,
	666, 2969,
	669, 2969,
	-2, 1058,
	-1, 917,
	1, 2815,
	666, 2815,
	669, 2815,
	-2, 1061,
	-1, 918,
	1, 2723,
	666, 2723,
	669, 2723,
	-2, 1062,
	-1, 961,
	665, 2680,
	668, 2680,
	-2, 1304,
	-1, 962,
	665, 2682,
	668, 2682,
	-2, 1305,
	-1, 963,
	665, 2681,
	668, 2681,
	-2, 1306,
	-1, 964,
	668, 2604,
	-2, 1307,
	-1, 990,
	196, 332,
	-2, 0,
	-1, 1012,
	46, 2653,
	-2, 0,
	-1, 1013,
	609, 1621,
	-2, 1389,
	-1, 1030,
	4, 2082,
	21, 2082,
	22, 2082,
	23, 2082,
	24, 2082,
	25, 2082,
	26, 2082,
	27, 2082,
	28, 2082,
	30, 2082,
	31, 2082,
	37, 2082,
	41, 2082,
	43, 2082,
	44, 2082,
	45, 2082,
	47, 2082,
	48, 2082,
	49, 2082,
	50, 2082,
	51, 2082,
	52, 2082,
	53, 2082,
	54, 2082,
	55, 2082,
	57, 2082,
	58, 2082,
	59, 2082,
	60, 2082,
	62, 2082,
	63, 2082,
	64, 2082,
	65, 2082,
	66, 2082,
	67, 2082,
	68, 2082,
	69, 2082,
	73, 2082,
	74, 2082,
	75, 2082,
	76, 2082,
	78, 2082,
	79, 2082,
	80, 2082,
	84, 2082,
	85, 2082,
	86, 2082,
	87, 2082,
	88, 2082,
	89, 2082,
	90, 2082,
	91, 2082,
	94, 2082,
	95, 2082,
	96, 2082,
	97, 2082,
	98, 2082,
	99, 2082,
	101, 2082,
	103, 2082,
	104, 2082,
	105, 2082,
	106, 2082,
	107, 2082,
	108, 2082,
	109, 2082,
	111, 2082,
	112, 2082,
	113, 2082,
	115, 2082,
	116, 2082,
	117, 2082,
	125, 2082,
	126, 2082,
	127, 2082,
	128, 2082,
	129, 2082,
	131, 2082,
	132, 2082,
	133, 2082,
	134, 2082,
	136, 2082,
	137, 2082,
	138, 2082,
	139, 2082,
	141, 2082,
	142, 2082,
	143, 2082,
	144, 2082,
	146, 2082,
	147, 2082,
	148, 2082,
	151, 2082,
	152, 2082,
	153, 2082,
	155, 2082,
	156, 2082,
	157, 2082,
	159, 2082,
	160, 2082,
	161, 2082,
	163, 2082,
	164, 2082,
	165, 2082,
	166, 2082,
	167, 2082,
	168, 2082,
	169, 2082,
	170, 2082,
	171, 2082,
	172, 2082,
	173, 2082,
	174, 2082,
	175, 2082,
	176, 2082,
	177, 2082,
	178, 2082,
	179, 2082,
	180, 2082,
	182, 2082,
	188, 2082,
	189, 2082,
	190, 2082,
	191, 2082,
	195, 2082,
	197, 2082,
	198, 2082,
	199, 2082,
	201, 2082,
	202, 2082,
	205, 2082,
	206, 2082,
	207, 2082,
	208, 2082,
	209, 2082,
	210, 2082,
	211, 2082,
	212, 2082,
	213, 2082,
	214, 2082,
	215, 2082,
	216, 2082,
	217, 2082,
	218, 2082,
	220, 2082,
	221, 2082,
	223, 2082,
	224, 2082,
	226, 2082,
	227, 2082,
	228, 2082,
	229, 2082,
	230, 2082,
	231, 2082,
	232, 2082,
	233, 2082,
	234, 2082,
	235, 2082,
	236, 2082,
	238, 2082,
	239, 2082,
	240, 2082,
	242, 2082,
	243, 2082,
	244, 2082,
	245, 2082,
	246, 2082,
	247, 2082,
	251, 2082,
	252, 2082,
	253, 2082,
	254, 2082,
	257, 2082,
	258, 2082,
	259, 2082,
	260, 2082,
	261, 2082,
	262, 2082,
	264, 2082,
	266, 2082,
	267, 2082,
	268, 2082,
	270, 2082,
	272, 2082,
	273, 2082,
	274, 2082,
	276, 2082,
	280, 2082,
	281, 2082,
	282, 2082,
	283, 2082,
	284, 2082,
	285, 2082,
	286, 2082,
	288, 2082,
	289, 2082,
	290, 2082,
	292, 2082,
	293, 2082,
	294, 2082,
	296, 2082,
	297, 2082,
	300, 2082,
	301, 2082,
	302, 2082,
	303, 2082,
	304, 2082,
	305, 2082,
	306, 2082,
	309, 2082,
	310, 2082,
	311, 2082,
	312, 2082,
	314, 2082,
	315, 2082,
	316, 2082,
	317, 2082,
	318, 2082,
	319, 2082,
	320, 2082,
	321, 2082,
	322, 2082,
	323, 2082,
	324, 2082,
	325, 2082,
	326, 2082,
	327, 2082,
	328, 2082,
	329, 2082,
	330, 2082,
	331, 2082,
	332, 2082,
	333, 2082,
	334, 2082,
	335, 2082,
	336, 2082,
	338, 2082,
	340, 2082,
	341, 2082,
	342, 2082,
	343, 2082,
	344, 2082,
	345, 2082,
	346, 2082,
	347, 2082,
	348, 2082,
	349, 2082,
	350, 2082,
	351, 2082,
	352, 2082,
	353, 2082,
	354, 2082,
	355, 2082,
	356, 2082,
	358, 2082,
	359, 2082,
	361, 2082,
	363, 2082,
	364, 2082,
	365, 2082,
	366, 2082,
	368, 2082,
	369, 2082,
	370, 2082,
	371, 2082,
	372, 2082,
	375, 2082,
	377, 2082,
	380, 2082,
	381, 2082,
	382, 2082,
	385, 2082,
	386, 2082,
	387, 2082,
	389, 2082,
	391, 2082,
	392, 2082,
	393, 2082,
	394, 2082,
	395, 2082,
	396, 2082,
	397, 2082,
	398, 2082,
	399, 2082,
	400, 2082,
	401, 2082,
	402, 2082,
	403, 2082,
	404, 2082,
	406, 2082,
	407, 2082,
	408, 2082,
	409, 2082,
	410, 2082,
	411, 2082,
	412, 2082,
	413, 2082,
	414, 2082,
	415, 2082,
	416, 2082,
	417, 2082,
	418, 2082,
	419, 2082,
	420, 2082,
	422, 2082,
	423, 2082,
	424, 2082,
	426, 2082,
	427, 2082,
	428, 2082,
	429, 2082,
	430, 2082,
	431, 2082,
	432, 2082,
	433, 2082,
	434, 2082,
	435, 2082,
	436, 2082,
	437, 2082,
	438, 2082,
	439, 2082,
	441, 2082,
	443, 2082,
	444, 2082,
	445, 2082,
	451, 2082,
	452, 2082,
	453, 2082,
	455, 2082,
	456, 2082,
	457, 2082,
	458, 2082,
	459, 2082,
	460, 2082,
	461, 2082,
	462, 2082,
	463, 2082,
	464, 2082,
	465, 2082,
	467, 2082,
	468, 2082,
	469, 2082,
	470, 2082,
	471, 2082,
	473, 2082,
	474, 2082,
	475, 2082,
	476, 2082,
	477, 2082,
	478, 2082,
	479, 2082,
	481, 2082,
	482, 2082,
	483, 2082,
	484, 2082,
	485, 2082,
	486, 2082,
	487, 2082,
	488, 2082,
	489, 2082,
	490, 2082,
	491, 2082,
	492, 2082,
	493, 2082,
	494, 2082,
	495, 2082,
	496, 2082,
	498, 2082,
	499, 2082,
	500, 2082,
	501, 2082,
	502, 2082,
	503, 2082,
	505, 2082,
	506, 2082,
	507, 2082,
	508, 2082,
	509, 2082,
	510, 2082,
	511, 2082,
	513, 2082,
	514, 2082,
	515, 2082,
	516, 2082,
	517, 2082,
	518, 2082,
	519, 2082,
	520, 2082,
	522, 2082,
	524, 2082,
	525, 2082,
	526, 2082,
	527, 2082,
	528, 2082,
	529, 2082,
	530, 2082,
	531, 2082,
	532, 2082,
	533, 2082,
	534, 2082,
	535, 2082,
	536, 2082,
	537, 2082,
	538, 2082,
	539, 2082,
	540, 2082,
	541, 2082,
	542, 2082,
	543, 2082,
	544, 2082,
	546, 2082,
	547, 2082,
	549, 2082,
	550, 2082,
	552, 2082,
	553, 2082,
	554, 2082,
	555, 2082,
	556, 2082,
	557, 2082,
	559, 2082,
	560, 2082,
	562, 2082,
	563, 2082,
	564, 2082,
	565, 2082,
	566, 2082,
	568, 2082,
	570, 2082,
	571, 2082,
	572, 2082,
	573, 2082,
	574, 2082,
	575, 2082,
	576, 2082,
	577, 2082,
	579, 2082,
	580, 2082,
	581, 2082,
	582, 2082,
	583, 2082,
	584, 2082,
	585, 2082,
	588, 2082,
	589, 2082,
	590, 2082,
	591, 2082,
	592, 2082,
	593, 2082,
	594, 2082,
	595, 2082,
	596, 2082,
	598, 2082,
	601, 2082,
	602, 2082,
	603, 2082,
	604, 2082,
	605, 2082,
	606, 2082,
	608, 2082,
	609, 2082,
	610, 2082,
	611, 2082,
	612, 2082,
	613, 2082,
	614, 2082,
	615, 2082,
	616, 2082,
	617, 2082,
	618, 2082,
	619, 2082,
	620, 2082,
	625, 2082,
	626, 2082,
	627, 2082,
	628, 2082,
	629, 2082,
	630, 2082,
	-2, 0,
	-1, 1041,
	285, 587,
	-2, 0,
	-1, 1121,
	203, 1105,
	-2, 0,
	-1, 1122,
	428, 1160,
	503, 1160,
	550, 1160,
	572, 1160,
	-2, 0,
	-1, 1123,
	428, 1159,
	503, 1159,
	550, 1159,
	572, 1159,
	-2, 1077,
	-1, 1127,
	1, 1216,
	662, 1216,
	664, 1216,
	666, 1216,
	669, 1216,
	-2, 0,
	-1, 1129,
	1, 1133,
	662, 1133,
	664, 1133,
	666, 1133,
	669, 1133,
	-2, 0,
	-1, 1130,
	1, 1137,
	662, 1137,
	664, 1137,
	666, 1137,
	669, 1137,
	-2, 0,
	-1, 1131,
	1, 1293,
	196, 1293,
	662, 1293,
	664, 1293,
	666, 1293,
	669, 1293,
	-2, 0,
	-1, 1140,
	1, 1165,
	662, 1165,
	664, 1165,
	666, 1165,
	669, 1165,
	-2, 0,
	-1, 1147,
	1, 1216,
	662, 1216,
	664, 1216,
	666, 1216,
	669, 1216,
	-2, 0,
	-1, 1148,
	1, 1209,
	662, 1209,
	664, 1209,
	666, 1209,
	669, 1209,
	-2, 0,
	-1, 1149,
	1, 1218,
	662, 1218,
	664, 1218,
	666, 1218,
	669, 1218,
	-2, 0,
	-1, 1150,
	1, 1221,
	662, 1221,
	664, 1221,
	666, 1221,
	669, 1221,
	-2, 0,
	-1, 1158,
	1, 1256,
	662, 1256,
	664, 1256,
	666, 1256,
	669, 1256,
	-2, 0,
	-1, 1159,
	1, 1258,
	662, 1258,
	664, 1258,
	666, 1258,
	669, 1258,
	-2, 0,
	-1, 1164,
	1, 1286,
	662, 1286,
	664, 1286,
	666, 1286,
	669, 1286,
	-2, 0,
	-1, 1218,
	183, 1938,
	196, 1938,
	299, 1938,
	373, 1938,
	-2, 1874,
	-1, 1235,
	183, 1937,
	196, 1937,
	299, 1937,
	373, 1937,
	-2, 1871,
	-1, 1264,
	665, 2679,
	-2, 930,
	-1, 1293,
	5, 2671,
	663, 2669,
	-2, 2660,
	-1, 1301,
	5, 2692,
	663, 2689,
	-2, 2680,
	-1, 1302,
	5, 2693,
	663, 2690,
	-2, 2681,
	-1, 1310,
	665, 2677,
	-2, 2659,
	-1, 1311,
	663, 3201,
	-2, 2678,
	-1, 1334,
	5, 2694,
	38, 2694,
	135, 2694,
	645, 2694,
	661, 2694,
	664, 2694,
	665, 2694,
	668, 2694,
	-2, 3200,
	-1, 1335,
	5, 2157,
	-2, 3170,
	-1, 1336,
	5, 2158,
	-2, 3171,
	-1, 1337,
	5, 2159,
	-2, 3186,
	-1, 1338,
	5, 2160,
	-2, 3148,
	-1, 1339,
	5, 2161,
	-2, 3183,
	-1, 1340,
	5, 2169,
	-2, 3161,
	-1, 1341,
	5, 2156,
	-2, 3157,
	-1, 1342,
	5, 2156,
	-2, 3156,
	-1, 1343,
	5, 2156,
	-2, 3176,
	-1, 1344,
	5, 2167,
	-2, 3150,
	-1, 1345,
	5, 2172,
	-2, 3149,
	-1, 1346,
	5, 2174,
	-2, 3196,
	-1, 1349,
	5, 2196,
	-2, 3189,
	-1, 1350,
	5, 2188,
	-2, 3190,
	-1, 1351,
	5, 2196,
	-2, 3191,
	-1, 1352,
	5, 2192,
	-2, 3192,
	-1, 1353,
	5, 2142,
	-2, 3162,
	-1, 1354,
	5, 2143,
	-2, 3163,
	-1, 1355,
	5, 2144,
	-2, 3151,
	-1, 1383,
	5, 2179,
	-2, 3197,
	-1, 1384,
	5, 2180,
	-2, 3187,
	-1, 1385,
	5, 2181,
	610, 2181,
	-2, 3152,
	-1, 1386,
	5, 2182,
	610, 2182,
	-2, 3153,
	-1, 1424,
	663, 2689,
	-2, 2680,
	-1, 1425,
	663, 2690,
	-2, 2681,
	-1, 1533,
	203, 3084,
	567, 3084,
	645, 3084,
	665, 3084,
	-2, 0,
	-1, 1538,
	1, 906,
	666, 906,
	669, 906,
	-2, 1780,
	-1, 1585,
	1, 1775,
	666, 1775,
	669, 1775,
	-2, 1780,
	-1, 1687,
	393, 2654,
	455, 2654,
	505, 2654,
	655, 2654,
	-2, 2642,
	-1, 1695,
	203, 170,
	292, 170,
	358, 170,
	620, 170,
	-2, 3079,
	-1, 1696,
	203, 171,
	292, 171,
	358, 171,
	620, 171,
	-2, 2800,
	-1, 1697,
	203, 172,
	292, 172,
	358, 172,
	620, 172,
	-2, 2992,
	-1, 1703,
	667, 2654,
	-2, 2656,
	-1, 1706,
	25, 3016,
	241, 3016,
	-2, 0,
	-1, 1727,
	1, 1618,
	460, 1572,
	505, 1572,
	637, 1572,
	642, 1572,
	662, 1618,
	664, 1618,
	666, 1618,
	669, 1618,
	-2, 1923,
	-1, 1733,
	219, 1719,
	241, 1719,
	471, 1719,
	-2, 0,
	-1, 1801,
	46, 2652,
	-2, 1351,
	-1, 1808,
	1, 1618,
	662, 1618,
	664, 1618,
	666, 1618,
	669, 1618,
	-2, 1923,
	-1, 1811,
	437, 1388,
	609, 1388,
	-2, 486,
	-1, 1817,
	4, 1643,
	21, 1643,
	22, 1643,
	23, 1643,
	24, 1643,
	25, 1643,
	26, 1643,
	27, 1643,
	28, 1643,
	30, 1643,
	31, 1643,
	37, 1643,
	41, 1643,
	43, 1643,
	44, 1643,
	45, 1643,
	47, 1643,
	48, 1643,
	49, 1643,
	50, 1643,
	51, 1643,
	52, 1643,
	53, 1643,
	54, 1643,
	55, 1643,
	57, 1643,
	58, 1643,
	59, 1643,
	60, 1643,
	62, 1643,
	63, 1643,
	64, 1643,
	65, 1643,
	66, 1643,
	67, 1643,
	68, 1643,
	69, 1643,
	73, 1643,
	74, 1643,
	75, 1643,
	76, 1643,
	78, 1643,
	79, 1643,
	80, 1643,
	84, 1643,
	85, 1643,
	86, 1643,
	87, 1643,
	88, 1643,
	89, 1643,
	90, 1643,
	91, 1643,
	94, 1643,
	95, 1643,
	96, 1643,
	97, 1643,
	98, 1643,
	99, 1643,
	101, 1643,
	103, 1643,
	104, 1643,
	105, 1643,
	106, 1643,
	107, 1643,
	108, 1643,
	109, 1643,
	111, 1643,
	112, 1643,
	113, 1643,
	115, 1643,
	116, 1643,
	117, 1643,
	125, 1643,
	126, 1643,
	127, 1643,
	128, 1643,
	129, 1643,
	131, 1643,
	132, 1643,
	133, 1643,
	134, 1643,
	136, 1643,
	137, 1643,
	138, 1643,
	139, 1643,
	141, 1643,
	142, 1643,
	143, 1643,
	144, 1643,
	146, 1643,
	147, 1643,
	148, 1643,
	151, 1643,
	152, 1643,
	153, 1643,
	155, 1643,
	156, 1643,
	157, 1643,
	159, 1643,
	160, 1643,
	161, 1643,
	163, 1643,
	164, 1643,
	165, 1643,
	166, 1643,
	167, 1643,
	168, 1643,
	169, 1643,
	170, 1643,
	171, 1643,
	172, 1643,
	173, 1643,
	174, 1643,
	175, 1643,
	176, 1643,
	177, 1643,
	178, 1643,
	179, 1643,
	180, 1643,
	188, 1643,
	189, 1643,
	190, 1643,
	191, 1643,
	195, 1643,
	197, 1643,
	198, 1643,
	199, 1643,
	201, 1643,
	202, 1643,
	205, 1643,
	206, 1643,
	207, 1643,
	208, 1643,
	209, 1643,
	210, 1643,
	211, 1643,
	212, 1643,
	213, 1643,
	214, 1643,
	215, 1643,
	216, 1643,
	217, 1643,
	218, 1643,
	220, 1643,
	221, 1643,
	223, 1643,
	224, 1643,
	226, 1643,
	227, 1643,
	228, 1643,
	229, 1643,
	230, 1643,
	231, 1643,
	232, 1643,
	233, 1643,
	234, 1643,
	235, 1643,
	236, 1643,
	238, 1643,
	239, 1643,
	240, 1643,
	242, 1643,
	243, 1643,
	244, 1643,
	245, 1643,
	246, 1643,
	247, 1643,
	252, 1643,
	253, 1643,
	254, 1643,
	257, 1643,
	258, 1643,
	259, 1643,
	260, 1643,
	261, 1643,
	262, 1643,
	264, 1643,
	266, 1643,
	267, 1643,
	268, 1643,
	270, 1643,
	272, 1643,
	273, 1643,
	274, 1643,
	276, 1643,
	280, 1643,
	281, 1643,
	282, 1643,
	283, 1643,
	284, 1643,
	285, 1643,
	286, 1643,
	288, 1643,
	289, 1643,
	290, 1643,
	292, 1643,
	293, 1643,
	294, 1643,
	296, 1643,
	297, 1643,
	300, 1643,
	301, 1643,
	302, 1643,
	303, 1643,
	304, 1643,
	305, 1643,
	306, 1643,
	309, 1643,
	310, 1643,
	311, 1643,
	312, 1643,
	314, 1643,
	315, 1643,
	316, 1643,
	317, 1643,
	318, 1643,
	319, 1643,
	320, 1643,
	321, 1643,
	322, 1643,
	323, 1643,
	324, 1643,
	325, 1643,
	326, 1643,
	327, 1643,
	328, 1643,
	329, 1643,
	330, 1643,
	331, 1643,
	332, 1643,
	333, 1643,
	334, 1643,
	335, 1643,
	336, 1643,
	338, 1643,
	340, 1643,
	341, 1643,
	342, 1643,
	343, 1643,
	344, 1643,
	345, 1643,
	346, 1643,
	347, 1643,
	348, 1643,
	349, 1643,
	350, 1643,
	351, 1643,
	352, 1643,
	353, 1643,
	354, 1643,
	355, 1643,
	356, 1643,
	358, 1643,
	359, 1643,
	363, 1643,
	364, 1643,
	365, 1643,
	366, 1643,
	368, 1643,
	369, 1643,
	370, 1643,
	371, 1643,
	372, 1643,
	375, 1643,
	377, 1643,
	378, 1643,
	380, 1643,
	381, 1643,
	382, 1643,
	385, 1643,
	386, 1643,
	387, 1643,
	389, 1643,
	391, 1643,
	392, 1643,
	393, 1643,
	394, 1643,
	395, 1643,
	396, 1643,
	397, 1643,
	398, 1643,
	399, 1643,
	400, 1643,
	401, 1643,
	402, 1643,
	403, 1643,
	404, 1643,
	406, 1643,
	407, 1643,
	408, 1643,
	409, 1643,
	410, 1643,
	411, 1643,
	412, 1643,
	413, 1643,
	414, 1643,
	415, 1643,
	416, 1643,
	417, 1643,
	418, 1643,
	419, 1643,
	420, 1643,
	422, 1643,
	423, 1643,
	424, 1643,
	426, 1643,
	427, 1643,
	428, 1643,
	429, 1643,
	430, 1643,
	431, 1643,
	432, 1643,
	433, 1643,
	434, 1643,
	435, 1643,
	436, 1643,
	437, 1643,
	438, 1643,
	439, 1643,
	441, 1643,
	443, 1643,
	444, 1643,
	445, 1643,
	451, 1643,
	452, 1643,
	453, 1643,
	455, 1643,
	456, 1643,
	457, 1643,
	458, 1643,
	459, 1643,
	460, 1643,
	461, 1643,
	462, 1643,
	463, 1643,
	464, 1643,
	465, 1643,
	467, 1643,
	468, 1643,
	469, 1643,
	470, 1643,
	471, 1643,
	473, 1643,
	474, 1643,
	475, 1643,
	476, 1643,
	477, 1643,
	478, 1643,
	479, 1643,
	481, 1643,
	482, 1643,
	483, 1643,
	484, 1643,
	485, 1643,
	486, 1643,
	487, 1643,
	488, 1643,
	489, 1643,
	490, 1643,
	491, 1643,
	492, 1643,
	493, 1643,
	494, 1643,
	495, 1643,
	496, 1643,
	498, 1643,
	499, 1643,
	500, 1643,
	501, 1643,
	502, 1643,
	503, 1643,
	505, 1643,
	506, 1643,
	507, 1643,
	508, 1643,
	509, 1643,
	510, 1643,
	511, 1643,
	513, 1643,
	514, 1643,
	515, 1643,
	516, 1643,
	517, 1643,
	518, 1643,
	519, 1643,
	520, 1643,
	522, 1643,
	524, 1643,
	525, 1643,
	526, 1643,
	527, 1643,
	528, 1643,
	529, 1643,
	530, 1643,
	531, 1643,
	532, 1643,
	533, 1643,
	534, 1643,
	535, 1643,
	536, 1643,
	537, 1643,
	538, 1643,
	539, 1643,
	540, 1643,
	541, 1643,
	542, 1643,
	543, 1643,
	544, 1643,
	546, 1643,
	547, 1643,
	549, 1643,
	550, 1643,
	552, 1643,
	553, 1643,
	554, 1643,
	555, 1643,
	556, 1643,
	557, 1643,
	559, 1643,
	560, 1643,
	562, 1643,
	563, 1643,
	564, 1643,
	565, 1643,
	566, 1643,
	568, 1643,
	570, 1643,
	571, 1643,
	572, 1643,
	573, 1643,
	574, 1643,
	575, 1643,
	576, 1643,
	577, 1643,
	579, 1643,
	580, 1643,
	581, 1643,
	582, 1643,
	583, 1643,
	584, 1643,
	585, 1643,
	588, 1643,
	589, 1643,
	590, 1643,
	591, 1643,
	592, 1643,
	593, 1643,
	594, 1643,
	595, 1643,
	596, 1643,
	598, 1643,
	601, 1643,
	602, 1643,
	603, 1643,
	604, 1643,
	605, 1643,
	606, 1643,
	608, 1643,
	609, 1643,
	610, 1643,
	611, 1643,
	612, 1643,
	613, 1643,
	614, 1643,
	615, 1643,
	616, 1643,
	617, 1643,
	618, 1643,
	619, 1643,
	620, 1643,
	625, 1643,
	626, 1643,
	627, 1643,
	628, 1643,
	629, 1643,
	630, 1643,
	-2, 0,
	-1, 1840,
	1, 732,
	662, 732,
	664, 732,
	666, 732,
	669, 732,
	-2, 1894,
	-1, 1843,
	4, 3195,
	11, 3195,
	12, 3195,
	14, 3195,
	15, 3195,
	16, 3195,
	17, 3195,
	18, 3195,
	19, 3195,
	21, 3195,
	22, 3195,
	23, 3195,
	24, 3195,
	25, 3195,
	26, 3195,
	27, 3195,
	28, 3195,
	30, 3195,
	31, 3195,
	34, 3195,
	35, 3195,
	37, 3195,
	39, 3195,
	41, 3195,
	43, 3195,
	44, 3195,
	45, 3195,
	47, 3195,
	48, 3195,
	49, 3195,
	50, 3195,
	51, 3195,
	52, 3195,
	53, 3195,
	54, 3195,
	55, 3195,
	57, 3195,
	58, 3195,
	59, 3195,
	60, 3195,
	62, 3195,
	63, 3195,
	64, 3195,
	65, 3195,
	66, 3195,
	67, 3195,
	68, 3195,
	69, 3195,
	72, 3195,
	73, 3195,
	74, 3195,
	75, 3195,
	76, 3195,
	78, 3195,
	79, 3195,
	80, 3195,
	81, 3195,
	84, 3195,
	85, 3195,
	86, 3195,
	87, 3195,
	88, 3195,
	89, 3195,
	90, 3195,
	91, 3195,
	92, 3195,
	94, 3195,
	95, 3195,
	96, 3195,
	97, 3195,
	98, 3195,
	99, 3195,
	101, 3195,
	102, 3195,
	103, 3195,
	104, 3195,
	105, 3195,
	106, 3195,
	107, 3195,
	108, 3195,
	109, 3195,
	111, 3195,
	112, 3195,
	113, 3195,
	114, 3195,
	115, 3195,
	116, 3195,
	117, 3195,
	125, 3195,
	126, 3195,
	127, 3195,
	128, 3195,
	129, 3195,
	131, 3195,
	132, 3195,
	133, 3195,
	134, 3195,
	136, 3195,
	137, 3195,
	138, 3195,
	139, 3195,
	141, 3195,
	142, 3195,
	143, 3195,
	144, 3195,
	146, 3195,
	147, 3195,
	148, 3195,
	151, 3195,
	152, 3195,
	153, 3195,
	155, 3195,
	156, 3195,
	157, 3195,
	159, 3195,
	160, 3195,
	161, 3195,
	163, 3195,
	164, 3195,
	165, 3195,
	166, 3195,
	167, 3195,
	168, 3195,
	169, 3195,
	170, 3195,
	171, 3195,
	172, 3195,
	173, 3195,
	174, 3195,
	175, 3195,
	176, 3195,
	177, 3195,
	178, 3195,
	179, 3195,
	180, 3195,
	184, 3195,
	185, 3195,
	186, 3195,
	187, 3195,
	188, 3195,
	189, 3195,
	190, 3195,
	191, 3195,
	194, 3195,
	195, 3195,
	197, 3195,
	198, 3195,
	199, 3195,
	201, 3195,
	202, 3195,
	204, 3195,
	205, 3195,
	206, 3195,
	207, 3195,
	208, 3195,
	209, 3195,
	210, 3195,
	211, 3195,
	212, 3195,
	213, 3195,
	214, 3195,
	215, 3195,
	216, 3195,
	217, 3195,
	218, 3195,
	220, 3195,
	221, 3195,
	223, 3195,
	224, 3195,
	226, 3195,
	227, 3195,
	228, 3195,
	229, 3195,
	230, 3195,
	231, 3195,
	232, 3195,
	233, 3195,
	234, 3195,
	235, 3195,
	236, 3195,
	237, 3195,
	238, 3195,
	239, 3195,
	240, 3195,
	241, 3195,
	242, 3195,
	243, 3195,
	244, 3195,
	245, 3195,
	246, 3195,
	247, 3195,
	249, 3195,
	250, 3195,
	252, 3195,
	253, 3195,
	254, 3195,
	256, 3195,
	257, 3195,
	258, 3195,
	259, 3195,
	260, 3195,
	261, 3195,
	262, 3195,
	264, 3195,
	266, 3195,
	267, 3195,
	268, 3195,
	269, 3195,
	270, 3195,
	271, 3195,
	272, 3195,
	273, 3195,
	274, 3195,
	275, 3195,
	276, 3195,
	278, 3195,
	279, 3195,
	280, 3195,
	281, 3195,
	282, 3195,
	283, 3195,
	284, 3195,
	285, 3195,
	286, 3195,
	288, 3195,
	289, 3195,
	290, 3195,
	292, 3195,
	293, 3195,
	294, 3195,
	295, 3195,
	296, 3195,
	297, 3195,
	298, 3195,
	300, 3195,
	301, 3195,
	302, 3195,
	303, 3195,
	304, 3195,
	305, 3195,
	306, 3195,
	309, 3195,
	310, 3195,
	311, 3195,
	312, 3195,
	313, 3195,
	314, 3195,
	315, 3195,
	316, 3195,
	317, 3195,
	318, 3195,
	319, 3195,
	320, 3195,
	321, 3195,
	322, 3195,
	323, 3195,
	324, 3195,
	325, 3195,
	326, 3195,
	327, 3195,
	328, 3195,
	329, 3195,
	330, 3195,
	331, 3195,
	332, 3195,
	333, 3195,
	334, 3195,
	335, 3195,
	336, 3195,
	338, 3195,
	339, 3195,
	340, 3195,
	341, 3195,
	342, 3195,
	343, 3195,
	344, 3195,
	345, 3195,
	346, 3195,
	347, 3195,
	348, 3195,
	349, 3195,
	350, 3195,
	351, 3195,
	352, 3195,
	353, 3195,
	354, 3195,
	355, 3195,
	356, 3195,
	358, 3195,
	359, 3195,
	362, 3195,
	363, 3195,
	364, 3195,
	365, 3195,
	366, 3195,
	368, 3195,
	369, 3195,
	370, 3195,
	371, 3195,
	372, 3195,
	375, 3195,
	377, 3195,
	380, 3195,
	381, 3195,
	382, 3195,
	383, 3195,
	385, 3195,
	386, 3195,
	387, 3195,
	389, 3195,
	391, 3195,
	392, 3195,
	393, 3195,
	394, 3195,
	395, 3195,
	396, 3195,
	397, 3195,
	398, 3195,
	399, 3195,
	400, 3195,
	401, 3195,
	402, 3195,
	403, 3195,
	404, 3195,
	406, 3195,
	407, 3195,
	408, 3195,
	409, 3195,
	410, 3195,
	411, 3195,
	412, 3195,
	413, 3195,
	414, 3195,
	415, 3195,
	416, 3195,
	417, 3195,
	418, 3195,
	419, 3195,
	420, 3195,
	422, 3195,
	423, 3195,
	424, 3195,
	426, 3195,
	427, 3195,
	428, 3195,
	429, 3195,
	430, 3195,
	431, 3195,
	432, 3195,
	433, 3195,
	434, 3195,
	435, 3195,
	436, 3195,
	437, 3195,
	438, 3195,
	439, 3195,
	441, 3195,
	443, 3195,
	444, 3195,
	445, 3195,
	451, 3195,
	452, 3195,
	453, 3195,
	454, 3195,
	455, 3195,
	456, 3195,
	457, 3195,
	458, 3195,
	459, 3195,
	460, 3195,
	461, 3195,
	462, 3195,
	463, 3195,
	464, 3195,
	465, 3195,
	467, 3195,
	468, 3195,
	469, 3195,
	470, 3195,
	471, 3195,
	472, 3195,
	473, 3195,
	474, 3195,
	475, 3195,
	476, 3195,
	477, 3195,
	478, 3195,
	479, 3195,
	480, 3195,
	481, 3195,
	482, 3195,
	483, 3195,
	484, 3195,
	485, 3195,
	486, 3195,
	487, 3195,
	488, 3195,
	489, 3195,
	490, 3195,
	491, 3195,
	492, 3195,
	493, 3195,
	494, 3195,
	495, 3195,
	496, 3195,
	498, 3195,
	499, 3195,
	500, 3195,
	501, 3195,
	502, 3195,
	503, 3195,
	505, 3195,
	506, 3195,
	507, 3195,
	508, 3195,
	509, 3195,
	510, 3195,
	511, 3195,
	512, 3195,
	513, 3195,
	514, 3195,
	515, 3195,
	516, 3195,
	517, 3195,
	518, 3195,
	519, 3195,
	520, 3195,
	522, 3195,
	524, 3195,
	525, 3195,
	526, 3195,
	527, 3195,
	528, 3195,
	529, 3195,
	530, 3195,
	531, 3195,
	532, 3195,
	533, 3195,
	534, 3195,
	535, 3195,
	536, 3195,
	537, 3195,
	538, 3195,
	539, 3195,
	540, 3195,
	541, 3195,
	542, 3195,
	543, 3195,
	544, 3195,
	546, 3195,
	547, 3195,
	548, 3195,
	549, 3195,
	550, 3195,
	552, 3195,
	553, 3195,
	554, 3195,
	555, 3195,
	556, 3195,
	557, 3195,
	559, 3195,
	560, 3195,
	562, 3195,
	563, 3195,
	564, 3195,
	565, 3195,
	566, 3195,
	568, 3195,
	570, 3195,
	571, 3195,
	572, 3195,
	573, 3195,
	574, 3195,
	575, 3195,
	576, 3195,
	577, 3195,
	579, 3195,
	580, 3195,
	581, 3195,
	582, 3195,
	583, 3195,
	584, 3195,
	585, 3195,
	588, 3195,
	589, 3195,
	590, 3195,
	591, 3195,
	592, 3195,
	593, 3195,
	594, 3195,
	595, 3195,
	596, 3195,
	598, 3195,
	601, 3195,
	602, 3195,
	603, 3195,
	604, 3195,
	605, 3195,
	606, 3195,
	608, 3195,
	609, 3195,
	610, 3195,
	611, 3195,
	612, 3195,
	613, 3195,
	614, 3195,
	615, 3195,
	616, 3195,
	617, 3195,
	618, 3195,
	619, 3195,
	620, 3195,
	625, 3195,
	626, 3195,
	627, 3195,
	628, 3195,
	629, 3195,
	630, 3195,
	631, 3195,
	633, 3195,
	643, 3195,
	644, 3195,
	645, 3195,
	646, 3195,
	647, 3195,
	648, 3195,
	650, 3195,
	651, 3195,
	652, 3195,
	653, 3195,
	654, 3195,
	655, 3195,
	656, 3195,
	657, 3195,
	658, 3195,
	661, 3195,
	664, 3195,
	665, 3195,
	667, 3195,
	668, 3195,
	-2, 0,
	-1, 1848,
	203, 3037,
	567, 3037,
	645, 3037,
	665, 3037,
	-2, 0,
	-1, 1896,
	203, 1106,
	-2, 3027,
	-1, 1897,
	203, 1107,
	-2, 2808,
	-1, 1898,
	203, 1108,
	-2, 2978,
	-1, 1899,
	203, 1109,
	-2, 3107,
	-1, 1905,
	428, 1160,
	503, 1160,
	550, 1160,
	572, 1160,
	-2, 0,
	-1, 1916,
	1, 1719,
	241, 1719,
	662, 1719,
	664, 1719,
	666, 1719,
	669, 1719,
	-2, 0,
	-1, 1934,
	1, 1155,
	662, 1155,
	664, 1155,
	666, 1155,
	669, 1155,
	-2, 0,
	-1, 1935,
	1, 1199,
	662, 1199,
	664, 1199,
	666, 1199,
	669, 1199,
	-2, 0,
	-1, 1936,
	1, 1211,
	662, 1211,
	664, 1211,
	666, 1211,
	669, 1211,
	-2, 0,
	-1, 1939,
	1, 1164,
	662, 1164,
	664, 1164,
	666, 1164,
	669, 1164,
	-2, 0,
	-1, 1941,
	1, 1170,
	662, 1170,
	664, 1170,
	666, 1170,
	669, 1170,
	-2, 0,
	-1, 1944,
	1, 1166,
	662, 1166,
	664, 1166,
	666, 1166,
	669, 1166,
	-2, 0,
	-1, 1949,
	1, 1180,
	662, 1180,
	664, 1180,
	666, 1180,
	669, 1180,
	-2, 0,
	-1, 1986,
	1, 3016,
	662, 3016,
	664, 3016,
	665, 3016,
	666, 3016,
	669, 3016,
	-2, 0,
	-1, 1991,
	1, 1267,
	662, 1267,
	664, 1267,
	666, 1267,
	669, 1267,
	-2, 0,
	-1, 2011,
	183, 1937,
	196, 1937,
	299, 1937,
	373, 1937,
	-2, 1875,
	-1, 2113,
	162, 1896,
	183, 1896,
	196, 1896,
	263, 1896,
	299, 1896,
	373, 1896,
	384, 1896,
	586, 1896,
	-2, 2361,
	-1, 2174,
	664, 2536,
	-2, 0,
	-1, 2211,
	162, 1896,
	183, 1896,
	196, 1896,
	263, 1896,
	299, 1896,
	373, 1896,
	384, 1896,
	586, 1896,
	-2, 2037,
	-1, 2250,
	665, 2680,
	668, 2680,
	-2, 1294,
	-1, 2251,
	665, 2682,
	668, 2682,
	-2, 1295,
	-1, 2252,
	665, 2681,
	668, 2681,
	-2, 1296,
	-1, 2253,
	668, 2604,
	-2, 1297,
	-1, 2277,
	663, 2184,
	-2, 2172,
	-1, 2309,
	203, 3034,
	665, 3034,
	668, 3034,
	-2, 0,
	-1, 2360,
	1, 908,
	666, 908,
	669, 908,
	-2, 1780,
	-1, 2564,
	241, 326,
	-2, 2688,
	-1, 2565,
	241, 327,
	-2, 393,
	-1, 2684,
	1, 1157,
	662, 1157,
	664, 1157,
	666, 1157,
	669, 1157,
	-2, 0,
	-1, 2685,
	1, 1201,
	662, 1201,
	664, 1201,
	666, 1201,
	669, 1201,
	-2, 0,
	-1, 2686,
	1, 1213,
	662, 1213,
	664, 1213,
	666, 1213,
	669, 1213,
	-2, 0,
	-1, 2687,
	1, 1269,
	662, 1269,
	664, 1269,
	666, 1269,
	669, 1269,
	-2, 0,
	-1, 2729,
	1, 1182,
	662, 1182,
	664, 1182,
	666, 1182,
	669, 1182,
	-2, 0,
	-1, 2753,
	1, 1248,
	662, 1248,
	664, 1248,
	666, 1248,
	669, 1248,
	-2, 0,
	-1, 2803,
	478, 1964,
	479, 1964,
	-2, 2217,
	-1, 2836,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2237,
	-1, 2837,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2238,
	-1, 2838,
	102, 0,
	278, 0,
	279, 0,
	647, 0,
	648, 0,
	-2, 2239,
	-1, 2839,
	102, 0,
	278, 0,
	279, 0,
	647, 0,
	648, 0,
	-2, 2240,
	-1, 2840,
	102, 0,
	278, 0,
	279, 0,
	647, 0,
	648, 0,
	-2, 2241,
	-1, 2841,
	102, 0,
	278, 0,
	279, 0,
	647, 0,
	648, 0,
	-2, 2242,
	-1, 2842,
	102, 0,
	278, 0,
	279, 0,
	647, 0,
	648, 0,
	-2, 2243,
	-1, 2843,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2244,
	-1, 2855,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2256,
	-1, 2856,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2257,
	-1, 2857,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2258,
	-1, 2861,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2265,
	-1, 2867,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2269,
	-1, 2869,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2277,
	-1, 2870,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2278,
	-1, 2871,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2279,
	-1, 2872,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2280,
	-1, 3046,
	5, 2692,
	203, 2547,
	663, 2689,
	-2, 2680,
	-1, 3047,
	203, 2548,
	-2, 3123,
	-1, 3048,
	203, 2549,
	-2, 2905,
	-1, 3049,
	203, 2550,
	-2, 2771,
	-1, 3050,
	203, 2551,
	-2, 2836,
	-1, 3051,
	203, 2552,
	-2, 2890,
	-1, 3052,
	203, 2553,
	-2, 3030,
	-1, 3053,
	203, 2554,
	-2, 2344,
	-1, 3150,
	1, 2038,
	2, 2038,
	114, 2038,
	162, 2038,
	183, 2038,
	196, 2038,
	204, 2038,
	222, 2038,
	225, 2038,
	256, 2038,
	263, 2038,
	275, 2038,
	295, 2038,
	299, 2038,
	339, 2038,
	373, 2038,
	378, 2038,
	384, 2038,
	466, 2038,
	472, 2038,
	586, 2038,
	599, 2038,
	622, 2038,
	623, 2038,
	624, 2038,
	634, 2038,
	662, 2038,
	664, 2038,
	666, 2038,
	668, 2038,
	669, 2038,
	-2, 2037,
	-1, 3166,
	663, 2661,
	-2, 2675,
	-1, 3168,
	1, 410,
	622, 410,
	669, 410,
	-2, 1923,
	-1, 3206,
	663, 2183,
	-2, 2173,
	-1, 3237,
	38, 2692,
	135, 2692,
	645, 2692,
	661, 2692,
	664, 2692,
	665, 2692,
	668, 2692,
	-2, 2689,
	-1, 3238,
	38, 2693,
	135, 2693,
	645, 2693,
	661, 2693,
	664, 2693,
	665, 2693,
	668, 2693,
	-2, 2690,
	-1, 3468,
	1, 1618,
	460, 1572,
	505, 1572,
	637, 1572,
	642, 1572,
	662, 1618,
	664, 1618,
	666, 1618,
	669, 1618,
	-2, 1923,
	-1, 3630,
	1, 1252,
	662, 1252,
	664, 1252,
	666, 1252,
	669, 1252,
	-2, 0,
	-1, 3658,
	379, 1967,
	-2, 3184,
	-1, 3659,
	379, 1968,
	-2, 3013,
	-1, 3663,
	478, 2615,
	479, 2615,
	-2, 2342,
	-1, 3664,
	478, 2619,
	479, 2619,
	-2, 2343,
	-1, 3665,
	478, 2616,
	479, 2616,
	-2, 2342,
	-1, 3666,
	478, 2620,
	479, 2620,
	-2, 2343,
	-1, 3680,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2267,
	-1, 3681,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2271,
	-1, 3687,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2273,
	-1, 3936,
	1, 903,
	662, 903,
	664, 903,
	666, 903,
	669, 903,
	-2, 1780,
	-1, 4163,
	46, 2652,
	-2, 1352,
	-1, 4168,
	1, 1618,
	662, 1618,
	664, 1618,
	666, 1618,
	669, 1618,
	-2, 1923,
	-1, 4284,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2275,
	-1, 4291,
	269, 0,
	271, 0,
	362, 0,
	-2, 2294,
	-1, 4359,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2323,
	-1, 4360,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2324,
	-1, 4361,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2325,
	-1, 4365,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2329,
	-1, 4366,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2330,
	-1, 4367,
	14, 0,
	15, 0,
	16, 0,
	643, 0,
	644, 0,
	645, 0,
	-2, 2331,
	-1, 4419,
	663, 2662,
	-2, 2676,
	-1, 4665,
	665, 3302,
	-2, 1849,
	-1, 4725,
	269, 0,
	271, 0,
	362, 0,
	-2, 2295,
	-1, 4728,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2298,
	-1, 4729,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2300,
	-1, 4859,
	665, 2677,
	-2, 1653,
	-1, 5037,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2299,
	-1, 5038,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 2301,
	-1, 5049,
	269, 0,
	-2, 2334,
	-1, 5254,
	269, 0,
	-2, 2335,
	-1, 5487,
	54, 0,
	237, 0,
	298, 0,
	512, 0,
	631, 0,
	646, 0,
	-2, 3147,
}

const sqlPrivate = 57344

const sqlLast = 163749

var sqlAct = [...]int16{
	317, 5676, 4150, 5706, 1514, 5685, 5652, 5418, 5617, 5300,
	5542, 3426, 3543, 5308, 5558, 3820, 5114, 1039, 6, 3388,
	5486, 1040, 10, 5351, 5535, 5500, 5473, 4, 5369, 5631,
	4149, 5432, 5456, 5429, 5408, 1570, 4637, 5501, 5417, 5567,
	3296, 1244, 203, 5222, 5502, 1417, 2561, 5199, 4708, 1428,
	5186, 2605, 5448, 2420, 5172, 5498, 4324, 5485, 4988, 1709,
	5258, 4993, 3893, 4951, 4982, 5119, 3963, 4276, 2813, 5024,
	2656, 4915, 5058, 5205, 2391, 3512, 4186, 2217, 5336, 4657,
	3230, 4649, 4559, 2654, 4085, 4836, 2318, 1505, 963, 4856,
	3563, 3672, 3297, 813, 4998, 1866, 3078, 2264, 2884, 3404,
	4180, 1236, 4134, 4603, 1407, 2020, 4139, 4620, 4605, 2631,
	3966, 2823, 4409, 2342, 888, 3955, 1591, 963, 5054, 2429,
	3969, 4213, 3500, 4215, 2814, 4141, 3532, 3950, 1292, 4131,
	4112, 3427, 4111, 4138, 3869, 1684, 4422, 3527, 3952, 3529,
	3843, 3951, 3801, 4119, 3876, 3180, 2618, 4707, 3826, 3596,
	203, 1043, 3835, 1864, 3824, 825, 3558, 4764, 3544, 3475,
	2186, 2531, 2550, 5543, 2479, 3990, 2548, 926, 3417, 4132,
	1743, 3151, 2441, 1738, 3860, 2183, 2246, 4386, 1739, 3800,
	2820, 3236, 1506, 2121, 2091, 2652, 3557, 2160, 2897, 3656,
	4035, 5259, 1509, 1803, 2602, 958, 2549, 3143, 2525, 2962,
	4855, 3142, 1034, 884, 3437, 2506, 2529, 1913, 2502, 2510,
	2412, 3513, 1297, 1511, 2408, 1553, 2340, 3229, 1585, 1302,
	311, 3228, 1481, 1408, 3186, 3123, 3075, 2387, 2953, 2206,
	2187, 2964, 2881, 1572, 1293, 2802, 2390, 2785, 3181, 1484,
	1491, 310, 2783, 1711, 2203, 1841, 3537, 1806, 1799, 2601,
	2534, 3321, 861, 3322, 1116, 5686, 3282, 2380, 5370, 1540,
	1487, 965, 1458, 2956, 5453, 4142, 964, 1495, 1461, 2155,
	1446, 3132, 1411, 3090, 1390, 2196, 2934, 1265, 1425, 2021,
	3008, 214, 3042, 2022, 2105, 869, 2784, 215, 2786, 1949,
	965, 2699, 2558, 1247, 904, 964, 1934, 1832, 1013, 1694,
	3145, 844, 5559, 129, 880, 115, 2539, 1565, 969, 1839,
	5618, 1278, 818, 51, 1768, 50, 1568, 48, 39, 37,
	1413, 1388, 1584, 35, 2027, 3710, 2002, 1749, 3704, 972,
	814, 1138, 827, 2320, 2320, 4400, 125, 969, 4401, 953,
	5722, 2320, 2320, 2320, 3122, 5709, 3822, 2320, 5695, 4092,
	3894, 5693, 5692, 5496, 1014, 3122, 3122, 800, 972, 5495,
	5086, 823, 5083, 2910, 2911, 2912, 2929, 2930, 2931, 897,
	900, 5651, 5649, 5589, 5544, 5118, 5118, 2570, 5545, 5526,
	5078, 5082, 5081, 3122, 2932, 2037, 2038, 5524, 5077, 5521,
	4975, 3122, 4195, 5522, 2352, 5518, 5483, 5482, 5481, 5519,
	2570, 2570, 3568, 5471, 5469, 1240, 5460, 5118, 5118, 2068,
	5118, 5459, 5427, 5076, 5391, 5118, 5118, 2040, 3197, 5384,
	5383, 2093, 4196, 3122, 3122, 5374, 1405, 5350, 5347, 2570,
	5329, 2570, 5118, 5256, 4941, 5236, 5201, 3197, 5137, 4682,
	4478, 2922, 2570, 5136, 5125, 5124, 2093, 2570, 2570, 5118,
	5117, 2918, 5065, 5039, 5118, 2039, 2570, 3197, 1549, 5008,
	4976, 4910, 1940, 3568, 4092, 3122, 2059, 1229, 4883, 4800,
	1549, 3886, 3122, 4779, 3771, 3772, 2056, 4780, 4727, 4673,
	4667, 2349, 3197, 4208, 4208, 1219, 4617, 2606, 3913, 2349,
	4618, 1218, 2653, 4509, 4477, 4415, 4413, 4510, 4478, 4416,
	4414, 1240, 4092, 4393, 4390, 2037, 2038, 3122, 3907, 3222,
	1800, 4308, 1423, 2352, 2349, 2570, 4304, 4207, 3916, 3819,
	3122, 4208, 3917, 3122, 3817, 3092, 3812, 2570, 3818, 2068,
	3122, 3505, 1443, 2923, 2924, 2925, 2926, 2040, 1287, 126,
	3811, 1235, 3762, 2917, 3122, 3760, 3763, 3752, 2352, 3761,
	3750, 3753, 1876, 1241, 3122, 3786, 3719, 3192, 2062, 2063,
	2064, 2065, 3720, 3721, 3671, 3567, 2093, 3122, 2045, 3568,
	1391, 1391, 2349, 3554, 3553, 2039, 3261, 2641, 2641, 3196,
	3122, 3178, 3170, 3197, 3122, 3122, 2570, 3771, 3772, 3121,
	2640, 5392, 1392, 3122, 2641, 1394, 1742, 1395, 1453, 2959,
	5260, 2352, 5251, 3771, 3772, 5239, 3789, 3790, 3791, 3568,
	2352, 4390, 3091, 275, 4986, 4941, 2349, 4884, 4682, 4619,
	4612, 3395, 2434, 2067, 2069, 3281, 4723, 2927, 2928, 2366,
	2569, 3272, 2346, 1444, 3505, 4081, 2319, 3414, 3187, 2181,
	2333, 1444, 1736, 4527, 4279, 4246, 2204, 126, 2518, 1915,
	3162, 4197, 2054, 2055, 3161, 3160, 1751, 3777, 3159, 3158,
	1396, 1393, 2920, 1228, 275, 1227, 1226, 277, 1225, 2037,
	2038, 4198, 2070, 2071, 2072, 2081, 2082, 2083, 1224, 1223,
	1222, 1221, 1217, 1216, 3786, 1215, 1214, 2060, 2045, 3122,
	3622, 4784, 2074, 2068, 1213, 1212, 1211, 1210, 1209, 2960,
	1208, 2040, 1207, 1206, 1205, 1204, 1203, 1202, 1201, 1300,
	1200, 1199, 2087, 2037, 2038, 1198, 1857, 1197, 277, 1196,
	276, 3771, 3772, 1750, 1195, 1182, 1114, 2321, 2321, 1113,
	2093, 1112, 1111, 1110, 1109, 2321, 2321, 2321, 1108, 2039,
	269, 2321, 1220, 2067, 2069, 2040, 1751, 3771, 3772, 270,
	2059, 1107, 1106, 1105, 1104, 1242, 1103, 1102, 1101, 1100,
	2056, 1099, 108, 1098, 1097, 1096, 1095, 1094, 2090, 1093,
	3777, 276, 3771, 3772, 1092, 1091, 3787, 1090, 1089, 216,
	1088, 1763, 5000, 2039, 1299, 3709, 3777, 1087, 2961, 1086,
	2958, 1085, 3771, 3772, 1084, 3789, 3790, 3791, 1083, 1082,
	1081, 1080, 1079, 1078, 1077, 1076, 1065, 2060, 1064, 1063,
	1058, 1057, 1050, 1049, 1048, 4722, 1409, 1033, 2349, 1032,
	1031, 989, 4630, 4739, 2349, 2349, 988, 2349, 2066, 2921,
	216, 3771, 3772, 4448, 3789, 3790, 3791, 987, 986, 985,
	976, 975, 2062, 2063, 2064, 2065, 2349, 2349, 974, 973,
	935, 934, 2045, 4405, 2061, 3091, 895, 2090, 894, 893,
	875, 3793, 1516, 1302, 305, 304, 303, 302, 301, 300,
	299, 298, 297, 3786, 296, 295, 294, 293, 292, 291,
	1757, 290, 289, 288, 287, 2991, 286, 4195, 2090, 3787,
	1302, 1302, 1302, 285, 284, 2078, 2045, 2092, 283, 2088,
	282, 281, 280, 279, 3777, 3787, 278, 2067, 2069, 1445,
	1751, 2721, 3786, 3505, 4250, 4209, 3872, 1751, 3815, 3732,
	3289, 3715, 2092, 1455, 1742, 3706, 3624, 2084, 3599, 2085,
	3777, 3485, 2352, 3248, 3201, 3167, 2054, 2055, 5109, 1594,
	2349, 2346, 2319, 3788, 1302, 1276, 2778, 1714, 3149, 2207,
	1302, 1302, 2163, 1444, 1516, 3777, 2076, 275, 1727, 2162,
	2775, 2163, 2963, 3816, 1557, 1558, 1559, 1544, 2162, 2989,
	2090, 2060, 2975, 2349, 2061, 3777, 2973, 3289, 2393, 1302,
	2034, 1302, 2351, 1302, 2230, 2132, 2090, 1420, 2123, 2166,
	3091, 1714, 2907, 2908, 2909, 2933, 2919, 2913, 2161, 2915,
	2916, 2914, 2901, 2902, 2903, 2904, 2905, 2906, 2003, 1745,
	5002, 277, 1762, 1544, 3777, 1516, 1561, 1427, 5511, 1808,
	2086, 2057, 2053, 3787, 2050, 2048, 2049, 2041, 2042, 2043,
	2044, 2046, 2047, 1704, 5510, 5507, 5484, 1714, 2130, 5468,
	5355, 2075, 2092, 5263, 1714, 1740, 5248, 275, 5242, 3787,
	3793, 3522, 2090, 1302, 5240, 1302, 3788, 5053, 1699, 1404,
	1714, 3794, 1419, 1444, 276, 5006, 4985, 4809, 3540, 1302,
	4762, 1302, 3788, 4761, 4755, 4754, 4753, 4746, 4745, 203,
	203, 1942, 4743, 4738, 269, 275, 1536, 4735, 4734, 3793,
	4616, 4611, 1880, 270, 3787, 1490, 1494, 2957, 1502, 170,
	4452, 277, 1538, 4515, 2090, 1813, 1816, 4451, 4450, 4418,
	4631, 1756, 2066, 3782, 3780, 3781, 3773, 3774, 3775, 3776,
	3778, 3779, 1714, 216, 2037, 2038, 4380, 2621, 4379, 4378,
	2090, 3210, 2123, 3787, 4300, 1835, 4295, 3867, 2061, 277,
	3808, 3799, 1861, 1302, 3770, 1725, 1302, 2041, 2042, 2043,
	2044, 2046, 2047, 3767, 276, 2090, 2040, 1522, 2577, 1243,
	3287, 1587, 3766, 1681, 1686, 3764, 3759, 3758, 3757, 3754,
	2079, 2124, 3751, 2122, 269, 2090, 3731, 3714, 3707, 3705,
	3555, 3150, 2946, 270, 1530, 2034, 2033, 969, 3771, 3772,
	3788, 1737, 276, 4525, 2039, 5715, 3771, 3772, 5639, 2125,
	1564, 2575, 5638, 5557, 5555, 1801, 2092, 1429, 972, 4326,
	1689, 275, 269, 216, 2090, 1567, 3788, 5419, 275, 1577,
	1578, 270, 4631, 1421, 1881, 5334, 1575, 1576, 1721, 3773,
	3774, 3775, 3776, 3778, 3779, 3783, 3784, 3785, 5320, 3899,
	1844, 1846, 3782, 3780, 3781, 3773, 3774, 3775, 3776, 3778,
	3779, 216, 5316, 1302, 1302, 1302, 1302, 1302, 1302, 1302,
	1302, 3788, 5315, 5314, 5294, 277, 3813, 5293, 5291, 5262,
	1544, 5261, 277, 5234, 2887, 5220, 275, 3286, 5217, 5216,
	1842, 5197, 5196, 5133, 5104, 5051, 1302, 5034, 5033, 2077,
	4971, 4967, 1302, 4964, 4942, 5001, 4760, 4683, 4513, 4512,
	3788, 2051, 2052, 2058, 2080, 2057, 2053, 2045, 2050, 2048,
	2049, 2041, 2042, 2043, 2044, 2046, 2047, 2893, 276, 4493,
	2012, 1833, 4749, 3524, 4492, 276, 4748, 4490, 3286, 3861,
	277, 2184, 4396, 4383, 3286, 4290, 2110, 4210, 269, 4172,
	4162, 4061, 4001, 3968, 3901, 269, 3736, 270, 3735, 3730,
	3696, 3499, 3497, 3314, 270, 1958, 2169, 2043, 2044, 2046,
	2047, 2112, 3781, 3773, 3774, 3775, 3776, 3778, 3779, 2168,
	2167, 3777, 1886, 1241, 2164, 275, 2156, 216, 2154, 3777,
	3208, 1856, 3207, 276, 216, 3164, 3782, 3780, 3781, 3773,
	3774, 3775, 3776, 3778, 3779, 3157, 3120, 1875, 1302, 1302,
	1302, 2971, 126, 269, 1302, 2109, 275, 2008, 2324, 2229,
	2185, 1425, 270, 1425, 3773, 3774, 3775, 3776, 3778, 3779,
	2178, 2177, 2176, 2175, 3783, 3784, 3785, 2174, 1594, 277,
	275, 3782, 3780, 3781, 3773, 3774, 3775, 3776, 3778, 3779,
	1302, 2173, 216, 2252, 1516, 2172, 2171, 2170, 2151, 2150,
	2149, 2282, 2252, 2148, 1516, 1906, 203, 1516, 1714, 2147,
	277, 2035, 2146, 3783, 3784, 3785, 2145, 2144, 1943, 2143,
	3782, 3780, 3781, 3773, 3774, 3775, 3776, 3778, 3779, 2142,
	2141, 2140, 276, 5265, 277, 2013, 2139, 2138, 2137, 2136,
	2125, 2111, 2108, 2103, 1529, 1450, 1439, 5264, 3787, 4974,
	2193, 4805, 269, 2004, 4731, 4447, 4412, 2090, 4399, 2009,
	3718, 270, 3155, 276, 3199, 1838, 5079, 4807, 126, 4446,
	126, 2124, 126, 2017, 1516, 2016, 1219, 3897, 2106, 4201,
	1302, 2225, 1218, 269, 3389, 4886, 2245, 276, 5630, 2165,
	4004, 216, 270, 1554, 2011, 1556, 2240, 2990, 2239, 2037,
	2038, 5324, 3771, 3772, 1302, 3523, 1571, 269, 5317, 2190,
	2191, 2214, 1594, 2030, 2031, 5005, 270, 4927, 2331, 4926,
	4925, 1571, 216, 4924, 2336, 1242, 126, 126, 2338, 2090,
	3864, 2040, 1571, 2386, 4923, 2343, 4922, 275, 2384, 2345,
	1571, 4885, 126, 2348, 126, 2423, 3539, 1571, 4613, 5108,
	2233, 4786, 4691, 4690, 1571, 4689, 4688, 4687, 126, 4686,
	126, 4685, 2157, 2158, 4684, 5206, 2255, 1544, 1569, 2039,
	4479, 2253, 1241, 1555, 2235, 2255, 2358, 4403, 2305, 4402,
	2253, 2988, 2265, 2492, 2974, 4212, 4211, 275, 2972, 4094,
	4093, 277, 2357, 2215, 4090, 1423, 2237, 1423, 5503, 5585,
	5583, 4634, 275, 2205, 275, 1549, 2146, 2260, 2959, 5499,
	3340, 1549, 2207, 969, 2163, 3788, 4277, 2311, 2238, 4550,
	2314, 2162, 969, 3756, 2361, 2006, 3755, 2372, 3435, 126,
	3678, 1549, 5243, 1905, 972, 2212, 3325, 1193, 5241, 1552,
	1391, 277, 4508, 972, 276, 4051, 2131, 3970, 1838, 2146,
	4152, 4473, 4151, 4474, 5286, 1959, 277, 2515, 277, 2334,
	2551, 2182, 4624, 5287, 269, 2673, 2134, 2606, 1914, 5200,
	1403, 5532, 4983, 270, 3564, 4120, 4931, 1915, 2224, 5287,
	2223, 2209, 2222, 2220, 2219, 1714, 1714, 2354, 2218, 2552,
	2954, 4610, 4556, 1194, 276, 4547, 1594, 4086, 4518, 1241,
	4241, 2622, 2360, 216, 3934, 2743, 2650, 2261, 2960, 276,
	5055, 276, 2585, 3822, 269, 4328, 2041, 2042, 2043, 2044,
	2046, 2047, 1714, 270, 3206, 5698, 3402, 3724, 3323, 269,
	5508, 269, 2179, 1220, 2527, 3391, 2159, 4169, 270, 2614,
	270, 1812, 1732, 2356, 3411, 1525, 1486, 1837, 5523, 5520,
	2498, 1714, 4902, 216, 4898, 4191, 2107, 3408, 4083, 4484,
	2491, 2487, 1550, 2496, 3598, 2490, 3406, 1890, 216, 2507,
	216, 5309, 4989, 5426, 2113, 3973, 4503, 4082, 2119, 3536,
	2562, 2567, 3775, 3776, 3778, 3779, 3780, 3781, 3773, 3774,
	3775, 3776, 3778, 3779, 2501, 1869, 1714, 2961, 1714, 2958,
	1714, 2501, 5128, 4103, 5100, 5586, 5131, 2511, 5509, 5127,
	2398, 5587, 2399, 5106, 2379, 4271, 2501, 2535, 1714, 1714,
	4870, 3938, 2406, 2407, 1246, 2036, 2400, 2401, 4867, 1027,
	5160, 4872, 1714, 2404, 2405, 5622, 4569, 2481, 5164, 2428,
	1782, 1191, 2486, 3898, 1714, 2516, 2440, 1714, 1714, 1714,
	1714, 1714, 2645, 5564, 5677, 3262, 1957, 1556, 2434, 1178,
	2378, 2377, 2735, 3285, 1571, 2386, 5708, 5325, 1189, 5153,
	1187, 1956, 1734, 2252, 2733, 3477, 2373, 2554, 2555, 5139,
	3283, 1835, 933, 2633, 4934, 2633, 930, 4933, 4567, 2793,
	2634, 2610, 4566, 4558, 1546, 4533, 1302, 2674, 2499, 2208,
	2484, 2211, 4065, 126, 2462, 1245, 2556, 969, 2434, 1556,
	3285, 2568, 4568, 4532, 4530, 4529, 4517, 4476, 2488, 1775,
	2754, 4475, 4109, 4108, 4053, 2615, 3885, 3283, 972, 3729,
	1837, 4088, 2628, 3728, 2432, 1555, 3727, 1302, 3726, 2671,
	3682, 4003, 3433, 2497, 2483, 2536, 1239, 1028, 3432, 2505,
	3413, 3401, 2480, 2791, 2648, 3393, 3382, 867, 3381, 3369,
	3358, 1888, 3356, 3351, 3350, 2482, 3330, 2680, 3329, 3290,
	3179, 2963, 2658, 2868, 1302, 2541, 1302, 2540, 2541, 4087,
	2540, 2544, 1551, 1302, 1955, 2262, 1302, 1555, 2282, 2282,
	1594, 2381, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,
	1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,
	1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,
	1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 2589, 1302,
	2638, 1302, 1302, 1302, 1302, 2625, 2582, 3970, 1938, 1842,
	4049, 1842, 2789, 2552, 2777, 1547, 2255, 1238, 2606, 2705,
	3940, 2253, 5129, 4866, 5101, 1548, 2500, 1302, 4614, 3004,
	2617, 1302, 1302, 2500, 2513, 2512, 5623, 2746, 867, 1302,
	1420, 4868, 1420, 1302, 2630, 1302, 1302, 2795, 2500, 2782,
	3003, 2010, 2664, 1594, 5565, 2636, 2825, 3200, 5237, 1302,
	1302, 1302, 1302, 969, 2180, 1302, 1302, 1302, 1302, 1302,
	1302, 1302, 1302, 1530, 3533, 2642, 2957, 2643, 1184, 4243,
	1539, 5679, 5678, 2685, 972, 4828, 1025, 4084, 1024, 2792,
	2383, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,
	4817, 1302, 1241, 2793, 1241, 5625, 1302, 3346, 4887, 3771,
	3772, 1786, 3789, 3790, 3791, 1419, 2047, 1419, 1425, 3779,
	2604, 1573, 1574, 2684, 2773, 1594, 3344, 2935, 2936, 2695,
	1937, 2382, 4294, 5032, 1425, 2706, 1573, 1574, 1240, 2821,
	2822, 2935, 2951, 1825, 1735, 1824, 1472, 2388, 2389, 1883,
	1302, 1594, 2686, 2669, 1907, 1573, 1574, 1823, 4827, 1822,
	3327, 2729, 1573, 1574, 2954, 1777, 1550, 2791, 2999, 1573,
	1574, 2790, 2819, 2807, 2494, 2478, 2001, 2767, 866, 2806,
	1794, 3269, 3299, 1516, 2692, 2433, 2493, 3045, 3045, 3059,
	3786, 2935, 2818, 2883, 3079, 3081, 2883, 4050, 3370, 3634,
	2753, 3194, 3089, 2495, 2750, 5163, 3380, 924, 3571, 4864,
	5626, 3216, 3654, 2764, 2899, 3169, 2779, 2430, 1550, 2781,
	2794, 2780, 2787, 2005, 3137, 203, 1549, 5302, 2950, 1219,
	3617, 5586, 1219, 1219, 1516, 2810, 3410, 2489, 2811, 2812,
	3313, 1954, 2492, 1971, 2741, 3238, 3165, 1915, 1977, 1030,
	1029, 3372, 2727, 2689, 3771, 3772, 2426, 3789, 3790, 3791,
	1915, 1938, 1528, 2891, 1778, 2751, 3129, 2537, 4487, 3669,
	2889, 3185, 3409, 1516, 1516, 1884, 1421, 3256, 1421, 2683,
	4869, 5185, 2214, 5655, 2542, 3407, 1903, 2485, 3937, 866,
	2015, 2431, 3777, 5624, 3405, 2752, 3371, 3418, 1546, 3312,
	2766, 2635, 868, 3374, 1242, 3302, 1242, 2693, 3001, 2895,
	4161, 3362, 4255, 3002, 1594, 1975, 3005, 4514, 3006, 3007,
	4595, 2948, 3637, 2427, 3218, 2494, 5687, 4254, 1807, 2543,
	922, 3619, 5628, 2792, 1889, 3786, 1935, 2545, 2963, 3276,
	1237, 3243, 3128, 5634, 5277, 4500, 1074, 3247, 3189, 3373,
	1546, 3182, 1423, 3136, 3251, 3141, 2538, 4317, 3147, 3148,
	5304, 3258, 5276, 2282, 3284, 1241, 5505, 3793, 1423, 1544,
	3041, 3070, 3212, 3235, 3054, 1241, 3085, 4932, 3083, 1241,
	931, 4531, 4596, 1937, 3118, 3119, 1551, 2225, 4528, 1805,
	4457, 4456, 3134, 3135, 3130, 969, 3193, 969, 3943, 3265,
	2734, 3188, 1391, 126, 2165, 1936, 2212, 931, 46, 1186,
	3213, 3787, 2732, 868, 3227, 2790, 972, 3668, 972, 2491,
	3202, 931, 3267, 3259, 2490, 931, 4455, 4441, 812, 2195,
	2384, 2384, 4594, 5031, 4862, 4440, 3154, 3777, 1551, 1594,
	3291, 3379, 3191, 4439, 2879, 5177, 4816, 3221, 4247, 1547,
	969, 1714, 4865, 3254, 4021, 807, 4115, 4107, 4047, 1548,
	3326, 3412, 3253, 3357, 3209, 1498, 3268, 3349, 3328, 3636,
	1241, 972, 1951, 4498, 1516, 3241, 2877, 5598, 3468, 2388,
	2389, 2157, 2158, 3275, 4314, 2774, 1220, 3257, 3266, 1220,
	1220, 5609, 2090, 3260, 3288, 1302, 1302, 1490, 1302, 1494,
	3246, 1547, 3633, 3220, 3215, 3224, 3252, 5657, 3223, 3347,
	5608, 1548, 3793, 2763, 2574, 2573, 4022, 3177, 3245, 2199,
	3771, 3772, 5572, 3789, 3790, 3791, 3301, 4248, 2037, 2038,
	1516, 2963, 4713, 3332, 3511, 1785, 3661, 3662, 3508, 4188,
	4712, 4116, 3387, 4293, 3333, 3263, 3627, 2885, 1304, 5536,
	5627, 3403, 2068, 4947, 1811, 1999, 3787, 3214, 4113, 5506,
	2040, 2320, 1714, 2547, 3183, 4043, 4020, 1242, 923, 3317,
	1471, 2202, 3693, 4315, 1714, 2865, 1714, 2113, 3788, 2519,
	5403, 2113, 1714, 3331, 2526, 1972, 4189, 5092, 3520, 2093,
	2197, 3304, 3307, 1714, 1714, 4044, 3547, 3348, 2039, 3294,
	2765, 3786, 203, 2434, 3691, 5310, 4042, 2691, 3559, 3377,
	2200, 3419, 4863, 5388, 3383, 3277, 3278, 3184, 5632, 3279,
	3280, 1516, 3635, 1516, 4041, 2546, 925, 1185, 4045, 3430,
	921, 2873, 4038, 3390, 3434, 3574, 3575, 2090, 1347, 3469,
	3470, 1807, 3353, 1887, 4088, 1169, 1302, 3582, 3583, 3584,
	3585, 3586, 3366, 3367, 2198, 2874, 1409, 5303, 3562, 3561,
	1549, 3376, 2875, 3483, 3375, 3939, 2880, 3385, 3480, 3565,
	1233, 3392, 2211, 3482, 4188, 5504, 1969, 3399, 1714, 2432,
	5475, 3515, 5476, 3338, 3339, 3341, 3342, 3343, 3345, 3581,
	1295, 3503, 3300, 3837, 977, 865, 3684, 5550, 1885, 2882,
	3957, 4851, 1916, 3777, 3423, 3424, 3425, 2520, 5551, 1733,
	969, 2045, 1549, 3985, 4012, 1448, 5178, 2495, 3556, 1302,
	3472, 984, 126, 3788, 3991, 1302, 1302, 3594, 2728, 3566,
	5176, 972, 3478, 4961, 2152, 3572, 1973, 5633, 5174, 4844,
	1302, 3783, 3784, 3785, 3285, 3168, 3895, 2963, 3782, 3780,
	3781, 3773, 3774, 3775, 3776, 3778, 3779, 2890, 2863, 3688,
	2688, 3305, 2866, 3551, 3569, 1075, 2067, 2069, 1527, 1170,
	3504, 3576, 1970, 3577, 3984, 1976, 4013, 5571, 3793, 5635,
	2493, 3993, 3473, 1302, 1302, 3519, 2682, 2201, 4098, 1302,
	3689, 5173, 1902, 1904, 3694, 2542, 2014, 4845, 3639, 2516,
	3641, 3542, 1302, 1302, 3550, 1842, 3602, 3552, 1302, 1302,
	4114, 4709, 2455, 5026, 1302, 3531, 2424, 2437, 3591, 2862,
	5386, 5175, 3787, 5044, 1169, 4499, 4011, 1420, 5596, 5437,
	2060, 4904, 3471, 808, 3600, 3607, 3601, 3609, 4794, 3611,
	2543, 3613, 3614, 1420, 1974, 4795, 5653, 833, 2945, 1233,
	2102, 3992, 3734, 3133, 3922, 4046, 5658, 3146, 3549, 1302,
	1302, 1302, 5641, 3606, 3623, 1302, 1240, 2511, 5387, 3478,
	4330, 3386, 4973, 2876, 2456, 1302, 4698, 4714, 4937, 2438,
	2199, 4804, 4581, 2878, 4442, 3685, 3783, 3784, 3785, 1454,
	4273, 1452, 1302, 3782, 3780, 3781, 3773, 3774, 3775, 3776,
	3778, 3779, 1419, 2090, 3652, 2516, 5352, 4851, 4793, 5443,
	5368, 2090, 3660, 5219, 3836, 1921, 4936, 4935, 1419, 4655,
	4176, 4031, 3649, 4029, 2454, 809, 1066, 3958, 3911, 2436,
	1175, 1174, 2202, 2024, 3360, 3176, 2600, 2192, 1451, 3651,
	1442, 799, 5168, 3650, 4629, 4844, 2807, 2523, 1170, 4837,
	2025, 3131, 2806, 1067, 3655, 2321, 3712, 3713, 3708, 2740,
	2433, 3716, 2509, 5537, 5025, 978, 979, 4758, 4835, 1494,
	3670, 2200, 4962, 4710, 1433, 5549, 3677, 2809, 4839, 1171,
	810, 2435, 811, 2374, 1302, 1302, 1302, 1302, 3877, 3788,
	5126, 1435, 2508, 1302, 1302, 1302, 5072, 2061, 1302, 5570,
	5345, 3690, 4536, 4845, 5663, 4369, 4576, 4030, 5228, 2521,
	3361, 3692, 1302, 1425, 1594, 4101, 4574, 2024, 3683, 1430,
	4102, 4313, 4840, 3964, 5284, 4656, 4562, 4537, 4485, 4841,
	2019, 2503, 126, 2864, 4483, 126, 3717, 126, 4177, 4167,
	4846, 1302, 3960, 1302, 3521, 2371, 1051, 3514, 3501, 2023,
	4838, 2629, 1425, 2623, 3829, 3830, 2616, 5337, 2608, 2522,
	2584, 2581, 3422, 1421, 1779, 2092, 2431, 1436, 1463, 874,
	1594, 5353, 5338, 1056, 4384, 5213, 5409, 4274, 4469, 1421,
	3289, 5371, 3306, 4843, 2742, 1425, 2024, 2367, 1594, 3365,
	126, 4658, 4994, 126, 3810, 4715, 1437, 3498, 2504, 126,
	1516, 3723, 4847, 4579, 1473, 5192, 4578, 5339, 5190, 1175,
	1174, 2799, 3334, 5103, 1172, 3976, 5027, 3972, 2282, 3971,
	981, 980, 1594, 2025, 2513, 2512, 3675, 3653, 2670, 2369,
	3870, 2662, 1516, 2023, 4435, 4398, 3841, 3831, 3834, 3833,
	2651, 4577, 1434, 1516, 1241, 1173, 2579, 3914, 2201, 3238,
	2282, 1939, 3783, 3784, 3785, 3866, 1945, 1944, 1171, 3782,
	3780, 3781, 3773, 3774, 3775, 3776, 3778, 3779, 2048, 2049,
	2041, 2042, 2043, 2044, 2046, 2047, 2370, 3175, 5341, 126,
	4032, 1302, 4952, 3174, 3173, 3363, 3172, 3871, 3171, 4759,
	1817, 4716, 4609, 1302, 982, 983, 1831, 1068, 1069, 2102,
	3839, 1238, 2023, 5340, 1177, 2413, 1818, 2025, 2397, 2423,
	2414, 1516, 4576, 4896, 4535, 3959, 4370, 2282, 1829, 3805,
	3806, 3807, 4574, 5342, 1176, 1073, 5115, 4371, 4840, 3919,
	3921, 3915, 1798, 3912, 1302, 4841, 5662, 3879, 3880, 3881,
	3882, 3854, 3823, 3947, 3948, 2423, 4846, 1423, 3924, 4842,
	1516, 3875, 3926, 3927, 4009, 3935, 5297, 3930, 3840, 3931,
	3310, 3932, 4625, 3852, 2800, 3974, 1544, 3941, 3978, 3855,
	3856, 1516, 1521, 4491, 3863, 4024, 3838, 3235, 2627, 1516,
	4123, 3891, 3928, 4028, 5194, 2195, 1423, 5593, 5354, 4843,
	1516, 1922, 5212, 1172, 4034, 4470, 2434, 4852, 4853, 3896,
	3858, 1800, 2532, 3335, 3336, 3862, 913, 4480, 4847, 4579,
	5090, 4033, 4578, 3884, 1302, 1302, 3364, 1052, 1053, 1423,
	3961, 5088, 1594, 2515, 1173, 2885, 5087, 5415, 969, 4575,
	4052, 2515, 3890, 2415, 1516, 3597, 3975, 3476, 4076, 3980,
	3124, 5116, 3982, 4244, 914, 3905, 2113, 4577, 4238, 972,
	3878, 2419, 3910, 3909, 1516, 4541, 3908, 3889, 4096, 3902,
	3903, 4006, 3904, 5193, 4008, 3853, 3918, 4068, 3888, 4070,
	3887, 3920, 4074, 3988, 3859, 2199, 4080, 4100, 3570, 3481,
	1431, 3127, 873, 1177, 3479, 4023, 3929, 3925, 1748, 2655,
	1755, 2551, 1761, 4027, 1893, 5111, 4091, 4010, 3967, 1516,
	1714, 3936, 1714, 1176, 4066, 5298, 1594, 4025, 1691, 5110,
	1070, 1071, 3944, 963, 1714, 1714, 5098, 4822, 3238, 4821,
	4765, 4062, 5423, 5406, 5416, 3126, 2396, 2202, 4387, 2970,
	3125, 5075, 4099, 2416, 2421, 1923, 4443, 1996, 1998, 1516,
	2759, 4546, 1432, 4168, 5445, 5597, 2197, 4604, 4075, 5595,
	1995, 1993, 3994, 5525, 5327, 4842, 1965, 1425, 1963, 1830,
	4137, 4002, 1855, 5318, 1860, 5085, 2200, 5099, 4095, 5050,
	4015, 4184, 4813, 4182, 4757, 4608, 4157, 1714, 1874, 4019,
	1879, 1828, 1961, 4039, 4481, 4166, 1819, 1933, 1072, 1714,
	4462, 1714, 2238, 3802, 4289, 4118, 4239, 4121, 4236, 4054,
	3559, 5343, 5299, 4852, 4853, 3906, 1251, 5344, 3765, 3559,
	2198, 3695, 3502, 3400, 3394, 203, 203, 3324, 2530, 1931,
	1929, 3211, 2772, 2768, 2417, 4057, 1927, 4204, 2672, 4064,
	1054, 1055, 4063, 4077, 4175, 4575, 1925, 2661, 1918, 4193,
	1912, 1910, 2646, 1827, 2313, 2232, 3235, 4089, 2228, 1941,
	4242, 1409, 2000, 4245, 1594, 4105, 1868, 1594, 2731, 3377,
	5180, 4097, 2697, 2560, 4820, 3803, 4268, 4267, 4258, 2019,
	3845, 3621, 3620, 3997, 3579, 2788, 1950, 4016, 2424, 2700,
	4234, 4017, 2580, 4018, 2312, 4106, 965, 2310, 2135, 4178,
	1409, 964, 1302, 1882, 1387, 2969, 5497, 4160, 4905, 1302,
	1302, 4549, 4548, 1302, 1302, 1302, 3332, 1302, 4125, 4534,
	4909, 4185, 4117, 4882, 5568, 5405, 1302, 2282, 4110, 4987,
	4158, 5563, 4992, 4163, 4164, 1302, 4914, 4900, 4897, 4833,
	1302, 4832, 4067, 969, 2761, 3995, 1594, 4654, 4644, 1997,
	2422, 2760, 4565, 2201, 4235, 1302, 4190, 4539, 4443, 4506,
	1260, 1994, 1992, 1594, 972, 4199, 4504, 1964, 4482, 1962,
	4171, 4165, 4153, 2282, 2282, 1302, 1302, 3534, 1302, 1302,
	1302, 4266, 4232, 4265, 3526, 3846, 4202, 4203, 4237, 3518,
	3061, 929, 4181, 1960, 3510, 3996, 1302, 3495, 1932, 4310,
	1302, 1423, 2282, 2282, 1302, 1302, 1302, 1302, 1302, 1302,
	1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,
	1302, 1302, 1302, 1302, 4292, 1302, 4275, 4342, 4259, 4343,
	1930, 1928, 1420, 1302, 1302, 2282, 5480, 1926, 3844, 3851,
	1302, 3493, 3474, 4302, 4303, 3249, 4251, 1924, 4252, 1917,
	4253, 1911, 1909, 1302, 1826, 3244, 2578, 2576, 2553, 2517,
	2453, 4382, 2730, 2439, 1425, 1425, 2696, 2559, 1302, 2425,
	2353, 1420, 4192, 932, 2350, 4272, 3850, 2347, 2344, 2339,
	2337, 2332, 2326, 2322, 2028, 203, 4078, 126, 126, 2244,
	126, 2526, 2418, 3673, 3359, 5587, 2375, 1400, 5296, 3645,
	3646, 3643, 2771, 1594, 1420, 3467, 1241, 1419, 2265, 5462,
	2363, 2364, 5362, 5007, 4921, 4819, 1516, 1516, 3560, 3942,
	4420, 4299, 2392, 4297, 1401, 1784, 960, 5230, 3285, 3311,
	3285, 3630, 5223, 2221, 4309, 3190, 4381, 1516, 1516, 2757,
	1771, 1457, 2252, 4666, 1516, 3283, 1419, 3308, 3238, 2282,
	2434, 2282, 2769, 4332, 2821, 4333, 4325, 4316, 4318, 4319,
	1990, 1991, 2687, 2626, 1496, 126, 126, 1497, 126, 1188,
	1190, 1302, 4340, 4373, 2725, 2720, 4341, 4436, 4345, 1419,
	5461, 2694, 4347, 2821, 4348, 4873, 2037, 2038, 2037, 2038,
	4916, 3431, 4320, 1232, 3847, 3848, 3849, 1908, 3674, 1302,
	1566, 2770, 5250, 902, 2029, 5113, 2234, 4766, 4744, 3989,
	3315, 4374, 4394, 4395, 4079, 4339, 4377, 3316, 2040, 3337,
	2032, 1523, 1456, 5581, 2442, 1563, 4561, 5533, 306, 4465,
	4641, 4466, 1302, 1302, 2609, 4580, 3492, 4391, 4392, 1534,
	4389, 2362, 4467, 1060, 1402, 3316, 4468, 3408, 3406, 3415,
	2446, 4560, 5601, 3398, 1497, 1497, 2039, 3320, 2039, 4404,
	3396, 3318, 1968, 5629, 4407, 5414, 5393, 3397, 1421, 2413,
	5360, 3319, 4417, 5356, 2414, 5295, 3235, 905, 905, 5214,
	4424, 919, 796, 3384, 1302, 1302, 4406, 5211, 5091, 4486,
	5021, 4652, 1302, 4542, 4411, 4505, 4643, 4507, 1423, 1423,
	4628, 4170, 3541, 3507, 3494, 1409, 3086, 1421, 1242, 2276,
	2359, 2443, 2263, 1714, 1714, 2255, 5112, 4464, 4458, 1731,
	2253, 1714, 126, 126, 1714, 1714, 4101, 4101, 4519, 4437,
	4438, 4102, 4102, 1730, 1714, 1724, 1234, 3892, 4425, 1516,
	1421, 2532, 5661, 4592, 3771, 3772, 2037, 2038, 4523, 4101,
	4453, 4454, 5600, 4928, 4102, 4524, 4526, 4463, 2403, 3271,
	2402, 3270, 969, 4449, 5358, 4582, 4426, 5379, 2282, 4423,
	2528, 1742, 1742, 1892, 4736, 4587, 1742, 1741, 4434, 1891,
	2965, 1742, 4445, 972, 4432, 4511, 4563, 4564, 4557, 3625,
	4516, 3000, 1302, 2403, 2402, 4544, 4545, 2415, 5540, 2279,
	1967, 3154, 4651, 1966, 4640, 5215, 5154, 4918, 4913, 4572,
	4912, 4796, 4792, 1714, 4791, 2419, 4583, 4732, 4706, 1302,
	4433, 4444, 3332, 4573, 4321, 4429, 4072, 1425, 1302, 4069,
	2447, 4659, 3628, 2129, 2128, 3648, 1714, 4597, 4598, 4621,
	4668, 1714, 1714, 1714, 2776, 5646, 5610, 5466, 5397, 5396,
	4430, 2270, 5395, 4591, 4584, 5326, 5270, 5266, 5188, 5143,
	5080, 5074, 5073, 5071, 4636, 5070, 3547, 1714, 4635, 1714,
	4969, 4946, 4660, 4551, 4871, 1714, 1420, 1594, 4806, 3559,
	4570, 3419, 4790, 4789, 4678, 4672, 4593, 4615, 4675, 4502,
	4494, 4260, 4174, 4173, 4663, 3981, 4607, 2416, 2421, 3923,
	3629, 4590, 2448, 2449, 3618, 3590, 4601, 3589, 3588, 3587,
	1594, 4679, 4623, 1302, 1302, 3525, 4662, 4627, 3496, 1302,
	1302, 2282, 3309, 3240, 1302, 1302, 3204, 1302, 4600, 2444,
	3203, 4642, 1302, 2894, 4602, 2762, 2726, 4606, 2719, 2718,
	2717, 2716, 2715, 1302, 2624, 2595, 4646, 2594, 4648, 3967,
	2593, 1419, 4639, 4692, 2592, 2591, 2590, 2329, 4695, 1302,
	2328, 2327, 4694, 2325, 2243, 4645, 2242, 1989, 1988, 1919,
	4700, 1793, 1792, 1791, 1790, 1789, 4661, 2445, 1788, 4664,
	1787, 4670, 126, 1783, 4669, 1781, 1780, 1718, 2417, 4676,
	4427, 1717, 1583, 4702, 1582, 4677, 1581, 1580, 4428, 1579,
	4717, 1526, 1409, 1409, 1480, 1479, 1478, 1477, 1476, 4718,
	1475, 1474, 1468, 1467, 1466, 1465, 1464, 1382, 4726, 2365,
	1192, 1425, 4696, 4730, 1183, 5301, 4850, 4849, 4703, 1425,
	4848, 4763, 2758, 1594, 1594, 2603, 1594, 2411, 107, 1776,
	3352, 2282, 2424, 100, 4711, 2524, 2451, 1425, 4501, 5534,
	5642, 4693, 5670, 4431, 2586, 203, 2457, 1714, 1714, 5447,
	2665, 1423, 5446, 2722, 5331, 3225, 2323, 4130, 4129, 5539,
	2461, 5184, 994, 5020, 1144, 5444, 1766, 1009, 5425, 1594,
	3983, 3436, 1920, 5208, 2701, 3865, 3156, 5385, 4740, 3733,
	5257, 5043, 3870, 1516, 4705, 2968, 2133, 3814, 102, 2409,
	1286, 1332, 2265, 4960, 2422, 4959, 4834, 4488, 4140, 4956,
	1302, 4955, 1421, 2450, 2267, 2269, 1250, 1597, 4756, 3094,
	3096, 1425, 4782, 1425, 5474, 2376, 2385, 3205, 3044, 1309,
	4798, 4799, 4774, 4776, 1306, 2271, 2273, 1308, 1307, 2272,
	2153, 1305, 2266, 4650, 4159, 3545, 4823, 4824, 1516, 2410,
	4200, 1836, 4881, 1834, 1310, 1146, 3152, 2888, 1594, 2952,
	1516, 3722, 2126, 1516, 4890, 1266, 4857, 4893, 4857, 4767,
	1288, 4773, 2949, 1420, 1420, 4874, 1449, 4772, 4770, 4768,
	4769, 4783, 1277, 3842, 4826, 3821, 1302, 4187, 4785, 1594,
	3087, 4408, 2798, 1019, 3768, 2955, 1438, 4771, 3067, 3060,
	3056, 2452, 3933, 3535, 2007, 5057, 2104, 313, 313, 313,
	4797, 802, 803, 2413, 819, 802, 819, 831, 2414, 4831,
	872, 3546, 4781, 1560, 892, 1270, 2886, 2117, 3700, 899,
	899, 899, 899, 2808, 313, 4814, 4917, 4194, 4919, 1714,
	1714, 3868, 313, 3238, 1302, 1302, 2418, 4875, 1419, 1419,
	4825, 3198, 4801, 4802, 4803, 1423, 5455, 4929, 4329, 3626,
	2599, 4880, 1399, 1423, 1047, 1398, 1447, 1397, 4810, 4811,
	4812, 313, 1516, 4815, 4889, 5431, 4977, 4892, 5428, 4876,
	2514, 1423, 4963, 4135, 4136, 1594, 4920, 2368, 4911, 4953,
	1714, 3264, 2898, 4154, 4861, 1282, 2276, 2276, 3603, 4894,
	3604, 1702, 4829, 2747, 4261, 3827, 4818, 4891, 4995, 4944,
	4626, 1723, 1795, 4877, 4878, 1714, 1714, 1714, 1714, 1714,
	1302, 1714, 1714, 4860, 5120, 1294, 4981, 2089, 4984, 3463,
	3462, 5290, 1545, 1543, 1542, 4945, 1541, 5619, 3421, 126,
	1594, 2415, 3416, 4930, 2533, 4497, 4496, 4495, 4978, 4996,
	274, 3667, 1302, 1302, 1302, 1423, 2026, 1423, 2018, 2419,
	4899, 271, 4939, 4901, 4938, 1409, 273, 4903, 272, 3987,
	1594, 3235, 4948, 4421, 4954, 1302, 4940, 3874, 1302, 1302,
	4943, 5028, 5029, 4958, 4990, 4972, 2279, 2279, 1302, 4970,
	1894, 2282, 4965, 5531, 4521, 4966, 1302, 1302, 4999, 4122,
	5004, 27, 906, 907, 908, 3274, 2395, 1562, 126, 1421,
	1421, 5012, 4472, 26, 5019, 1594, 5017, 1714, 4997, 25,
	24, 4980, 23, 130, 802, 802, 28, 49, 30, 29,
	5, 22, 313, 174, 172, 5010, 5009, 149, 2270, 2270,
	5035, 2416, 2421, 169, 1516, 168, 140, 167, 166, 165,
	164, 163, 171, 162, 161, 156, 5030, 160, 159, 158,
	157, 155, 153, 154, 148, 5040, 152, 151, 1594, 150,
	147, 146, 145, 144, 143, 142, 1302, 141, 139, 173,
	138, 137, 219, 5066, 136, 5067, 135, 134, 5052, 1302,
	133, 132, 131, 885, 886, 68, 67, 127, 1302, 5046,
	128, 21, 47, 2282, 16, 5097, 72, 73, 20, 15,
	42, 105, 5022, 1302, 119, 118, 1302, 5063, 5064, 117,
	3250, 43, 114, 5068, 41, 19, 18, 17, 112, 111,
	110, 40, 2417, 38, 13, 11, 1420, 1302, 44, 2216,
	1302, 14, 7, 211, 208, 207, 210, 1594, 206, 209,
	104, 205, 126, 1714, 1302, 5123, 1714, 1714, 1302, 1409,
	106, 204, 103, 36, 1516, 12, 199, 1409, 5170, 5093,
	5204, 4633, 2265, 95, 5094, 202, 5095, 201, 200, 5096,
	198, 197, 196, 2276, 193, 3140, 2424, 96, 93, 2423,
	5142, 5134, 5135, 5102, 195, 1425, 99, 98, 194, 94,
	97, 34, 8, 71, 9, 5023, 4240, 122, 123, 45,
	91, 1419, 90, 89, 88, 33, 70, 32, 268, 266,
	267, 5179, 5159, 1594, 265, 264, 1714, 189, 5191, 5140,
	244, 243, 5155, 5203, 5157, 5187, 5158, 242, 5144, 241,
	4857, 240, 4137, 3945, 5224, 239, 2115, 238, 2422, 237,
	2120, 5165, 5166, 5148, 236, 231, 235, 5084, 5156, 233,
	5210, 232, 234, 230, 1302, 1302, 260, 259, 258, 257,
	256, 255, 254, 2279, 253, 247, 5182, 246, 5169, 252,
	5181, 1302, 2282, 251, 5132, 5225, 250, 5207, 5233, 249,
	5235, 5189, 3486, 3946, 248, 3489, 245, 3491, 263, 5146,
	84, 2276, 229, 5147, 5202, 5227, 228, 1516, 1516, 1516,
	2633, 5171, 1516, 1516, 1516, 5209, 1516, 1516, 5145, 5183,
	227, 225, 5221, 126, 221, 2270, 224, 226, 5226, 5231,
	1420, 223, 222, 220, 5232, 1302, 5285, 1302, 1420, 1302,
	4999, 262, 261, 5238, 192, 85, 187, 188, 83, 1425,
	3538, 186, 185, 3538, 184, 183, 1420, 182, 181, 180,
	5246, 5247, 1302, 82, 1425, 5283, 191, 190, 5198, 31,
	2, 1, 1421, 0, 0, 5249, 5245, 0, 0, 5255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2418, 2279, 0, 0, 4857, 5195, 0, 126, 0, 0,
	0, 0, 5229, 0, 0, 1419, 0, 0, 0, 4857,
	0, 5282, 126, 1419, 0, 2282, 0, 5281, 0, 0,
	0, 0, 0, 0, 0, 5335, 0, 1425, 1425, 1423,
	1420, 1419, 1420, 0, 5312, 0, 126, 0, 5305, 3615,
	0, 0, 5306, 2270, 0, 0, 0, 5333, 1425, 0,
	0, 1425, 0, 0, 5359, 1714, 0, 0, 0, 0,
	0, 0, 0, 2265, 0, 1714, 2566, 5321, 3593, 0,
	0, 0, 4857, 4857, 0, 0, 5322, 0, 5323, 0,
	0, 1302, 1302, 0, 3608, 0, 3610, 0, 3612, 0,
	0, 1302, 0, 4857, 0, 5332, 4857, 0, 5330, 0,
	0, 0, 0, 5346, 5328, 1419, 0, 1419, 5357, 0,
	0, 5278, 0, 0, 5372, 0, 0, 0, 5207, 0,
	5267, 5268, 5269, 0, 0, 5271, 5272, 5273, 5364, 5274,
	5275, 0, 0, 0, 0, 5377, 5373, 0, 5376, 5380,
	0, 5422, 0, 3642, 0, 5378, 3644, 1302, 1302, 0,
	5390, 1302, 0, 0, 0, 1714, 1516, 0, 1516, 1440,
	5398, 5399, 5400, 5394, 5313, 0, 1421, 0, 0, 0,
	819, 5375, 0, 0, 1421, 0, 0, 5389, 5404, 0,
	0, 0, 0, 1423, 819, 0, 0, 5454, 0, 126,
	313, 5458, 1421, 5430, 5433, 0, 0, 1470, 1423, 5412,
	5413, 0, 0, 5421, 5420, 5457, 0, 0, 313, 0,
	313, 313, 0, 1501, 313, 1510, 0, 1302, 1302, 1302,
	5479, 5477, 5435, 0, 0, 5439, 1524, 5348, 5349, 0,
	0, 0, 0, 0, 892, 0, 0, 892, 0, 0,
	0, 0, 5381, 5434, 5382, 0, 0, 5438, 5365, 5463,
	5440, 5367, 0, 0, 0, 5470, 0, 1302, 5467, 0,
	899, 1423, 1423, 0, 5512, 5478, 1421, 0, 1421, 0,
	0, 5517, 0, 0, 0, 5491, 5492, 0, 0, 0,
	5494, 1714, 1423, 5493, 0, 1423, 0, 0, 0, 5401,
	5402, 0, 313, 0, 313, 313, 313, 1501, 5546, 313,
	313, 2423, 0, 5547, 5515, 0, 0, 1510, 1231, 5514,
	1169, 5556, 0, 5554, 0, 0, 0, 0, 1302, 0,
	0, 313, 0, 1744, 5560, 0, 1516, 1516, 5530, 5548,
	5538, 5580, 0, 0, 5528, 1233, 0, 0, 5569, 1764,
	5541, 0, 5553, 5561, 5552, 0, 0, 5187, 1773, 0,
	5591, 0, 5562, 0, 0, 0, 5527, 0, 5588, 5529,
	0, 5575, 5576, 5566, 5579, 1797, 0, 1510, 1302, 5441,
	5584, 5442, 313, 313, 2885, 1501, 5582, 5603, 0, 0,
	5590, 5607, 0, 5592, 5594, 1232, 1425, 5606, 1425, 0,
	0, 0, 0, 0, 5613, 0, 0, 892, 5430, 313,
	313, 5433, 0, 0, 0, 0, 0, 5612, 5604, 0,
	5599, 1862, 0, 5611, 0, 5605, 5457, 0, 0, 0,
	5513, 5621, 1870, 0, 0, 5615, 0, 1047, 1516, 0,
	0, 4857, 0, 4857, 1170, 0, 0, 0, 5643, 0,
	0, 0, 2803, 0, 0, 0, 5637, 5636, 5650, 0,
	0, 0, 0, 5645, 0, 0, 0, 0, 0, 0,
	1302, 1302, 0, 0, 0, 5647, 0, 5656, 0, 1302,
	1302, 0, 0, 0, 0, 5644, 0, 5675, 5654, 0,
	5659, 5681, 5648, 5668, 5664, 0, 0, 0, 5680, 5674,
	6, 5684, 0, 5682, 10, 3547, 5683, 5673, 5690, 5689,
	5672, 0, 5691, 5688, 1420, 0, 5696, 0, 0, 0,
	0, 5694, 313, 0, 203, 5701, 0, 0, 0, 1516,
	126, 5697, 5700, 5703, 0, 0, 3547, 5699, 5704, 5710,
	5707, 5711, 0, 0, 0, 5713, 5705, 0, 313, 5577,
	5578, 5714, 0, 0, 0, 5716, 1302, 0, 0, 5721,
	5718, 0, 5723, 5702, 0, 2464, 5724, 5667, 0, 5717,
	5707, 5620, 5720, 0, 0, 5665, 5666, 0, 0, 5712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1419,
	126, 0, 0, 126, 0, 0, 5614, 0, 5616, 0,
	3062, 0, 4225, 0, 0, 1175, 1174, 2474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4223, 0, 3771,
	3772, 0, 3789, 3790, 3791, 0, 0, 4216, 0, 0,
	1423, 0, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3998, 3999, 0,
	4000, 5640, 5719, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2276, 0, 1420, 0,
	0, 0, 0, 2892, 0, 0, 2470, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 0, 0, 0, 2115,
	0, 0, 0, 0, 0, 0, 0, 2276, 2276, 0,
	3786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4227, 0, 0, 4228, 0, 0,
	0, 0, 0, 0, 0, 4058, 4059, 0, 4060, 0,
	0, 0, 0, 0, 1592, 126, 4218, 0, 2467, 126,
	0, 0, 0, 1419, 1723, 0, 1420, 1420, 0, 0,
	1421, 1723, 4217, 0, 802, 0, 2279, 0, 1419, 0,
	0, 0, 0, 0, 0, 2276, 0, 1420, 4048, 0,
	1420, 0, 0, 0, 0, 313, 0, 313, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 2279, 2279, 1172,
	0, 0, 0, 2472, 1744, 1501, 1510, 313, 0, 313,
	2241, 0, 3777, 0, 0, 0, 0, 313, 2270, 819,
	0, 4226, 0, 0, 0, 0, 313, 0, 1230, 0,
	1173, 1419, 1419, 0, 0, 2037, 2038, 0, 2070, 2071,
	2072, 2081, 2082, 2083, 0, 0, 0, 0, 2330, 2270,
	2270, 0, 1419, 0, 0, 1419, 0, 0, 2074, 2068,
	0, 313, 4214, 4104, 0, 2279, 0, 2040, 0, 2473,
	313, 0, 0, 0, 2037, 2038, 0, 0, 2087, 0,
	0, 5449, 0, 0, 0, 0, 0, 0, 0, 1177,
	0, 0, 0, 0, 0, 0, 2093, 0, 2068, 0,
	0, 0, 892, 0, 2477, 2039, 2040, 0, 2464, 1176,
	0, 0, 0, 0, 1421, 0, 2059, 2270, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 0, 0, 1421,
	4183, 3787, 0, 0, 0, 2093, 0, 0, 0, 0,
	899, 0, 899, 0, 2039, 0, 0, 0, 0, 0,
	2474, 0, 899, 899, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 2038, 0, 0, 0, 0, 0, 0,
	4230, 0, 3354, 0, 0, 0, 2276, 2465, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 2475, 0,
	0, 0, 1421, 1421, 2040, 4224, 4219, 4220, 4221, 4222,
	0, 0, 0, 0, 0, 2471, 0, 0, 2062, 2063,
	2064, 2065, 2090, 1421, 3355, 0, 1421, 0, 2045, 2470,
	4225, 0, 0, 2093, 0, 0, 0, 0, 0, 0,
	4263, 126, 2039, 1707, 0, 4223, 2468, 4229, 0, 4269,
	0, 0, 4270, 2466, 0, 4216, 0, 0, 0, 0,
	0, 2476, 0, 0, 0, 0, 0, 2045, 0, 0,
	0, 2078, 0, 0, 0, 2088, 2279, 0, 0, 0,
	0, 0, 0, 2067, 2069, 0, 0, 1769, 0, 0,
	0, 2467, 0, 0, 0, 0, 0, 0, 4231, 0,
	0, 0, 0, 2084, 0, 2085, 0, 0, 3788, 0,
	0, 0, 2054, 2055, 0, 0, 0, 313, 0, 0,
	0, 313, 2067, 2069, 0, 1420, 0, 1420, 2270, 0,
	0, 0, 2076, 0, 0, 0, 0, 5450, 2469, 0,
	1850, 0, 4227, 0, 0, 4228, 2472, 2060, 0, 0,
	0, 0, 0, 0, 0, 2045, 1865, 0, 0, 0,
	313, 0, 0, 0, 4218, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 313,
	4217, 0, 0, 0, 0, 2276, 2060, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 2086, 313, 0, 0,
	1419, 0, 1419, 0, 0, 0, 0, 0, 0, 0,
	2067, 2069, 2473, 313, 0, 313, 0, 2075, 1895, 802,
	0, 313, 0, 0, 0, 0, 0, 0, 2090, 0,
	0, 2276, 2276, 892, 0, 0, 0, 1047, 0, 4226,
	0, 0, 0, 2231, 0, 3657, 0, 2477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2276, 2276, 0, 0, 0, 0, 0, 2090, 0, 1501,
	313, 3783, 3784, 3785, 2060, 2279, 0, 0, 3782, 3780,
	3781, 3773, 3774, 3775, 3776, 3778, 3779, 892, 2066, 0,
	0, 0, 0, 2276, 313, 0, 0, 0, 0, 0,
	0, 0, 2698, 0, 0, 0, 0, 313, 0, 313,
	0, 313, 0, 313, 2061, 313, 0, 313, 0, 0,
	2465, 2279, 2279, 0, 0, 0, 0, 2270, 3062, 3062,
	0, 2475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2736, 0, 0, 2737, 2079, 2738, 2471, 2739,
	2279, 2279, 0, 2061, 0, 2090, 0, 3355, 0, 0,
	0, 1421, 0, 1421, 313, 313, 313, 313, 313, 0,
	0, 0, 0, 2270, 2270, 0, 0, 2394, 0, 2468,
	0, 0, 2092, 2279, 0, 0, 2466, 0, 4230, 1723,
	1264, 0, 0, 1415, 2476, 872, 0, 0, 0, 892,
	0, 0, 2270, 2270, 0, 0, 2276, 2276, 0, 2276,
	0, 0, 0, 4224, 4219, 4220, 4221, 4222, 0, 0,
	0, 2092, 0, 0, 0, 0, 5451, 0, 0, 0,
	0, 0, 0, 0, 0, 2270, 0, 0, 0, 0,
	0, 2061, 0, 0, 0, 0, 308, 308, 798, 0,
	0, 0, 0, 0, 0, 4229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 2469, 1723, 1723, 0, 5452, 0, 2051, 2052, 2058,
	2080, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042, 2043,
	2044, 2046, 2047, 0, 2900, 0, 2279, 2279, 5411, 2279,
	0, 0, 3697, 3698, 0, 0, 4231, 0, 0, 2092,
	3062, 3062, 3062, 3062, 0, 0, 0, 0, 0, 4647,
	0, 0, 0, 2050, 2048, 2049, 2041, 2042, 2043, 2044,
	2046, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2270, 2270,
	0, 2270, 0, 0, 2316, 0, 0, 0, 0, 0,
	0, 2571, 0, 0, 0, 0, 802, 0, 0, 3088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 4697, 0,
	0, 802, 0, 0, 0, 0, 0, 0, 313, 0,
	802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 2049, 2041, 2042, 2043, 2044, 2046, 2047,
	0, 0, 0, 0, 0, 0, 2276, 0, 0, 0,
	0, 0, 313, 1510, 0, 0, 0, 0, 0, 313,
	0, 313, 1744, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 1723, 1723, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3795, 3796, 3797, 3798, 0, 0,
	0, 313, 1510, 0, 313, 819, 0, 819, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 313, 0, 0,
	0, 3239, 0, 2037, 2038, 0, 2279, 313, 313, 2081,
	2082, 2083, 313, 0, 313, 0, 0, 0, 0, 1501,
	0, 313, 313, 0, 1510, 1510, 3255, 2068, 0, 0,
	0, 313, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2270, 0,
	0, 0, 0, 0, 2093, 0, 0, 0, 0, 2276,
	0, 0, 0, 2039, 0, 899, 899, 0, 0, 899,
	899, 0, 0, 0, 2059, 0, 0, 0, 3298, 0,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2824, 0, 0, 0, 0,
	0, 3368, 0, 0, 0, 0, 0, 0, 1769, 2279,
	892, 0, 0, 0, 0, 892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 2063, 2064, 2065,
	0, 0, 0, 0, 0, 0, 2045, 2607, 0, 2276,
	0, 0, 313, 4907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2270, 3428, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 2088, 0, 0, 2644, 0, 2966, 0,
	0, 2067, 2069, 0, 313, 3484, 0, 0, 0, 0,
	0, 0, 0, 0, 2657, 2659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4968, 2663, 0,
	2054, 2055, 0, 0, 0, 1744, 0, 0, 313, 2279,
	0, 3428, 4979, 2675, 2676, 2677, 2678, 2679, 1257, 313,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3530, 0, 3454, 0, 0, 2060, 5003, 0, 0, 0,
	3298, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 1047, 3298, 0, 0, 0, 0, 0, 0, 0,
	0, 2270, 0, 0, 0, 0, 3166, 3444, 3442, 0,
	0, 0, 0, 0, 313, 3446, 3448, 3438, 0, 0,
	0, 1264, 1264, 1264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 1501, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3605, 313,
	0, 0, 0, 1501, 0, 1501, 2090, 1501, 0, 0,
	3464, 2276, 0, 0, 0, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3062, 3062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 313,
	313, 313, 1501, 0, 0, 1501, 2066, 0, 313, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 5089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 2279, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 3273,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	3062, 3062, 3062, 3062, 3062, 3062, 3062, 3062, 3062, 3062,
	3062, 3062, 3062, 3062, 3062, 3062, 3062, 3062, 3062, 3062,
	0, 3062, 0, 2270, 0, 0, 0, 0, 0, 2276,
	2092, 0, 0, 0, 3440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3456, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 1723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3455,
	3445, 3443, 3447, 3449, 3439, 3441, 3457, 3459, 0, 0,
	0, 0, 0, 0, 4285, 4286, 0, 3451, 3453, 3461,
	5149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 1589, 0, 2077, 0, 0, 0, 0, 1701, 2279,
	0, 0, 0, 0, 3465, 0, 0, 0, 2080, 2057,
	2053, 0, 2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046,
	2047, 2276, 0, 0, 1723, 1723, 1723, 1723, 1723, 1723,
	1723, 1723, 1723, 1723, 1723, 1723, 1723, 1723, 1723, 1723,
	1723, 1723, 1723, 1723, 0, 1723, 0, 0, 0, 0,
	0, 2270, 0, 0, 4349, 4350, 4351, 4352, 4353, 4354,
	4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364,
	4365, 4366, 4367, 4368, 0, 4372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2464, 0, 0, 0, 2037, 2038, 1851, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2279, 0, 0, 0, 0, 0, 0, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	3458, 0, 0, 0, 2474, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	5319, 0, 0, 2270, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 2059, 0, 0,
	0, 802, 0, 0, 0, 0, 802, 2056, 0, 802,
	0, 0, 802, 802, 0, 0, 0, 0, 802, 0,
	2276, 802, 0, 2470, 0, 3466, 0, 0, 0, 313,
	0, 1978, 0, 0, 0, 3450, 3452, 0, 0, 3460,
	5361, 313, 0, 5363, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1678,
	0, 0, 0, 0, 819, 2467, 0, 0, 0, 2062,
	2063, 2064, 2065, 0, 0, 0, 0, 0, 0, 2045,
	0, 0, 0, 0, 0, 0, 86, 3420, 0, 313,
	2279, 0, 0, 313, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2472, 0, 0, 92, 0, 0, 0, 3298, 3298, 313,
	0, 3953, 3956, 2276, 2067, 2069, 0, 0, 3298, 0,
	2241, 0, 2270, 0, 0, 0, 0, 0, 0, 3298,
	2241, 0, 3298, 2241, 0, 0, 2241, 0, 0, 3953,
	0, 0, 0, 2054, 2055, 5464, 101, 0, 0, 5465,
	2463, 313, 313, 3956, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1264, 2473, 0, 0, 0,
	0, 0, 0, 1678, 3956, 0, 313, 0, 2060, 0,
	0, 4026, 3956, 0, 0, 0, 0, 0, 0, 1041,
	0, 0, 0, 0, 0, 4037, 0, 4037, 3573, 2460,
	0, 2477, 56, 2279, 124, 0, 0, 1501, 0, 3580,
	108, 121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3298, 0, 3298, 0, 4073, 3298, 3956, 0, 0,
	3298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2226, 0, 0, 0, 0, 2270, 0, 3956, 0, 2090,
	892, 2458, 0, 0, 0, 0, 2236, 0, 1701, 0,
	0, 0, 0, 0, 2465, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 2475, 0, 0, 0, 0,
	0, 0, 1501, 0, 3631, 0, 0, 0, 0, 313,
	0, 0, 2471, 0, 0, 0, 2037, 2038, 0, 0,
	0, 2459, 0, 0, 0, 0, 0, 313, 0, 2066,
	4128, 0, 0, 4133, 3298, 0, 0, 313, 0, 1701,
	2068, 0, 0, 2468, 0, 1510, 0, 0, 2040, 0,
	2466, 0, 0, 0, 0, 2061, 0, 0, 2476, 3828,
	0, 313, 0, 0, 0, 0, 3530, 1678, 0, 1501,
	0, 313, 0, 0, 3298, 0, 802, 2093, 0, 0,
	0, 0, 0, 3298, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	0, 0, 0, 0, 0, 3857, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3873, 4249, 2469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4256, 0, 4257,
	0, 0, 1744, 0, 0, 0, 4288, 3900, 0, 1501,
	313, 0, 313, 0, 0, 0, 0, 0, 1501, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 2062,
	2063, 2064, 2065, 0, 0, 0, 0, 0, 0, 2045,
	0, 0, 0, 0, 0, 0, 212, 0, 116, 0,
	313, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042,
	2043, 2044, 2046, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 0, 2067, 2069, 0, 170, 0, 2194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2054, 2055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2597, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 4385, 3062, 0, 2620, 1264, 0, 0,
	0, 1678, 0, 0, 936, 0, 0, 0, 313, 313,
	269, 0, 2632, 0, 2632, 0, 0, 0, 0, 270,
	2639, 0, 0, 213, 0, 0, 0, 0, 217, 0,
	948, 0, 0, 802, 0, 0, 4410, 802, 2073, 2090,
	0, 0, 0, 0, 0, 802, 0, 0, 0, 216,
	0, 946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2667,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 3062, 0, 0, 0, 313, 0, 0, 0,
	0, 3873, 0, 2690, 1678, 0, 0, 0, 0, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 2707, 0,
	2709, 0, 2711, 0, 2713, 0, 2714, 0, 1249, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 957, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2744, 2745, 0, 1678, 0, 5049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1678, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 941, 0, 0,
	0, 0, 0, 4538, 0, 0, 4540, 0, 0, 4543,
	0, 0, 0, 0, 867, 0, 1723, 4037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4262,
	0, 0, 1592, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 5105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3428, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3956, 0, 313, 0, 0, 3062, 819, 819,
	1510, 0, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042,
	2043, 2044, 2046, 2047, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 956, 313, 3530,
	0, 4306, 3530, 2241, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 4638, 0, 3428, 4322, 0,
	313, 0, 0, 3062, 313, 0, 313, 0, 0, 0,
	0, 313, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1035, 0, 0, 3062, 0,
	3298, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	4126, 4127, 1047, 3298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 1038, 1037, 0, 0, 0,
	938, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3163, 87, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 3956, 0, 0, 3255, 0, 0, 0, 0,
	92, 1723, 0, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4233, 0, 0, 0, 0,
	0, 5254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 866, 0, 0, 4419, 0,
	1678, 928, 2073, 0, 0, 0, 0, 1723, 0, 0,
	0, 952, 0, 0, 0, 0, 0, 0, 0, 0,
	940, 4741, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 1723, 0, 0, 0, 1041, 5289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	0, 124, 0, 0, 0, 2073, 0, 108, 121, 0,
	2620, 2073, 5311, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 937, 0, 0, 0, 0, 0, 950,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 1744, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 945, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 868,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 939, 0, 0, 1510, 1510, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1510, 1510, 0, 313, 1510, 0, 0, 0, 0,
	954, 955, 2073, 951, 0, 0, 0, 2073, 0, 0,
	3298, 3298, 0, 3953, 0, 0, 4037, 3298, 0, 0,
	0, 2073, 0, 0, 0, 4859, 2073, 4859, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3298,
	0, 2241, 0, 0, 0, 3953, 0, 1744, 1744, 313,
	3956, 0, 3037, 3038, 3039, 3040, 3033, 3034, 3035, 3036,
	0, 1701, 0, 3956, 0, 313, 3956, 0, 313, 4895,
	0, 0, 0, 0, 4037, 0, 0, 4037, 0, 0,
	0, 4037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	3298, 2073, 3298, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3428, 0, 0, 0,
	0, 0, 1519, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1264, 0, 3013, 3014, 3015, 3016, 3506, 0, 1249,
	1249, 1249, 0, 3298, 3298, 0, 0, 0, 2620, 3530,
	3530, 0, 0, 0, 0, 0, 3953, 3025, 3026, 3027,
	3028, 3021, 3022, 3023, 3024, 3029, 3030, 3031, 3032, 313,
	0, 0, 0, 212, 0, 116, 0, 0, 120, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1693, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 3578, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 0, 0, 170, 3592, 0, 3595, 1746, 0,
	1752, 0, 1758, 2073, 2073, 2073, 2073, 2073, 2073, 2073,
	2073, 3009, 3010, 3011, 3012, 3017, 3018, 3019, 3020, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 3638, 1701, 3640,
	1701, 0, 1853, 0, 1858, 4410, 0, 3647, 0, 218,
	0, 0, 3066, 0, 0, 0, 0, 276, 1872, 4571,
	1877, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	4585, 4586, 0, 2073, 0, 0, 0, 269, 0, 0,
	4588, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	213, 3676, 0, 0, 0, 217, 0, 3298, 2241, 0,
	2241, 4778, 0, 4638, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 1036, 0, 0, 0,
	0, 0, 5121, 0, 5121, 0, 0, 0, 0, 0,
	0, 0, 1946, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 4808, 1678, 0, 0, 0, 892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4037, 1744, 0, 0, 0, 1744, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4674, 0, 0, 0, 0, 2657, 4680, 4681,
	0, 0, 0, 0, 0, 0, 0, 3956, 0, 313,
	0, 1678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1678,
	86, 0, 0, 0, 0, 0, 4638, 0, 0, 4859,
	0, 0, 1744, 0, 0, 0, 3298, 0, 0, 87,
	313, 0, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	0, 0, 0, 1678, 5218, 0, 0, 92, 0, 0,
	0, 0, 0, 0, 0, 0, 1744, 0, 0, 0,
	0, 0, 0, 0, 0, 2114, 0, 0, 0, 0,
	0, 2127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 313, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 0, 0,
	4327, 0, 0, 0, 1264, 0, 0, 1462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1041, 0, 1485, 0, 1485, 1485, 0,
	0, 928, 0, 0, 0, 4037, 5280, 0, 124, 0,
	0, 0, 0, 4638, 108, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4859, 0, 0, 0, 2188, 2188, 2188,
	0, 0, 0, 0, 0, 0, 0, 0, 4859, 0,
	0, 0, 0, 4787, 4788, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	109, 0, 1687, 1462, 0, 5041, 1703, 928, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	3883, 0, 0, 1678, 0, 0, 0, 0, 0, 0,
	0, 4859, 4859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5041, 0, 4859, 0, 313, 4859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1744, 0, 1744, 928,
	928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2824, 0, 0, 0, 1678, 0, 0,
	0, 1510, 1510, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5410, 0, 3949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3195, 0, 5121, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2657, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 0, 3298,
	4005, 4007, 2073, 0, 2620, 0, 0, 0, 0, 0,
	0, 0, 2824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 116, 0, 0, 120, 0, 4327, 0, 0,
	0, 5011, 0, 5013, 5014, 5015, 0, 0, 5018, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	2073, 0, 0, 0, 1744, 1678, 0, 275, 1678, 0,
	0, 0, 0, 0, 2073, 1042, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 2073, 2073, 2073, 2073, 2073,
	2073, 2073, 2073, 2073, 2073, 2073, 2073, 2073, 2073, 2073,
	2073, 2073, 2073, 2073, 2073, 2073, 2073, 2073, 2073, 2073,
	2073, 2073, 2073, 2073, 2073, 2073, 2073, 2073, 2073, 2073,
	2073, 277, 0, 0, 0, 0, 2073, 0, 2073, 2073,
	2073, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	3066, 3066, 4638, 5069, 0, 0, 0, 1678, 0, 175,
	0, 0, 0, 0, 86, 2073, 4155, 0, 0, 0,
	0, 0, 0, 0, 1678, 0, 218, 0, 0, 0,
	0, 0, 0, 87, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3298, 92, 0, 0, 269, 0, 0, 0, 0, 0,
	4859, 0, 4859, 270, 0, 1744, 2073, 213, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 101, 0, 2073, 0, 0, 2073,
	0, 0, 2073, 0, 0, 2073, 0, 0, 0, 0,
	0, 2073, 2073, 2073, 2073, 2073, 2073, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3298,
	0, 0, 0, 0, 0, 0, 0, 1041, 0, 5161,
	0, 0, 0, 0, 0, 0, 3428, 0, 0, 4264,
	56, 1701, 124, 0, 0, 0, 0, 0, 108, 121,
	3298, 0, 0, 0, 1678, 0, 1703, 0, 0, 0,
	0, 0, 0, 0, 3428, 2723, 0, 2073, 0, 0,
	3792, 0, 3066, 3066, 3066, 3066, 0, 0, 2073, 4278,
	2073, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2755, 0, 1485, 0,
	0, 0, 0, 0, 109, 0, 0, 1703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2797, 0, 2801, 0, 0, 0, 0,
	0, 0, 2815, 0, 0, 1249, 0, 0, 0, 0,
	0, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 0, 2867, 0,
	2869, 2870, 2871, 2872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	2038, 0, 0, 0, 0, 0, 2896, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2114, 0,
	0, 0, 2947, 2068, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 2977, 2980,
	2983, 2986, 0, 0, 2992, 2993, 2994, 2995, 2996, 2997,
	2998, 0, 0, 0, 0, 113, 0, 0, 0, 0,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 3058, 0, 3069, 3071, 3076, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 116, 0, 0, 120,
	0, 2657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 2062, 2063, 2064, 2065, 0, 2588, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 2613, 1678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 2067, 2069, 0,
	0, 1678, 0, 2037, 2038, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 2040, 2073, 2073, 269, 2073,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 213, 0, 2620, 0, 0, 217, 0, 0, 0,
	0, 2060, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 4622, 0, 0,
	0, 0, 0, 0, 2056, 1298, 0, 4632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2620, 0, 2620, 0, 0, 0, 0,
	4653, 0, 0, 0, 1678, 1678, 0, 1678, 2037, 2038,
	0, 2070, 2071, 2072, 2081, 2082, 2083, 0, 0, 0,
	0, 0, 2090, 2613, 2748, 2749, 0, 0, 312, 312,
	312, 0, 2068, 4283, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	1678, 2087, 0, 0, 0, 312, 2062, 2063, 2064, 2065,
	0, 0, 0, 970, 0, 0, 2045, 4699, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 1264, 2066, 0, 0, 0, 0, 0, 0, 2059,
	0, 0, 970, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 2073,
	2073, 0, 3066, 3066, 3487, 3488, 2073, 3490, 0, 0,
	0, 2067, 2069, 0, 0, 0, 3792, 3792, 0, 1678,
	2073, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2054, 2055, 0, 0, 2073, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 2062, 2063, 2064, 2065, 2060, 0, 0, 0, 0,
	0, 2045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066,
	3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066,
	3066, 3066, 0, 3066, 3792, 3792, 3792, 3792, 0, 0,
	0, 0, 0, 0, 2078, 0, 0, 0, 2088, 0,
	0, 0, 0, 0, 0, 0, 2067, 2069, 0, 0,
	0, 0, 0, 1422, 0, 0, 1678, 0, 0, 0,
	0, 2073, 0, 0, 0, 3616, 2090, 0, 0, 0,
	0, 0, 0, 0, 0, 2054, 2055, 0, 2050, 2048,
	2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0, 928,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 1462, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 1678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4879, 0,
	0, 1678, 0, 0, 2094, 2095, 0, 0, 928, 0,
	0, 0, 2061, 0, 2620, 0, 0, 0, 0, 1249,
	0, 1462, 0, 0, 1462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 3242, 0, 0, 0, 1485,
	0, 1485, 0, 0, 0, 0, 1678, 0, 928, 928,
	0, 2090, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3680, 3681, 0, 0, 0, 0, 3687, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 0, 3701, 3702, 0,
	0, 0, 0, 2947, 0, 0, 0, 0, 0, 1678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 0, 2620, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 3711, 4991,
	0, 87, 0, 0, 2073, 2073, 0, 1264, 0, 0,
	0, 0, 0, 0, 3725, 1687, 0, 0, 0, 92,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2079,
	0, 3737, 0, 0, 0, 0, 0, 0, 1678, 2057,
	2053, 0, 2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 86, 0, 2092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1703,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 1041, 0, 0, 0, 1334,
	0, 0, 0, 0, 1678, 0, 0, 0, 56, 0,
	124, 0, 0, 0, 0, 0, 108, 121, 0, 0,
	0, 0, 3076, 3076, 3076, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 0, 0, 0, 2077, 0,
	0, 2188, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 2052, 2058, 2080, 2057, 2053, 0, 2050, 2048, 2049,
	2041, 2042, 2043, 2044, 2046, 2047, 0, 0, 0, 0,
	0, 0, 3832, 0, 0, 0, 1041, 0, 0, 0,
	0, 5107, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 108, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	2073, 0, 0, 2073, 3792, 3792, 2073, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 1703, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 928, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 2620, 0,
	0, 0, 0, 2073, 2073, 2073, 2073, 2073, 0, 0,
	0, 0, 0, 2073, 0, 2073, 0, 0, 3792, 3792,
	3792, 3792, 3792, 3792, 3792, 3792, 3792, 3792, 3792, 3792,
	3792, 3792, 3792, 3792, 3792, 3792, 3792, 3792, 0, 2632,
	1249, 3792, 0, 0, 2073, 2073, 1703, 0, 1703, 0,
	0, 312, 1249, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 312,
	0, 312, 312, 113, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 3986, 0, 5244, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 116, 0, 0, 120, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 113, 312, 312, 312, 2073, 1264,
	312, 312, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 4055, 4056, 0, 0, 1042, 0, 0,
	0, 0, 970, 170, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 116, 0, 0, 120, 0,
	0, 2073, 2073, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 175, 0, 0, 0, 2037, 2038, 0, 1042, 0,
	312, 312, 0, 0, 170, 0, 0, 0, 218, 2037,
	2038, 0, 0, 0, 0, 0, 276, 0, 0, 2068,
	0, 0, 0, 5366, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 2068, 0, 0, 269, 0, 0, 0,
	0, 2040, 0, 0, 277, 270, 0, 0, 0, 213,
	0, 0, 0, 0, 217, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	2093, 0, 175, 0, 0, 1845, 2059, 0, 0, 2039,
	2073, 0, 0, 0, 0, 0, 2056, 0, 0, 218,
	2059, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 5424, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 2073, 2073,
	213, 0, 0, 2073, 2073, 217, 0, 2073, 2073, 312,
	0, 0, 2073, 0, 0, 4282, 2073, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 216, 0, 0, 3686,
	0, 0, 0, 0, 0, 0, 3066, 0, 2062, 2063,
	2064, 2065, 5472, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 2062, 2063, 2064, 2065, 0, 0, 0, 0,
	0, 2815, 2045, 0, 0, 0, 0, 0, 4280, 4281,
	0, 0, 4284, 0, 0, 0, 4287, 0, 0, 0,
	0, 0, 0, 0, 0, 4291, 0, 0, 0, 0,
	0, 0, 0, 0, 4298, 0, 0, 0, 0, 3832,
	0, 0, 0, 2067, 2069, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4311, 0, 0, 2067, 2069, 0,
	0, 0, 0, 0, 3066, 0, 0, 0, 0, 0,
	0, 0, 2054, 2055, 4334, 4335, 1485, 4336, 4337, 4338,
	1703, 1703, 0, 0, 0, 0, 2054, 2055, 0, 0,
	0, 0, 0, 0, 0, 4344, 0, 0, 0, 4346,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 4375, 4376, 2037, 2038, 0, 2070, 2071, 2072,
	2081, 2082, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4388, 0, 0, 0, 0, 2074, 2068, 1703,
	0, 0, 0, 0, 0, 0, 2040, 4397, 2073, 2073,
	0, 0, 0, 0, 0, 0, 2210, 2087, 1422, 0,
	0, 0, 312, 2613, 0, 0, 0, 0, 2090, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 312, 2210,
	312, 0, 2090, 0, 2039, 0, 0, 0, 970, 0,
	0, 0, 0, 0, 0, 2059, 0, 970, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 312, 0, 0, 2073, 2073, 2073, 0, 0,
	0, 312, 2066, 0, 0, 0, 2073, 2073, 3792, 3066,
	4471, 0, 0, 0, 2061, 2073, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4489, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 2063, 2064,
	2065, 0, 0, 0, 0, 0, 0, 2045, 1426, 0,
	0, 0, 0, 0, 3792, 3066, 1426, 0, 0, 0,
	0, 0, 4520, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 2092, 0, 0, 0, 0, 0, 0, 2073,
	3066, 0, 0, 0, 0, 0, 2092, 2073, 928, 0,
	2078, 0, 0, 0, 2088, 0, 0, 0, 0, 2073,
	1426, 2073, 2067, 2069, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 4552, 4553, 0, 2073, 0, 0, 0,
	0, 0, 2084, 0, 2085, 0, 0, 0, 0, 0,
	0, 2054, 2055, 0, 0, 0, 0, 992, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 2076, 0, 1426, 0, 0, 0, 0, 995, 0,
	0, 0, 0, 996, 0, 0, 2060, 0, 0, 1426,
	0, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042, 2043,
	2044, 2046, 2047, 0, 0, 2057, 2053, 0, 2050, 2048,
	2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0, 1703,
	0, 0, 0, 3792, 0, 0, 997, 0, 1011, 0,
	0, 0, 0, 0, 0, 2086, 0, 0, 0, 0,
	0, 2188, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 1426, 970, 0, 0, 998, 2075, 2073, 3792, 0,
	999, 2073, 0, 0, 0, 0, 0, 2090, 2188, 0,
	0, 0, 0, 0, 0, 0, 0, 4671, 0, 0,
	3792, 0, 0, 1020, 0, 0, 0, 0, 0, 0,
	1000, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 2066, 312, 0,
	0, 993, 991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 312, 0, 0, 0,
	0, 0, 312, 2061, 0, 1001, 0, 0, 0, 0,
	0, 0, 4719, 4720, 0, 0, 0, 0, 4724, 4725,
	0, 0, 1022, 4728, 4729, 0, 0, 867, 0, 0,
	0, 4733, 0, 0, 0, 2079, 0, 0, 0, 0,
	0, 0, 4737, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 4742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2092, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 2037, 2038, 0, 0, 0, 0, 0, 970, 0,
	312, 0, 312, 0, 312, 0, 312, 0, 312, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 2073,
	1021, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	1016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 312, 312, 312, 312, 312,
	0, 2039, 0, 0, 2077, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 2051, 2052, 2058, 2080,
	2057, 2053, 2056, 2050, 2048, 2049, 2041, 2042, 2043, 2044,
	2046, 2047, 0, 0, 0, 0, 0, 3746, 1015, 0,
	1426, 3747, 1426, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 0, 1426, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	2283, 3679, 1003, 0, 0, 0, 0, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 2063, 2064, 2065, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 866, 2073,
	0, 0, 0, 0, 0, 4908, 0, 0, 0, 0,
	0, 990, 0, 0, 1012, 0, 0, 0, 0, 0,
	928, 0, 0, 0, 0, 0, 1004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	2069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1010, 0, 0, 0, 0,
	0, 1426, 0, 4949, 4950, 0, 0, 0, 2054, 2055,
	0, 0, 0, 0, 1005, 0, 0, 0, 1006, 1025,
	0, 1024, 0, 1422, 0, 1007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1422,
	0, 1008, 0, 2060, 0, 0, 1017, 0, 0, 0,
	0, 0, 1026, 312, 0, 1023, 0, 2613, 0, 0,
	0, 0, 868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 5016,
	970, 0, 970, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5036, 5037, 5038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 2815, 970, 0, 5047, 5048, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 5056, 5059, 0, 312, 312,
	0, 0, 0, 312, 0, 312, 0, 0, 0, 0,
	0, 0, 312, 312, 1426, 1426, 0, 0, 0, 0,
	0, 0, 312, 0, 2066, 1426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 1426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 5122, 0,
	0, 312, 0, 0, 0, 0, 0, 5130, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 5138, 0, 0, 1249, 0, 0, 2092, 312,
	0, 0, 0, 0, 0, 1426, 0, 1426, 0, 1426,
	0, 0, 0, 0, 0, 0, 5150, 0, 0, 5152,
	0, 0, 0, 0, 0, 0, 0, 1426, 1426, 0,
	0, 0, 0, 5162, 0, 0, 0, 5167, 0, 0,
	0, 1426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 1426, 1426, 1426, 1426,
	1426, 0, 0, 312, 0, 0, 0, 852, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 836, 0,
	0, 0, 0, 837, 0, 0, 0, 2057, 2053, 0,
	2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0,
	0, 0, 0, 0, 0, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 2613, 0, 839, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 0, 0, 0, 2283, 2283, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5288, 312, 841, 0, 5292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 312,
	0, 842, 834, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 843, 0, 0, 0, 0,
	835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 867, 0, 0,
	0, 0, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	312, 312, 312, 0, 0, 0, 857, 0, 0, 312,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3095, 0, 0, 0,
	0, 0, 0, 2037, 2038, 0, 2070, 2071, 2072, 2081,
	2082, 2083, 0, 0, 0, 312, 0, 1426, 0, 0,
	0, 2815, 0, 312, 1426, 0, 2074, 2068, 0, 0,
	5059, 3093, 0, 1426, 0, 2040, 3097, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 3098, 0,
	0, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 1249, 0, 0,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	3099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 864, 0, 845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3100,
	0, 0, 0, 0, 0, 0, 3101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	865, 0, 846, 0, 0, 0, 5490, 5490, 5490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3102,
	0, 0, 0, 0, 0, 0, 2062, 2063, 2064, 2065,
	0, 0, 0, 0, 0, 0, 2045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5516, 0, 866, 0,
	0, 0, 0, 0, 0, 0, 847, 0, 0, 0,
	0, 862, 863, 1426, 860, 0, 0, 0, 0, 0,
	0, 0, 0, 855, 0, 0, 848, 0, 0, 2078,
	0, 3103, 0, 2088, 0, 0, 3104, 0, 0, 0,
	0, 2067, 2069, 0, 0, 0, 0, 0, 0, 0,
	3105, 0, 0, 0, 0, 0, 0, 5490, 0, 0,
	3106, 2084, 2283, 2085, 0, 0, 0, 0, 0, 0,
	2054, 2055, 0, 0, 849, 0, 856, 0, 0, 0,
	0, 0, 0, 0, 0, 850, 3107, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 0, 1422, 0,
	0, 851, 0, 0, 1703, 2060, 859, 5602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 853, 0, 0, 1422, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2210, 0, 0, 0, 0, 2075, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 2090, 3108, 0, 0,
	0, 0, 0, 970, 0, 0, 0, 0, 0, 5490,
	5660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 928, 2037, 2038, 0, 2070, 2071, 2072, 2081,
	2082, 2083, 0, 0, 0, 0, 2066, 0, 0, 0,
	312, 0, 0, 0, 312, 312, 2074, 2068, 0, 3110,
	3111, 1426, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 2061, 1426, 0, 1426, 2087, 0, 0, 0,
	0, 1426, 0, 0, 0, 0, 0, 0, 3112, 0,
	312, 0, 1426, 1426, 2093, 0, 0, 0, 3117, 0,
	0, 0, 0, 2039, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 3113,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 312, 312, 3114, 0, 312, 0, 0, 0,
	2092, 0, 0, 2210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 3115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 2063, 2064, 2065,
	0, 3116, 0, 0, 0, 0, 2045, 0, 0, 0,
	0, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 2052, 2058, 2080, 2057,
	2053, 0, 2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 2067, 2069, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2084, 0, 2085, 0, 0, 0, 0, 970, 0,
	2054, 2055, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 852, 0, 2060, 0, 0, 0, 0,
	0, 0, 1422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 836, 0, 0, 0, 0, 837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 838, 0, 0, 2075, 0, 0, 0, 0,
	0, 0, 0, 839, 0, 0, 2090, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 2038, 0, 2070, 2071,
	2072, 2081, 2082, 2083, 0, 0, 840, 0, 0, 0,
	0, 312, 0, 312, 0, 0, 0, 0, 2074, 2068,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 858,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	0, 312, 841, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 1311, 2061, 0, 0, 0, 2059, 842, 834, 0,
	0, 0, 1426, 1426, 0, 0, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 843, 0, 0, 2079, 0, 835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1426, 0, 867, 314, 314, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 857, 0, 1426, 0, 0, 1426, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 2063,
	2064, 2065, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 2283, 314, 0,
	0, 1426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1422,
	1422, 0, 0, 0, 0, 0, 854, 0, 0, 2283,
	0, 2078, 0, 2077, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 2067, 2069, 2051, 2052, 2058, 2080, 2057,
	2053, 0, 2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046,
	2047, 0, 0, 2084, 0, 2085, 2943, 0, 0, 0,
	2944, 0, 2054, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 2283, 970, 0, 0,
	0, 0, 0, 0, 0, 845, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 865, 0, 846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 0, 0,
	0, 0, 0, 0, 866, 0, 0, 0, 2090, 0,
	0, 0, 847, 0, 0, 0, 0, 862, 863, 0,
	860, 1426, 0, 0, 0, 0, 0, 0, 0, 855,
	0, 0, 848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	849, 0, 856, 0, 0, 0, 0, 0, 0, 0,
	0, 850, 0, 0, 2061, 0, 0, 0, 0, 1426,
	0, 1426, 0, 0, 0, 1426, 0, 851, 0, 0,
	0, 0, 859, 1426, 1426, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2079, 0, 868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	853, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 312,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 312, 1426, 312, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 1426, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 312,
	0, 0, 0, 1426, 0, 0, 1426, 2051, 2052, 2058,
	2080, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042, 2043,
	2044, 2046, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2283, 2283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2283, 2283, 0, 0, 0, 1422, 0, 0, 0,
	0, 0, 0, 0, 1422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2210, 0, 2283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 1426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 0, 2210, 0, 2210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 314, 2283, 312,
	2283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 314, 314, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 2038, 0, 2070, 2071, 2072, 2081,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 2068, 0, 314,
	1598, 314, 314, 314, 0, 2040, 314, 314, 1598, 0,
	312, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 318, 0, 0, 0,
	0, 0, 1598, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 1426, 1426, 2056, 0, 0, 0, 0, 0,
	1426, 0, 0, 1426, 1426, 0, 0, 0, 0, 314,
	314, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 1598, 314, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2283, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 2063, 2064, 2065,
	0, 0, 0, 0, 0, 0, 2045, 0, 0, 0,
	0, 0, 1426, 962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 0, 0, 1598, 0, 1426, 0, 0, 0, 0,
	1426, 1426, 1426, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 2067, 2069, 312, 0, 0, 1426, 0, 1426, 314,
	0, 0, 0, 0, 1426, 0, 1426, 0, 0, 0,
	0, 2084, 0, 2085, 0, 0, 0, 0, 0, 0,
	2054, 2055, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2283, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 2086, 0, 0, 0, 0, 0,
	2210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	0, 0, 1426, 1426, 0, 1426, 0, 0, 0, 0,
	2283, 0, 0, 0, 0, 0, 1426, 312, 312, 0,
	0, 0, 0, 0, 0, 0, 1426, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 1426, 0, 2079, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 2210, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 314, 314, 314, 0, 0, 2210,
	0, 0, 0, 0, 314, 0, 0, 1426, 0, 0,
	2092, 0, 0, 314, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 2210, 2210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2210, 0, 312, 2210, 0, 1426, 1426,
	0, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 2052, 2058, 2080, 2057,
	2053, 0, 2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046,
	2047, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	4296, 0, 0, 0, 1426, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 1426, 1426, 1426, 1426, 0,
	1426, 1426, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	2283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 0, 1426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 1598, 1598, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2283, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 314, 0, 0, 0, 1426, 0, 314, 0,
	0, 0, 1426, 0, 0, 1426, 1426, 1598, 0, 1598,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2210, 0, 2210, 0, 0, 0, 0, 0, 1598,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 1426, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 1598, 1598,
	1598, 1598, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 1426, 0, 0, 1426, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 1595, 314, 0, 314, 0,
	314, 0, 314, 1715, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2283, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 314, 314, 314, 314, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	0, 1598, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2283, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 1426, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 1426, 0, 0,
	1426, 0, 0, 0, 1426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 1598, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 0, 0, 0, 0, 314,
	0, 0, 0, 1716, 0, 0, 314, 0, 314, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 1716, 0, 314, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 1716, 0, 314, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 314, 314, 0, 0, 0, 314,
	0, 314, 0, 0, 0, 0, 0, 0, 314, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 2251,
	0, 0, 0, 0, 0, 0, 0, 0, 2251, 0,
	0, 314, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1426, 0, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 2037,
	2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2074, 2068, 0, 314, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 1598, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 1598, 0, 1598, 0, 0,
	2059, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	2056, 314, 0, 0, 1598, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 314, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 1715, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 2063, 2064, 2065, 0, 0, 1715, 1598,
	0, 0, 2045, 0, 0, 314, 314, 314, 314, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 0, 0, 2088,
	0, 314, 0, 0, 0, 0, 0, 2067, 2069, 314,
	0, 0, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 1715, 0, 1715, 2084, 0, 2085,
	0, 0, 0, 0, 0, 0, 2054, 2055, 0, 0,
	0, 0, 0, 0, 1715, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 2060, 0, 1715, 1715, 1715, 1715, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	1716, 0, 1716, 0, 0, 0, 2092, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 1716, 0, 0, 1716,
	1716, 1716, 1716, 1716, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 2051, 2052, 2058, 2080, 2057, 2053, 1595, 2050, 2048,
	2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 3749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	314, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 314,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 2037,
	2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 2074, 2068, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 2087, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 1598, 0, 1598, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 1596, 314, 1598, 1598, 0, 0, 1598,
	0, 0, 0, 0, 314, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 2062, 2063, 2064, 2065, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 2067, 2069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 2085,
	0, 0, 0, 0, 0, 0, 2054, 2055, 1715, 0,
	0, 0, 0, 0, 0, 1598, 0, 314, 1598, 314,
	1715, 0, 1715, 0, 0, 0, 2076, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 1715,
	1715, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 2037, 2038, 0, 2070, 2071, 2072, 2081, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 2068, 0, 0, 0,
	2086, 0, 0, 0, 2040, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 2075, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 2090, 2093, 1715, 0, 0, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 2063, 2064, 2065, 0,
	2079, 0, 0, 0, 0, 2045, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 2078, 0,
	0, 0, 2088, 314, 0, 0, 1716, 0, 1716, 1598,
	2067, 2069, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 1716, 0, 0, 0,
	2084, 0, 2085, 0, 0, 0, 0, 0, 0, 2054,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050, 2048,
	2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3748, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2090, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 0, 0, 1598, 1598, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 1598, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 2061, 0, 0, 1595, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 314, 0, 314, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 2079, 1598, 0, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 1598, 1598, 1598, 0, 0, 0, 0, 2092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	1598, 0, 0, 0, 0, 314, 1598, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2051, 2052, 2058, 2080, 2057, 2053,
	0, 2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2037, 2038, 0, 2070,
	2071, 2072, 2081, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 2074,
	2068, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 1598, 1598, 0, 1598, 0, 2087,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 1598, 1598,
	1596, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	0, 314, 0, 0, 1596, 0, 1715, 0, 1715, 0,
	0, 0, 1595, 0, 0, 0, 0, 0, 0, 962,
	1715, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 314, 0, 0, 314, 0, 0, 0, 2062,
	2063, 2064, 2065, 1715, 0, 0, 0, 0, 0, 2045,
	0, 0, 0, 0, 0, 1715, 0, 1715, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 2067, 2069, 0, 0, 0, 0,
	1598, 1598, 0, 0, 1598, 0, 0, 0, 0, 0,
	1595, 0, 0, 1595, 2084, 0, 2085, 0, 0, 0,
	0, 0, 0, 2054, 2055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 1598, 314, 0, 0,
	0, 1598, 0, 0, 1596, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 1598, 1598, 1598,
	1598, 0, 1598, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 2086, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 1598, 1716, 0, 1716, 0, 0, 0, 1596, 2090,
	0, 0, 0, 0, 0, 0, 1716, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 1716, 0, 2061, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 2251, 1596,
	0, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 1598, 0, 0, 1598, 1598, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 1596, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 1598, 1596, 0, 1598, 2051, 2052,
	2058, 2080, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042,
	2043, 2044, 2046, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	1715, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	1715, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 2038, 0, 2070, 2071, 2072, 2081,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 2074, 2068, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 2059, 0, 0, 1715, 1715, 1715,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 1715, 0, 1715, 1598, 0, 0, 0,
	0, 1715, 0, 1595, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 2074, 2068, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 2062, 2063, 2064, 2065,
	0, 0, 0, 2087, 0, 0, 2045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 314, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 2056, 0, 2088, 0, 1716, 1716, 0, 0, 0,
	0, 2067, 2069, 1716, 0, 0, 1716, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	314, 2084, 0, 2085, 0, 0, 0, 0, 0, 0,
	2054, 2055, 0, 0, 0, 0, 0, 0, 0, 1595,
	1595, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 1715, 2060, 0, 0, 0, 0,
	0, 0, 0, 2062, 2063, 2064, 2065, 0, 0, 0,
	0, 0, 0, 2045, 0, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 1716, 0,
	0, 0, 0, 1716, 1716, 1716, 2078, 0, 0, 0,
	2088, 0, 0, 0, 0, 2075, 0, 0, 2067, 2069,
	0, 0, 0, 0, 0, 0, 2090, 0, 0, 1716,
	0, 1716, 0, 0, 0, 0, 0, 1716, 2084, 1596,
	2085, 0, 0, 0, 1595, 0, 0, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 1596, 0, 0, 1595, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 1715, 0, 0, 0,
	0, 2086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 1715, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 1596, 0, 1596, 0,
	0, 1715, 1715, 1715, 1715, 1715, 0, 1715, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	1716, 0, 0, 2066, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 2052, 2058, 2080, 2057,
	2053, 2079, 2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046,
	2047, 2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083,
	3743, 1595, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 2068, 0, 2092, 0, 0,
	1596, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 2093, 0, 1595, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 1716, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050,
	2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 2944, 0, 1715,
	0, 0, 1715, 1715, 0, 0, 0, 1596, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 2063, 2064, 2065, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 1716, 1716, 1716,
	1716, 1716, 0, 1716, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 1595,
	0, 0, 1715, 0, 0, 0, 0, 2078, 1115, 0,
	1169, 2088, 0, 0, 0, 0, 0, 0, 0, 2067,
	2069, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 0, 0, 2084,
	0, 2085, 0, 0, 0, 0, 0, 0, 2054, 2055,
	0, 0, 0, 1139, 0, 1121, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 2076, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1141,
	0, 0, 0, 2060, 0, 1122, 0, 0, 0, 0,
	1125, 0, 0, 0, 0, 1181, 0, 1152, 0, 0,
	0, 0, 0, 0, 0, 0, 1136, 1137, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2086, 0, 1170, 1127, 0, 0, 0, 0,
	0, 1128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 1129, 0, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	0, 0, 0, 0, 0, 1716, 0, 0, 1716, 1716,
	1168, 0, 1148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2066, 0, 1131, 0, 0, 0,
	0, 1715, 0, 0, 0, 1119, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 1133, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 1716, 1142,
	1140, 0, 2079, 0, 0, 0, 0, 1135, 0, 0,
	0, 0, 1153, 0, 0, 1175, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 1166, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2077, 0, 0, 0, 1126, 0, 0, 1180, 0,
	0, 0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0,
	2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0,
	0, 0, 1124, 0, 5407, 0, 0, 1161, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1172,
	1159, 0, 0, 0, 0, 0, 0, 0, 1179, 1154,
	0, 0, 1145, 1143, 0, 0, 0, 1149, 0, 0,
	0, 0, 0, 0, 0, 1150, 0, 1716, 1117, 0,
	1173, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	1163, 0, 1151, 1132, 0, 0, 0, 0, 1147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1177,
	0, 0, 0, 0, 0, 0, 0, 1155, 0, 1156,
	0, 0, 0, 0, 0, 0, 0, 0, 1130, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	1599, 330, 331, 1600, 1601, 1602, 0, 1603, 742, 1604,
	1605, 1606, 332, 1607, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 1608, 747, 345, 346, 347, 348, 349, 350,
	351, 1609, 1610, 0, 352, 748, 749, 750, 1611, 353,
	354, 751, 1612, 1679, 1613, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 1614, 364, 365, 366, 363, 367,
	368, 1615, 369, 1716, 370, 371, 372, 373, 374, 375,
	376, 1616, 377, 378, 379, 1366, 380, 381, 382, 1617,
	1618, 1620, 1619, 1621, 1622, 1623, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 1624, 393, 395, 389,
	391, 1625, 394, 392, 396, 397, 1626, 398, 399, 400,
	1627, 1628, 401, 402, 403, 1629, 404, 405, 406, 1630,
	407, 408, 409, 1631, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 1632, 319, 1633, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 1634, 429, 430,
	431, 1635, 432, 433, 1636, 1367, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	1637, 446, 760, 1638, 761, 447, 1639, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 1369, 455,
	456, 457, 1640, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 320, 464, 465, 466, 1641, 1368, 765, 467,
	551, 468, 766, 767, 1642, 768, 1643, 469, 470, 473,
	1370, 769, 1371, 472, 474, 475, 1372, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 1644, 484,
	486, 485, 1645, 488, 770, 487, 1373, 489, 490, 1374,
	1646, 491, 492, 493, 494, 495, 496, 499, 1647, 1648,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	1375, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 1376, 543,
	531, 1649, 321, 1377, 545, 546, 547, 548, 1650, 771,
	549, 772, 552, 553, 1651, 0, 554, 0, 555, 1652,
	1653, 557, 558, 559, 1654, 1655, 560, 561, 773, 1378,
	562, 1379, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 1656, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 1657, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 1658, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 1659, 621, 622,
	620, 623, 624, 1380, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 1660, 651,
	652, 650, 653, 654, 655, 1661, 656, 781, 657, 637,
	638, 658, 659, 1381, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 1662, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 1663, 688, 689, 0,
	683, 674, 1664, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 1665, 698, 785, 786, 787, 788, 1666, 710,
	1667, 699, 701, 702, 703, 704, 789, 705, 790, 1668,
	706, 707, 708, 709, 700, 711, 712, 1669, 1670, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 1671, 722,
	1672, 0, 723, 724, 725, 791, 792, 793, 1673, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 1674, 1675, 1676, 1677, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 3138, 0, 0, 0, 0, 0, 0, 0,
	0, 3139, 322, 323, 325, 324, 326, 327, 328, 329,
	1599, 330, 331, 1600, 1601, 1602, 0, 1603, 742, 1604,
	1605, 1606, 332, 1607, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 1608, 747, 345, 346, 347, 348, 349, 350,
	351, 1609, 1610, 0, 352, 748, 749, 750, 1611, 353,
	354, 751, 1612, 1679, 1613, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 1614, 364, 365, 366, 363, 367,
	368, 1615, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 1616, 377, 378, 379, 1366, 380, 381, 382, 1617,
	1618, 1620, 1619, 1621, 1622, 1623, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 1624, 393, 395, 389,
	391, 1625, 394, 392, 396, 397, 1626, 398, 399, 400,
	1627, 1628, 401, 402, 403, 1629, 404, 405, 406, 1630,
	407, 408, 409, 1631, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 1632, 319, 1633, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 1634, 429, 430,
	431, 1635, 432, 433, 1636, 1367, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	1637, 446, 760, 1638, 761, 447, 1639, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 1369, 455,
	456, 457, 1640, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 320, 464, 465, 466, 1641, 1368, 765, 467,
	551, 468, 766, 767, 1642, 768, 1643, 469, 470, 473,
	1370, 769, 1371, 472, 474, 475, 1372, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 1644, 484,
	486, 485, 1645, 488, 770, 487, 1373, 489, 490, 1374,
	1646, 491, 492, 493, 494, 495, 496, 499, 1647, 1648,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	1375, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 1376, 543,
	531, 1649, 321, 1377, 545, 546, 547, 548, 1650, 771,
	549, 772, 552, 553, 1651, 0, 554, 0, 555, 1652,
	1653, 557, 558, 559, 1654, 1655, 560, 561, 773, 1378,
	562, 1379, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 1656, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 1657, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 1658, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 1659, 621, 622,
	620, 623, 624, 1380, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 1660, 651,
	652, 650, 653, 654, 655, 1661, 656, 781, 657, 637,
	638, 658, 659, 1381, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 1662, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 1663, 688, 689, 0,
	683, 674, 1664, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 1665, 698, 785, 786, 787, 788, 1666, 710,
	1667, 699, 701, 702, 703, 704, 789, 705, 790, 1668,
	706, 707, 708, 709, 700, 711, 712, 1669, 1670, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 1671, 722,
	1672, 0, 723, 724, 725, 791, 792, 793, 1673, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 1674, 1675, 1676, 1677, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 4305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4307, 322,
	323, 325, 324, 326, 327, 328, 329, 1599, 330, 331,
	1600, 1601, 1602, 0, 1603, 742, 1604, 1605, 1606, 332,
	1607, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 1608,
	747, 345, 346, 347, 348, 349, 350, 351, 1609, 1610,
	0, 352, 748, 749, 750, 1611, 353, 354, 751, 1612,
	1679, 1613, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 1614, 364, 365, 366, 363, 367, 368, 1615, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 1616, 377,
	378, 379, 1366, 380, 381, 382, 1617, 1618, 1620, 1619,
	1621, 1622, 1623, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 1624, 393, 395, 389, 391, 1625, 394,
	392, 396, 397, 1626, 398, 399, 400, 1627, 1628, 401,
	402, 403, 1629, 404, 405, 406, 1630, 407, 408, 409,
	1631, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 1632,
	319, 1633, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 1634, 429, 430, 431, 1635, 432,
	433, 1636, 1367, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 1637, 446, 760,
	1638, 761, 447, 1639, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 1369, 455, 456, 457, 1640,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 1641, 1368, 765, 467, 551, 468, 766,
	767, 1642, 768, 1643, 469, 470, 473, 1370, 769, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 1644, 484, 486, 485, 1645,
	488, 770, 487, 1373, 489, 490, 1374, 1646, 491, 492,
	493, 494, 495, 496, 499, 1647, 1648, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1649, 321,
	1377, 545, 546, 547, 548, 1650, 771, 549, 772, 552,
	553, 1651, 0, 554, 0, 555, 1652, 1653, 557, 558,
	559, 1654, 1655, 560, 561, 773, 1378, 562, 1379, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 1656, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 1657,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 1658, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 1659, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 1660, 651, 652, 650, 653,
	654, 655, 1661, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 1662, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 1663, 688, 689, 0, 683, 674, 1664,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 1665,
	698, 785, 786, 787, 788, 1666, 710, 1667, 699, 701,
	702, 703, 704, 789, 705, 790, 1668, 706, 707, 708,
	709, 700, 711, 712, 1669, 1670, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1671, 722, 1672, 0, 723,
	724, 725, 791, 792, 793, 1673, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 1674,
	1675, 1676, 1677, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4777,
	322, 323, 325, 324, 326, 327, 328, 329, 1599, 330,
	331, 1600, 1601, 1602, 0, 1603, 742, 1604, 1605, 1606,
	332, 1607, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	1608, 747, 345, 346, 347, 348, 349, 350, 351, 1609,
	1610, 0, 352, 748, 749, 750, 1611, 353, 354, 751,
	1612, 1679, 1613, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 1614, 364, 365, 366, 363, 367, 368, 1615,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 1616,
	377, 378, 379, 1366, 380, 381, 382, 1617, 1618, 1620,
	1619, 1621, 1622, 1623, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 1624, 393, 395, 389, 391, 1625,
	394, 392, 396, 397, 1626, 398, 399, 400, 1627, 1628,
	401, 402, 403, 1629, 404, 405, 406, 1630, 407, 408,
	409, 1631, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	1632, 319, 1633, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 1634, 429, 430, 431, 1635,
	432, 433, 1636, 1367, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 1637, 446,
	760, 1638, 761, 447, 1639, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 1369, 455, 456, 457,
	1640, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	320, 464, 465, 466, 1641, 1368, 765, 467, 551, 468,
	766, 767, 1642, 768, 1643, 469, 470, 473, 1370, 769,
	1371, 472, 474, 475, 1372, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 1644, 484, 486, 485,
	1645, 488, 770, 487, 1373, 489, 490, 1374, 1646, 491,
	492, 493, 494, 495, 496, 499, 1647, 1648, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 1375, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 1376, 543, 531, 1649,
	321, 1377, 545, 546, 547, 548, 1650, 771, 549, 772,
	552, 553, 1651, 0, 554, 0, 555, 1652, 1653, 557,
	558, 559, 1654, 1655, 560, 561, 773, 1378, 562, 1379,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 1656, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	1657, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 1658,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 1659, 621, 622, 620, 623,
	624, 1380, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 1660, 651, 652, 650,
	653, 654, 655, 1661, 656, 781, 657, 637, 638, 658,
	659, 1381, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 1662, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 1663, 688, 689, 0, 683, 674,
	1664, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	1665, 698, 785, 786, 787, 788, 1666, 710, 1667, 699,
	701, 702, 703, 704, 789, 705, 790, 1668, 706, 707,
	708, 709, 700, 711, 712, 1669, 1670, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 1671, 722, 1672, 0,
	723, 724, 725, 791, 792, 793, 1673, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	1674, 1675, 1676, 1677, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4775, 322, 323, 325, 324, 326, 327, 328, 329, 1599,
	330, 331, 1600, 1601, 1602, 0, 1603, 742, 1604, 1605,
	1606, 332, 1607, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 1608, 747, 345, 346, 347, 348, 349, 350, 351,
	1609, 1610, 0, 352, 748, 749, 750, 1611, 353, 354,
	751, 1612, 1679, 1613, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1614, 364, 365, 366, 363, 367, 368,
	1615, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1616, 377, 378, 379, 1366, 380, 381, 382, 1617, 1618,
	1620, 1619, 1621, 1622, 1623, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 1624, 393, 395, 389, 391,
	1625, 394, 392, 396, 397, 1626, 398, 399, 400, 1627,
	1628, 401, 402, 403, 1629, 404, 405, 406, 1630, 407,
	408, 409, 1631, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 1632, 319, 1633, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 1634, 429, 430, 431,
	1635, 432, 433, 1636, 1367, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1637,
	446, 760, 1638, 761, 447, 1639, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 1369, 455, 456,
	457, 1640, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 1641, 1368, 765, 467, 551,
	468, 766, 767, 1642, 768, 1643, 469, 470, 473, 1370,
	769, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 1644, 484, 486,
	485, 1645, 488, 770, 487, 1373, 489, 490, 1374, 1646,
	491, 492, 493, 494, 495, 496, 499, 1647, 1648, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1649, 321, 1377, 545, 546, 547, 548, 1650, 771, 549,
	772, 552, 553, 1651, 0, 554, 0, 555, 1652, 1653,
	557, 558, 559, 1654, 1655, 560, 561, 773, 1378, 562,
	1379, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 1656, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 1657, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	1658, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 1659, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 1660, 651, 652,
	650, 653, 654, 655, 1661, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 1662, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 1663, 688, 689, 0, 683,
	674, 1664, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 1665, 698, 785, 786, 787, 788, 1666, 710, 1667,
	699, 701, 702, 703, 704, 789, 705, 790, 1668, 706,
	707, 708, 709, 700, 711, 712, 1669, 1670, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1671, 722, 1672,
	0, 723, 724, 725, 791, 792, 793, 1673, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 1674, 1675, 1676, 1677, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5042, 322, 323, 325, 324,
	326, 327, 328, 329, 1599, 330, 331, 1600, 1601, 1602,
	0, 1603, 742, 1604, 1605, 1606, 332, 1607, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 1608, 747, 345, 346,
	347, 348, 349, 350, 351, 1609, 1610, 0, 352, 748,
	749, 750, 1611, 353, 354, 751, 1612, 1679, 1613, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1614, 364,
	365, 366, 363, 367, 368, 1615, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 1616, 377, 378, 379, 1366,
	380, 381, 382, 1617, 1618, 1620, 1619, 1621, 1622, 1623,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	1624, 393, 395, 389, 391, 1625, 394, 392, 396, 397,
	1626, 398, 399, 400, 1627, 1628, 401, 402, 403, 1629,
	404, 405, 406, 1630, 407, 408, 409, 1631, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 1632, 319, 1633, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 1634, 429, 430, 431, 1635, 432, 433, 1636, 1367,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1637, 446, 760, 1638, 761, 447,
	1639, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 1369, 455, 456, 457, 1640, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	1641, 1368, 765, 467, 551, 468, 766, 767, 1642, 768,
	1643, 469, 470, 473, 1370, 769, 1371, 472, 474, 475,
	1372, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 1644, 484, 486, 485, 1645, 488, 770, 487,
	1373, 489, 490, 1374, 1646, 491, 492, 493, 494, 495,
	496, 499, 1647, 1648, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 1375, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 1376, 543, 531, 1649, 321, 1377, 545, 546,
	547, 548, 1650, 771, 549, 772, 552, 553, 1651, 0,
	554, 0, 555, 1652, 1653, 557, 558, 559, 1654, 1655,
	560, 561, 773, 1378, 562, 1379, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	1656, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 1657, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 1658, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 1659, 621, 622, 620, 623, 624, 1380, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 1660, 651, 652, 650, 653, 654, 655, 1661,
	656, 781, 657, 637, 638, 658, 659, 1381, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 1662, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	1663, 688, 689, 0, 683, 674, 1664, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 1665, 698, 785, 786,
	787, 788, 1666, 710, 1667, 699, 701, 702, 703, 704,
	789, 705, 790, 1668, 706, 707, 708, 709, 700, 711,
	712, 1669, 1670, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 1671, 722, 1672, 0, 723, 724, 725, 791,
	792, 793, 1673, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 1674, 1675, 1676, 1677,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4888, 322, 323, 325, 324, 326, 327, 328, 329, 1599,
	330, 331, 1600, 1601, 1602, 0, 1603, 742, 1604, 1605,
	1606, 332, 1607, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 1608, 747, 345, 346, 347, 348, 349, 350, 351,
	1609, 1610, 0, 352, 748, 749, 750, 1611, 353, 354,
	751, 1612, 1679, 1613, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1614, 364, 365, 366, 363, 367, 368,
	1615, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1616, 377, 378, 379, 1366, 380, 381, 382, 1617, 1618,
	1620, 1619, 1621, 1622, 1623, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 1624, 393, 395, 389, 391,
	1625, 394, 392, 396, 397, 1626, 398, 399, 400, 1627,
	1628, 401, 402, 403, 1629, 404, 405, 406, 1630, 407,
	408, 409, 1631, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 1632, 319, 1633, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 1634, 429, 430, 431,
	1635, 432, 433, 1636, 1367, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1637,
	446, 760, 1638, 761, 447, 1639, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 1369, 455, 456,
	457, 1640, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 1641, 1368, 765, 467, 551,
	468, 766, 767, 1642, 768, 1643, 469, 470, 473, 1370,
	769, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 1644, 484, 486,
	485, 1645, 488, 770, 487, 1373, 489, 490, 1374, 1646,
	491, 492, 493, 494, 495, 496, 499, 1647, 1648, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1649, 321, 1377, 545, 546, 547, 548, 1650, 771, 549,
	772, 552, 553, 1651, 0, 554, 0, 555, 1652, 1653,
	557, 558, 559, 1654, 1655, 560, 561, 773, 1378, 562,
	1379, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 1656, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 1657, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	1658, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 1659, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 1660, 651, 652,
	650, 653, 654, 655, 1661, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 1662, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 1663, 688, 689, 0, 683,
	674, 1664, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 1665, 698, 785, 786, 787, 788, 1666, 710, 1667,
	699, 701, 702, 703, 704, 789, 705, 790, 1668, 706,
	707, 708, 709, 700, 711, 712, 1669, 1670, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1671, 722, 1672,
	0, 723, 724, 725, 791, 792, 793, 1673, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 1674, 1675, 1676, 1677, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4701, 322, 323, 325, 324,
	326, 327, 328, 329, 1599, 330, 331, 1600, 1601, 1602,
	0, 1603, 742, 1604, 1605, 1606, 332, 1607, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 1608, 747, 345, 346,
	347, 348, 349, 350, 351, 1609, 1610, 0, 352, 748,
	749, 750, 1611, 353, 354, 751, 1612, 1679, 1613, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1614, 364,
	365, 366, 363, 367, 368, 1615, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 1616, 377, 378, 379, 1366,
	380, 381, 382, 1617, 1618, 1620, 1619, 1621, 1622, 1623,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	1624, 393, 395, 389, 391, 1625, 394, 392, 396, 397,
	1626, 398, 399, 400, 1627, 1628, 401, 402, 403, 1629,
	404, 405, 406, 1630, 407, 408, 409, 1631, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 1632, 319, 1633, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 1634, 429, 430, 431, 1635, 432, 433, 1636, 1367,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1637, 446, 760, 1638, 761, 447,
	1639, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 1369, 455, 456, 457, 1640, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	1641, 1368, 765, 467, 551, 468, 766, 767, 1642, 768,
	1643, 469, 470, 473, 1370, 769, 1371, 472, 474, 475,
	1372, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 1644, 484, 486, 485, 1645, 488, 770, 487,
	1373, 489, 490, 1374, 1646, 491, 492, 493, 494, 495,
	496, 499, 1647, 1648, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 1375, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 1376, 543, 531, 1649, 321, 1377, 545, 546,
	547, 548, 1650, 771, 549, 772, 552, 553, 1651, 0,
	554, 0, 555, 1652, 1653, 557, 558, 559, 1654, 1655,
	560, 561, 773, 1378, 562, 1379, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	1656, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 1657, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 1658, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 1659, 621, 622, 620, 623, 624, 1380, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 1660, 651, 652, 650, 653, 654, 655, 1661,
	656, 781, 657, 637, 638, 658, 659, 1381, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 1662, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	1663, 688, 689, 0, 683, 674, 1664, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 1665, 698, 785, 786,
	787, 788, 1666, 710, 1667, 699, 701, 702, 703, 704,
	789, 705, 790, 1668, 706, 707, 708, 709, 700, 711,
	712, 1669, 1670, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 1671, 722, 1672, 0, 723, 724, 725, 791,
	792, 793, 1673, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 1674, 1675, 1676, 1677,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4323, 322, 323, 325, 324, 326, 327, 328, 329, 1599,
	330, 331, 1600, 1601, 1602, 0, 1603, 742, 1604, 1605,
	1606, 332, 1607, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 1608, 747, 345, 346, 347, 348, 349, 350, 351,
	1609, 1610, 0, 352, 748, 749, 750, 1611, 353, 354,
	751, 1612, 1679, 1613, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1614, 364, 365, 366, 363, 367, 368,
	1615, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1616, 377, 378, 379, 1366, 380, 381, 382, 1617, 1618,
	1620, 1619, 1621, 1622, 1623, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 1624, 393, 395, 389, 391,
	1625, 394, 392, 396, 397, 1626, 398, 399, 400, 1627,
	1628, 401, 402, 403, 1629, 404, 405, 406, 1630, 407,
	408, 409, 1631, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 1632, 319, 1633, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 1634, 429, 430, 431,
	1635, 432, 433, 1636, 1367, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1637,
	446, 760, 1638, 761, 447, 1639, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 1369, 455, 456,
	457, 1640, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 1641, 1368, 765, 467, 551,
	468, 766, 767, 1642, 768, 1643, 469, 470, 473, 1370,
	769, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 1644, 484, 486,
	485, 1645, 488, 770, 487, 1373, 489, 490, 1374, 1646,
	491, 492, 493, 494, 495, 496, 499, 1647, 1648, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1649, 321, 1377, 545, 546, 547, 548, 1650, 771, 549,
	772, 552, 553, 1651, 0, 554, 0, 555, 1652, 1653,
	557, 558, 559, 1654, 1655, 560, 561, 773, 1378, 562,
	1379, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 1656, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 1657, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	1658, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 1659, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 1660, 651, 652,
	650, 653, 654, 655, 1661, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 1662, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 1663, 688, 689, 0, 683,
	674, 1664, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 1665, 698, 785, 786, 787, 788, 1666, 710, 1667,
	699, 701, 702, 703, 704, 789, 705, 790, 1668, 706,
	707, 708, 709, 700, 711, 712, 1669, 1670, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1671, 722, 1672,
	0, 723, 724, 725, 791, 792, 793, 1673, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 1674, 1675, 1676, 1677, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4124, 322, 323, 325, 324,
	326, 327, 328, 329, 1599, 330, 331, 1600, 1601, 1602,
	0, 1603, 742, 1604, 1605, 1606, 332, 1607, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 1608, 747, 345, 346,
	347, 348, 349, 350, 351, 1609, 1610, 0, 352, 748,
	749, 750, 1611, 353, 354, 751, 1612, 1679, 1613, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1614, 364,
	365, 366, 363, 367, 368, 1615, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 1616, 377, 378, 379, 1366,
	380, 381, 382, 1617, 1618, 1620, 1619, 1621, 1622, 1623,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	1624, 393, 395, 389, 391, 1625, 394, 392, 396, 397,
	1626, 398, 399, 400, 1627, 1628, 401, 402, 403, 1629,
	404, 405, 406, 1630, 407, 408, 409, 1631, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 1632, 319, 1633, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 1634, 429, 430, 431, 1635, 432, 433, 1636, 1367,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1637, 446, 760, 1638, 761, 447,
	1639, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 1369, 455, 456, 457, 1640, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	1641, 1368, 765, 467, 551, 468, 766, 767, 1642, 768,
	1643, 469, 470, 473, 1370, 769, 1371, 472, 474, 475,
	1372, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 1644, 484, 486, 485, 1645, 488, 770, 487,
	1373, 489, 490, 1374, 1646, 491, 492, 493, 494, 495,
	496, 499, 1647, 1648, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 1375, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 1376, 543, 531, 1649, 321, 1377, 545, 546,
	547, 548, 1650, 771, 549, 772, 552, 553, 1651, 0,
	554, 0, 555, 1652, 1653, 557, 558, 559, 1654, 1655,
	560, 561, 773, 1378, 562, 1379, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	1656, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 1657, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 1658, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 1659, 621, 622, 620, 623, 624, 1380, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 1660, 651, 652, 650, 653, 654, 655, 1661,
	656, 781, 657, 637, 638, 658, 659, 1381, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 1662, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	1663, 688, 689, 0, 683, 674, 1664, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 1665, 698, 785, 786,
	787, 788, 1666, 710, 1667, 699, 701, 702, 703, 704,
	789, 705, 790, 1668, 706, 707, 708, 709, 700, 711,
	712, 1669, 1670, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 1671, 722, 1672, 0, 723, 724, 725, 791,
	792, 793, 1673, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 1674, 1675, 1676, 1677,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2967, 322, 323, 325, 324, 326, 327, 328, 329, 1599,
	330, 331, 1600, 1601, 1602, 0, 1603, 742, 1604, 1605,
	1606, 332, 1607, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 1608, 747, 345, 346, 347, 348, 349, 350, 351,
	1609, 1610, 0, 352, 748, 749, 750, 1611, 353, 354,
	751, 1612, 1679, 1613, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1614, 364, 365, 366, 363, 367, 368,
	1615, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1616, 377, 378, 379, 1366, 380, 381, 382, 1617, 1618,
	1620, 1619, 1621, 1622, 1623, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 1624, 393, 395, 389, 391,
	1625, 394, 392, 396, 397, 1626, 398, 399, 400, 1627,
	1628, 401, 402, 403, 1629, 404, 405, 406, 1630, 407,
	408, 409, 1631, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 1632, 319, 1633, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 1634, 429, 430, 431,
	1635, 432, 433, 1636, 1367, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1637,
	446, 760, 1638, 761, 447, 1639, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 1369, 455, 456,
	457, 1640, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 1641, 1368, 765, 467, 551,
	468, 766, 767, 1642, 768, 1643, 469, 470, 473, 1370,
	769, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 1644, 484, 486,
	485, 1645, 488, 770, 487, 1373, 489, 490, 1374, 1646,
	491, 492, 493, 494, 495, 496, 499, 1647, 1648, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1649, 321, 1377, 545, 546, 547, 548, 1650, 771, 549,
	772, 552, 553, 1651, 0, 554, 0, 555, 1652, 1653,
	557, 558, 559, 1654, 1655, 560, 561, 773, 1378, 562,
	1379, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 1656, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 1657, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	1658, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 1659, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 1660, 651, 652,
	650, 653, 654, 655, 1661, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 1662, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 1663, 688, 689, 0, 683,
	674, 1664, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 1665, 698, 785, 786, 787, 788, 1666, 710, 1667,
	699, 701, 702, 703, 704, 789, 705, 790, 1668, 706,
	707, 708, 709, 700, 711, 712, 1669, 1670, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1671, 722, 1672,
	0, 723, 724, 725, 791, 792, 793, 1673, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 1674, 1675, 1676, 1677, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 1590, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2572, 322, 323, 325, 324,
	326, 327, 328, 329, 1599, 330, 331, 1600, 1601, 1602,
	0, 1603, 742, 1604, 1605, 1606, 332, 1607, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 1608, 747, 345, 346,
	347, 348, 349, 350, 351, 1609, 1610, 0, 352, 748,
	749, 750, 1611, 353, 354, 751, 1612, 1679, 1613, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1614, 364,
	365, 366, 363, 367, 368, 1615, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 1616, 377, 378, 379, 1366,
	380, 381, 382, 1617, 1618, 1620, 1619, 1621, 1622, 1623,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	1624, 393, 395, 389, 391, 1625, 394, 392, 396, 397,
	1626, 398, 399, 400, 1627, 1628, 401, 402, 403, 1629,
	404, 405, 406, 1630, 407, 408, 409, 1631, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 1632, 319, 1633, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 1634, 429, 430, 431, 1635, 432, 433, 1636, 1367,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1637, 446, 760, 1638, 761, 447,
	1639, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 1369, 455, 456, 457, 1640, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	1641, 1368, 765, 467, 551, 468, 766, 767, 1642, 768,
	1643, 469, 470, 473, 1370, 769, 1371, 472, 474, 475,
	1372, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 1644, 484, 486, 485, 1645, 488, 770, 487,
	1373, 489, 490, 1374, 1646, 491, 492, 493, 494, 495,
	496, 499, 1647, 1648, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 1375, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 1376, 543, 531, 1649, 321, 1377, 545, 546,
	547, 548, 1650, 771, 549, 772, 552, 553, 1651, 0,
	554, 0, 555, 1652, 1653, 557, 558, 559, 1654, 1655,
	560, 561, 773, 1378, 562, 1379, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	1656, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 1657, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 1658, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 1659, 621, 622, 620, 623, 624, 1380, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 1660, 651, 652, 650, 653, 654, 655, 1661,
	656, 781, 657, 637, 638, 658, 659, 1381, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 1662, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	1663, 688, 689, 0, 683, 674, 1664, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 1665, 698, 785, 786,
	787, 788, 1666, 710, 1667, 699, 701, 702, 703, 704,
	789, 705, 790, 1668, 706, 707, 708, 709, 700, 711,
	712, 1669, 1670, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 1671, 722, 1672, 0, 723, 724, 725, 791,
	792, 793, 1673, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 1674, 1675, 1676, 1677,
	737, 738, 795, 739, 740, 741, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 1599, 330, 331, 1600, 1601, 1602, 0, 1603, 742,
	1604, 1605, 1606, 332, 1607, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 1608, 747, 345, 346, 347, 348, 349,
	350, 351, 1609, 1610, 0, 352, 748, 749, 750, 1611,
	353, 354, 751, 1612, 1679, 1613, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 1614, 364, 365, 366, 363,
	367, 368, 1615, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 1616, 377, 378, 379, 1366, 380, 381, 382,
	1617, 1618, 1620, 1619, 1621, 1622, 1623, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 1624, 393, 395,
	389, 391, 1625, 394, 392, 396, 397, 1626, 398, 399,
	400, 1627, 1628, 401, 402, 403, 1629, 404, 405, 406,
	1630, 407, 408, 409, 1631, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 1632, 319, 1633, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 1634, 429,
	430, 431, 1635, 432, 433, 1636, 1367, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 1637, 446, 760, 1638, 761, 447, 1639, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 1369,
	455, 456, 457, 1640, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 1641, 1368, 765,
	467, 551, 468, 766, 767, 1642, 768, 1643, 469, 470,
	473, 1370, 769, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 1644,
	484, 486, 485, 1645, 488, 770, 487, 1373, 489, 490,
	1374, 1646, 491, 492, 493, 494, 495, 496, 499, 1647,
	1648, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1649, 321, 1377, 545, 546, 547, 548, 1650,
	771, 549, 772, 552, 553, 1651, 0, 554, 0, 555,
	1652, 1653, 557, 558, 559, 1654, 1655, 560, 561, 773,
	1378, 562, 1379, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 1656, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 1657, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 1658, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 1659, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 1660,
	651, 652, 650, 653, 654, 655, 1661, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 1662, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 1663, 688, 689,
	0, 683, 674, 1664, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 1665, 698, 785, 786, 787, 788, 1666,
	710, 1667, 699, 701, 702, 703, 704, 789, 705, 790,
	1668, 706, 707, 708, 709, 700, 711, 712, 1669, 1670,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1671,
	722, 1672, 0, 723, 724, 725, 791, 792, 793, 1673,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 1674, 1675, 1676, 1677, 737, 738, 795,
	739, 740, 741, 2942, 0, 1301, 1273, 1274, 1275, 1271,
	1272, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	2939, 330, 331, 0, 0, 0, 0, 0, 1325, 1289,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 743, 1338, 0, 343, 1345,
	344, 1344, 0, 1355, 345, 346, 347, 348, 349, 350,
	351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 1348, 388, 390, 1342, 1341, 1261, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	2940, 0, 401, 1333, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1267, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 1280, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1340, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 1353,
	1354, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 1290, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 550, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 320, 464, 465, 466, 0, 1368, 765, 467,
	551, 468, 1335, 1336, 0, 1296, 0, 469, 470, 473,
	1370, 1328, 1371, 472, 474, 475, 1372, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 1364, 487, 1373, 489, 490, 1374,
	0, 491, 492, 493, 494, 495, 496, 499, 1319, 1318,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	1375, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 1376, 543,
	531, 1258, 321, 1377, 545, 546, 547, 548, 1281, 1329,
	549, 1343, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 1378,
	562, 1379, 1358, 563, 564, 1268, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 1359, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 1339, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 1380, 625, 626, 627, 628, 629, 1269,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 1322, 656, 781, 657, 637,
	638, 658, 659, 1381, 660, 661, 662, 663, 664, 665,
	666, 1337, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 1384, 677, 678, 679,
	680, 1360, 684, 685, 686, 687, 0, 688, 689, 1255,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 1349, 1350, 1351, 1352, 0, 710,
	0, 699, 701, 702, 703, 704, 1361, 705, 1362, 1279,
	706, 707, 708, 709, 700, 711, 712, 0, 1262, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 1323, 722,
	0, 0, 723, 724, 725, 791, 1346, 1383, 2938, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 0, 0, 0, 0, 737, 738, 795, 739,
	740, 741, 1259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1254, 0, 0,
	0, 0, 0, 0, 1252, 1253, 2941, 0, 0, 0,
	0, 0, 0, 0, 1285, 2937, 0, 1243, 1283, 1301,
	1273, 1274, 1275, 1271, 1272, 1284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 1325, 1289, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 743,
	1338, 0, 343, 1345, 344, 1344, 0, 1355, 345, 346,
	347, 348, 349, 350, 351, 1291, 1324, 1256, 352, 1385,
	1386, 750, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 1348, 388, 390, 1342, 1341,
	1261, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1267, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 1280, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1340, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 1353, 1354, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 1290, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1326, 1327,
	1330, 550, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	0, 1368, 765, 467, 551, 468, 1335, 1336, 0, 1296,
	0, 469, 470, 473, 1370, 1328, 1371, 472, 474, 475,
	1372, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 1364, 487,
	1373, 489, 490, 1374, 0, 491, 492, 493, 494, 495,
	496, 499, 1319, 1318, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 1375, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 1376, 543, 531, 1258, 321, 1377, 545, 546,
	547, 548, 1281, 1329, 549, 1343, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 1378, 562, 1379, 1358, 563, 564, 1268,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 1359, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 1339,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 1380, 625, 626,
	627, 628, 629, 1269, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 275, 651, 652, 650, 653, 654, 655, 1322,
	656, 781, 657, 637, 638, 658, 659, 1381, 660, 661,
	662, 663, 664, 665, 666, 1337, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	1384, 677, 678, 679, 680, 1360, 684, 685, 686, 687,
	0, 688, 689, 1255, 683, 674, 277, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 1349, 1350,
	1351, 1352, 0, 710, 0, 699, 701, 702, 703, 704,
	1361, 705, 1362, 1279, 706, 707, 708, 709, 700, 711,
	712, 0, 1262, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 1323, 722, 0, 0, 723, 724, 725, 1843,
	1346, 1383, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 0, 0, 0, 269,
	737, 738, 795, 739, 740, 741, 1259, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1254, 0, 0, 0, 0, 0, 0, 1252, 1253,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 2118, 2116,
	0, 0, 1283, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 275, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 277, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	711, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	1843, 1346, 1383, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	269, 737, 738, 795, 739, 740, 741, 1259, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1254, 0, 0, 0, 0, 0, 0, 1252,
	1253, 1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 2118,
	3699, 0, 0, 1283, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 1325, 1289, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 743, 1338, 0, 343, 1345, 344, 1344, 0, 1355,
	345, 346, 347, 348, 349, 350, 351, 1291, 1324, 1256,
	352, 1385, 1386, 750, 0, 353, 354, 1331, 0, 1312,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317,
	1316, 1320, 383, 384, 385, 386, 387, 1348, 388, 390,
	1342, 1341, 1261, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1333,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1267, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1356, 1357, 424, 1280, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1340, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 1353, 1354, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1363, 0,
	1290, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1326, 1327, 1330, 550, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 320, 464,
	465, 466, 0, 1368, 765, 467, 551, 468, 1335, 1336,
	0, 1296, 0, 469, 470, 473, 1370, 1328, 1371, 472,
	474, 475, 1372, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	1364, 487, 1373, 489, 490, 1374, 0, 491, 492, 493,
	494, 495, 496, 499, 1319, 1318, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 1375, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 1376, 543, 531, 1258, 321, 1377,
	545, 546, 547, 548, 1281, 1329, 549, 1343, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 1378, 562, 1379, 1358, 563,
	564, 1268, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 1359, 583, 778, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 1339, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 1380,
	625, 626, 627, 628, 629, 1269, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 275, 651, 652, 650, 653, 654,
	655, 1322, 656, 781, 657, 637, 638, 658, 659, 1381,
	660, 661, 662, 663, 664, 665, 666, 1337, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 1384, 677, 678, 679, 680, 1360, 684, 685,
	686, 687, 0, 688, 689, 1255, 683, 674, 277, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	1349, 1350, 1351, 1352, 0, 710, 0, 699, 701, 702,
	703, 704, 1361, 705, 1362, 1279, 706, 707, 708, 709,
	700, 711, 712, 0, 1262, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 1323, 722, 0, 0, 723, 724,
	725, 1843, 1346, 1383, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 0, 0,
	0, 269, 737, 738, 795, 739, 740, 741, 1259, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1254, 0, 0, 0, 0, 0, 0,
	1252, 1253, 1301, 1273, 1274, 1275, 1271, 1272, 1284, 0,
	2118, 2116, 0, 0, 1283, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 1338, 0, 343, 1345, 344, 1344, 3072,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 3077, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 3073,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	1377, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 3074, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 711, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1259,
	0, 0, 0, 0, 2987, 0, 1301, 1273, 1274, 1275,
	1271, 1272, 1284, 0, 1254, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 1261, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1267, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1258, 321, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 1268, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	1255, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 1262,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1254, 0,
	0, 0, 0, 0, 0, 1252, 1253, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 2985, 0, 2984, 1283,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	711, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 1346, 1383, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 1259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1254, 0, 0, 0, 0, 0, 0, 1252,
	1253, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	2982, 0, 2981, 1283, 1301, 1273, 1274, 1275, 1271, 1272,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 1325, 1289, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1291, 1324, 1256, 352, 1385, 1386, 750, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 1261, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1267, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1280, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1290, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 1335, 1336, 0, 1296, 0, 469, 470, 473, 1370,
	1328, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 1364, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 1319, 1318, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1258, 321, 1377, 545, 546, 547, 548, 1281, 1329, 549,
	1343, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 1358, 563, 564, 1268, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 1359, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 1339, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 1269, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 1322, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	1337, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 1384, 677, 678, 679, 680,
	1360, 684, 685, 686, 687, 0, 688, 689, 1255, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 1349, 1350, 1351, 1352, 0, 710, 0,
	699, 701, 702, 703, 704, 1361, 705, 1362, 1279, 706,
	707, 708, 709, 700, 711, 712, 0, 1262, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1323, 722, 0,
	0, 723, 724, 725, 791, 1346, 1383, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 1259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1254, 0, 0, 0,
	0, 0, 0, 1252, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 2979, 0, 2978, 1283, 1301, 1273,
	1274, 1275, 1271, 1272, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 1256, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 388, 390, 1342, 1341, 1261,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 1290, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 1258, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 1268, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 1269, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 1255, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 1262, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 1259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1254, 0, 0, 0, 0, 0, 0, 1252, 1253, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 2976, 0,
	1948, 1283, 1301, 1273, 1274, 1275, 1271, 1272, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	1377, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 711, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 1947,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1259,
	0, 0, 0, 0, 1248, 0, 1301, 1273, 1274, 1275,
	1271, 1272, 1284, 0, 1254, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 1261, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1267, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1258, 321, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	1263, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 1268, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	1255, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 1262,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1259, 0, 0, 0, 0, 0, 0,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 1254, 0,
	0, 0, 0, 0, 0, 1252, 1253, 322, 323, 325,
	324, 326, 327, 328, 329, 1285, 330, 331, 0, 1283,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 5436, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 1263, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	711, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 1346, 1383, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 1259, 0, 0,
	0, 0, 0, 0, 1301, 1273, 1274, 1275, 1271, 1272,
	1284, 0, 1254, 0, 0, 0, 0, 0, 0, 1252,
	1253, 322, 323, 325, 324, 326, 327, 328, 329, 1285,
	330, 331, 0, 1283, 0, 0, 0, 1325, 1289, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1291, 1324, 1256, 352, 1385, 1386, 750, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 1261, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1267, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1280, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1290, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 2817, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 1335, 1336, 0, 1296, 0, 469, 470, 473, 1370,
	1328, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 1364, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 1319, 1318, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1258, 321, 1377, 545, 546, 547, 548, 1281, 1329, 549,
	1343, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 1358, 563, 564, 1268, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 1359, 583, 778, 584,
	585, 2816, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 1339, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 1269, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 1322, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	1337, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 1384, 677, 678, 679, 680,
	1360, 684, 685, 686, 687, 0, 688, 689, 1255, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 1349, 1350, 1351, 1352, 0, 710, 0,
	699, 701, 702, 703, 704, 1361, 705, 1362, 1279, 706,
	707, 708, 709, 700, 711, 712, 0, 1262, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1323, 722, 0,
	0, 723, 724, 725, 791, 1346, 1383, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 1259, 0, 0, 0, 0, 0, 0, 1301, 1273,
	1274, 1275, 1271, 1272, 1284, 0, 1254, 0, 0, 0,
	0, 0, 0, 1252, 1253, 322, 323, 325, 324, 326,
	327, 328, 329, 1285, 330, 331, 0, 1283, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 1256, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 5141, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 388, 390, 1342, 1341, 1261,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 1290, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 1258, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 1263, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 1268, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 1269, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 1255, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 1262, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 1259, 0, 0, 0, 0,
	0, 0, 1301, 1273, 1274, 1275, 1271, 1272, 1284, 0,
	1254, 0, 0, 0, 0, 0, 0, 1252, 1253, 322,
	323, 325, 324, 326, 327, 328, 329, 1285, 330, 331,
	0, 1283, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	1377, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 1263, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 711, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1259,
	0, 0, 0, 0, 0, 0, 1301, 1273, 1274, 1275,
	1271, 1272, 1284, 0, 1254, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 1261, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1267, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1258, 4665, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 1268, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	1255, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 1262,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1254, 0,
	0, 0, 0, 0, 0, 1252, 1253, 2189, 1301, 1273,
	1274, 1275, 1271, 1272, 1284, 1285, 0, 0, 0, 1283,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 1256, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 388, 390, 1342, 1341, 1261,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 1290, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 1258, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 1268, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 1269, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 1255, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 1262, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 1259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1254, 0, 0, 0, 0, 0, 0, 1252, 1253, 2189,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 1285, 0, 0,
	0, 1283, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	711, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 1346, 1383, 4301, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 1259, 0, 0,
	0, 0, 0, 0, 1301, 1273, 1274, 1275, 1271, 1272,
	1284, 0, 1254, 0, 0, 0, 0, 0, 0, 1252,
	1253, 322, 323, 325, 324, 326, 327, 328, 329, 1285,
	330, 331, 0, 1283, 0, 0, 0, 1325, 1289, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1291, 1324, 1256, 352, 1385, 1386, 750, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 1261, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1267, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1280, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 3077, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1290, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 1335, 1336, 0, 1296, 0, 469, 470, 473, 1370,
	1328, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 1364, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 1319, 1318, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1258, 321, 1377, 545, 546, 547, 548, 1281, 1329, 549,
	1343, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 1358, 563, 564, 1268, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 1359, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 1339, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 1269, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 1322, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	1337, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 1384, 677, 678, 679, 680,
	1360, 684, 685, 686, 687, 0, 688, 689, 1255, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 1349, 1350, 1351, 1352, 0, 710, 0,
	699, 701, 702, 703, 704, 1361, 705, 1362, 1279, 706,
	707, 708, 709, 700, 711, 712, 0, 1262, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1323, 722, 0,
	0, 723, 724, 725, 791, 1346, 1383, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 1259, 0, 0, 0, 0, 0, 0, 1301, 1273,
	1274, 1275, 1271, 1272, 1284, 0, 1254, 0, 0, 0,
	0, 0, 0, 1252, 1253, 322, 323, 325, 324, 326,
	327, 328, 329, 1285, 330, 331, 0, 1283, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 1256, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 388, 390, 1342, 1341, 1261,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 1290, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 1258, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 1268, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 1269, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 1255, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 1262, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 1259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1254, 0, 0, 0, 0, 0, 0, 1252, 1253, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 2116, 0,
	3082, 1283, 1301, 1273, 1274, 1275, 1271, 1272, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	1377, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 711, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1259,
	0, 0, 0, 0, 3080, 0, 1301, 1273, 1274, 1275,
	1271, 1272, 1284, 0, 1254, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 1261, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1267, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1258, 321, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 1268, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	1255, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 1262,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1259, 0, 0, 0, 0, 3068, 0,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 1254, 0,
	0, 0, 0, 0, 0, 1252, 1253, 322, 323, 325,
	324, 326, 327, 328, 329, 1285, 330, 331, 0, 1283,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	711, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 1346, 1383, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 1259, 0, 0,
	0, 0, 3057, 0, 1301, 1273, 1274, 1275, 1271, 1272,
	1284, 0, 1254, 0, 0, 0, 0, 0, 0, 1252,
	1253, 322, 323, 325, 324, 326, 327, 328, 329, 1285,
	330, 331, 0, 1283, 0, 0, 0, 1325, 1289, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1291, 1324, 1256, 352, 1385, 1386, 750, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 1261, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1267, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1280, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1290, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 1335, 1336, 0, 1296, 0, 469, 470, 473, 1370,
	1328, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 1364, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 1319, 1318, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1258, 321, 1377, 545, 546, 547, 548, 1281, 1329, 549,
	1343, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 1358, 563, 564, 1268, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 1359, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 1339, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 1269, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 1322, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	1337, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 1384, 677, 678, 679, 680,
	1360, 684, 685, 686, 687, 0, 688, 689, 1255, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 1349, 1350, 1351, 1352, 0, 710, 0,
	699, 701, 702, 703, 704, 1361, 705, 1362, 1279, 706,
	707, 708, 709, 700, 711, 712, 0, 1262, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1323, 722, 0,
	0, 723, 724, 725, 791, 1346, 1383, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 1259, 0, 0, 0, 0, 3055, 0, 3046, 3053,
	1274, 1275, 1271, 1272, 1284, 0, 1254, 0, 0, 0,
	0, 0, 0, 1252, 1253, 322, 323, 325, 324, 326,
	327, 328, 329, 1285, 330, 331, 0, 1283, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 1256, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 3049, 390, 1342, 1341, 1261,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 1290, 447, 0,
	448, 449, 450, 451, 452, 3050, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 3051, 509, 3048, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 1258, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 1268, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 1269, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 3052, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 1255, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 1262, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 3047, 741, 1259, 0, 0, 0, 0,
	3043, 0, 3046, 3053, 1274, 1275, 1271, 1272, 1284, 0,
	1254, 0, 0, 0, 0, 0, 0, 1252, 1253, 322,
	323, 325, 324, 326, 327, 328, 329, 1285, 330, 331,
	0, 1283, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 3049,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 3050,
	454, 1326, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 3051, 509,
	3048, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	1377, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 3052, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 711, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 3047, 741, 1259,
	0, 0, 0, 0, 0, 0, 1301, 1273, 1274, 1275,
	1271, 1272, 1284, 0, 1254, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 1261, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1267, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1258, 321, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 1268, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	1255, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 1262,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1254, 0,
	0, 0, 0, 0, 0, 1252, 1253, 0, 0, 0,
	0, 0, 0, 2124, 0, 1285, 0, 0, 0, 1283,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 2796, 330, 331, 0, 0,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	711, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 1346, 1383, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 1259, 0, 0,
	0, 0, 2756, 0, 1301, 1273, 1274, 1275, 1271, 1272,
	1284, 0, 1254, 0, 0, 0, 0, 0, 0, 1252,
	1253, 322, 323, 325, 324, 326, 327, 328, 329, 1285,
	330, 331, 0, 1283, 0, 0, 0, 1325, 1289, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1291, 1324, 1256, 352, 1385, 1386, 750, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 1261, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1267, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1280, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1290, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 1335, 1336, 0, 1296, 0, 469, 470, 473, 1370,
	1328, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 1364, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 1319, 1318, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1258, 321, 1377, 545, 546, 547, 548, 1281, 1329, 549,
	1343, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 1358, 563, 564, 1268, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 1359, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 1339, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 1269, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 1322, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	1337, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 1384, 677, 678, 679, 680,
	1360, 684, 685, 686, 687, 0, 688, 689, 1255, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 1349, 1350, 1351, 1352, 0, 710, 0,
	699, 701, 702, 703, 704, 1361, 705, 1362, 1279, 706,
	707, 708, 709, 700, 711, 712, 0, 1262, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1323, 722, 0,
	0, 723, 724, 725, 791, 1346, 1383, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 1259, 0, 0, 0, 0, 2724, 0, 1301, 1273,
	1274, 1275, 1271, 1272, 1284, 0, 1254, 0, 0, 0,
	0, 0, 0, 1252, 1253, 322, 323, 325, 324, 326,
	327, 328, 329, 1285, 330, 331, 0, 1283, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 1256, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 388, 390, 1342, 1341, 1261,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 1290, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 1258, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 1268, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 1269, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 1255, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 1262, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 1259, 0, 0, 0, 0,
	1953, 0, 1301, 1273, 1274, 1275, 1271, 1272, 1284, 0,
	1254, 0, 0, 0, 0, 0, 0, 1252, 1253, 322,
	323, 325, 324, 326, 327, 328, 329, 1285, 330, 331,
	0, 1283, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	1377, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 711, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1259,
	0, 0, 0, 0, 1878, 0, 1301, 1273, 1274, 1275,
	1271, 1272, 1284, 0, 1254, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 1261, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1267, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1258, 321, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 1268, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	1255, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 1262,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1259, 0, 0, 0, 0, 1873, 0,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 1254, 0,
	0, 0, 0, 0, 0, 1252, 1253, 322, 323, 325,
	324, 326, 327, 328, 329, 1285, 330, 331, 0, 1283,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	711, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 1346, 1383, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 1259, 0, 0,
	0, 0, 1859, 0, 1301, 1273, 1274, 1275, 1271, 1272,
	1284, 0, 1254, 0, 0, 0, 0, 0, 0, 1252,
	1253, 322, 323, 325, 324, 326, 327, 328, 329, 1285,
	330, 331, 0, 1283, 0, 0, 0, 1325, 1289, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1291, 1324, 1256, 352, 1385, 1386, 750, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 1261, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1267, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1280, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1290, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 1335, 1336, 0, 1296, 0, 469, 470, 473, 1370,
	1328, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 1364, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 1319, 1318, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1258, 321, 1377, 545, 546, 547, 548, 1281, 1329, 549,
	1343, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 1358, 563, 564, 1268, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 1359, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 1339, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 1269, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 1322, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	1337, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 1384, 677, 678, 679, 680,
	1360, 684, 685, 686, 687, 0, 688, 689, 1255, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 1349, 1350, 1351, 1352, 0, 710, 0,
	699, 701, 702, 703, 704, 1361, 705, 1362, 1279, 706,
	707, 708, 709, 700, 711, 712, 0, 1262, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1323, 722, 0,
	0, 723, 724, 725, 791, 1346, 1383, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 1259, 0, 0, 0, 0, 1854, 0, 1301, 1273,
	1274, 1275, 1271, 1272, 1284, 0, 1254, 0, 0, 0,
	0, 0, 0, 1252, 1253, 322, 323, 325, 324, 326,
	327, 328, 329, 1285, 330, 331, 0, 1283, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 1256, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 388, 390, 1342, 1341, 1261,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 1290, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 1258, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 1268, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 1269, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 1255, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 1262, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 1259, 0, 0, 0, 0,
	1760, 0, 1301, 1273, 1274, 1275, 1271, 1272, 1284, 0,
	1254, 0, 0, 0, 0, 0, 0, 1252, 1253, 322,
	323, 325, 324, 326, 327, 328, 329, 1285, 330, 331,
	0, 1283, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1759, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	1377, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 711, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1259,
	0, 0, 0, 0, 1754, 0, 1301, 1273, 1274, 1275,
	1271, 1272, 1284, 0, 1254, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 1261, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1267, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1753, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1258, 321, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 1268, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	1255, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 1262,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1259, 0, 0, 0, 0, 1747, 0,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 1254, 0,
	0, 0, 0, 0, 0, 1252, 1253, 322, 323, 325,
	324, 326, 327, 328, 329, 1285, 330, 331, 0, 1283,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	711, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 1346, 1383, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 1259, 0, 0,
	0, 0, 1720, 0, 1301, 1273, 1274, 1275, 1271, 1272,
	1284, 0, 1254, 0, 0, 0, 0, 0, 0, 1252,
	1253, 322, 323, 325, 324, 326, 327, 328, 329, 1285,
	330, 331, 0, 1283, 0, 0, 0, 1325, 1289, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1291, 1324, 1256, 352, 1385, 1386, 750, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 1261, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1267, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1280, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1290, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 1335, 1336, 0, 1296, 0, 469, 470, 473, 1370,
	1328, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 1364, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 1319, 1318, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1258, 321, 1377, 545, 546, 547, 548, 1281, 1329, 549,
	1343, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 1358, 563, 564, 1268, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 1359, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 1339, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 1269, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 1322, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	1337, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 1384, 677, 678, 679, 680,
	1360, 684, 685, 686, 687, 0, 688, 689, 1255, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 1349, 1350, 1351, 1352, 0, 710, 0,
	699, 701, 702, 703, 704, 1361, 705, 1362, 1279, 706,
	707, 708, 709, 700, 711, 712, 0, 1262, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1323, 722, 0,
	0, 723, 724, 725, 791, 1346, 1383, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 1259, 0, 0, 0, 0, 1692, 0, 1301, 1273,
	1274, 1275, 1271, 1272, 1284, 0, 1254, 0, 0, 0,
	0, 0, 0, 1252, 1253, 322, 323, 325, 324, 326,
	327, 328, 329, 1285, 330, 331, 0, 1283, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 1256, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 388, 390, 1342, 1341, 1261,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 1696, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 1290, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 1258, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 1268, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 1697, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 1269, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 1255, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 1695, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 1262, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 1259, 0, 0, 0, 0,
	1520, 0, 1301, 1273, 1274, 1275, 1271, 1272, 1284, 0,
	1254, 0, 0, 0, 0, 0, 0, 1252, 1253, 322,
	323, 325, 324, 326, 327, 328, 329, 1285, 330, 331,
	0, 1283, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	1377, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 711, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1259,
	0, 0, 0, 0, 0, 0, 1301, 1273, 1274, 1275,
	1271, 1272, 1284, 0, 1254, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 1261, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1267, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1258, 321, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 1268, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	1255, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 1262,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1259, 0, 0, 0, 0, 0, 0,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 1254, 0,
	0, 0, 0, 0, 0, 1252, 1253, 322, 323, 325,
	324, 326, 327, 328, 329, 1285, 330, 331, 0, 1283,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 5489, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	5488, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 1346, 1383, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 1259, 0, 0,
	0, 0, 0, 0, 1301, 1273, 1274, 1275, 1271, 1272,
	1284, 0, 1254, 0, 0, 0, 0, 0, 0, 1252,
	1253, 322, 323, 325, 324, 326, 327, 328, 329, 1285,
	330, 331, 0, 1283, 0, 0, 0, 1325, 1289, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 5487, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1291, 1324, 1256, 352, 1385, 1386, 750, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 5489, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 1261, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1267, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1280, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1290, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 1335, 1336, 0, 1296, 0, 469, 470, 473, 1370,
	1328, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 1364, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 1319, 1318, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	1258, 321, 1377, 545, 546, 547, 548, 1281, 1329, 549,
	1343, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 1358, 563, 564, 1268, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 1359, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 1339, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 1269, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 1322, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	1337, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 1384, 677, 678, 679, 680,
	1360, 684, 685, 686, 687, 0, 688, 689, 1255, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 1349, 1350, 1351, 1352, 0, 710, 0,
	699, 701, 702, 703, 704, 1361, 705, 1362, 1279, 706,
	707, 708, 709, 700, 5488, 712, 0, 1262, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1323, 722, 0,
	0, 723, 724, 725, 791, 1346, 1383, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 1259, 0, 0, 0, 0, 0, 0, 1301, 1273,
	1274, 1275, 1271, 1272, 1284, 0, 1254, 0, 0, 0,
	0, 0, 0, 1252, 1253, 322, 323, 325, 324, 326,
	327, 328, 329, 1285, 330, 331, 0, 1283, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 1256, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	5061, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 388, 390, 1342, 1341, 1261,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 5062, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 1258, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 1268, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	5060, 629, 1269, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 1255, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 1262, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 1259, 0, 0, 0, 0,
	0, 0, 1301, 1273, 1274, 1275, 3665, 3666, 1284, 0,
	1254, 0, 0, 0, 0, 0, 0, 1252, 1253, 322,
	323, 325, 324, 326, 327, 328, 329, 1285, 330, 331,
	0, 1283, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	1377, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 711, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1259,
	0, 0, 0, 0, 0, 0, 1301, 1273, 1274, 1275,
	3663, 3664, 1284, 0, 1254, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 1291, 1324, 1256, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 1261, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1267, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 1258, 321, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 1268, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	1255, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 1262,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1259, 0, 0, 0, 0, 0, 0,
	1301, 1273, 1274, 1275, 1271, 1272, 1284, 0, 1254, 0,
	0, 0, 0, 0, 0, 1252, 1253, 322, 323, 325,
	324, 326, 327, 328, 329, 1285, 330, 331, 0, 1283,
	0, 0, 0, 1325, 1289, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 1338, 0, 343, 1345, 344, 1344, 0, 1355, 345,
	346, 347, 348, 349, 350, 351, 1291, 1324, 1256, 352,
	1385, 1386, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 1348, 388, 390, 1342,
	1341, 1261, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1267, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 1280, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1340, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 1353, 1354, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 1290,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 1335, 1336, 0,
	1296, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 1258, 321, 1377, 545,
	546, 547, 548, 1281, 1329, 549, 1343, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	1268, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	1339, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 1269, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 1337, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 1384, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 1255, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 1349,
	1350, 1351, 1352, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 1279, 706, 707, 708, 709, 700,
	711, 712, 0, 1262, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 1346, 1383, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 1259, 0, 0,
	0, 0, 0, 0, 1301, 1273, 1274, 1275, 1271, 1272,
	1284, 0, 1254, 0, 0, 0, 0, 0, 0, 2804,
	2805, 322, 323, 325, 324, 326, 327, 328, 329, 1285,
	330, 331, 0, 1283, 0, 0, 0, 1325, 1289, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 1338, 0, 343, 1345, 344,
	1344, 0, 1355, 345, 346, 347, 348, 349, 350, 351,
	1291, 1324, 0, 352, 1385, 1386, 750, 0, 353, 354,
	1331, 0, 1312, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 1315, 1313,
	1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386, 387,
	1348, 388, 390, 1342, 1341, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1267, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1356, 1357,
	424, 1280, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1340, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 1353, 1354,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1363, 0, 1290, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1326, 1327, 1330, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 1335, 1336, 0, 1296, 0, 469, 470, 473, 1370,
	1328, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 1364, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 1319, 1318, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	0, 321, 1377, 545, 546, 547, 548, 1281, 1329, 549,
	1343, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 1358, 563, 564, 1268, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 1359, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 1339, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 1269, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 1322, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	1337, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 1384, 677, 678, 679, 680,
	1360, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 1349, 1350, 1351, 1352, 0, 710, 0,
	699, 701, 702, 703, 704, 1361, 705, 1362, 1279, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 1323, 722, 0,
	0, 723, 724, 725, 791, 1346, 1383, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 1301, 1273,
	1274, 1275, 1271, 1272, 1284, 0, 3065, 0, 0, 0,
	0, 0, 0, 3063, 3064, 322, 323, 325, 324, 326,
	327, 328, 329, 1285, 330, 331, 0, 1283, 0, 0,
	0, 1325, 1289, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 1338,
	0, 343, 1345, 344, 1344, 0, 1355, 345, 346, 347,
	348, 349, 350, 351, 1291, 1324, 0, 352, 1385, 1386,
	750, 0, 353, 354, 1331, 0, 1312, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383,
	384, 385, 386, 387, 1348, 388, 390, 1342, 1341, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1333, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1267,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1356, 1357, 424, 1280, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1340, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 1353, 1354, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1363, 0, 1290, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1326, 1327, 1330,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 1335, 1336, 0, 1296, 0,
	469, 470, 473, 1370, 1328, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 1364, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 1319, 1318, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 0, 321, 1377, 545, 546, 547,
	548, 1281, 1329, 549, 1343, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 1358, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	1359, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 1339, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 3658, 3659, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1322, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 1337, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 1384,
	677, 678, 679, 680, 1360, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 1349, 1350, 1351,
	1352, 0, 710, 0, 699, 701, 702, 703, 704, 1361,
	705, 1362, 1279, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 1323, 722, 0, 0, 723, 724, 725, 791, 1346,
	1383, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 0, 0, 0, 0, 0,
	0, 0, 1301, 1273, 1274, 1275, 1271, 1272, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 2388, 2389, 322,
	323, 325, 324, 326, 327, 328, 329, 1285, 330, 331,
	0, 1283, 0, 0, 0, 1325, 1289, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 0, 1338, 0, 343, 1345, 344, 1344, 0,
	1355, 345, 346, 347, 348, 349, 350, 351, 1291, 1324,
	1256, 352, 1385, 1386, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 5489, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 1348, 388,
	390, 1342, 1341, 1261, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1333, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1267, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 1280,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1340,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 1353, 1354, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 1290, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 1335,
	1336, 0, 1296, 0, 469, 470, 473, 0, 1328, 0,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 1258, 321,
	0, 545, 546, 547, 548, 1281, 1329, 549, 1343, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 1268, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 1339, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 1269, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 1337, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 1384, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 1255, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 1349, 1350, 1351, 1352, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 1279, 706, 707, 708,
	709, 700, 5488, 712, 0, 1262, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 1346, 1383, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 3084, 0, 1301, 1273, 1274, 1275,
	1271, 1272, 1284, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 1253, 322, 323, 325, 324, 326, 327, 328,
	329, 1285, 330, 331, 0, 1283, 0, 0, 0, 1325,
	1289, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 1338, 0, 343,
	1345, 344, 1344, 0, 1355, 345, 346, 347, 348, 349,
	350, 351, 0, 1324, 0, 352, 1385, 1386, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 1348, 388, 390, 1342, 1341, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1333, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 1280, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1340, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	1353, 1354, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 1290, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 1335, 1336, 0, 1296, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 0, 321, 1377, 545, 546, 547, 548, 1281,
	1329, 549, 1343, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 1339, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	1269, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 1337, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 1384, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 1349, 1350, 1351, 1352, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	1279, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 1346, 1383, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 1722, 0, 1301, 1273, 1274,
	1275, 1271, 1272, 1284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 1285, 0, 0, 0, 1283,
	1325, 1289, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 743, 1338, 0,
	343, 1345, 344, 1344, 0, 1355, 345, 346, 347, 348,
	349, 350, 351, 0, 1324, 0, 352, 1385, 1386, 750,
	0, 353, 354, 1331, 0, 1312, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384,
	385, 386, 387, 1348, 388, 390, 1342, 1341, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1356, 1357, 424, 1280, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1340, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 1353, 1354, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1363, 0, 1290, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1326, 1327, 1330, 550,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 320, 464, 465, 466, 0, 1368,
	765, 467, 551, 468, 1335, 1336, 0, 1296, 0, 469,
	470, 473, 1370, 1328, 1371, 472, 474, 475, 1372, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 1364, 487, 1373, 489,
	490, 1374, 0, 491, 492, 493, 494, 495, 496, 499,
	1319, 1318, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 1375, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	1376, 543, 531, 0, 321, 1377, 545, 546, 547, 548,
	1281, 1329, 549, 1343, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 1378, 562, 1379, 1358, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 1359,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 1339, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 1380, 625, 626, 627, 628,
	629, 1269, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 1322, 656, 781,
	657, 637, 638, 658, 659, 1381, 660, 661, 662, 663,
	664, 665, 666, 1337, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 1384, 677,
	678, 679, 680, 1360, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 1349, 1350, 1351, 1352,
	0, 710, 0, 699, 701, 702, 703, 704, 1361, 705,
	1362, 1279, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	1323, 722, 0, 0, 723, 724, 725, 791, 1346, 1383,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 0, 0, 0, 0, 737, 738,
	795, 739, 740, 741, 1243, 0, 1424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 1285, 0, 0, 1325,
	1283, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 1324, 0, 352, 748, 749, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 1410,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 0, 321, 1377, 545, 546, 547, 548, 0,
	1329, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 1416, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	780, 1418, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 275,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 277, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 1843, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 269, 737, 738, 795,
	739, 740, 741, 1424, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 1414, 0, 2213, 1325, 0, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	1324, 0, 352, 748, 749, 750, 0, 353, 354, 1331,
	0, 1312, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 1315, 1313, 1314,
	1321, 1317, 1316, 1320, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1356, 1357, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1363, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1326, 1327, 1330, 550, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	320, 464, 465, 466, 0, 1368, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 1370, 1328,
	1371, 472, 474, 475, 1372, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 1410, 484, 486, 485,
	0, 488, 1364, 487, 1373, 489, 490, 1374, 0, 491,
	492, 493, 494, 495, 496, 499, 1319, 1318, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 1375, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 1376, 543, 531, 0,
	321, 1377, 545, 546, 547, 548, 0, 1329, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 1416, 557,
	558, 559, 0, 0, 560, 561, 773, 1378, 562, 1379,
	1358, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 1359, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 1380, 625, 626, 627, 628, 629, 780, 1418, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 275, 651, 652, 650,
	653, 654, 655, 1322, 656, 781, 657, 637, 638, 658,
	659, 1381, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 1360,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	277, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 1361, 705, 1362, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 1323, 722, 0, 0,
	723, 724, 725, 1843, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	0, 0, 0, 269, 737, 738, 795, 739, 740, 741,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3825, 0, 1424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1414, 0, 2213, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 1325,
	0, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 1324, 0, 352, 748, 749, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 1410,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 0, 321, 1377, 545, 546, 547, 548, 0,
	1329, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 1416, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	780, 1418, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1406, 0, 1424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 1414, 0, 1412, 0, 0, 1325, 0,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 1324, 0, 352, 748, 749, 750, 0, 353,
	354, 1331, 0, 1312, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 1315,
	1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1356,
	1357, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1363, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1326, 1327, 1330, 550, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 320, 464, 465, 466, 0, 1368, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	1370, 1328, 1371, 472, 474, 475, 1372, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 1410, 484,
	486, 485, 0, 488, 1364, 487, 1373, 489, 490, 1374,
	0, 491, 492, 493, 494, 495, 496, 499, 1319, 1318,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	1375, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 1376, 543,
	531, 0, 321, 1377, 545, 546, 547, 548, 0, 1329,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	1416, 557, 558, 559, 0, 0, 560, 561, 773, 1378,
	562, 1379, 1358, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 1359, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 1380, 625, 626, 627, 628, 629, 780,
	1418, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 1322, 656, 781, 657, 637,
	638, 658, 659, 1381, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 1360, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 1361, 705, 1362, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 1323, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 0, 0, 0, 0, 737, 738, 795, 739,
	740, 741, 1424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 1414, 0, 1412, 1325, 0, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 1324,
	0, 352, 748, 749, 750, 0, 353, 354, 1331, 0,
	1312, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 1315, 1313, 1314, 1321,
	1317, 1316, 1320, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1356, 1357, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1363,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1326, 1327, 1330, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 1370, 1328, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 1410, 484, 486, 485, 0,
	488, 1364, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 1319, 1318, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 0, 321,
	1377, 545, 546, 547, 548, 0, 1329, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 1416, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 1358,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 1359, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 780, 1418, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1322, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 1360, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 1361, 705, 1362, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 1323, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 1414,
	0, 1412, 1325, 0, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 1324, 0, 352, 748,
	749, 750, 0, 353, 354, 1331, 0, 1312, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316, 1320,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1356, 1357, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1363, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1326, 1327,
	1330, 550, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	0, 1368, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 1370, 1328, 1371, 472, 474, 475,
	1372, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 1364, 487,
	1373, 489, 490, 1374, 0, 491, 492, 493, 494, 495,
	496, 499, 1319, 1318, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 1375, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 1376, 543, 531, 0, 321, 1377, 545, 546,
	547, 548, 0, 1329, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 1378, 562, 1379, 1358, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 1359, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 1380, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 1322,
	656, 781, 657, 637, 638, 658, 659, 1381, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 1360, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	1361, 705, 1362, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 1323, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 0, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 1424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 4858, 1325,
	0, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 1324, 0, 352, 748, 749, 750, 0,
	353, 354, 1331, 0, 1312, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	1315, 1313, 1314, 1321, 1317, 1316, 1320, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1356, 1357, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1363, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1326, 1327, 1330, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 1370, 1328, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 1364, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 1319,
	1318, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 0, 321, 1377, 545, 546, 547, 548, 0,
	1329, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 1358, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 1359, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	780, 1418, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 1322, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 1360, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 1361, 705, 1362,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 1323,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 316, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 2910, 2911, 2912, 2929, 2930, 2931, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 2932, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 2108, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 2093, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 2922, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 2918, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 2923, 2924, 2925, 2926, 425, 426, 427,
	757, 0, 0, 2917, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 2927, 2928, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 2920, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 2921,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 2092, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	0, 0, 0, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1243,
	0, 1713, 2907, 2908, 2909, 2933, 2919, 2913, 0, 2915,
	2916, 2914, 2901, 2902, 2903, 2904, 2905, 2906, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 0, 353, 354, 751, 0, 1679,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	762, 763, 764, 550, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 0, 464,
	465, 466, 0, 1368, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 470, 473, 1370, 769, 1371, 472,
	474, 475, 1372, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	770, 487, 1373, 489, 490, 1374, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 1375, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 1376, 543, 531, 0, 0, 1377,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 1378, 562, 1379, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 1380,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 275, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 1381,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 277, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 1843, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 0, 0,
	0, 269, 737, 738, 795, 739, 740, 741, 0, 1840,
	270, 1713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	216, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 1365, 336, 337, 338, 339, 340, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 0, 353, 354, 751, 0, 1679,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1366, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1367, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	762, 763, 764, 550, 1369, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 0, 464,
	465, 466, 0, 1368, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 470, 473, 1370, 769, 1371, 472,
	474, 475, 1372, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	770, 487, 1373, 489, 490, 1374, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 1375, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 1376, 543, 531, 0, 0, 1377,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 1378, 562, 1379, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 1380,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 275, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 1381,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 277, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 1843, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 0, 0,
	0, 269, 737, 738, 795, 739, 740, 741, 1713, 1712,
	270, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	216, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 0, 353, 354, 751, 0, 1679, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 762, 763, 764,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 0, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 1370, 769, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 0, 0, 1377, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 1713, 1712, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 1867, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 1679, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 0, 464, 465, 466, 0, 1368, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	1370, 769, 1371, 472, 474, 475, 1372, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 1373, 489, 490, 1374,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	1375, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 1376, 543,
	531, 0, 0, 1377, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 1378,
	562, 1379, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 1380, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 1381, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 0, 0, 0, 0, 737, 738, 795, 739,
	740, 741, 1713, 1712, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 4205, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 1365, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	1679, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1366, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1367, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 1369, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 1368, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 1370, 769, 1371,
	472, 474, 475, 1372, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 1373, 489, 490, 1374, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 1375, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 1376, 543, 531, 0, 0,
	1377, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 1378, 562, 1379, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 2660, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	1380, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	1381, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 1713,
	2564, 0, 0, 0, 0, 2565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 1867, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 1679, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 1368, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 1370, 769, 1371, 472, 474, 475,
	1372, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 2563, 486, 485, 0, 488, 770, 487,
	1373, 489, 490, 1374, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 1375, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 1376, 543, 531, 0, 0, 1377, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 1378, 562, 1379, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 1380, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 1381, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 0, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 1713, 1712, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 1867, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 1679, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 1370, 769, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 0, 0, 1377, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1243, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 1849, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 0, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 0, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 275, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 277, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 1843, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 316, 0, 0, 269, 737, 738, 795, 739,
	740, 741, 0, 0, 270, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 216, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 321,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 316,
	3429, 0, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 2227, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 0, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 316, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 5669, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 321, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 316, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 1837, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 320, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 321, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 0, 0, 3237, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 4156, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 0, 2287, 0, 343, 2277, 344,
	2293, 0, 2300, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 2303, 2304, 0, 0, 353, 354,
	0, 0, 1679, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	1348, 388, 390, 2291, 2290, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1333, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 0, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 0, 0,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 2289, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 2298, 2299,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 0, 0, 0, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 0, 0, 0, 550, 1369, 455, 456,
	457, 3231, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 0, 464, 465, 466, 0, 1368, 3233, 467, 551,
	468, 2284, 2285, 0, 2280, 0, 469, 470, 473, 1370,
	0, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 0, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	0, 0, 1377, 545, 546, 547, 548, 0, 0, 549,
	2292, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 3232, 1378, 562,
	1379, 0, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 2274, 577,
	578, 579, 2275, 580, 581, 582, 0, 583, 0, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 2288, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 0, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 0, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	2286, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 2302, 677, 678, 679, 680,
	0, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 2294, 2295, 2296, 2297, 0, 710, 0,
	699, 701, 702, 703, 704, 0, 705, 0, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 0, 2278, 2301, 3234, 727, 728,
	726, 729, 730, 733, 731, 732, 0, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 0, 739, 740,
	741, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 3226, 742, 0, 2268, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 0,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 3237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 3548, 0, 0, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 0,
	2287, 0, 343, 2277, 344, 2293, 0, 2300, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 2303,
	2304, 0, 0, 353, 354, 0, 0, 1679, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 1348, 388, 390, 2291, 2290,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1333, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	0, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 0, 0, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 2289, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 2298, 2299, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 0, 0, 0, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 550, 1369, 455, 456, 457, 3231, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 1368, 3233, 467, 551, 468, 2284, 2285, 0, 2280,
	0, 469, 470, 473, 1370, 0, 1371, 472, 474, 475,
	1372, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 0, 487,
	1373, 489, 490, 1374, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 1375, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 1376, 543, 531, 0, 0, 1377, 545, 546,
	547, 548, 0, 0, 549, 2292, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 3232, 1378, 562, 1379, 0, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 2274, 577, 578, 579, 2275, 580, 581,
	582, 0, 583, 0, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 2288,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 1380, 625, 626,
	627, 628, 629, 0, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 0, 657, 637, 638, 658, 659, 1381, 660, 661,
	662, 663, 664, 665, 666, 2286, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	2302, 677, 678, 679, 680, 0, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 2294, 2295,
	2296, 2297, 0, 710, 0, 699, 701, 702, 703, 704,
	0, 705, 0, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 0,
	2278, 2301, 3234, 727, 728, 726, 729, 730, 733, 731,
	732, 0, 734, 471, 735, 736, 0, 0, 0, 0,
	737, 738, 0, 739, 740, 741, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 2268, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 0, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 316, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 4326, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	0, 0, 0, 0, 737, 738, 795, 739, 740, 741,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 2647, 1325, 0, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 1324, 0, 352,
	748, 749, 750, 0, 353, 354, 1331, 0, 1312, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 1315, 1313, 1314, 1321, 1317, 1316,
	1320, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1356, 1357, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1363, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1326,
	1327, 1330, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 1370, 1328, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 1364,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 1319, 1318, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 0, 321, 1377, 545,
	546, 547, 548, 0, 1329, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 1358, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 1359, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1322, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 1360, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 1361, 705, 1362, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 1323, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 2281, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 0, 2287, 0,
	343, 2277, 344, 2293, 0, 2300, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 2303, 2304, 0,
	0, 353, 354, 0, 0, 1679, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 1348, 388, 390, 2291, 2290, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1333, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 0, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 2289, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 2298, 2299, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 0, 0, 0, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 0, 0, 0, 550,
	1369, 455, 456, 457, 3231, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 0, 464, 465, 466, 0, 1368,
	3233, 467, 551, 468, 2284, 2285, 0, 2280, 0, 469,
	470, 473, 1370, 0, 1371, 472, 474, 475, 1372, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 0, 487, 1373, 489,
	490, 1374, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 1375, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	1376, 543, 531, 0, 0, 1377, 545, 546, 547, 548,
	0, 0, 549, 2292, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	3232, 1378, 562, 1379, 0, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 2274, 577, 578, 579, 2275, 580, 581, 582, 0,
	583, 0, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 2288, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 1380, 625, 626, 627, 628,
	629, 0, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 0,
	657, 637, 638, 658, 659, 1381, 660, 661, 662, 663,
	664, 665, 666, 2286, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 2302, 677,
	678, 679, 680, 0, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 2294, 2295, 2296, 2297,
	0, 710, 0, 699, 701, 702, 703, 704, 0, 705,
	0, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 0, 2278, 2301,
	3234, 727, 728, 726, 729, 730, 733, 731, 732, 0,
	734, 471, 735, 736, 0, 0, 0, 0, 737, 738,
	0, 739, 740, 741, 1062, 0, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	2268, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	968, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 1059, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 321, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 1061,
	0, 683, 674, 966, 690, 691, 692, 693, 694, 967,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 2250, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 4461, 330,
	331, 0, 0, 0, 0, 0, 742, 971, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 2257, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 2258, 755, 756, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 2259, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	320, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	321, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 4460, 635,
	644, 645, 646, 647, 649, 648, 0, 2254, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	2256, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	4459, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	2250, 0, 0, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 2308, 330, 331, 0, 0,
	0, 0, 0, 742, 971, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 354, 751, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 2257, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 2258, 755, 756, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 2259, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 762,
	763, 764, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 0, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 0, 769, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 321, 0, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 0, 562, 0, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 2307, 635, 644, 645, 646,
	647, 649, 648, 0, 2309, 652, 650, 653, 654, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 2256, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 2306, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 2250, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 2249, 330, 331, 0, 0, 0, 0, 0,
	742, 971, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 2257, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	2258, 755, 756, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 2259, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 762, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 320, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 321, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 2248, 635, 644, 645, 646, 647, 649, 648,
	0, 2254, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 2256, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 2247, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 959, 0, 961, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 971, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	968, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 321, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 966, 690, 691, 692, 693, 694, 967,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 961, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 971, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 968, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	320, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	321, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	966, 690, 691, 692, 693, 694, 967, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	3237, 0, 0, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 0, 971, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	0, 2287, 0, 343, 2277, 344, 2293, 0, 2300, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	2303, 2304, 0, 0, 353, 354, 0, 0, 1679, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 1348, 388, 390, 2291,
	2290, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1333, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 0, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 0, 0, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 2289, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 2298, 2299, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 0, 0, 0,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 0,
	0, 0, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 0, 464, 465,
	466, 0, 1368, 0, 467, 551, 468, 2284, 2285, 0,
	2280, 0, 469, 470, 473, 1370, 0, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 0,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 0, 0, 1377, 545,
	546, 547, 548, 0, 0, 549, 2292, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 0, 1378, 562, 1379, 0, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 2274, 577, 578, 579, 2275, 580,
	581, 582, 0, 583, 0, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	2288, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 0, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	0, 656, 0, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 2286, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 2302, 677, 678, 679, 680, 0, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 2294,
	2295, 2296, 2297, 0, 710, 0, 699, 701, 702, 703,
	704, 0, 705, 0, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	0, 2278, 2301, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 0, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 0, 739, 740, 741, 3217, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 2268, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 321, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 2250, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	971, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	2257, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 2258,
	755, 756, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 2259, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 321, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 2702, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 2703, 635, 644, 645, 646, 647, 649, 648, 0,
	2254, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 2256, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 2704, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 2281, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 0, 971, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 0, 2287, 0, 343, 2277, 344, 2293,
	0, 2300, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 2303, 2304, 0, 0, 353, 354, 0,
	0, 1679, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 1348,
	388, 390, 2291, 2290, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1333, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 0, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 0, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	2289, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 2298, 2299, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	0, 0, 0, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 0, 0, 0, 550, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 1368, 0, 467, 551, 468,
	2284, 2285, 0, 2280, 0, 469, 470, 473, 1370, 0,
	1371, 472, 474, 475, 1372, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 0, 487, 1373, 489, 490, 1374, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 1375, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 1376, 543, 531, 0,
	0, 1377, 545, 546, 547, 548, 0, 0, 549, 2292,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 0, 1378, 562, 1379,
	0, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 2274, 577, 578,
	579, 2275, 580, 581, 582, 0, 583, 0, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 2288, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 1380, 625, 626, 627, 628, 629, 0, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 0, 657, 637, 638, 658,
	659, 1381, 660, 661, 662, 663, 664, 665, 666, 2286,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 2302, 677, 678, 679, 680, 0,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 2294, 2295, 2296, 2297, 0, 710, 0, 699,
	701, 702, 703, 704, 0, 705, 0, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 0, 2278, 2301, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 0, 734, 471, 735, 736,
	0, 0, 0, 0, 737, 738, 0, 739, 740, 741,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 742, 0, 0, 2268, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 354, 751, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 755, 756, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 762,
	763, 764, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 0, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 0, 769, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 321, 0, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 0, 562, 0, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 316, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	742, 971, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 762, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 320, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 321, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 316, 0, 0, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 927, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 0, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 0, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	1712, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4704, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 1365, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 1679, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1366,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1367,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 1369, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 1368, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 1370, 769, 1371, 472, 474, 475,
	1372, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	1373, 489, 490, 1374, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 1375, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 1376, 543, 531, 0, 0, 1377, 545, 546,
	547, 548, 4589, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 1378, 562, 1379, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 1380, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 1381, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 0, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 3632, 0, 1713, 1712,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	1365, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 0, 353, 354, 751, 0, 1679, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1366, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1367, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 762, 763, 764,
	550, 1369, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 0, 464, 465, 466, 0,
	1368, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 1370, 769, 1371, 472, 474, 475, 1372,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 1373,
	489, 490, 1374, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 1375, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 1376, 543, 531, 0, 0, 1377, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 1378, 562, 1379, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 1380, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 1381, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 2583, 0, 1713, 1712, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 1679, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1770, 763, 764, 550,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 0, 464, 465, 466, 0, 1368,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 1370, 769, 1371, 472, 474, 475, 1372, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 1373, 489,
	490, 1374, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 1375, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	1376, 543, 531, 0, 0, 1377, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 1378, 562, 1379, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 1380, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 1381, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 0, 0, 0, 0, 737, 738,
	795, 739, 740, 741, 2317, 0, 1713, 1712, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 1365, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 1679, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1366, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1367, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 1369,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 1368, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 1370, 769, 1371, 472, 474, 475, 1372, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 1373, 489, 490,
	1374, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 1375, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 1376,
	543, 531, 0, 0, 1377, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	1378, 562, 1379, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 1380, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 1381, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 0, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 1901, 0, 1713, 1712, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 1365, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 1679, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 1900,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1366, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 319, 0, 0, 0, 0, 0, 1897,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1367, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 1369, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 0, 464, 465, 466, 0, 1368, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	1370, 769, 1371, 472, 474, 475, 1372, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 1373, 489, 490, 1374,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	1375, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 1376, 543,
	531, 0, 0, 1377, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 1378,
	562, 1379, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 1898, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 1380, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 1896, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 1381, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 1899, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 0, 0, 0, 0, 737, 738, 795, 739,
	740, 741, 1767, 0, 1713, 1712, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 1679, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1770, 763, 764, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 0, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 1370,
	769, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	0, 0, 1377, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 0, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 1708, 0, 1713, 1712, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 1365, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 1679, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1366, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1367, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 1369, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 1368, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 1370, 769,
	1371, 472, 474, 475, 1372, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 1373, 489, 490, 1374, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 1375, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 1376, 543, 531, 0,
	0, 1377, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 1378, 562, 1379,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 1380, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 1706, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 1381, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	0, 0, 0, 0, 737, 738, 795, 739, 740, 741,
	1713, 1712, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 332, 0, 333,
	334, 335, 1365, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 354, 751, 0, 1679, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1366, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 755, 756, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1367, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 762,
	763, 764, 550, 1369, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 0, 464, 465,
	466, 0, 1368, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 1370, 769, 1371, 472, 474,
	475, 1372, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 1373, 489, 490, 1374, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 1375, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 1376, 543, 531, 0, 0, 1377, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 1378, 562, 1379, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 1380, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 1381, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 1713, 1712, 0,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 1365,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 1679, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1366, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1367, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 762, 763, 764, 550,
	1369, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 0, 464, 465, 466, 0, 1368,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 1370, 769, 1371, 472, 474, 475, 1372, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 1373, 489,
	490, 1374, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 1375, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	1376, 543, 531, 0, 0, 1377, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 1378, 562, 1379, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 1380, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 1381, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 1713, 0, 0, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 1365, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 1679, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1366, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1367, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 1369, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 0, 464, 465, 466, 0, 1368, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 1370,
	769, 1371, 472, 474, 475, 1372, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 1373, 489, 490, 1374, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 1375,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 1376, 543, 531,
	0, 0, 1377, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 1378, 562,
	1379, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 1380, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 1381, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 316, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 3299, 353, 354, 751, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 4148, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	3303, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 4147,
	0, 0, 0, 0, 0, 425, 426, 427, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 3302, 432, 433,
	0, 0, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	762, 763, 764, 550, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 4144, 464,
	465, 466, 0, 0, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 4146, 473, 0, 769, 0, 472,
	474, 475, 0, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	770, 487, 0, 489, 490, 4143, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 0, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 0, 543, 531, 0, 0, 0,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 0, 562, 0, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 3301, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 0,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 0, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 0,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 0, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 4145, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 791, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 316, 0,
	0, 0, 737, 738, 795, 739, 740, 741, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 3299, 353, 354, 751, 0, 0, 3293, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 3295, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 3303, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 3302, 432, 433, 0, 0, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 3292, 763, 764,
	550, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 0, 464, 465, 466, 0,
	0, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 0, 769, 0, 472, 474, 475, 0,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 0,
	489, 490, 0, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 0, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 0, 543, 531, 0, 0, 0, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 0, 562, 0, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 3301, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 0, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 0, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 3300, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 1985, 0, 316, 0, 737,
	738, 795, 739, 740, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 1984, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 1982, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	1987, 755, 756, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 1983, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 762, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 320, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 321, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 1986,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 1981, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 1979, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 1980, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 1683, 0, 316, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1685, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 321, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 1416, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 1680, 0, 316, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1682, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 320, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 321, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	1416, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 1586, 0, 316, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1588, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 321, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 1416,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 830, 0, 316, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 828, 328, 329, 817, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 820,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 826, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 822, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 829, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	816, 0, 316, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 817, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 820, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 821, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 822, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 815, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 316,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 817, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 820, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 821, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 0, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 822, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 316, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 817, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 820, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 4599, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 0, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 822,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 316, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	320, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	321, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 1416, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	316, 0, 0, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 354, 751, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 755, 756, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 762,
	763, 764, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 0, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 0, 769, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 4014, 543, 531, 0, 321, 0, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 0, 562, 0, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 3517, 0, 316,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 3516, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 321, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 316, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 817, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 820, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 821, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 0, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 822,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 3219,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 2668, 0, 316, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 320, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 321, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 2612, 0, 316, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 2611, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 321, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 2596, 0, 316, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 2598, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	320, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	321, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	2587, 0, 316, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 321,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 316,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 2557, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 321, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 1416, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 1815, 0, 316, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 0, 353, 354, 751, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1814, 763, 764,
	550, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	0, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 0, 769, 0, 472, 474, 475, 0,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 0,
	489, 490, 0, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 0, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 0, 543, 531, 0, 321, 0, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 0, 562, 0, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 0, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 0, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 1705, 0, 316, 0, 737,
	738, 795, 739, 740, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 762, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 320, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 321, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 1698, 0, 316, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1700, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 321, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 1688, 0, 316, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 320, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 321, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 1504, 0, 316, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1503, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 321, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 1493, 0, 316, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1492, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	320, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	321, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	1489, 0, 316, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1488, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 320,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 321,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 1483,
	0, 316, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 0, 353, 354, 751, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1482, 763, 764, 550, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 320, 464,
	465, 466, 0, 0, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 470, 473, 0, 769, 0, 472,
	474, 475, 0, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	770, 487, 0, 489, 490, 0, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 0, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 0, 543, 531, 0, 321, 0,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 0, 562, 0, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 0,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 0, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 0,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 0, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 791, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 1460, 0,
	316, 0, 737, 738, 795, 739, 740, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 354, 751, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 755, 756, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1459,
	763, 764, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 0, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 0, 769, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 321, 0, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 0, 562, 0, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 797, 0, 316,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 321, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 307, 0, 316, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 0, 353, 354, 751, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 762, 763, 764,
	550, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 320, 464, 465, 466, 0,
	0, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 0, 769, 0, 472, 474, 475, 0,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 0,
	489, 490, 0, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 0, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 0, 543, 531, 0, 321, 0, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 0, 562, 0, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 0, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 0, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 316, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 320, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 321, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 316, 0, 0, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 820, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 821, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 822, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 316,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 2712, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 320, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 321, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 316, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	2710, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 320, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 321, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 316, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 2708, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	320, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	321, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	316, 0, 0, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 354, 751, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 755, 756, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 2619,
	763, 764, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 320, 464, 465,
	466, 0, 0, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 0, 769, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 321, 0, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 0, 562, 0, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 316, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 2341, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 320, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 321, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 316, 0, 0, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 2335, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 320, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 321, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 1046, 0, 316, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 1045, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	1044, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	920, 0, 316, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	909, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 918,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 911, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 917,
	433, 913, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 914,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 912, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 915, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	916, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	910, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 903,
	0, 316, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 909,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 918, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 0, 353, 354, 751, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 911, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 917, 433,
	913, 0, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	762, 763, 764, 550, 0, 455, 456, 457, 914, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 0, 464,
	465, 466, 0, 0, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 470, 473, 0, 769, 0, 472,
	474, 475, 0, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 912, 0, 484, 486, 485, 0, 488,
	770, 487, 0, 489, 490, 0, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 0, 526, 527, 528,
	915, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 0, 543, 531, 0, 0, 0,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 0, 562, 0, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 0, 916,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 910,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 0,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 0, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 0,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 0, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 791, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 316, 0,
	0, 0, 737, 738, 795, 739, 740, 741, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 0, 353, 354, 751, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 4147, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 762, 763, 764,
	550, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 0, 464, 465, 466, 0,
	0, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 0, 769, 0, 472, 474, 475, 0,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 0,
	489, 490, 0, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 0, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 0, 543, 531, 0, 0, 0, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 0, 562, 0, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 4957, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 0, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 0, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 1531, 0, 316, 0, 737,
	738, 795, 739, 740, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 1534,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 1532,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 762, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 0, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 891, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 0, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 890, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 889, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 1535, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 887, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 1531, 0, 316, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 1534, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 1532, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	891, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 0, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 890, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 889, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 1535, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 887, 786, 787, 788, 0,
	710, 0, 699, 1533, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 898, 0, 316, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	896, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 0, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 0, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 806, 0, 316, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 805,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 0, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 0, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 804,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 316, 3429, 0, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 0, 353, 354, 751, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	762, 763, 764, 550, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 0, 464,
	465, 466, 0, 0, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 470, 473, 0, 769, 0, 472,
	474, 475, 0, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	770, 487, 0, 489, 490, 0, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 0, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 0, 543, 531, 0, 0, 0,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 0, 562, 0, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 0,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 0, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 0,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 0, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 791, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 316, 0,
	0, 0, 737, 738, 795, 739, 740, 741, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 0, 353, 354, 751, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 762, 763, 764,
	550, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 0, 464, 465, 466, 0,
	0, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 0, 769, 0, 472, 474, 475, 0,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 0,
	489, 490, 0, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 0, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 0, 543, 531, 0, 0, 0, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 0, 562, 0, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 5279, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 0, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 0, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 316, 3954, 0, 0, 737,
	738, 795, 739, 740, 741, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 0, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 0, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 316, 0, 0, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 4830,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 316,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	4522, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 762, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 0, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 316, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 3153, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 0, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 316, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 3144, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	316, 3429, 0, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 354, 751, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 755, 756, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 762,
	763, 764, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 0, 464, 465,
	466, 0, 0, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 0, 769, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 0, 0, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 3509, 0,
	0, 560, 561, 773, 0, 562, 0, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 316, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 762, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 0, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 0, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 2495, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 890, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 889, 635, 644, 645, 646, 647, 3378, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 887, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 316, 0, 0, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 2681,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 0, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 0, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 2666, 0, 316, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	1871, 0, 316, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 1863,
	0, 316, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 0, 353, 354, 751, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	762, 763, 764, 550, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 0, 464,
	465, 466, 0, 0, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 470, 473, 0, 769, 0, 472,
	474, 475, 0, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	770, 487, 0, 489, 490, 0, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 0, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 0, 543, 531, 0, 0, 0,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 0, 562, 0, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 0,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 0, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 0,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 0, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 791, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 881, 0,
	316, 0, 737, 738, 795, 739, 740, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 877, 751, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 755, 756, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 762,
	763, 764, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 0, 464, 465,
	466, 0, 0, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 0, 769, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 882, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 891, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 0, 0, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 0, 562, 0, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 890,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 889, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 1848, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 887,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 1821, 0, 316,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1820, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 0, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 1804, 0, 316, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 0, 353, 354, 751, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1802, 763, 764,
	550, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 0, 464, 465, 466, 0,
	0, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 0, 769, 0, 472, 474, 475, 0,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 0,
	489, 490, 0, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 0, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 0, 543, 531, 0, 0, 0, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 0, 562, 0, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 0, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 0, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 1796, 0, 316, 0, 737,
	738, 795, 739, 740, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 762, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 0, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 0, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 1774, 0, 316, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1772, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 0, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 1765, 0, 316, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 0, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 0, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 1726, 0, 316, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 0, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 0, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 1690, 0, 316, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	1537, 0, 316, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 890, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 889, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 887, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 1508,
	0, 316, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 0, 353, 354, 751, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1507, 763, 764, 550, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 0, 464,
	465, 466, 0, 0, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 470, 473, 0, 769, 0, 472,
	474, 475, 0, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	770, 487, 0, 489, 490, 0, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 0, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 0, 543, 531, 0, 0, 0,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 0, 562, 0, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 0,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 0, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 0,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 0, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 791, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 1500, 0,
	316, 0, 737, 738, 795, 739, 740, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 354, 751, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 755, 756, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1499,
	763, 764, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 0, 464, 465,
	466, 0, 0, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 0, 769, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 0, 0, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 0, 562, 0, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 316, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 1441, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 762, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 0, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 0, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 901, 0, 316, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 0, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 881, 0, 316, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	877, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 876, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 0, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 882, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 891,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 0, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 890, 626, 627, 628, 629, 878,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	889, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 879, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 887, 786, 787, 788, 0, 710,
	0, 699, 883, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 870, 0, 316, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 762, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 0, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 0, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 871, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 832, 0, 316, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	824, 0, 316, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 801,
	0, 316, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 0, 353, 354, 751, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	762, 763, 764, 550, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 0, 464,
	465, 466, 0, 0, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 470, 473, 0, 769, 0, 472,
	474, 475, 0, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	770, 487, 0, 489, 490, 0, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 0, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 0, 543, 531, 0, 0, 0,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 0, 562, 0, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 0,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 0, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 0,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 0, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 791, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 316, 0,
	0, 0, 737, 738, 795, 739, 740, 741, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 0, 353, 354, 751, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 762, 763, 764,
	550, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 0, 464, 465, 466, 0,
	0, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 0, 769, 0, 472, 474, 475, 0,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 0,
	489, 490, 0, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 0, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 0, 543, 531, 0, 0, 0, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 0, 562, 0, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 0, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 0, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 316, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 4179, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 0, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 0, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 640, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 316, 0, 0, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 890, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 889, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 656, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 887, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 316,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 4071, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 0, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 316, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 4040, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 0, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 600,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 316, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 4036, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	594, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 630, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	316, 0, 0, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	743, 744, 0, 343, 745, 344, 746, 0, 747, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	748, 749, 750, 0, 353, 354, 751, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 752,
	753, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 754, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 755, 756, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 757, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 758, 759, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 760, 0, 761,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 3979,
	763, 764, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 0, 464, 465,
	466, 0, 0, 765, 467, 551, 468, 766, 767, 0,
	768, 0, 469, 470, 473, 0, 769, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 770,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 0, 0, 545,
	546, 547, 548, 0, 771, 549, 772, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 773, 0, 562, 0, 774, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 775, 577, 578, 579, 776, 580,
	581, 582, 777, 583, 778, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	779, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 780, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	0, 656, 781, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 782, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 783, 677, 678, 679, 680, 784, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 785,
	786, 787, 788, 0, 710, 0, 699, 701, 702, 703,
	704, 789, 705, 790, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	791, 792, 793, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 794, 734, 471, 735, 736, 316, 0, 0,
	0, 737, 738, 795, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 743, 744, 0,
	343, 745, 344, 746, 0, 747, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 748, 749, 750,
	0, 353, 354, 751, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 752, 753, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 754, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 755, 756, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 757, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 758, 759, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 760, 0, 761, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 3977, 763, 764, 550,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	463, 0, 0, 0, 0, 464, 465, 466, 0, 0,
	765, 467, 551, 468, 766, 767, 0, 768, 0, 469,
	470, 473, 0, 769, 0, 472, 474, 475, 0, 476,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 486, 485, 0, 488, 770, 487, 0, 489,
	490, 0, 0, 491, 492, 493, 494, 495, 496, 499,
	0, 0, 497, 498, 500, 501, 0, 502, 503, 505,
	508, 504, 506, 507, 509, 522, 523, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 525,
	0, 524, 0, 526, 527, 528, 529, 530, 537, 539,
	540, 535, 536, 538, 541, 542, 544, 532, 533, 534,
	0, 543, 531, 0, 0, 0, 545, 546, 547, 548,
	0, 771, 549, 772, 552, 553, 0, 0, 554, 0,
	555, 0, 0, 557, 558, 559, 0, 0, 560, 561,
	773, 0, 562, 0, 774, 563, 564, 556, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 575,
	576, 775, 577, 578, 579, 776, 580, 581, 582, 777,
	583, 778, 584, 585, 0, 586, 587, 588, 0, 589,
	590, 591, 592, 593, 594, 595, 596, 779, 597, 598,
	600, 599, 601, 0, 602, 0, 603, 604, 605, 0,
	0, 0, 0, 0, 606, 607, 609, 0, 610, 611,
	612, 613, 608, 614, 615, 616, 617, 618, 619, 0,
	621, 622, 620, 623, 624, 0, 625, 626, 627, 628,
	629, 780, 630, 0, 631, 632, 640, 641, 642, 633,
	634, 636, 643, 635, 644, 645, 646, 647, 649, 648,
	0, 651, 652, 650, 653, 654, 655, 0, 656, 781,
	657, 637, 638, 658, 659, 0, 660, 661, 662, 663,
	664, 665, 666, 782, 0, 667, 0, 668, 669, 670,
	671, 672, 673, 675, 639, 676, 681, 682, 783, 677,
	678, 679, 680, 784, 684, 685, 686, 687, 0, 688,
	689, 0, 683, 674, 0, 690, 691, 692, 693, 694,
	695, 0, 696, 697, 0, 698, 785, 786, 787, 788,
	0, 710, 0, 699, 701, 702, 703, 704, 789, 705,
	790, 0, 706, 707, 708, 709, 700, 711, 712, 0,
	0, 713, 714, 715, 717, 719, 720, 716, 718, 721,
	0, 722, 0, 0, 723, 724, 725, 791, 792, 793,
	0, 727, 728, 726, 729, 730, 733, 731, 732, 794,
	734, 471, 735, 736, 316, 0, 0, 0, 737, 738,
	795, 739, 740, 741, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 743, 744, 0, 343, 745, 344,
	746, 0, 747, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 748, 749, 750, 0, 353, 354,
	751, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 752, 753, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 754, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 755, 756,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 757, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 758, 759,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 760, 0, 761, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 3965, 763, 764, 550, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 463, 0, 0,
	0, 0, 464, 465, 466, 0, 0, 765, 467, 551,
	468, 766, 767, 0, 768, 0, 469, 470, 473, 0,
	769, 0, 472, 474, 475, 0, 476, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 486,
	485, 0, 488, 770, 487, 0, 489, 490, 0, 0,
	491, 492, 493, 494, 495, 496, 499, 0, 0, 497,
	498, 500, 501, 0, 502, 503, 505, 508, 504, 506,
	507, 509, 522, 523, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 525, 0, 524, 0,
	526, 527, 528, 529, 530, 537, 539, 540, 535, 536,
	538, 541, 542, 544, 532, 533, 534, 0, 543, 531,
	0, 0, 0, 545, 546, 547, 548, 0, 771, 549,
	772, 552, 553, 0, 0, 554, 0, 555, 0, 0,
	557, 558, 559, 0, 0, 560, 561, 773, 0, 562,
	0, 774, 563, 564, 556, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 775, 577,
	578, 579, 776, 580, 581, 582, 777, 583, 778, 584,
	585, 0, 586, 587, 588, 0, 589, 590, 591, 592,
	593, 594, 595, 596, 779, 597, 598, 600, 599, 601,
	0, 602, 0, 603, 604, 605, 0, 0, 0, 0,
	0, 606, 607, 609, 0, 610, 611, 612, 613, 608,
	614, 615, 616, 617, 618, 619, 0, 621, 622, 620,
	623, 624, 0, 625, 626, 627, 628, 629, 780, 630,
	0, 631, 632, 640, 641, 642, 633, 634, 636, 643,
	635, 644, 645, 646, 647, 649, 648, 0, 651, 652,
	650, 653, 654, 655, 0, 656, 781, 657, 637, 638,
	658, 659, 0, 660, 661, 662, 663, 664, 665, 666,
	782, 0, 667, 0, 668, 669, 670, 671, 672, 673,
	675, 639, 676, 681, 682, 783, 677, 678, 679, 680,
	784, 684, 685, 686, 687, 0, 688, 689, 0, 683,
	674, 0, 690, 691, 692, 693, 694, 695, 0, 696,
	697, 0, 698, 785, 786, 787, 788, 0, 710, 0,
	699, 701, 702, 703, 704, 789, 705, 790, 0, 706,
	707, 708, 709, 700, 711, 712, 0, 0, 713, 714,
	715, 717, 719, 720, 716, 718, 721, 0, 722, 0,
	0, 723, 724, 725, 791, 792, 793, 0, 727, 728,
	726, 729, 730, 733, 731, 732, 794, 734, 471, 735,
	736, 316, 0, 0, 0, 737, 738, 795, 739, 740,
	741, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 743, 744, 0, 343, 745, 344, 746, 0, 747,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 748, 749, 750, 0, 353, 354, 751, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	752, 753, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 754, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 755, 756, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 757, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 758, 759, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 760, 0,
	761, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	3962, 763, 764, 550, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 0, 464,
	465, 466, 0, 0, 765, 467, 551, 468, 766, 767,
	0, 768, 0, 469, 470, 473, 0, 769, 0, 472,
	474, 475, 0, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	770, 487, 0, 489, 490, 0, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 0, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 0, 543, 531, 0, 0, 0,
	545, 546, 547, 548, 0, 771, 549, 772, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 773, 0, 562, 0, 774, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 775, 577, 578, 579, 776,
	580, 581, 582, 777, 583, 778, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 779, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 0,
	625, 626, 627, 628, 629, 780, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 0, 651, 652, 650, 653, 654,
	655, 0, 656, 781, 657, 637, 638, 658, 659, 0,
	660, 661, 662, 663, 664, 665, 666, 782, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 783, 677, 678, 679, 680, 784, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 0, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	785, 786, 787, 788, 0, 710, 0, 699, 701, 702,
	703, 704, 789, 705, 790, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 791, 792, 793, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 794, 734, 471, 735, 736, 316, 0,
	0, 0, 737, 738, 795, 739, 740, 741, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 743, 744,
	0, 343, 745, 344, 746, 0, 747, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 748, 749,
	750, 0, 353, 354, 751, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 752, 753, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 754,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 755, 756, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 757, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 758, 759, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 760, 0, 761, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 3528, 763, 764,
	550, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 0, 464, 465, 466, 0,
	0, 765, 467, 551, 468, 766, 767, 0, 768, 0,
	469, 470, 473, 0, 769, 0, 472, 474, 475, 0,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 770, 487, 0,
	489, 490, 0, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 0, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 0, 543, 531, 0, 0, 0, 545, 546, 547,
	548, 0, 771, 549, 772, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 773, 0, 562, 0, 774, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 775, 577, 578, 579, 776, 580, 581, 582,
	777, 583, 778, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 779, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 0, 625, 626, 627,
	628, 629, 780, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 0, 656,
	781, 657, 637, 638, 658, 659, 0, 660, 661, 662,
	663, 664, 665, 666, 782, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 783,
	677, 678, 679, 680, 784, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 785, 786, 787,
	788, 0, 710, 0, 699, 701, 702, 703, 704, 789,
	705, 790, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 791, 792,
	793, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	794, 734, 471, 735, 736, 316, 0, 0, 0, 737,
	738, 795, 739, 740, 741, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 743, 744, 0, 343, 745,
	344, 746, 0, 747, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 748, 749, 750, 0, 353,
	354, 751, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 752, 753, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 754, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 755,
	756, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 757, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 758,
	759, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 760, 0, 761, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 762, 763, 764, 550, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 463, 0,
	0, 0, 0, 464, 465, 466, 0, 0, 765, 467,
	551, 468, 766, 767, 0, 768, 0, 469, 470, 473,
	0, 769, 0, 472, 474, 475, 0, 476, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	486, 485, 0, 488, 770, 487, 0, 489, 490, 0,
	0, 491, 492, 493, 494, 495, 496, 499, 0, 0,
	497, 498, 500, 501, 0, 502, 503, 505, 508, 504,
	506, 507, 509, 522, 523, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 525, 0, 524,
	0, 526, 527, 528, 529, 530, 537, 539, 540, 535,
	536, 538, 541, 542, 544, 532, 533, 534, 0, 543,
	531, 0, 0, 0, 545, 546, 547, 548, 0, 771,
	549, 772, 552, 553, 0, 0, 554, 0, 555, 0,
	0, 557, 558, 559, 0, 0, 560, 561, 773, 0,
	562, 0, 774, 563, 564, 556, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 575, 576, 775,
	577, 578, 579, 776, 580, 581, 582, 777, 583, 778,
	584, 585, 0, 586, 587, 588, 0, 589, 590, 591,
	592, 593, 594, 595, 596, 779, 597, 598, 600, 599,
	601, 0, 602, 0, 603, 604, 605, 0, 0, 0,
	0, 0, 606, 607, 609, 0, 610, 611, 612, 613,
	608, 614, 615, 616, 617, 618, 619, 0, 621, 622,
	620, 623, 624, 0, 625, 626, 627, 628, 629, 780,
	630, 0, 631, 632, 871, 641, 642, 633, 634, 636,
	643, 635, 644, 645, 646, 647, 649, 648, 0, 651,
	652, 650, 653, 654, 655, 0, 656, 781, 657, 637,
	638, 658, 659, 0, 660, 661, 662, 663, 664, 665,
	666, 782, 0, 667, 0, 668, 669, 670, 671, 672,
	673, 675, 639, 676, 681, 682, 783, 677, 678, 679,
	680, 784, 684, 685, 686, 687, 0, 688, 689, 0,
	683, 674, 0, 690, 691, 692, 693, 694, 695, 0,
	696, 697, 0, 698, 785, 786, 787, 788, 0, 710,
	0, 699, 701, 702, 703, 704, 789, 705, 790, 0,
	706, 707, 708, 709, 700, 711, 712, 0, 0, 713,
	714, 715, 717, 719, 720, 716, 718, 721, 0, 722,
	0, 0, 723, 724, 725, 791, 792, 793, 0, 727,
	728, 726, 729, 730, 733, 731, 732, 794, 734, 471,
	735, 736, 316, 0, 0, 0, 737, 738, 795, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 742, 0, 2637, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 743, 744, 0, 343, 745, 344, 746, 0,
	747, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 748, 749, 750, 0, 353, 354, 751, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 752, 753, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 754, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 755, 756, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 757,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 758, 759, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 760,
	0, 761, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 762, 763, 764, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 765, 467, 551, 468, 766,
	767, 0, 768, 0, 469, 470, 473, 0, 769, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 770, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 771, 549, 772, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 773, 0, 562, 0, 774,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 775, 577, 578, 579,
	776, 580, 581, 582, 777, 583, 778, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 779, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 780, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 0, 0, 781, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 782, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 783, 677, 678, 679, 680, 784, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 785, 786, 787, 788, 0, 710, 0, 699, 701,
	702, 703, 704, 789, 705, 790, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 791, 792, 793, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 794, 734, 471, 735, 736, 316,
	0, 0, 0, 737, 738, 795, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 743,
	744, 0, 343, 745, 344, 746, 0, 747, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 748,
	749, 750, 0, 353, 354, 751, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 752, 753,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	754, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 755, 756, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 757, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 758, 759, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 760, 0, 761, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1469, 763,
	764, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 0, 765, 467, 551, 468, 766, 767, 0, 768,
	0, 469, 470, 473, 0, 769, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 770, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 0, 0, 545, 546,
	547, 548, 0, 771, 549, 772, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 773, 0, 562, 0, 774, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 775, 577, 578, 579, 776, 580, 581,
	582, 777, 583, 778, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 779,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 780, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 0,
	656, 781, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 782, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	783, 677, 678, 679, 680, 784, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 785, 786,
	787, 788, 0, 710, 0, 699, 701, 702, 703, 704,
	789, 705, 790, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 791,
	792, 793, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 794, 734, 471, 735, 736, 316, 0, 0, 0,
	737, 738, 795, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 743, 744, 0, 343,
	745, 344, 746, 0, 747, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 748, 749, 750, 0,
	353, 354, 751, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 752, 753, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 754, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	755, 756, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 757, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	758, 759, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 760, 0, 761, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 762, 763, 764, 550, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 463,
	0, 0, 0, 0, 464, 465, 466, 0, 0, 765,
	467, 551, 468, 766, 767, 0, 768, 0, 469, 470,
	473, 0, 769, 0, 472, 474, 475, 0, 476, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 486, 485, 0, 488, 770, 487, 0, 489, 490,
	0, 0, 491, 492, 493, 494, 495, 496, 499, 0,
	0, 497, 498, 500, 501, 0, 502, 503, 505, 508,
	504, 506, 507, 509, 522, 523, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 525, 0,
	524, 0, 526, 527, 528, 529, 530, 537, 539, 540,
	535, 536, 538, 541, 542, 544, 532, 533, 534, 0,
	543, 531, 0, 0, 0, 545, 546, 547, 548, 0,
	771, 549, 772, 552, 553, 0, 0, 554, 0, 555,
	0, 0, 557, 558, 559, 0, 0, 560, 561, 773,
	0, 562, 0, 774, 563, 564, 556, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	775, 577, 578, 579, 776, 580, 581, 582, 777, 583,
	778, 584, 585, 0, 586, 587, 588, 0, 589, 590,
	591, 592, 593, 594, 595, 596, 779, 597, 598, 1389,
	599, 601, 0, 602, 0, 603, 604, 605, 0, 0,
	0, 0, 0, 606, 607, 609, 0, 610, 611, 612,
	613, 608, 614, 615, 616, 617, 618, 619, 0, 621,
	622, 620, 623, 624, 0, 625, 626, 627, 628, 629,
	780, 630, 0, 631, 632, 640, 641, 642, 633, 634,
	636, 643, 635, 644, 645, 646, 647, 649, 648, 0,
	651, 652, 650, 653, 654, 655, 0, 656, 781, 657,
	637, 638, 658, 659, 0, 660, 661, 662, 663, 664,
	665, 666, 782, 0, 667, 0, 668, 669, 670, 671,
	672, 673, 675, 639, 676, 681, 682, 783, 677, 678,
	679, 680, 784, 684, 685, 686, 687, 0, 688, 689,
	0, 683, 674, 0, 690, 691, 692, 693, 694, 695,
	0, 696, 697, 0, 698, 785, 786, 787, 788, 0,
	710, 0, 699, 701, 702, 703, 704, 789, 705, 790,
	0, 706, 707, 708, 709, 700, 711, 712, 0, 0,
	713, 714, 715, 717, 719, 720, 716, 718, 721, 0,
	722, 0, 0, 723, 724, 725, 791, 792, 793, 0,
	727, 728, 726, 729, 730, 733, 731, 732, 794, 734,
	471, 735, 736, 316, 0, 0, 0, 737, 738, 795,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 743, 744, 0, 343, 745, 344, 746,
	0, 747, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 748, 749, 750, 0, 353, 354, 751,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 752, 753, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 754, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 755, 756, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	757, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 758, 759, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	760, 0, 761, 0, 0, 448, 449, 450, 451, 452,
	453, 454, 762, 763, 764, 550, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 463, 0, 0, 0,
	0, 464, 465, 466, 0, 0, 765, 467, 551, 468,
	766, 767, 0, 768, 0, 469, 470, 473, 0, 769,
	0, 472, 474, 475, 0, 476, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 486, 485,
	0, 488, 770, 487, 0, 489, 490, 0, 0, 491,
	492, 493, 494, 495, 496, 499, 0, 0, 497, 498,
	500, 501, 0, 502, 503, 505, 508, 504, 506, 507,
	509, 522, 523, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 525, 0, 524, 0, 526,
	527, 528, 529, 530, 537, 539, 540, 535, 536, 538,
	541, 542, 544, 532, 533, 534, 0, 543, 531, 0,
	0, 0, 545, 546, 547, 548, 0, 771, 549, 772,
	552, 553, 0, 0, 554, 0, 555, 0, 0, 557,
	558, 559, 0, 0, 560, 561, 773, 0, 562, 0,
	774, 563, 564, 556, 565, 566, 567, 0, 569, 570,
	571, 572, 573, 574, 0, 575, 576, 775, 577, 578,
	579, 776, 580, 581, 582, 777, 583, 778, 584, 585,
	0, 586, 587, 588, 0, 589, 590, 591, 592, 593,
	0, 595, 596, 779, 597, 598, 600, 599, 601, 0,
	602, 0, 603, 604, 605, 0, 0, 0, 0, 0,
	606, 607, 609, 0, 610, 611, 612, 613, 608, 614,
	615, 616, 617, 618, 619, 0, 621, 622, 620, 623,
	624, 0, 625, 626, 627, 628, 629, 780, 0, 0,
	631, 632, 640, 641, 642, 633, 634, 636, 643, 635,
	644, 645, 646, 647, 649, 648, 0, 651, 652, 650,
	653, 654, 655, 0, 656, 781, 657, 637, 638, 658,
	659, 0, 660, 661, 662, 663, 664, 665, 666, 782,
	0, 667, 0, 668, 669, 670, 671, 672, 673, 675,
	639, 676, 681, 682, 783, 677, 678, 679, 680, 784,
	684, 685, 686, 687, 0, 688, 689, 0, 683, 674,
	0, 690, 691, 692, 693, 694, 695, 0, 696, 697,
	0, 698, 785, 786, 787, 788, 0, 710, 0, 699,
	701, 702, 703, 704, 789, 705, 790, 0, 706, 707,
	708, 709, 700, 711, 712, 0, 0, 713, 714, 715,
	717, 719, 720, 716, 718, 721, 0, 722, 0, 0,
	723, 724, 725, 791, 792, 793, 0, 727, 728, 726,
	729, 730, 733, 731, 732, 794, 734, 471, 735, 736,
	1810, 0, 1515, 0, 737, 738, 795, 739, 740, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 0, 0, 0, 0, 353, 354, 0, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 1517, 383, 384, 385, 386, 387, 0, 388,
	390, 0, 0, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 0, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 0,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 0,
	0, 0, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1809, 0, 0, 550, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 463, 0, 0, 0, 0,
	464, 465, 466, 0, 0, 0, 467, 551, 468, 0,
	0, 0, 0, 0, 469, 470, 473, 0, 0, 0,
	472, 474, 475, 0, 476, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 486, 485, 0,
	488, 0, 487, 0, 489, 490, 0, 0, 491, 492,
	493, 494, 495, 496, 499, 0, 0, 497, 498, 500,
	501, 0, 502, 503, 505, 508, 504, 506, 507, 509,
	522, 523, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 525, 0, 524, 0, 526, 527,
	528, 529, 530, 537, 539, 540, 535, 536, 538, 541,
	542, 544, 532, 533, 534, 0, 543, 531, 0, 0,
	0, 545, 546, 547, 548, 0, 0, 549, 0, 552,
	553, 0, 0, 554, 0, 555, 0, 0, 557, 558,
	559, 0, 0, 560, 561, 0, 0, 562, 0, 0,
	563, 564, 556, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 0, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 0, 584, 585, 0,
	586, 587, 588, 0, 589, 590, 591, 592, 593, 594,
	595, 596, 0, 597, 598, 600, 599, 601, 0, 602,
	0, 603, 604, 605, 0, 0, 0, 0, 0, 606,
	607, 609, 0, 610, 611, 612, 613, 608, 614, 615,
	616, 617, 618, 619, 0, 621, 622, 620, 623, 624,
	0, 625, 626, 627, 628, 629, 0, 630, 0, 631,
	632, 640, 641, 642, 633, 634, 636, 643, 635, 644,
	645, 646, 647, 649, 648, 0, 651, 652, 650, 653,
	654, 655, 1518, 656, 0, 657, 637, 638, 658, 659,
	0, 660, 661, 662, 663, 664, 665, 666, 0, 0,
	667, 0, 668, 669, 670, 671, 672, 673, 675, 639,
	676, 681, 682, 0, 677, 678, 679, 680, 0, 684,
	685, 686, 687, 0, 688, 689, 0, 683, 674, 0,
	690, 691, 692, 693, 694, 695, 0, 696, 697, 0,
	698, 0, 0, 0, 0, 0, 710, 0, 699, 701,
	702, 703, 704, 0, 705, 0, 0, 706, 707, 708,
	709, 700, 711, 712, 0, 0, 713, 714, 715, 717,
	719, 720, 716, 718, 721, 0, 722, 0, 0, 723,
	724, 725, 0, 0, 0, 0, 727, 728, 726, 729,
	730, 733, 731, 732, 0, 734, 471, 735, 736, 1729,
	0, 1515, 0, 737, 738, 0, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 0, 0, 0, 0, 353, 354, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 1517, 383, 384, 385, 386, 387, 0, 388, 390,
	0, 0, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 0, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 0, 0, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 0, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 0, 0,
	0, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1728, 0, 0, 550, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 463, 0, 0, 0, 0, 464,
	465, 466, 0, 0, 0, 467, 551, 468, 0, 0,
	0, 0, 0, 469, 470, 473, 0, 0, 0, 472,
	474, 475, 0, 476, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 486, 485, 0, 488,
	0, 487, 0, 489, 490, 0, 0, 491, 492, 493,
	494, 495, 496, 499, 0, 0, 497, 498, 500, 501,
	0, 502, 503, 505, 508, 504, 506, 507, 509, 522,
	523, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 525, 0, 524, 0, 526, 527, 528,
	529, 530, 537, 539, 540, 535, 536, 538, 541, 542,
	544, 532, 533, 534, 0, 543, 531, 0, 0, 0,
	545, 546, 547, 548, 0, 0, 549, 0, 552, 553,
	0, 0, 554, 0, 555, 0, 0, 557, 558, 559,
	0, 0, 560, 561, 0, 0, 562, 0, 0, 563,
	564, 556, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 575, 576, 0, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 0, 584, 585, 0, 586,
	587, 588, 0, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 597, 598, 600, 599, 601, 0, 602, 0,
	603, 604, 605, 0, 0, 0, 0, 0, 606, 607,
	609, 0, 610, 611, 612, 613, 608, 614, 615, 616,
	617, 618, 619, 0, 621, 622, 620, 623, 624, 0,
	625, 626, 627, 628, 629, 0, 630, 0, 631, 632,
	640, 641, 642, 633, 634, 636, 643, 635, 644, 645,
	646, 647, 649, 648, 0, 651, 652, 650, 653, 654,
	655, 1518, 656, 0, 657, 637, 638, 658, 659, 0,
	660, 661, 662, 663, 664, 665, 666, 0, 0, 667,
	0, 668, 669, 670, 671, 672, 673, 675, 639, 676,
	681, 682, 0, 677, 678, 679, 680, 0, 684, 685,
	686, 687, 0, 688, 689, 0, 683, 674, 0, 690,
	691, 692, 693, 694, 695, 0, 696, 697, 0, 698,
	0, 0, 0, 0, 0, 710, 0, 699, 701, 702,
	703, 704, 0, 705, 0, 0, 706, 707, 708, 709,
	700, 711, 712, 0, 0, 713, 714, 715, 717, 719,
	720, 716, 718, 721, 0, 722, 0, 0, 723, 724,
	725, 0, 0, 0, 0, 727, 728, 726, 729, 730,
	733, 731, 732, 0, 734, 471, 735, 736, 1513, 0,
	1515, 0, 737, 738, 0, 739, 740, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	0, 0, 0, 0, 353, 354, 0, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	1517, 383, 384, 385, 386, 387, 0, 388, 390, 0,
	0, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 0, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 0, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 0, 0, 0,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1512,
	0, 0, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 0, 464, 465,
	466, 0, 0, 0, 467, 551, 468, 0, 0, 0,
	0, 0, 469, 470, 473, 0, 0, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 0,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 0, 0, 545,
	546, 547, 548, 0, 0, 549, 0, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 0, 0, 562, 0, 0, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 0, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 0, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	0, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 0, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1518, 656, 0, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 0, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 0, 677, 678, 679, 680, 0, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 0,
	0, 0, 0, 0, 710, 0, 699, 701, 702, 703,
	704, 0, 705, 0, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	0, 0, 0, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 0, 734, 471, 735, 736, 2355, 0, 1515,
	0, 737, 738, 0, 739, 740, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 0,
	0, 0, 0, 353, 354, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 1517,
	383, 384, 385, 386, 387, 0, 388, 390, 0, 0,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	0, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 0, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 0, 0, 0, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 550, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 463, 0, 0, 0, 0, 464, 465, 466,
	0, 0, 0, 467, 551, 468, 0, 0, 0, 0,
	0, 469, 470, 473, 0, 0, 0, 472, 474, 475,
	0, 476, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 486, 485, 0, 488, 0, 487,
	0, 489, 490, 0, 0, 491, 492, 493, 494, 495,
	496, 499, 0, 0, 497, 498, 500, 501, 0, 502,
	503, 505, 508, 504, 506, 507, 509, 522, 523, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 525, 0, 524, 0, 526, 527, 528, 529, 530,
	537, 539, 540, 535, 536, 538, 541, 542, 544, 532,
	533, 534, 0, 543, 531, 0, 0, 0, 545, 546,
	547, 548, 0, 0, 549, 0, 552, 553, 0, 0,
	554, 0, 555, 0, 0, 557, 558, 559, 0, 0,
	560, 561, 0, 0, 562, 0, 0, 563, 564, 556,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 575, 576, 0, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 0, 584, 585, 0, 586, 587, 588,
	0, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	597, 598, 600, 599, 601, 0, 602, 0, 603, 604,
	605, 0, 0, 0, 0, 0, 606, 607, 609, 0,
	610, 611, 612, 613, 608, 614, 615, 616, 617, 618,
	619, 0, 621, 622, 620, 623, 624, 0, 625, 626,
	627, 628, 629, 0, 630, 0, 631, 632, 640, 641,
	642, 633, 634, 636, 643, 635, 644, 645, 646, 647,
	649, 648, 0, 651, 652, 650, 653, 654, 655, 1518,
	656, 0, 657, 637, 638, 658, 659, 0, 660, 661,
	662, 663, 664, 665, 666, 0, 0, 667, 0, 668,
	669, 670, 671, 672, 673, 675, 639, 676, 681, 682,
	0, 677, 678, 679, 680, 0, 684, 685, 686, 687,
	0, 688, 689, 0, 683, 674, 0, 690, 691, 692,
	693, 694, 695, 0, 696, 697, 0, 698, 0, 0,
	0, 0, 0, 710, 0, 699, 701, 702, 703, 704,
	0, 705, 0, 0, 706, 707, 708, 709, 700, 711,
	712, 0, 0, 713, 714, 715, 717, 719, 720, 716,
	718, 721, 0, 722, 0, 0, 723, 724, 725, 0,
	0, 0, 0, 727, 728, 726, 729, 730, 733, 731,
	732, 0, 734, 471, 735, 736, 2315, 0, 1515, 0,
	737, 738, 0, 739, 740, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 0, 0,
	0, 0, 353, 354, 0, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 1517, 383,
	384, 385, 386, 387, 0, 388, 390, 0, 0, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 0,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 0, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 0, 0, 0, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 0, 0, 0,
	550, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 463, 0, 0, 0, 0, 464, 465, 466, 0,
	0, 0, 467, 551, 468, 0, 0, 0, 0, 0,
	469, 470, 473, 0, 0, 0, 472, 474, 475, 0,
	476, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 486, 485, 0, 488, 0, 487, 0,
	489, 490, 0, 0, 491, 492, 493, 494, 495, 496,
	499, 0, 0, 497, 498, 500, 501, 0, 502, 503,
	505, 508, 504, 506, 507, 509, 522, 523, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	525, 0, 524, 0, 526, 527, 528, 529, 530, 537,
	539, 540, 535, 536, 538, 541, 542, 544, 532, 533,
	534, 0, 543, 531, 0, 0, 0, 545, 546, 547,
	548, 0, 0, 549, 0, 552, 553, 0, 0, 554,
	0, 555, 0, 0, 557, 558, 559, 0, 0, 560,
	561, 0, 0, 562, 0, 0, 563, 564, 556, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 0, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 0, 584, 585, 0, 586, 587, 588, 0,
	589, 590, 591, 592, 593, 594, 595, 596, 0, 597,
	598, 600, 599, 601, 0, 602, 0, 603, 604, 605,
	0, 0, 0, 0, 0, 606, 607, 609, 0, 610,
	611, 612, 613, 608, 614, 615, 616, 617, 618, 619,
	0, 621, 622, 620, 623, 624, 0, 625, 626, 627,
	628, 629, 0, 630, 0, 631, 632, 640, 641, 642,
	633, 634, 636, 643, 635, 644, 645, 646, 647, 649,
	648, 0, 651, 652, 650, 653, 654, 655, 1518, 656,
	0, 657, 637, 638, 658, 659, 0, 660, 661, 662,
	663, 664, 665, 666, 0, 0, 667, 0, 668, 669,
	670, 671, 672, 673, 675, 639, 676, 681, 682, 0,
	677, 678, 679, 680, 0, 684, 685, 686, 687, 0,
	688, 689, 0, 683, 674, 0, 690, 691, 692, 693,
	694, 695, 0, 696, 697, 0, 698, 0, 0, 0,
	0, 0, 710, 0, 699, 701, 702, 703, 704, 0,
	705, 0, 0, 706, 707, 708, 709, 700, 711, 712,
	0, 0, 713, 714, 715, 717, 719, 720, 716, 718,
	721, 0, 722, 0, 0, 723, 724, 725, 0, 0,
	0, 0, 727, 728, 726, 729, 730, 733, 731, 732,
	1515, 734, 471, 735, 736, 0, 0, 0, 0, 737,
	738, 0, 739, 740, 741, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	0, 0, 0, 0, 353, 354, 0, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	1517, 383, 384, 385, 386, 387, 0, 388, 390, 0,
	0, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 0, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 0, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 0, 0, 0,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 0,
	0, 0, 550, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 463, 0, 0, 0, 0, 464, 465,
	466, 0, 0, 0, 467, 551, 468, 0, 0, 0,
	0, 0, 469, 470, 473, 0, 0, 0, 472, 474,
	475, 0, 476, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 486, 485, 0, 488, 0,
	487, 0, 489, 490, 0, 0, 491, 492, 493, 494,
	495, 496, 499, 0, 0, 497, 498, 500, 501, 0,
	502, 503, 505, 508, 504, 506, 507, 509, 522, 523,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 525, 0, 524, 0, 526, 527, 528, 529,
	530, 537, 539, 540, 535, 536, 538, 541, 542, 544,
	532, 533, 534, 0, 543, 531, 0, 0, 0, 545,
	546, 547, 548, 0, 0, 549, 0, 552, 553, 0,
	0, 554, 0, 555, 0, 0, 557, 558, 559, 0,
	0, 560, 561, 0, 0, 562, 0, 0, 563, 564,
	556, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 0, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 0, 584, 585, 0, 586, 587,
	588, 0, 589, 590, 591, 592, 593, 594, 595, 596,
	0, 597, 598, 600, 599, 601, 0, 602, 0, 603,
	604, 605, 0, 0, 0, 0, 0, 606, 607, 609,
	0, 610, 611, 612, 613, 608, 614, 615, 616, 617,
	618, 619, 0, 621, 622, 620, 623, 624, 0, 625,
	626, 627, 628, 629, 0, 630, 0, 631, 632, 640,
	641, 642, 633, 634, 636, 643, 635, 644, 645, 646,
	647, 649, 648, 0, 651, 652, 650, 653, 654, 655,
	1518, 656, 0, 657, 637, 638, 658, 659, 0, 660,
	661, 662, 663, 664, 665, 666, 0, 0, 667, 0,
	668, 669, 670, 671, 672, 673, 675, 639, 676, 681,
	682, 0, 677, 678, 679, 680, 0, 684, 685, 686,
	687, 0, 688, 689, 0, 683, 674, 0, 690, 691,
	692, 693, 694, 695, 0, 696, 697, 0, 698, 0,
	0, 0, 0, 0, 710, 0, 699, 701, 702, 703,
	704, 0, 705, 0, 0, 706, 707, 708, 709, 700,
	711, 712, 0, 0, 713, 714, 715, 717, 719, 720,
	716, 718, 721, 0, 722, 0, 0, 723, 724, 725,
	0, 0, 0, 0, 727, 728, 726, 729, 730, 733,
	731, 732, 0, 734, 471, 735, 736, 0, 0, 0,
	0, 737, 738, 0, 739, 740, 741, 2037, 2038, 0,
	2070, 2071, 2072, 2081, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2068, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 2037, 2038, 0, 2070, 2071, 2072, 2081, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 2074, 2068, 2039, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 2038, 2059, 2070, 2071, 2072, 2081, 2082, 2083,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 2068, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	2062, 2063, 2064, 2065, 0, 0, 0, 0, 0, 0,
	2045, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 0, 0, 2062, 2063, 2064, 2065, 0,
	0, 0, 0, 2078, 0, 2045, 0, 2088, 0, 0,
	0, 0, 0, 0, 0, 2067, 2069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 2085, 0, 0,
	0, 0, 0, 0, 2054, 2055, 0, 0, 2078, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	2067, 2069, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 2063, 2064, 2065, 0, 2060,
	2084, 0, 2085, 0, 2045, 0, 0, 0, 0, 2054,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 2078, 2086, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 2067,
	2069, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	2090, 2085, 0, 0, 0, 0, 0, 0, 2054, 2055,
	0, 0, 0, 2086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 0, 2086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2066, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2079, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 2038, 0, 2070, 2071, 2072,
	2081, 2082, 2083, 0, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 2068, 2092,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 2077, 0, 0,
	0, 0, 2079, 0, 2039, 0, 0, 0, 0, 2051,
	2052, 2058, 2080, 2057, 2053, 2059, 2050, 2048, 2049, 2041,
	2042, 2043, 2044, 2046, 2047, 2056, 0, 0, 0, 0,
	5307, 0, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 2077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2051, 2052, 2058, 2080, 2057, 2053,
	0, 2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047,
	0, 0, 0, 0, 0, 5253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2037, 2038, 0, 2070,
	2071, 2072, 2081, 2082, 2083, 0, 0, 2062, 2063, 2064,
	2065, 0, 0, 0, 0, 0, 0, 2045, 0, 2074,
	2068, 2077, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 2087,
	2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0,
	0, 0, 0, 0, 5252, 0, 0, 2093, 0, 0,
	2078, 0, 0, 0, 2088, 0, 2039, 0, 0, 0,
	0, 0, 2067, 2069, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	0, 0, 2084, 0, 2085, 0, 0, 0, 0, 0,
	0, 2054, 2055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	2063, 2064, 2065, 0, 2074, 2068, 0, 0, 0, 2045,
	0, 0, 0, 2040, 0, 2086, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 0, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 2090, 0, 0,
	0, 2039, 2078, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 2059, 0, 2067, 2069, 0, 0, 0, 0,
	0, 0, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 2085, 0, 0, 0,
	0, 0, 0, 2054, 2055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2066, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 2063, 2064, 2065, 0, 0,
	0, 0, 0, 0, 2045, 2079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 2092, 0, 0, 0, 0, 0, 2078, 0, 2090,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 2067,
	2069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 2085, 0, 0, 0, 0, 0, 0, 2054, 2055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 2077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 2051, 2052, 2058, 2080,
	2057, 2053, 0, 2050, 2048, 2049, 2041, 2042, 2043, 2044,
	2046, 2047, 0, 0, 0, 0, 0, 5045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	0, 0, 2086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 2038, 0, 2070, 2071, 2072, 2081,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 2068, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 2077, 0, 0, 0,
	2061, 0, 0, 0, 2059, 0, 0, 0, 2051, 2052,
	2058, 2080, 2057, 2053, 2056, 2050, 2048, 2049, 2041, 2042,
	2043, 2044, 2046, 2047, 0, 0, 0, 0, 0, 4854,
	0, 0, 2079, 0, 0, 0, 0, 0, 0, 0,
	2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 2068, 0, 0, 0, 2092, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 2063, 2064, 2065,
	0, 2093, 0, 0, 0, 0, 2045, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 2077, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 2067, 2069, 2051, 2052, 2058, 2080, 2057, 2053, 0,
	2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0,
	0, 2084, 0, 2085, 4752, 0, 0, 0, 0, 0,
	2054, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2076, 0, 0, 2062, 2063, 2064, 2065, 0, 0, 0,
	0, 0, 0, 2045, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 0, 0, 0,
	2088, 0, 0, 0, 2086, 0, 0, 0, 2067, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 2084, 0,
	2085, 0, 0, 0, 0, 0, 2090, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 2037, 2038, 0, 2070, 2071,
	2072, 2081, 2082, 2083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 2074, 2068,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 2086, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 2075, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 2090, 2079, 0, 2059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 2063,
	2064, 2065, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 2052, 2058, 2080, 2057,
	2053, 0, 2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046,
	2047, 2078, 0, 0, 0, 2088, 4751, 2092, 0, 0,
	0, 0, 0, 2067, 2069, 0, 0, 2037, 2038, 0,
	2070, 2071, 2072, 2081, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 2084, 0, 2085, 0, 0, 0, 0,
	2074, 2068, 2054, 2055, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 2056, 2050,
	2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0,
	0, 0, 0, 4750, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 2063, 2064, 2065, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 2061, 0, 0, 2088, 0, 0,
	0, 0, 0, 0, 0, 2067, 2069, 2037, 2038, 0,
	2070, 2071, 2072, 2081, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 2079, 2085, 0, 0,
	2074, 2068, 0, 0, 2054, 2055, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 2093, 2060,
	0, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 2051, 2052, 2058,
	2080, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042, 2043,
	2044, 2046, 2047, 0, 0, 0, 0, 0, 4331, 0,
	2062, 2063, 2064, 2065, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 2061, 2088, 0, 0,
	0, 0, 0, 0, 0, 2067, 2069, 0, 0, 2037,
	2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 2085, 2079, 0,
	0, 0, 2074, 2068, 2054, 2055, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 2060,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 2051,
	2052, 2058, 2080, 2057, 2053, 0, 2050, 2048, 2049, 2041,
	2042, 2043, 2044, 2046, 2047, 0, 0, 0, 0, 0,
	3741, 0, 2062, 2063, 2064, 2065, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 2061, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 2067, 2069, 2037,
	2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 2079, 2085,
	0, 0, 2074, 2068, 0, 0, 2054, 2055, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	2093, 2060, 0, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 0, 0, 2077, 0, 0,
	0, 0, 2090, 0, 0, 0, 0, 0, 0, 2051,
	2052, 2058, 2080, 2057, 2053, 0, 2050, 2048, 2049, 2041,
	2042, 2043, 2044, 2046, 2047, 0, 0, 0, 0, 0,
	3740, 0, 2062, 2063, 2064, 2065, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 0, 2061, 2088,
	0, 0, 0, 0, 0, 0, 0, 2067, 2069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 2085,
	2079, 0, 0, 0, 0, 0, 2054, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 2092, 0, 0, 0,
	86, 2060, 53, 52, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 0,
	2086, 0, 0, 0, 0, 55, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 0, 0, 54, 0, 2077,
	101, 0, 2090, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050, 2048,
	2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 57, 75,
	0, 0, 3739, 0, 0, 0, 0, 0, 58, 0,
	0, 0, 0, 64, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 124, 0,
	0, 0, 2066, 0, 108, 121, 0, 0, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2079, 2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 2068, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 2092, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050, 2048,
	2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0, 0,
	0, 0, 3738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 2062, 2063, 2064, 2065, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 0, 0,
	0, 66, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 2078, 0, 65,
	212, 2088, 116, 0, 0, 120, 0, 0, 0, 2067,
	2069, 61, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 62, 0, 0, 0, 0, 0, 2084,
	0, 2085, 0, 0, 0, 0, 0, 275, 2054, 2055,
	0, 0, 0, 0, 0, 69, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0,
	0, 277, 0, 0, 2535, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 2068, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 2086, 2087, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 2093, 0, 2075, 276, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 2056, 0, 270, 0, 0, 0, 213, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 2037, 2038, 3, 2070, 2071, 2072,
	2081, 2082, 2083, 0, 2066, 0, 0, 0, 0, 0,
	0, 0, 2536, 0, 0, 0, 0, 2074, 2068, 0,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 2062, 2063, 2064, 2065, 0, 0, 0,
	0, 0, 0, 2045, 0, 2093, 0, 0, 0, 0,
	0, 0, 2079, 0, 2039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 2434,
	0, 0, 0, 0, 0, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 0, 2092, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 2067, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	2085, 0, 0, 0, 0, 0, 0, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2432, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 2063, 2064,
	2065, 0, 2060, 0, 0, 0, 0, 2045, 0, 0,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0,
	2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0,
	0, 0, 3703, 0, 0, 0, 0, 0, 0, 0,
	2078, 2086, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 2067, 2069, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 2090, 2085, 0, 0, 0, 0, 0,
	0, 2054, 2055, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 53, 52, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 2066, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 0, 55, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 0, 0, 2086, 0, 0, 0, 54,
	0, 0, 101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2537, 0, 2075, 0, 0, 0,
	0, 2079, 0, 0, 0, 0, 0, 2090, 0, 0,
	57, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	58, 0, 0, 0, 0, 64, 0, 0, 0, 0,
	5671, 0, 0, 0, 0, 0, 0, 2092, 56, 0,
	124, 0, 0, 0, 0, 0, 108, 121, 0, 0,
	0, 0, 0, 0, 0, 76, 0, 2037, 2038, 0,
	2070, 2071, 2072, 2081, 2082, 2083, 2433, 2066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2068, 0, 2538, 0, 0, 0, 0, 0, 2040,
	0, 59, 0, 2061, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 2093, 0,
	2077, 0, 0, 0, 0, 2079, 0, 2039, 0, 0,
	0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 2059, 2050,
	2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0, 0,
	2062, 2063, 2064, 2065, 0, 0, 0, 0, 0, 0,
	2045, 5574, 2074, 2068, 2077, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 2051, 2052, 2058, 2080,
	2057, 2053, 2087, 2050, 2048, 2049, 2041, 2042, 2043, 2044,
	2046, 2047, 0, 113, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 2078, 0, 0, 0, 2088, 0, 2039,
	0, 60, 0, 0, 0, 2067, 2069, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	2056, 0, 0, 66, 0, 2084, 0, 2085, 0, 0,
	0, 0, 0, 78, 2054, 2055, 0, 0, 0, 0,
	0, 65, 212, 0, 116, 0, 0, 120, 0, 5537,
	0, 0, 0, 61, 2076, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 2063, 2064, 2065, 0, 0, 0, 0,
	176, 0, 2045, 0, 3803, 0, 0, 0, 2086, 0,
	0, 3802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 2078, 0, 0, 0, 2088,
	0, 175, 0, 0, 0, 0, 0, 2067, 2069, 0,
	0, 79, 0, 5573, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 276, 2084, 0, 2085,
	0, 0, 0, 0, 0, 0, 2054, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	2066, 0, 0, 0, 0, 270, 2076, 0, 0, 213,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 2037, 2038, 0, 2070,
	2071, 2072, 2081, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 2074,
	2068, 0, 0, 0, 0, 3673, 0, 0, 2040, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 2092, 0, 0, 2093, 0, 0,
	0, 0, 2090, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	3674, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 2051,
	2052, 2058, 2080, 2057, 2053, 0, 2050, 2048, 2049, 2041,
	2042, 2043, 2044, 2046, 2047, 0, 0, 0, 0, 2062,
	2063, 2064, 2065, 0, 0, 0, 0, 0, 0, 2045,
	2079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 2067, 2069, 2037, 2038, 0, 2070,
	2071, 2072, 2081, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 2085, 0, 0, 2074,
	2068, 0, 0, 2054, 2055, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 2060, 2077,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 2051, 2052, 2058, 2080, 2057, 2053, 2059, 2050, 2048,
	2049, 2041, 2042, 2043, 2044, 2046, 2047, 2056, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	2063, 2064, 2065, 0, 0, 0, 0, 0, 0, 2045,
	0, 5151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 2061, 2088, 0, 0, 0,
	0, 0, 0, 0, 2067, 2069, 2037, 2038, 0, 2070,
	2071, 2072, 2081, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 2085, 2079, 0, 2074,
	2068, 0, 0, 2054, 2055, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 2093, 2060, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 2090,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 2052,
	2058, 2080, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042,
	2043, 2044, 2046, 2047, 0, 0, 0, 0, 0, 2062,
	2063, 2064, 2065, 0, 0, 0, 0, 0, 0, 2045,
	2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2066,
	0, 0, 0, 2074, 2068, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 2087, 0, 2061, 2088, 0, 0, 0,
	0, 0, 0, 0, 2067, 2069, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 2084, 0, 2085, 2079, 0, 0,
	0, 2059, 0, 2054, 2055, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 0, 2062, 2063, 2064, 2065, 0, 0, 0,
	0, 0, 0, 2045, 0, 0, 0, 0, 2075, 1240,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 2090,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 2052,
	2058, 2080, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042,
	2043, 2044, 2046, 2047, 0, 0, 2078, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 2067, 2069,
	2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 2066,
	2085, 0, 0, 2074, 2068, 0, 0, 2054, 2055, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 2061, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 2060, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 2063, 2064, 2065, 0, 0, 0,
	0, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 0, 2051, 2052,
	2058, 2080, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042,
	2043, 2044, 2046, 2047, 0, 0, 2078, 0, 0, 2061,
	2088, 0, 0, 0, 0, 0, 0, 0, 2067, 2069,
	2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	2085, 2079, 0, 2074, 2068, 0, 0, 2054, 2055, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 2093, 2060, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 4906, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050,
	2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0,
	0, 0, 0, 2062, 2063, 2064, 2065, 0, 0, 0,
	0, 0, 0, 2045, 0, 4554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 0, 0, 2061,
	2088, 0, 0, 0, 0, 0, 0, 0, 2067, 2069,
	2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	2085, 2079, 0, 2074, 2068, 0, 0, 2054, 2055, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 2093, 2060, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 4555, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050,
	2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0,
	0, 0, 0, 2062, 2063, 2064, 2065, 0, 0, 0,
	0, 0, 0, 2045, 2037, 2038, 0, 2070, 2071, 2072,
	2081, 2082, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 2074, 2068, 0,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 2087, 0, 2061,
	2088, 0, 0, 0, 0, 0, 0, 0, 2067, 2069,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 2084, 0,
	2085, 2079, 0, 0, 0, 2059, 0, 2054, 2055, 0,
	0, 0, 0, 0, 0, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 0, 0, 0, 2062, 2063, 2064,
	2065, 0, 0, 0, 0, 0, 0, 2045, 0, 0,
	0, 0, 2075, 0, 0, 0, 3809, 0, 0, 0,
	2077, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050,
	2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0,
	2078, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 2067, 2069, 0, 0, 0, 0, 0, 0,
	2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0,
	0, 0, 2084, 2066, 2085, 0, 0, 0, 0, 0,
	0, 2054, 2055, 2074, 2068, 0, 0, 0, 3804, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 2061,
	0, 2076, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2086, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4312, 0, 0, 0, 0, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 2063, 2064, 2065, 0, 0, 0,
	0, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 2066, 0, 0,
	0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050,
	2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0,
	0, 0, 0, 2061, 0, 0, 2078, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 2067, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 0, 0, 2084, 0,
	2085, 0, 0, 0, 0, 0, 0, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 2037, 2038, 0, 2070,
	2071, 2072, 2081, 2082, 2083, 0, 0, 2076, 0, 0,
	0, 2092, 0, 0, 0, 0, 0, 0, 0, 2074,
	2068, 0, 2060, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 2086, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	0, 0, 2075, 0, 2077, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 2051, 2052, 2058, 2080,
	2057, 2053, 0, 2050, 2048, 2049, 2041, 2042, 2043, 2044,
	2046, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 0, 0, 2062,
	2063, 2064, 2065, 0, 0, 0, 0, 0, 0, 2045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 2038,
	0, 2070, 2071, 2072, 2081, 2082, 2083, 0, 0, 0,
	0, 2079, 2078, 0, 0, 0, 2088, 0, 0, 0,
	0, 2074, 2068, 0, 2067, 2069, 3742, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 2084, 0, 2085, 2092, 0, 0,
	0, 0, 0, 2054, 2055, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050,
	2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	0, 2062, 2063, 2064, 2065, 0, 0, 0, 0, 0,
	3769, 2045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0,
	0, 0, 0, 0, 2078, 0, 0, 0, 2088, 2066,
	0, 0, 0, 2074, 2068, 0, 2067, 2069, 0, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 2061, 2084, 0, 2085, 0,
	0, 0, 0, 0, 0, 2054, 2055, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 2076, 0, 2079, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 0, 2062, 2063, 2064, 2065, 0, 0, 0,
	0, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 2052,
	2058, 2080, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042,
	2043, 2044, 2046, 2047, 0, 0, 2078, 0, 0, 0,
	2088, 2066, 0, 0, 0, 0, 0, 0, 2067, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 2084, 0,
	2085, 0, 0, 0, 0, 0, 0, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 2037, 2038, 0, 2070,
	2071, 2072, 2081, 2082, 2083, 0, 0, 2076, 0, 2079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	2068, 0, 2060, 0, 0, 0, 0, 0, 2040, 2037,
	2038, 0, 2070, 2071, 2072, 2081, 2082, 2083, 0, 2087,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 0,
	0, 0, 2074, 2068, 0, 0, 0, 2093, 0, 0,
	0, 2040, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 2086, 2087, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	2093, 0, 2075, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 2052, 2058, 2080, 2057, 2053, 0, 2050, 2048, 2049,
	2041, 2042, 2043, 2044, 2046, 2047, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 0, 0, 2062,
	2063, 2064, 2065, 0, 0, 0, 0, 0, 0, 2045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 2063, 2064, 2065, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 2078, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 2067, 2069, 0, 0, 0, 0,
	0, 2037, 2038, 0, 2070, 2071, 2072, 2081, 2082, 2083,
	0, 0, 0, 0, 2084, 2078, 2085, 2092, 0, 2088,
	0, 0, 0, 2054, 2055, 2068, 0, 2067, 2069, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 2087, 0, 0, 2084, 0, 2085,
	0, 0, 0, 0, 0, 0, 2054, 2055, 2060, 0,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 2056, 2649, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050,
	2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 2062, 2063, 2064, 2065, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 2078, 0, 0,
	0, 2088, 2066, 0, 0, 0, 0, 0, 0, 2067,
	2069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 2061, 2084,
	0, 2085, 0, 0, 0, 0, 0, 0, 2054, 2055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	2079, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 2051, 2052,
	2058, 2080, 2057, 2053, 0, 2050, 2048, 2049, 2041, 2042,
	2043, 2044, 2046, 2047, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 2052, 2058, 2080, 2057, 2053, 0, 2050, 2048,
	2049, 2041, 2042, 2043, 2044, 2046, 2047, 0, 0, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2051, 2052, 2058, 2080, 2057, 2053, 0,
	2050, 2048, 2049, 2041, 2042, 2043, 2044, 2046, 2047,
}

var sqlPact = [...]int32{
	158490, -1000, -1000, -1000, -1000, -1000, -1000, 240, -1000, -1000,
	237, 236, 235, 234, 232, 228, 227, 220, 218, 217,
	216, -1000, -1000, 215, 213, 212, 211, -1000, -1000, 210,
	209, -1000, 208, -1000, -1000, 206, -1000, 205, 204, 203,
	-1000, -1000, 202, -1000, 201, -1000, -1000, -1000, -1000, 200,
	199, 198, 112304, 111685, 112921, 2643, 141357, 122190, 2506, 98698,
	140738, 98079, 140119, 2535, 13205, 139500, 3147, 194, -1000, 138881,
	193, 192, 190, -1000, 121571, 138262, 119097, 118478, 2159, 86863,
	1934, 1930, -1000, 185, 184, -1000, 8352, 82522, 183, 182,
	175, 174, 2772, 173, -1000, 172, 171, -1000, 160, 155,
	-1000, 12325, 1737, -1000, 154, 153, 151, -1000, 8713, 117859,
	148, 147, 146, 3124, 145, 144, 80052, 143, 142, 140,
	3004, 3303, -1000, -1000, 2353, -1000, -1000, 139, 138, 137,
	136, 135, 134, 133, 132, 128, 125, 123, 121, 114,
	112, -1000, 111, 109, 108, 103, 101, 100, -1000, 99,
	98, 97, -1000, 95, -1000, 93, 92, 91, 90, 88,
	87, 86, 85, 72, 68, 67, 66, 65, 63, 60,
	20366, -1000, -1000, 59, -1000, 2156, 1918, 1916, 1889, 1116,
	58, 53, 51, 49, 45, 44, 42, 41, 40, 39,
	38, 37, 36, 34, 32, 31, 30, 29, 28, 20,
	19, 17, 16, 167, 15, 14, 13, 12, 2, 0,
	-1, -3, 5476, 4077, -1000, 1834, 1157, 1372, 35812, 3478,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 150612,
	141974, -5, -71, -6, -1000, 3865, 1057, 65061, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 352, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 544, 2971,
	833, -1000, -1000, -1000, 137643, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2642, -35, 99315, -1000, 2371, -1000, -1000,
	-1000, -1000, -1000, 832, -1000, 2640, 2590, 395, 2588, 99315,
	-1000, -1000, -1000, 3928, 3813, 111066, 2829, 4384, 4383, 4382,
	4381, 4380, 149995, 2099, 2899, 4379, 4378, 4376, 4375, 4374,
	4373, 4372, -1000, 110447, 1187, 109828, 109209, 3932, 137026, 108590,
	136407, 153086, 54928, 1155, 3927, -1000, -1000, -1000, -1000, -1000,
	-1000, 141974, -1000, 1186, -1000, -1000, 4369, 2340, 831, 120952,
	-1000, -1000, 135788, 2158, -1000, -1000, -1000, 1059, 1340, 38348,
	38348, 38348, 351, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3938, -1000, -1000, -1000, -1000, 141974, 3183, 3183, 1589, 1548,
	1548, 3183, 3183, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4367, 4365, 4364, 4362, 4360, -1000, -1000, -1000, 2106,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 97460, 28015, 96841,
	96222, 107971, 135169, 54294, 107352, 106733, 91889, 4359, 4355, 53660,
	62533, 4076, 134550, 152467, 4074, 4060, 1183, 2365, 1657, -1000,
	-1000, -1000, -1000, -1000, -1000, -26, 86246, 4143, 141974, -1000,
	344, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53026, 721,
	52392, 878, 51758, 779, 133931, -1000, -1000, -1000, -1000, -1000,
	91260, 3812, -1000, 133312, 1764, 2825, 4354, 4353, 1314, 4351,
	3790, 2064, 4348, 4346, 4343, 4342, 4341, 4340, 4339, 1709,
	132693, 3116, 132074, 1971, 151848, 2177, 1182, 106114, 112921, 3019,
	131455, 1683, 1669, -1000, -1000, -1000, -1000, 3621, 3296, 3274,
	1319, -1000, -1000, -1000, -1000, -1000, 68827, 11142, 10004, -1000,
	-1000, 14211, 130836, 71962, 112921, 112921, -1000, -1000, -1000, -1000,
	-1000, -1000, 51124, 714, 50490, 1140, 130217, -1000, -1000, 69454,
	3433, 1247, -1000, -1000, -1000, -1000, -1000, 129598, 49856, 550,
	49222, 1090, 141974, -1000, 3477, 2227, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2721, 1815, 4141,
	3233, 90631, 2364, 1604, 3888, 3619, 3618, 1716, 2358, 3616,
	4337, 2993, 3295, 3614, 3604, 3598, 3597, 3565, 1913, 2957,
	460, 2963, 35178, 3460, 2065, 48588, 1751, 1703, 3560, 3536,
	3534, 4168, 3989, 2327, 2321, 2393, 2326, 95603, 4336, 4335,
	3836, 3529, 3528, 3299, 3516, 2190, -1000, 3429, 1705, 343,
	-1000, -1000, -1000, -1000, -1000, -1000, 343, 1673, -1000, -1000,
	-1000, -1000, -1000, 100549, -1000, -1000, 2106, -1000, -1000, -1000,
	1564, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1834, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2900, -1000, 2368, -1000, -1000, -1000, 2914, 3825, 3825, 3825,
	3926, 522, 521, -1000, 167, 978, 1292, -1000, -1000, 162845,
	-1000, -1000, 55562, 55562, 55562, 55562, 55562, 55562, 55562, 55562,
	2540, -1000, 830, -1000, -1000, 867, -1000, 829, 742, 673,
	-1000, -1000, -1000, -1000, -1000, -1000, 828, -1000, -1000, -1000,
	-1000, -1000, -1000, 4134, -1000, 31237, -1000, -1000, -1000, 510,
	827, 55562, -1000, -1000, 4199, 4198, 1033, -1000, 320, 1091,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3472, 826, 825, -1000, 824, 823, 818, 817,
	816, -1000, 806, -1000, 804, 803, 799, 796, 790, 787,
	786, 785, -1000, 2396, -1000, -1000, -1000, -1000, -1000, -1000,
	715, 713, 713, 713, -1000, 1176, -1000, -1000, -1000, 335,
	711, 326, 707, 706, 693, -1000, 784, 783, 782, 778,
	764, 760, 759, 758, 757, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1172, -1000, -1000, -1000, -1000, 1587, -29, 141974,
	-1000, 668, -29, -1000, -1000, 747, -1000, 39634, 39634, 39634,
	-1000, -1000, 2639, 55562, -1000, 3251, -1000, -21, -21, 1029,
	66942, -1000, 63789, 1029, 588, 876, 73208, -1000, 3425, -1000,
	-1000, 746, 319, -1000, -1000, -1000, -1000, 28642, 3422, 141974,
	141974, 141974, 112921, 112921, 112921, 141974, 4334, 4332, 3711, 55562,
	-1000, -1000, 81903, 154936, 113538, 1468, -27, -1000, -1000, 4043,
	85619, 81286, 3471, 154936, 3468, 3421, 154324, 90002, 274, 3688,
	-1000, -1000, 745, 4331, -1000, -1000, -1000, -1000, -1000, 3687,
	4329, 4328, 4325, 141974, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2572, 3686, -1000, -28, -1000, 117240, 2572, 3685, -1000,
	-28, 2572, 3684, -1000, -28, 116623, -1000, -1000, 2572, 3683,
	-1000, -1000, 273, 3682, -1000, -1000, 272, 3679, -1000, -1000,
	317, -120, 3675, -1000, -1000, -1000, -1000, -1000, -1000, 162845,
	-1000, -1000, -1000, 153705, -1000, 3844, -1000, 141974, -1000, 55562,
	-1000, -1000, 4041, 1672, 3876, 3963, -1000, -1000, -39, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2870, 2897, 1298, 2692,
	-1000, 3726, 1906, 38348, 3775, -1000, -1000, -1000, -1000, -1000,
	313, 28642, 3247, -1000, -1000, 141974, -1000, 141974, 3183, 3183,
	-1000, -1000, -1000, 4156, 4155, 3183, 3183, 141974, 141974, -1000,
	-1000, -1000, -1000, -1000, -1000, -39, -1000, 4014, 3674, 1812,
	-1000, 2690, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2504, 3668, -1000, 3955, 3665, 2499, -1000, -1000, 7506,
	-1000, 1862, -1000, 159143, 1508, -1000, -1000, -1000, -1000, 2587,
	3664, -19, -1000, -1000, 2634, -1000, 4138, 3357, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 159019,
	-1000, 1904, -1000, -1000, 2415, 2250, -1000, 1469, 3663, -1000,
	3230, 3230, 105495, 3641, 71335, 69454, 86246, -38, -1000, -1000,
	-1000, -1000, -1000, -141, -1000, 27380, 162845, -1000, -1000, -1000,
	-1000, 2108, 162845, 1036, -1000, -1000, 3662, -1000, 162845, 993,
	-1000, -1000, 3661, -1000, 2952, -1000, 3466, -1000, -1000, -1000,
	2781, 89373, 2780, 1138, -1000, 104878, 2350, 4324, -1000, 4323,
	-1000, -1000, 4322, -1000, 4318, 4315, 4313, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 104259, 2638, -1000, -1000, 1649, 1093,
	92516, -1000, 2778, 3958, -1000, 103640, 1180, -1000, 1115, 2776,
	-1000, 1612, 116006, 1088, 2773, -1000, 4312, 3931, 3107, 1115,
	2771, -1000, -1000, -1000, -1000, -1000, 1136, -1000, 74442, -1000,
	74442, -1000, 1876, -1000, 149378, -21, 112921, 4134, -1000, -74,
	-1000, -1000, -1000, 1057, -1000, 68197, -1000, 68197, 120333, 92516,
	1093, 3419, 78179, 162569, -1000, 1132, -1000, -1000, 162845, -1000,
	-1000, -1000, 2946, -1000, -176, 3228, -1000, 92516, 70708, 3414,
	2937, -1000, 162845, -1000, -1000, -1000, -1000, 162845, -1000, -1000,
	-1000, 92516, 1649, -1000, 128979, 103021, -1000, -1000, 1682, 2932,
	-1000, -1000, -1000, 69454, 3405, 1474, 92516, 92516, 92516, 92516,
	92516, -1000, 128360, -1000, -1000, 2357, 1660, 3837, 2331, 112921,
	-1000, 2136, -1000, -1000, -1000, 3866, 3640, 141974, -1000, -1000,
	3463, -1000, 85002, 3463, 115389, -1000, 114772, -1000, 114155, -1000,
	112921, -1000, 112921, -1000, 4310, 4309, 4308, -1000, -1000, 4307,
	-1000, 4306, 3855, -1000, 909, 47954, 162845, 3854, -1000, 4304,
	2283, 3460, 162845, -1000, 3636, 1922, 1910, 141974, -1000, -1000,
	141974, -1000, 141974, -1000, 141974, -1000, -1000, -1000, 2666, 1794,
	-1000, -1000, 2867, -1000, -1000, -1000, 1131, -1000, -1000, 112921,
	112921, 112921, 112921, 112921, 1793, -1000, 47320, 3811, -1000, -1000,
	3518, 4303, 2042, -1000, 2129, -1000, 3400, 3843, -1000, 3399,
	1653, 2081, 295, 4210, 295, -1000, -1000, 278, -1000, -1000,
	148761, -1000, 2914, -1000, 141974, -1000, 2830, 3453, 3459, 1659,
	2657, 2983, -1000, 46686, 3001, 59366, 2686, 167, -1000, -1000,
	167, 167, 37080, -1000, -1000, 38348, 978, 85619, 85619, 28642,
	1573, 55562, 55562, 55562, 55562, 55562, 55562, 55562, 55562, 55562,
	55562, 55562, 55562, 55562, 55562, 55562, 55562, 55562, 55562, 55562,
	55562, 55562, 55562, 55562, 55562, 55562, 55562, 55562, 55562, 55562,
	55562, 55562, 55562, 55562, 55562, 55562, 55562, 2601, 55562, 1456,
	55562, 55562, 55562, 55562, 2375, -1000, -1000, 2234, 611, 2314,
	742, -1000, -1000, -1000, 4105, 4105, 4105, 1113, 1113, 1113,
	163090, 163090, 654, 4301, 867, -1000, 55562, -1000, 116, 67559,
	55562, 29271, -1000, 521, 13902, 2889, -1000, 518, 29935, -1000,
	-1000, -1000, 31237, 673, 46022, 55562, 1119, 162845, -1000, -1000,
	1527, 4142, 26745, 3486, 3287, 738, 974, 970, 34514, 33850,
	33186, 32522, 967, 883, 55562, 55562, 55562, 55562, 55562, 55562,
	55562, 55562, -1000, -1000, 4153, -1000, 4142, -1000, -1000, -1000,
	-1000, 4142, 1567, 1546, 4142, -1000, 4142, 4142, 8833, 8833,
	45388, 44754, 44120, 60000, 43486, 55562, 31888, 42852, 42218, -1000,
	61902, 141974, -29, 4037, 141974, 55562, 322, -1000, 13472, -1000,
	322, 322, 733, -75, 162845, 3194, 3194, 65688, 2756, 2545,
	2545, 2545, -1000, 1029, 20991, 1029, 126509, 2552, 1029, 1029,
	283, 316, 517, 63162, 3251, 125892, 850, 732, -7, -8,
	-11, -1000, -1000, -12, -16, -1000, -1000, 112921, 722, 29271,
	28642, 270, 2293, -82, 2999, 2997, 2995, 2994, -1000, 2988,
	2637, -1000, -1000, -1000, 2118, -83, 1453, 112921, 141974, 2145,
	-1000, -1000, -1000, -1000, 86246, -30, 86246, 141974, 3807, 112921,
	-67, -1000, 154936, 9450, -85, -1000, 1476, 269, 4142, -1000,
	-1000, -1000, -1000, -1000, 4298, 4294, -1000, 1164, 719, 717,
	468, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 715,
	713, 713, 713, -1000, 335, 711, 326, 707, 706, 693,
	-1000, -1000, -1000, -1000, -1000, 3398, 112921, 141974, 2085, 84385,
	102402, -120, 113538, 154936, -58, -1000, -1000, -1000, -1000, 112921,
	-1000, -1000, 112921, -1000, 75680, -1000, 141974, -1000, -1000, -1000,
	4291, -1000, 112921, 112921, 2572, 3660, -1000, 112921, -1000, 112921,
	265, 3650, -1000, -1000, 141974, -1000, 112921, 112921, -1000, 141974,
	141974, 141974, 154936, 154936, 264, -1000, 112921, 978, -88, 1334,
	-39, -1000, -1000, -1000, -1000, 2106, -1000, 2046, -1000, -1000,
	-1000, -1000, -1000, -1000, 1714, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1033, -1000, -1000, -1000, -1000, 4122, 4120,
	-37, -1000, -1000, 28642, -1000, 2075, -1000, -1000, -1000, -1000,
	141974, 141974, -1000, -1000, 141974, 141974, -1000, -1000, -43, 1877,
	671, 1452, -1000, 94984, 2741, 3817, 4290, 3087, 3799, 1874,
	-1000, 1790, 690, -1000, 3951, 100549, 3988, 3998, 1486, -1000,
	3394, -1000, -1000, -1000, 1056, 1989, 2059, 1451, 1449, 100549,
	3955, -1000, 85619, -1000, 3066, 3925, 1548, 1596, 1548, 1548,
	1582, 1563, -1000, 100549, 2058, 1447, 1446, 5659, 1445, 2054,
	1443, 3720, -1000, -1000, 2636, 2723, -1000, -1000, -1000, -1000,
	1895, 3128, -1000, 2875, 1574, 1574, 141974, -1000, 1442, -1000,
	-1000, 1835, 1888, -1000, -1000, 127743, 1980, -1000, 1441, 1439,
	143208, 4024, 2900, 2487, 889, 2270, -1000, 1493, 1438, 3391,
	-1000, -1000, -47, 3987, 3994, 1486, -1000, -1000, 3390, 1434,
	-1000, 1159, -1000, -1000, -1000, -1000, 3923, 112921, 28642, 1771,
	1762, 1749, 2052, 1433, -31, -1000, 3974, 1872, -1000, 4086,
	92516, -1000, 2800, 1842, -1000, 1649, 1649, 122807, 141974, -1000,
	-1000, -1000, 3884, 3882, -1000, -1000, 1431, 1425, -1000, 1173,
	7084, 3747, -1000, 154936, 1173, 1173, 2407, 3647, 3176, 1896,
	-1000, 3223, 1021, 3218, -1000, -1000, -1000, 1021, -38, 86246,
	141974, 266, -1000, 116, 55562, 55562, 116, 55562, 116, -1000,
	3957, 3646, 4035, -1000, 3602, 4286, 689, -1000, -1000, 2892,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 688, 2768, 3389,
	141974, 245, -1000, 112921, -1000, 4034, 127126, -1000, 3599, 154936,
	3955, 2767, -1000, -1000, 101785, -1000, 3594, 2284, 544, 2764,
	-1000, 892, 4283, 3589, -1000, 148144, -1000, 3844, 1599, 3582,
	1230, 933, 4033, -1000, 933, 76308, -1000, 141974, -1000, -21,
	7736, 93750, -90, -91, 516, -1000, 141974, 141974, 3761, 2304,
	2303, -1000, 1100, 69454, -1000, 69454, -99, -1000, -176, 3217,
	1755, 69454, -1000, 1093, -137, 1021, -1000, 1021, -1000, 112921,
	3458, -1000, 92516, 69454, -1000, 1093, 1093, 1093, 1093, 1093,
	-1000, -1000, -1000, -1000, 4277, 4276, 4275, 4273, -1000, -1000,
	1103, 112921, 141974, 112921, -1000, 3174, 1785, -1000, 263, -1000,
	154936, -1000, 154936, 141974, 112921, -1000, -1000, 1103, 141974, 1103,
	141974, 1103, 141974, 1103, 1103, -1000, -1000, -1000, -1000, -1000,
	116, -1000, -1000, 162845, -1000, 55562, -1000, -1000, 1780, 4272,
	1909, -1000, 3456, -1000, 3455, -1000, 25, 261, -1000, -1000,
	4151, 2160, -1000, 4197, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4268, 3802, 162845, -1000, 88744, 2151, -1000,
	-1000, -1000, -1000, 112921, 112921, 112921, 112921, 141974, 3743, -1000,
	141974, 3740, 3742, 112921, -1000, 4201, -1000, -1000, 100549, -1000,
	2830, 3453, -1000, -1000, -1000, -1000, -1000, -1000, 1903, 2605,
	-1000, 2927, -1000, 1782, -1000, -1000, -1000, 162845, 60634, -1000,
	-1000, 162845, 2138, -1000, 58732, 58098, -1000, -1000, 1983, 112921,
	3018, -1000, 3018, -104, -1000, 160055, 2926, 112921, -37, 38348,
	-1000, -1000, -1000, -1000, -1000, 1050, 702, 702, 1538, 1538,
	1538, 1538, 3945, 6101, 494, 2597, 6842, 6842, 10338, 10338,
	10338, 10338, 10338, 6842, 6013, 1113, 1113, 6013, 6013, 6013,
	6013, 6013, 1113, 1113, 1113, 6842, 6842, 6842, 1113, 163090,
	162878, 12590, 55562, 55562, 1423, 2231, 611, 11728, 55562, 374,
	374, 374, 374, -1000, 2503, -1000, -1000, -1000, -1000, 3388,
	687, 60000, 60000, -1000, -1000, -1000, -1000, 30586, 55562, -1000,
	-1000, -1000, -1000, 41554, -1000, -1000, 158710, -344, 515, -1000,
	260, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 514, -84, 117, -1000, 55562, 55562,
	55562, 513, -1000, 256, 55562, 141974, -1000, 19619, 848, -106,
	-1000, -101, 1623, -1000, 55562, -1000, -1000, 1421, -1000, 1419,
	1416, 1412, -1000, 686, 512, -1000, 254, -1000, 2543, 685,
	683, 55562, -1000, -1000, -1000, -1000, -1000, 158208, -1000, -1000,
	157968, -1000, -1000, 157726, -1000, -1000, 157486, -1000, -1000, -1000,
	-1000, -1000, 162357, 19482, 18735, 18051, 12043, 17728, 16948, -114,
	508, -117, 505, 1046, 1043, 504, 503, 502, -119, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -122, 501, -1000, 3385, -84, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 498, -1000, 489, -1000, 162145, -84,
	480, 820, -1000, 60000, 60000, 60000, 60000, 477, -1000, 159738,
	-1000, 161869, 40920, 40920, 40920, 476, 161623, 55562, -84, -124,
	-1000, -138, -1000, -1000, -1000, -1000, 603, -140, -1000, -145,
	1141, 39634, 64432, 28642, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1141, 1141,
	55562, -1000, 55562, 2944, -1000, -1000, -1000, -1000, 2943, 2395,
	3194, 65688, -1000, -1000, -1000, -1000, 126509, -1000, 4134, 3610,
	-1000, 126509, -1000, -1000, 141974, 668, -1000, 126509, 126509, 28642,
	1029, -1000, -1000, 141974, 666, 1029, 126509, 916, -1000, -1000,
	-1000, -1000, -1000, 473, 78806, 117, 251, 28642, 1115, -1000,
	-1000, 3063, 3063, 3063, 3063, 3063, 112921, -1000, -1000, 154936,
	1409, -36, -96, 3209, 3207, 3196, -38, 86246, -38, -141,
	141974, -32, 4081, -274, -1000, 2420, -1000, 85619, -1000, 866,
	1231, 28642, -1000, -1000, -1000, 681, -1000, 4142, 4142, -1000,
	4142, 154936, 3382, 305, 3195, 3192, 3191, -1000, 2630, 99315,
	285, -120, 154936, -1000, 274, -146, -1000, -1000, 83756, 79423,
	-1000, 2547, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4267,
	-1000, 2572, -1000, -1000, 112921, 2572, 2572, -1000, 112921, 112921,
	2572, -1000, 273, -1000, 272, -1000, -1000, -120, -1000, 1130,
	38348, -1000, 2106, -1000, -1000, 1783, -1000, 2312, -1000, 1537,
	-1000, -1000, 38348, -1000, 3764, -1000, 1990, -1000, -1000, -1000,
	-1000, 4558, 141974, 141974, 112921, -1000, 124041, 141974, -1000, 2563,
	154936, -1000, 2762, 147527, 2743, 146910, 85619, -1000, -1000, 680,
	1071, 2919, 2917, 1226, 141974, 141974, 2915, 146293, 145676, -1000,
	4263, 141974, 2421, 55562, 124041, 3915, 2500, 3260, 116, 116,
	-1000, 116, -1000, -1000, 679, 1392, 112921, 112921, 141974, 154936,
	112921, 2401, -1000, -1000, -1000, -1000, -1000, 101166, -1000, -1000,
	1548, -1000, -1000, -1000, 1548, -1000, 1548, 3955, 2141, 141974,
	154936, 112921, -1000, -1000, -1000, -1000, 141974, 141974, 154936, 2625,
	2720, 2623, 3123, -1000, -1000, -1000, -1000, -1000, -1000, 154936,
	145059, 2269, 144442, 2261, 2243, -1000, -1000, -1000, 2202, 2232,
	2491, 2049, 141974, -1000, -1000, -1000, -1000, -1000, 1647, -1000,
	889, 1407, 3376, 55562, 55562, 2481, 116, 116, -1000, 116,
	678, 28642, -1000, 1497, -1000, 3479, 141974, 4194, 143825, 4191,
	141974, 141974, 141974, 154936, 3831, 141974, -33, -1000, 1543, -1000,
	4086, -1000, 999, -1000, -137, -34, -166, -1000, 995, 994,
	-141, 2340, 141974, 154936, -1000, 143208, 7084, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2468, 3090, 1258, 141974, 1469, -1000,
	-1000, 2048, 1406, 1405, 100549, 2419, 2047, 2147, 154936, 69454,
	1101, 69454, 3114, -1000, -1000, 26110, -1000, 162845, 162845, -1000,
	162845, -1000, 83139, 92516, 92516, 141974, -1000, 76935, 141974, 94367,
	1076, 3577, 75061, -141, 1093, 1649, 3495, 1893, -166, 677,
	141974, -1000, -1000, 3955, 3576, 544, 2759, -1000, 154936, 1178,
	4032, 3575, 676, 4261, 4260, -1000, 112921, 2622, 2758, -1000,
	-1000, 142591, 3607, 889, 141974, 1141, 65688, 2288, -1000, 72591,
	1201, 141974, 2153, 219, -1000, -1000, -1000, 6, 141974, -1000,
	874, -1000, -1000, 7736, 7736, 1093, 70081, -147, -1000, 250,
	674, 991, 990, -1000, 5630, -1000, -176, -1000, 92516, 1100,
	69454, 3375, -176, 3187, 3373, -1000, -1000, 1126, 1093, 1608,
	3182, 1093, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -22, -1000, 2039, 2133, 141974,
	-120, -120, -52, -1000, -1000, 249, -36, -1000, 1103, -1000,
	1103, -1000, 1103, -1000, -1000, -1000, 162845, -1000, -1000, -1000,
	1905, 1890, 141974, -1000, 141974, 3452, -1000, 141974, -1000, -1000,
	4259, -1000, -1000, 28642, 141974, 112921, 28642, 112921, 3451, 3450,
	-1000, -1000, -1000, 141974, -1000, -1000, 141974, -1000, -1000, -1000,
	-1000, -1000, -1000, 1273, -1000, 2138, 2591, -1000, 673, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2848, -1000,
	-1000, 37080, 1034, -1000, -1000, 112921, -23, -37, 55562, 55562,
	11714, 10582, 55562, 60000, 60000, -1000, 55562, 7995, -1000, -1000,
	-1000, -1000, -1000, 3371, 672, 55562, 85619, 2589, 2178, -1000,
	472, 15282, 6013, -1000, 55562, -1000, 349, -1000, 470, 40286,
	-1000, 160535, 21, -148, -1000, 21641, -84, -153, -1000, -1000,
	860, -1000, 3611, -1000, 55562, 161439, 2779, 2333, 2117, 1924,
	4142, 4189, 25475, -1000, 77562, 1143, 2566, 157244, -1000, -1000,
	-1000, -1000, 85619, 85619, 55562, 55562, -1000, 55562, 55562, 55562,
	-1000, -1000, -1000, 4142, 1038, -1000, -1000, -1000, 1038, -1000,
	-1000, 1548, -1000, 1548, -1000, 55562, -1000, -1000, 3370, 55562,
	-1000, 85619, 85619, 60000, 60000, 60000, 60000, 60000, 60000, 60000,
	60000, 60000, 60000, 60000, 60000, 60000, 60000, 60000, 60000, 60000,
	60000, 60000, 60000, 2936, 60000, 4103, 4103, 4103, 761, -1000,
	3449, 3370, 55562, 55562, 85619, 465, 464, 462, -1000, 55562,
	-84, -1000, -1000, 11223, 670, -1000, 2839, -1000, 141974, -1000,
	3286, -1000, 55562, -1000, -164, -1000, 3251, -1000, -1000, 3286,
	3286, -161, 162845, 65688, 65688, -1000, 669, 55562, 2940, -1000,
	-1000, 846, -333, -1000, 984, -1000, -1000, -1000, -1000, -1000,
	-1000, 982, -1000, 668, -1000, -1000, -1000, 188, 126509, 666,
	-1000, 141974, 126509, 844, -1000, -168, -1000, -1000, -169, -1000,
	125892, 445, 28642, -1000, 1141, 3993, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2945, -274, 154936, 154936, 2034, 2026, 2018,
	-38, -141, 2583, -1000, 3297, 4186, -1000, 4144, 858, 843,
	168, 4142, 444, 443, 436, -120, 154936, 154936, 2017, 1982,
	1981, 80669, 3367, 154936, -1000, -1000, -1000, 76935, 85619, -1000,
	85619, -1000, -1000, -1000, -1000, 2572, -1000, -1000, -1000, 265,
	-1000, -1000, -1000, -1000, 3031, -1000, -39, -1000, -1000, -1000,
	55562, -1000, 1077, -1000, -1000, 3815, 665, 1404, 1400, -1000,
	-170, -1000, 975, -1000, -1000, -1000, -1000, -1000, 3323, -1000,
	3573, -1000, 2754, -1000, 1208, 2748, 2185, -1000, 55562, 664,
	3102, 661, 656, 4258, 2400, 4257, 1227, 3571, 2572, 3564,
	2572, -1000, -1000, -1000, 1064, -1000, 162845, -171, -1000, 2500,
	-1000, 636, 635, -1000, -43, 1830, 614, 1399, 1124, -1000,
	-1000, 55562, 55562, 125275, -1000, 526, 3824, -24, -1000, -1000,
	-1000, 1979, 1398, 1397, -1000, -1000, -1000, -1000, -1000, 3955,
	1972, 1396, 1378, -1000, -1000, -1000, -1000, -1000, -1000, 3513,
	3036, 2715, -1000, -1000, -1000, -1000, 2747, -1000, 141974, -1000,
	3562, 141974, 3202, 889, 141974, 3824, 3280, 1121, -1000, 3502,
	3501, 1039, 141974, 55562, 55562, 161199, 160959, -1000, 1118, -1000,
	-1000, 55562, -1000, -47, -1000, 1376, 3969, 2746, 112921, -1000,
	2572, 3557, 1375, -1000, 1371, -1000, -1000, -1000, 3973, 3972,
	1381, 1872, 92516, 69454, 2939, -1000, 3956, 2581, 4114, 4086,
	69454, -1000, 122807, 92516, 92516, -1000, -1000, -1000, 4114, -1000,
	-1000, -1000, -1000, 88115, -1000, -1000, 1173, 141974, 154936, 112921,
	2007, -1000, -1000, 99315, 99932, 141974, 3176, -120, 1021, -1000,
	3145, 1021, 1101, 3352, -1000, 3007, -1000, -1000, 1117, 427,
	-48, -1000, 1463, 4255, 426, -178, -49, 85619, -1000, -1000,
	-1000, -1000, 2743, 112921, 141974, 1461, 3091, 141974, 141974, 4031,
	-1000, 2649, 447, 112921, 1027, -1000, 4134, -1000, -1000, -1000,
	141974, 39634, 122807, -1000, 3954, 112921, 4027, 3553, 1115, 112921,
	116, 112921, 4167, -1000, -1000, 4022, 112921, 3552, 2621, 2745,
	2881, 889, 93133, 1115, 2562, -57, -1000, 2153, 38982, 3816,
	-184, -1000, -1000, -1000, 1141, 76308, 65688, 55562, 4253, -185,
	-1000, -1000, -1000, -1000, -1000, 92516, 1093, 141974, 141974, 4252,
	92516, 92516, 92516, -50, 634, -1000, 969, 966, 964, -1000,
	-1000, -1000, -1000, -1000, -1000, 962, 961, 960, 958, 957,
	-1000, -1000, 1100, -1000, -1000, -176, 69454, 1100, 69454, 116,
	-1000, 2574, -1000, 112921, 69454, -1000, 24840, 141974, 3174, -1000,
	87480, -1000, -1000, -1000, -1000, -1000, 1103, -1000, 4183, -141,
	-1000, -1000, -1000, -1000, 2493, 2682, 2493, 2142, 2134, -1000,
	-1000, -1000, 2578, -1000, -1000, -1000, -1000, 2985, 3823, 28642,
	3947, 374, 55562, 55562, 7565, 781, 592, 374, 55562, 55562,
	85619, 10707, -186, 55562, 55562, -1000, 55562, 842, 162845, -1000,
	4182, 55562, 424, 423, -1000, -1000, -1000, 4136, -1000, -1000,
	-1000, 162845, 55562, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	419, -1000, 158, -1000, -1000, -1000, 151229, -1000, 55562, 418,
	3914, -1000, 414, 413, 14294, 658, 156939, 156822, 156430, 412,
	-1000, -1000, 411, 410, 162845, 3449, 162845, -1000, -1000, 1177,
	1177, 1541, 1541, 1541, 1541, 4103, 710, 576, 1185, 463,
	463, 463, 736, 761, 761, 463, 463, 463, 761, 3351,
	2898, 633, 2323, -1000, -1000, 162845, 162845, 409, -1000, -1000,
	-1000, -84, 406, 11223, -1000, -1000, 3275, 3913, 162845, -1000,
	65688, 3275, 3275, -1000, -1000, 2395, 141974, 162845, 65688, -1000,
	3610, -1000, 22929, 22288, -1000, 28642, -1000, -1000, -191, -1000,
	85619, -1000, -1000, -1000, 4134, -1000, 78806, -1000, -1000, 26,
	-1000, 3993, -1000, 956, -1000, -1000, 92516, 92516, 4251, 4250,
	-1000, 4179, 4177, 2558, 4176, 3063, -1000, -274, -155, 141974,
	141974, 141974, -1000, 2580, -1000, 839, 4246, 856, 28642, 403,
	-1000, -1000, -1000, -120, -120, 141974, 141974, 141974, 3349, 112921,
	141974, 1974, 154936, -120, -1000, -1000, -1000, -1000, -1000, -1000,
	3758, 162845, 3448, 3269, 3267, 141974, 141974, -1000, 124041, 38348,
	1687, 124658, 141974, 3546, -1000, 3544, -1000, 1226, 2948, 156275,
	66315, -1000, 66315, 141974, -1000, -1000, -1000, -1000, 2154, 1743,
	4242, 1300, -1000, 3871, 141974, -1000, 141974, -1000, -1000, -1000,
	124041, -1000, 141974, 141974, 112921, 141974, -1000, 154936, 3520, -196,
	162845, -51, -1000, 946, -1000, 1533, -1000, 24205, 141974, 154936,
	112921, 141974, 154936, 112921, 141974, -1000, 3035, 3543, 1200, 141974,
	-1000, 3542, 141974, 1198, -1000, -1000, 141974, 2515, -1000, -1000,
	3498, -1000, 162845, 160719, 116, 55562, 3517, -203, 28642, -1000,
	4175, 4173, 3541, 3879, -1000, 141974, 4172, 141974, 112921, 3757,
	-1000, -1000, -1000, -1000, 941, 939, 928, 925, 924, 922,
	4092, 122807, -1000, 1102, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1968, 1370, 1367, 2619, 2618, 2577,
	-52, 2419, 1101, -53, 631, -1000, 1101, -1000, 92516, 69454,
	4239, 2165, 76935, 55562, 55562, -1000, 3009, -1000, 119714, 94367,
	2631, -1000, -1000, 630, 141974, 141974, 628, -1000, 116, -1000,
	4238, 124041, 627, -1000, 2570, -1000, 837, -1000, -1000, 187,
	-204, 154936, 3955, 116, 112921, -1000, 544, 1098, 544, 402,
	-54, -1000, 3540, 1223, 28642, 112921, 3537, 2883, 889, 93133,
	-1000, 1599, 2983, -1000, -56, -1000, 632, 116, 2562, -1000,
	-57, 162845, -1000, 920, 401, -1000, 3756, -1000, -1000, -205,
	-1000, -1000, 6038, 6038, 92516, 69454, 92516, 92516, 92516, 55562,
	69454, 92516, -1000, 1100, 4021, -1000, -176, -1000, 2793, 1093,
	1093, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28642,
	1962, -1000, 625, 624, -1000, -1000, -1000, -1000, 3823, 374,
	374, 55562, 55562, 55562, 374, 10707, -211, -1000, 374, 374,
	-84, -1000, -1000, 160535, -1000, -1000, -1000, 162845, -1000, 23570,
	2505, -1000, 156113, -1000, 37080, -1000, -1000, 55562, 55562, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 60000, 3346, 622,
	85619, -1000, -1000, 393, 1137, 55562, 57464, 3251, 1137, 1137,
	-1000, -212, -1000, -1000, -1000, 4134, -1000, 4134, 26, -1000,
	141974, -1000, -1000, -1000, 28642, -1000, 92516, -1000, -1000, -1000,
	-1000, -1000, 4233, 4231, 2709, 4230, 4229, -1000, -1000, -1000,
	3509, -154, -179, -187, -1000, 855, -1000, 4228, -1000, -1000,
	179, 178, 159, 154936, 3342, 157, 3165, 3160, -120, -1000,
	116, -1000, -1000, -1000, -1000, -1000, -1000, 3149, 4019, -1000,
	2224, -1000, 141974, 141974, -1000, 141974, -1000, 28642, 141974, 3314,
	1487, -1000, 1071, 2913, 621, 60000, 1271, 112921, 936, 3257,
	3243, -1000, 4055, 3911, 3166, -214, -1000, 141974, 55562, 141974,
	-219, -220, 2703, -1000, -1000, 1267, 1485, 55562, 1264, -1000,
	-1000, -1000, 85619, 620, 2572, 2572, -1000, -221, -226, -1000,
	-1000, -1000, 55562, 1362, 141974, 37714, -1000, 4227, 3824, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 141974, 141974, -1000,
	-1000, -1000, 141974, 3824, 141974, -1000, 55562, -1000, 160295, 55562,
	1352, -1000, -1000, -1000, 4171, 2572, 28642, 2572, -1000, 2572,
	3879, 1299, 92516, 55562, 1707, 69454, 69454, 55562, -1000, -1000,
	-1000, 2645, 141974, 154936, 112921, 2319, 2319, 3444, -1000, -1000,
	-1000, 2939, 2939, -1000, -59, 1101, -1000, 1855, -1000, 162845,
	162845, 2498, 4226, -1000, -1000, -1000, -1000, 2908, -1000, -1000,
	-1000, 141974, 2905, 3200, 66315, 619, 618, 141974, 1095, -1000,
	-228, 94367, 1076, 1047, -1000, 74442, -1000, -1000, -1000, -1000,
	544, 4018, -1000, 3028, 4010, -1000, 4170, 616, 615, 141974,
	2615, 612, 28642, 3804, 889, 93133, -1000, 3607, 2153, -1000,
	2727, 141974, 3797, -1000, 2983, 611, 1093, 610, 1093, -1000,
	-229, -1000, -1000, -1000, -1000, -1000, 162845, -1000, -1000, -1000,
	-1000, 1581, 1100, -63, -1000, 1025, 1019, -1000, -1000, -1000,
	-1000, 112921, 112921, 55562, 55562, -1000, 374, 374, 374, -1000,
	382, -1000, -1000, 2562, 3908, -1000, -66, 155680, 155601, 5768,
	60000, 85619, -231, -1000, -1000, 141974, 162845, -68, -1000, 162845,
	608, 606, 536, -1000, -1000, -1000, 835, 821, -1000, -1000,
	-1000, -1000, 4225, -1000, -1000, -1000, 154936, 154936, 154936, 4224,
	-1000, 154936, 154936, 154936, -120, 154936, 154936, 1953, 1935, -1000,
	123424, 141974, -1000, -1000, 2185, 2742, -1000, -1000, 141974, 2744,
	-1000, -1000, -1000, 1105, 55562, 2323, 60000, 605, 55562, -1000,
	604, 601, 4006, 3733, -1000, 3081, 3344, 2198, 66315, -1000,
	3823, -1000, 155556, -1000, 1222, 2245, -1000, -1000, -1000, -1000,
	162845, 60000, 3879, 66315, -1000, -1000, 600, 599, 162845, 589,
	913, 3340, -1000, -1000, -1000, -1000, -141, -141, -1000, -1000,
	162845, 116, 162845, 575, 3969, -1000, -1000, -1000, -1000, 2572,
	112921, -1000, 162845, -1000, -1000, -1000, -1000, 162845, 906, -1000,
	-1000, -1000, 1350, -1000, -1000, -1000, -1000, -1000, 4223, 3331,
	99315, -1000, -234, 2286, 85619, -1000, 1076, -1000, -1000, 2631,
	562, -1000, 1089, 3051, 3051, -236, 66315, 66315, -237, 2608,
	3024, -1000, 376, 4004, 1047, -1000, 4125, -1000, 1141, -1000,
	4001, 116, 3755, -1000, 116, -1000, 4167, 66315, -1000, 112921,
	66315, 2612, 2376, 2862, 93133, -1000, 2881, -1000, -1000, -239,
	141974, 2153, -1000, -1000, 92516, -1000, -1000, 4133, -1000, 2793,
	-1000, 141974, -1000, 141974, -1000, -1000, -244, -245, -1000, 2469,
	55562, 37080, -1000, -1000, 5768, -250, -1000, -77, -1000, 3997,
	57464, 4220, 4217, 4216, -1000, -1000, -1000, -274, -274, -274,
	-1000, -120, -120, -120, -120, -120, 141974, 141974, -1000, 2217,
	-1000, 2743, -1000, -1000, 3530, -1000, 3277, 559, 20130, 2323,
	2842, 141974, 5974, 3955, 3955, -1000, 3996, 3266, -1000, -1000,
	2481, 554, -1000, -1000, -1000, -1000, 1034, 141974, 1089, 3276,
	112921, 2323, 1224, -252, 2493, 2493, 55562, 36446, 2513, -1000,
	55562, -1000, -1000, 3879, 69454, 154936, -1000, 154936, 2611, -1000,
	3320, 5992, -1000, 2608, 141974, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1222, -253, -258,
	-1000, -1000, 3863, -1000, 3752, 3009, 116, -1000, -1000, -1000,
	116, -1000, 4215, 1098, 375, -260, 1223, -261, 112921, 2317,
	-1000, 889, -1000, 2883, 1141, 3656, -1000, -266, -1000, -1000,
	-1000, -267, -268, -1000, -1000, 372, 56830, 56830, 56830, -84,
	-104, -1000, 141974, 546, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 156, 150, -1000, -1000, 3494, 1026, -1000, 1008, 2242,
	371, 1242, 370, 354, -1000, -1000, -1000, 3166, -1000, 141974,
	-1000, -1000, -1000, 1026, 544, -1000, 55562, 1222, -269, -1000,
	1195, -275, -1000, 1194, -277, -1000, 3330, -1000, -285, 2572,
	-1000, -274, 264, 2319, 1097, 3948, 2576, 5992, -1000, 4163,
	93133, -1000, -1000, -1000, 2854, -290, -1000, -1000, 2198, 1222,
	2481, 2635, -1000, 2498, 1095, -1000, -1000, -1000, -1000, 1222,
	541, 2198, 540, 1711, 889, -1000, -1000, 1548, 3804, 3551,
	1542, 1093, -1000, -1000, -1000, 3531, -1000, 61268, 2662, 2124,
	159576, 3531, 3531, -1000, -1000, 154936, 154936, 141974, 1089, 3934,
	-1000, 1010, 1009, 1719, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1141, -291, -1000, 2842, 162845, 1089, -1000, 2493,
	3126, -1000, 2493, 3326, -1000, 2512, -1000, -1000, -1000, -1000,
	3322, -1000, 2071, 4091, -1000, -1000, 3978, 55562, -1000, -1000,
	-1000, -1000, -1000, -1000, 1089, 141974, 2481, 2198, 1089, 2111,
	2092, 4214, 1076, 2608, 2198, 66315, 2481, 66315, 2456, -1000,
	141974, -1000, 2376, 1524, -1000, 1868, -1000, -1000, 2068, 3999,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -120, -120, -1000,
	-1000, 893, -1000, 3723, -1000, 1263, 2354, 2354, -1000, -1000,
	1008, -1000, -1000, 539, -1000, 535, -1000, 154936, 2560, -1000,
	-1000, -1000, 162845, -1000, -1000, 1089, 2481, 1141, -1000, 4213,
	-1000, 2608, -1000, 2481, -292, 1089, -293, 2533, -1000, -1000,
	-141, 2317, -1000, 1858, 76308, 2109, -1000, -1000, 2550, 56196,
	55562, -1000, 4088, -1000, -1000, 2949, -1000, 3166, 55562, 55562,
	264, 73825, 159402, 1141, 1089, 1544, -1000, 2854, 1089, 1222,
	1141, 2198, 1911, 889, 1711, 76308, -276, -1000, -1000, -1000,
	162845, -1000, -1000, -1000, -1000, -312, -313, -1000, -166, 122807,
	-321, -1000, -1000, -1000, 1544, 1141, -1000, 1158, -1000, -1000,
	-1000, 1141, 2198, 1544, 2481, -1000, -1000, 2202, 154936, 2456,
	-276, -1000, 2481, 1349, -319, -1000, -1000, 1544, -1000, 1544,
	2481, -1000, 1089, -1000, 2533, -1000, -1000, -1000, 532, -1000,
	-1000, -1000, 1089, 1141, 1911, 55562, 1141, 1544, -1000, -324,
	1544, -1000, 2481, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5141, 5140, 27, 5139, 5137, 5136, 5133, 5129, 5128,
	5127, 5125, 5124, 5122, 5121, 5118, 164, 5117, 5116, 5115,
	5114, 5112, 5111, 5103, 5102, 5101, 5097, 5096, 5094, 5091,
	5090, 5076, 5072, 5070, 5068, 5066, 5064, 5059, 5056, 5053,
	5049, 5047, 5045, 5044, 5042, 5041, 5040, 5039, 5038, 5037,
	5036, 5033, 5032, 5031, 5029, 5026, 5025, 5024, 5019, 5017,
	5015, 5011, 5009, 5007, 5001, 5000, 4997, 4995, 4994, 4990,
	4989, 4988, 4987, 4986, 4985, 4984, 4983, 4982, 4980, 4979,
	4978, 4977, 4976, 4975, 69, 4974, 4973, 4972, 4971, 4970,
	4969, 4968, 4967, 4966, 4964, 4958, 4957, 4954, 4952, 4951,
	4950, 4948, 4947, 4945, 4943, 4941, 4940, 73, 4936, 323,
	4935, 4933, 4932, 4931, 4930, 4921, 4920, 4919, 4918, 4916,
	4915, 4914, 4913, 4912, 319, 4911, 17, 202, 4909, 4908,
	21, 4905, 4904, 318, 4903, 4901, 4900, 4899, 4898, 327,
	4897, 4896, 4895, 4894, 4892, 305, 4891, 4889, 4885, 4884,
	4881, 4880, 95, 153, 4879, 4878, 2488, 4877, 4876, 4874,
	4872, 4871, 4870, 4867, 303, 306, 4866, 4865, 4864, 304,
	203, 4863, 317, 4862, 4861, 4860, 4857, 4856, 4854, 4852,
	4851, 4850, 4849, 4848, 4847, 4845, 4844, 4843, 4842, 4841,
	4840, 4839, 4837, 4836, 4834, 4833, 4832, 4831, 4830, 4829,
	4828, 4827, 4825, 4824, 4823, 4822, 4821, 4820, 4819, 4818,
	4817, 4816, 4815, 4813, 4807, 4804, 4803, 296, 254, 144,
	4801, 4800, 4799, 4798, 4797, 4796, 315, 313, 4793, 4792,
	4790, 4789, 4783, 3973, 4782, 4777, 4776, 4775, 4774, 4773,
	4772, 4771, 4769, 131, 11, 51, 4764, 4763, 143, 108,
	103, 90, 123, 121, 4760, 4747, 136, 4743, 151, 138,
	4739, 141, 127, 30, 2, 336, 287, 538, 281, 4738,
	4736, 4731, 288, 237, 4728, 283, 4726, 4721, 4720, 4717,
	4716, 4715, 91, 67, 250, 4714, 168, 4712, 4708, 161,
	206, 210, 214, 209, 208, 86, 66, 126, 100, 79,
	61, 26, 190, 258, 28, 255, 5, 8, 310, 4707,
	302, 14, 163, 10, 43, 4706, 4704, 4703, 4702, 4524,
	139, 4701, 312, 285, 204, 4700, 4699, 4697, 945, 4695,
	4694, 71, 294, 2545, 99, 137, 40, 156, 4682, 191,
	196, 36, 4680, 300, 110, 4675, 4674, 116, 111, 10685,
	6533, 4673, 4671, 135, 87, 146, 8751, 241, 220, 238,
	115, 149, 192, 193, 4670, 182, 4668, 173, 178, 212,
	234, 4665, 109, 4663, 3998, 113, 216, 184, 7138, 4662,
	4661, 4657, 102, 4654, 122, 4653, 4652, 78, 23, 3,
	7, 165, 50, 53, 38, 4650, 48, 147, 63, 33,
	4648, 31, 4645, 4637, 4636, 4635, 64, 4632, 49, 186,
	4630, 4629, 325, 4628, 101, 68, 200, 4626, 170, 270,
	4621, 273, 154, 4611, 4607, 224, 239, 240, 222, 260,
	4603, 96, 276, 4598, 4597, 4596, 4595, 4593, 326, 160,
	12, 158, 4591, 4576, 177, 4575, 72, 286, 242, 4574,
	76, 4573, 4572, 211, 75, 172, 324, 207, 271, 152,
	275, 225, 282, 4570, 4569, 4568, 226, 4566, 4565, 263,
	199, 4564, 4563, 267, 331, 120, 58, 1, 205, 105,
	279, 94, 235, 189, 4562, 246, 174, 4561, 175, 4560,
	112, 4557, 322, 218, 259, 55, 13, 9, 106, 133,
	4555, 15, 284, 188, 244, 140, 4553, 8249, 3760, 3586,
	277, 4552, 179, 142, 98, 157, 183, 311, 97, 4546,
	4542, 3730, 4540, 4535, 4532, 4531, 228, 4529, 4527, 257,
	197, 201, 4526, 171, 229, 4525, 124, 89, 65, 32,
	148, 104, 320, 134, 272, 223, 297, 4523, 4521, 4520,
	230, 4515, 83, 185, 248, 4514, 245, 309, 81, 4513,
	181, 4512, 180, 2770, 82, 187, 4511, 269, 4510, 4509,
	4508, 4507, 4506, 4505, 4504, 2718, 280, 4499, 4498, 4497,
	35, 233, 4496, 227, 231, 316, 77, 74, 236, 114,
	4955, 128, 2628, 243, 59, 4, 6, 213, 4495, 5236,
	70, 4494, 0, 15642, 11299, 14381, 4490, 4489, 15366, 4487,
	6311, 4486, 4485, 4484, 265, 92, 4481, 4479, 4478, 125,
	4477, 107, 4476, 4475, 85, 4473, 34, 25, 29, 44,
	37, 784, 709, 4471, 4470, 45, 162, 41, 4468, 321,
	274, 4467, 4466, 4465, 4461, 118, 4460, 60, 4459, 56,
	4458, 4457, 57, 20, 39, 4456, 4455, 249, 194, 3896,
	195, 176, 4454, 145, 4453, 4452, 291, 93, 166, 4451,
	4450, 299, 251, 253, 119, 4448, 298, 4447, 252, 4446,
	84, 46, 4445, 4444, 289, 132, 130, 62, 292, 159,
	54, 4443, 4442, 4441, 4440, 217, 4439, 4438, 4437, 4436,
	4435, 129, 169, 4434, 80, 4432, 4429, 4426, 52, 264,
	221, 4424, 24, 4422, 4420, 4419, 268, 262, 314, 215,
	256, 4418, 4415, 198, 4413, 4410, 4409, 301, 4408, 4405,
	3970, 307, 4402, 47, 4400, 4397, 4396, 16, 4395, 4394,
	247, 3761, 4390, 4389, 19, 4387, 232,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 14, 14, 10, 10, 10, 10, 11, 11, 11,
	11, 11, 63, 63, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	20, 20, 20, 20, 20, 20, 20, 42, 44, 43,
	37, 37, 38, 38, 39, 40, 40, 45, 47, 46,
	48, 49, 49, 50, 50, 50, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 23, 23,
	51, 51, 24, 24, 53, 53, 25, 25, 54, 54,
	671, 671, 671, 672, 672, 673, 673, 673, 28, 56,
	58, 58, 478, 478, 478, 21, 22, 22, 22, 22,
	674, 674, 674, 674, 41, 29, 57, 34, 34, 34,
	34, 34, 246, 246, 246, 246, 27, 27, 52, 52,
	292, 292, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 670, 670, 294, 294, 293, 279, 279, 280,
	280, 281, 281, 675, 675, 295, 295, 295, 296, 296,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	564, 564, 564, 595, 595, 595, 595, 597, 597, 722,
	722, 723, 723, 723, 723, 723, 155, 155, 452, 452,
	452, 72, 72, 72, 72, 72, 660, 660, 248, 248,
	248, 250, 250, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 96, 96, 97, 97, 287, 287, 286,
	286, 286, 286, 286, 286, 286, 681, 681, 680, 718,
	718, 679, 679, 682, 682, 682, 247, 247, 247, 93,
	93, 114, 114, 151, 151, 151, 151, 151, 151, 151,
	151, 152, 152, 153, 153, 691, 691, 691, 251, 251,
	251, 253, 253, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	258, 19, 19, 134, 134, 134, 134, 134, 134, 134,
	129, 129, 599, 599, 600, 600, 242, 242, 243, 243,
	243, 243, 244, 244, 245, 245, 245, 87, 87, 255,
	255, 257, 257, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 75, 75, 75, 75,
	75, 76, 76, 76, 76, 76, 76, 77, 77, 77,
	77, 77, 77, 78, 78, 85, 85, 85, 85, 85,
	85, 85, 85, 219, 219, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 92,
	92, 92, 92, 92, 103, 103, 692, 692, 693, 693,
	711, 697, 697, 698, 698, 701, 701, 701, 702, 702,
	702, 702, 702, 710, 710, 710, 710, 710, 704, 703,
	705, 705, 706, 706, 708, 708, 708, 708, 708, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 696, 712, 713, 713,
	714, 714, 715, 715, 715, 122, 122, 122, 717, 717,
	716, 716, 699, 699, 700, 700, 67, 707, 707, 725,
	725, 68, 69, 70, 71, 694, 694, 724, 724, 724,
	724, 724, 724, 724, 724, 724, 724, 724, 724, 724,
	724, 724, 724, 724, 726, 726, 727, 727, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 728, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 104, 104, 410, 410, 373,
	373, 105, 105, 105, 106, 106, 107, 107, 89, 89,
	89, 657, 657, 658, 664, 729, 729, 555, 555, 554,
	554, 109, 109, 451, 451, 110, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 120, 120, 120, 120,
	120, 121, 121, 121, 118, 118, 118, 115, 115, 115,
	113, 113, 113, 119, 119, 119, 663, 359, 359, 117,
	117, 117, 116, 116, 116, 426, 426, 427, 429, 428,
	123, 123, 123, 123, 374, 124, 124, 124, 124, 124,
	124, 124, 124, 127, 127, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 557, 557,
	5, 5, 285, 285, 284, 284, 284, 284, 6, 6,
	6, 290, 290, 289, 288, 125, 125, 125, 519, 519,
	130, 130, 130, 467, 467, 131, 131, 131, 131, 131,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 667, 667,
	419, 419, 322, 322, 322, 322, 143, 143, 143, 143,
	144, 144, 144, 144, 145, 145, 228, 228, 161, 161,
	161, 161, 160, 160, 160, 160, 160, 160, 160, 160,
	79, 79, 79, 80, 80, 81, 81, 82, 82, 83,
	83, 84, 84, 84, 84, 84, 164, 164, 33, 33,
	33, 33, 165, 165, 719, 719, 167, 163, 163, 163,
	163, 163, 163, 163, 162, 162, 166, 166, 166, 166,
	168, 170, 170, 170, 170, 170, 169, 169, 169, 169,
	169, 171, 171, 589, 589, 437, 437, 587, 587, 611,
	611, 588, 588, 380, 380, 380, 380, 380, 381, 381,
	381, 598, 598, 598, 598, 598, 598, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 229, 229, 229,
	230, 230, 235, 235, 236, 236, 236, 237, 237, 237,
	234, 234, 234, 231, 231, 232, 232, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 240, 240, 238,
	238, 239, 239, 731, 731, 730, 730, 241, 241, 241,
	241, 241, 200, 200, 200, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 438, 438,
	203, 203, 203, 187, 187, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 254, 254, 254, 254, 254,
	179, 179, 179, 179, 179, 179, 179, 179, 180, 180,
	180, 174, 174, 189, 189, 189, 189, 189, 181, 181,
	182, 182, 182, 183, 183, 183, 183, 211, 211, 186,
	186, 186, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 175, 175, 175, 175, 191, 191, 191, 191, 474,
	474, 474, 217, 217, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	214, 214, 214, 214, 214, 214, 683, 683, 684, 684,
	684, 207, 207, 207, 207, 207, 207, 535, 535, 201,
	201, 201, 201, 206, 206, 206, 206, 185, 185, 185,
	185, 209, 209, 209, 209, 457, 457, 198, 198, 198,
	199, 199, 199, 204, 204, 216, 205, 411, 411, 202,
	202, 208, 208, 208, 208, 210, 210, 210, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 177, 177,
	177, 177, 178, 178, 178, 178, 212, 212, 197, 197,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 732, 732, 193, 193, 193, 192, 192, 192, 192,
	195, 195, 196, 196, 196, 196, 196, 196, 196, 194,
	184, 215, 665, 665, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 659, 659, 659, 659, 659, 659,
	659, 659, 659, 662, 662, 662, 662, 662, 666, 666,
	135, 135, 135, 135, 135, 135, 135, 146, 146, 146,
	146, 146, 146, 146, 149, 149, 136, 136, 136, 136,
	136, 136, 136, 139, 139, 137, 137, 137, 137, 138,
	138, 98, 98, 98, 98, 98, 18, 18, 18, 99,
	99, 313, 313, 263, 263, 263, 398, 398, 264, 264,
	388, 388, 388, 388, 259, 259, 260, 260, 261, 262,
	262, 100, 100, 733, 733, 733, 676, 676, 676, 677,
	677, 677, 677, 677, 677, 382, 382, 383, 383, 499,
	499, 499, 499, 499, 386, 386, 386, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 396, 397, 397, 389,
	389, 395, 394, 394, 393, 393, 392, 392, 390, 391,
	391, 391, 400, 400, 399, 402, 402, 401, 498, 620,
	620, 622, 622, 622, 622, 622, 622, 622, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 475, 475, 734, 734, 735,
	736, 618, 618, 618, 619, 614, 614, 615, 615, 615,
	615, 615, 384, 384, 385, 385, 385, 385, 616, 617,
	417, 417, 539, 621, 621, 623, 623, 625, 737, 737,
	737, 737, 737, 737, 738, 738, 738, 497, 497, 496,
	496, 495, 495, 408, 408, 626, 626, 626, 626, 627,
	627, 627, 627, 627, 630, 629, 628, 628, 628, 628,
	628, 102, 102, 102, 454, 454, 453, 453, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 224, 224, 325, 325,
	325, 95, 95, 95, 15, 15, 15, 15, 15, 15,
	15, 340, 340, 16, 16, 16, 16, 678, 678, 678,
	101, 101, 101, 101, 101, 101, 406, 406, 406, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 669, 669, 668, 668, 326,
	326, 740, 740, 108, 108, 108, 108, 108, 108, 108,
	108, 558, 558, 559, 559, 94, 94, 94, 94, 94,
	476, 476, 473, 473, 472, 472, 416, 416, 537, 537,
	537, 538, 330, 330, 331, 331, 282, 282, 282, 477,
	477, 477, 477, 36, 35, 26, 26, 30, 30, 31,
	31, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	32, 32, 60, 60, 60, 60, 61, 61, 61, 61,
	64, 64, 65, 65, 59, 59, 59, 59, 62, 62,
	55, 55, 66, 66, 66, 66, 66, 685, 687, 687,
	686, 686, 690, 690, 690, 690, 690, 690, 688, 688,
	361, 361, 689, 689, 720, 720, 721, 721, 142, 142,
	147, 147, 147, 147, 147, 148, 148, 148, 148, 150,
	150, 150, 150, 159, 159, 220, 220, 220, 220, 220,
	220, 220, 73, 73, 86, 86, 157, 742, 742, 742,
	158, 158, 158, 221, 221, 221, 221, 222, 222, 223,
	223, 741, 741, 323, 323, 492, 492, 493, 493, 743,
	743, 494, 494, 494, 494, 494, 316, 315, 317, 317,
	318, 318, 91, 91, 91, 304, 304, 303, 306, 306,
	305, 307, 307, 308, 308, 301, 301, 601, 601, 310,
	310, 310, 311, 311, 297, 297, 298, 298, 299, 299,
	300, 300, 314, 314, 596, 596, 744, 744, 133, 133,
	133, 227, 227, 372, 372, 372, 485, 485, 485, 409,
	409, 337, 337, 491, 491, 491, 491, 491, 450, 450,
	450, 226, 226, 424, 424, 440, 440, 441, 441, 551,
	551, 442, 140, 140, 141, 141, 156, 156, 267, 267,
	265, 265, 265, 265, 265, 265, 265, 265, 272, 272,
	273, 273, 274, 274, 275, 276, 276, 276, 276, 430,
	430, 277, 277, 277, 266, 266, 266, 268, 268, 268,
	268, 268, 268, 268, 271, 271, 271, 271, 278, 278,
	278, 270, 270, 637, 637, 637, 639, 639, 641, 641,
	640, 640, 636, 636, 638, 638, 739, 739, 456, 456,
	456, 405, 407, 403, 403, 404, 404, 414, 414, 412,
	413, 413, 415, 415, 536, 536, 536, 283, 283, 283,
	447, 447, 447, 447, 448, 448, 481, 481, 479, 479,
	479, 479, 480, 480, 482, 482, 482, 483, 483, 484,
	484, 444, 444, 445, 445, 446, 446, 446, 446, 515,
	515, 269, 269, 269, 421, 421, 421, 422, 422, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	506, 506, 504, 504, 504, 504, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 541, 542, 542, 423, 423,
	543, 488, 488, 489, 489, 486, 486, 487, 487, 490,
	490, 655, 655, 655, 656, 656, 534, 534, 544, 544,
	544, 544, 544, 544, 530, 530, 531, 531, 532, 532,
	533, 533, 552, 553, 553, 460, 460, 460, 460, 458,
	458, 461, 461, 461, 461, 461, 459, 459, 545, 545,
	545, 545, 449, 449, 225, 225, 546, 546, 546, 546,
	547, 548, 548, 549, 549, 500, 501, 501, 560, 560,
	560, 560, 562, 420, 420, 420, 420, 420, 613, 612,
	612, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 577, 577, 577, 577, 577, 577, 577, 563,
	563, 563, 563, 563, 567, 567, 567, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 568, 568,
	573, 573, 574, 574, 574, 569, 570, 575, 575, 575,
	575, 745, 745, 579, 579, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 565, 565, 565, 572, 572, 572,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 468, 468, 470, 470, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 509, 509,
	509, 509, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 631, 631, 631,
	631, 631, 631, 631, 631, 511, 511, 634, 634, 635,
	635, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 642, 642, 643, 643, 645, 645, 646, 646,
	647, 648, 648, 648, 649, 650, 650, 644, 644, 651,
	651, 651, 651, 652, 652, 653, 653, 653, 653, 653,
	654, 654, 654, 654, 654, 521, 521, 522, 522, 528,
	528, 528, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 379, 379, 378,
	327, 327, 327, 327, 327, 327, 435, 435, 433, 433,
	433, 436, 436, 434, 434, 432, 432, 431, 431, 518,
	518, 516, 516, 520, 520, 462, 462, 578, 578, 578,
	578, 578, 578, 578, 578, 463, 463, 463, 471, 464,
	464, 465, 465, 465, 465, 465, 512, 513, 466, 466,
	466, 514, 514, 523, 527, 527, 526, 525, 525, 524,
	524, 502, 502, 503, 503, 443, 443, 746, 746, 439,
	439, 550, 550, 550, 550, 607, 607, 376, 376, 425,
	425, 375, 375, 367, 367, 368, 368, 368, 368, 418,
	418, 529, 529, 580, 580, 581, 581, 582, 582, 583,
	583, 584, 585, 586, 517, 517, 348, 347, 334, 335,
	346, 345, 344, 333, 336, 341, 342, 343, 338, 339,
	355, 354, 353, 302, 309, 360, 362, 362, 365, 365,
	366, 364, 363, 363, 350, 351, 352, 556, 332, 369,
	369, 370, 370, 370, 371, 371, 371, 371, 328, 328,
	329, 329, 356, 356, 357, 358, 358, 349, 349, 349,
	319, 319, 319, 320, 320, 321, 321, 594, 594, 591,
	591, 591, 592, 592, 592, 695, 593, 593, 593, 593,
	590, 590, 590, 590, 590, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	603, 603, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	605, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 610, 610,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 9, 7, 9,
	5, 6, 8, 7, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 1, 1, 1, 0, 1, 6, 6,
	4, 6, 2, 1, 1, 4, 8, 7, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	4, 4, 2, 1, 1, 3, 1, 3, 2, 4,
	3, 2, 3, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 1, 1, 1, 1, 3, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 3, 3,
	3, 1, 3, 12, 3, 5, 4, 1, 3, 3,
	3, 3, 2, 4, 4, 4, 1, 1, 2, 1,
	4, 1, 0, 3, 3, 0, 4, 6, 0, 6,
	4, 4, 4, 5, 7, 6, 8, 7, 9, 8,
	2, 1, 3, 1, 3, 3, 3, 0, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 3, 3, 1, 1,
	1, 3, 3, 6, 4, 9, 7, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	8, 4, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 6,
	3, 8, 5, 3, 12, 4, 2, 0, 1, 0,
	1, 1, 0, 1, 3, 1, 3, 3, 3, 3,
	2, 2, 1, 1, 1, 1, 2, 1, 1, 1,
	1, 0, 1, 2, 2, 2, 1, 1, 1, 4,
	5, 1, 1, 1, 1, 3, 3, 2, 2, 1,
	2, 2, 2, 2, 1, 1, 1, 2, 1, 1,
	3, 0, 1, 4, 0, 4, 6, 3, 1, 3,
	2, 1, 3, 2, 1, 3, 5, 1, 2, 1,
	0, 6, 6, 6, 8, 1, 0, 4, 3, 3,
	4, 3, 4, 4, 4, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 10,
	5, 1, 3, 3, 1, 1, 0, 2, 0, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	4, 3, 1, 2, 3, 2, 2, 2, 4, 6,
	3, 1, 2, 2, 7, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	7, 4, 7, 8, 8, 9, 11, 11, 11, 6,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	10, 13, 10, 13, 5, 8, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 4, 4,
	3, 4, 1, 1, 1, 1, 5, 4, 5, 3,
	3, 2, 2, 6, 3, 3, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 2, 1, 3, 3, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 2, 2, 1, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 3,
	6, 8, 3, 3, 3, 4, 8, 6, 4, 5,
	5, 5, 5, 5, 3, 0, 1, 1, 1, 1,
	4, 4, 3, 4, 4, 3, 4, 4, 1, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	5, 7, 4, 2, 6, 4, 3, 2, 3, 4,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 5, 3, 5, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 4, 3, 4, 5, 3, 4,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	3, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 6, 4, 2,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 7, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 5, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 5, 6, 5, 5, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 4, 3, 4, 4,
	5, 1, 1, 10, 10, 3, 5, 5, 5, 3,
	5, 6, 4, 4, 5, 5, 2, 6, 3, 2,
	5, 4, 2, 0, 1, 1, 1, 1, 2, 3,
	2, 2, 3, 2, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 7, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 12,
	15, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 1, 1, 1, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 0, 1,
	0, 1, 1, 0, 1, 4, 1, 0, 3, 7,
	7, 1, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 3, 6, 4, 2, 3, 5, 5, 5,
	2, 5, 5, 2, 2, 2, 0, 1, 1, 3,
	4, 11, 12, 10, 5, 3, 1, 5, 9, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 6,
	1, 3, 1, 2, 0, 1, 2, 3, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 3,
	0, 4, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 2, 3, 1, 4, 2, 3, 2,
	2, 4, 7, 3, 4, 6, 5, 7, 5, 5,
	3, 3, 0, 2, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 8, 11, 5, 4, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 2,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 1, 2, 3, 0,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 2, 1, 2, 3, 2, 2,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 15, 18, 3, 1, 0, 4, 1, 0,
	4, 1, 0, 2, 2, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 7, 10, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 3, 0, 1, 3, 0, 3, 1, 3, 1,
	2, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 2, 2, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 666, -3, -221, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -220, -229, -230, -231, -232, -241, -225, -222,
	-223, -4, -72, -74, -88, -109, -111, -124, -134, -133,
	-135, -143, -151, -146, -129, -79, -156, -160, -172, -224,
	-226, -227, 33, 32, 107, 85, 166, 138, 148, 219,
	419, 471, 483, 436, 153, 459, 441, -166, -167, 505,
	-73, -86, -158, -157, 78, 139, 183, 323, 451, 589,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -104, -96, -89, -92, -93,
	-724, 110, -638, -112, -116, -150, -114, -728, 174, 240,
	-136, -137, -138, 401, -144, -145, 462, -147, -148, -149,
	465, 175, -81, -80, 168, -265, -267, -163, -162, -164,
	-228, -173, -174, -175, -176, -177, -178, -180, -181, -183,
	-211, -184, -185, -186, -187, -188, -189, -190, -194, -214,
	-191, -192, -193, -196, -195, -197, -202, -198, -199, -200,
	-201, -203, -204, -206, -207, -208, -209, -210, -212, -213,
	511, -205, -215, -182, -216, 579, 528, 87, 475, 21,
	-8, -9, -10, -11, -12, -13, -14, -18, -17, -66,
	-5, -6, -20, -97, -91, -94, -98, -99, -100, -108,
	-101, -102, -103, -637, -113, -115, -118, -120, -121, -117,
	-119, -122, 460, 637, -268, -266, 663, 642, 596, -179,
	-23, -28, -24, -25, -27, -29, -26, -30, -31, -32,
	-51, -56, -53, -54, -52, -55, -57, -58, -59, -60,
	-61, -62, -63, -64, -65, -35, -41, -42, -36, -37,
	-38, -39, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -21, -22, -34, -67, -68, -70, -69, -71, 624,
	633, -271, -269, -270, -278, 497, 604, 551, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, -374, 2, -350, -356,
	-357, -358, -349, -319, -605, -610, 4, -602, -608, 182,
	251, 361, 21, 22, 24, 23, 25, 26, 27, 28,
	30, 31, 41, 43, 44, 45, 47, 48, 49, 50,
	51, 52, 53, 57, 59, 63, 64, 65, 66, 67,
	68, 69, 73, 78, 79, 84, 85, 86, 87, 88,
	89, 90, 91, 97, 94, 95, 96, 98, 99, 101,
	103, 104, 105, 106, 107, 108, 109, 111, 112, 113,
	115, 116, 117, 125, 126, 127, 128, 129, 131, 138,
	132, 139, 142, 136, 141, 137, 143, 144, 146, 147,
	148, 151, 152, 153, 155, 156, 157, 159, 160, 161,
	163, 164, 166, 167, 168, 171, 169, 172, 170, 173,
	174, 175, 176, 177, 180, 188, 189, 190, 195, 197,
	198, 199, 201, 202, 205, 206, 207, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 220, 224, 226, 227,
	228, 229, 230, 231, 232, 238, 239, 240, 242, 243,
	244, 245, 246, 247, 252, 253, 254, 258, 260, 266,
	267, 618, 272, 268, 273, 274, 276, 280, 281, 282,
	283, 284, 285, 286, 288, 290, 289, 294, 292, 296,
	297, 300, 301, 302, 303, 304, 305, 309, 310, 306,
	311, 312, 314, 315, 318, 316, 319, 320, 317, 321,
	324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
	334, 335, 322, 323, 338, 336, 340, 341, 342, 343,
	344, 359, 354, 355, 356, 348, 349, 345, 350, 346,
	347, 351, 352, 358, 353, 363, 364, 365, 366, 369,
	236, 259, 371, 372, 375, 377, 394, 380, 381, 382,
	385, 386, 389, 392, 393, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 406, 407, 409, 410, 411,
	413, 414, 415, 417, 419, 420, 422, 423, 424, 426,
	427, 428, 429, 430, 431, 432, 433, 435, 436, 438,
	437, 439, 441, 443, 444, 445, 451, 452, 459, 453,
	455, 456, 457, 458, 460, 461, 462, 463, 464, 465,
	469, 467, 468, 470, 471, 473, 474, 475, 476, 477,
	479, 481, 482, 486, 487, 490, 488, 508, 509, 531,
	483, 484, 485, 489, 491, 492, 493, 494, 496, 495,
	500, 498, 499, 501, 502, 503, 505, 507, 510, 511,
	513, 514, 515, 516, 517, 518, 519, 522, 524, 525,
	526, 527, 528, 529, 550, 530, 532, 536, 537, 538,
	539, 533, 534, 549, 541, 542, 543, 544, 546, 547,
	552, 553, 554, 555, 556, 557, 559, 560, 562, 570,
	583, 571, 572, 573, 574, 576, 579, 580, 581, 582,
	568, 584, 585, 588, 589, 590, 594, 591, 595, 592,
	593, 596, 598, 601, 602, 603, 610, 608, 609, 611,
	612, 614, 615, 613, 617, 619, 620, 625, 626, 628,
	629, 630, 37, 54, 55, 58, 60, 62, 74, 75,
	76, 80, 133, 134, 165, 178, 179, 191, 208, 209,
	221, 223, 233, 234, 235, 257, 261, 262, 264, 270,
	293, 368, 370, 387, 391, 408, 412, 416, 418, 434,
	478, 506, 520, 535, 540, 563, 564, 565, 566, 575,
	577, 604, 605, 606, 616, 627, -374, 2, -350, 378,
	-343, 2, -319, -319, 419, 29, 2, 29, 407, 499,
	554, 556, 2, -667, -419, 547, 2, 29, -322, -319,
	110, 219, 497, -343, 2, -667, 219, -419, 26, 547,
	2, -319, 2, 392, 177, 205, 23, 28, 71, 82,
	105, 151, 176, 200, -727, 394, 427, 481, 501, 549,
	560, 576, 2, 609, 315, 498, 551, 251, 128, 581,
	489, -678, 486, 487, 392, 425, 473, 222, 597, -323,
	2, 483, -319, 315, 2, 666, 101, 79, 478, 502,
	-169, 2, 305, 571, -170, -171, -168, 563, -589, 489,
	473, 338, -319, 666, 666, 666, 29, -332, 2, -319,
	-332, 2, -233, 2, -332, -730, -240, -239, -238, 22,
	452, 190, 286, 203, 241, 343, 422, 201, 51, -233,
	2, 551, 251, 489, 128, 547, -354, 655, -356, -741,
	2, 571, -741, 2, 666, 666, 2, 551, 398, 609,
	498, 205, 128, 431, 251, 581, 49, 151, 28, 73,
	557, 641, 489, -678, 638, 639, 315, 135, -660, 2,
	-659, 4, -608, -602, -368, -367, 551, 557, 128, -358,
	-349, 655, -357, 666, 666, 666, 666, 2, 273, 274,
	429, 428, 502, 503, 29, 666, 666, 666, 666, 666,
	486, 177, 2, 176, -692, 23, 28, 71, 100, 105,
	135, 200, 394, 427, 501, 549, 553, 560, 576, -677,
	530, 73, 489, -676, -678, 383, 315, 581, 151, -472,
	128, 305, 217, 590, 556, 554, 587, 142, 260, 593,
	592, 666, 666, 666, -127, 2, 663, 33, 32, -126,
	-130, 153, 505, -258, 551, 265, 2, -319, 666, 666,
	666, 2, 273, 274, 486, 487, 29, 666, 666, 203,
	-659, 547, 2, 666, 666, 666, 2, 29, 273, 274,
	486, 487, 265, 2, 73, 492, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 2, -218, 502, 530, 229,
	50, 49, 79, 29, 426, 84, 399, 129, 135, 160,
	582, 220, 547, 251, 252, 281, 100, 101, -474, 47,
	274, 73, 273, 487, -683, 486, -535, 552, 206, 491,
	499, 546, 91, 286, 483, 571, 573, 110, 598, 474,
	630, 431, 432, 544, 445, 541, 306, 169, 204, 4,
	128, 338, 473, 504, 290, 289, 583, 563, 305, 482,
	402, 89, 666, -739, 2, 551, 571, 2, -741, 2,
	-741, 2, -742, 571, 627, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, -266, -268,
	-267, 666, 666, 666, 666, 666, 666, 666, 666, -218,
	502, 2, 79, 29, 29, -412, -414, 586, 263, 162,
	384, -265, -267, 2, -637, 583, 502, -587, 2, -507,
	-611, -509, 653, 654, 646, 548, 72, -378, 360, 631,
	-521, 135, 587, 378, -610, -510, -523, 165, 394, 478,
	-436, 8, 9, 5, 6, 7, -328, -511, -517, 578,
	181, 367, -371, 667, 10, 663, -634, -267, -522, 38,
	223, 70, -591, -370, -329, -563, 264, -369, -349, -631,
	-632, 4, -602, -603, -592, -566, -574, -570, -571, -577,
	-319, -605, 82, 119, 120, 118, 123, 122, 308, 307,
	124, 121, 504, 597, 71, 37, 233, 234, 270, 368,
	235, 80, -633, 152, -604, 261, 262, 520, 55, 434,
	191, 134, 133, 370, 60, 58, 605, -575, 130, 563,
	564, 565, 566, 208, 209, 62, 178, 179, 391, 416,
	540, 575, 577, 221, 293, 46, 114, 204, 256, 237,
	269, 271, 275, 295, 298, 339, 357, 362, 388, 390,
	472, 512, -745, 606, 535, 74, 75, 196, -639, 437,
	-640, -343, -639, 666, 666, 668, 666, -403, -405, -407,
	2, 29, 149, 663, 2, -540, 2, -541, -545, -267,
	287, -544, 663, -542, 661, -350, 379, -635, 479, -631,
	-632, -328, -349, -370, 4, -602, -604, 665, -408, 663,
	128, 489, 551, 83, 251, 100, 176, 205, -467, 663,
	-319, 29, 378, 567, 668, -667, -419, -404, 424, -519,
	663, 378, 381, 203, 381, -667, 64, 98, -717, 233,
	2, -716, -356, 319, 2, 2, 2, 2, 2, 233,
	-319, 551, 127, 285, 2, 2, 2, 2, 2, 2,
	2, -428, 233, 2, -426, -356, 609, -429, 233, 2,
	-426, -427, 233, 2, -426, -473, 2, 93, -333, 233,
	2, -319, -359, 233, 2, -354, -365, 233, 2, -362,
	-319, -597, 233, 2, -595, 4, -602, 124, 504, -507,
	2, -156, 2, 64, -319, 609, 2, 508, 2, 663,
	-169, 2, 76, 571, 46, 502, -170, 2, -493, 2,
	-494, -315, -316, -317, -552, -318, 272, 423, 433, 634,
	140, 360, 630, -719, 203, 645, 567, -587, -587, -587,
	-437, 665, -235, 57, -332, -731, -730, -731, -585, 29,
	-580, 8, -581, 653, 654, -585, -585, -731, -731, 2,
	2, 2, 2, 2, -492, -493, 2, -545, 233, -350,
	2, -347, -590, 4, -602, -608, -603, -609, -605, 29,
	32, 33, 34, 36, 38, 39, 40, 42, 61, 70,
	71, 77, 81, 83, 93, 100, 110, 118, 119, 121,
	120, 122, 123, 124, 135, 140, 145, 149, 150, 154,
	158, 162, 181, 183, 196, 200, 203, 219, 222, 225,
	241, 255, 263, 265, 287, 291, 299, 307, 308, 360,
	367, 373, 378, 379, 383, 384, 405, 421, 440, 466,
	497, 504, 523, 545, 551, 561, 567, 569, 578, 586,
	587, 597, 599, 607, 621, 622, 623, 624, -610, 82,
	2, -545, 233, 2, -353, 233, -545, -356, 2, -716,
	2, -333, 2, -507, -671, 559, 172, 453, 2, -375,
	233, -350, -352, -356, -354, 2, 486, -599, 2, -594,
	10, -593, 5, 4, -602, -608, -603, 2, 2, -507,
	2, -510, 2, -521, 29, -362, 2, -595, 233, 2,
	29, 29, 609, 424, 265, 567, 668, -425, -367, -368,
	-586, 4, 8, -418, -319, 665, -507, 2, -156, -139,
	2, 196, -507, 233, 2, -156, 233, 2, -507, 233,
	2, -156, 233, 2, -319, 2, -679, 2, -718, -599,
	233, 98, 233, -319, 2, 205, -726, 481, 580, 319,
	2, 2, 576, 2, 105, 551, 127, 2, 2, 2,
	2, 2, 2, 2, 551, -338, 2, -319, 196, -554,
	265, -362, 233, -363, 2, 498, -740, 437, -595, 233,
	2, 457, 609, -354, 233, 2, -354, 251, 267, -333,
	233, 2, 556, 554, 556, 554, 203, 2, 265, 2,
	265, 2, -546, 2, -547, -541, -548, 661, 379, -557,
	2, -556, -593, 604, -127, 663, -127, 663, 502, 663,
	-599, -350, -350, -507, 2, -156, -139, 2, -507, 2,
	-156, 2, -319, 2, -153, -599, -152, 663, 203, 598,
	-319, 2, -507, 2, -156, -139, 2, -507, 2, -156,
	2, -258, 196, 2, 128, 551, -218, 2, 196, 599,
	2, 8, 2, 241, -254, -599, 491, 188, 432, 602,
	98, 2, 508, 2, 509, 79, -474, 630, 79, 203,
	2, 203, 2, -457, 2, 624, 424, 203, 2, 2,
	-665, 2, 378, 220, 203, 2, 203, 2, 203, 2,
	203, 2, 203, 2, -217, 503, 572, 550, 428, 274,
	2, -156, 621, -139, 274, 273, -507, 621, 2, -684,
	196, 487, -507, 2, 570, 283, 170, 203, -457, 2,
	203, 2, 203, 2, 203, 2, 5, 2, 43, 429,
	531, 2, 272, 423, 531, 2, 529, 2, -350, 551,
	609, 498, 128, 205, 29, 2, 486, 177, 2, 2,
	94, 95, 203, 2, 203, 2, 218, 203, 2, 445,
	203, 551, -438, 665, -438, 630, 2, -449, -545, -492,
	567, -412, -414, -218, 508, 2, -272, -447, -274, 196,
	-479, -480, -275, 299, 183, 373, -276, -456, 29, 149,
	-456, -456, 64, 664, 664, -719, 583, 11, 12, 81,
	43, 653, 654, 655, 656, 194, 657, 658, 651, 652,
	650, 643, 644, 648, 278, 279, 102, 647, 645, 92,
	313, 480, 184, 185, 186, 187, 454, 249, 35, 250,
	14, 15, 16, -378, 34, 383, 298, 631, 237, 512,
	646, 17, 18, 19, 269, 271, 362, 54, 241, -327,
	394, -377, 548, 72, -507, -507, -507, -507, -507, -507,
	-507, -507, 390, 663, -443, -502, 661, -267, 663, 663,
	663, 663, -586, -267, -507, -521, 664, -434, 663, -267,
	-521, -516, 663, 478, 661, 663, -524, -507, 5, 5,
	5, 663, 665, -642, 625, 196, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 418, -568, 663, -567, 663, -567, -567, 610,
	-565, 663, 633, 626, 663, -565, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 610,
	557, 668, -639, -488, 663, 663, -439, -550, -507, 655,
	-439, -439, 378, -431, -507, 114, -460, 275, 339, 204,
	295, 472, 256, -504, 667, -504, -534, 633, -267, -542,
	-349, -267, -544, 663, -540, -534, -128, -586, -109, -124,
	-133, -156, -172, -226, -227, 655, -350, 663, 203, 663,
	665, -590, 203, -418, -333, -362, -350, -369, -370, -375,
	-344, -319, 2, 2, 148, -431, -661, 581, 489, 29,
	4, -608, -602, -368, 498, -367, 551, 128, 177, 205,
	-597, -322, 567, 39, -518, -560, -561, -613, 667, -612,
	-563, -573, -569, -572, 408, 412, -592, 58, 605, -575,
	264, 4, -602, -604, 261, 262, 520, 55, 434, 191,
	134, 133, 370, 60, 563, 564, 565, 566, 208, 209,
	62, 606, 535, 74, 75, -661, 581, 489, 29, 498,
	196, -597, 196, 203, -597, 2, -599, 2, -295, 668,
	69, 463, 165, -699, 663, 2, 165, 2, 2, 2,
	-319, -295, 165, 668, -428, 233, -295, 165, -295, 165,
	-376, 233, -375, -295, 165, -295, 668, 165, -295, 668,
	165, 665, 668, 165, -597, 2, -473, -589, -431, 39,
	-493, 2, 135, 4, 5, -743, 668, 297, -381, 312,
	359, 228, 379, 628, 371, 140, -598, 5, 4, -517,
	-529, 135, 305, 264, -580, -582, 9, -583, 653, 654,
	-588, -587, 117, 665, -590, -236, 259, 41, -332, -332,
	-731, -731, 8, 8, -731, -731, -332, -332, -292, 455,
	505, 393, -291, 25, 30, 153, 253, 344, 602, 171,
	-393, 254, 460, -390, 398, 165, 524, 591, -671, -674,
	485, 559, 172, 453, 96, 371, 505, 393, 455, 165,
	-453, -455, 39, 126, 344, 392, 65, 245, 317, 318,
	528, 461, 616, 165, 505, 393, 455, -707, 455, 505,
	393, -694, -709, 344, 66, 468, 534, 239, 527, 619,
	177, 496, 294, 360, 108, 479, 542, 395, 393, -16,
	-308, 25, 153, -310, -303, 505, 30, -674, 106, 455,
	642, 637, 460, 404, 543, 421, -674, -671, 292, -673,
	620, 358, -294, 524, 591, -671, -478, -674, 485, 455,
	-293, 360, 618, 617, -395, -390, 398, 165, 667, 25,
	153, 455, 505, 393, -722, -723, 30, -586, 2, -290,
	241, -289, 25, -285, -284, 25, 153, 505, 594, -165,
	-145, -164, 460, 505, -165, 2, 455, 393, -668, -340,
	-636, 241, 624, 165, -340, -340, -545, 233, -688, 196,
	2, -681, -152, 288, 5, 10, -599, -152, -425, 668,
	668, -590, 655, 487, 486, 165, 165, 165, 165, 274,
	196, 360, -718, 2, 360, 624, -711, 2, -356, -727,
	2, 2, 2, 2, 2, 2, 2, -350, 233, -410,
	378, -657, -658, -729, 551, -245, 624, -599, 360, 46,
	-353, 233, 2, -356, 609, -668, 360, -676, -355, 233,
	-350, 39, 663, 360, 2, -473, 2, 251, -636, 360,
	-546, -372, -350, -541, -372, 505, -343, 39, -504, -350,
	664, 668, -557, -557, -599, -245, 203, 663, -258, 624,
	624, 274, -553, 668, -552, 241, -600, -599, -153, -599,
	458, 203, 274, -599, -657, -333, 2, -350, 2, 551,
	276, -152, 203, 241, -245, -599, -599, -599, -599, -599,
	-589, 29, 509, 2, -217, 503, 572, 95, 509, 2,
	-350, 551, 128, 251, 85, -688, 196, 2, -319, -666,
	196, -662, 473, 489, 581, -661, -666, -350, 128, -350,
	128, -350, 128, -350, -350, 2, 2, 2, 2, 2,
	90, 2, -156, -507, 2, 90, 2, 49, 525, -684,
	196, 2, 570, 2, 570, 2, -319, -319, -319, -319,
	373, 530, 297, 624, -350, -350, -353, -351, -356, -356,
	491, 552, 582, 487, 177, -507, 2, 98, -732, 2,
	203, 196, 2, 551, 251, 551, 251, 128, 203, 79,
	128, 29, 203, 551, 484, 665, 4, -295, 668, -323,
	-272, -447, -589, -448, -447, -273, -272, -275, 196, 433,
	592, 344, 510, 280, -480, -479, 29, -507, -484, 190,
	343, -507, -482, -509, 653, 654, -581, -583, -430, 371,
	-266, -266, -266, -415, -536, -507, 421, 251, -588, -719,
	-562, -560, -560, -348, -590, 563, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, 298, 237, 512, 54, 241, -507, 567, -507,
	-507, -507, -507, 336, 360, 367, 578, 181, 588, 149,
	371, -746, 545, 42, -514, -267, -435, 663, -528, 36,
	523, 29, -521, 663, 2, -502, -507, -503, -379, -377,
	-319, 653, 654, 655, 656, 657, 658, 643, 644, 645,
	14, 15, 16, 648, 652, 650, 651, 194, 102, 647,
	313, 480, 92, 184, 185, 186, 187, 278, 279, 17,
	18, 19, 35, 646, -432, -431, -431, 664, 607, 29,
	149, 655, 2, 664, 668, 39, 664, -507, -432, -520,
	-516, -431, -527, -526, 621, -468, -469, 629, 322, 131,
	231, 320, -470, 494, -584, 8, -590, 655, -643, 189,
	222, 663, 664, 2, 664, 2, 664, -507, 2, 664,
	-507, 2, 664, -507, 2, 664, -507, 2, 664, 2,
	664, 2, -507, -507, -507, -507, -507, -507, -507, -431,
	8, -584, -584, 563, 563, -584, -584, -584, -576, 408,
	409, 410, 411, 300, 301, 302, 303, 412, 413, 414,
	415, 328, 329, 330, 331, 324, 325, 326, 327, 332,
	333, 334, 335, 213, 214, 215, 216, 209, 210, 211,
	212, -576, -462, 2, -578, -431, 4, 629, 322, 131,
	231, 320, 494, 5, -462, 2, -463, 2, -507, -431,
	-464, -508, -509, 653, 654, 646, -378, -465, 2, -507,
	-432, -507, 61, 291, 569, -466, -507, 203, -431, -431,
	2, -431, 2, -510, 2, -640, 39, -489, -319, -431,
	-421, 668, 203, 39, -607, 4, -606, 44, 66, 108,
	137, 144, 177, 239, 244, 258, 268, 294, 395, 429,
	467, 468, 496, 527, 542, 574, 619, 506, -421, -421,
	663, 664, 668, -461, 226, 316, 311, 267, -461, -540,
	-460, 275, -458, 388, -458, -458, -534, -334, 661, 670,
	-590, -534, -531, -530, 39, -343, 385, -534, -534, 665,
	664, -533, -532, 39, -343, 662, -655, 663, 666, 666,
	666, 666, 666, -350, 663, -431, -590, 665, 532, 2,
	664, 269, 269, 269, 269, 269, 378, 479, 664, 567,
	-663, -359, -365, 499, 552, 206, -425, 668, -425, -418,
	98, -717, 624, -597, -126, 380, 664, 668, -420, 38,
	661, 665, -584, 2, 2, -579, 610, 663, 663, -469,
	663, 203, -663, -365, 552, 499, 206, 2, -667, 547,
	-419, -597, 567, -716, -717, -700, 664, -702, -710, -695,
	-704, 241, 387, 257, 607, -591, -560, 4, -602, -319,
	2, -428, -356, -295, 165, -429, -427, -295, 668, 165,
	-333, -354, -359, -362, -365, -319, -595, -597, -295, -355,
	-719, 664, 571, -494, -380, 433, 522, 456, 500, 547,
	9, 9, 668, -590, -237, 488, 344, -332, -332, -332,
	-332, 668, -720, 100, 567, 83, 663, 489, -312, 306,
	567, -498, 233, 83, -614, 100, -336, -615, -319, 77,
	587, 421, 200, 163, -720, 100, 421, -720, 100, 2,
	253, 100, 505, 530, 663, 29, 64, -545, 43, 43,
	29, -672, -673, 292, 203, 630, 551, 251, 489, 567,
	567, -545, -455, -560, 126, 317, 318, 64, -585, -585,
	64, -585, -585, -585, 624, -585, 624, -353, -545, 489,
	567, 567, -725, -709, 463, 505, 567, 489, 567, 144,
	378, 367, 496, 137, 268, 294, -529, -529, -319, 567,
	443, 541, 443, 541, 495, -303, -305, -170, 495, 541,
	306, 567, 567, -170, 29, -218, 464, 135, -744, 645,
	443, 292, -673, 567, 203, 668, 43, 43, 29, -672,
	203, 567, 617, -375, -334, 603, 45, 603, 45, 603,
	567, 45, 489, 567, 668, 45, -287, -286, 505, -289,
	-599, -288, 342, -284, -657, -657, -244, -243, -319, 5,
	-418, 79, 567, 567, -16, 505, -669, -324, 113, 350,
	310, 351, 104, 347, 103, 346, 111, 348, 112, 349,
	611, 363, 612, 364, 68, 345, 321, 352, 526, 353,
	615, 365, -325, -326, 156, 400, 601, 128, -595, -16,
	-16, 505, 393, 455, 165, -689, 241, 29, -678, 241,
	-553, 241, -553, -367, -319, 665, -156, -507, -507, -156,
	-507, -156, 49, 165, 39, 165, 2, 663, 285, 663,
	-384, 360, 203, -418, -554, 668, -350, 39, -244, 382,
	165, -595, -454, -453, 360, -355, 233, 2, 165, -740,
	-408, 360, 159, 663, 431, 2, 165, -335, 233, -320,
	-319, -473, -297, 555, 165, -451, 599, -485, -156, 663,
	135, 39, -485, -440, -441, -551, -442, -336, 663, -343,
	-504, -127, -556, 664, 664, 664, -258, -409, -337, -336,
	127, 435, 435, -251, 624, -152, -153, 664, 668, -553,
	241, 533, -153, -599, -245, -245, -553, -553, -350, 196,
	-599, -152, -245, -245, -245, -245, -245, 2, 2, 2,
	2, -457, -350, -333, -375, -350, -361, 241, 29, 665,
	-597, -597, -365, -366, -364, -319, -359, -457, -333, -457,
	-333, -457, -333, -457, -457, -156, -507, 530, 2, 502,
	196, 196, 665, -457, 665, 8, -411, 466, 5, 2,
	99, -599, 2, 431, 128, 551, 398, 251, -350, -375,
	-350, -375, -333, 128, -333, 129, 128, -350, 4, -545,
	-448, -273, 379, 280, 510, -482, -483, -509, 478, 479,
	-483, 478, 479, 8, 9, 8, 9, -277, 514, 366,
	-427, 668, -282, 40, 145, 280, -350, -588, 630, 161,
	-507, -507, 567, -746, 545, -514, 161, -507, 336, 367,
	578, 181, 588, 149, 371, 203, 663, -508, -508, 664,
	-433, -507, -507, 662, 672, 664, 665, 664, -414, 668,
	-412, -507, -431, -431, 664, 665, -431, -418, 662, 662,
	668, 664, -525, -526, 154, -507, 567, 567, 567, 567,
	663, 664, 665, -648, 389, 663, 663, -507, 664, 664,
	664, 664, 39, 668, 668, 668, 664, 668, 668, 668,
	664, 664, 664, 668, 664, 630, 630, 664, 664, 664,
	664, 668, 664, 668, 664, 203, 664, 664, -471, 405,
	664, 11, 12, 653, 654, 655, 656, 194, 657, 658,
	651, 652, 650, 643, 644, 645, 92, 313, 480, 14,
	15, 16, -378, 269, 241, -508, -508, -508, -508, 664,
	-512, -513, 203, 196, 39, -466, -466, -466, 664, 203,
	-431, 664, 664, 663, -641, 315, 360, 664, 668, 664,
	-501, -500, 622, -550, -422, 2, -540, -345, -590, -501,
	-501, -431, -507, 275, 275, -459, 599, 378, -461, -540,
	-531, -586, -506, -505, 198, 40, 145, 354, 355, 356,
	236, 199, -531, -343, -488, -531, -531, -590, -534, -343,
	-486, 663, -534, -530, 664, -656, -586, 664, -423, -543,
	-635, -414, 665, -590, -255, -636, -219, 5, 367, -219,
	-219, -219, -219, -350, -597, 567, 567, 241, 241, 241,
	-425, -418, 26, -687, 624, 406, -560, 661, 662, 8,
	-590, 663, -584, -584, -584, -597, 203, 203, 241, 241,
	241, 378, -667, 203, -595, -295, 664, 668, -695, -704,
	-710, -704, 387, 2, -295, -428, -295, -295, -375, -376,
	-295, -295, -295, -452, 624, -587, -493, 585, 88, 433,
	563, -587, 125, 488, -291, 455, 505, -336, -336, -350,
	-262, -261, -259, -319, 5, -360, -319, 217, 444, -595,
	360, -498, 233, -296, 360, 233, -344, -560, 663, -475,
	626, 280, 280, 599, -336, -344, 280, 233, -336, 233,
	-344, 2, -344, -670, 433, 372, -507, -260, -259, 64,
	-391, 304, 431, 361, -292, 455, 505, 393, -156, -156,
	-156, 663, -719, 599, 148, -350, -375, -350, -360, -595,
	-355, 505, 393, 455, 357, -369, -585, -585, -585, -453,
	505, 393, 455, -360, -595, -353, -319, -360, -595, 378,
	367, 378, 137, 268, -595, -302, 233, -319, 443, -302,
	233, 443, 443, 443, 443, 217, 444, 489, -333, 443,
	630, 48, -744, 567, 203, -507, -507, -293, -156, -156,
	-156, 663, -334, -294, -478, 455, 5, 233, -336, 5,
	-336, 233, 5, -319, -336, -360, -595, -723, 25, 153,
	-336, 668, 284, 265, 624, -680, 204, 486, 438, -290,
	645, -245, 668, 645, 645, -360, -595, -324, 400, -681,
	367, 5, 10, 595, -333, -668, -340, 489, 567, 567,
	-545, -685, -686, 219, 471, 489, 474, -597, -152, -248,
	624, -152, -242, 246, 655, -660, -599, -599, -319, -697,
	-698, -701, -702, -319, -382, -385, -383, -336, -499, -498,
	-618, -619, -614, 298, 251, 587, 267, 182, 100, -263,
	-264, 626, 624, 165, -373, -350, 661, -245, -658, -555,
	182, 497, 663, -362, -363, 165, -408, 360, -595, 609,
	39, 165, 663, 2, 2, -354, 378, 360, -335, 233,
	-298, 155, -744, -333, -501, -422, -450, -491, 466, 378,
	-409, 604, -343, -450, -424, 668, 203, 645, 665, -409,
	-549, 655, -127, -127, -245, 663, -599, 664, 668, 665,
	663, 645, 645, -253, 382, -252, 157, 282, 266, 516,
	517, 518, 519, 147, 515, 132, 341, 244, 247, 557,
	490, 608, -553, -599, -251, -153, 203, -553, 241, 203,
	-82, 624, -245, 551, 241, -245, 667, 489, 474, -319,
	665, -457, -457, -457, 502, 502, -319, -319, 196, -418,
	2, -346, -590, -333, -350, -347, -375, 196, 196, -333,
	-333, 592, -483, 379, 309, -536, -283, 632, -350, 667,
	-507, -507, 161, 161, -507, -508, -508, -507, 161, 203,
	663, -507, -518, 34, 34, 664, 668, -503, -507, -377,
	664, 607, -414, -414, 664, 655, -590, 667, 664, -516,
	158, -507, 561, 322, 231, 320, -470, 320, -470, -470,
	-584, 5, -590, 655, -649, -339, 663, -319, 622, -413,
	384, 664, -562, -560, -507, -507, -507, -507, -507, -584,
	-565, -565, -580, -580, -507, -512, -507, -562, -560, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, 149,
	360, 371, -508, -513, -512, -507, -507, -560, 664, 664,
	664, -431, -126, 663, 315, -319, -444, 222, -507, -553,
	668, -444, -444, 664, -540, -540, 663, -507, 275, 662,
	668, 671, 645, 645, -488, 665, -530, -486, -487, -490,
	-319, -531, 662, 664, 668, 664, 668, -533, 664, -590,
	-501, -257, -256, 146, 57, 115, 143, 367, 375, 202,
	227, 430, 161, 197, 155, 269, -687, -597, -597, 489,
	489, 489, 381, 219, 5, 8, 661, 662, 665, -584,
	664, 664, 664, -597, -597, 489, 489, 489, -661, 581,
	489, 29, 203, -597, -702, -704, -704, -295, -295, 127,
	344, -507, -234, 624, 626, 567, 567, 664, 668, 645,
	64, 241, 165, 360, 601, 360, -615, 163, -620, -507,
	663, 251, 663, 663, 2, -279, -280, -281, 153, 505,
	25, -721, 2, 599, 165, -295, 165, -295, 628, 664,
	668, -391, 663, 663, 567, 489, -312, 567, 624, -431,
	-507, -246, 135, -589, -674, 667, -674, 667, 489, 567,
	567, 489, 567, 567, 176, 258, 367, 360, -319, 165,
	-319, 233, -744, -319, -674, -674, 241, 624, 180, 180,
	630, -302, -507, -507, 196, 567, 624, -431, 567, -564,
	52, 27, 360, -354, -295, 165, 567, 567, 581, 505,
	-286, -599, -152, -249, 157, 470, 147, 282, 247, 244,
	49, 381, -681, -152, -243, -599, -599, -681, -599, 367,
	-16, -360, -595, -355, 505, 393, 455, -667, -667, 219,
	-365, -689, -553, -250, 382, -249, -553, -248, 203, 265,
	624, 664, 668, 135, 645, 2, 664, 664, 668, 668,
	-621, -296, -350, -335, 251, 251, -342, -320, 39, 375,
	375, 663, -350, -105, 624, -552, -586, -341, -319, -439,
	-244, 46, -353, 39, 165, -668, -355, -156, -355, -558,
	-559, 5, 39, -350, 165, 378, 360, -299, 290, -744,
	-594, -636, -414, -450, -439, 361, 97, 664, -501, -441,
	-422, -507, 2, 664, -599, -245, -258, -337, 2, -600,
	-599, -599, 668, 663, 645, 645, 645, 645, 645, 645,
	645, 645, -251, -553, -152, -251, -153, -156, 382, -350,
	-152, 655, -360, -361, 655, -457, 5, -397, -396, 398,
	371, -397, 478, 478, 379, 190, 286, -282, -334, -507,
	-507, 161, 34, 34, -507, -507, -518, 664, -507, -507,
	-431, 662, 5, -507, 664, 664, 8, -507, 664, 665,
	-650, -319, -507, 664, 64, 664, 664, 668, 668, 664,
	664, 664, 664, 664, 664, 664, -513, 203, 149, 371,
	663, 664, 664, -126, -515, 225, 64, -540, -515, -515,
	-459, -418, -540, -505, -334, 661, -334, 661, -590, 664,
	668, -560, -586, -543, 665, -256, 645, -599, -599, 2,
	2, 5, 5, 430, 360, 367, 5, -219, -687, -687,
	624, -365, -365, -365, 381, 662, 2, 661, -590, 664,
	-365, -365, -365, 203, -663, -365, 552, 206, -597, 127,
	196, 230, 230, -336, -336, -261, -587, 551, 478, -302,
	421, -498, 165, 165, -622, 100, -624, 81, 182, 110,
	360, 367, 587, 421, 77, 135, 378, 440, -734, -735,
	-736, 39, 635, 636, 664, -416, -537, -635, 663, -319,
	-416, -418, 360, 538, 135, 378, 360, 135, 378, 617,
	127, 2, 581, 84, -336, -344, -259, -418, -418, -350,
	-360, -595, 173, 664, 668, 645, 2, 655, 655, -360,
	-595, -355, -360, -595, -353, -319, 258, 165, 604, -302,
	165, -302, 604, -302, 396, 180, 567, -156, -507, 173,
	664, -334, 5, 5, 165, -331, 81, -336, 5, -336,
	-354, 127, 645, 645, 645, 645, 645, 645, 31, -681,
	-243, 624, 489, 567, 567, 378, 378, 381, -685, -686,
	-248, 668, 663, -248, -600, -152, 2, 468, -701, -507,
	-507, -398, 253, -336, -619, -616, -617, 421, -499, -623,
	-625, 182, 421, -386, 663, -335, -320, 663, -156, 2,
	-262, 663, -384, 382, 662, 203, 664, -595, -454, -156,
	-355, -408, -406, 624, -408, 664, 668, 159, -476, 599,
	-334, -350, 165, -300, 289, -744, -594, -297, -481, -479,
	150, 663, 378, -156, -414, 645, 664, 127, 664, -252,
	-253, -599, -152, -599, -599, -599, -507, -152, -599, -251,
	-691, 39, -553, -83, -84, 251, 100, 403, -245, -245,
	-347, 551, 251, 663, 663, -282, -507, -507, -507, 664,
	-414, -590, 655, -644, 398, 664, -536, -507, -507, -508,
	203, 663, -518, 664, -645, 623, -507, -445, -446, -507,
	476, 116, 223, -645, -645, 664, -586, -586, -490, -599,
	2, 2, 367, 2, 2, 2, 567, 567, 567, 661,
	2, 203, 203, 203, -597, 203, 203, 241, 241, -156,
	241, 39, 443, -498, -344, -344, -348, -341, 182, 233,
	367, 617, -475, 280, 663, -508, 592, -350, 663, 2,
	232, 232, 31, 64, -737, 140, 255, 664, 668, -538,
	-330, -319, -507, -538, 664, 664, 367, 592, 367, 617,
	-507, 592, -560, 663, -295, -295, 664, 664, -507, 567,
	-589, 107, -587, 2, -674, -302, -418, -418, -674, -333,
	-507, 196, -507, 567, 5, -295, -348, -295, -295, -331,
	581, -599, -507, 578, 181, -152, -152, -507, 377, -360,
	-595, -355, -690, 552, 499, 582, 491, 206, 477, -690,
	196, -249, -250, -248, -693, 506, -392, -393, 2, -621,
	280, -341, 280, 243, 164, -416, 663, 663, -418, -733,
	624, 664, -382, -263, -106, -107, 568, -552, -664, -372,
	-408, 39, 344, 127, 39, 5, 663, 663, -319, 378,
	663, -334, -314, 98, -744, -594, -298, -450, 361, -418,
	100, -481, -514, -245, 663, -245, 664, 557, -251, 668,
	29, 663, 29, 663, -350, -375, -431, -431, 664, -414,
	64, 668, 664, 664, -508, -518, 664, -646, -647, -339,
	668, 663, 663, 507, 662, 662, 2, -597, -597, -597,
	2, -597, -597, -597, -597, -597, 489, 489, -302, 421,
	-319, -615, -624, -341, 360, -264, 599, 624, -507, -508,
	-321, 663, -507, 663, 663, 39, 135, 255, 141, 238,
	-497, -738, 109, 539, 242, -537, -282, 664, -496, 599,
	440, -508, -331, -416, 663, 663, 663, 645, 203, -156,
	663, -564, -295, -354, 645, 567, 2, 203, -667, 664,
	-680, -703, -704, -263, 663, -264, -387, 86, 101, 136,
	232, 207, 252, 530, 536, 29, -387, 664, -416, -416,
	664, -388, 378, 127, 344, 664, 39, -107, 9, -501,
	39, -156, 127, -156, -558, -416, -350, -416, 378, -304,
	-303, 299, -594, -299, 664, -344, -450, -600, -586, 4,
	-84, -418, -418, 664, 664, -651, 431, 479, 224, -431,
	-415, 664, 668, 39, -446, 2, 2, 2, -687, -687,
	-687, -365, -365, 443, -296, 165, 226, 664, -626, 314,
	-319, 664, -454, -454, 39, 141, 238, -394, -390, 663,
	-283, -538, -264, 226, -350, -675, 599, 664, -400, -399,
	-396, -402, -401, -396, -431, -587, 107, 396, -431, -331,
	-152, -597, -597, 378, -682, 204, -705, -706, -708, 39,
	285, 574, 623, -709, -388, -417, -539, -336, -496, 664,
	664, 87, 127, -398, -156, -156, 2, -406, 664, 664,
	-476, 664, -350, -301, -601, 443, 445, -744, -300, -501,
	150, 664, 664, 664, 664, -652, -653, 54, 584, 117,
	-507, -652, -652, -647, -649, 203, 203, 182, -495, 633,
	-627, -630, -629, 640, 513, 204, 397, 664, 538, 616,
	664, 664, -737, -418, -495, -408, -507, -496, 664, 668,
	604, 664, 668, 604, 664, 203, 664, -295, -687, -295,
	-690, -247, 624, 49, -715, -712, 53, 467, -708, -696,
	5, -594, -313, -312, 664, 668, -497, -496, -394, 420,
	142, 153, -392, -733, -496, 663, -497, 663, -311, -310,
	-744, -580, -314, 150, 361, 592, -245, -654, 163, -653,
	417, 195, 478, 417, 195, -654, -654, -597, -597, -341,
	-264, 59, -629, 640, -630, 640, 592, 142, -501, 664,
	-626, -264, -399, 241, -401, 203, 396, 203, 486, -681,
	31, 44, -507, -264, -539, -394, -497, -264, 479, 479,
	2, -263, -388, -497, -416, -394, -416, -307, -308, -309,
	-418, -304, 361, 592, 505, 117, 222, 562, 344, 34,
	645, -628, 344, 463, 69, 505, -628, -627, 663, 663,
	-597, 382, -714, -264, -394, -501, 2, -388, -394, 664,
	-264, 664, -596, 393, -301, 505, -440, 478, 386, -653,
	-507, 24, 367, 135, -737, -431, -431, -295, -244, 663,
	-713, 158, -3, -712, -501, -264, -477, 360, 618, 617,
	-313, -264, -496, -501, -497, -306, -305, 495, -744, -311,
	-440, -501, 664, 664, -244, 669, -477, -501, 617, -501,
	-497, -477, -394, -595, -307, -501, -389, -390, 567, 664,
	-477, -477, -394, -264, -596, 663, -264, -501, -306, -431,
	-501, -477, 664, -477, -389,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1763,
	1765, 735, 736, 738, 739, 740, 742, 743, 745, 747,
	749, 750, 751, 753, 754, 756, 757, 758, 759, 760,
	762, 764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 858, 860, 0,
	1745, 1747, 1749, 1751, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 427, 429,
	431, 433, 0, 465, 467, 468, 470, 472, 473, 475,
	477, -2, 0, 661, 662, 664, 666, 668, -2, 0,
	1320, 1322, 1324, 0, 846, 848, 0, 1327, 1329, 1331,
	0, 0, 870, 871, 0, 1866, -2, 862, 864, 866,
	868, 947, 949, 951, 953, 955, 957, 959, 961, 963,
	965, 967, 968, 970, 972, 974, 976, 978, 980, 981,
	983, 985, 987, 988, 990, 991, 993, 995, 997, 999,
	1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019,
	-2, 1022, 1023, 1024, 1026, -2, 0, -2, -2, 1759,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 70,
	72, 74, 76, 78, 606, 608, 610, 612, 614, 617,
	619, 621, 623, 1924, 670, 672, 674, 676, 678, 680,
	682, 684, 0, 0, -2, 1938, 0, 0, 0, 1118,
	80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	149, 150, 151, 152, 153, 154, 155, 156, 93, 94,
	95, 97, 98, 99, 100, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 146, 147, 91, 120, 121, 122, 123, 124, 0,
	0, 1897, 1899, 1901, 1903, -2, 0, 0, 8, 12,
	14, 16, 18, 20, 22, 24, 26, 28, 30, 32,
	36, 38, 40, 42, 1764, 1766, 737, 741, 744, 746,
	748, 752, 755, 761, 763, 765, 720, 721, 724, 2654,
	2672, 2673, 2674, 2677, 2678, 2679, 2680, 2681, 2682, 3220,
	3301, 3302, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782,
	2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812,
	2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822,
	2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842,
	2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852,
	2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862,
	2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872,
	2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882,
	2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892,
	2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902,
	2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912,
	2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922,
	2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932,
	2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942,
	2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952,
	2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962,
	2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972,
	2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982,
	2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992,
	2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002,
	3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012,
	3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022,
	3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032,
	3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042,
	3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052,
	3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062,
	3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072,
	3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082,
	3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092,
	3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102,
	3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112,
	3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122,
	3123, 3124, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153,
	3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163,
	3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173,
	3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183,
	3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193,
	3194, 3195, 3196, 3197, 3198, 3199, 722, 723, 1514, 0,
	804, 802, 2637, 805, 2967, 807, 809, 655, 656, 657,
	658, 659, 660, 0, 839, 3072, 820, 1936, 840, 842,
	843, 844, 845, 799, 797, 0, 844, 839, 2710, 3072,
	837, 1743, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 586, 1577, 1578, 1579, 1728,
	1729, 3023, 1774, 0, 287, 859, -2, -2, 3184, -2,
	901, 902, -2, -2, 916, 920, 911, 3189, 0, 3026,
	3008, -2, 923, 1746, 1748, 1750, 1027, 1028, 1029, 2658,
	1033, 1031, 1043, 1044, 1047, 0, 1064, -2, 0, 2706,
	2990, -2, -2, 1065, 1066, -2, -2, -2, -2, 1045,
	1046, 0, 0, 0, 0, 0, 2074, 2075, 2641, 1776,
	1768, 1771, 1769, 1770, 47, 49, 51, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	297, -2, -2, -2, -2, 0, 0, 3078, 2769, 2605,
	2674, 2608, 2603, 428, 430, 432, 434, 435, 0, 0,
	0, 0, 0, 0, 0, 466, 469, 471, 474, 476,
	-2, 0, 478, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1394, 1386, 1387, 1644, 0, 0, 0,
	-2, 663, 665, 667, 725, 726, 0, 1925, 1925, 733,
	734, -2, 0, 0, 0, 0, 389, 380, 1321, 1323,
	1325, 1326, 0, 0, 0, 0, 0, 847, 849, 0,
	0, 3072, 350, 1328, 1330, 1332, 1333, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 863, 865, 867, 869,
	948, 950, 952, 954, 956, 958, 960, 962, 964, 966,
	969, 971, 973, 975, 977, 979, 982, 984, 986, 989,
	992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010,
	1012, 1014, 1016, 1018, 1020, 1021, 1072, 0, 0, 0,
	0, -2, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 1188, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 0, 1289, 0, 0, 1075,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 0, 1161, 1186,
	1187, 1197, 1025, 0, 1557, 1926, 1776, 1753, 1754, 1755,
	1760, 1762, 1756, 1757, 1758, 53, 55, 57, 59, 61,
	63, 65, 67, 69, 71, 73, 75, 77, 79, 607,
	609, 611, 613, 615, 618, 620, 622, 624, -2, 1895,
	1896, 671, 673, 675, 677, 679, 681, 683, 685, 850,
	0, 853, 0, 1077, 852, -2, 0, 1930, 1930, 1930,
	0, 0, 1896, 1894, 0, 0, 0, 856, 857, 927,
	928, 2217, 0, 0, 0, 0, 0, 0, 0, 0,
	2477, 2305, 0, 929, -2, 2338, 2340, 3158, 2939, 3184,
	2476, 2342, 2343, 2344, 2345, 2346, 0, 2348, 2349, 2350,
	2351, 2352, 2353, 0, 2355, 0, 2360, 2361, 2362, 0,
	3165, 2580, 2668, -2, 0, 0, 3172, 2664, 0, 2443,
	2378, -2, -2, 2691, 2670, 2149, 2150, 2151, 2152, 2153,
	-2, -2, 3203, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 0, 3146, 3166, 3167, 3173, 3175,
	3168, 3155, 2403, 2785, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 2176, 2185, -2,
	-2, -2, -2, -2, -2, -2, 3159, 3160, 3178, 3181,
	3188, 3193, 3194, 3164, 3174, 3202, 3204, 3205, 3206, 3207,
	3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217,
	3218, 3219, 2177, -2, -2, -2, -2, 0, 1913, 2983,
	1916, 2022, 1914, 1898, 1900, 0, 1902, 0, 0, 0,
	1907, 1933, 1931, 0, 1982, 1911, 1912, 2005, 2005, 2037,
	0, 2010, 0, 2037, 1925, 2068, 0, 2016, 3013, 2379,
	2380, 0, 2674, 2669, -2, -2, 3200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 800, 0,
	806, 808, 0, 0, 0, 0, 839, 838, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 3166,
	547, 548, 551, 0, 589, 590, 591, 592, 593, 3166,
	0, 0, 0, 0, 599, 600, 601, 602, 603, 604,
	605, 257, 3166, 690, 719, 715, 0, 257, 3166, 693,
	718, 257, 3166, 696, 717, 0, 699, 1642, 257, 3166,
	702, 2633, 257, 3166, 705, 707, 257, 3166, 711, 2648,
	2646, 712, 0, 714, 277, 273, 274, 275, 276, 1739,
	1740, 1741, 1742, 0, 1773, 1643, 861, 0, 887, 0,
	899, 900, 3154, -2, 0, 3037, 904, 905, -2, 907,
	1777, 1781, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 894, 895, 914, 915, 921,
	924, 0, 1036, 1032, 1048, 0, 1063, 0, 1064, 1064,
	2622, 2613, 2614, 0, 0, 1064, 1064, 0, 0, 1067,
	1068, 1069, 1070, 1071, 1767, -2, 90, 0, 3166, 2068,
	92, 0, 2627, 2700, 2701, 2702, 2703, 2704, 3201, 3221,
	3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231,
	3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241,
	3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251,
	3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261,
	3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271,
	3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281,
	3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291,
	3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3203,
	96, 0, 3166, 101, 0, 3166, 0, -2, 125, 566,
	126, 0, 148, 0, 176, -2, -2, -2, 157, 0,
	3166, 0, 2602, -2, 0, 269, -2, 0, 790, 392,
	393, 2687, 2688, 2696, 2697, 2698, 2699, 381, 382, 0,
	781, 0, 890, 2477, 0, 0, 1358, -2, 0, 1570,
	1572, 1572, 0, -2, 0, 0, 0, 1309, 2599, 2604,
	1310, 1311, 2623, 1312, 2609, 0, 436, 437, 438, 439,
	440, 0, 441, 3166, 443, 444, 0, 446, 447, 3166,
	449, 450, 0, 452, 0, 454, 0, 314, 331, 329,
	3166, 0, 3166, 480, 483, 0, 587, 0, 584, 0,
	568, 569, 0, 571, 0, 0, 0, 576, 577, 579,
	580, 581, 582, 583, 0, 628, 626, 2638, 646, 406,
	0, -2, 3166, 0, 1355, 0, 0, 1622, -2, 0,
	1563, -2, 0, 1629, 3166, 1625, 0, -2, 0, 1923,
	3166, 1794, 1390, 1391, 1392, 1393, 2082, 652, 0, 1830,
	0, 1832, 0, 1852, 2076, 2005, 0, 0, 2081, 0,
	-2, 778, 2657, -2, 728, 0, 729, 0, -2, 0,
	406, 0, 0, 1336, 1338, 1339, 1341, 1342, 1345, 1346,
	1347, 1348, 0, 1350, 2054, 351, 353, 0, 0, 0,
	0, 1335, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 0, 646, 872, 0, 0, 1073, 1074, 0, 0,
	1092, 1093, 1094, 0, 0, 406, -2, -2, -2, -2,
	2750, 1104, 0, 1112, 1115, -2, 0, 0, 0, 0,
	1122, 0, 1127, 1128, 1129, 0, -2, 0, 1136, 1138,
	1319, 1141, 0, 1319, 0, 1143, 0, 1147, 0, 1150,
	0, 1152, 0, 1154, -2, -2, -2, 1162, 1163, -2,
	1168, -2, 0, 1172, -2, 0, 1175, 0, 1178, -2,
	0, 1188, 1184, 1185, 0, 0, 0, 0, 1205, 1206,
	0, 1210, 0, 1219, 0, 1222, 1223, 1224, 0, 0,
	1229, 1230, 0, 1232, 1233, 1234, 1236, 1237, 1238, 0,
	3111, 3034, 2769, 2817, 0, 1247, -2, 2806, 1257, 1259,
	0, -2, 0, 1275, 0, 1279, 0, 0, 1288, 0,
	0, 0, 1076, 0, 1085, 1086, 1087, 257, 2072, 1752,
	0, -2, 0, 851, 0, 855, 1955, 1881, 1878, 0,
	1952, 1953, 1882, 0, 0, 0, 1889, 0, 1928, 1929,
	0, 0, 0, 1868, 1869, 0, 0, 0, 0, 0,
	0, 2482, 2483, 2484, 2485, 2498, 2486, 2487, 2497, 2495,
	2496, 2488, 2489, 2494, 2508, 2509, 2499, 2500, 2490, 2503,
	2501, 2502, 2504, 2505, 2506, 2507, 0, 0, 2513, 0,
	2491, 2492, 2493, 2521, 0, 0, 2522, 0, 2524, 0,
	2514, 2510, 2511, 2512, 0, 2284, 2286, 2588, 0, 0,
	0, 2520, 2515, 2516, 2222, 2223, 2224, 2225, 2226, 2259,
	2263, 2264, 0, 0, 2339, 2585, 2584, 2341, 0, 0,
	2536, 0, 2354, -2, 0, 2477, 2531, 0, 0, 2363,
	2364, 2365, 0, 0, 2536, 0, 0, 2579, 2375, 2376,
	2214, 0, 0, 2445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2163, 2162, 0, 2164, 0, 2165, 2166, 2173,
	2186, 0, 0, 0, 0, 2190, 0, 0, 0, 0,
	0, 0, 0, 2560, -2, 0, 0, 0, 0, 2178,
	0, 0, 1915, 0, 0, 0, 1986, 2589, 2593, 2594,
	1986, 1986, 0, 0, 2537, 2065, 2065, 0, 0, 2060,
	2060, 2060, 2058, 2037, 0, 2037, 2047, 0, 2037, 2037,
	0, -2, 2010, 0, 0, 2051, 0, 2031, 766, 768,
	770, 772, 773, 774, 776, 2069, 2070, 0, 0, 0,
	0, 2675, 0, 0, 0, 0, 0, 0, 2660, 0,
	0, 2632, 461, 462, 0, 0, 0, 3091, 3026, 0,
	-2, -2, -2, -2, 3034, 0, 0, 2769, 2806, 2817,
	811, 841, 0, 1925, 0, 2539, 2097, 2101, 0, 2103,
	2104, 2105, 2106, 2107, 0, 0, 2098, -2, 2174, 2176,
	2197, 2692, 2693, 2694, 2157, 2158, 2159, 2160, 2161, 2169,
	2156, 2156, 2156, 2167, 2196, 2188, 2196, 2192, 2142, 2143,
	2144, 2179, 2180, 2181, 2182, 0, 3091, 3026, 0, -2,
	0, 823, 0, 0, 0, 1863, 341, 342, 545, 0,
	255, 256, 0, 550, 0, 588, 0, 595, 596, 597,
	0, 686, 0, 0, 257, 3166, 691, 0, 694, 0,
	257, 3166, 2597, 700, 0, 703, 0, 0, 709, 0,
	0, 0, 0, 0, 257, 1865, 0, 0, 0, 0,
	-2, 909, 917, 918, 919, 0, 1779, 0, 1786, 938,
	939, 940, 1788, 1789, 0, 1791, 912, 941, 942, 943,
	944, 945, 946, 0, 2611, 2612, 2617, 2618, 0, 0,
	910, 931, 913, 0, 925, 1039, 1034, 1035, 1049, 1050,
	0, 0, 2615, 2616, 0, 0, 1055, 1056, 158, 1725,
	0, 0, 210, 0, 1725, 1725, 0, 0, 0, 0,
	238, 0, 0, 1424, 0, 0, 0, 0, 176, 195,
	206, 170, 171, 172, 0, 0, 0, 0, 0, 0,
	102, 1536, 0, 1539, 0, 0, 0, 0, 0, 0,
	0, 1552, 1555, 0, 0, 0, 0, 560, 0, 534,
	0, 0, 557, 565, 0, 0, 521, 522, 523, 524,
	0, 0, 529, 0, 0, 0, 0, 535, 0, 128,
	129, 0, 0, 134, 135, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 1827, 0, 185, 176, 0, 0,
	175, 177, 160, 0, 0, 176, 180, 196, 208, 0,
	244, 0, 183, 184, 246, 1421, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 279, 0, 0, 316, 788,
	0, 791, 0, 780, 782, 646, 646, 0, 0, 888,
	892, 893, 0, 0, 889, 891, 0, 0, 1564, 0,
	0, 0, 1922, 0, 0, 0, 0, 3166, 1723, 0,
	1706, 0, 2054, 2867, -2, -2, 351, 2054, 1308, 0,
	0, 2675, 2607, 0, 0, 0, 0, 0, 0, 453,
	0, 0, 0, 340, 0, 0, 0, 485, 490, 0,
	578, 567, 570, 572, 573, 574, 616, 1483, 3166, 0,
	0, 650, 641, 0, 645, 0, 0, 649, 0, 0,
	1535, 3166, 1533, 2642, 0, 1561, 0, 1621, 1514, 3166,
	2640, 0, 0, 0, 1630, 2684, 1639, 1643, 1815, 0,
	654, 0, 1833, 1835, 0, 0, 2077, 0, 2079, 2005,
	1925, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 1349, 360, 0, 2053, 0, 0, 394, 2054, 351,
	2996, 0, 1334, 406, 406, 2054, 874, 2054, 876, 0,
	0, 1095, 0, 0, 1098, 406, 406, 406, 406, 406,
	1110, 1111, 1113, 1114, -2, -2, -2, -2, 1116, 1117,
	1216, 0, 0, 0, 1215, 1721, 0, 1132, 1135, 1139,
	0, 1292, 3008, 3026, 3091, 1317, 1140, 1216, 2769, 1216,
	2769, 1216, 2769, 1216, 1216, 1156, 1200, 1212, 1167, 1174,
	0, 1169, 1173, 1176, 1179, 0, 1181, 1189, 0, -2,
	0, 1192, 0, 1194, 0, 1196, 1216, 1208, 1217, 1220,
	0, 1228, 1231, 0, 1239, 1240, 1241, 1242, 2655, 1243,
	1244, 1245, 1246, -2, 0, 1250, 1251, 0, 0, 1266,
	1271, 1272, 1268, 0, 0, 0, 0, 0, 0, 1282,
	1283, 0, 0, 0, 1291, 0, 1088, 1556, 0, 1761,
	1955, 1881, 854, 1872, 1954, 1873, 1880, 1883, 0, 0,
	1885, 0, 1887, 0, 1950, 1951, 1958, 1959, 0, 1969,
	1970, 1962, 0, -2, 0, 0, 1965, 1966, 1891, 0,
	1908, 1909, 1910, 1939, 1942, 1658, 0, 3301, 897, 0,
	2218, 2092, 2219, 2220, 2626, 0, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, -2, -2, -2, -2,
	-2, -2, -2, -2, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, -2, -2, -2, 2260, 2261,
	2262, -2, 2523, 2525, 0, 2588, 0, -2, 0, -2,
	-2, -2, -2, 2281, 0, 2283, 2288, 2290, 2292, 0,
	0, 0, 0, 2587, 2302, 2571, 2572, 0, 0, 2479,
	2480, 2481, 2287, 0, 2306, 2586, 2583, 0, 0, 2517,
	0, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 0, 2535, 1938, 2367, 0, 0,
	0, 0, 2374, 2359, 2533, 0, 2532, 0, 0, 0,
	2543, 0, 2578, 2574, 0, 2624, 2213, 2200, 2201, 2202,
	2203, 2204, 2205, 2215, 0, 2621, 2661, 2667, 2453, 0,
	0, 0, 2404, 2405, 2406, 2407, 2408, 0, 2410, 2411,
	0, 2413, 2414, 0, 2416, 2417, 0, 2419, 2420, 2421,
	2422, 2423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 0, 0, 2425, 0, 2546, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2427, 0, 2429, 2537, 2557,
	0, 0, 2307, 0, 0, 0, 0, 0, 2432, 2537,
	2565, 0, 0, 0, 0, 0, 2537, 0, 2570, 0,
	2439, 0, 2441, 1119, 1120, 1917, 0, 0, 2023, 0,
	2087, 0, 0, 0, 2592, 2595, 2596, 3125, 3126, 3127,
	3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137,
	3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 2087, 2087,
	0, 1981, 0, 0, 2061, 2062, 2063, 2064, 0, 0,
	2065, 0, 2055, 2059, 2056, 2057, 2047, 2002, 0, 0,
	2628, 2047, 2008, 2046, 0, 2022, 2036, 2047, 2047, 0,
	-2, 2012, 2050, 0, 2025, 2037, 0, 0, 767, 769,
	771, 775, 777, 0, 0, 1938, -2, 0, -2, 408,
	1513, 0, 0, 0, 0, 0, 0, 801, 803, 0,
	0, 706, 0, 0, 0, 0, 1298, 0, 1300, 1301,
	0, 1303, 0, 1709, 795, 0, 798, 0, 2088, 2091,
	0, 0, 2102, 2108, 2109, 0, -2, 0, 0, 2198,
	0, 0, 0, 0, 0, 0, 0, 836, 0, 3072,
	0, 834, 0, 549, 257, 0, 553, 554, 0, 0,
	502, 503, 504, 505, 507, 2695, 508, -2, -2, 0,
	598, 257, 716, 688, 0, 257, 257, 697, 0, 0,
	257, 708, 257, 2649, 257, 2647, 278, 713, 1864, 290,
	0, 896, 0, 1778, 1787, 0, 935, 0, 937, 0,
	2619, 2620, 0, 926, 0, 1037, 0, 1051, 1052, 1053,
	1054, 0, 0, 0, 0, 1724, 0, 0, 1669, 0,
	0, 214, 3166, 0, 259, 0, 0, 1476, 2634, 0,
	1466, 0, 0, 2793, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 173, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 1538, 1540, 1547, 1549, 0, 1543, 1544,
	0, 1546, 1548, 1550, 0, 1553, 0, 0, 0, 0,
	0, 0, 556, 558, 559, 534, 0, 0, 0, 0,
	0, 0, 0, 527, 528, 530, 531, 532, 533, 0,
	0, 0, 0, 0, 0, 136, 140, 1573, 3032, 0,
	0, 0, 0, 1574, 1575, 1576, 1803, 1804, 0, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 182, 0, 2601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 317, 0, 792,
	0, 793, 0, 783, 406, 785, 786, 402, 399, 401,
	787, 0, 0, 0, 1566, 0, 1617, 1615, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 0, 0, 0, 0, -2, 1568,
	1569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 397, 2600, 2610, 0, 1343, 1344, 442, 445,
	448, 451, 296, 0, 0, 0, 482, 492, 0, 1396,
	1368, 0, 0, 627, 406, 646, 648, 0, 404, 2942,
	2653, 1353, 1531, 1534, 0, 1514, 3166, 1585, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 3166, 2629,
	2683, 2684, 1817, 1827, 0, 2087, 0, 1850, 1836, 0,
	0, 0, 1850, 1854, 1855, 1857, 1858, 0, 0, 2078,
	2084, 727, 779, 1925, 1925, 406, 0, 0, 1839, 1841,
	0, 0, 0, 343, 0, 354, 2054, 352, 0, 360,
	0, 0, 2054, 351, 0, 640, 873, 878, 406, 0,
	0, 406, 1099, 1100, 1101, 1102, 1103, 1158, 1202, 1214,
	1270, 1121, 1123, 1124, 1125, 0, 1130, 0, 0, 0,
	1318, 1313, 1314, 1315, 2650, 2646, 1316, 1142, 1216, 1145,
	1216, 1148, 1216, 1151, 1153, 1171, 1177, 1190, 1183, 1191,
	0, 0, 0, 1204, 0, 0, 1226, 0, 1235, 1249,
	-2, 1254, 1255, 0, 0, 0, 0, 0, 0, 0,
	1276, 1277, 1278, 1280, 1285, 1284, 0, 1290, 1089, 2073,
	1876, 1877, 1879, 0, 1888, 0, 0, 1964, -2, -2,
	1963, 1967, 1968, -2, -2, -2, -2, 1884, 0, 1893,
	1890, 0, 1949, 1656, 1657, 0, 0, 898, 0, 0,
	-2, -2, 0, 0, 0, 2303, 0, -2, 2282, 2285,
	2289, 2291, 2293, 0, 0, 0, 0, 0, 0, 2526,
	0, 2528, 2304, 2581, 2584, 2519, 0, 2475, 0, 0,
	1937, 1938, 1938, 0, 2373, 0, 2534, 0, 2541, 2542,
	0, 2366, 0, 2575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2377, 0, 0, 0, 0, 2409, 2412,
	2415, 2418, 0, 0, 0, 0, 2398, 0, 0, 0,
	2402, 2168, 2154, 0, 2196, 2194, 2195, 2189, 2196, 2193,
	2146, 0, 2145, 0, 2424, 0, 2426, 2428, 0, 0,
	2430, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2310, 2311, 2312, 2332, 2431,
	2563, 2564, 0, 0, 0, 0, 0, 0, 2437, 0,
	2569, 2438, 2440, 1925, 0, 1918, 0, 2021, 0, 1983,
	1972, 2086, 0, 2590, 2054, 1985, 1987, 2591, 2631, 1972,
	1972, 0, 2538, 0, 0, 2041, 0, 0, 0, 2043,
	2006, 0, 0, 2000, 0, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 2007, 2022, 2045, 2009, 2013, 2661, 0, 2025,
	2049, 0, 2047, 0, 2032, 0, 2034, 2071, 0, 2018,
	2051, 0, 0, 2676, 2087, 0, 455, 463, 464, 456,
	457, 458, 459, 0, 1709, 0, 0, 0, 0, 0,
	1299, 1302, 0, 819, 0, 0, 2540, 0, 2093, 0,
	2099, 0, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 546, 552, 0, 0, 501,
	0, 500, 506, 594, 687, 257, 692, 695, 2598, 257,
	701, 704, 710, 286, 0, 886, -2, 933, 934, 936,
	0, 932, 1042, 1038, 211, 1725, 0, 0, 0, 1665,
	0, 1379, 0, 1374, 1375, 1667, 2645, 1671, 1677, 1680,
	0, 216, 3166, 228, 0, 3166, 0, 1440, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 3166, 257, 3166,
	257, 232, 234, 237, 0, 243, 239, 0, 1376, 0,
	1428, 0, 0, 1431, 159, 1725, 0, 0, 162, 166,
	178, 0, 0, 0, 193, 0, 0, 0, 1682, 1686,
	1694, 0, 0, 0, 1541, 1542, 1545, 1551, 1554, 103,
	0, 0, 0, 1690, 1692, 1698, 561, 562, 563, 0,
	0, 0, 525, 526, 127, 130, 3166, 2643, 0, 132,
	3166, 0, 141, 1827, 0, 0, 0, 0, 1664, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 164, 168,
	179, 0, 1700, 161, 181, 0, 272, 0, 0, 262,
	257, 3166, 0, 264, 0, 265, 266, 280, 0, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 0, 789,
	0, 784, 0, 0, 0, 1356, 1357, 1616, 0, 1559,
	1560, 326, 327, 0, 1571, 1565, 0, 0, 0, 0,
	0, 1702, 1703, 0, 0, 0, 1723, 1718, 2054, 292,
	0, 2054, 300, 0, 2606, 0, 330, 339, 479, 0,
	491, 493, 495, 0, 0, 0, 1395, 1494, 1397, 1399,
	1400, 1401, 259, 0, 2684, 1466, 2853, 2684, 0, 0,
	1363, 0, 0, 0, 633, 629, 0, 638, 642, 643,
	0, 0, 0, -2, 0, 0, 0, 0, -2, 0,
	0, 0, 1632, 1626, 1627, 0, 0, 0, 0, 3166,
	1819, 1827, 0, 1923, 1938, 653, 1828, 1850, 0, 0,
	0, 1838, 1834, 1831, 2087, 0, 0, 0, 0, 0,
	2080, 2083, 730, 731, 383, 0, 406, 0, 0, 0,
	0, 0, 0, 358, 0, 361, 0, 0, 0, 366,
	367, 368, 369, 370, 371, 0, 0, 374, 0, 0,
	378, 379, 360, 395, 345, 2054, 0, 360, 0, 0,
	875, 0, 1090, 0, 0, 1097, 0, 0, 1721, 1134,
	0, 1144, 1146, 1149, 1193, 1195, 1216, 1207, 0, 1227,
	1253, 1260, 2630, 1261, 1418, 0, 1418, 0, 0, 1281,
	1287, 1886, 0, 1961, 1892, 1943, 1944, 0, 1658, 0,
	2221, 2266, 0, 0, -2, 0, 0, 2270, 0, 0,
	0, -2, 0, 0, 0, 2527, 2529, 0, 2583, 2518,
	2368, 0, 0, 0, 2372, 2356, 2357, 0, 2478, 2544,
	2573, 2577, 0, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	0, 2625, 2662, 2666, 2451, 2452, 2456, 2639, 0, 0,
	0, 2381, 0, 0, 0, 0, 0, 0, 0, 0,
	2187, 2191, 0, 0, 2545, 2556, 2558, 2308, 2309, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, -2,
	-2, -2, 2326, 2327, 2328, -2, -2, -2, 2333, 0,
	0, 0, 2559, 2561, 2562, 2566, 2567, 0, 2434, 2435,
	2436, 2568, 0, 1925, 1919, 2024, 1980, 0, 2085, 1984,
	0, 1980, 1980, 1932, 2039, 0, 0, 2067, 0, 2003,
	0, 2004, 0, 0, 2044, 0, 2011, 2048, 0, 2027,
	2029, 2014, 2015, 2033, 0, 2017, 0, 2020, 2368, -2,
	407, 409, 411, 0, 414, 415, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 810, 1709, 1709, 0,
	0, 0, 812, 0, 796, 0, 0, 2095, 0, 0,
	2171, 2175, 2199, 825, 827, 0, 0, 0, 0, 3091,
	3026, 0, 0, 824, 555, 498, 499, 689, 698, 288,
	0, 2052, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 258, 0, 1475, 0, 1438, 0,
	0, 1465, 0, 0, 1481, 218, 219, 220, 0, 0,
	0, 0, 230, 0, 0, 226, 0, 236, 242, 241,
	0, 1425, 0, 0, 0, 0, 1670, 0, 0, 0,
	190, 191, 192, 0, 197, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 0, 0, 0, 0,
	138, 0, 0, 0, 143, 144, 0, 0, 1809, 1810,
	0, 1797, 187, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 1655, 282, 0, 0, 0, 0, 0,
	318, 319, 320, 321, 0, 304, 306, 0, 0, 311,
	0, 0, 328, 0, 403, 398, 400, 1558, 1619, 1620,
	1567, 1683, 1687, 1695, 0, 0, 0, 0, 0, 844,
	1722, 0, 300, 298, 0, 301, 300, 294, 0, 0,
	0, 0, 0, 0, 0, 575, 1366, 1482, 0, 0,
	1484, 1402, 1406, 0, 2684, 2684, 0, 2636, 0, 1364,
	0, 0, 1483, 625, 0, 632, 0, 647, 2635, 0,
	0, 0, 1535, 0, 0, 1562, 1514, 1588, 1514, 0,
	1631, 1633, 0, 1641, 0, 0, 0, 1821, 1827, 0,
	1814, 1815, 1957, 1829, 1848, -2, 0, 0, 1938, 1856,
	1853, 1859, 1860, 0, 0, 386, 0, 1840, 1842, 0,
	1337, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 360, 357, 347, 2054, 390, 0, 406,
	406, 1126, 1720, 1131, 2651, 1203, 1225, 1262, 1417, 0,
	0, 1264, 0, 0, 1960, 1947, 1948, 1945, 1658, 2268,
	2272, 0, 0, 0, 2274, -2, 0, 2296, -2, -2,
	2530, 2582, 2347, 1938, 2369, 2371, 2358, 2576, 2216, 0,
	2458, 2455, 0, 2442, 0, 2393, 2394, 0, 0, 2397,
	2399, 2400, 2401, 2155, 2148, 2147, 2555, 0, 0, 0,
	0, 2433, 1920, 0, 2447, 0, 0, 1988, 2447, 2447,
	2040, 0, 2042, 2001, 1989, 0, 1998, 0, 2662, 2026,
	0, 2030, 2035, 2019, 0, 412, 0, 416, 417, 418,
	419, 421, 0, 0, 0, 0, 0, 460, 813, 814,
	0, 0, 0, 0, 1708, 2089, 2094, 0, 2100, 2170,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 289,
	0, 1040, 1041, 212, 213, 1380, 1378, 1674, 1678, 1675,
	0, 215, 0, 0, 1439, 0, 1442, 0, 0, 0,
	0, 1449, 1466, 0, 0, 0, 0, 0, 0, 1468,
	0, 1467, 0, 0, 1498, 0, 1646, 1653, 0, -2,
	0, 0, 0, 222, 248, 0, 0, 0, 0, 251,
	1726, 224, 0, 0, 257, 257, 1377, 0, 0, 1666,
	1668, 1681, 0, 0, 0, 0, 200, 0, 0, 1684,
	1688, 1696, 1691, 1693, 1699, 564, 520, 0, 0, 133,
	142, 1800, 0, 0, 0, 1811, 0, 186, 0, 0,
	0, 1701, 270, 271, 0, 257, 0, 257, 263, 257,
	1655, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 1704, 1705,
	291, 0, 0, 293, 396, 300, 481, 489, 494, 496,
	497, 1427, 0, 1494, 1486, 1487, 1488, 0, 1398, 1493,
	1495, 0, 0, 1403, 0, 0, 0, 0, 1383, 1365,
	0, 1396, 1368, 0, 630, 0, 405, 1354, 1532, 1580,
	1514, 0, 1583, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 1823, 1827, 0, 1816, 1817, 1850, 1956,
	0, 0, 0, 1837, 1957, 0, 406, 0, 406, 362,
	0, 363, 364, 365, 372, 373, 375, 376, 377, 346,
	349, 0, 360, 877, 879, 0, 0, 885, 1091, 1096,
	1416, 0, 0, 0, 0, 1946, 2276, -2, -2, 2297,
	0, 2663, 2665, 1938, 0, 2444, 1940, 0, 0, -2,
	0, 0, 0, 1921, 1904, 0, 1979, 1971, 1973, 1975,
	3011, 2764, 3165, 1905, 1906, 2066, 0, 0, 2028, 413,
	422, 423, 0, 425, 426, 815, 0, 0, 0, 0,
	2096, 0, 0, 0, 822, 0, 0, 0, 0, 1030,
	0, 0, 1676, 217, 0, 0, 1443, 1444, 1446, 0,
	1448, 1450, 1451, 1368, 0, 1455, 0, 2686, 0, 1460,
	1463, 1464, 0, 0, 1477, 1499, 0, 1508, 0, 1648,
	1658, 1652, 0, 1650, 1510, 0, 221, 250, 223, 252,
	247, 0, 1655, 0, 225, 235, 0, 0, 163, 0,
	0, 2757, 203, 201, 199, 131, 137, 139, 145, 1663,
	189, 0, 165, 0, 272, 281, 1654, 283, 267, 257,
	0, 303, 305, 307, 308, 309, 310, 312, 0, 1685,
	1689, 1697, 0, 1712, 1713, 1714, 1715, 1716, 0, 0,
	0, 302, 0, 0, 0, 488, 1368, 1426, 1367, 1485,
	0, 1496, 1368, 0, 0, 0, 0, 0, 0, 1370,
	0, 1369, 0, 0, 631, 634, 0, 637, 2087, 644,
	0, 0, 0, 1587, 0, 1634, 1632, 0, 1640, 0,
	0, 0, 1796, 0, 0, 1818, 1819, 651, 1843, 0,
	0, 1850, 1861, 385, 0, 388, 359, 0, 348, 0,
	881, 0, 883, 0, 1263, 1265, 0, 0, 2370, 2462,
	0, 0, 2395, 2396, -2, 0, 2336, 2446, 2448, 0,
	0, 0, 0, 0, 1990, 1999, 424, 1709, 1709, 1709,
	2090, 829, 830, 832, 826, 828, 0, 0, 1672, 0,
	1679, 259, 1441, 1445, 0, 1452, 0, 0, 0, 1456,
	1518, 0, 0, 1535, 1535, 1469, 0, 0, 1502, 1503,
	1423, 0, 1504, 1505, 1506, 1647, 1949, 1653, 1368, 0,
	0, 249, 254, 0, 0, 0, 0, 0, 0, 188,
	0, 261, 284, 1655, 0, 0, 1717, 0, 0, 299,
	335, 511, 509, 1370, 0, 1497, 1404, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1405, 1510, 0, 0,
	1474, 1381, 0, 1384, 0, 1366, 0, 635, 636, 639,
	0, 1581, 0, 1588, 0, 0, 1641, 0, 0, 1806,
	1795, 1827, 1820, 1821, 2087, 0, 1851, 0, 355, 356,
	880, 0, 0, 1273, 1274, 0, 0, 0, 0, 2457,
	1941, 2337, 0, 0, 1974, 1976, 1977, 1978, 816, 817,
	818, 0, 0, 1673, 229, 0, 1512, 1454, 1523, 0,
	0, 0, 0, 0, 1470, 1500, 1501, 1498, 1422, 0,
	1651, 1649, 1479, 1512, 1514, 227, 0, 1510, 0, 1432,
	0, 0, 1435, 0, 0, 204, 2757, 202, 0, 257,
	794, 1709, 257, 0, 338, 0, 544, 510, 512, 0,
	0, 516, 517, 518, 1362, 0, 1490, 1492, 1508, 1510,
	1423, 0, 1385, 1427, 1383, 1582, 1586, 1584, 1624, 1510,
	0, 1508, 0, 1813, 1827, 1807, 1808, 0, 1823, 0,
	0, 406, 882, 884, 2454, 2474, 2463, -2, 3094, 2765,
	0, 2474, 2474, 2449, 2450, 0, 0, 0, 1368, 0,
	1457, 1519, 1520, 0, 1515, 1516, 1517, 2685, 1458, 1459,
	1461, 1462, 2087, 0, 1509, 1518, 253, 1368, 1429, 0,
	0, 1430, 0, 0, 207, 0, 209, 285, 1707, 1710,
	0, 313, 0, 0, 484, 542, 0, 0, 513, 514,
	536, 515, 1359, 1361, 1368, 0, 1423, 1508, 1368, 0,
	0, 0, 1368, 1370, 1508, 0, 1423, 0, 1802, 1812,
	0, 1822, 1796, 0, 1846, 0, 387, 2459, 0, 0,
	2465, 2466, 2467, 2468, 2469, 2460, 2461, 831, 833, 1447,
	1453, 0, 1521, 0, 1522, 0, 0, 0, 1478, 1507,
	1523, 233, 1433, 0, 1436, 0, 205, 0, 0, 333,
	334, 541, 537, 1489, 1491, 1368, 1423, 2087, 1371, 0,
	1373, 1370, 1382, 1423, 0, 1368, 0, 1825, 1801, 1805,
	2644, 1806, 1844, 0, 0, 0, 2471, 2472, 0, 0,
	0, 1524, 0, 1527, 1528, 0, 1525, 1498, 0, 0,
	257, 0, 1925, 2087, 1368, 1662, 1372, 1362, 1368, 1510,
	2087, 1508, 1799, 1827, 1813, 0, 2087, 2470, 2473, 2464,
	1511, 1526, 1529, 1530, 1480, 0, 0, 1711, 336, 0,
	0, 543, 538, 539, 1662, 2087, 1473, 0, 1660, 1661,
	1360, 2087, 1508, 1662, 1423, 1792, 1798, 0, 0, 1802,
	2087, 1847, 1420, 0, 0, 540, 1471, 1662, 1659, 1662,
	1423, 1637, 1368, 1824, 1825, 1845, 1434, 1419, 0, 337,
	1472, 1635, 1368, 2087, 1799, 0, 2087, 1662, 1793, 0,
	1662, 1638, 1420, 1636, 1437,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 651, 3, 657, 652, 3,
	663, 664, 655, 653, 668, 654, 665, 656, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 672, 669,
	643, 645, 644, 648, 667, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 661, 3, 662, 658, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 670, 650, 671, 646,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 647, 57986, 649, 57987, 659, 57988, 660, 57989, 666,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1784
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1810
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1824
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1919
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2064
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2077
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2090
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2126
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2193
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2222
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2258
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2269
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2281
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = true
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = true
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = false
		}
	case 185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2326
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2388
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2405
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2424
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2432
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2443
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2453
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2463
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2472
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2483
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2489
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2515
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2520
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2611
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2655
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2665
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2668
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = nil
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = true
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = false
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = nil
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3012
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3118
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeAllSecondaryTenants: tree.MakeDBool(true)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeAllSecondaryTenants: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3308
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3373
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = nil
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3598
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncludeAllSecondaryTenants: tree.MakeDBool(true)}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncludeAllSecondaryTenants: sqlDollar[3].union.expr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3754
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3763
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3769
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3774
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3779
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3811
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = nil
		}
	case 407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3887
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3901
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.CopyOptions{Quote: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3973
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4119
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4140
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4141
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4145
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4150
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "CREATE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4184
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4187
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4208
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = true
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = false
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = true
		}
	case 489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = false
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4250
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4305
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4307
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4340
		{
			return unimplemented(sqllex, "create window function")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4372
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4376
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4411
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4479
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4546
		{
		}
	case 560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4547
		{
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = true
		}
	case 566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = false
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4597
		{
			return unimplemented(sqllex, "create access method")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			return unimplemented(sqllex, "create cast")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4600
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4602
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "create publication")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplemented(sqllex, "create rule")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplemented(sqllex, "create server")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4616
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4617
		{
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4620
		{
		}
	case 587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4621
		{
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4624
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4630
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4633
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4634
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			return unimplemented(sqllex, "drop server")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4672
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4722
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4733
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4769
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4787
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4818
		{
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4820
		{
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.str = ""
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4838
		{

			sqlVAL.union.val = nil
		}
	case 651:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "DELETE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4866
		{
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4902
		{
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "DROP")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5084
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5099
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5103
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5142
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5169
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5178
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5186
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5202
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5210
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "DELETE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "INSERT")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "DELETE")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "INSERT")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5400
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5433
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5441
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5474
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5525
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5575
		{
			return helpWith(sqllex, "GRANT")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5726
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5739
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "RESET")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5768
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5787
		{
			return helpWith(sqllex, "RESET")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "USE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5816
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5817
		{
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5824
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "USE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5859
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5885
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5949
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5957
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5964
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5965
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5995
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6001
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6015
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6032
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			return unimplemented(sqllex, "set from current")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6091
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = tree.Low
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.Normal
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = tree.High
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6297
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6298
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = true
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = false
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = true
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = false
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = false
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6407
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6459
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = int64(1)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = int64(1)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = int64(1)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6514
		{
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6515
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6518
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6519
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6538
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6555
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.str = "client_encoding"
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6575
		{
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6577
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.str = "timezone"
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6618
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupConnectionTest,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6766
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6771
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6780
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6786
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6800
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6845
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6863
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6893
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6903
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6916
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6955
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6964
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6980
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6991
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6996
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = true
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = true
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = false
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7032
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7051
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7077
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7078
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7094
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7102
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7110
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7146
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7151
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7153
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7157
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = true
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = false
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7172
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7177
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7208
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7236
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7246
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7251
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = true
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = false
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7283
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7290
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7294
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7298
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7308
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7319
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7341
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7351
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7355
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7385
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7390
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7395
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7400
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7405
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7438
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7443
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7455
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7460
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7471
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7500
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7508
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7529
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7534
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7539
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7543
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7552
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7575
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7587
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7653
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7663
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7676
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7811
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7858
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7914
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7974
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7975
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7976
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7982
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7983
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7984
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7996
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8037
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8069
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8077
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8088
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8124
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8152
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8188
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8203
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8231
		{

			sqlVAL.union.val = nil
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8237
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.str = ""
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8247
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = nil
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8270
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8274
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8310
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8323
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8337
		{
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8338
		{
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8394
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8420
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8437
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.str = ""
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8683
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8728
		{

			sqlVAL.union.val = true
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = false
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8738
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8742
		{
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8745
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8845
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8856
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8873
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8883
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8898
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8966
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8967
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8969
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8971
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9053
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9138
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9147
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9155
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9166
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9200
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9206
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9208
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9231
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9258
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.str = ""
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9312
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = true
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{

			sqlVAL.union.val = true
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = false
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9352
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9366
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9378
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9390
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9401
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9412
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = false
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = true
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = true
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = nil
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9559
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9587
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9589
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9591
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9593
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9595
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9630
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9648
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9667
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9684
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9701
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = false
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = true
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = false
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = true
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = false
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9759
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9765
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9771
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9779
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.str = ""
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.str = ""
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = true
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = true
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = false
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = false
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9850
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9856
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10081
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10087
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10099
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10105
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10119
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10125
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10184
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = true
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = false
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10248
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.str = ""
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10284
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10287
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10288
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10299
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10376
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10384
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10399
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10400
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10401
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10420
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10433
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10444
		{
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10461
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10467
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10487
		{
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10515
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10530
		{
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10534
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				Owner:           sqlDollar[17].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[18].str),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10627
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.str = ""
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.str = ""
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10682
		{

		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10697
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.str = ""
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.str = ""
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.str = ""
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.str = ""
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10752
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10777
		{
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10778
		{
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10887
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10932
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11024
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11039
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11183
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11218
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11219
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11220
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11281
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11325
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11341
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = true
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = false
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11394
		{
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11395
		{
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = nil
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11409
		{
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = true
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = false
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = false
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = true
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11439
		{
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11443
		{
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11484
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11496
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11501
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11527
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11560
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11615
		{
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11616
		{
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11619
		{
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11655
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11656
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11686
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11688
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11703
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11725
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11730
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11735
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11756
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11772
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11803
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11845
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11855
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11890
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11901
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11931
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = nil
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = true
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = false
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.str = tree.AstFull
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.str = tree.AstRight
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.str = tree.AstInner
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12146
		{
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.str = tree.AstHash
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.str = ""
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12220
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12250
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12256
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12262
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12272
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = true
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = false
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = true
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12296
		{
			sqlVAL.union.val = false
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12321
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12334
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12342
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12343
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12361
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12363
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12371
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12384
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12391
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12400
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12440
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12452
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12453
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = types.Geography
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12502
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12510
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12536
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12544
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = nil
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = types.Int2
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = types.Int
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = types.Float4
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = types.Float
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12587
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12595
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12603
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = types.Bool
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12617
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = types.Float
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12636
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12642
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12664
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = types.String
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = true
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = false
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = types.Date
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12713
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12721
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12735
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12744
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12752
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12765
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12769
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = true
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = false
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = false
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = types.Interval
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12789
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12793
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12804
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12877
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12892
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12898
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = nil
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12922
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12982
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12987
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13019
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13035
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13039
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13131
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13139
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13237
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13257
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13261
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13274
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13278
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13282
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13286
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13290
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13306
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13310
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13314
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13318
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13322
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13326
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13338
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {

				if tree.IsUnaryComplement(subOp) {
					subOp = treecmp.MakeComparisonOperator(treecmp.RegMatch)
				} else {
					sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
						subOp, op, subOp))
					return 1
				}
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13362
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13367
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13379
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13383
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13387
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13391
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13399
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13403
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13407
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13411
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13415
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13419
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13423
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13427
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13431
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13451
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13455
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13463
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13471
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13475
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13483
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13493
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13497
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13501
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13505
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13519
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13527
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13563
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13571
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13575
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13579
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13584
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13586
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13590
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13602
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13606
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13610
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13619
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13626
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13630
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13634
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13644
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13649
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13661
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13665
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13668
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13679
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13680
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13695
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13704
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13757
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13770
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13782
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13791
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13849
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13853
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13857
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13861
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13865
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13869
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13873
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13877
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13881
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13885
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13895
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13900
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13909
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13911
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13918
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13927
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13936
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13941
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13943
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13946
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13948
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13951
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13956
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13961
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13970
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13971
		{
			return unimplemented(sqllex, "treat")
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13977
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13992
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13997
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14003
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14007
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14013
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14017
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14024
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14028
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14034
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14044
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14052
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14056
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14060
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14067
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14087
		{
			sqlVAL.str = ""
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14093
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14097
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14103
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14111
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14119
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14127
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14133
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14146
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14174
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14178
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14182
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14186
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14193
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14202
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14206
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14210
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14214
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14219
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14232
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14236
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14243
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14255
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14259
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14263
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14279
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14280
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14281
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14282
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14283
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14284
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14285
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14286
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14287
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14288
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14289
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14290
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14292
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14293
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14294
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14295
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14296
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14297
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14298
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14299
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14300
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14301
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14302
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14304
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14305
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14306
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14307
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14308
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14309
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14312
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14313
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14314
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14319
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14335
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14342
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14343
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14344
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14345
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14368
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14372
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14378
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14386
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14397
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14401
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14407
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14411
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14418
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14424
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14428
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14434
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14438
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14444
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14448
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14454
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14464
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14468
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14491
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14495
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14499
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14505
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14512
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14516
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14533
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14537
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14541
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14545
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14549
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14555
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14561
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14567
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14571
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14575
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14581
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14593
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14600
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14610
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14616
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14620
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14627
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14633
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14637
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14644
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14650
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14659
		{
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14660
		{
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14664
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14674
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14683
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14687
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14691
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14703
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14713
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14717
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14736
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14744
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14767
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14776
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14780
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14784
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14788
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14794
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14813
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14817
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14829
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14833
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14842
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14853
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14862
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14870
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14887
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14972
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14980
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14984
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14990
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15000
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15006
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15013
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15040
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15047
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15051
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15055
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15069
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15073
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15077
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15090
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15099
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15117
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15130
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15137
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15162
		{
			sqlVAL.str = ""
		}
	case 2685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15168
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15172
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
