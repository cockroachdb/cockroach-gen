// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12909

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1494,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 398,
	-2, 0,
	-1, 74,
	241, 236,
	507, 236,
	-2, 0,
	-1, 87,
	229, 1254,
	243, 1254,
	259, 394,
	386, 394,
	396, 1024,
	432, 394,
	445, 1024,
	491, 1024,
	518, 394,
	544, 1024,
	-2, 0,
	-1, 93,
	132, 1494,
	236, 1494,
	529, 1494,
	530, 1494,
	-2, 0,
	-1, 109,
	150, 1465,
	169, 1465,
	182, 1465,
	239, 1465,
	272, 1465,
	338, 1465,
	348, 1465,
	524, 1465,
	-2, 1436,
	-1, 148,
	158, 881,
	258, 881,
	389, 848,
	450, 848,
	490, 848,
	510, 881,
	512, 848,
	-2, 0,
	-1, 151,
	4, 1496,
	21, 1496,
	22, 1496,
	23, 1496,
	24, 1496,
	25, 1496,
	26, 1496,
	27, 1496,
	29, 1496,
	30, 1496,
	36, 1496,
	41, 1496,
	42, 1496,
	44, 1496,
	45, 1496,
	46, 1496,
	47, 1496,
	48, 1496,
	49, 1496,
	50, 1496,
	51, 1496,
	53, 1496,
	54, 1496,
	55, 1496,
	56, 1496,
	58, 1496,
	59, 1496,
	60, 1496,
	61, 1496,
	62, 1496,
	63, 1496,
	64, 1496,
	68, 1496,
	69, 1496,
	70, 1496,
	71, 1496,
	73, 1496,
	74, 1496,
	75, 1496,
	79, 1496,
	80, 1496,
	81, 1496,
	82, 1496,
	83, 1496,
	84, 1496,
	85, 1496,
	88, 1496,
	89, 1496,
	90, 1496,
	91, 1496,
	92, 1496,
	94, 1496,
	96, 1496,
	97, 1496,
	98, 1496,
	99, 1496,
	100, 1496,
	101, 1496,
	103, 1496,
	104, 1496,
	105, 1496,
	107, 1496,
	108, 1496,
	109, 1496,
	117, 1496,
	118, 1496,
	119, 1496,
	120, 1496,
	121, 1496,
	123, 1496,
	124, 1496,
	125, 1496,
	127, 1496,
	128, 1496,
	129, 1496,
	131, 1496,
	132, 1496,
	133, 1496,
	135, 1496,
	136, 1496,
	137, 1496,
	140, 1496,
	141, 1496,
	142, 1496,
	144, 1496,
	145, 1496,
	147, 1496,
	148, 1496,
	149, 1496,
	151, 1496,
	152, 1496,
	153, 1496,
	154, 1496,
	155, 1496,
	156, 1496,
	157, 1496,
	158, 1496,
	159, 1496,
	160, 1496,
	161, 1496,
	162, 1496,
	163, 1496,
	164, 1496,
	165, 1496,
	166, 1496,
	168, 1496,
	174, 1496,
	175, 1496,
	176, 1496,
	177, 1496,
	181, 1496,
	183, 1496,
	184, 1496,
	188, 1496,
	189, 1496,
	190, 1496,
	191, 1496,
	192, 1496,
	193, 1496,
	194, 1496,
	195, 1496,
	196, 1496,
	197, 1496,
	198, 1496,
	199, 1496,
	200, 1496,
	202, 1496,
	203, 1496,
	205, 1496,
	206, 1496,
	208, 1496,
	209, 1496,
	210, 1496,
	211, 1496,
	212, 1496,
	213, 1496,
	214, 1496,
	215, 1496,
	216, 1496,
	218, 1496,
	219, 1496,
	221, 1496,
	222, 1496,
	223, 1496,
	224, 1496,
	225, 1496,
	229, 1496,
	230, 1496,
	231, 1496,
	232, 1496,
	233, 1496,
	236, 1496,
	237, 1496,
	238, 1496,
	240, 1496,
	242, 1496,
	243, 1496,
	245, 1496,
	247, 1496,
	248, 1496,
	249, 1496,
	251, 1496,
	255, 1496,
	256, 1496,
	257, 1496,
	258, 1496,
	259, 1496,
	260, 1496,
	262, 1496,
	263, 1496,
	264, 1496,
	266, 1496,
	267, 1496,
	269, 1496,
	270, 1496,
	273, 1496,
	277, 1496,
	278, 1496,
	279, 1496,
	282, 1496,
	283, 1496,
	284, 1496,
	285, 1496,
	287, 1496,
	288, 1496,
	289, 1496,
	290, 1496,
	291, 1496,
	292, 1496,
	293, 1496,
	294, 1496,
	295, 1496,
	296, 1496,
	297, 1496,
	298, 1496,
	299, 1496,
	300, 1496,
	301, 1496,
	302, 1496,
	303, 1496,
	304, 1496,
	305, 1496,
	306, 1496,
	307, 1496,
	308, 1496,
	310, 1496,
	312, 1496,
	313, 1496,
	314, 1496,
	315, 1496,
	316, 1496,
	317, 1496,
	318, 1496,
	319, 1496,
	320, 1496,
	321, 1496,
	322, 1496,
	323, 1496,
	325, 1496,
	326, 1496,
	328, 1496,
	330, 1496,
	331, 1496,
	333, 1496,
	334, 1496,
	335, 1496,
	336, 1496,
	337, 1496,
	340, 1496,
	343, 1496,
	344, 1496,
	345, 1496,
	346, 1496,
	349, 1496,
	350, 1496,
	351, 1496,
	353, 1496,
	355, 1496,
	356, 1496,
	357, 1496,
	358, 1496,
	359, 1496,
	360, 1496,
	361, 1496,
	362, 1496,
	363, 1496,
	364, 1496,
	365, 1496,
	366, 1496,
	368, 1496,
	369, 1496,
	370, 1496,
	371, 1496,
	372, 1496,
	373, 1496,
	374, 1496,
	375, 1496,
	376, 1496,
	377, 1496,
	378, 1496,
	379, 1496,
	380, 1496,
	381, 1496,
	382, 1496,
	384, 1496,
	385, 1496,
	387, 1496,
	388, 1496,
	389, 1496,
	390, 1496,
	391, 1496,
	392, 1496,
	393, 1496,
	394, 1496,
	395, 1496,
	396, 1496,
	397, 1496,
	398, 1496,
	400, 1496,
	402, 1496,
	403, 1496,
	404, 1496,
	409, 1496,
	411, 1496,
	412, 1496,
	413, 1496,
	414, 1496,
	415, 1496,
	416, 1496,
	417, 1496,
	418, 1496,
	419, 1496,
	421, 1496,
	422, 1496,
	423, 1496,
	425, 1496,
	426, 1496,
	427, 1496,
	428, 1496,
	429, 1496,
	430, 1496,
	432, 1496,
	433, 1496,
	434, 1496,
	435, 1496,
	436, 1496,
	437, 1496,
	438, 1496,
	439, 1496,
	440, 1496,
	441, 1496,
	442, 1496,
	443, 1496,
	445, 1496,
	446, 1496,
	447, 1496,
	448, 1496,
	449, 1496,
	450, 1496,
	452, 1496,
	453, 1496,
	454, 1496,
	455, 1496,
	456, 1496,
	457, 1496,
	459, 1496,
	460, 1496,
	461, 1496,
	462, 1496,
	463, 1496,
	464, 1496,
	465, 1496,
	467, 1496,
	469, 1496,
	470, 1496,
	471, 1496,
	472, 1496,
	473, 1496,
	474, 1496,
	475, 1496,
	476, 1496,
	477, 1496,
	478, 1496,
	479, 1496,
	480, 1496,
	481, 1496,
	482, 1496,
	483, 1496,
	484, 1496,
	486, 1496,
	487, 1496,
	489, 1496,
	490, 1496,
	492, 1496,
	493, 1496,
	494, 1496,
	495, 1496,
	496, 1496,
	497, 1496,
	498, 1496,
	499, 1496,
	500, 1496,
	502, 1496,
	503, 1496,
	504, 1496,
	505, 1496,
	506, 1496,
	508, 1496,
	510, 1496,
	511, 1496,
	512, 1496,
	513, 1496,
	514, 1496,
	515, 1496,
	517, 1496,
	518, 1496,
	519, 1496,
	520, 1496,
	522, 1496,
	523, 1496,
	526, 1496,
	527, 1496,
	528, 1496,
	529, 1496,
	530, 1496,
	531, 1496,
	532, 1496,
	534, 1496,
	537, 1496,
	538, 1496,
	539, 1496,
	540, 1496,
	541, 1496,
	542, 1496,
	544, 1496,
	545, 1496,
	546, 1496,
	547, 1496,
	549, 1496,
	554, 1496,
	555, 1496,
	556, 1496,
	557, 1496,
	558, 1496,
	559, 1496,
	-2, 0,
	-1, 152,
	1, 1351,
	130, 1351,
	247, 1351,
	327, 1351,
	384, 1351,
	393, 1351,
	563, 1351,
	587, 1351,
	-2, 0,
	-1, 154,
	1, 1351,
	587, 1351,
	-2, 0,
	-1, 155,
	1, 1351,
	587, 1351,
	-2, 0,
	-1, 156,
	1, 1351,
	507, 1351,
	587, 1351,
	-2, 0,
	-1, 184,
	150, 1464,
	169, 1464,
	182, 1464,
	239, 1464,
	272, 1464,
	338, 1464,
	348, 1464,
	524, 1464,
	-2, 1439,
	-1, 230,
	4, 1503,
	5, 1503,
	6, 1503,
	7, 1503,
	8, 1503,
	9, 1503,
	10, 1503,
	21, 1503,
	22, 1503,
	23, 1503,
	24, 1503,
	25, 1503,
	26, 1503,
	27, 1503,
	29, 1503,
	30, 1503,
	36, 1503,
	37, 1503,
	41, 1503,
	42, 1503,
	43, 1503,
	44, 1503,
	45, 1503,
	46, 1503,
	47, 1503,
	48, 1503,
	49, 1503,
	50, 1503,
	51, 1503,
	53, 1503,
	54, 1503,
	55, 1503,
	56, 1503,
	58, 1503,
	59, 1503,
	60, 1503,
	61, 1503,
	62, 1503,
	63, 1503,
	64, 1503,
	65, 1503,
	66, 1503,
	67, 1503,
	68, 1503,
	69, 1503,
	70, 1503,
	71, 1503,
	73, 1503,
	74, 1503,
	75, 1503,
	77, 1503,
	79, 1503,
	80, 1503,
	81, 1503,
	82, 1503,
	83, 1503,
	84, 1503,
	85, 1503,
	88, 1503,
	89, 1503,
	90, 1503,
	91, 1503,
	92, 1503,
	94, 1503,
	96, 1503,
	97, 1503,
	98, 1503,
	99, 1503,
	100, 1503,
	101, 1503,
	103, 1503,
	104, 1503,
	105, 1503,
	106, 1503,
	107, 1503,
	108, 1503,
	109, 1503,
	110, 1503,
	111, 1503,
	112, 1503,
	113, 1503,
	114, 1503,
	115, 1503,
	116, 1503,
	117, 1503,
	118, 1503,
	119, 1503,
	120, 1503,
	121, 1503,
	122, 1503,
	123, 1503,
	124, 1503,
	125, 1503,
	126, 1503,
	127, 1503,
	128, 1503,
	129, 1503,
	131, 1503,
	132, 1503,
	133, 1503,
	135, 1503,
	136, 1503,
	137, 1503,
	140, 1503,
	141, 1503,
	142, 1503,
	144, 1503,
	145, 1503,
	147, 1503,
	148, 1503,
	149, 1503,
	151, 1503,
	152, 1503,
	153, 1503,
	154, 1503,
	155, 1503,
	156, 1503,
	157, 1503,
	158, 1503,
	159, 1503,
	160, 1503,
	161, 1503,
	162, 1503,
	163, 1503,
	164, 1503,
	165, 1503,
	166, 1503,
	167, 1503,
	168, 1503,
	174, 1503,
	175, 1503,
	176, 1503,
	177, 1503,
	181, 1503,
	183, 1503,
	184, 1503,
	187, 1503,
	188, 1503,
	189, 1503,
	190, 1503,
	191, 1503,
	192, 1503,
	193, 1503,
	194, 1503,
	195, 1503,
	196, 1503,
	197, 1503,
	198, 1503,
	199, 1503,
	200, 1503,
	202, 1503,
	203, 1503,
	205, 1503,
	206, 1503,
	208, 1503,
	209, 1503,
	210, 1503,
	211, 1503,
	212, 1503,
	213, 1503,
	214, 1503,
	215, 1503,
	216, 1503,
	217, 1503,
	218, 1503,
	219, 1503,
	221, 1503,
	222, 1503,
	223, 1503,
	224, 1503,
	225, 1503,
	229, 1503,
	230, 1503,
	231, 1503,
	232, 1503,
	233, 1503,
	235, 1503,
	236, 1503,
	237, 1503,
	238, 1503,
	240, 1503,
	242, 1503,
	243, 1503,
	244, 1503,
	245, 1503,
	246, 1503,
	247, 1503,
	248, 1503,
	249, 1503,
	250, 1503,
	251, 1503,
	255, 1503,
	256, 1503,
	257, 1503,
	258, 1503,
	259, 1503,
	260, 1503,
	262, 1503,
	263, 1503,
	264, 1503,
	266, 1503,
	267, 1503,
	268, 1503,
	269, 1503,
	270, 1503,
	271, 1503,
	273, 1503,
	277, 1503,
	278, 1503,
	279, 1503,
	280, 1503,
	281, 1503,
	282, 1503,
	283, 1503,
	284, 1503,
	285, 1503,
	287, 1503,
	288, 1503,
	289, 1503,
	290, 1503,
	291, 1503,
	292, 1503,
	293, 1503,
	294, 1503,
	295, 1503,
	296, 1503,
	297, 1503,
	298, 1503,
	299, 1503,
	300, 1503,
	301, 1503,
	302, 1503,
	303, 1503,
	304, 1503,
	305, 1503,
	306, 1503,
	307, 1503,
	308, 1503,
	310, 1503,
	311, 1503,
	312, 1503,
	313, 1503,
	314, 1503,
	315, 1503,
	316, 1503,
	317, 1503,
	318, 1503,
	319, 1503,
	320, 1503,
	321, 1503,
	322, 1503,
	323, 1503,
	324, 1503,
	325, 1503,
	326, 1503,
	327, 1503,
	328, 1503,
	329, 1503,
	330, 1503,
	331, 1503,
	332, 1503,
	333, 1503,
	334, 1503,
	335, 1503,
	336, 1503,
	337, 1503,
	340, 1503,
	344, 1503,
	345, 1503,
	346, 1503,
	349, 1503,
	350, 1503,
	351, 1503,
	352, 1503,
	353, 1503,
	354, 1503,
	355, 1503,
	356, 1503,
	357, 1503,
	358, 1503,
	359, 1503,
	360, 1503,
	361, 1503,
	362, 1503,
	363, 1503,
	364, 1503,
	365, 1503,
	366, 1503,
	368, 1503,
	369, 1503,
	370, 1503,
	371, 1503,
	372, 1503,
	373, 1503,
	374, 1503,
	375, 1503,
	376, 1503,
	377, 1503,
	378, 1503,
	379, 1503,
	380, 1503,
	381, 1503,
	382, 1503,
	384, 1503,
	385, 1503,
	387, 1503,
	388, 1503,
	389, 1503,
	390, 1503,
	391, 1503,
	392, 1503,
	393, 1503,
	394, 1503,
	395, 1503,
	396, 1503,
	397, 1503,
	398, 1503,
	400, 1503,
	402, 1503,
	403, 1503,
	404, 1503,
	409, 1503,
	411, 1503,
	412, 1503,
	413, 1503,
	414, 1503,
	415, 1503,
	416, 1503,
	417, 1503,
	418, 1503,
	419, 1503,
	421, 1503,
	422, 1503,
	423, 1503,
	424, 1503,
	425, 1503,
	426, 1503,
	427, 1503,
	428, 1503,
	429, 1503,
	430, 1503,
	432, 1503,
	433, 1503,
	434, 1503,
	435, 1503,
	436, 1503,
	437, 1503,
	438, 1503,
	439, 1503,
	440, 1503,
	441, 1503,
	442, 1503,
	443, 1503,
	445, 1503,
	446, 1503,
	447, 1503,
	448, 1503,
	449, 1503,
	450, 1503,
	451, 1503,
	452, 1503,
	453, 1503,
	454, 1503,
	455, 1503,
	456, 1503,
	457, 1503,
	458, 1503,
	459, 1503,
	460, 1503,
	461, 1503,
	462, 1503,
	463, 1503,
	464, 1503,
	465, 1503,
	467, 1503,
	469, 1503,
	470, 1503,
	471, 1503,
	472, 1503,
	473, 1503,
	474, 1503,
	475, 1503,
	476, 1503,
	477, 1503,
	478, 1503,
	479, 1503,
	480, 1503,
	481, 1503,
	482, 1503,
	483, 1503,
	484, 1503,
	486, 1503,
	487, 1503,
	488, 1503,
	489, 1503,
	490, 1503,
	492, 1503,
	493, 1503,
	494, 1503,
	495, 1503,
	496, 1503,
	497, 1503,
	498, 1503,
	499, 1503,
	500, 1503,
	502, 1503,
	503, 1503,
	504, 1503,
	505, 1503,
	506, 1503,
	508, 1503,
	510, 1503,
	511, 1503,
	512, 1503,
	513, 1503,
	514, 1503,
	515, 1503,
	516, 1503,
	517, 1503,
	518, 1503,
	519, 1503,
	520, 1503,
	522, 1503,
	523, 1503,
	525, 1503,
	526, 1503,
	527, 1503,
	528, 1503,
	529, 1503,
	530, 1503,
	531, 1503,
	532, 1503,
	533, 1503,
	534, 1503,
	537, 1503,
	538, 1503,
	539, 1503,
	540, 1503,
	541, 1503,
	542, 1503,
	544, 1503,
	545, 1503,
	546, 1503,
	547, 1503,
	549, 1503,
	554, 1503,
	555, 1503,
	556, 1503,
	557, 1503,
	558, 1503,
	559, 1503,
	560, 1503,
	568, 1503,
	575, 1503,
	576, 1503,
	577, 1503,
	584, 1503,
	588, 1503,
	-2, 0,
	-1, 728,
	4, 1252,
	21, 1252,
	22, 1252,
	23, 1252,
	24, 1252,
	25, 1252,
	26, 1252,
	27, 1252,
	29, 1252,
	30, 1252,
	36, 1252,
	41, 1252,
	42, 1252,
	44, 1252,
	45, 1252,
	46, 1252,
	47, 1252,
	48, 1252,
	49, 1252,
	50, 1252,
	51, 1252,
	53, 1252,
	54, 1252,
	55, 1252,
	56, 1252,
	58, 1252,
	59, 1252,
	60, 1252,
	61, 1252,
	62, 1252,
	63, 1252,
	64, 1252,
	68, 1252,
	69, 1252,
	70, 1252,
	71, 1252,
	73, 1252,
	74, 1252,
	75, 1252,
	79, 1252,
	80, 1252,
	81, 1252,
	82, 1252,
	83, 1252,
	84, 1252,
	85, 1252,
	88, 1252,
	89, 1252,
	90, 1252,
	91, 1252,
	92, 1252,
	94, 1252,
	96, 1252,
	97, 1252,
	98, 1252,
	99, 1252,
	100, 1252,
	101, 1252,
	103, 1252,
	104, 1252,
	105, 1252,
	107, 1252,
	108, 1252,
	109, 1252,
	117, 1252,
	118, 1252,
	119, 1252,
	120, 1252,
	121, 1252,
	123, 1252,
	124, 1252,
	125, 1252,
	127, 1252,
	128, 1252,
	129, 1252,
	131, 1252,
	132, 1252,
	133, 1252,
	135, 1252,
	136, 1252,
	137, 1252,
	140, 1252,
	141, 1252,
	142, 1252,
	144, 1252,
	145, 1252,
	147, 1252,
	148, 1252,
	149, 1252,
	151, 1252,
	152, 1252,
	153, 1252,
	154, 1252,
	155, 1252,
	156, 1252,
	157, 1252,
	158, 1252,
	159, 1252,
	160, 1252,
	161, 1252,
	162, 1252,
	163, 1252,
	164, 1252,
	165, 1252,
	166, 1252,
	168, 1252,
	174, 1252,
	175, 1252,
	176, 1252,
	177, 1252,
	181, 1252,
	183, 1252,
	184, 1252,
	188, 1252,
	189, 1252,
	190, 1252,
	191, 1252,
	192, 1252,
	193, 1252,
	194, 1252,
	195, 1252,
	196, 1252,
	197, 1252,
	198, 1252,
	199, 1252,
	200, 1252,
	202, 1252,
	203, 1252,
	205, 1252,
	206, 1252,
	208, 1252,
	209, 1252,
	210, 1252,
	211, 1252,
	212, 1252,
	213, 1252,
	214, 1252,
	215, 1252,
	216, 1252,
	218, 1252,
	219, 1252,
	221, 1252,
	222, 1252,
	223, 1252,
	224, 1252,
	225, 1252,
	229, 1252,
	230, 1252,
	231, 1252,
	232, 1252,
	233, 1252,
	236, 1252,
	237, 1252,
	238, 1252,
	240, 1252,
	242, 1252,
	243, 1252,
	245, 1252,
	247, 1252,
	248, 1252,
	249, 1252,
	251, 1252,
	255, 1252,
	256, 1252,
	257, 1252,
	258, 1252,
	259, 1252,
	260, 1252,
	262, 1252,
	263, 1252,
	264, 1252,
	266, 1252,
	267, 1252,
	269, 1252,
	270, 1252,
	273, 1252,
	277, 1252,
	278, 1252,
	279, 1252,
	282, 1252,
	283, 1252,
	284, 1252,
	285, 1252,
	287, 1252,
	288, 1252,
	289, 1252,
	290, 1252,
	291, 1252,
	292, 1252,
	293, 1252,
	294, 1252,
	295, 1252,
	296, 1252,
	297, 1252,
	298, 1252,
	299, 1252,
	300, 1252,
	301, 1252,
	302, 1252,
	303, 1252,
	304, 1252,
	305, 1252,
	306, 1252,
	307, 1252,
	308, 1252,
	310, 1252,
	312, 1252,
	313, 1252,
	314, 1252,
	315, 1252,
	316, 1252,
	317, 1252,
	318, 1252,
	319, 1252,
	320, 1252,
	321, 1252,
	322, 1252,
	323, 1252,
	325, 1252,
	326, 1252,
	328, 1252,
	330, 1252,
	331, 1252,
	333, 1252,
	334, 1252,
	335, 1252,
	336, 1252,
	337, 1252,
	340, 1252,
	344, 1252,
	345, 1252,
	346, 1252,
	349, 1252,
	350, 1252,
	351, 1252,
	353, 1252,
	355, 1252,
	356, 1252,
	357, 1252,
	358, 1252,
	359, 1252,
	360, 1252,
	361, 1252,
	362, 1252,
	363, 1252,
	364, 1252,
	365, 1252,
	366, 1252,
	368, 1252,
	369, 1252,
	370, 1252,
	371, 1252,
	372, 1252,
	373, 1252,
	374, 1252,
	375, 1252,
	376, 1252,
	377, 1252,
	378, 1252,
	379, 1252,
	380, 1252,
	381, 1252,
	382, 1252,
	384, 1252,
	385, 1252,
	387, 1252,
	388, 1252,
	389, 1252,
	390, 1252,
	391, 1252,
	392, 1252,
	393, 1252,
	394, 1252,
	395, 1252,
	396, 1252,
	397, 1252,
	398, 1252,
	400, 1252,
	402, 1252,
	403, 1252,
	404, 1252,
	409, 1252,
	411, 1252,
	412, 1252,
	413, 1252,
	414, 1252,
	415, 1252,
	416, 1252,
	417, 1252,
	418, 1252,
	419, 1252,
	421, 1252,
	422, 1252,
	423, 1252,
	425, 1252,
	426, 1252,
	427, 1252,
	428, 1252,
	429, 1252,
	430, 1252,
	432, 1252,
	433, 1252,
	434, 1252,
	435, 1252,
	436, 1252,
	437, 1252,
	438, 1252,
	439, 1252,
	440, 1252,
	441, 1252,
	442, 1252,
	443, 1252,
	445, 1252,
	446, 1252,
	447, 1252,
	448, 1252,
	449, 1252,
	450, 1252,
	452, 1252,
	453, 1252,
	454, 1252,
	455, 1252,
	456, 1252,
	457, 1252,
	459, 1252,
	460, 1252,
	461, 1252,
	462, 1252,
	463, 1252,
	464, 1252,
	465, 1252,
	467, 1252,
	469, 1252,
	470, 1252,
	471, 1252,
	472, 1252,
	473, 1252,
	474, 1252,
	475, 1252,
	476, 1252,
	477, 1252,
	478, 1252,
	479, 1252,
	480, 1252,
	481, 1252,
	482, 1252,
	483, 1252,
	484, 1252,
	486, 1252,
	487, 1252,
	489, 1252,
	490, 1252,
	492, 1252,
	493, 1252,
	494, 1252,
	495, 1252,
	496, 1252,
	497, 1252,
	498, 1252,
	499, 1252,
	500, 1252,
	502, 1252,
	503, 1252,
	504, 1252,
	505, 1252,
	506, 1252,
	508, 1252,
	510, 1252,
	511, 1252,
	512, 1252,
	513, 1252,
	514, 1252,
	515, 1252,
	517, 1252,
	518, 1252,
	519, 1252,
	520, 1252,
	522, 1252,
	523, 1252,
	526, 1252,
	527, 1252,
	528, 1252,
	529, 1252,
	530, 1252,
	531, 1252,
	532, 1252,
	534, 1252,
	537, 1252,
	538, 1252,
	539, 1252,
	540, 1252,
	541, 1252,
	542, 1252,
	544, 1252,
	545, 1252,
	546, 1252,
	547, 1252,
	549, 1252,
	554, 1252,
	555, 1252,
	556, 1252,
	557, 1252,
	558, 1252,
	559, 1252,
	-2, 0,
	-1, 747,
	186, 2260,
	507, 2260,
	567, 2260,
	586, 2260,
	-2, 0,
	-1, 748,
	186, 2366,
	507, 2366,
	567, 2366,
	586, 2366,
	-2, 0,
	-1, 749,
	186, 2247,
	507, 2247,
	567, 2247,
	586, 2247,
	-2, 0,
	-1, 751,
	186, 2498,
	507, 2498,
	567, 2498,
	586, 2498,
	-2, 0,
	-1, 753,
	186, 2538,
	507, 2538,
	567, 2538,
	586, 2538,
	-2, 0,
	-1, 760,
	186, 2393,
	507, 2393,
	567, 2393,
	586, 2393,
	-2, 682,
	-1, 793,
	586, 2196,
	589, 2196,
	-2, 955,
	-1, 794,
	586, 2198,
	589, 2198,
	-2, 956,
	-1, 795,
	586, 2197,
	589, 2197,
	-2, 957,
	-1, 796,
	589, 2123,
	-2, 958,
	-1, 819,
	182, 251,
	-2, 0,
	-1, 843,
	43, 2170,
	-2, 0,
	-1, 844,
	544, 1230,
	-2, 1025,
	-1, 860,
	4, 1632,
	21, 1632,
	22, 1632,
	23, 1632,
	24, 1632,
	25, 1632,
	26, 1632,
	27, 1632,
	29, 1632,
	30, 1632,
	36, 1632,
	41, 1632,
	42, 1632,
	44, 1632,
	45, 1632,
	46, 1632,
	47, 1632,
	48, 1632,
	49, 1632,
	50, 1632,
	51, 1632,
	53, 1632,
	54, 1632,
	55, 1632,
	56, 1632,
	58, 1632,
	59, 1632,
	60, 1632,
	61, 1632,
	62, 1632,
	63, 1632,
	64, 1632,
	68, 1632,
	69, 1632,
	70, 1632,
	71, 1632,
	73, 1632,
	74, 1632,
	75, 1632,
	79, 1632,
	80, 1632,
	81, 1632,
	82, 1632,
	83, 1632,
	84, 1632,
	85, 1632,
	88, 1632,
	89, 1632,
	90, 1632,
	91, 1632,
	92, 1632,
	94, 1632,
	96, 1632,
	97, 1632,
	98, 1632,
	99, 1632,
	100, 1632,
	101, 1632,
	103, 1632,
	104, 1632,
	105, 1632,
	107, 1632,
	108, 1632,
	109, 1632,
	117, 1632,
	118, 1632,
	119, 1632,
	120, 1632,
	121, 1632,
	123, 1632,
	124, 1632,
	125, 1632,
	127, 1632,
	128, 1632,
	129, 1632,
	131, 1632,
	132, 1632,
	133, 1632,
	135, 1632,
	136, 1632,
	137, 1632,
	140, 1632,
	141, 1632,
	142, 1632,
	144, 1632,
	145, 1632,
	147, 1632,
	148, 1632,
	149, 1632,
	151, 1632,
	152, 1632,
	153, 1632,
	154, 1632,
	155, 1632,
	156, 1632,
	157, 1632,
	158, 1632,
	159, 1632,
	160, 1632,
	161, 1632,
	162, 1632,
	163, 1632,
	164, 1632,
	165, 1632,
	166, 1632,
	168, 1632,
	174, 1632,
	175, 1632,
	176, 1632,
	177, 1632,
	181, 1632,
	183, 1632,
	184, 1632,
	188, 1632,
	189, 1632,
	190, 1632,
	191, 1632,
	192, 1632,
	193, 1632,
	194, 1632,
	195, 1632,
	196, 1632,
	197, 1632,
	198, 1632,
	199, 1632,
	200, 1632,
	202, 1632,
	203, 1632,
	205, 1632,
	206, 1632,
	208, 1632,
	209, 1632,
	210, 1632,
	211, 1632,
	212, 1632,
	213, 1632,
	214, 1632,
	215, 1632,
	216, 1632,
	218, 1632,
	219, 1632,
	221, 1632,
	222, 1632,
	223, 1632,
	224, 1632,
	225, 1632,
	229, 1632,
	230, 1632,
	231, 1632,
	232, 1632,
	233, 1632,
	236, 1632,
	237, 1632,
	238, 1632,
	240, 1632,
	242, 1632,
	243, 1632,
	245, 1632,
	247, 1632,
	248, 1632,
	249, 1632,
	251, 1632,
	255, 1632,
	256, 1632,
	257, 1632,
	258, 1632,
	259, 1632,
	260, 1632,
	262, 1632,
	263, 1632,
	264, 1632,
	266, 1632,
	267, 1632,
	269, 1632,
	270, 1632,
	273, 1632,
	277, 1632,
	278, 1632,
	279, 1632,
	282, 1632,
	283, 1632,
	284, 1632,
	285, 1632,
	287, 1632,
	288, 1632,
	289, 1632,
	290, 1632,
	291, 1632,
	292, 1632,
	293, 1632,
	294, 1632,
	295, 1632,
	296, 1632,
	297, 1632,
	298, 1632,
	299, 1632,
	300, 1632,
	301, 1632,
	302, 1632,
	303, 1632,
	304, 1632,
	305, 1632,
	306, 1632,
	307, 1632,
	308, 1632,
	310, 1632,
	312, 1632,
	313, 1632,
	314, 1632,
	315, 1632,
	316, 1632,
	317, 1632,
	318, 1632,
	319, 1632,
	320, 1632,
	321, 1632,
	322, 1632,
	323, 1632,
	325, 1632,
	326, 1632,
	328, 1632,
	330, 1632,
	331, 1632,
	333, 1632,
	334, 1632,
	335, 1632,
	336, 1632,
	337, 1632,
	340, 1632,
	344, 1632,
	345, 1632,
	346, 1632,
	349, 1632,
	350, 1632,
	351, 1632,
	353, 1632,
	355, 1632,
	356, 1632,
	357, 1632,
	358, 1632,
	359, 1632,
	360, 1632,
	361, 1632,
	362, 1632,
	363, 1632,
	364, 1632,
	365, 1632,
	366, 1632,
	368, 1632,
	369, 1632,
	370, 1632,
	371, 1632,
	372, 1632,
	373, 1632,
	374, 1632,
	375, 1632,
	376, 1632,
	377, 1632,
	378, 1632,
	379, 1632,
	380, 1632,
	381, 1632,
	382, 1632,
	384, 1632,
	385, 1632,
	387, 1632,
	388, 1632,
	389, 1632,
	390, 1632,
	391, 1632,
	392, 1632,
	393, 1632,
	394, 1632,
	395, 1632,
	396, 1632,
	397, 1632,
	398, 1632,
	400, 1632,
	402, 1632,
	403, 1632,
	404, 1632,
	409, 1632,
	411, 1632,
	412, 1632,
	413, 1632,
	414, 1632,
	415, 1632,
	416, 1632,
	417, 1632,
	418, 1632,
	419, 1632,
	421, 1632,
	422, 1632,
	423, 1632,
	425, 1632,
	426, 1632,
	427, 1632,
	428, 1632,
	429, 1632,
	430, 1632,
	432, 1632,
	433, 1632,
	434, 1632,
	435, 1632,
	436, 1632,
	437, 1632,
	438, 1632,
	439, 1632,
	440, 1632,
	441, 1632,
	442, 1632,
	443, 1632,
	445, 1632,
	446, 1632,
	447, 1632,
	448, 1632,
	449, 1632,
	450, 1632,
	452, 1632,
	453, 1632,
	454, 1632,
	455, 1632,
	456, 1632,
	457, 1632,
	459, 1632,
	460, 1632,
	461, 1632,
	462, 1632,
	463, 1632,
	464, 1632,
	465, 1632,
	467, 1632,
	469, 1632,
	470, 1632,
	471, 1632,
	472, 1632,
	473, 1632,
	474, 1632,
	475, 1632,
	476, 1632,
	477, 1632,
	478, 1632,
	479, 1632,
	480, 1632,
	481, 1632,
	482, 1632,
	483, 1632,
	484, 1632,
	486, 1632,
	487, 1632,
	489, 1632,
	490, 1632,
	492, 1632,
	493, 1632,
	494, 1632,
	495, 1632,
	496, 1632,
	497, 1632,
	498, 1632,
	499, 1632,
	500, 1632,
	502, 1632,
	503, 1632,
	504, 1632,
	505, 1632,
	506, 1632,
	508, 1632,
	510, 1632,
	511, 1632,
	512, 1632,
	513, 1632,
	514, 1632,
	515, 1632,
	517, 1632,
	518, 1632,
	519, 1632,
	520, 1632,
	522, 1632,
	523, 1632,
	526, 1632,
	527, 1632,
	528, 1632,
	529, 1632,
	530, 1632,
	531, 1632,
	532, 1632,
	534, 1632,
	537, 1632,
	538, 1632,
	539, 1632,
	540, 1632,
	541, 1632,
	542, 1632,
	544, 1632,
	545, 1632,
	546, 1632,
	547, 1632,
	549, 1632,
	554, 1632,
	555, 1632,
	556, 1632,
	557, 1632,
	558, 1632,
	559, 1632,
	-2, 0,
	-1, 868,
	259, 398,
	-2, 0,
	-1, 939,
	389, 849,
	450, 849,
	490, 849,
	512, 849,
	-2, 0,
	-1, 940,
	389, 848,
	450, 848,
	490, 848,
	512, 848,
	-2, 788,
	-1, 944,
	1, 895,
	583, 895,
	585, 895,
	587, 895,
	-2, 0,
	-1, 945,
	1, 823,
	583, 823,
	585, 823,
	587, 823,
	-2, 0,
	-1, 946,
	1, 827,
	583, 827,
	585, 827,
	587, 827,
	-2, 0,
	-1, 947,
	1, 954,
	182, 954,
	583, 954,
	585, 954,
	587, 954,
	-2, 0,
	-1, 955,
	1, 854,
	583, 854,
	585, 854,
	587, 854,
	-2, 0,
	-1, 961,
	1, 895,
	583, 895,
	585, 895,
	587, 895,
	-2, 0,
	-1, 962,
	1, 897,
	583, 897,
	585, 897,
	587, 897,
	-2, 0,
	-1, 963,
	1, 900,
	583, 900,
	585, 900,
	587, 900,
	-2, 0,
	-1, 969,
	1, 918,
	583, 918,
	585, 918,
	587, 918,
	-2, 0,
	-1, 970,
	1, 920,
	583, 920,
	585, 920,
	587, 920,
	-2, 0,
	-1, 975,
	1, 948,
	583, 948,
	585, 948,
	587, 948,
	-2, 0,
	-1, 1022,
	169, 1507,
	182, 1507,
	272, 1507,
	338, 1507,
	-2, 1443,
	-1, 1037,
	169, 1506,
	182, 1506,
	272, 1506,
	338, 1506,
	-2, 1440,
	-1, 1063,
	586, 2195,
	-2, 690,
	-1, 1091,
	5, 2187,
	584, 2185,
	-2, 2176,
	-1, 1099,
	5, 2208,
	584, 2205,
	-2, 2196,
	-1, 1100,
	5, 2209,
	584, 2206,
	-2, 2197,
	-1, 1108,
	586, 2193,
	-2, 2175,
	-1, 1109,
	584, 2621,
	-2, 2194,
	-1, 1132,
	584, 2620,
	-2, 2210,
	-1, 1133,
	5, 1707,
	-2, 2591,
	-1, 1134,
	5, 1708,
	-2, 2592,
	-1, 1135,
	5, 1709,
	-2, 2606,
	-1, 1136,
	5, 1710,
	-2, 2570,
	-1, 1137,
	5, 1711,
	-2, 2604,
	-1, 1138,
	5, 1719,
	-2, 2583,
	-1, 1139,
	5, 1706,
	-2, 2579,
	-1, 1140,
	5, 1706,
	-2, 2578,
	-1, 1141,
	5, 1706,
	-2, 2597,
	-1, 1142,
	5, 1717,
	-2, 2572,
	-1, 1143,
	5, 1722,
	-2, 2571,
	-1, 1144,
	5, 1724,
	-2, 2616,
	-1, 1147,
	5, 1746,
	-2, 2609,
	-1, 1148,
	5, 1738,
	-2, 2610,
	-1, 1149,
	5, 1746,
	-2, 2611,
	-1, 1150,
	5, 1742,
	-2, 2612,
	-1, 1151,
	5, 1692,
	-2, 2584,
	-1, 1152,
	5, 1693,
	-2, 2585,
	-1, 1153,
	5, 1694,
	-2, 2573,
	-1, 1181,
	5, 1729,
	-2, 2617,
	-1, 1182,
	5, 1730,
	-2, 2607,
	-1, 1183,
	5, 1731,
	545, 1731,
	-2, 2574,
	-1, 1184,
	5, 1732,
	545, 1732,
	-2, 2575,
	-1, 1221,
	584, 2205,
	-2, 2196,
	-1, 1222,
	584, 2206,
	-2, 2197,
	-1, 1322,
	186, 2538,
	507, 2538,
	567, 2538,
	586, 2538,
	-2, 0,
	-1, 1325,
	1, 668,
	587, 668,
	-2, 1359,
	-1, 1453,
	357, 2171,
	411, 2171,
	452, 2171,
	577, 2171,
	-2, 2161,
	-1, 1464,
	588, 2171,
	-2, 2172,
	-1, 1473,
	1, 1227,
	583, 1227,
	585, 1227,
	587, 1227,
	-2, 1492,
	-1, 1521,
	396, 1024,
	544, 1024,
	-2, 393,
	-1, 1538,
	43, 2169,
	-2, 990,
	-1, 1545,
	1, 1227,
	583, 1227,
	585, 1227,
	587, 1227,
	-2, 1492,
	-1, 1553,
	4, 1252,
	21, 1252,
	22, 1252,
	23, 1252,
	24, 1252,
	25, 1252,
	26, 1252,
	27, 1252,
	29, 1252,
	30, 1252,
	36, 1252,
	41, 1252,
	42, 1252,
	44, 1252,
	45, 1252,
	46, 1252,
	47, 1252,
	48, 1252,
	49, 1252,
	50, 1252,
	51, 1252,
	53, 1252,
	54, 1252,
	55, 1252,
	56, 1252,
	58, 1252,
	59, 1252,
	60, 1252,
	61, 1252,
	62, 1252,
	63, 1252,
	64, 1252,
	68, 1252,
	69, 1252,
	70, 1252,
	71, 1252,
	73, 1252,
	74, 1252,
	75, 1252,
	79, 1252,
	80, 1252,
	81, 1252,
	82, 1252,
	83, 1252,
	84, 1252,
	85, 1252,
	88, 1252,
	89, 1252,
	90, 1252,
	91, 1252,
	92, 1252,
	94, 1252,
	96, 1252,
	97, 1252,
	98, 1252,
	99, 1252,
	100, 1252,
	101, 1252,
	103, 1252,
	104, 1252,
	105, 1252,
	107, 1252,
	108, 1252,
	109, 1252,
	117, 1252,
	118, 1252,
	119, 1252,
	120, 1252,
	121, 1252,
	123, 1252,
	124, 1252,
	125, 1252,
	127, 1252,
	128, 1252,
	129, 1252,
	131, 1252,
	132, 1252,
	133, 1252,
	135, 1252,
	136, 1252,
	137, 1252,
	140, 1252,
	141, 1252,
	142, 1252,
	144, 1252,
	145, 1252,
	147, 1252,
	148, 1252,
	149, 1252,
	151, 1252,
	152, 1252,
	153, 1252,
	154, 1252,
	155, 1252,
	156, 1252,
	157, 1252,
	158, 1252,
	159, 1252,
	160, 1252,
	161, 1252,
	162, 1252,
	163, 1252,
	164, 1252,
	165, 1252,
	166, 1252,
	174, 1252,
	175, 1252,
	176, 1252,
	177, 1252,
	181, 1252,
	183, 1252,
	184, 1252,
	188, 1252,
	189, 1252,
	190, 1252,
	191, 1252,
	192, 1252,
	193, 1252,
	194, 1252,
	195, 1252,
	196, 1252,
	197, 1252,
	198, 1252,
	199, 1252,
	200, 1252,
	202, 1252,
	203, 1252,
	205, 1252,
	206, 1252,
	208, 1252,
	209, 1252,
	210, 1252,
	211, 1252,
	212, 1252,
	213, 1252,
	214, 1252,
	215, 1252,
	216, 1252,
	218, 1252,
	219, 1252,
	221, 1252,
	222, 1252,
	223, 1252,
	224, 1252,
	225, 1252,
	230, 1252,
	231, 1252,
	232, 1252,
	233, 1252,
	236, 1252,
	237, 1252,
	238, 1252,
	240, 1252,
	242, 1252,
	243, 1252,
	245, 1252,
	247, 1252,
	248, 1252,
	249, 1252,
	251, 1252,
	255, 1252,
	256, 1252,
	257, 1252,
	258, 1252,
	259, 1252,
	260, 1252,
	262, 1252,
	263, 1252,
	264, 1252,
	266, 1252,
	267, 1252,
	269, 1252,
	270, 1252,
	273, 1252,
	277, 1252,
	278, 1252,
	279, 1252,
	282, 1252,
	283, 1252,
	284, 1252,
	285, 1252,
	287, 1252,
	288, 1252,
	289, 1252,
	290, 1252,
	291, 1252,
	292, 1252,
	293, 1252,
	294, 1252,
	295, 1252,
	296, 1252,
	297, 1252,
	298, 1252,
	299, 1252,
	300, 1252,
	301, 1252,
	302, 1252,
	303, 1252,
	304, 1252,
	305, 1252,
	306, 1252,
	307, 1252,
	308, 1252,
	310, 1252,
	312, 1252,
	313, 1252,
	314, 1252,
	315, 1252,
	316, 1252,
	317, 1252,
	318, 1252,
	319, 1252,
	320, 1252,
	321, 1252,
	322, 1252,
	323, 1252,
	325, 1252,
	326, 1252,
	330, 1252,
	331, 1252,
	333, 1252,
	334, 1252,
	335, 1252,
	336, 1252,
	337, 1252,
	340, 1252,
	342, 1252,
	344, 1252,
	345, 1252,
	346, 1252,
	349, 1252,
	350, 1252,
	351, 1252,
	353, 1252,
	355, 1252,
	356, 1252,
	357, 1252,
	358, 1252,
	359, 1252,
	360, 1252,
	361, 1252,
	362, 1252,
	363, 1252,
	364, 1252,
	365, 1252,
	366, 1252,
	368, 1252,
	369, 1252,
	370, 1252,
	371, 1252,
	372, 1252,
	373, 1252,
	374, 1252,
	375, 1252,
	376, 1252,
	377, 1252,
	378, 1252,
	379, 1252,
	380, 1252,
	381, 1252,
	382, 1252,
	384, 1252,
	385, 1252,
	387, 1252,
	388, 1252,
	389, 1252,
	390, 1252,
	391, 1252,
	392, 1252,
	393, 1252,
	394, 1252,
	395, 1252,
	396, 1252,
	397, 1252,
	398, 1252,
	400, 1252,
	402, 1252,
	403, 1252,
	404, 1252,
	409, 1252,
	411, 1252,
	412, 1252,
	413, 1252,
	414, 1252,
	415, 1252,
	416, 1252,
	417, 1252,
	418, 1252,
	419, 1252,
	421, 1252,
	422, 1252,
	423, 1252,
	425, 1252,
	426, 1252,
	427, 1252,
	428, 1252,
	429, 1252,
	430, 1252,
	432, 1252,
	433, 1252,
	434, 1252,
	435, 1252,
	436, 1252,
	437, 1252,
	438, 1252,
	439, 1252,
	440, 1252,
	441, 1252,
	442, 1252,
	443, 1252,
	445, 1252,
	446, 1252,
	447, 1252,
	448, 1252,
	449, 1252,
	450, 1252,
	452, 1252,
	453, 1252,
	454, 1252,
	455, 1252,
	456, 1252,
	457, 1252,
	459, 1252,
	460, 1252,
	461, 1252,
	462, 1252,
	463, 1252,
	464, 1252,
	465, 1252,
	467, 1252,
	469, 1252,
	470, 1252,
	471, 1252,
	472, 1252,
	473, 1252,
	474, 1252,
	475, 1252,
	476, 1252,
	477, 1252,
	478, 1252,
	479, 1252,
	480, 1252,
	481, 1252,
	482, 1252,
	483, 1252,
	484, 1252,
	486, 1252,
	487, 1252,
	489, 1252,
	490, 1252,
	492, 1252,
	493, 1252,
	494, 1252,
	495, 1252,
	496, 1252,
	497, 1252,
	498, 1252,
	499, 1252,
	500, 1252,
	502, 1252,
	503, 1252,
	504, 1252,
	505, 1252,
	506, 1252,
	508, 1252,
	510, 1252,
	511, 1252,
	512, 1252,
	513, 1252,
	514, 1252,
	515, 1252,
	517, 1252,
	518, 1252,
	519, 1252,
	520, 1252,
	522, 1252,
	523, 1252,
	526, 1252,
	527, 1252,
	528, 1252,
	529, 1252,
	530, 1252,
	531, 1252,
	532, 1252,
	534, 1252,
	537, 1252,
	538, 1252,
	539, 1252,
	540, 1252,
	541, 1252,
	542, 1252,
	544, 1252,
	545, 1252,
	546, 1252,
	547, 1252,
	549, 1252,
	554, 1252,
	555, 1252,
	556, 1252,
	557, 1252,
	558, 1252,
	559, 1252,
	-2, 0,
	-1, 1576,
	1, 538,
	583, 538,
	585, 538,
	587, 538,
	-2, 1463,
	-1, 1579,
	4, 2615,
	11, 2615,
	12, 2615,
	14, 2615,
	15, 2615,
	16, 2615,
	17, 2615,
	18, 2615,
	19, 2615,
	21, 2615,
	22, 2615,
	23, 2615,
	24, 2615,
	25, 2615,
	26, 2615,
	27, 2615,
	29, 2615,
	30, 2615,
	33, 2615,
	34, 2615,
	36, 2615,
	38, 2615,
	41, 2615,
	42, 2615,
	44, 2615,
	45, 2615,
	46, 2615,
	47, 2615,
	48, 2615,
	49, 2615,
	50, 2615,
	51, 2615,
	53, 2615,
	54, 2615,
	55, 2615,
	56, 2615,
	58, 2615,
	59, 2615,
	60, 2615,
	61, 2615,
	62, 2615,
	63, 2615,
	64, 2615,
	68, 2615,
	69, 2615,
	70, 2615,
	71, 2615,
	73, 2615,
	74, 2615,
	75, 2615,
	76, 2615,
	79, 2615,
	80, 2615,
	81, 2615,
	82, 2615,
	83, 2615,
	84, 2615,
	85, 2615,
	86, 2615,
	88, 2615,
	89, 2615,
	90, 2615,
	91, 2615,
	92, 2615,
	94, 2615,
	95, 2615,
	96, 2615,
	97, 2615,
	98, 2615,
	99, 2615,
	100, 2615,
	101, 2615,
	103, 2615,
	104, 2615,
	105, 2615,
	106, 2615,
	107, 2615,
	108, 2615,
	109, 2615,
	117, 2615,
	118, 2615,
	119, 2615,
	120, 2615,
	121, 2615,
	123, 2615,
	124, 2615,
	125, 2615,
	127, 2615,
	128, 2615,
	129, 2615,
	131, 2615,
	132, 2615,
	133, 2615,
	135, 2615,
	136, 2615,
	137, 2615,
	140, 2615,
	141, 2615,
	142, 2615,
	144, 2615,
	145, 2615,
	147, 2615,
	148, 2615,
	149, 2615,
	151, 2615,
	152, 2615,
	153, 2615,
	154, 2615,
	155, 2615,
	156, 2615,
	157, 2615,
	158, 2615,
	159, 2615,
	160, 2615,
	161, 2615,
	162, 2615,
	163, 2615,
	164, 2615,
	165, 2615,
	166, 2615,
	170, 2615,
	171, 2615,
	172, 2615,
	173, 2615,
	174, 2615,
	175, 2615,
	176, 2615,
	177, 2615,
	180, 2615,
	181, 2615,
	183, 2615,
	184, 2615,
	187, 2615,
	188, 2615,
	189, 2615,
	190, 2615,
	191, 2615,
	192, 2615,
	193, 2615,
	194, 2615,
	195, 2615,
	196, 2615,
	197, 2615,
	198, 2615,
	199, 2615,
	200, 2615,
	202, 2615,
	203, 2615,
	205, 2615,
	206, 2615,
	208, 2615,
	209, 2615,
	210, 2615,
	211, 2615,
	212, 2615,
	213, 2615,
	214, 2615,
	215, 2615,
	216, 2615,
	217, 2615,
	218, 2615,
	219, 2615,
	220, 2615,
	221, 2615,
	222, 2615,
	223, 2615,
	224, 2615,
	225, 2615,
	227, 2615,
	228, 2615,
	230, 2615,
	231, 2615,
	232, 2615,
	233, 2615,
	235, 2615,
	236, 2615,
	237, 2615,
	238, 2615,
	240, 2615,
	242, 2615,
	243, 2615,
	244, 2615,
	245, 2615,
	246, 2615,
	247, 2615,
	248, 2615,
	249, 2615,
	250, 2615,
	251, 2615,
	253, 2615,
	254, 2615,
	255, 2615,
	256, 2615,
	257, 2615,
	258, 2615,
	259, 2615,
	260, 2615,
	262, 2615,
	263, 2615,
	264, 2615,
	266, 2615,
	267, 2615,
	268, 2615,
	269, 2615,
	270, 2615,
	271, 2615,
	273, 2615,
	277, 2615,
	278, 2615,
	279, 2615,
	282, 2615,
	283, 2615,
	284, 2615,
	285, 2615,
	286, 2615,
	287, 2615,
	288, 2615,
	289, 2615,
	290, 2615,
	291, 2615,
	292, 2615,
	293, 2615,
	294, 2615,
	295, 2615,
	296, 2615,
	297, 2615,
	298, 2615,
	299, 2615,
	300, 2615,
	301, 2615,
	302, 2615,
	303, 2615,
	304, 2615,
	305, 2615,
	306, 2615,
	307, 2615,
	308, 2615,
	310, 2615,
	311, 2615,
	312, 2615,
	313, 2615,
	314, 2615,
	315, 2615,
	316, 2615,
	317, 2615,
	318, 2615,
	319, 2615,
	320, 2615,
	321, 2615,
	322, 2615,
	323, 2615,
	325, 2615,
	326, 2615,
	329, 2615,
	330, 2615,
	331, 2615,
	333, 2615,
	334, 2615,
	335, 2615,
	336, 2615,
	337, 2615,
	340, 2615,
	344, 2615,
	345, 2615,
	346, 2615,
	347, 2615,
	349, 2615,
	350, 2615,
	351, 2615,
	353, 2615,
	355, 2615,
	356, 2615,
	357, 2615,
	358, 2615,
	359, 2615,
	360, 2615,
	361, 2615,
	362, 2615,
	363, 2615,
	364, 2615,
	365, 2615,
	366, 2615,
	368, 2615,
	369, 2615,
	370, 2615,
	371, 2615,
	372, 2615,
	373, 2615,
	374, 2615,
	375, 2615,
	376, 2615,
	377, 2615,
	378, 2615,
	379, 2615,
	380, 2615,
	381, 2615,
	382, 2615,
	384, 2615,
	385, 2615,
	387, 2615,
	388, 2615,
	389, 2615,
	390, 2615,
	391, 2615,
	392, 2615,
	393, 2615,
	394, 2615,
	395, 2615,
	396, 2615,
	397, 2615,
	398, 2615,
	400, 2615,
	402, 2615,
	403, 2615,
	404, 2615,
	409, 2615,
	410, 2615,
	411, 2615,
	412, 2615,
	413, 2615,
	414, 2615,
	415, 2615,
	416, 2615,
	417, 2615,
	418, 2615,
	419, 2615,
	421, 2615,
	422, 2615,
	423, 2615,
	424, 2615,
	425, 2615,
	426, 2615,
	427, 2615,
	428, 2615,
	429, 2615,
	430, 2615,
	431, 2615,
	432, 2615,
	433, 2615,
	434, 2615,
	435, 2615,
	436, 2615,
	437, 2615,
	438, 2615,
	439, 2615,
	440, 2615,
	441, 2615,
	442, 2615,
	443, 2615,
	445, 2615,
	446, 2615,
	447, 2615,
	448, 2615,
	449, 2615,
	450, 2615,
	452, 2615,
	453, 2615,
	454, 2615,
	455, 2615,
	456, 2615,
	457, 2615,
	458, 2615,
	459, 2615,
	460, 2615,
	461, 2615,
	462, 2615,
	463, 2615,
	464, 2615,
	465, 2615,
	467, 2615,
	469, 2615,
	470, 2615,
	471, 2615,
	472, 2615,
	473, 2615,
	474, 2615,
	475, 2615,
	476, 2615,
	477, 2615,
	478, 2615,
	479, 2615,
	480, 2615,
	481, 2615,
	482, 2615,
	483, 2615,
	484, 2615,
	486, 2615,
	487, 2615,
	489, 2615,
	490, 2615,
	492, 2615,
	493, 2615,
	494, 2615,
	495, 2615,
	496, 2615,
	497, 2615,
	498, 2615,
	499, 2615,
	500, 2615,
	502, 2615,
	503, 2615,
	504, 2615,
	505, 2615,
	506, 2615,
	508, 2615,
	510, 2615,
	511, 2615,
	512, 2615,
	513, 2615,
	514, 2615,
	515, 2615,
	517, 2615,
	518, 2615,
	519, 2615,
	520, 2615,
	522, 2615,
	523, 2615,
	526, 2615,
	527, 2615,
	528, 2615,
	529, 2615,
	530, 2615,
	531, 2615,
	532, 2615,
	534, 2615,
	537, 2615,
	538, 2615,
	539, 2615,
	540, 2615,
	541, 2615,
	542, 2615,
	544, 2615,
	545, 2615,
	546, 2615,
	547, 2615,
	549, 2615,
	554, 2615,
	555, 2615,
	556, 2615,
	557, 2615,
	558, 2615,
	559, 2615,
	560, 2615,
	562, 2615,
	565, 2615,
	566, 2615,
	567, 2615,
	568, 2615,
	569, 2615,
	570, 2615,
	572, 2615,
	573, 2615,
	574, 2615,
	575, 2615,
	576, 2615,
	577, 2615,
	578, 2615,
	579, 2615,
	580, 2615,
	582, 2615,
	585, 2615,
	586, 2615,
	588, 2615,
	589, 2615,
	-2, 0,
	-1, 1584,
	186, 2498,
	507, 2498,
	567, 2498,
	586, 2498,
	-2, 0,
	-1, 1633,
	389, 849,
	450, 849,
	490, 849,
	512, 849,
	-2, 0,
	-1, 1660,
	1, 844,
	583, 844,
	585, 844,
	587, 844,
	-2, 0,
	-1, 1661,
	1, 882,
	583, 882,
	585, 882,
	587, 882,
	-2, 0,
	-1, 1662,
	1, 890,
	583, 890,
	585, 890,
	587, 890,
	-2, 0,
	-1, 1665,
	1, 853,
	583, 853,
	585, 853,
	587, 853,
	-2, 0,
	-1, 1667,
	1, 857,
	583, 857,
	585, 857,
	587, 857,
	-2, 0,
	-1, 1673,
	1, 864,
	583, 864,
	585, 864,
	587, 864,
	-2, 0,
	-1, 1702,
	1, 2560,
	583, 2560,
	585, 2560,
	586, 2560,
	587, 2560,
	-2, 916,
	-1, 1703,
	1, 2495,
	583, 2495,
	585, 2495,
	586, 2495,
	587, 2495,
	-2, 917,
	-1, 1707,
	1, 929,
	583, 929,
	585, 929,
	587, 929,
	-2, 0,
	-1, 1722,
	1, 1354,
	587, 1354,
	-2, 1359,
	-1, 1725,
	169, 1506,
	182, 1506,
	272, 1506,
	338, 1506,
	-2, 1444,
	-1, 1819,
	150, 1465,
	169, 1465,
	182, 1465,
	239, 1465,
	272, 1465,
	338, 1465,
	348, 1465,
	524, 1465,
	-2, 1907,
	-1, 1879,
	585, 2057,
	-2, 0,
	-1, 1914,
	150, 1465,
	169, 1465,
	182, 1465,
	239, 1465,
	272, 1465,
	338, 1465,
	348, 1465,
	524, 1465,
	-2, 1593,
	-1, 1948,
	507, 2495,
	586, 2495,
	589, 2495,
	-2, 0,
	-1, 1965,
	584, 1734,
	-2, 1722,
	-1, 1996,
	186, 2495,
	586, 2495,
	589, 2495,
	-2, 0,
	-1, 2044,
	1, 670,
	587, 670,
	-2, 1359,
	-1, 2170,
	220, 252,
	-2, 2204,
	-1, 2171,
	220, 253,
	-2, 301,
	-1, 2275,
	1, 846,
	583, 846,
	585, 846,
	587, 846,
	-2, 0,
	-1, 2276,
	1, 884,
	583, 884,
	585, 884,
	587, 884,
	-2, 0,
	-1, 2277,
	1, 892,
	583, 892,
	585, 892,
	587, 892,
	-2, 0,
	-1, 2278,
	1, 931,
	583, 931,
	585, 931,
	587, 931,
	-2, 0,
	-1, 2311,
	1, 866,
	583, 866,
	585, 866,
	587, 866,
	-2, 0,
	-1, 2367,
	429, 1533,
	430, 1533,
	-2, 1767,
	-1, 2398,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1787,
	-1, 2399,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1788,
	-1, 2400,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1789,
	-1, 2401,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1790,
	-1, 2402,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1791,
	-1, 2403,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1792,
	-1, 2404,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1793,
	-1, 2405,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1794,
	-1, 2417,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1806,
	-1, 2418,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1807,
	-1, 2419,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1808,
	-1, 2422,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1813,
	-1, 2428,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1817,
	-1, 2430,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1825,
	-1, 2431,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1826,
	-1, 2432,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1827,
	-1, 2433,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1828,
	-1, 2569,
	5, 2208,
	186, 2068,
	584, 2205,
	-2, 2196,
	-1, 2570,
	186, 2069,
	-2, 2566,
	-1, 2571,
	186, 2070,
	-2, 2392,
	-1, 2572,
	186, 2071,
	-2, 2278,
	-1, 2573,
	186, 2072,
	-2, 2332,
	-1, 2574,
	186, 2073,
	-2, 2377,
	-1, 2575,
	186, 2074,
	-2, 2493,
	-1, 2576,
	186, 2075,
	-2, 1890,
	-1, 2646,
	1, 1594,
	2, 1594,
	106, 1594,
	150, 1594,
	169, 1594,
	182, 1594,
	187, 1594,
	204, 1594,
	207, 1594,
	235, 1594,
	239, 1594,
	250, 1594,
	268, 1594,
	272, 1594,
	311, 1594,
	338, 1594,
	342, 1594,
	348, 1594,
	420, 1594,
	424, 1594,
	524, 1594,
	535, 1594,
	551, 1594,
	552, 1594,
	553, 1594,
	563, 1594,
	583, 1594,
	585, 1594,
	587, 1594,
	589, 1594,
	-2, 1593,
	-1, 2659,
	584, 2177,
	-2, 2191,
	-1, 2661,
	1, 318,
	551, 318,
	-2, 1492,
	-1, 2688,
	584, 1733,
	-2, 1723,
	-1, 2865,
	1, 1227,
	583, 1227,
	585, 1227,
	587, 1227,
	-2, 1492,
	-1, 3034,
	343, 1536,
	-2, 2605,
	-1, 3035,
	343, 1537,
	-2, 2478,
	-1, 3039,
	429, 2134,
	430, 2134,
	-2, 1888,
	-1, 3040,
	429, 2138,
	430, 2138,
	-2, 1889,
	-1, 3041,
	429, 2135,
	430, 2135,
	-2, 1888,
	-1, 3042,
	429, 2139,
	430, 2139,
	-2, 1889,
	-1, 3055,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1815,
	-1, 3056,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1819,
	-1, 3062,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1821,
	-1, 3278,
	1, 667,
	583, 667,
	585, 667,
	587, 667,
	-2, 1359,
	-1, 3434,
	43, 2169,
	-2, 991,
	-1, 3439,
	1, 1227,
	583, 1227,
	585, 1227,
	587, 1227,
	-2, 1492,
	-1, 3544,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1823,
	-1, 3551,
	244, 0,
	246, 0,
	329, 0,
	-2, 1842,
	-1, 3618,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1871,
	-1, 3619,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1872,
	-1, 3620,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1873,
	-1, 3624,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1877,
	-1, 3625,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1878,
	-1, 3626,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1879,
	-1, 3672,
	584, 2178,
	-2, 2192,
	-1, 3836,
	586, 2723,
	-2, 1418,
	-1, 3894,
	244, 0,
	246, 0,
	329, 0,
	-2, 1843,
	-1, 3897,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1846,
	-1, 3898,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1848,
	-1, 3990,
	586, 2193,
	-2, 1262,
	-1, 4136,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1847,
	-1, 4137,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1849,
	-1, 4148,
	244, 0,
	-2, 1880,
	-1, 4318,
	244, 0,
	-2, 1881,
	-1, 4500,
	50, 0,
	217, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 2569,
}

const sqlPrivate = 57344

const sqlLast = 123548

var sqlAct = [...]int{
	266, 4596, 3423, 2930, 4682, 3189, 4493, 4345, 4552, 2943,
	4510, 1485, 4353, 4191, 4499, 4375, 4492, 4481, 4623, 2167,
	3877, 3422, 4396, 2092, 4371, 4432, 4468, 4449, 4452, 4512,
	4565, 4511, 3583, 2750, 2794, 4271, 4240, 4177, 4247, 4322,
	4053, 4092, 2814, 1225, 4087, 4498, 4196, 4157, 4033, 4074,
	2377, 3536, 1294, 4125, 3986, 3828, 4256, 4067, 3300, 1214,
	3456, 3820, 1287, 1091, 3763, 3987, 1298, 3048, 4076, 3971,
	1047, 1734, 4285, 2601, 2445, 795, 2251, 4097, 3783, 3408,
	3785, 3450, 2385, 2242, 3418, 3801, 3360, 3303, 1358, 3495,
	2100, 2952, 2378, 4153, 1920, 2827, 2919, 3497, 758, 2889,
	1952, 795, 2965, 3204, 3289, 3675, 2954, 2900, 1450, 1600,
	3232, 3876, 3195, 2916, 2962, 3212, 870, 2249, 2945, 2951,
	3193, 1889, 2162, 1038, 4, 258, 2914, 2931, 2161, 2111,
	3643, 2215, 3933, 4597, 3322, 1046, 175, 2752, 2487, 3171,
	1827, 3172, 2458, 4323, 2639, 3032, 3297, 1865, 2382, 2893,
	2641, 2961, 1953, 1292, 1540, 2842, 1457, 790, 2489, 2138,
	2157, 108, 1341, 2145, 2901, 2080, 2638, 1205, 1095, 1098,
	1722, 2024, 1266, 2026, 2084, 2793, 3239, 2442, 2478, 2070,
	2349, 2366, 1289, 260, 1890, 2347, 3420, 1577, 1100, 1280,
	2672, 2619, 792, 2202, 1277, 2924, 1543, 2775, 1909, 796,
	675, 1051, 797, 4397, 697, 2598, 2955, 1598, 259, 1327,
	2738, 689, 2671, 2628, 2481, 1187, 1641, 1906, 863, 1899,
	1208, 1860, 2459, 2565, 2531, 1735, 1736, 1812, 2609, 175,
	184, 2348, 1660, 1222, 1673, 2201, 2350, 185, 752, 1204,
	740, 2228, 1575, 1480, 4553, 2099, 1568, 2002, 1999, 2371,
	1076, 692, 44, 43, 41, 1210, 32, 30, 801, 28,
	1185, 1741, 1721, 3083, 933, 1491, 700, 3657, 715, 3658,
	953, 3079, 4695, 1666, 844, 3191, 2618, 1042, 2015, 2015,
	3466, 1484, 2015, 804, 801, 73, 3262, 3475, 1336, 3954,
	2015, 2015, 2015, 885, 4685, 4670, 1220, 1097, 3475, 2618,
	4669, 4659, 74, 4641, 2618, 2176, 4639, 4195, 4584, 804,
	4195, 4541, 2176, 3465, 2250, 4542, 4534, 4532, 78, 4529,
	2618, 2618, 4526, 4530, 4496, 2176, 4527, 4495, 2176, 2001,
	4494, 2176, 4489, 4488, 2036, 4479, 2036, 2036, 4477, 4195,
	4474, 2176, 4195, 4447, 4259, 1202, 4421, 4195, 1043, 4414,
	2679, 3144, 3145, 2618, 1042, 4413, 4408, 4407, 87, 2618,
	4195, 4195, 4401, 3247, 3261, 4367, 2176, 1749, 1750, 4044,
	4320, 2611, 3047, 4302, 2679, 1188, 1188, 3863, 4299, 4296,
	4249, 1244, 2176, 4195, 4250, 1749, 1750, 4212, 4211, 4202,
	1780, 2176, 2176, 2176, 2618, 4201, 4194, 1752, 868, 4195,
	4195, 4164, 1217, 4138, 1336, 2176, 1023, 2679, 1780, 1191,
	4116, 1192, 107, 1022, 2036, 1752, 4105, 93, 104, 4028,
	3475, 4011, 4422, 2618, 3896, 2618, 3159, 3844, 2679, 2699,
	3647, 3492, 1751, 864, 93, 3838, 3799, 3667, 3092, 3492,
	3800, 3668, 1771, 3665, 3093, 2033, 2675, 3666, 1032, 1037,
	1751, 1768, 4324, 1493, 3650, 3567, 3144, 3145, 2618, 2176,
	73, 3563, 867, 866, 3491, 2618, 1237, 3482, 3492, 1749,
	1750, 3483, 39, 4315, 3188, 94, 3183, 74, 2618, 1074,
	2618, 3182, 2176, 3144, 3145, 2618, 1189, 3135, 4303, 4259,
	3133, 3136, 1780, 78, 3134, 230, 3125, 3123, 3094, 1752,
	3126, 2618, 2618, 2969, 2941, 3890, 2940, 2036, 2238, 2722,
	2238, 2698, 2678, 2618, 2036, 2669, 2679, 2663, 2618, 2618,
	3150, 2176, 3647, 2610, 2484, 1607, 1774, 1775, 1776, 1777,
	1216, 2617, 4085, 87, 1751, 2618, 1757, 2237, 4044, 4012,
	3863, 2238, 232, 3483, 1771, 2584, 2817, 2737, 1238, 2049,
	2014, 2030, 2033, 2895, 1757, 2175, 2837, 2735, 1885, 1749,
	1750, 1479, 1782, 1783, 1784, 1792, 1793, 1794, 2104, 3746,
	3539, 3515, 1907, 868, 2150, 3467, 2655, 2654, 1643, 2653,
	2652, 1785, 1780, 1779, 1781, 3144, 3145, 107, 2651, 1752,
	1193, 231, 93, 104, 3468, 3082, 1190, 1031, 1798, 1030,
	2677, 1779, 1781, 1029, 224, 1028, 1027, 1026, 230, 1766,
	1767, 3009, 2485, 225, 1025, 1021, 1020, 1749, 1750, 1019,
	97, 1018, 1017, 1016, 1751, 3150, 3160, 1015, 1774, 1775,
	1776, 1777, 2016, 2016, 1771, 186, 2016, 1014, 1757, 1013,
	1012, 1011, 1772, 1768, 2016, 2016, 2016, 1752, 1010, 1593,
	94, 1009, 3150, 1505, 1499, 232, 1008, 1007, 1006, 1005,
	1772, 931, 930, 929, 928, 927, 926, 925, 924, 923,
	922, 921, 183, 100, 920, 103, 919, 918, 917, 916,
	915, 3949, 1751, 3465, 914, 1779, 1781, 1484, 913, 1238,
	1492, 912, 911, 910, 2486, 909, 2483, 908, 907, 906,
	230, 905, 904, 903, 231, 1493, 902, 901, 869, 900,
	899, 898, 1218, 148, 888, 230, 887, 230, 1774, 1775,
	1776, 1777, 883, 882, 876, 875, 862, 861, 1757, 1611,
	148, 3160, 818, 1303, 1100, 817, 2013, 816, 815, 807,
	806, 805, 773, 764, 1772, 763, 762, 232, 186, 746,
	254, 2514, 253, 252, 3150, 251, 250, 1100, 3160, 249,
	248, 1100, 232, 247, 232, 1789, 1778, 2033, 1799, 246,
	245, 3161, 3908, 151, 2610, 1779, 1781, 1361, 244, 243,
	242, 1361, 2500, 241, 1238, 240, 1757, 1773, 187, 1303,
	239, 238, 1795, 237, 1796, 97, 231, 236, 235, 234,
	233, 1766, 1767, 2709, 2014, 1773, 3688, 2033, 3661, 224,
	1100, 231, 1100, 231, 1100, 2030, 2698, 2342, 225, 1787,
	1303, 1668, 3493, 4099, 224, 3235, 224, 1340, 3105, 1493,
	1331, 1345, 3088, 225, 1772, 225, 2992, 2876, 2683, 3186,
	186, 2660, 2498, 2645, 2488, 1465, 1303, 183, 100, 1910,
	103, 1868, 2927, 2909, 2245, 186, 1288, 186, 1867, 4517,
	3160, 2078, 1597, 2035, 1504, 1498, 1303, 1933, 1778, 1838,
	1493, 1303, 1748, 3144, 3145, 230, 3161, 1797, 3187, 1100,
	1871, 1100, 4497, 869, 1487, 1303, 1829, 1347, 148, 1773,
	1224, 1100, 4476, 1100, 1483, 1786, 4382, 4327, 1868, 1271,
	1274, 4312, 4306, 3161, 1453, 1867, 4304, 1464, 1288, 4189,
	1549, 1552, 3155, 3153, 3154, 3146, 3147, 3148, 3149, 3151,
	3152, 1284, 232, 4152, 1325, 1769, 1765, 1866, 1762, 1760,
	1761, 1753, 1754, 1755, 1756, 1758, 1759, 4106, 2244, 1303,
	4084, 1471, 3959, 1354, 1311, 1447, 1452, 3931, 151, 1753,
	1754, 1755, 1756, 1758, 1759, 1460, 3930, 1100, 1778, 2482,
	1100, 3924, 3923, 187, 3922, 1045, 3915, 230, 3914, 1455,
	3912, 231, 3907, 1288, 1288, 3144, 3145, 3904, 3903, 1773,
	3804, 3798, 801, 3692, 224, 2692, 1829, 3691, 3690, 3671,
	1320, 1580, 1582, 225, 3638, 3637, 3636, 1538, 1482, 1749,
	1750, 1481, 175, 175, 3559, 3161, 1790, 804, 3555, 3230,
	3179, 1612, 3170, 3143, 232, 865, 1836, 3155, 3153, 3154,
	3146, 3147, 3148, 3149, 3151, 3152, 4101, 1043, 1831, 1752,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 1830,
	1555, 1828, 3150, 3253, 3140, 3153, 3154, 3146, 3147, 3148,
	3149, 3151, 3152, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	3139, 73, 3137, 231, 1751, 3132, 3744, 3131, 1331, 3130,
	3127, 1331, 3124, 3104, 3087, 3080, 224, 2942, 74, 1059,
	2646, 2471, 1748, 1201, 1100, 225, 2218, 2183, 2181, 1747,
	1100, 230, 4689, 4633, 78, 230, 230, 2911, 4632, 3805,
	1571, 4598, 4551, 4549, 1226, 3585, 4439, 186, 1788, 4374,
	4363, 4360, 4359, 1763, 1764, 1770, 1791, 1769, 1765, 4358,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 4339,
	3144, 3145, 230, 3918, 87, 3184, 4326, 3917, 232, 4325,
	4300, 2454, 232, 232, 3150, 1592, 1726, 4284, 3154, 3146,
	3147, 3148, 3149, 3151, 3152, 4283, 1720, 1606, 2681, 2448,
	4269, 4266, 4265, 4260, 4208, 4185, 4150, 4133, 1757, 4132,
	230, 230, 4113, 4112, 868, 4070, 1818, 4045, 1682, 232,
	3948, 1753, 1754, 1755, 1756, 1758, 1759, 231, 107, 3929,
	4328, 231, 231, 93, 104, 1100, 1100, 1100, 3864, 1617,
	224, 1100, 3858, 3855, 224, 224, 3732, 1310, 1222, 225,
	1222, 1634, 3731, 225, 225, 3715, 3714, 232, 232, 3712,
	3653, 1669, 3641, 3550, 3805, 1361, 1816, 3494, 231, 3476,
	3442, 186, 1887, 3377, 1100, 186, 186, 795, 1936, 3335,
	3302, 224, 3255, 1970, 795, 1043, 3109, 1303, 3108, 1949,
	225, 94, 3103, 3071, 2888, 1874, 1997, 1723, 1873, 1872,
	1869, 1749, 1750, 1569, 3227, 1861, 231, 231, 4100, 1859,
	1731, 1220, 186, 1220, 1896, 1730, 2690, 1023, 2689, 224,
	224, 2657, 2650, 1490, 1022, 1497, 1725, 1503, 225, 225,
	2910, 1752, 2616, 1940, 2496, 1932, 1888, 1870, 1727, 3150,
	1883, 1882, 1744, 1745, 230, 1749, 1750, 1944, 1881, 1880,
	2926, 186, 1879, 1303, 1878, 1877, 1876, 1893, 1894, 1875,
	1100, 1856, 1917, 1855, 1303, 1854, 1751, 1853, 1780, 1852,
	1851, 1850, 1849, 4073, 2513, 1752, 2246, 1188, 1848, 1847,
	1846, 1845, 1100, 1844, 1843, 1842, 1831, 175, 1361, 1817,
	1815, 232, 1591, 1810, 1596, 1319, 1464, 1242, 1233, 3955,
	3900, 2094, 1862, 1863, 1605, 2499, 1610, 3687, 3664, 3656,
	1751, 1043, 3091, 2648, 2067, 4169, 3957, 1217, 3686, 1217,
	1574, 1830, 3251, 3144, 3145, 1813, 230, 2069, 3471, 1928,
	1344, 4014, 4630, 2042, 4622, 2815, 97, 4361, 1939, 1331,
	231, 2069, 4261, 1464, 1941, 3160, 2069, 230, 4252, 1918,
	4251, 4104, 2076, 224, 4047, 4046, 2041, 1937, 1342, 4013,
	801, 3951, 225, 1908, 3867, 2497, 3866, 801, 1667, 1945,
	1915, 3865, 3659, 232, 3478, 3477, 1993, 3146, 3147, 3148,
	3149, 3151, 3152, 2018, 186, 804, 4257, 1886, 183, 100,
	1343, 103, 804, 2798, 232, 2104, 1336, 1910, 4307, 1337,
	3537, 1718, 4305, 1912, 1927, 1926, 1925, 2147, 1923, 1922,
	3808, 1921, 3758, 3129, 1757, 3128, 230, 3053, 1303, 1303,
	1336, 3369, 231, 2780, 869, 1868, 1339, 2055, 1361, 148,
	1950, 4188, 1867, 2044, 3729, 224, 3338, 3425, 3304, 3424,
	1633, 1336, 3487, 231, 225, 1216, 1840, 1216, 1003, 2040,
	1642, 2267, 4563, 2243, 4248, 4537, 224, 4154, 1851, 1851,
	4522, 1779, 1781, 232, 4509, 225, 186, 3409, 2966, 1643,
	2163, 3812, 1683, 3795, 3760, 3755, 3737, 3512, 3276, 3097,
	3191, 3148, 3149, 3151, 3152, 3587, 2132, 186, 2137, 151,
	3161, 2142, 2823, 1004, 2479, 4518, 4531, 2688, 2777, 1884,
	1864, 2038, 3416, 2212, 187, 1755, 1756, 1758, 1759, 1548,
	1476, 2047, 231, 1314, 1270, 4354, 1333, 2834, 4528, 3461,
	1772, 4204, 1303, 3707, 1303, 224, 1303, 2168, 2173, 2072,
	2062, 2831, 4088, 4446, 225, 1837, 4181, 2829, 4336, 3307,
	3724, 2949, 1303, 1303, 1574, 3999, 2923, 3401, 4581, 3531,
	4582, 2822, 3997, 1303, 2754, 2110, 186, 2776, 3252, 1573,
	1621, 2357, 4519, 3280, 3773, 1303, 857, 1303, 1303, 1303,
	4230, 4001, 2219, 1523, 1515, 4612, 1001, 999, 2723, 997,
	2741, 1680, 2741, 995, 2165, 4684, 1477, 4223, 4214, 3983,
	795, 2208, 992, 4042, 2253, 2739, 1338, 2739, 2317, 2130,
	4041, 2315, 3771, 801, 3770, 1200, 3762, 3752, 2211, 3751,
	3749, 3748, 3736, 3702, 2213, 1102, 3701, 3405, 2225, 1482,
	2355, 3404, 1481, 3979, 1924, 3246, 3102, 1218, 804, 1218,
	3101, 3772, 3100, 3710, 3146, 3147, 3148, 3149, 3151, 3152,
	2129, 2056, 3099, 2682, 984, 2248, 2141, 3057, 2324, 2266,
	2840, 2839, 2836, 1334, 1145, 2484, 1681, 2825, 2813, 1524,
	2812, 2233, 1335, 2174, 1093, 1773, 2808, 2757, 2807, 2271,
	858, 2806, 2785, 2784, 2745, 2670, 2429, 3980, 1100, 1344,
	1100, 1679, 1724, 1043, 3282, 1043, 2527, 1100, 2222, 2526,
	1970, 1970, 1361, 2920, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 2235,
	1100, 2194, 1100, 1100, 1100, 1100, 2193, 4205, 2387, 1343,
	1619, 2101, 1571, 2485, 2230, 2259, 2230, 2359, 2231, 2227,
	2254, 2440, 4182, 3996, 1100, 2061, 2060, 1100, 1100, 2069,
	2071, 2192, 2356, 1320, 2239, 1100, 2240, 2346, 3304, 1100,
	1759, 1100, 1100, 801, 2097, 2778, 4613, 1519, 3367, 1361,
	2438, 2778, 2293, 1573, 2243, 1100, 1100, 1100, 1100, 2258,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 804, 2357,
	1614, 2045, 3964, 2102, 2103, 3513, 1344, 2275, 1761, 1753,
	1754, 1755, 1756, 1758, 1759, 2334, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 2486, 1561, 2483, 1560, 1100,
	2460, 2461, 1336, 2098, 3337, 2354, 2730, 4131, 1041, 2104,
	2782, 1222, 2383, 2384, 2460, 2476, 989, 1559, 1361, 1558,
	2311, 1898, 1478, 1256, 2331, 2339, 2263, 1222, 2355, 2370,
	1716, 4617, 1532, 4347, 3963, 2756, 1343, 2135, 2972, 1326,
	2522, 2444, 2802, 1100, 1361, 2283, 2444, 2064, 3975, 1537,
	1696, 2367, 1928, 3976, 2662, 2768, 2479, 2321, 3045, 2568,
	2568, 2582, 3152, 2460, 2795, 2796, 2602, 2604, 2345, 2351,
	2358, 1664, 2608, 2344, 1220, 2343, 4015, 1692, 2795, 2796,
	3068, 2475, 1023, 2795, 2796, 1023, 1023, 1043, 1615, 2374,
	1220, 2434, 2375, 2376, 2333, 1635, 1043, 1040, 3030, 1337,
	1043, 1664, 1902, 1678, 3978, 3368, 3995, 2353, 2280, 3066,
	2435, 687, 3780, 2633, 4643, 2436, 2658, 4581, 2020, 2441,
	3981, 2022, 2452, 2625, 2274, 4515, 4618, 2027, 1717, 2450,
	2524, 2029, 2276, 860, 859, 2525, 2032, 682, 2528, 1917,
	2529, 2530, 1729, 3012, 3998, 2488, 1188, 1303, 1303, 2456,
	1905, 2767, 2833, 4349, 2284, 2232, 3521, 1631, 3520, 4626,
	3006, 2066, 1661, 2473, 1318, 1900, 3781, 1337, 2488, 1544,
	2356, 1643, 1663, 3279, 771, 3354, 4040, 2755, 3750, 3733,
	1217, 2740, 1288, 1903, 2832, 2112, 2676, 3044, 1043, 1361,
	2585, 2636, 3576, 1643, 2277, 2647, 1217, 175, 2830, 2065,
	2718, 2624, 1663, 2712, 2828, 896, 1042, 3779, 2116, 2564,
	2577, 2606, 2593, 3721, 3747, 2632, 1333, 2637, 1542, 2744,
	2643, 2644, 1675, 1970, 1662, 2684, 1901, 2630, 2631, 3355,
	1288, 2626, 2614, 2615, 4593, 1331, 4620, 855, 2744, 854,
	2673, 3403, 1870, 2354, 979, 3365, 3977, 1915, 1229, 3346,
	3063, 2835, 3015, 2805, 2783, 993, 993, 3206, 993, 2085,
	2482, 1361, 994, 1620, 2086, 2113, 1288, 1288, 1036, 4130,
	3353, 993, 2781, 1821, 3064, 1303, 2316, 1826, 3069, 2314,
	2148, 2340, 2720, 769, 1333, 3984, 2330, 2746, 2695, 4601,
	1227, 1100, 1100, 2691, 1100, 1693, 1338, 2714, 4516, 2437,
	2703, 2180, 2179, 3347, 2706, 808, 2707, 3993, 1216, 2439,
	3573, 1862, 1863, 4600, 2721, 2668, 795, 2694, 1303, 1518,
	2697, 1618, 2892, 979, 1216, 4646, 2743, 2715, 2711, 4570,
	2144, 3719, 2713, 1231, 3037, 3038, 2867, 3882, 3881, 1904,
	889, 2803, 2488, 3458, 3345, 4428, 4673, 1036, 1521, 1303,
	2787, 2015, 4483, 1334, 4484, 2143, 2332, 1034, 1453, 979,
	980, 1303, 1335, 1303, 1338, 4173, 2816, 3291, 2724, 2907,
	3459, 2117, 2148, 2810, 2771, 2788, 2934, 2087, 1303, 3734,
	2809, 2160, 1039, 1036, 3014, 1464, 2124, 2786, 2139, 3983,
	2868, 2963, 3574, 1902, 2091, 1255, 2871, 4514, 2742, 1230,
	2804, 2873, 2749, 2797, 2799, 2800, 2801, 2759, 2762, 4624,
	2993, 4355, 2994, 4348, 3011, 2151, 2282, 2102, 2103, 1100,
	2158, 1334, 3380, 3979, 4619, 3281, 1544, 3972, 4369, 1035,
	1335, 2866, 1694, 2826, 877, 2159, 1690, 2118, 2119, 980,
	2125, 1905, 4418, 736, 3970, 2811, 1240, 2140, 3458, 2821,
	3205, 2973, 2974, 3974, 2903, 2136, 2627, 2726, 3065, 1616,
	3994, 2114, 2980, 2981, 2982, 2426, 2088, 2093, 3067, 801,
	2967, 2948, 2938, 1100, 1903, 980, 2728, 3980, 683, 1100,
	1100, 2123, 2970, 175, 2107, 1482, 3059, 2975, 2874, 2976,
	1218, 2443, 3505, 770, 804, 2936, 2073, 2074, 4062, 801,
	2886, 3498, 2741, 2115, 1857, 990, 1218, 2896, 2897, 3249,
	2148, 2729, 4569, 4625, 3013, 2095, 3319, 2760, 3878, 3973,
	1464, 1695, 4143, 4592, 804, 4466, 2661, 705, 1288, 2918,
	3323, 2727, 1336, 2152, 1100, 1100, 2939, 2929, 2108, 4127,
	1100, 772, 2488, 2950, 4457, 768, 4544, 4627, 1691, 2089,
	981, 809, 810, 1100, 1100, 684, 4545, 4025, 4294, 1100,
	1100, 2279, 2451, 1809, 2937, 1100, 2341, 1464, 2990, 1464,
	2968, 3292, 3318, 2470, 1100, 1100, 1100, 2273, 897, 2106,
	1100, 3325, 3107, 2989, 2995, 2629, 890, 891, 4647, 1042,
	1100, 2642, 3090, 2996, 1728, 2998, 2095, 3000, 3500, 3002,
	1336, 4634, 3589, 685, 4072, 686, 3872, 1100, 2987, 1630,
	1632, 4286, 3060, 3499, 3683, 3017, 1317, 3019, 2120, 4077,
	3025, 2997, 3036, 2999, 4287, 3001, 1245, 4416, 3883, 981,
	1904, 3533, 2424, 3028, 3020, 2427, 3027, 3022, 4078, 1648,
	3026, 3720, 4376, 4513, 3324, 3010, 3285, 2899, 3085, 3086,
	4580, 4578, 2370, 3089, 3031, 4395, 3046, 4288, 3788, 1898,
	4268, 1228, 3826, 3446, 2200, 981, 4417, 3786, 1895, 1243,
	1236, 674, 3803, 1739, 3033, 4126, 3927, 3627, 3975, 3879,
	878, 879, 2373, 3976, 1738, 2105, 2423, 4652, 2057, 3240,
	4203, 982, 812, 811, 2121, 3081, 4277, 1100, 1100, 1100,
	4674, 4335, 3496, 3788, 3827, 2016, 1100, 1100, 1100, 3766,
	4568, 1100, 3786, 4063, 3058, 3753, 3706, 2054, 3572, 4290,
	1043, 1100, 1222, 1361, 3298, 3447, 3438, 1100, 3294, 1100,
	3198, 3199, 2908, 2902, 3978, 2890, 3505, 2226, 1222, 2220,
	1902, 3214, 4289, 983, 3790, 3498, 1300, 2214, 2155, 2206,
	3981, 2789, 813, 814, 2585, 2585, 1361, 2186, 1512, 2363,
	4291, 4377, 2877, 1247, 1738, 2880, 3096, 2882, 1222, 3677,
	982, 1361, 3698, 2090, 3642, 892, 893, 1733, 4433, 3789,
	3534, 1738, 2744, 745, 3181, 1220, 4398, 1737, 1905, 3790,
	1970, 2322, 3245, 2052, 1361, 3220, 4543, 2050, 3829, 4093,
	3200, 1220, 2153, 1900, 1033, 2887, 982, 2761, 1258, 1303,
	1303, 2925, 4128, 4246, 2925, 3259, 2264, 3501, 3502, 3503,
	3504, 1903, 983, 3678, 3789, 4244, 4184, 3233, 3310, 3306,
	3305, 1220, 1100, 3051, 2053, 3029, 3215, 3655, 3884, 3210,
	3203, 3202, 3500, 2154, 1567, 1665, 1100, 2667, 4075, 3679,
	3208, 3676, 2666, 1739, 2094, 3229, 1303, 3499, 983, 2665,
	2664, 1970, 1565, 1553, 1901, 2704, 3628, 1737, 3784, 880,
	881, 2708, 895, 2425, 3928, 3629, 3977, 1554, 4342, 1100,
	3794, 2894, 3286, 3287, 1737, 2719, 3213, 1040, 2094, 1809,
	3003, 1217, 3234, 4651, 3238, 1303, 2364, 4241, 2585, 2585,
	2585, 3219, 3277, 3308, 3226, 3192, 3312, 1217, 4192, 3209,
	1331, 3176, 3177, 3178, 3218, 3984, 3283, 1303, 3217, 1303,
	3221, 3222, 3885, 2790, 2791, 2620, 4054, 2765, 3207, 3309,
	3713, 3412, 3314, 1739, 2147, 3316, 1361, 1217, 3488, 2224,
	4110, 4589, 3250, 2147, 3787, 1464, 1464, 1303, 4373, 3703,
	3295, 1303, 3242, 3243, 3244, 3224, 4378, 3225, 3256, 3257,
	2623, 3258, 4171, 2971, 2872, 2870, 1940, 3699, 1359, 3370,
	2252, 1624, 1458, 3383, 1303, 3385, 4179, 1904, 3389, 1649,
	4443, 1303, 3395, 1303, 3381, 4436, 3934, 1361, 3267, 3787,
	4430, 3644, 3271, 3270, 795, 2495, 1712, 4461, 3342, 2453,
	4591, 2622, 4292, 4533, 3278, 1303, 2621, 3363, 4293, 4362,
	4149, 4109, 4193, 3299, 1821, 4343, 3241, 1303, 1464, 1216,
	3356, 4180, 3284, 1714, 3926, 3216, 3358, 3344, 1964, 3793,
	2326, 3378, 3421, 3173, 1222, 1216, 1711, 3549, 3454, 1709,
	2494, 1687, 3510, 2211, 3509, 3260, 1685, 3326, 3680, 3138,
	3390, 1659, 1657, 3336, 3396, 1655, 1653, 3437, 3070, 1303,
	1303, 3501, 3502, 3503, 3504, 1216, 3340, 1967, 2589, 744,
	2963, 3349, 4437, 3452, 2891, 3174, 2824, 1958, 3352, 2963,
	2779, 2693, 1303, 1566, 3350, 2335, 3445, 3430, 3351, 1935,
	3407, 3371, 3410, 1931, 1715, 1602, 3379, 1220, 3072, 3073,
	3463, 1564, 4344, 2313, 3402, 3529, 1651, 3398, 3392, 3704,
	1645, 894, 1640, 3366, 1638, 3528, 1563, 1733, 3008, 3007,
	2978, 2352, 1361, 1674, 2288, 1361, 2205, 2185, 1998, 1841,
	1613, 1536, 4508, 4026, 3757, 3756, 3474, 4027, 3263, 3264,
	4010, 2787, 4429, 4091, 4032, 4023, 3968, 3406, 991, 1288,
	3825, 3414, 3816, 3769, 3455, 3448, 3754, 3433, 1100, 3727,
	3725, 3705, 3434, 3435, 1100, 1100, 3441, 3436, 1100, 1100,
	1100, 3426, 1100, 3514, 4566, 3472, 3473, 801, 2921, 2913,
	2906, 1100, 1970, 3507, 3490, 3293, 175, 175, 3460, 3462,
	1100, 2898, 3382, 1100, 3486, 2884, 3506, 3469, 1043, 1361,
	2869, 1218, 804, 1217, 2710, 2705, 4086, 1713, 1100, 2184,
	2328, 2182, 3484, 3526, 2327, 2164, 1361, 1218, 2149, 2122,
	1710, 3453, 2109, 1708, 3343, 1686, 1970, 1970, 1100, 1100,
	1684, 1100, 1100, 1100, 2096, 1658, 1656, 2037, 2034, 1654,
	1652, 2031, 3167, 3168, 3169, 2028, 3357, 1218, 3359, 1100,
	3535, 1464, 2023, 1100, 4557, 1970, 1970, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 3391, 1100, 3523, 3601,
	3397, 3602, 3552, 2312, 1100, 1100, 1970, 3532, 2021, 3508,
	1650, 1100, 2017, 2008, 1644, 3569, 1639, 3451, 1637, 3527,
	1562, 1742, 1100, 996, 998, 1000, 3393, 1197, 1943, 4077,
	4582, 2158, 3524, 1222, 1222, 3049, 2058, 1100, 3561, 3562,
	2338, 3530, 3023, 3021, 4471, 3517, 4115, 3518, 4078, 3519,
	4108, 1216, 3557, 1198, 4107, 4039, 3960, 2964, 2077, 1517,
	4279, 2766, 2741, 4272, 3568, 3837, 1361, 2741, 2104, 3575,
	3577, 3578, 2278, 3673, 732, 3330, 3331, 2739, 3332, 3333,
	3334, 3584, 2763, 2223, 3639, 1278, 2336, 1279, 3681, 3682,
	2585, 2585, 3579, 3660, 3591, 2308, 1220, 1220, 2383, 3592,
	2307, 4470, 3693, 3694, 3695, 3599, 1706, 1707, 2285, 3600,
	4002, 3604, 4034, 1100, 1636, 3598, 4314, 2769, 3935, 3913,
	3321, 3372, 3373, 3606, 3374, 3375, 3376, 2383, 3607, 2770,
	3050, 1743, 2337, 1100, 2792, 1746, 1934, 1312, 1246, 3640,
	4585, 3646, 3632, 3631, 3394, 3651, 3652, 4576, 788, 2770,
	175, 1749, 1750, 3765, 688, 4538, 2883, 255, 3635, 3648,
	3649, 2310, 845, 1199, 3813, 2207, 1100, 1100, 1279, 1323,
	1279, 1749, 1750, 2831, 2829, 3764, 2838, 2818, 2585, 2585,
	2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585,
	2585, 2585, 2585, 2585, 2585, 2585, 2585, 2820, 2585, 3662,
	2774, 1752, 1217, 1217, 671, 2772, 4423, 4650, 1100, 699,
	2819, 4389, 4383, 2773, 4341, 4263, 1751, 4239, 4172, 3823,
	3815, 3802, 3663, 3670, 3440, 2928, 2607, 2043, 1951, 4621,
	4190, 3248, 1303, 1218, 4385, 1303, 1751, 4463, 4463, 3738,
	3144, 3145, 4464, 4464, 3689, 1749, 1750, 2733, 2734, 2731,
	2732, 1623, 1970, 1484, 3905, 1964, 1964, 1622, 2490, 2079,
	3743, 3745, 4595, 3685, 2733, 2731, 3742, 2523, 3709, 3822,
	3266, 4264, 2589, 3268, 3269, 4224, 3767, 4036, 3272, 4031,
	3273, 3761, 3274, 1303, 4030, 1689, 3730, 3759, 1688, 1100,
	3901, 3684, 3735, 3580, 1967, 1967, 3387, 1222, 1100, 3384,
	3839, 1835, 1834, 4636, 1958, 1958, 4602, 4427, 1303, 1303,
	1303, 4426, 2787, 4425, 4329, 4242, 3846, 4218, 4170, 4168,
	4166, 3792, 4065, 1180, 3830, 1303, 4051, 4000, 3956, 2934,
	1216, 1216, 1578, 3861, 3809, 3843, 3797, 3723, 3776, 1288,
	1303, 3716, 3444, 3443, 3315, 2127, 1361, 3265, 3834, 3831,
	3005, 2986, 2589, 2589, 3810, 3782, 2963, 2985, 3791, 2984,
	1220, 2983, 2912, 2885, 2764, 2701, 2696, 3778, 2686, 2685,
	1361, 2674, 2455, 1100, 1100, 3814, 2329, 3862, 3796, 1100,
	1100, 1970, 2309, 2306, 1100, 1100, 2305, 1100, 2304, 2303,
	2302, 1100, 2211, 2221, 3850, 2195, 2191, 2190, 3817, 2177,
	2189, 2188, 1100, 3819, 3299, 2187, 3832, 2011, 3833, 2010,
	3835, 2104, 2009, 2007, 1942, 1705, 1704, 3841, 1100, 1646,
	2133, 1531, 1530, 3840, 3845, 1529, 1528, 1527, 3851, 3852,
	1526, 1525, 3857, 3853, 3545, 3546, 3886, 3860, 3859, 3868,
	1520, 1516, 1514, 1513, 3856, 1470, 1469, 1468, 1467, 3870,
	1352, 1351, 1350, 1349, 1348, 1316, 3869, 1315, 1265, 1264,
	3899, 1263, 1262, 2128, 1261, 3887, 1217, 1260, 1259, 3880,
	1257, 1252, 1251, 1250, 1249, 1248, 2048, 1002, 1222, 988,
	4346, 3895, 3982, 2325, 1698, 92, 1222, 1522, 831, 86,
	1361, 2156, 1361, 3722, 958, 3940, 2589, 2589, 2589, 1222,
	1108, 4460, 1506, 4368, 839, 4445, 3811, 3317, 2841, 2287,
	1303, 1303, 1218, 1218, 1647, 2289, 3228, 2649, 4415, 1361,
	3909, 3106, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615,
	3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625,
	3626, 1220, 3630, 1222, 4321, 1222, 262, 262, 262, 1220,
	677, 678, 4142, 693, 677, 693, 703, 3992, 3233, 743,
	2493, 1839, 1220, 761, 3777, 3961, 3962, 1303, 767, 3875,
	3185, 88, 1084, 4005, 4006, 262, 3925, 1361, 1130, 1303,
	4061, 4060, 1303, 3969, 3708, 3943, 3939, 2953, 4058, 4003,
	3936, 3946, 4057, 1361, 1216, 874, 3932, 1955, 3941, 3991,
	1957, 262, 3988, 3942, 3988, 1050, 1220, 175, 1220, 3947,
	3950, 3937, 3938, 1364, 4482, 2059, 4004, 1090, 1964, 2075,
	2068, 3965, 2687, 2567, 1303, 1303, 1107, 3967, 1104, 1959,
	1961, 1106, 1105, 4035, 1960, 4037, 1858, 1103, 1954, 3821,
	2932, 3470, 1572, 1570, 1303, 960, 2063, 1217, 2449, 2477,
	3095, 1832, 1065, 1086, 2474, 1217, 1361, 1967, 1241, 1075,
	1064, 1303, 3211, 2386, 4055, 4038, 3190, 1958, 1217, 4008,
	4052, 4024, 3457, 3669, 2362, 849, 4049, 3141, 2126, 2480,
	1232, 2590, 4017, 2583, 2579, 4020, 1222, 3275, 4029, 2922,
	1719, 4022, 4043, 4083, 4156, 1811, 1303, 1303, 1303, 2933,
	4114, 4048, 4094, 1346, 2136, 1068, 2447, 1823, 2211, 1361,
	3075, 4019, 1217, 2005, 1217, 2372, 3464, 3231, 2680, 4467,
	3588, 1100, 1100, 1100, 2199, 677, 677, 4095, 1288, 1196,
	1195, 1239, 2134, 262, 4050, 4098, 4071, 4056, 1194, 1361,
	4111, 4451, 4448, 3818, 1100, 3988, 2146, 1100, 1100, 1220,
	2491, 4089, 4080, 3854, 3419, 2051, 2725, 1100, 1801, 4096,
	1970, 3427, 1080, 1463, 3196, 1100, 1100, 3489, 1533, 766,
	4197, 1092, 1800, 2131, 2862, 1216, 1218, 2861, 4082, 2005,
	1361, 4338, 1303, 1216, 4118, 4134, 1332, 1330, 1329, 1328,
	2005, 4117, 4609, 4103, 4672, 3718, 1216, 4129, 3717, 229,
	3043, 1740, 4122, 1361, 2135, 1732, 4120, 226, 228, 227,
	4066, 1100, 3674, 3871, 3237, 4536, 3740, 3411, 4123, 23,
	1100, 22, 21, 112, 42, 20, 150, 128, 1100, 147,
	146, 120, 1970, 145, 3696, 144, 4145, 143, 3697, 142,
	1216, 1100, 1216, 149, 1100, 2659, 141, 140, 135, 139,
	138, 137, 136, 134, 132, 1217, 4139, 133, 1100, 4175,
	4151, 4162, 4163, 127, 131, 1361, 130, 4200, 129, 4165,
	126, 125, 1303, 124, 123, 122, 121, 1303, 1303, 3726,
	119, 3728, 118, 117, 116, 4176, 115, 114, 113, 757,
	4174, 754, 61, 60, 111, 4183, 4009, 110, 19, 40,
	14, 65, 66, 18, 13, 35, 91, 102, 4018, 101,
	36, 4021, 99, 98, 4217, 34, 17, 4229, 16, 15,
	96, 95, 1361, 4254, 33, 1303, 31, 11, 9, 8,
	4245, 37, 1919, 12, 3421, 5, 180, 4219, 179, 182,
	4220, 4215, 4278, 1222, 1222, 178, 181, 4226, 90, 177,
	176, 89, 3768, 29, 4235, 4234, 4262, 1218, 2585, 10,
	4238, 172, 4255, 1100, 1100, 1218, 4273, 3807, 2589, 2589,
	81, 4243, 174, 4079, 173, 4231, 171, 170, 1218, 4258,
	1100, 1970, 169, 1216, 4207, 4253, 82, 4237, 4276, 79,
	2736, 4274, 168, 85, 167, 80, 84, 4297, 4298, 83,
	27, 6, 3988, 3988, 4233, 4098, 1220, 1220, 4275, 4281,
	64, 4280, 2585, 4295, 7, 4124, 1100, 4270, 3511, 1100,
	4282, 105, 1218, 106, 1218, 38, 1222, 77, 264, 76,
	4301, 75, 26, 63, 25, 213, 4310, 4311, 212, 1222,
	211, 210, 209, 208, 207, 4221, 206, 4334, 1578, 201,
	1578, 200, 205, 203, 202, 204, 2589, 2589, 2589, 2589,
	2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589,
	2589, 2589, 2589, 2589, 2589, 4333, 2589, 2094, 199, 216,
	215, 4319, 1100, 1100, 221, 3988, 4356, 1464, 4330, 1220,
	220, 4350, 1100, 4357, 4372, 4351, 4313, 1222, 3988, 219,
	1222, 218, 1220, 217, 1303, 4064, 214, 223, 198, 197,
	196, 194, 1217, 1217, 1303, 1303, 190, 189, 4081, 4364,
	193, 195, 192, 4366, 191, 188, 222, 72, 165, 166,
	71, 1303, 164, 163, 162, 4309, 161, 160, 4379, 4406,
	4387, 4102, 4384, 159, 158, 1100, 1100, 4411, 70, 4412,
	24, 4392, 4380, 4381, 4394, 1100, 3988, 4391, 4386, 3988,
	1220, 4400, 4258, 1220, 2, 1218, 4404, 4405, 4402, 1,
	4399, 4403, 0, 0, 0, 0, 0, 0, 0, 0,
	1234, 2585, 0, 4409, 0, 1964, 1288, 4410, 0, 0,
	0, 1100, 1100, 0, 1100, 1217, 4420, 0, 0, 0,
	0, 4232, 4424, 0, 0, 0, 0, 0, 1217, 4450,
	4453, 0, 4438, 1254, 0, 0, 1063, 0, 4419, 4462,
	4442, 0, 0, 4465, 1967, 262, 0, 262, 262, 4441,
	1283, 262, 1293, 4440, 1958, 0, 0, 4487, 4469, 0,
	1216, 1216, 0, 1313, 4490, 4459, 0, 1100, 1100, 1100,
	4491, 0, 761, 4472, 0, 0, 1964, 0, 0, 0,
	0, 0, 4455, 0, 4454, 0, 1217, 4458, 4478, 1217,
	0, 4485, 4486, 0, 0, 0, 262, 1100, 262, 262,
	1283, 4521, 262, 262, 0, 4520, 4507, 0, 1293, 0,
	4525, 0, 4506, 4504, 4505, 1967, 0, 0, 0, 262,
	0, 1486, 4148, 0, 0, 1958, 0, 2085, 0, 0,
	0, 4539, 2086, 0, 0, 0, 0, 4550, 4523, 0,
	4548, 0, 1510, 1216, 0, 4562, 0, 0, 0, 4561,
	0, 1100, 0, 0, 0, 0, 1216, 0, 0, 4546,
	0, 1535, 4547, 0, 1293, 4567, 0, 0, 262, 262,
	4555, 1283, 4556, 0, 0, 4554, 4186, 4560, 0, 0,
	0, 0, 0, 0, 4583, 4573, 4574, 0, 0, 0,
	761, 4577, 262, 262, 4579, 0, 4575, 0, 4450, 4586,
	1222, 4453, 1222, 2094, 0, 4588, 4605, 0, 4594, 4590,
	0, 0, 4587, 4604, 1216, 874, 4610, 1216, 4616, 4599,
	4372, 4603, 4558, 4559, 0, 0, 4469, 4614, 4564, 4611,
	0, 0, 0, 0, 0, 0, 0, 4607, 0, 4629,
	0, 774, 1218, 1218, 0, 2087, 0, 4631, 4615, 0,
	0, 4628, 0, 0, 4606, 0, 4608, 0, 0, 3988,
	4635, 3988, 2091, 1220, 0, 1220, 785, 4644, 0, 0,
	0, 0, 1100, 1100, 4640, 4637, 0, 0, 0, 4642,
	0, 1100, 4645, 1100, 1100, 0, 4648, 0, 0, 262,
	0, 0, 4638, 4663, 4657, 4654, 0, 4666, 4668, 4664,
	4667, 4665, 4662, 4660, 0, 4661, 0, 0, 0, 262,
	2172, 0, 4675, 0, 4676, 0, 0, 0, 4671, 4678,
	4677, 0, 4680, 0, 4681, 1218, 4683, 2934, 0, 0,
	0, 0, 4686, 0, 2088, 2093, 0, 0, 1218, 0,
	1100, 4691, 0, 4693, 3197, 4318, 4688, 4694, 0, 4696,
	4697, 4679, 4683, 0, 4690, 0, 4655, 4656, 0, 779,
	0, 2085, 4370, 0, 4687, 786, 2086, 0, 0, 1217,
	0, 1217, 0, 0, 0, 0, 0, 3223, 0, 784,
	0, 0, 0, 0, 0, 0, 4390, 0, 0, 0,
	4209, 4210, 3236, 0, 0, 0, 1218, 1964, 0, 1218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4692, 0, 3254, 2857, 2089, 0, 0,
	4225, 0, 4227, 0, 4228, 0, 0, 783, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 0, 0, 0,
	0, 1964, 1964, 738, 0, 0, 1958, 0, 0, 2849,
	2847, 0, 0, 0, 0, 0, 2851, 2853, 2843, 0,
	3329, 0, 0, 0, 2095, 0, 0, 0, 781, 0,
	1964, 1964, 0, 0, 0, 0, 0, 0, 0, 2087,
	1967, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 1958, 0, 0, 2005, 0, 2091, 1216, 0, 1216,
	0, 1964, 0, 0, 0, 0, 4473, 677, 0, 1967,
	1967, 0, 4475, 0, 3327, 0, 0, 0, 0, 1958,
	1958, 0, 0, 0, 0, 1578, 0, 789, 262, 0,
	262, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 1486, 1283, 262,
	1958, 262, 0, 0, 0, 3328, 0, 262, 1486, 693,
	0, 0, 0, 0, 262, 1486, 0, 0, 2088, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 262, 0,
	776, 0, 0, 0, 0, 1063, 0, 0, 3236, 1063,
	0, 0, 0, 0, 0, 0, 4365, 0, 0, 0,
	0, 0, 0, 0, 0, 1445, 0, 0, 0, 1445,
	780, 0, 0, 0, 0, 0, 2845, 0, 761, 0,
	0, 2090, 0, 0, 0, 0, 0, 2859, 0, 73,
	0, 2089, 157, 0, 0, 0, 2589, 0, 0, 0,
	73, 0, 46, 45, 737, 0, 74, 0, 2858, 2850,
	2848, 2852, 2854, 2844, 2846, 2860, 0, 74, 787, 1218,
	152, 1218, 78, 2856, 778, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 2083, 0, 0, 0, 2095, 0,
	0, 0, 0, 0, 67, 0, 0, 0, 0, 0,
	2589, 48, 0, 154, 0, 0, 2863, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	775, 47, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1458, 0, 0, 1359, 1964, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 50,
	68, 0, 868, 0, 0, 0, 0, 0, 51, 0,
	0, 0, 739, 57, 0, 0, 107, 155, 0, 0,
	0, 93, 104, 777, 0, 49, 1967, 107, 0, 2082,
	0, 0, 93, 104, 0, 0, 1958, 262, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 0, 0, 3581, 0, 94,
	0, 0, 0, 0, 0, 0, 4535, 0, 0, 0,
	94, 0, 0, 262, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 2090, 1964, 0, 0, 2589,
	0, 0, 0, 0, 0, 262, 0, 262, 0, 0,
	2864, 677, 0, 262, 0, 0, 0, 3144, 3145, 2855,
	3162, 3163, 3164, 0, 0, 761, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 1283, 262, 1749, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 1780, 0, 0, 0, 2286, 0, 3672, 1752, 0,
	262, 262, 3159, 262, 0, 262, 0, 262, 0, 262,
	0, 0, 0, 0, 97, 2005, 2005, 0, 0, 0,
	1085, 109, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 2318, 1751, 0, 2319, 0, 2320, 0, 0,
	0, 0, 53, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 59, 2005, 0, 0, 0, 183, 100, 0, 103,
	69, 0, 0, 1297, 0, 743, 58, 183, 100, 761,
	103, 0, 0, 0, 54, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 230, 55, 3150, 0, 0, 0,
	0, 2005, 869, 1445, 0, 230, 0, 148, 0, 0,
	0, 0, 0, 62, 109, 0, 0, 0, 148, 0,
	0, 0, 0, 2005, 0, 2005, 0, 0, 0, 1473,
	0, 0, 153, 0, 0, 0, 0, 1757, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 2005, 0, 0, 0, 2005, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 187, 0, 1779, 1781, 1545, 0, 0, 0,
	231, 0, 0, 187, 0, 0, 1024, 0, 0, 0,
	0, 231, 3160, 224, 0, 0, 0, 1044, 0, 0,
	0, 1586, 225, 0, 224, 0, 0, 0, 0, 0,
	1063, 0, 0, 225, 0, 1599, 1445, 0, 0, 0,
	0, 0, 0, 0, 1583, 0, 677, 0, 0, 0,
	0, 0, 0, 1772, 0, 186, 0, 0, 3, 0,
	0, 262, 0, 1206, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 0, 0, 0, 262, 0, 677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 262, 0, 0, 0, 1964, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 1293, 0,
	0, 0, 0, 0, 74, 1749, 1750, 0, 1782, 1783,
	1784, 1792, 1793, 1794, 0, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 1967, 0, 0, 1785, 1780, 0,
	0, 0, 0, 0, 1958, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 262, 1293, 3161, 0, 693,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 2700,
	87, 0, 0, 0, 0, 262, 1445, 0, 262, 0,
	1751, 0, 262, 0, 262, 0, 0, 0, 0, 1283,
	1771, 262, 262, 0, 1293, 1293, 2716, 0, 1773, 1768,
	0, 262, 0, 0, 0, 0, 1967, 0, 0, 0,
	868, 0, 0, 0, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 93,
	104, 0, 0, 3945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	3958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 1774, 1775, 1776, 1777, 0, 0,
	0, 0, 0, 262, 1757, 0, 0, 94, 0, 0,
	0, 3156, 3157, 3158, 0, 0, 0, 0, 3155, 3153,
	3154, 3146, 3147, 3148, 3149, 3151, 3152, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 1789, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 1779, 1781, 0, 0, 0, 262, 2875, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 1795, 0,
	1796, 0, 0, 0, 0, 1967, 0, 1766, 1767, 0,
	0, 1486, 0, 0, 262, 1958, 262, 0, 0, 0,
	0, 0, 0, 262, 0, 1787, 0, 0, 0, 0,
	0, 0, 0, 2917, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 2753, 0, 677, 0, 0, 0, 0,
	0, 0, 0, 0, 2946, 874, 0, 2753, 2753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 1750,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 97, 1797, 0, 0, 0, 0, 0, 0,
	1445, 1780, 0, 262, 1283, 262, 0, 0, 1752, 1486,
	1359, 1486, 1293, 262, 0, 0, 1283, 0, 1283, 0,
	1283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4140, 0, 0, 1751, 183, 100, 0, 103, 0, 0,
	0, 262, 262, 262, 262, 1283, 0, 0, 1283, 0,
	262, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 1778, 0, 0, 0, 0, 0,
	869, 4140, 0, 0, 0, 148, 0, 1445, 0, 0,
	0, 2005, 0, 0, 262, 1773, 3144, 3145, 0, 3162,
	3163, 3164, 262, 0, 2386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3892, 232,
	0, 0, 1790, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 2386, 0, 231, 0,
	0, 3159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 1445, 0, 0, 0, 0, 0, 0, 0,
	225, 1486, 0, 0, 1779, 1781, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 0, 1581, 3144, 3145, 0, 3162, 3163, 3164, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 1763,
	1764, 1770, 1791, 1769, 1765, 3891, 1762, 1760, 1761, 1753,
	1754, 1755, 1756, 1758, 1759, 0, 3144, 3145, 0, 3162,
	3163, 3164, 0, 1772, 0, 0, 1044, 109, 109, 0,
	0, 0, 0, 0, 0, 3150, 0, 0, 3554, 0,
	109, 0, 109, 0, 0, 0, 3144, 3145, 0, 3162,
	3163, 3164, 109, 0, 109, 0, 0, 0, 3159, 0,
	0, 0, 0, 0, 0, 0, 2241, 0, 3553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 2255, 0, 0, 0, 0, 0, 0,
	0, 3159, 0, 2257, 0, 0, 0, 1445, 0, 3165,
	0, 0, 262, 0, 0, 2265, 0, 2268, 2269, 2270,
	0, 0, 0, 0, 0, 0, 109, 0, 262, 0,
	0, 3159, 0, 677, 0, 0, 0, 0, 677, 0,
	0, 677, 0, 0, 677, 677, 0, 0, 0, 0,
	677, 3160, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 3150, 0, 0, 0, 0, 0, 0, 0,
	0, 1486, 0, 0, 0, 0, 0, 0, 1773, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1486, 3150, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 262, 0, 0, 0,
	262, 262, 0, 0, 0, 2005, 0, 1024, 2005, 0,
	0, 0, 0, 0, 0, 3150, 3165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 2753,
	2753, 262, 0, 3290, 0, 0, 0, 0, 0, 2753,
	0, 0, 3301, 0, 1819, 0, 0, 0, 1825, 3165,
	2753, 3301, 0, 2753, 3301, 0, 0, 3301, 3160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 262, 262, 3290, 0, 262, 0, 0, 3165,
	0, 0, 0, 0, 0, 0, 3161, 0, 0, 0,
	0, 3160, 0, 0, 0, 0, 3290, 0, 262, 0,
	3362, 3362, 0, 0, 1283, 0, 0, 0, 0, 0,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0,
	2753, 3160, 2753, 0, 3388, 2753, 3290, 0, 0, 2753,
	3290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 1911, 0,
	1914, 0, 109, 0, 262, 3415, 0, 0, 3417, 2753,
	0, 0, 262, 0, 0, 0, 262, 0, 0, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3161, 262, 0, 0, 0, 0, 2917,
	0, 0, 1283, 0, 262, 0, 0, 2753, 0, 677,
	3156, 3157, 3158, 0, 0, 0, 2753, 3155, 3153, 3154,
	3146, 3147, 3148, 3149, 3151, 3152, 3161, 1897, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 2917, 0,
	0, 2917, 0, 0, 0, 0, 0, 1749, 1750, 0,
	1782, 1783, 1784, 1792, 1793, 1794, 3161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	1780, 0, 0, 3516, 0, 0, 0, 1752, 0, 0,
	0, 1749, 1750, 0, 0, 0, 1798, 0, 2005, 0,
	3522, 0, 0, 1283, 262, 0, 262, 0, 0, 0,
	0, 0, 1283, 0, 1780, 0, 0, 2717, 1297, 0,
	0, 1752, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 0, 3156, 3157, 3158,
	0, 1768, 262, 0, 3155, 3153, 3154, 3146, 3147, 3148,
	3149, 3151, 3152, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	3156, 3157, 3158, 0, 0, 1768, 0, 3155, 3153, 3154,
	3146, 3147, 3148, 3149, 3151, 3152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3586, 0,
	3156, 3157, 3158, 0, 0, 0, 0, 3155, 3153, 3154,
	3146, 3147, 3148, 3149, 3151, 3152, 1774, 1775, 1776, 1777,
	0, 0, 0, 0, 0, 1049, 1757, 0, 0, 3548,
	0, 1445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2865, 0, 0, 0, 0,
	1774, 1775, 1776, 1777, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 1789, 1445, 0, 1799, 0, 0, 0,
	0, 0, 0, 1779, 1781, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 1796, 262, 262, 0, 0, 0, 0, 1766,
	1767, 0, 1445, 0, 0, 0, 0, 1779, 1781, 0,
	0, 0, 0, 0, 0, 677, 677, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 1766, 1767, 0, 0, 1486, 1486, 0,
	1063, 0, 1044, 0, 1044, 0, 0, 0, 2979, 0,
	0, 1486, 1486, 1486, 1063, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 0, 0,
	0, 3362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 1773, 1749, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 3290, 1445, 262, 0, 0, 0,
	0, 1780, 1024, 0, 1790, 1024, 1024, 262, 1752, 0,
	0, 1773, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 2753, 262, 0, 0,
	2446, 0, 1768, 0, 0, 0, 2946, 2946, 0, 0,
	0, 0, 874, 874, 2753, 0, 1044, 0, 2917, 2917,
	0, 0, 874, 2753, 0, 1819, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 1788, 0, 0, 0,
	0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760,
	1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0,
	1445, 3119, 0, 1445, 0, 3120, 0, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 0, 0, 1757, 0, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 1206, 3144, 3145, 0, 3162, 3163, 3164, 0, 0,
	0, 0, 0, 0, 0, 0, 3910, 1914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	1766, 1767, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3159, 262, 0,
	0, 0, 0, 0, 1486, 0, 262, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 1132, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3144, 3145, 0, 3162, 3163, 3164, 0, 0, 0,
	0, 0, 2753, 2753, 1049, 3362, 2753, 0, 1049, 0,
	0, 0, 0, 3990, 0, 3990, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2753, 0, 3301, 0,
	0, 0, 1486, 1486, 262, 3290, 0, 0, 0, 0,
	0, 3150, 0, 0, 0, 0, 0, 0, 3290, 0,
	262, 3290, 0, 262, 0, 3362, 0, 1488, 0, 1494,
	0, 1500, 0, 0, 1445, 0, 3159, 1749, 1750, 0,
	2753, 0, 2753, 262, 0, 0, 0, 0, 0, 0,
	0, 3166, 0, 0, 0, 0, 0, 1778, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 2753, 0, 0, 0, 3165, 4068, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 1589, 262, 1594, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 1603, 0,
	1608, 0, 1771, 0, 0, 0, 0, 3160, 0, 0,
	109, 1768, 0, 109, 3399, 109, 3990, 0, 0, 1486,
	3150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3439, 0, 109,
	0, 1223, 109, 0, 1670, 3543, 0, 1676, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3165, 0, 1774, 1775, 1776, 1777,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 3480,
	3481, 0, 0, 0, 0, 0, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 3160, 0, 0, 2753,
	0, 3301, 0, 0, 4178, 0, 0, 0, 109, 0,
	0, 0, 262, 1779, 1781, 0, 0, 0, 0, 4198,
	0, 4198, 3161, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 0, 0, 1766,
	1767, 0, 0, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1750, 3362, 0, 1283, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 3290, 1772, 262, 1445, 1780, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4178, 0, 0, 0, 0, 1445, 0,
	0, 2753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 4267,
	0, 0, 0, 0, 0, 0, 0, 1771, 2446, 0,
	0, 1486, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 3161, 0, 3990, 3990, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 3156, 3157, 3158, 0,
	0, 262, 262, 3155, 3153, 3154, 3146, 3147, 3148, 3149,
	3151, 3152, 1891, 1891, 1891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3586, 0, 0, 0, 0,
	3542, 0, 0, 0, 0, 0, 1778, 0, 0, 0,
	0, 0, 3362, 4332, 0, 0, 0, 0, 0, 0,
	4178, 1774, 1775, 1776, 1777, 0, 0, 1773, 1445, 0,
	1445, 1757, 0, 0, 0, 0, 3990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3990,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 1779, 1781,
	0, 0, 0, 0, 0, 3156, 3157, 3158, 0, 0,
	0, 4068, 3155, 3153, 3154, 3146, 3147, 3148, 3149, 3151,
	3152, 0, 0, 0, 1766, 1767, 0, 3990, 0, 262,
	3990, 0, 0, 0, 0, 1445, 0, 0, 0, 0,
	3301, 0, 1206, 0, 0, 0, 0, 0, 0, 1049,
	0, 1445, 0, 0, 0, 0, 0, 1772, 1206, 0,
	0, 0, 0, 0, 0, 0, 1486, 0, 1486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1769, 1765, 0, 1762, 1760,
	1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0,
	4434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4198, 1445, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3774, 0, 0, 0, 262, 0, 0, 0,
	0, 1223, 0, 0, 0, 0, 0, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 3586, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 0,
	1486, 0, 1773, 109, 109, 1223, 109, 109, 109, 1223,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 3847, 3848,
	3849, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 1297, 0, 0, 1223, 109,
	109, 0, 109, 109, 109, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 0, 0, 0, 0, 4178,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 1223,
	0, 0, 1063, 2753, 0, 0, 0, 0, 0, 0,
	3990, 0, 3990, 1223, 0, 1486, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 2560, 2561, 2562,
	2563, 2556, 2557, 2558, 2559, 0, 0, 0, 0, 0,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 1206, 0, 0, 1044, 0, 1486,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 109, 109, 0, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2946, 0, 0, 0, 0,
	0, 0, 0, 0, 2753, 0, 0, 0, 0, 2536,
	2537, 2538, 2539, 0, 0, 0, 0, 0, 0, 2946,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3952, 3953, 2548, 2549, 2550, 2551, 2544, 2545, 2546, 2547,
	2552, 2553, 2554, 2555, 0, 2361, 0, 2365, 0, 0,
	0, 0, 0, 0, 2379, 0, 0, 0, 0, 0,
	0, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 0, 2428, 0, 2430,
	2431, 2432, 2433, 0, 0, 0, 2532, 2533, 2534, 2535,
	2540, 2541, 2542, 2543, 0, 0, 0, 0, 0, 0,
	0, 2457, 0, 0, 0, 0, 1749, 1750, 0, 0,
	0, 0, 1820, 0, 0, 0, 2472, 0, 0, 0,
	1063, 1063, 0, 0, 1297, 0, 0, 0, 0, 1780,
	0, 0, 2502, 2505, 2508, 2511, 1752, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2581, 0, 2592, 2594, 2599,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 109, 4119, 0, 4121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 1206, 0, 1223, 0, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1063, 1749, 1750, 1223, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 0, 3061, 0, 0, 0, 0, 0,
	0, 1971, 0, 1785, 1780, 1223, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 1774, 1775, 1776, 1777, 0,
	1798, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 4167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1750, 1751, 0, 0, 0,
	1792, 1793, 1794, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 1780, 0, 0,
	0, 1223, 1779, 1781, 1752, 0, 0, 0, 0, 0,
	0, 0, 1223, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 1767,
	0, 0, 0, 0, 0, 0, 1223, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 4236, 1768, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1775, 1776, 1777, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 1779, 1781, 0,
	0, 109, 0, 1774, 1775, 1776, 1777, 0, 0, 0,
	0, 0, 0, 1757, 1795, 0, 1796, 0, 2878, 2879,
	0, 2881, 0, 1766, 1767, 0, 0, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 1223, 0, 0,
	0, 1787, 0, 0, 0, 0, 1223, 0, 0, 0,
	1789, 0, 0, 1799, 0, 1778, 1772, 0, 0, 0,
	1779, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 1223, 0, 1223, 0, 3004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 1223, 0, 0, 1297, 1297, 0, 0, 0, 0,
	0, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 1297, 0, 1223, 0, 1223, 1223, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 109, 0, 0, 0, 1802, 1803, 1206, 0,
	0, 0, 0, 0, 1769, 1765, 1206, 1762, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3055, 3056, 0, 1773, 0, 0, 3062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3076, 3077, 0, 0,
	0, 1790, 2472, 0, 0, 0, 0, 0, 0, 0,
	0, 3084, 0, 0, 0, 0, 0, 0, 1971, 1971,
	1223, 0, 0, 0, 0, 0, 0, 3098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 3110, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 0, 0, 0, 2468, 0, 0, 0, 2469,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 1223, 0, 109,
	0, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2599, 2599, 2599, 0, 0, 0, 1749,
	1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 1891, 0,
	0, 0, 0, 0, 0, 0, 3201, 0, 0, 1223,
	0, 1785, 1780, 0, 0, 0, 1223, 0, 0, 1752,
	0, 0, 0, 0, 0, 1223, 0, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 1749, 1750, 0,
	1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	1780, 0, 0, 0, 0, 0, 0, 1752, 0, 1049,
	0, 0, 0, 0, 0, 0, 1798, 0, 0, 0,
	0, 0, 0, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 1223, 1223, 0, 1774, 1775,
	1776, 1777, 1771, 0, 0, 0, 3320, 0, 1757, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 1779, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 2446, 0, 0, 0, 0,
	0, 1971, 1795, 0, 1796, 0, 0, 0, 0, 0,
	0, 1766, 1767, 0, 0, 0, 1774, 1775, 1776, 1777,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 1779, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	1795, 0, 1796, 0, 0, 0, 1223, 0, 0, 1766,
	1767, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	109, 0, 1772, 0, 0, 0, 0, 0, 0, 1223,
	0, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2379, 1790, 0, 0, 0,
	0, 3540, 3541, 0, 0, 3544, 0, 0, 0, 3547,
	0, 0, 0, 0, 0, 0, 0, 0, 3551, 0,
	0, 0, 0, 0, 0, 0, 0, 3558, 0, 0,
	3201, 0, 0, 0, 0, 0, 1778, 0, 0, 0,
	0, 0, 0, 0, 0, 3570, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 1773, 0, 0,
	109, 0, 0, 0, 0, 3593, 3594, 0, 3595, 3596,
	3597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 3603, 0, 0, 0,
	3605, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0,
	0, 3633, 3634, 0, 0, 0, 0, 3916, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1750, 0, 0, 0, 3654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760,
	1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0,
	0, 0, 0, 0, 1751, 3556, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	3700, 0, 0, 1768, 0, 0, 0, 0, 1749, 1750,
	0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0,
	3711, 0, 0, 0, 0, 0, 0, 0, 0, 1109,
	1785, 1780, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	1223, 1223, 0, 0, 3739, 0, 0, 3054, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 1751, 0, 263, 263, 263, 1774, 1775,
	1776, 1777, 0, 1771, 1223, 0, 0, 0, 1757, 0,
	0, 0, 1768, 0, 0, 0, 1223, 0, 0, 1223,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 1779, 1781, 1223, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 1767, 0, 0, 0, 0, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 0, 1891, 1757, 0, 0,
	0, 0, 0, 0, 1223, 3842, 0, 0, 0, 1971,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 1799, 0, 0,
	0, 0, 0, 1223, 1779, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 1796, 0, 1223, 0, 1223, 0, 0,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	3888, 3889, 0, 0, 1223, 0, 3893, 3894, 1787, 0,
	0, 3897, 3898, 0, 0, 1223, 0, 0, 3902, 1223,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 3906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 3911, 0, 0, 0, 1223,
	0, 1223, 0, 0, 0, 1223, 0, 0, 1778, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 1786, 1223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792,
	1793, 1794, 0, 0, 0, 0, 0, 1223, 1223, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 1778, 0, 0,
	1223, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	1223, 0, 0, 1223, 0, 1790, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 1765, 0,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 1774, 1775, 1776, 1777, 0, 0, 0, 0,
	0, 0, 1757, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 1971, 0, 1788, 0, 0,
	0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 1789,
	0, 0, 1799, 1971, 1971, 0, 3122, 0, 0, 1779,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4135, 4136,
	4137, 0, 0, 0, 1971, 1766, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2379, 0, 1787, 4146, 4147, 0, 0, 0, 0,
	0, 1223, 1223, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 4155, 4158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4199, 0, 0,
	0, 0, 0, 0, 0, 4206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4213, 0,
	0, 1049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4222, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 263, 263, 0, 0,
	263, 0, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 1306, 263, 263, 0,
	1306, 263, 263, 0, 0, 0, 0, 0, 1306, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 1223, 0, 0, 0, 0, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 0, 263, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1223, 0, 0, 0, 1306, 0, 0, 0, 0,
	1306, 263, 263, 4337, 0, 1223, 4340, 0, 0, 0,
	0, 0, 0, 0, 1306, 0, 1223, 1223, 1223, 0,
	0, 0, 1788, 0, 0, 0, 0, 1763, 1764, 1770,
	1791, 1769, 1765, 1223, 1762, 1760, 1761, 1753, 1754, 1755,
	1756, 1758, 1759, 0, 0, 0, 0, 0, 1223, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1306, 1049,
	1049, 0, 0, 0, 0, 0, 0, 0, 1223, 4388,
	1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 1785, 1780, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 0, 0, 0, 263, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2379, 0, 0, 0, 0, 0, 0,
	0, 0, 4158, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1049,
	0, 0, 0, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 1223, 0,
	1223, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 1223,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 4503, 4503, 4503, 0, 0, 1774,
	1775, 1776, 1777, 0, 0, 0, 0, 0, 0, 1757,
	0, 1223, 0, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1223, 1789, 1223, 0, 1799,
	1223, 0, 0, 0, 0, 0, 1779, 1781, 0, 0,
	0, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 1796, 0, 0, 4503, 0,
	0, 0, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 1223, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 1306, 1772, 0, 0, 263, 263,
	263, 0, 0, 0, 1223, 0, 263, 0, 0, 1223,
	0, 0, 0, 263, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 1797, 0,
	263, 0, 0, 0, 1223, 1223, 1223, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4503,
	4649, 0, 1306, 0, 0, 0, 0, 1223, 4653, 0,
	0, 0, 0, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 0, 0, 1223, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 1306, 1306, 263,
	0, 0, 0, 0, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	1223, 0, 0, 1223, 1763, 1764, 1770, 1791, 1769, 1765,
	0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759,
	0, 1223, 1223, 0, 0, 0, 0, 0, 3121, 0,
	0, 0, 263, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 263, 0, 263, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 1306, 0, 1306, 0, 1306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1306, 1306, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 1306, 263, 0, 0, 263, 1223, 0, 0,
	0, 0, 0, 0, 1306, 0, 1306, 1306, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	263, 0, 263, 0, 263, 0, 263, 0, 263, 0,
	0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 0, 0, 1223, 0, 0, 1223, 0,
	0, 0, 1223, 1785, 1780, 0, 0, 0, 0, 0,
	0, 1752, 1223, 1223, 0, 0, 0, 0, 263, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1096, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 1306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	261, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1775, 1776, 1777, 802, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 1306, 0,
	0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 1780, 0, 0, 1789, 0, 0,
	1799, 1752, 0, 0, 0, 0, 0, 1779, 1781, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 1796, 0, 0, 0,
	0, 0, 0, 1766, 1767, 0, 1751, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 1787, 0, 0, 0, 1768, 0, 0, 0, 0,
	263, 0, 0, 1306, 0, 0, 1772, 0, 1212, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1219, 0, 1223, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 257, 257, 673, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 1786, 0, 0,
	1774, 1775, 1776, 1777, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 263, 0, 0, 263, 0, 0,
	0, 263, 0, 263, 0, 0, 0, 0, 0, 0,
	263, 263, 0, 0, 0, 0, 1306, 1306, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 1779, 1781, 0,
	1778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 1796, 0, 1306, 0,
	0, 1773, 0, 1766, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 263, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 1790, 263,
	0, 0, 0, 706, 0, 0, 1772, 0, 707, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	1306, 0, 0, 0, 0, 0, 0, 708, 0, 1797,
	0, 0, 0, 0, 1306, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 263, 0, 1786, 0, 0,
	0, 0, 0, 0, 723, 0, 0, 0, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 706, 263, 0, 1306, 0, 707,
	1788, 729, 263, 0, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 711, 0, 0, 0, 0, 0, 0, 1306, 3118,
	1778, 0, 0, 0, 0, 0, 0, 0, 708, 0,
	1306, 0, 1306, 0, 712, 0, 0, 0, 0, 709,
	0, 1773, 0, 263, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 713, 0, 0, 714,
	710, 0, 263, 0, 263, 0, 0, 0, 1790, 0,
	0, 0, 263, 0, 0, 738, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	263, 263, 263, 263, 0, 0, 0, 0, 0, 263,
	0, 0, 263, 0, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 713, 0, 0,
	714, 0, 0, 263, 0, 0, 0, 0, 0, 725,
	0, 263, 0, 0, 0, 0, 738, 0, 0, 0,
	1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 728, 0, 0, 0, 0, 0, 0, 0, 3117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 261, 716,
	261, 261, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 0, 0, 0, 736, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 261, 261, 0, 0, 261, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 0, 802, 718, 0, 0, 0, 0, 733, 734,
	731, 0, 0, 0, 0, 0, 726, 0, 0, 719,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	717, 261, 261, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 0, 0, 261, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 737, 0, 0,
	730, 0, 1306, 0, 718, 0, 0, 0, 0, 733,
	734, 731, 0, 0, 739, 0, 0, 726, 0, 0,
	719, 0, 0, 0, 0, 724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 0, 1269, 0, 1269, 1269, 0, 0, 0,
	0, 720, 0, 727, 0, 0, 0, 0, 267, 0,
	0, 0, 721, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 722, 0, 1306, 1306,
	0, 730, 0, 0, 0, 263, 0, 0, 0, 263,
	263, 0, 261, 0, 1356, 739, 0, 0, 0, 0,
	1462, 0, 0, 0, 0, 0, 724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 0, 794, 0, 0, 0, 1749, 1750, 0,
	1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	1780, 263, 263, 0, 1306, 263, 0, 1752, 0, 0,
	0, 0, 263, 0, 0, 0, 1798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1306, 263, 1306, 0,
	1587, 1588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 1306, 0, 0, 0,
	1306, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1306, 0, 0, 0, 0, 0, 263,
	1306, 0, 1306, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 1306, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1306, 1697, 0, 0,
	0, 0, 0, 263, 0, 0, 1774, 1775, 1776, 1777,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 1913, 0, 1219, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1306, 1306,
	0, 0, 261, 1913, 261, 0, 263, 0, 0, 0,
	802, 0, 0, 1789, 0, 0, 1799, 802, 0, 0,
	0, 1306, 0, 1779, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 1796, 0, 261, 0, 0, 0, 0, 1766,
	1767, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1306, 0, 263, 1306, 263, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1929, 0, 0, 0, 1778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 0, 1462,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 802, 1790, 0, 0, 0, 0, 1269,
	0, 0, 0, 0, 0, 0, 1462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	261, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760,
	1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 802, 261, 0, 261, 0, 261, 0,
	261, 0, 261, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1306, 0, 0, 1306, 263, 0, 0, 0, 0,
	0, 1304, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 1306, 0, 0, 1362, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 1304, 0, 0,
	0, 2197, 0, 0, 0, 2204, 0, 1306, 1306, 1306,
	0, 0, 0, 0, 0, 0, 0, 2217, 0, 0,
	0, 0, 0, 0, 1306, 0, 0, 0, 1304, 0,
	0, 0, 0, 2229, 0, 2229, 0, 0, 0, 1306,
	0, 2236, 0, 263, 0, 1306, 0, 0, 0, 0,
	0, 0, 0, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	0, 0, 0, 0, 1304, 0, 0, 0, 0, 1304,
	0, 0, 2204, 0, 0, 2261, 0, 0, 0, 0,
	0, 0, 0, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2281, 0, 0, 0,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 2294,
	0, 2296, 0, 2298, 0, 2300, 0, 2301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 1219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2323, 0, 0,
	1219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 1306,
	0, 1306, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	1306, 0, 0, 0, 0, 0, 0, 0, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 1306, 0, 261, 0,
	0, 261, 0, 0, 0, 261, 1306, 261, 1306, 263,
	0, 1306, 263, 0, 261, 261, 0, 0, 0, 0,
	0, 0, 1306, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1306, 1306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1306, 0, 0, 263, 0, 0, 0,
	261, 0, 0, 0, 0, 1306, 263, 0, 0, 0,
	1306, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 1306, 1306, 0, 2656,
	0, 0, 0, 261, 0, 0, 0, 0, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 802,
	0, 0, 0, 1362, 0, 0, 0, 0, 1306, 0,
	0, 0, 0, 0, 0, 794, 0, 0, 0, 0,
	0, 0, 794, 0, 0, 1304, 0, 261, 0, 802,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	0, 1306, 0, 2702, 0, 0, 1269, 0, 0, 0,
	1269, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1306, 0, 0, 0, 0, 0, 0, 2217,
	0, 263, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1304, 0, 0, 0, 261, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 1306, 0, 0, 0, 0, 0,
	0, 1306, 263, 0, 0, 0, 1306, 1306, 0, 0,
	0, 0, 0, 0, 261, 261, 261, 261, 0, 0,
	0, 0, 0, 261, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1462, 0,
	0, 1306, 0, 0, 1306, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2204, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 0, 0, 0, 0, 1304, 1304, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2988, 0, 2991, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 0, 1304, 0, 1304, 0, 0, 0, 263, 3016,
	1462, 3018, 1462, 1306, 0, 0, 0, 0, 3024, 0,
	1304, 1304, 0, 1306, 1306, 0, 0, 0, 0, 0,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 0, 1304, 0, 1304, 1304, 1304, 0, 0,
	0, 0, 1269, 1305, 0, 0, 0, 0, 0, 0,
	3052, 0, 0, 0, 0, 0, 0, 0, 794, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 263, 0, 1363, 0, 0,
	0, 1363, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 820, 0, 0,
	0, 1913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 822, 0, 0,
	1305, 0, 823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1305, 0, 0, 261,
	1362, 0, 0, 261, 261, 0, 0, 0, 0, 0,
	0, 824, 0, 841, 0, 0, 1305, 0, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 1305, 263, 0, 825, 0,
	0, 0, 0, 826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 850, 0, 0, 0, 0,
	0, 827, 0, 0, 0, 261, 261, 0, 0, 261,
	0, 0, 0, 0, 0, 848, 1913, 1362, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 1749, 1750, 821, 1782,
	1783, 1784, 1792, 1793, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 1780,
	828, 0, 0, 829, 0, 0, 1752, 0, 0, 0,
	0, 0, 0, 0, 852, 1798, 0, 0, 0, 738,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 802, 0, 0,
	0, 1771, 1362, 0, 0, 261, 0, 0, 0, 261,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 1269, 0, 0, 1219, 1462, 1462,
	0, 0, 0, 851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3288,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1775, 1776, 1777, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1304, 1304, 0, 0, 0,
	3339, 3341, 830, 0, 2217, 0, 0, 0, 0, 0,
	0, 0, 0, 832, 0, 0, 0, 261, 0, 261,
	0, 0, 1789, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 1779, 1781, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 833, 0, 0, 0, 0, 0, 1795,
	0, 1796, 0, 0, 0, 261, 0, 0, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 842,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	737, 0, 0, 0, 0, 1363, 0, 0, 0, 0,
	0, 1772, 819, 0, 843, 0, 0, 0, 0, 0,
	0, 0, 0, 834, 0, 0, 0, 1305, 0, 1362,
	3428, 0, 0, 0, 3432, 0, 0, 0, 0, 0,
	0, 0, 0, 1304, 0, 0, 0, 840, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 835, 0, 0, 0, 836, 855,
	0, 854, 1786, 0, 0, 837, 0, 0, 0, 0,
	0, 0, 0, 0, 794, 0, 1304, 0, 0, 838,
	0, 0, 0, 1305, 847, 3485, 0, 0, 0, 0,
	856, 0, 853, 0, 1305, 0, 0, 0, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 0, 1219, 1219, 1363, 1304,
	0, 1304, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 0,
	0, 0, 3525, 0, 1462, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	3538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 1363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 0, 261, 0, 0,
	0, 0, 0, 0, 3116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 1305, 0, 1305, 261, 1305, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 1305, 0, 0, 0, 0, 0, 0,
	1219, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 1305, 1305, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1362, 0, 0, 0, 0, 0,
	0, 0, 1363, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 2217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2217, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 3806, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 1304, 1304, 1219,
	2217, 0, 0, 0, 0, 3824, 0, 0, 0, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 0, 0, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1913, 0, 1913, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3873, 0, 0, 0, 0, 261, 0, 0,
	0, 1749, 1750, 1304, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 261, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 1785, 1780, 1304, 0, 1304, 1363, 0,
	0, 1752, 0, 0, 0, 0, 261, 0, 0, 0,
	1798, 0, 0, 0, 1362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1363, 1304, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	261, 0, 1304, 0, 0, 1768, 0, 0, 0, 1304,
	261, 1304, 0, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1304, 0, 0, 0, 0, 0, 1913,
	0, 0, 0, 0, 0, 1304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 1305, 0,
	1774, 1775, 1776, 1777, 0, 0, 0, 1304, 1304, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1799, 0, 4007, 0, 0, 0, 0, 1779, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2217, 0,
	1362, 0, 0, 1362, 1795, 0, 1796, 0, 0, 0,
	0, 0, 0, 1766, 1767, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1363, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4090, 261, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 1362, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1305, 0, 1305, 0, 0, 1913, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 261, 261, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 1362, 0, 0, 0, 0, 1913,
	4187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 0, 0, 0, 0, 0, 0, 0, 0,
	1913, 0, 261, 1913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 2469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4308,
	1462, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	1304, 0, 0, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1304, 0, 0, 0, 0, 0, 0, 1749, 1750,
	0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1304, 1304, 1304, 0,
	1785, 1780, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 1304, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	261, 0, 0, 1363, 1362, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 4393, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 1362, 0,
	0, 0, 1768, 0, 0, 0, 1363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1363, 0, 0, 0, 0, 0,
	0, 0, 0, 1913, 0, 1913, 0, 0, 0, 1305,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4444, 0, 0, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 4480, 0, 0, 0, 1362, 0,
	1362, 0, 0, 0, 1789, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 1779, 1781, 0, 0, 1304, 1304,
	0, 0, 0, 0, 0, 1305, 0, 1362, 0, 0,
	0, 1795, 0, 1796, 0, 0, 0, 0, 0, 0,
	1766, 1767, 0, 0, 0, 0, 0, 1305, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 4540, 1363, 0, 0, 0,
	0, 0, 0, 1772, 0, 1304, 0, 1305, 0, 0,
	0, 1305, 0, 0, 0, 1362, 0, 1304, 0, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 1305, 0, 1305, 0, 0, 1797, 1363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1304, 1304, 1786, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1362, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	1305, 0, 0, 0, 0, 0, 0, 1778, 0, 0,
	0, 0, 0, 0, 1304, 1304, 1304, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 1362, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 1750,
	0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 0, 1362, 0, 0,
	1785, 1780, 1363, 0, 0, 1363, 1749, 1750, 1752, 1782,
	1783, 1784, 1792, 1793, 1794, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 1780,
	0, 0, 0, 0, 0, 0, 1752, 0, 1362, 0,
	1304, 0, 0, 1751, 0, 1798, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 1362, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 1363, 1788, 0, 0,
	0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0,
	0, 0, 4435, 1362, 0, 0, 0, 0, 0, 0,
	1304, 0, 0, 0, 0, 1304, 1304, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1775, 1776, 1777, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	1362, 0, 0, 1304, 1789, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 1779, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 1789, 1796, 0, 1799, 0, 0, 0, 0,
	1766, 1767, 1779, 1781, 0, 0, 1363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 1795,
	0, 1796, 0, 0, 0, 0, 0, 0, 1766, 1767,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1304, 1304, 0, 0, 0, 1778, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 0, 1305, 0, 0, 1305, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 1773, 0, 0, 0,
	0, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793,
	1794, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 1785, 1780, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 0, 1305, 1305,
	1305, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	1305, 0, 0, 0, 0, 0, 1363, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	1363, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0,
	0, 0, 4431, 0, 0, 1788, 0, 0, 0, 0,
	1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0,
	4352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1775, 1776, 1777, 0, 0, 0, 0, 0,
	0, 1757, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792,
	1793, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 1780, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 1789, 0,
	0, 1799, 1798, 0, 0, 0, 0, 0, 1779, 1781,
	1363, 0, 1363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 1796, 1751, 0,
	1305, 1305, 0, 0, 1766, 1767, 0, 0, 1771, 1363,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1363, 0, 1305,
	0, 0, 1305, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 1363, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 1775, 1776, 1777, 0, 0, 1786, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1305, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 1789,
	0, 0, 1799, 0, 0, 0, 1363, 0, 0, 1779,
	1781, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 1795, 0, 1796, 0,
	0, 0, 0, 0, 0, 1766, 1767, 0, 0, 0,
	0, 0, 1773, 0, 0, 0, 1305, 1305, 1305, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 0, 1363,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	1363, 0, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 1778, 0, 0, 0, 4317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 1363, 0, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 1305, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1363, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 1763, 1764, 1770,
	1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755,
	1756, 1758, 1759, 0, 0, 0, 0, 4316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1360, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1305, 1305, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 1365, 278, 279, 1366, 1367,
	1368, 1305, 1369, 619, 1370, 1371, 1372, 1373, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 1374, 624, 290, 291, 292, 293,
	294, 295, 1375, 1376, 0, 296, 625, 626, 627, 1377,
	297, 298, 628, 1378, 1307, 1379, 299, 300, 301, 302,
	303, 304, 305, 0, 1380, 307, 308, 309, 306, 310,
	1381, 311, 0, 312, 313, 314, 315, 316, 317, 1382,
	318, 319, 320, 1164, 321, 322, 323, 1383, 1384, 1386,
	1385, 1387, 1388, 1389, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 1390, 333, 330, 331, 1391, 334, 332,
	335, 1392, 336, 337, 338, 1393, 1394, 339, 340, 341,
	1395, 342, 343, 1396, 344, 345, 346, 1397, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 1398, 268, 1399, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 1400,
	365, 366, 1401, 1402, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1403, 378,
	637, 1404, 638, 379, 1405, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1167, 385, 386, 1406, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1407, 1166, 395, 642, 643, 1408, 644, 1409, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1410, 409,
	411, 410, 1411, 412, 646, 1171, 413, 414, 1172, 1412,
	415, 0, 0, 0, 416, 417, 420, 1413, 1414, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1415, 270, 1175, 460, 461, 1416,
	647, 462, 648, 464, 465, 1417, 0, 466, 0, 1418,
	1419, 468, 469, 470, 1420, 1421, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1422, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	1423, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 1424, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1425, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1426, 546, 547, 545, 548, 549, 550, 1427, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 1428, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 1429, 577, 578, 0, 574, 565, 1430, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 1431, 587,
	660, 661, 662, 663, 1432, 596, 1433, 588, 589, 590,
	664, 591, 665, 1434, 592, 593, 594, 595, 0, 597,
	598, 1435, 1436, 599, 600, 601, 603, 604, 602, 605,
	1437, 606, 1438, 0, 607, 608, 609, 666, 667, 668,
	1439, 611, 610, 612, 669, 1440, 613, 1441, 1442, 1443,
	1444, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1360, 0, 0, 0, 0, 0, 0, 0, 2634,
	0, 0, 0, 0, 0, 0, 0, 2635, 271, 273,
	272, 274, 275, 276, 277, 1365, 278, 279, 1366, 1367,
	1368, 0, 1369, 619, 1370, 1371, 1372, 1373, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 1374, 624, 290, 291, 292, 293,
	294, 295, 1375, 1376, 0, 296, 625, 626, 627, 1377,
	297, 298, 628, 1378, 1307, 1379, 299, 300, 301, 302,
	303, 304, 305, 0, 1380, 307, 308, 309, 306, 310,
	1381, 311, 0, 312, 313, 314, 315, 316, 317, 1382,
	318, 319, 320, 1164, 321, 322, 323, 1383, 1384, 1386,
	1385, 1387, 1388, 1389, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 1390, 333, 330, 331, 1391, 334, 332,
	335, 1392, 336, 337, 338, 1393, 1394, 339, 340, 341,
	1395, 342, 343, 1396, 344, 345, 346, 1397, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 1398, 268, 1399, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 1400,
	365, 366, 1401, 1402, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1403, 378,
	637, 1404, 638, 379, 1405, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1167, 385, 386, 1406, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1407, 1166, 395, 642, 643, 1408, 644, 1409, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1410, 409,
	411, 410, 1411, 412, 646, 1171, 413, 414, 1172, 1412,
	415, 0, 0, 0, 416, 417, 420, 1413, 1414, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1415, 270, 1175, 460, 461, 1416,
	647, 462, 648, 464, 465, 1417, 0, 466, 0, 1418,
	1419, 468, 469, 470, 1420, 1421, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1422, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	1423, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 1424, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1425, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1426, 546, 547, 545, 548, 549, 550, 1427, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 1428, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 1429, 577, 578, 0, 574, 565, 1430, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 1431, 587,
	660, 661, 662, 663, 1432, 596, 1433, 588, 589, 590,
	664, 591, 665, 1434, 592, 593, 594, 595, 0, 597,
	598, 1435, 1436, 599, 600, 601, 603, 604, 602, 605,
	1437, 606, 1438, 0, 607, 608, 609, 666, 667, 668,
	1439, 611, 610, 612, 669, 1440, 613, 1441, 1442, 1443,
	1444, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1360,
	0, 0, 0, 0, 3564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3566, 271, 273, 272, 274,
	275, 276, 277, 1365, 278, 279, 1366, 1367, 1368, 0,
	1369, 619, 1370, 1371, 1372, 1373, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 1374, 624, 290, 291, 292, 293, 294, 295,
	1375, 1376, 0, 296, 625, 626, 627, 1377, 297, 298,
	628, 1378, 1307, 1379, 299, 300, 301, 302, 303, 304,
	305, 0, 1380, 307, 308, 309, 306, 310, 1381, 311,
	0, 312, 313, 314, 315, 316, 317, 1382, 318, 319,
	320, 1164, 321, 322, 323, 1383, 1384, 1386, 1385, 1387,
	1388, 1389, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 1390, 333, 330, 331, 1391, 334, 332, 335, 1392,
	336, 337, 338, 1393, 1394, 339, 340, 341, 1395, 342,
	343, 1396, 344, 345, 346, 1397, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 1398, 268, 1399, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 1400, 365, 366,
	1401, 1402, 1165, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1403, 378, 637, 1404,
	638, 379, 1405, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 1167, 385, 386, 1406, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1407,
	1166, 395, 642, 643, 1408, 644, 1409, 397, 398, 1168,
	645, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1410, 409, 411, 410,
	1411, 412, 646, 1171, 413, 414, 1172, 1412, 415, 0,
	0, 0, 416, 417, 420, 1413, 1414, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 1415, 270, 1175, 460, 461, 1416, 647, 462,
	648, 464, 465, 1417, 0, 466, 0, 1418, 1419, 468,
	469, 470, 1420, 1421, 471, 472, 649, 1176, 473, 1177,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1422, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 1423, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 1424, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1425, 522, 523, 524, 1178,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1426,
	546, 547, 545, 548, 549, 550, 1427, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 1428, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	1429, 577, 578, 0, 574, 565, 1430, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 1431, 587, 660, 661,
	662, 663, 1432, 596, 1433, 588, 589, 590, 664, 591,
	665, 1434, 592, 593, 594, 595, 0, 597, 598, 1435,
	1436, 599, 600, 601, 603, 604, 602, 605, 1437, 606,
	1438, 0, 607, 608, 609, 666, 667, 668, 1439, 611,
	610, 612, 669, 1440, 613, 1441, 1442, 1443, 1444, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 1360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3944, 271, 273,
	272, 274, 275, 276, 277, 1365, 278, 279, 1366, 1367,
	1368, 0, 1369, 619, 1370, 1371, 1372, 1373, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 1374, 624, 290, 291, 292, 293,
	294, 295, 1375, 1376, 0, 296, 625, 626, 627, 1377,
	297, 298, 628, 1378, 1307, 1379, 299, 300, 301, 302,
	303, 304, 305, 0, 1380, 307, 308, 309, 306, 310,
	1381, 311, 0, 312, 313, 314, 315, 316, 317, 1382,
	318, 319, 320, 1164, 321, 322, 323, 1383, 1384, 1386,
	1385, 1387, 1388, 1389, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 1390, 333, 330, 331, 1391, 334, 332,
	335, 1392, 336, 337, 338, 1393, 1394, 339, 340, 341,
	1395, 342, 343, 1396, 344, 345, 346, 1397, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 1398, 268, 1399, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 1400,
	365, 366, 1401, 1402, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1403, 378,
	637, 1404, 638, 379, 1405, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1167, 385, 386, 1406, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1407, 1166, 395, 642, 643, 1408, 644, 1409, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1410, 409,
	411, 410, 1411, 412, 646, 1171, 413, 414, 1172, 1412,
	415, 0, 0, 0, 416, 417, 420, 1413, 1414, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1415, 270, 1175, 460, 461, 1416,
	647, 462, 648, 464, 465, 1417, 0, 466, 0, 1418,
	1419, 468, 469, 470, 1420, 1421, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1422, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	1423, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 1424, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1425, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1426, 546, 547, 545, 548, 549, 550, 1427, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 1428, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 1429, 577, 578, 0, 574, 565, 1430, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 1431, 587,
	660, 661, 662, 663, 1432, 596, 1433, 588, 589, 590,
	664, 591, 665, 1434, 592, 593, 594, 595, 0, 597,
	598, 1435, 1436, 599, 600, 601, 603, 604, 602, 605,
	1437, 606, 1438, 0, 607, 608, 609, 666, 667, 668,
	1439, 611, 610, 612, 669, 1440, 613, 1441, 1442, 1443,
	1444, 614, 615, 670, 616, 617, 618, 0, 1360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4141, 271, 273, 272, 274, 275,
	276, 277, 1365, 278, 279, 1366, 1367, 1368, 0, 1369,
	619, 1370, 1371, 1372, 1373, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 1374, 624, 290, 291, 292, 293, 294, 295, 1375,
	1376, 0, 296, 625, 626, 627, 1377, 297, 298, 628,
	1378, 1307, 1379, 299, 300, 301, 302, 303, 304, 305,
	0, 1380, 307, 308, 309, 306, 310, 1381, 311, 0,
	312, 313, 314, 315, 316, 317, 1382, 318, 319, 320,
	1164, 321, 322, 323, 1383, 1384, 1386, 1385, 1387, 1388,
	1389, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	1390, 333, 330, 331, 1391, 334, 332, 335, 1392, 336,
	337, 338, 1393, 1394, 339, 340, 341, 1395, 342, 343,
	1396, 344, 345, 346, 1397, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 1398, 268, 1399, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 1400, 365, 366, 1401,
	1402, 1165, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1403, 378, 637, 1404, 638,
	379, 1405, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 1167, 385, 386, 1406, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 1407, 1166,
	395, 642, 643, 1408, 644, 1409, 397, 398, 1168, 645,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1410, 409, 411, 410, 1411,
	412, 646, 1171, 413, 414, 1172, 1412, 415, 0, 0,
	0, 416, 417, 420, 1413, 1414, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1415, 270, 1175, 460, 461, 1416, 647, 462, 648,
	464, 465, 1417, 0, 466, 0, 1418, 1419, 468, 469,
	470, 1420, 1421, 471, 472, 649, 1176, 473, 1177, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 1422, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 1423, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 1424, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 1425, 522, 523, 524, 1178, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 1426, 546,
	547, 545, 548, 549, 550, 1427, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 1428, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 1429,
	577, 578, 0, 574, 565, 1430, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 1431, 587, 660, 661, 662,
	663, 1432, 596, 1433, 588, 589, 590, 664, 591, 665,
	1434, 592, 593, 594, 595, 0, 597, 598, 1435, 1436,
	599, 600, 601, 603, 604, 602, 605, 1437, 606, 1438,
	0, 607, 608, 609, 666, 667, 668, 1439, 611, 610,
	612, 669, 1440, 613, 1441, 1442, 1443, 1444, 614, 615,
	670, 616, 617, 618, 0, 1360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4016, 271, 273, 272, 274, 275, 276, 277, 1365,
	278, 279, 1366, 1367, 1368, 0, 1369, 619, 1370, 1371,
	1372, 1373, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 1374, 624,
	290, 291, 292, 293, 294, 295, 1375, 1376, 0, 296,
	625, 626, 627, 1377, 297, 298, 628, 1378, 1307, 1379,
	299, 300, 301, 302, 303, 304, 305, 0, 1380, 307,
	308, 309, 306, 310, 1381, 311, 0, 312, 313, 314,
	315, 316, 317, 1382, 318, 319, 320, 1164, 321, 322,
	323, 1383, 1384, 1386, 1385, 1387, 1388, 1389, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 1390, 333, 330,
	331, 1391, 334, 332, 335, 1392, 336, 337, 338, 1393,
	1394, 339, 340, 341, 1395, 342, 343, 1396, 344, 345,
	346, 1397, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 1398, 268,
	1399, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 1400, 365, 366, 1401, 1402, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1403, 378, 637, 1404, 638, 379, 1405, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1167, 385,
	386, 1406, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 1407, 1166, 395, 642, 643,
	1408, 644, 1409, 397, 398, 1168, 645, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1410, 409, 411, 410, 1411, 412, 646, 1171,
	413, 414, 1172, 1412, 415, 0, 0, 0, 416, 417,
	420, 1413, 1414, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 1415, 270,
	1175, 460, 461, 1416, 647, 462, 648, 464, 465, 1417,
	0, 466, 0, 1418, 1419, 468, 469, 470, 1420, 1421,
	471, 472, 649, 1176, 473, 1177, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 1422, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 1423, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	1424, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 1425, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 1426, 546, 547, 545, 548,
	549, 550, 1427, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 1428,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 1429, 577, 578, 0,
	574, 565, 1430, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 1431, 587, 660, 661, 662, 663, 1432, 596,
	1433, 588, 589, 590, 664, 591, 665, 1434, 592, 593,
	594, 595, 0, 597, 598, 1435, 1436, 599, 600, 601,
	603, 604, 602, 605, 1437, 606, 1438, 0, 607, 608,
	609, 666, 667, 668, 1439, 611, 610, 612, 669, 1440,
	613, 1441, 1442, 1443, 1444, 614, 615, 670, 616, 617,
	618, 0, 1360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3874, 271,
	273, 272, 274, 275, 276, 277, 1365, 278, 279, 1366,
	1367, 1368, 0, 1369, 619, 1370, 1371, 1372, 1373, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 1374, 624, 290, 291, 292,
	293, 294, 295, 1375, 1376, 0, 296, 625, 626, 627,
	1377, 297, 298, 628, 1378, 1307, 1379, 299, 300, 301,
	302, 303, 304, 305, 0, 1380, 307, 308, 309, 306,
	310, 1381, 311, 0, 312, 313, 314, 315, 316, 317,
	1382, 318, 319, 320, 1164, 321, 322, 323, 1383, 1384,
	1386, 1385, 1387, 1388, 1389, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 1390, 333, 330, 331, 1391, 334,
	332, 335, 1392, 336, 337, 338, 1393, 1394, 339, 340,
	341, 1395, 342, 343, 1396, 344, 345, 346, 1397, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 1398, 268, 1399, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	1400, 365, 366, 1401, 1402, 1165, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1403,
	378, 637, 1404, 638, 379, 1405, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 1167, 385, 386, 1406, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1407, 1166, 395, 642, 643, 1408, 644, 1409,
	397, 398, 1168, 645, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1410,
	409, 411, 410, 1411, 412, 646, 1171, 413, 414, 1172,
	1412, 415, 0, 0, 0, 416, 417, 420, 1413, 1414,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1415, 270, 1175, 460, 461,
	1416, 647, 462, 648, 464, 465, 1417, 0, 466, 0,
	1418, 1419, 468, 469, 470, 1420, 1421, 471, 472, 649,
	1176, 473, 1177, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1422, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 1423, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 1424, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1425, 522,
	523, 524, 1178, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1426, 546, 547, 545, 548, 549, 550, 1427,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 1428, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 1429, 577, 578, 0, 574, 565, 1430,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 1431,
	587, 660, 661, 662, 663, 1432, 596, 1433, 588, 589,
	590, 664, 591, 665, 1434, 592, 593, 594, 595, 0,
	597, 598, 1435, 1436, 599, 600, 601, 603, 604, 602,
	605, 1437, 606, 1438, 0, 607, 608, 609, 666, 667,
	668, 1439, 611, 610, 612, 669, 1440, 613, 1441, 1442,
	1443, 1444, 614, 615, 670, 616, 617, 618, 0, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3582, 271, 273, 272, 274,
	275, 276, 277, 1365, 278, 279, 1366, 1367, 1368, 0,
	1369, 619, 1370, 1371, 1372, 1373, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 1374, 624, 290, 291, 292, 293, 294, 295,
	1375, 1376, 0, 296, 625, 626, 627, 1377, 297, 298,
	628, 1378, 1307, 1379, 299, 300, 301, 302, 303, 304,
	305, 0, 1380, 307, 308, 309, 306, 310, 1381, 311,
	0, 312, 313, 314, 315, 316, 317, 1382, 318, 319,
	320, 1164, 321, 322, 323, 1383, 1384, 1386, 1385, 1387,
	1388, 1389, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 1390, 333, 330, 331, 1391, 334, 332, 335, 1392,
	336, 337, 338, 1393, 1394, 339, 340, 341, 1395, 342,
	343, 1396, 344, 345, 346, 1397, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 1398, 268, 1399, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 1400, 365, 366,
	1401, 1402, 1165, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1403, 378, 637, 1404,
	638, 379, 1405, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 1167, 385, 386, 1406, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1407,
	1166, 395, 642, 643, 1408, 644, 1409, 397, 398, 1168,
	645, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1410, 409, 411, 410,
	1411, 412, 646, 1171, 413, 414, 1172, 1412, 415, 0,
	0, 0, 416, 417, 420, 1413, 1414, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 1415, 270, 1175, 460, 461, 1416, 647, 462,
	648, 464, 465, 1417, 0, 466, 0, 1418, 1419, 468,
	469, 470, 1420, 1421, 471, 472, 649, 1176, 473, 1177,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1422, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 1423, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 1424, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1425, 522, 523, 524, 1178,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1426,
	546, 547, 545, 548, 549, 550, 1427, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 1428, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	1429, 577, 578, 0, 574, 565, 1430, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 1431, 587, 660, 661,
	662, 663, 1432, 596, 1433, 588, 589, 590, 664, 591,
	665, 1434, 592, 593, 594, 595, 0, 597, 598, 1435,
	1436, 599, 600, 601, 603, 604, 602, 605, 1437, 606,
	1438, 0, 607, 608, 609, 666, 667, 668, 1439, 611,
	610, 612, 669, 1440, 613, 1441, 1442, 1443, 1444, 614,
	615, 670, 616, 617, 618, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3413, 271, 273, 272, 274, 275, 276, 277,
	1365, 278, 279, 1366, 1367, 1368, 0, 1369, 619, 1370,
	1371, 1372, 1373, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 1374,
	624, 290, 291, 292, 293, 294, 295, 1375, 1376, 0,
	296, 625, 626, 627, 1377, 297, 298, 628, 1378, 1307,
	1379, 299, 300, 301, 302, 303, 304, 305, 0, 1380,
	307, 308, 309, 306, 310, 1381, 311, 0, 312, 313,
	314, 315, 316, 317, 1382, 318, 319, 320, 1164, 321,
	322, 323, 1383, 1384, 1386, 1385, 1387, 1388, 1389, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 1390, 333,
	330, 331, 1391, 334, 332, 335, 1392, 336, 337, 338,
	1393, 1394, 339, 340, 341, 1395, 342, 343, 1396, 344,
	345, 346, 1397, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 1398,
	268, 1399, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 1400, 365, 366, 1401, 1402, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1403, 378, 637, 1404, 638, 379, 1405,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1167,
	385, 386, 1406, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1407, 1166, 395, 642,
	643, 1408, 644, 1409, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1410, 409, 411, 410, 1411, 412, 646,
	1171, 413, 414, 1172, 1412, 415, 0, 0, 0, 416,
	417, 420, 1413, 1414, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1415,
	270, 1175, 460, 461, 1416, 647, 462, 648, 464, 465,
	1417, 0, 466, 0, 1418, 1419, 468, 469, 470, 1420,
	1421, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1422,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 1423, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 1424, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1425, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1426, 546, 547, 545,
	548, 549, 550, 1427, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	1428, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 1429, 577, 578,
	0, 574, 565, 1430, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 1431, 587, 660, 661, 662, 663, 1432,
	596, 1433, 588, 589, 590, 664, 591, 665, 1434, 592,
	593, 594, 595, 0, 597, 598, 1435, 1436, 599, 600,
	601, 603, 604, 602, 605, 1437, 606, 1438, 0, 607,
	608, 609, 666, 667, 668, 1439, 611, 610, 612, 669,
	1440, 613, 1441, 1442, 1443, 1444, 614, 615, 670, 616,
	617, 618, 0, 1360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2492,
	271, 273, 272, 274, 275, 276, 277, 1365, 278, 279,
	1366, 1367, 1368, 0, 1369, 619, 1370, 1371, 1372, 1373,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 1374, 624, 290, 291,
	292, 293, 294, 295, 1375, 1376, 0, 296, 625, 626,
	627, 1377, 297, 298, 628, 1378, 1307, 1379, 299, 300,
	301, 302, 303, 304, 305, 0, 1380, 307, 308, 309,
	306, 310, 1381, 311, 0, 312, 313, 314, 315, 316,
	317, 1382, 318, 319, 320, 1164, 321, 322, 323, 1383,
	1384, 1386, 1385, 1387, 1388, 1389, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 1390, 333, 330, 331, 1391,
	334, 332, 335, 1392, 336, 337, 338, 1393, 1394, 339,
	340, 341, 1395, 342, 343, 1396, 344, 345, 346, 1397,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 1398, 268, 1399, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 1400, 365, 366, 1401, 1402, 1165, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1403, 378, 637, 1404, 638, 379, 1405, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 1167, 385, 386, 1406,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1407, 1166, 395, 642, 643, 1408, 644,
	1409, 397, 398, 1168, 645, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1410, 409, 411, 410, 1411, 412, 646, 1171, 413, 414,
	1172, 1412, 415, 0, 0, 0, 416, 417, 420, 1413,
	1414, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1415, 270, 1175, 460,
	461, 1416, 647, 462, 648, 464, 465, 1417, 0, 466,
	0, 1418, 1419, 468, 469, 470, 1420, 1421, 471, 472,
	649, 1176, 473, 1177, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1422, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 1423, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 1424, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1425,
	522, 523, 524, 1178, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1426, 546, 547, 545, 548, 549, 550,
	1427, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 1428, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 1429, 577, 578, 0, 574, 565,
	1430, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	1431, 587, 660, 661, 662, 663, 1432, 596, 1433, 588,
	589, 590, 664, 591, 665, 1434, 592, 593, 594, 595,
	0, 597, 598, 1435, 1436, 599, 600, 601, 603, 604,
	602, 605, 1437, 606, 1438, 0, 607, 608, 609, 666,
	667, 668, 1439, 611, 610, 612, 669, 1440, 613, 1441,
	1442, 1443, 1444, 614, 615, 670, 616, 617, 618, 1456,
	0, 1360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2178, 0, 271, 273,
	272, 274, 275, 276, 277, 1365, 278, 279, 1366, 1367,
	1368, 0, 1369, 619, 1370, 1371, 1372, 1373, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 1374, 624, 290, 291, 292, 293,
	294, 295, 1375, 1376, 0, 296, 625, 626, 627, 1377,
	297, 298, 628, 1378, 1307, 1379, 299, 300, 301, 302,
	303, 304, 305, 0, 1380, 307, 308, 309, 306, 310,
	1381, 311, 0, 312, 313, 314, 315, 316, 317, 1382,
	318, 319, 320, 1164, 321, 322, 323, 1383, 1384, 1386,
	1385, 1387, 1388, 1389, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 1390, 333, 330, 331, 1391, 334, 332,
	335, 1392, 336, 337, 338, 1393, 1394, 339, 340, 341,
	1395, 342, 343, 1396, 344, 345, 346, 1397, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 1398, 268, 1399, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 1400,
	365, 366, 1401, 1402, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1403, 378,
	637, 1404, 638, 379, 1405, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1167, 385, 386, 1406, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1407, 1166, 395, 642, 643, 1408, 644, 1409, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1410, 409,
	411, 410, 1411, 412, 646, 1171, 413, 414, 1172, 1412,
	415, 0, 0, 0, 416, 417, 420, 1413, 1414, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1415, 270, 1175, 460, 461, 1416,
	647, 462, 648, 464, 465, 1417, 0, 466, 0, 1418,
	1419, 468, 469, 470, 1420, 1421, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1422, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	1423, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 1424, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1425, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1426, 546, 547, 545, 548, 549, 550, 1427, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 1428, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 1429, 577, 578, 0, 574, 565, 1430, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 1431, 587,
	660, 661, 662, 663, 1432, 596, 1433, 588, 589, 590,
	664, 591, 665, 1434, 592, 593, 594, 595, 0, 597,
	598, 1435, 1436, 599, 600, 601, 603, 604, 602, 605,
	1437, 606, 1438, 0, 607, 608, 609, 666, 667, 668,
	1439, 611, 610, 612, 669, 1440, 613, 1441, 1442, 1443,
	1444, 614, 615, 670, 616, 617, 618, 1357, 0, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 1365, 278, 279, 1366, 1367, 1368, 0,
	1369, 619, 1370, 1371, 1372, 1373, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 1374, 624, 290, 291, 292, 293, 294, 295,
	1375, 1376, 0, 296, 625, 626, 627, 1377, 297, 298,
	628, 1378, 1307, 1379, 299, 300, 301, 302, 303, 304,
	305, 0, 1380, 307, 308, 309, 306, 310, 1381, 311,
	0, 312, 313, 314, 315, 316, 317, 1382, 318, 319,
	320, 1164, 321, 322, 323, 1383, 1384, 1386, 1385, 1387,
	1388, 1389, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 1390, 333, 330, 331, 1391, 334, 332, 335, 1392,
	336, 337, 338, 1393, 1394, 339, 340, 341, 1395, 342,
	343, 1396, 344, 345, 346, 1397, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 1398, 268, 1399, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 1400, 365, 366,
	1401, 1402, 1165, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1403, 378, 637, 1404,
	638, 379, 1405, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 1167, 385, 386, 1406, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1407,
	1166, 395, 642, 643, 1408, 644, 1409, 397, 398, 1168,
	645, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1410, 409, 411, 410,
	1411, 412, 646, 1171, 413, 414, 1172, 1412, 415, 0,
	0, 0, 416, 417, 420, 1413, 1414, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 1415, 270, 1175, 460, 461, 1416, 647, 462,
	648, 464, 465, 1417, 0, 466, 0, 1418, 1419, 468,
	469, 470, 1420, 1421, 471, 472, 649, 1176, 473, 1177,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1422, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 1423, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 1424, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1425, 522, 523, 524, 1178,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1426,
	546, 547, 545, 548, 549, 550, 1427, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 1428, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	1429, 577, 578, 0, 574, 565, 1430, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 1431, 587, 660, 661,
	662, 663, 1432, 596, 1433, 588, 589, 590, 664, 591,
	665, 1434, 592, 593, 594, 595, 0, 597, 598, 1435,
	1436, 599, 600, 601, 603, 604, 602, 605, 1437, 606,
	1438, 0, 607, 608, 609, 666, 667, 668, 1439, 611,
	610, 612, 669, 1440, 613, 1441, 1442, 1443, 1444, 614,
	615, 670, 616, 617, 618, 1360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 1365,
	278, 279, 1366, 1367, 1368, 0, 1369, 619, 1370, 1371,
	1372, 1373, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 1374, 624,
	290, 291, 292, 293, 294, 295, 1375, 1376, 0, 296,
	625, 626, 627, 1377, 297, 298, 628, 1378, 1307, 1379,
	299, 300, 301, 302, 303, 304, 305, 0, 1380, 307,
	308, 309, 306, 310, 1381, 311, 0, 312, 313, 314,
	315, 316, 317, 1382, 318, 319, 320, 1164, 321, 322,
	323, 1383, 1384, 1386, 1385, 1387, 1388, 1389, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 1390, 333, 330,
	331, 1391, 334, 332, 335, 1392, 336, 337, 338, 1393,
	1394, 339, 340, 341, 1395, 342, 343, 1396, 344, 345,
	346, 1397, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 1398, 268,
	1399, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 1400, 365, 366, 1401, 1402, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1403, 378, 637, 1404, 638, 379, 1405, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1167, 385,
	386, 1406, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 1407, 1166, 395, 642, 643,
	1408, 644, 1409, 397, 398, 1168, 645, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1410, 409, 411, 410, 1411, 412, 646, 1171,
	413, 414, 1172, 1412, 415, 0, 0, 0, 416, 417,
	420, 1413, 1414, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 1415, 270,
	1175, 460, 461, 1416, 647, 462, 648, 464, 465, 1417,
	0, 466, 0, 1418, 1419, 468, 469, 470, 1420, 1421,
	471, 472, 649, 1176, 473, 1177, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 1422, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 1423, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	1424, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 1425, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 1426, 546, 547, 545, 548,
	549, 550, 1427, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 1428,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 1429, 577, 578, 0,
	574, 565, 1430, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 1431, 587, 660, 661, 662, 663, 1432, 596,
	1433, 588, 589, 590, 664, 591, 665, 1434, 592, 593,
	594, 595, 0, 597, 598, 1435, 1436, 599, 600, 601,
	603, 604, 602, 605, 1437, 606, 1438, 0, 607, 608,
	609, 666, 667, 668, 1439, 611, 610, 612, 669, 1440,
	613, 1441, 1442, 1443, 1444, 614, 615, 670, 616, 617,
	618, 2467, 0, 1099, 1071, 1072, 1073, 1069, 1070, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 2464, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 329, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 2465, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 2463, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 2466, 0, 0, 0,
	0, 0, 0, 1083, 2462, 0, 1045, 1081, 1099, 1071,
	1072, 1073, 1069, 1070, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 329, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 230, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 232, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 1579, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 224, 614, 615,
	670, 616, 617, 618, 1058, 0, 225, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 1824, 1822,
	0, 0, 1081, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 230, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 232, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 1579, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	224, 614, 615, 670, 616, 617, 618, 1058, 0, 225,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070,
	1082, 1824, 3074, 0, 0, 1081, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1123, 1087, 0, 0,
	0, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 1136, 0, 288, 1143, 289, 1142, 0, 1153, 290,
	291, 292, 293, 294, 295, 1089, 1122, 1056, 296, 1183,
	1184, 627, 0, 297, 298, 1129, 0, 1110, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1164, 321, 322, 323,
	1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326,
	327, 328, 1146, 329, 1140, 1139, 1060, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1131, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1066, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1154, 1155, 360, 1078, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1138, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1165, 367, 368,
	1151, 1152, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1161, 0, 1088, 379, 0, 380, 381,
	382, 383, 384, 1124, 1125, 1128, 463, 1167, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1166, 395, 1133, 1134, 0,
	1094, 0, 397, 398, 1168, 1126, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1162, 1171, 413,
	414, 1172, 0, 415, 0, 0, 0, 416, 417, 420,
	1117, 1116, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 1057, 270, 1175,
	460, 461, 1079, 1127, 462, 1141, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1176, 473, 1177, 1156, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1157, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1137, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1178, 525, 526, 527, 528, 1067,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 230, 546, 547, 545, 548, 549,
	550, 1120, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 1135, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 1182, 568, 569,
	570, 571, 1158, 575, 576, 0, 577, 578, 1055, 574,
	565, 232, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 1147, 1148, 1149, 1150, 0, 596, 0,
	588, 589, 590, 1159, 591, 1160, 1077, 592, 593, 594,
	595, 0, 597, 598, 0, 1061, 599, 600, 601, 603,
	604, 602, 605, 1121, 606, 0, 0, 607, 608, 609,
	1579, 1144, 1181, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 224, 614, 615, 670, 616, 617, 618,
	1058, 0, 225, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 0, 0, 0, 1052, 1053, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 1824, 1822, 0, 0, 1081, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	2595, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 2600,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 2596, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 2597, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	0, 0, 0, 0, 0, 0, 0, 1083, 0, 0,
	2512, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 0, 0, 0, 0, 0,
	0, 0, 1083, 2510, 0, 2509, 1081, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	0, 0, 0, 0, 0, 0, 0, 1083, 2507, 0,
	2506, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 0, 0, 0, 0, 0,
	0, 0, 1083, 2504, 0, 2503, 1081, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	0, 0, 0, 0, 0, 0, 0, 1083, 2501, 0,
	1672, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 1671, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 0, 0, 0, 0, 0,
	0, 0, 1083, 0, 0, 1048, 1081, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 1062, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	1099, 1071, 1072, 1073, 1069, 1070, 1082, 1083, 0, 0,
	0, 1081, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1123, 1087, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 1136, 0, 288,
	1143, 289, 1142, 0, 1153, 290, 291, 292, 293, 294,
	295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0, 297,
	298, 1129, 0, 1110, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 4456, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119,
	1115, 1114, 1118, 324, 325, 326, 327, 328, 1146, 329,
	1140, 1139, 1060, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1131, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1066,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1154, 1155, 360, 1078, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1138, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 1151, 1152, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1161,
	0, 1088, 379, 0, 380, 381, 382, 383, 384, 1124,
	1125, 1128, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1166, 395, 1133, 1134, 0, 1094, 0, 397, 398,
	1168, 1126, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1162, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 1117, 1116, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 1057, 270, 1175, 460, 461, 1079, 1127,
	462, 1141, 464, 465, 0, 0, 466, 0, 1062, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 1156, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1157, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1137, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 1067, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1120, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 1135, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 1182, 568, 569, 570, 571, 1158, 575,
	576, 0, 577, 578, 1055, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 1147,
	1148, 1149, 1150, 0, 596, 0, 588, 589, 590, 1159,
	591, 1160, 1077, 592, 593, 594, 595, 0, 597, 598,
	0, 1061, 599, 600, 601, 603, 604, 602, 605, 1121,
	606, 0, 0, 607, 608, 609, 666, 1144, 1181, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1058, 0, 0, 0,
	0, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	0, 1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082,
	1083, 0, 0, 0, 1081, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 329, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 2381, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 2380, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 1083, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 1062, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 1099,
	1071, 1072, 1073, 1069, 1070, 1082, 1083, 0, 0, 0,
	1081, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1123, 1087, 0, 0, 0, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 1136, 0, 288, 1143,
	289, 1142, 0, 1153, 290, 291, 292, 293, 294, 295,
	1089, 1122, 1056, 296, 1183, 1184, 627, 0, 297, 298,
	1129, 0, 1110, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 4216, 317, 0, 318, 319,
	320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115,
	1114, 1118, 324, 325, 326, 327, 328, 1146, 329, 1140,
	1139, 1060, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1131, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1066, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1154,
	1155, 360, 1078, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1138, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1165, 367, 368, 1151, 1152, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1161, 0,
	1088, 379, 0, 380, 381, 382, 383, 384, 1124, 1125,
	1128, 463, 1167, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1166, 395, 1133, 1134, 0, 1094, 0, 397, 398, 1168,
	1126, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1162, 1171, 413, 414, 1172, 0, 415, 0,
	0, 0, 416, 417, 420, 1117, 1116, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 1057, 270, 1175, 460, 461, 1079, 1127, 462,
	1141, 464, 465, 0, 0, 466, 0, 1062, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1176, 473, 1177,
	1156, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1157, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1137,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1178,
	525, 526, 527, 528, 1067, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1120, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	1135, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1182, 568, 569, 570, 571, 1158, 575, 576,
	0, 577, 578, 1055, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1147, 1148,
	1149, 1150, 0, 596, 0, 588, 589, 590, 1159, 591,
	1160, 1077, 592, 593, 594, 595, 0, 597, 598, 0,
	1061, 599, 600, 601, 603, 604, 602, 605, 1121, 606,
	0, 0, 607, 608, 609, 666, 1144, 1181, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1058, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 0, 0, 0, 0,
	1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 1083,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 3836, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 1892, 0, 0, 0, 0,
	0, 0, 1083, 0, 0, 0, 1081, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 3560, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	1099, 1071, 1072, 1073, 1069, 1070, 1082, 1083, 0, 0,
	0, 1081, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1123, 1087, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 1136, 0, 288,
	1143, 289, 1142, 0, 1153, 290, 291, 292, 293, 294,
	295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0, 297,
	298, 1129, 0, 1110, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119,
	1115, 1114, 1118, 324, 325, 326, 327, 328, 1146, 329,
	1140, 1139, 1060, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1131, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1066,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1154, 1155, 360, 1078, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1138, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 1151, 1152, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1161,
	0, 1088, 379, 0, 380, 381, 382, 383, 384, 1124,
	1125, 1128, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1166, 395, 1133, 1134, 0, 1094, 0, 397, 398,
	1168, 1126, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1162, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 1117, 1116, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 1057, 270, 1175, 460, 461, 1079, 1127,
	462, 1141, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 1156, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1157, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1137, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 1067, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1120, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 1135, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 1182, 568, 569, 570, 571, 1158, 575,
	576, 0, 577, 578, 1055, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 1147,
	1148, 1149, 1150, 0, 596, 0, 588, 589, 590, 1159,
	591, 1160, 1077, 592, 593, 594, 595, 0, 597, 598,
	0, 1061, 599, 600, 601, 603, 604, 602, 605, 1121,
	606, 0, 0, 607, 608, 609, 666, 1144, 1181, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1058, 0, 0, 0,
	0, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	0, 1052, 1053, 1892, 0, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 1081, 1099, 1071, 1072, 1073, 1069,
	1070, 1082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1123, 1087, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 1136, 0, 288, 1143, 289, 1142, 0, 1153,
	290, 291, 292, 293, 294, 295, 1089, 1122, 1056, 296,
	1183, 1184, 627, 0, 297, 298, 1129, 0, 1110, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325,
	326, 327, 328, 1146, 329, 1140, 1139, 1060, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1131, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1066, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1154, 1155, 360, 1078, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1138, 0,
	0, 0, 364, 0, 365, 366, 0, 2600, 1165, 367,
	368, 1151, 1152, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1161, 0, 1088, 379, 0, 380,
	381, 382, 383, 384, 1124, 1125, 1128, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1166, 395, 1133, 1134,
	0, 1094, 0, 397, 398, 1168, 1126, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1162, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 1117, 1116, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 1057, 270,
	1175, 460, 461, 1079, 1127, 462, 1141, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 1156, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1157,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1137, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	1067, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1120, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 1135, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 1182, 568,
	569, 570, 571, 1158, 575, 576, 0, 577, 578, 1055,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 1147, 1148, 1149, 1150, 0, 596,
	0, 588, 589, 590, 1159, 591, 1160, 1077, 592, 593,
	594, 595, 0, 597, 598, 0, 1061, 599, 600, 601,
	603, 604, 602, 605, 1121, 606, 0, 0, 607, 608,
	609, 666, 1144, 1181, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1058, 0, 0, 0, 0, 0, 0, 0, 1054,
	0, 0, 0, 0, 0, 0, 1052, 1053, 1099, 1071,
	1072, 1073, 1069, 1070, 1082, 1083, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 329, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 0, 0, 0, 0, 0, 0, 0, 1083, 1822,
	0, 2605, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 329, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 2603, 1081, 1099, 1071,
	1072, 1073, 1069, 1070, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 329, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 0, 0, 0, 0, 0, 0, 0, 1083, 0,
	0, 2591, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 329, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 2580, 1081, 1099, 1071,
	1072, 1073, 1069, 1070, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 329, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 0, 0, 0, 0, 0, 0, 0, 1083, 0,
	0, 2578, 1081, 2569, 2576, 1072, 1073, 1069, 1070, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 2572, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	2573, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 2574, 430, 2571, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 2575, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 2570, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 2566, 1081, 2569, 2576,
	1072, 1073, 1069, 1070, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 2572, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 2573, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 2574, 430, 2571,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 2575, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 2570, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 1083, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 1830,
	0, 1083, 0, 0, 0, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	2360, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1677,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1609, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1604,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1595, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1590,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1502, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1501, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1496,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1495, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1489, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1309,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070,
	1082, 1083, 0, 0, 0, 1081, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1123, 1087, 0, 0,
	0, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 1136, 0, 288, 1143, 289, 1142, 0, 1153, 290,
	291, 292, 293, 294, 295, 1089, 1122, 1056, 296, 1183,
	1184, 627, 0, 297, 298, 1129, 0, 1110, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1164, 321, 322, 323,
	1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326,
	327, 328, 1146, 329, 1140, 1139, 1060, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1131, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1066, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1154, 1155, 360, 1078, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1138, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1165, 367, 368,
	1151, 1152, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1161, 0, 1088, 379, 0, 380, 381,
	382, 383, 384, 1124, 1125, 1128, 463, 1167, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1166, 395, 1133, 1134, 0,
	1094, 0, 397, 398, 1168, 1126, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1162, 1171, 413,
	414, 1172, 0, 415, 0, 0, 0, 416, 417, 420,
	1117, 1116, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 1057, 270, 1175,
	460, 461, 1079, 1127, 462, 1141, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1176, 473, 1177, 1156, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1157, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1137, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1178, 525, 526, 527, 528, 1067,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1120, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 1135, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 1182, 568, 569,
	570, 571, 1158, 575, 576, 0, 577, 578, 1055, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 1147, 1148, 1149, 1150, 0, 596, 0,
	588, 589, 590, 1159, 591, 1160, 1077, 592, 593, 594,
	595, 0, 597, 598, 0, 1061, 599, 600, 601, 603,
	604, 602, 605, 1121, 606, 0, 0, 607, 608, 609,
	666, 1144, 1181, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	1058, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 0, 0, 0, 1052, 1053, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 1083, 0, 0, 0, 1081, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 4502, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 4501, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	1099, 1071, 1072, 1073, 1069, 1070, 1082, 1083, 0, 0,
	0, 1081, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1123, 1087, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 4500, 1136, 0, 288,
	1143, 289, 1142, 0, 1153, 290, 291, 292, 293, 294,
	295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0, 297,
	298, 1129, 0, 1110, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 4502, 1113, 1111, 1112, 1119,
	1115, 1114, 1118, 324, 325, 326, 327, 328, 1146, 329,
	1140, 1139, 1060, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1131, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1066,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1154, 1155, 360, 1078, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1138, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 1151, 1152, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1161,
	0, 1088, 379, 0, 380, 381, 382, 383, 384, 1124,
	1125, 1128, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1166, 395, 1133, 1134, 0, 1094, 0, 397, 398,
	1168, 1126, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1162, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 1117, 1116, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 1057, 270, 1175, 460, 461, 1079, 1127,
	462, 1141, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 1156, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1157, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1137, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 1067, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1120, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 1135, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 1182, 568, 569, 570, 571, 1158, 575,
	576, 0, 577, 578, 1055, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 1147,
	1148, 1149, 1150, 0, 596, 0, 588, 589, 590, 1159,
	591, 1160, 1077, 592, 593, 594, 595, 0, 4501, 598,
	0, 1061, 599, 600, 601, 603, 604, 602, 605, 1121,
	606, 0, 0, 607, 608, 609, 666, 1144, 1181, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1058, 0, 0, 0,
	0, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	0, 1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082,
	1083, 0, 0, 0, 1081, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 4160, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 329, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 4161, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 4159, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 1099, 1071, 1072, 1073,
	3041, 3042, 1082, 1083, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 1099,
	1071, 1072, 1073, 3039, 3040, 1082, 1083, 0, 0, 0,
	1081, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1123, 1087, 0, 0, 0, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 1136, 0, 288, 1143,
	289, 1142, 0, 1153, 290, 291, 292, 293, 294, 295,
	1089, 1122, 1056, 296, 1183, 1184, 627, 0, 297, 298,
	1129, 0, 1110, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115,
	1114, 1118, 324, 325, 326, 327, 328, 1146, 329, 1140,
	1139, 1060, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1131, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1066, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1154,
	1155, 360, 1078, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1138, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1165, 367, 368, 1151, 1152, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1161, 0,
	1088, 379, 0, 380, 381, 382, 383, 384, 1124, 1125,
	1128, 463, 1167, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1166, 395, 1133, 1134, 0, 1094, 0, 397, 398, 1168,
	1126, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1162, 1171, 413, 414, 1172, 0, 415, 0,
	0, 0, 416, 417, 420, 1117, 1116, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 1057, 270, 1175, 460, 461, 1079, 1127, 462,
	1141, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1176, 473, 1177,
	1156, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1157, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1137,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1178,
	525, 526, 527, 528, 1067, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1120, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	1135, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1182, 568, 569, 570, 571, 1158, 575, 576,
	0, 577, 578, 1055, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1147, 1148,
	1149, 1150, 0, 596, 0, 588, 589, 590, 1159, 591,
	1160, 1077, 592, 593, 594, 595, 0, 597, 598, 0,
	1061, 599, 600, 601, 603, 604, 602, 605, 1121, 606,
	0, 0, 607, 608, 609, 666, 1144, 1181, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1058, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 0, 0, 0, 0,
	1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 1083,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 2368, 2369, 1099, 1071, 1072, 1073, 1069,
	1070, 1082, 1083, 0, 0, 0, 1081, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1123, 1087, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 1136, 0, 288, 1143, 289, 1142, 0, 1153,
	290, 291, 292, 293, 294, 295, 1089, 1122, 0, 296,
	1183, 1184, 627, 0, 297, 298, 1129, 0, 1110, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325,
	326, 327, 328, 1146, 329, 1140, 1139, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1131, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1066, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1154, 1155, 360, 1078, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1138, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 1151, 1152, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1161, 0, 1088, 379, 0, 380,
	381, 382, 383, 384, 1124, 1125, 1128, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1166, 395, 1133, 1134,
	0, 1094, 0, 397, 398, 1168, 1126, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1162, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 1117, 1116, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 0, 270,
	1175, 460, 461, 1079, 1127, 462, 1141, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 1156, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1157,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1137, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	1067, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1120, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 1135, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 1182, 568,
	569, 570, 571, 1158, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 1147, 1148, 1149, 1150, 0, 596,
	0, 588, 589, 590, 1159, 591, 1160, 1077, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 1121, 606, 0, 0, 607, 608,
	609, 666, 1144, 1181, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 2588,
	0, 0, 0, 0, 0, 0, 2586, 2587, 271, 273,
	272, 274, 275, 276, 277, 1083, 278, 279, 0, 1081,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 0, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 0, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 3034, 3035, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 2073, 2074, 271, 273, 272, 274, 275, 276,
	277, 1083, 278, 279, 0, 1081, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 0, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 4502, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 0, 1126, 0,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 0, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 4501, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1045, 0, 1221, 0, 0, 1052, 1053,
	0, 0, 0, 0, 0, 0, 0, 1083, 0, 0,
	0, 1081, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1123, 0, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 1122, 0, 296,
	625, 626, 627, 0, 297, 298, 1129, 0, 1110, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1154, 1155, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1161, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 1124, 1125, 1128, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1166, 395, 642, 643,
	0, 644, 0, 397, 398, 1168, 1126, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1207, 409, 411, 410, 0, 412, 1162, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 1117, 1116, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 0, 270,
	1175, 460, 461, 0, 1127, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 1213, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 1156, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1157,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 1215, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 230, 546, 547, 545, 548,
	549, 550, 1120, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 1158, 575, 576, 0, 577, 578, 0,
	574, 565, 232, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 1159, 591, 1160, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 1121, 606, 0, 0, 607, 608,
	609, 1579, 667, 668, 0, 611, 610, 612, 669, 1221,
	613, 0, 0, 0, 224, 614, 615, 670, 616, 617,
	618, 0, 0, 225, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1123, 0, 1211, 0, 1916, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 1122, 0, 296, 625, 626, 627, 0, 297, 298,
	1129, 0, 1110, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115,
	1114, 1118, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1154,
	1155, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1165, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1161, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 1124, 1125,
	1128, 463, 1167, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1166, 395, 642, 643, 0, 644, 0, 397, 398, 1168,
	1126, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1207, 409, 411, 410,
	0, 412, 1162, 1171, 413, 414, 1172, 0, 415, 0,
	0, 0, 416, 417, 420, 1117, 1116, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 0, 270, 1175, 460, 461, 0, 1127, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 1213, 468,
	469, 470, 0, 0, 471, 472, 649, 1176, 473, 1177,
	1156, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1157, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1178,
	525, 526, 527, 528, 656, 1215, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 230,
	546, 547, 545, 548, 549, 550, 1120, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 1158, 575, 576,
	0, 577, 578, 0, 574, 565, 232, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 1159, 591,
	1160, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 1121, 606,
	0, 0, 607, 608, 609, 1579, 667, 668, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 224, 614,
	615, 670, 616, 617, 618, 0, 0, 225, 0, 0,
	0, 3194, 0, 1221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 1916,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 0, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 1122, 0, 296, 625, 626,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 642, 643, 0, 644,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1207, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 0, 270, 1175, 460,
	461, 0, 1127, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 1213, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 656, 1215,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 0, 613, 0,
	1203, 0, 1221, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 1211, 0, 1209, 1123, 0, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 1122, 0, 296, 625, 626, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 642, 643, 0, 644, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1207,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 0, 270, 1175, 460, 461,
	0, 1127, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 1213, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 656, 1215, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1221, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 0,
	1211, 0, 1209, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 1122, 0,
	296, 625, 626, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 642,
	643, 0, 644, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1207, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 0,
	270, 1175, 460, 461, 0, 1127, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 1213, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 1215, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1221, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1123, 0, 1211, 0, 1209, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 1122, 0, 296, 625, 626, 627, 0, 297,
	298, 1129, 0, 1110, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119,
	1115, 1114, 1118, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1154, 1155, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1161,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1124,
	1125, 1128, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1166, 395, 642, 643, 0, 644, 0, 397, 398,
	1168, 1126, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1162, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 1117, 1116, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 0, 270, 1175, 460, 461, 0, 1127,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 1156, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1157, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1120, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 1158, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 1159,
	591, 1160, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 1121,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 1221, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1123, 0, 0, 0,
	3989, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 1122, 0, 296, 625,
	626, 627, 0, 297, 298, 1129, 0, 1110, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1164, 321, 322, 323,
	1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1154, 1155, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1165, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1161, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1124, 1125, 1128, 463, 1167, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1166, 395, 642, 643, 0,
	644, 0, 397, 398, 1168, 1126, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1162, 1171, 413,
	414, 1172, 0, 415, 0, 0, 0, 416, 417, 420,
	1117, 1116, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 0, 270, 1175,
	460, 461, 0, 1127, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1176, 473, 1177, 1156, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1157, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1178, 525, 526, 527, 528, 656,
	1215, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1120, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 1158, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 1159, 591, 1160, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 1121, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 1045, 613,
	1302, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 1815, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 1307, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1166, 395, 642, 643, 0, 644, 0, 397, 398,
	1168, 645, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 0, 0, 1175, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	230, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 232, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 1579, 667, 668, 0,
	611, 610, 612, 669, 1576, 613, 1302, 0, 0, 224,
	614, 615, 670, 616, 617, 618, 0, 0, 225, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	186, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 1307,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1166, 395, 642,
	643, 0, 644, 0, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 0,
	0, 1175, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 230, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 232, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 1579, 667, 668, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 224, 614, 615, 670, 616,
	617, 618, 1302, 1301, 225, 0, 0, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 186, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 1307, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1166, 395, 642, 643, 0, 644, 0,
	397, 398, 1168, 645, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 0, 0, 1175, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1302, 1301,
	0, 0, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 1601, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 1307, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1166,
	395, 642, 643, 0, 644, 0, 397, 398, 1168, 645,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 0, 0, 1175, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1302, 1301, 0, 0, 0, 0,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 3479, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 1307, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1164, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1165, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 1167, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1166, 395, 642, 643, 0,
	644, 0, 397, 398, 1168, 645, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 1171, 413,
	414, 1172, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 0, 0, 1175,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1176, 473, 1177, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 2256, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1178, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	1302, 2170, 0, 0, 0, 0, 2171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 1601, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 1307, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1166, 395, 642, 643, 0, 644, 0, 397, 398,
	1168, 645, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 2169, 411,
	410, 0, 412, 646, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 0, 0, 1175, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1302, 1301, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	1601, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 1307,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1166, 395, 642,
	643, 0, 644, 0, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 0,
	0, 1175, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1221, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1123, 0, 0, 0, 1585, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 1122, 0, 296, 625, 626, 627, 0, 297,
	298, 1129, 0, 1110, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119,
	1115, 1114, 1118, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1154, 1155, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1161,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1124,
	1125, 1128, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1166, 395, 642, 643, 0, 644, 0, 397, 398,
	1168, 1126, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1162, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 1117, 1116, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 0, 270, 1175, 460, 461, 0, 1127,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 1156, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1157, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1120, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 1158, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 1159,
	591, 1160, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 1121,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 1045, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 230, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 232, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 1579, 667, 668, 0, 611, 610, 612, 669,
	265, 613, 0, 0, 0, 224, 614, 615, 670, 616,
	617, 618, 0, 0, 225, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 186, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 0, 613, 265, 2947, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	1930, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	265, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 4658, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 3429, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 1573, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 265, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 2935, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 265, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 3585, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	886, 613, 793, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 2247, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 800, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 884, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 798,
	579, 580, 581, 582, 583, 799, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 791, 613, 793, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 803, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 800, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 798, 579, 580, 581, 582,
	583, 799, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 1969, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 0, 1975, 0, 288, 1965, 289, 1981,
	0, 1988, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 1991, 1992, 0, 0, 297, 298, 0, 0,
	1307, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 1146, 329, 1979, 1978, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 0, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	1977, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1986, 1987, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	0, 380, 381, 382, 383, 384, 0, 0, 0, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1166, 395,
	1972, 1973, 0, 1968, 0, 397, 398, 1168, 0, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	0, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	0, 0, 1175, 460, 461, 0, 0, 462, 1980, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 0, 1176, 473, 1177, 0, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 1962, 486, 487, 488, 1963, 489, 490,
	491, 0, 492, 0, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1976, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 0, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1974, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1990, 568, 569, 570, 571, 0, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1982, 1983, 1984, 1985,
	0, 596, 0, 588, 589, 590, 0, 591, 0, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 0, 1966, 1989, 0, 611, 610, 612,
	0, 0, 613, 0, 0, 793, 0, 614, 615, 0,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 1956, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 800, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 798, 579, 580, 581, 582, 583, 799, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 793, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 803, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	800, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 2290, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 2291,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 798, 579, 580, 581, 582, 583, 799, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 2292,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 2039, 613,
	1302, 2006, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 803, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 1307, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 2003, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1166, 395, 642, 643, 0, 644, 0, 397, 398,
	1168, 645, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 0, 0, 1175, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 2004, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 2000, 613, 1302, 2006, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 1307,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 2003, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1166, 395, 642,
	643, 0, 644, 0, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 0,
	0, 1175, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 2004, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 793, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 800, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	1995, 541, 542, 543, 544, 0, 1996, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 798, 579, 580, 581, 582, 583, 799, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	1994, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 793, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 803, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	800, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 1947,
	541, 542, 543, 544, 0, 1948, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 798, 579, 580, 581, 582, 583, 799, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 1946,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 0, 613,
	1302, 2006, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 803, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 1307, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 2003, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1166, 395, 642, 643, 0, 644, 0, 397, 398,
	1168, 645, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 0, 0, 1175, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 2004, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1302, 1301, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 1307,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1166, 395, 642,
	643, 0, 644, 0, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 0,
	0, 1175, 460, 461, 3775, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1302, 1301, 0, 0, 0, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 1307, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1166, 395, 642, 643, 0, 644, 0,
	397, 398, 1168, 645, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 0, 0, 1175, 460, 461,
	3400, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1629, 0, 1302,
	1301, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 803, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 1307, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1164, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 1628,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1165, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 1167, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1166, 395, 642, 643, 0, 644, 0, 397, 398, 1168,
	645, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 1171, 413, 414, 1172, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 0, 0, 1175, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1176, 473, 1177,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 1627, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1178,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 1626, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1547, 0, 1302, 1301, 0,
	0, 0, 0, 1299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	1307, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 1546, 640, 641, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1166, 395,
	642, 643, 0, 644, 0, 397, 398, 1168, 645, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	0, 0, 1175, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1507, 0, 1302, 1301, 0, 0, 0,
	0, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 1307, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1166, 395, 642, 643,
	0, 644, 0, 397, 398, 1168, 645, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 0, 0,
	1175, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1475, 0, 1302, 1301, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 1307, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 1474, 640, 641, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1166, 395, 642, 643, 0, 644,
	0, 397, 398, 1168, 645, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 0, 0, 1175, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1296,
	0, 1302, 1301, 0, 0, 0, 0, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 1307, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	1295, 640, 641, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1166, 395, 642, 643, 0, 644, 0, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 0, 0, 1175, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1302, 1301, 0,
	0, 0, 0, 1299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	1307, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1166, 395,
	642, 643, 0, 644, 0, 397, 398, 1168, 645, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	0, 0, 1175, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 0, 613, 1302, 2006, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 1307, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 2046, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1166, 395, 642, 643, 0, 644,
	0, 397, 398, 1168, 645, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 0, 0, 1175, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 0, 613, 1302,
	1301, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 1307, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1164, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1165, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 1167, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1166, 395, 642, 643, 0, 644, 0, 397, 398, 1168,
	645, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 1171, 413, 414, 1172, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 0, 0, 1175, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1176, 473, 1177,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1178,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 1302, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 1307, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1166,
	395, 642, 643, 0, 644, 0, 397, 398, 1168, 645,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 0, 0, 1175, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 2754, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 2751, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 2758, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 2960, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 2757, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 2957, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 2959, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 2956, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 2756, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 2958, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 2754, 297, 298, 628, 0, 0,
	2748, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 2751, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 2758, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 2757, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 2747, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 2756, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 2755, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1700, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1699, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 1703, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 1701,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 1702, 610, 612, 669, 1449, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1451, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 1213, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1446, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1448, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 1213, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 1353, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1355,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 1213,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 702, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 701, 276, 277,
	691, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 694, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 695, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 696, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	690, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 691, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	694, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 695,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 696, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	1213, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	3348, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 2905, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 2904, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	2262, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 2203, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 2210, 613, 265, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 2209, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 2196, 613, 265, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 2198, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 265, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 2166, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 1213, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1551, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1550, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1466, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 1459, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1461,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 1286, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 1285, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1276, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 1275, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1273, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1272, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1268, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1267, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 672, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 256, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 694, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 695, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 696, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 265, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 2299,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 265, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 2297, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 2295, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 2216,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 2025, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 2019, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 873, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 872, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 871, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 265, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 2960, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 4059, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 759, 613, 265,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 1323, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 1321, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 760, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 756, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 1324, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 755, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 759, 613, 265, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 1323, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 1321, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 760, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	756, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	1324, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 755, 661, 662, 663, 0, 596,
	0, 588, 1322, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 681,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 680, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 679, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 0, 613, 265, 2947, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 0, 613, 265, 4069, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 265, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 4331, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	3966, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 3741, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 2640, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 0, 613, 265, 2947, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 2944, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 2272, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 2260, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 759, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 749, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 760, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 756, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 1584, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 755, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1557, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 1556, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1541, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1539, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1534, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 1511, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1509,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 1472, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1454, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1291, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1290, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1282, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1281, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 265, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 1235, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 265, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 765, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 759, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 749, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 747, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 748, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 760, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 750, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 756, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 751, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 755, 661, 662,
	663, 0, 596, 0, 588, 753, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 741, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 742, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 704, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 698, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	676, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 3449,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 3386, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 3364, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 3361, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 3313, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 3311, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 3296, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 265, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 2915, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 265, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 742, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 2234, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 0,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1253,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 1186, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	0, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 0, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 0, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 0, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1749, 1750, 0, 1782, 1783, 1784,
	1792, 1793, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 1780, 0, 0,
	0, 0, 1749, 1750, 1752, 1782, 1783, 1784, 1792, 1793,
	1794, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 1780, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 0, 0, 1751,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1775, 1776, 1777, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1775, 1776, 1777, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	1779, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 1789, 1796,
	0, 1799, 0, 0, 0, 0, 1766, 1767, 1779, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 1795, 0, 1796, 0, 0,
	0, 0, 0, 0, 1766, 1767, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1750, 0, 1782, 1783,
	1784, 1792, 1793, 1794, 1773, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 1785, 1780, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	0, 1790, 1773, 0, 1798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 1763, 1764,
	1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 1774, 1775, 1776, 1777, 4144, 0,
	0, 1788, 0, 0, 1757, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 1749, 1750, 3985, 1782, 1783, 1784,
	1792, 1793, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 1799, 0, 1785, 1780, 0, 0,
	0, 1779, 1781, 0, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 1795, 0,
	1796, 0, 0, 0, 0, 0, 0, 1766, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	1772, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 1780, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 1774, 1775, 1776, 1777, 1771, 0, 0,
	0, 0, 0, 1757, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 1799, 1778, 0, 0, 0, 0, 0,
	1779, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 1795, 0, 1796,
	0, 0, 0, 0, 0, 0, 1766, 1767, 0, 0,
	0, 1774, 1775, 1776, 1777, 0, 0, 0, 0, 0,
	0, 1757, 1790, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 1799, 0, 1785, 1780, 0, 0, 0, 1779, 1781,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 1797, 0, 0, 1795, 0, 1796, 0, 0,
	0, 0, 0, 0, 1766, 1767, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 1788, 1768, 0, 1772, 0, 1763,
	1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753,
	1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0, 3921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1775, 1776, 1777, 0, 0, 0, 0, 0, 0,
	1757, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 1780, 0, 1789, 0, 0,
	1799, 1778, 1752, 0, 0, 0, 0, 1779, 1781, 0,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 1795, 0, 1796, 0, 0, 0,
	0, 0, 0, 1766, 1767, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 1790,
	0, 1787, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 1772, 0, 1763, 1764,
	1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 0, 0, 0, 0, 3920, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 1774, 1775, 1776, 1777, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 0, 0, 3919, 0, 1789, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 1779, 1781,
	1778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 1796, 0, 0,
	0, 1773, 0, 0, 1766, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 1749, 1750, 1790, 1782,
	1783, 1784, 1792, 1793, 1794, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 1780,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 0, 0, 0, 3590, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 1774, 1775, 1776, 1777, 0,
	0, 0, 0, 0, 0, 1757, 0, 1749, 1750, 0,
	1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	1780, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 1789, 0, 0, 1799, 1798, 0, 0, 0,
	0, 0, 1779, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 1796, 1751, 0, 0, 0, 0, 0, 1766, 1767,
	0, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 0, 0, 3114, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 1775, 1776, 1777,
	0, 0, 1786, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 1749, 1750, 1799, 1782, 1783, 1784,
	1792, 1793, 1794, 1779, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 1785, 1780, 0, 0,
	1795, 0, 1796, 0, 1752, 0, 0, 0, 0, 1766,
	1767, 0, 0, 1798, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 1772, 1790, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1775, 1776, 1777, 0, 0, 0,
	0, 0, 0, 1757, 0, 1788, 0, 0, 0, 0,
	1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 1778, 0, 0, 0,
	3113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 1799, 0, 0, 0, 1773, 0, 0,
	1779, 1781, 0, 0, 0, 0, 0, 0, 1749, 1750,
	0, 1782, 1783, 1784, 1792, 1793, 1794, 1795, 0, 1796,
	0, 0, 0, 0, 1790, 0, 1766, 1767, 0, 0,
	1785, 1780, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 0, 1787, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760,
	1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0,
	0, 3112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 1778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 1749, 1750, 1799, 1782, 1783,
	1784, 1792, 1793, 1794, 1779, 1781, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 1785, 1780, 0,
	0, 1795, 0, 1796, 0, 1752, 0, 0, 0, 0,
	1766, 1767, 0, 0, 1798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 1763, 1764,
	1770, 1791, 1769, 1765, 1786, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 0, 0, 0, 0, 3111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 1775, 1776, 1777, 0, 0,
	0, 0, 0, 0, 1757, 4572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 1799, 0, 0, 0, 1773, 0,
	0, 1779, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	1796, 0, 0, 0, 0, 1790, 0, 1766, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 1749, 1750, 0,
	1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	1780, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 1771, 0, 0, 0, 0, 1788, 0, 0,
	0, 1768, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0,
	3078, 0, 0, 4571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 1777,
	0, 0, 0, 0, 0, 0, 1757, 0, 3174, 0,
	0, 0, 3173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 1749,
	1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0,
	0, 0, 0, 1789, 0, 0, 1799, 0, 0, 0,
	0, 1785, 1780, 1779, 1781, 0, 0, 3049, 0, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	1795, 0, 1796, 0, 0, 0, 0, 0, 0, 1766,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 1787, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 1772, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 1763,
	1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753,
	1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0, 0,
	0, 0, 3050, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1775,
	1776, 1777, 0, 0, 0, 2613, 0, 0, 1757, 0,
	0, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 1780, 0, 0, 0, 2612,
	0, 0, 1752, 0, 0, 1789, 1778, 0, 1799, 0,
	0, 1798, 0, 0, 0, 1779, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 1795, 0, 1796, 0, 0, 1751, 0, 0,
	0, 1766, 1767, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 1790, 0, 1768, 0, 0, 1787,
	0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 1780, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 1774, 1775, 1776, 1777, 1786, 1771, 0, 0, 0,
	0, 1757, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760,
	1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 1789, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 1779, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 0, 0, 1795, 0, 1796, 0, 0,
	0, 0, 0, 0, 1766, 1767, 0, 0, 0, 1773,
	1774, 1775, 1776, 1777, 0, 0, 0, 0, 0, 0,
	1757, 0, 1787, 0, 1749, 1750, 0, 1782, 1783, 1784,
	1792, 1793, 1794, 0, 0, 0, 1790, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 1780, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 1789, 0, 0,
	1799, 0, 0, 1798, 0, 0, 0, 1779, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 1795, 0, 1796, 0, 0, 1751,
	0, 0, 0, 1766, 1767, 0, 0, 0, 1786, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1774, 1775, 1776, 1777, 1786, 1042, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 1749, 1750, 0, 1782,
	1783, 1784, 1792, 1793, 1794, 0, 0, 0, 0, 0,
	1789, 0, 0, 1799, 0, 0, 0, 0, 1785, 1780,
	1779, 1781, 0, 0, 0, 0, 1752, 0, 0, 0,
	1778, 0, 0, 0, 0, 1798, 0, 1795, 0, 1796,
	0, 0, 0, 0, 0, 0, 1766, 1767, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 1790, 1772,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1775, 1776, 1777, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 3180, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 1789, 1778, 0, 1799, 0, 0, 0, 0,
	0, 0, 1779, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 1795,
	0, 1796, 0, 0, 0, 0, 0, 0, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 1787, 0, 1749, 1750,
	0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 1780, 0, 0, 0, 3175, 0, 0, 1752, 0,
	0, 0, 0, 0, 3571, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 1763, 1764,
	1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 0, 0, 1757, 0, 1749,
	1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 1785, 1780, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 1789, 0, 0, 1799, 1798, 0,
	0, 0, 0, 0, 1779, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 1796, 1751, 0, 0, 0, 0, 0,
	1766, 1767, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1775,
	1776, 1777, 0, 0, 1786, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 1749, 1750, 1799, 1782,
	1783, 1784, 1792, 1793, 1794, 1779, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 1785, 1780,
	0, 0, 1795, 3115, 1796, 0, 1752, 0, 0, 0,
	0, 1766, 1767, 0, 0, 1798, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 1772, 1790, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1775, 1776, 1777, 0,
	0, 0, 0, 0, 0, 1757, 0, 1788, 0, 0,
	0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 1778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 0, 0, 1799, 0, 0, 0, 1773,
	0, 0, 1779, 1781, 0, 0, 0, 0, 0, 0,
	1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 1795,
	0, 1796, 0, 0, 0, 0, 1790, 0, 1766, 1767,
	0, 0, 1785, 1780, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 0, 1787, 0, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1775, 1776, 1777, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 0, 0, 1799,
	932, 0, 979, 0, 0, 0, 1779, 1781, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 1796, 940, 0, 0, 0,
	0, 0, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 954, 0, 938, 937, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 942, 0, 0,
	0, 0, 987, 0, 0, 0, 0, 0, 0, 0,
	0, 951, 952, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 980, 944,
	1763, 1764, 1770, 1791, 1769, 1765, 1786, 1762, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 945, 0, 0, 0,
	0, 0, 0, 0, 0, 977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 978, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	947, 0, 0, 0, 0, 0, 0, 0, 936, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 956, 955, 0, 0,
	0, 0, 0, 0, 950, 0, 0, 0, 965, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 984, 976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765,
	0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759,
	943, 0, 0, 986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 941, 0, 0, 0, 972,
	973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 970, 0, 0, 0, 0, 0,
	0, 985, 966, 0, 0, 959, 957, 0, 962, 0,
	0, 0, 0, 0, 963, 0, 0, 934, 0, 982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 974, 0, 964, 0, 0, 0, 0, 0,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 983, 0, 0, 0, 0, 0, 0, 0, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 971,
}

var sqlPact = [...]int{
	4981, -1000, -1000, -1000, -1000, 213, -1000, -1000, 212, 211,
	210, 206, 204, 203, 198, 196, 193, 192, 191, -1000,
	-1000, -1000, -1000, -1000, -1000, 183, -1000, -1000, 182, -1000,
	176, 173, 172, -1000, -1000, 169, -1000, 168, -1000, -1000,
	-1000, -1000, 166, 165, 163, 89962, 89416, 90501, 2219, 110598,
	96997, 1999, 80708, 110052, 80162, 109506, 2061, 12021, 108960, 2671,
	162, -1000, 108414, 159, 158, 156, -1000, 107868, -1000, 1944,
	-1000, 155, -1000, 4589, 65384, 154, 153, 152, 2193, 151,
	-1000, 150, 148, -1000, -1000, 145, -1000, 14305, 1494, -1000,
	140, 139, -1000, 431, 94820, 138, 137, 2322, 136, 135,
	64838, 129, 127, 2228, 2760, -1000, -1000, 2027, -1000, -1000,
	124, 123, 122, 120, 119, 116, 115, 114, 112, 111,
	110, -1000, 108, 106, 105, 104, 101, -1000, 97, 93,
	92, -1000, 91, -1000, 90, 89, 87, 84, 83, 82,
	81, 80, 79, 78, 77, 76, 75, 74, 122988, -1000,
	-1000, 1904, 1650, 1641, 1637, 1635, 1634, 997, 72, 71,
	70, 69, 64, 61, 54, 53, 52, 50, 40, 36,
	35, 34, 32, 29, 28, 164, 27, 20, 19, 18,
	16, 12, 10, 2245, -1000, 1748, 963, 30863, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 117605, 111137, 9, -178, 3, -1000,
	3195, 1081, 53898, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 304, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 520, 2060, 774, -1000, -1000, -1000, 107329,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2218, -41,
	-1000, 1951, -1000, -1000, -1000, -1000, -1000, 773, -1000, 2217,
	195, 2171, -1000, -1000, -1000, 3248, 2361, 3643, 3642, 3641,
	3640, 3639, 117066, 1794, 3638, 2439, 3636, 3635, 3632, 3630,
	3629, 3627, 3626, -1000, 88870, 1030, 88324, 87778, 3253, 106790,
	87232, 106244, 74167, 45977, 942, 3247, -1000, -1000, -1000, -1000,
	-1000, -1000, 111137, -1000, 1029, -1000, -1000, 3625, 3623, 2052,
	771, 96451, -1000, 1927, -1000, 927, 32582, -1000, 1232, -1000,
	32582, 301, -1000, -1000, -1000, -1000, -1000, -1000, 3622, 3621,
	3620, 3619, 3618, -1000, -1000, 79616, 23935, 79070, 78524, 105698,
	23377, 86686, 86140, 3616, 3615, 3614, 3613, 105152, 73609, 1026,
	1405, -1000, -1000, -1000, -1000, -1000, -1000, -28, 71377, 3415,
	111137, -1000, 298, -1000, -1000, -1000, -1000, -1000, -1000, 45392,
	688, 44807, 652, 44222, 651, -1000, -1000, -1000, -1000, 73051,
	-1000, 104606, 2356, 3611, 3610, 1120, 3609, 3131, 1718, 3608,
	1825, 1201, 3599, 3598, 3595, 3594, 3593, 3590, 3589, 1431,
	104060, 2839, 1464, 103514, 1663, 72493, 1025, 85594, 90501, 2524,
	102968, 1413, 1392, -1000, -1000, -1000, -1000, 3004, 2750, 2732,
	1261, -1000, -1000, -1000, -1000, 56622, 5578, 4970, 12112, 102422,
	59402, 90501, 90501, -1000, -1000, -1000, -1000, -1000, 43637, 647,
	43052, 860, -1000, -1000, 57178, 2799, -1000, -1000, -1000, -1000,
	42467, 523, 41882, 727, 111137, -1000, 2838, 1858, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2209, 1618, 3419, 2641, 71935, 2045,
	1426, 3210, 3002, 3000, 1508, 2998, 3587, 2527, 2994, 2944,
	2943, 2940, 2939, 1602, 2486, 271, 30278, 2831, 1674, 41297,
	1483, 1530, 2934, 2929, 3453, 1936, 1965, 1938, 77978, 3584,
	3583, 3188, 2927, 2924, 2686, 2911, -1000, 2798, 1429, -1000,
	-1000, -1000, -1000, 1459, -1000, -1000, -1000, -1000, 81247, -1000,
	-1000, 1329, -1000, -1000, 1329, -1000, -1000, -1000, -1000, -1000,
	1235, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1748, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2130, -1000, 2030, -1000, -1000, 2485, 3163,
	3163, 3163, 3245, 504, 497, -1000, 164, -1000, -1000, 122769,
	-1000, -1000, 46550, 46550, 46550, 46550, 46550, 46550, 46550, 2099,
	-1000, 769, -1000, -1000, 803, -1000, 766, 642, -1000, -1000,
	-1000, -1000, -1000, -1000, 765, -1000, -1000, -1000, -1000, -1000,
	-1000, 3415, -1000, 26780, -1000, -1000, -1000, 457, 762, 46550,
	-1000, -1000, 3467, 3466, 1011, -1000, 283, 952, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2837, 761, 760, -1000, 759, 757, 756, 755, 754, -1000,
	-1000, -1000, 748, 747, 746, 745, 743, 741, 739, 737,
	-1000, 2014, -1000, -1000, -1000, -1000, -1000, -1000, 685, 681,
	681, 681, -1000, 1015, -1000, -1000, -1000, 343, 676, 296,
	675, 674, 671, -1000, 735, 732, 731, 730, 728, 725,
	724, 717, 716, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1014, -1000, -1000, -1000, -1000, -31, 111137, -1000, 520, -31,
	-1000, -1000, 712, -1000, 34886, 34886, 34886, -1000, -1000, 2216,
	46550, -1000, 2443, -1000, -16, -16, 895, 55530, -1000, 52785,
	895, 273, 812, 61036, -1000, 2797, -1000, -1000, 711, 281,
	-1000, -1000, -1000, -1000, 24491, 2793, 111137, 111137, 90501, 90501,
	90501, 3582, 3061, 46550, -1000, -1000, 69180, 111137, 91040, -1000,
	-1000, 3360, 65923, 68641, 111137, 2836, 68102, 3581, -1000, -1000,
	-1000, -1000, -1000, 3030, 3580, 3577, 3575, -1000, 111137, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 215, 3029, -1000, -1000,
	94274, 215, 3025, -1000, 215, 2989, -1000, 93735, -1000, -1000,
	2177, 2982, -1000, -1000, 226, 2978, -1000, -1000, -1000, 218,
	2975, -1000, -1000, 277, -75, 2974, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 122769, -1000,
	-1000, -1000, 67556, -1000, 3170, -1000, -1000, 111137, -1000, 46550,
	-1000, 3359, 1859, 75269, 3296, -40, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2417, 2398, 1144, 2242, -1000, 3076, 1811,
	-1000, 32582, 3119, -1000, -1000, -1000, 275, 24491, -1000, -1000,
	-1000, -1000, -1000, -1000, 4687, 2971, 1365, -1000, 2239, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2017, 2959, -1000,
	2037, 2956, 1919, -1000, -1000, 3491, -1000, 3148, -1000, -1000,
	1809, 2955, -14, -1000, -1000, 2281, -1000, -1000, -1000, -1000,
	-1000, 1914, -1000, 977, 2952, -1000, 85048, 58846, 57178, 71377,
	-34, -1000, -1000, -1000, -1000, -248, -1000, 22819, 122769, -1000,
	-1000, -1000, -1000, 1754, 122769, 935, -1000, -1000, 2948, -1000,
	122769, 934, -1000, -1000, 2946, -1000, 2835, -1000, -1000, 2320,
	-1000, -1000, 3573, -1000, -1000, 3569, -1000, 3568, 3565, 3564,
	-1000, 1633, 1947, 3563, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 84509, 2212, -1000, -1000, 83417, 2834, -1000, 2312,
	3292, -1000, 83963, 1019, -1000, 977, 2310, -1000, 93196, 1048,
	2302, -1000, 3561, 3251, 2600, 977, 2300, -1000, -1000, -1000,
	-1000, -1000, 1037, -1000, 62665, -1000, 62665, -1000, 1593, -1000,
	116527, -16, 90501, 3415, -1000, -48, -1000, -1000, -1000, 1081,
	-1000, 56076, -1000, 56076, 95905, 74723, 960, 752, 64292, 122769,
	-1000, -1000, -1000, -1000, 122769, -1000, -1000, -1000, -275, 2640,
	-1000, 74723, 58290, 122769, -1000, -1000, -1000, -1000, 122769, -1000,
	-1000, -1000, 74723, 83417, -1000, 101876, 82878, -1000, -1000, 1425,
	2455, -1000, -1000, -1000, 74723, 1291, 74723, 74723, 74723, -1000,
	101330, -1000, -1000, 2012, 1572, 3153, 1996, 90501, -1000, 1815,
	-1000, -1000, -1000, 3198, 111137, -1000, -1000, 2832, -1000, 67010,
	92657, -1000, 92118, -1000, 91579, -1000, 90501, -1000, 90501, -1000,
	3558, 3557, 3556, -1000, -1000, 3554, -1000, 3551, 3185, -1000,
	122769, 3180, -1000, 3550, 3285, 2831, 122769, -1000, 2991, 1659,
	1656, 111137, -1000, -1000, 111137, -1000, 111137, -1000, -1000, -1000,
	1475, -1000, -1000, 2411, -1000, -1000, -1000, -1000, 90501, 1216,
	-1000, -1000, -1000, -1000, -1000, -1000, 2918, 3544, 1685, -1000,
	1755, -1000, 2789, 3182, -1000, 1424, 1736, -1000, -1000, 228,
	-1000, -1000, -40, -1000, 115988, -1000, 2485, -1000, 111137, -1000,
	2405, 2825, 2829, 1604, 2225, 2502, -1000, 40712, 2473, 49988,
	2236, 164, -1000, -1000, 164, 164, 32009, -1000, -1000, 65923,
	65923, 24491, 1295, 46550, 46550, 46550, 46550, 46550, 46550, 46550,
	46550, 46550, 46550, 46550, 46550, 46550, 46550, 46550, 46550, 46550,
	46550, 46550, 46550, 46550, 46550, 46550, 46550, 46550, 46550, 46550,
	46550, 46550, 46550, 46550, 46550, 46550, 46550, 46550, 2305, 46550,
	1229, 46550, 46550, 46550, 46550, 1673, -1000, -1000, 1896, 575,
	1984, -1000, 3404, 3404, 3404, 606, 606, 12676, 12676, 557,
	3540, 803, -1000, 46550, -1000, 51, 46550, 25049, -1000, 497,
	8550, 2425, -1000, 496, 25634, -1000, -1000, -1000, 26780, 642,
	40127, 46550, 1004, 122769, -1000, -1000, 1592, 3420, 22262, 2755,
	2681, 710, 840, 780, 29693, 29108, 28523, 27938, 749, 46550,
	46550, 46550, 46550, 46550, 46550, 46550, 46550, -1000, -1000, 3429,
	-1000, 3420, -1000, -1000, -1000, -1000, 3420, 1246, 1243, 3420,
	-1000, 3420, 3420, 8046, 8046, 39554, 38969, 38384, 50561, 37799,
	46550, 27353, 37214, 36629, -1000, 111137, -31, 3358, 46550, 185,
	-1000, 121451, -1000, 185, 185, 708, -54, 122769, 2607, 2607,
	54442, 2096, 2123, 2123, 2123, -1000, 895, 17777, 895, 100245,
	2132, 895, 895, 257, 287, 495, 52241, 2443, 100245, 790,
	698, 1, -7, -8, -1000, -1000, -10, -11, -1000, -1000,
	90501, 697, 25049, 24491, 255, 1942, -68, 2506, 2505, 2498,
	-1000, 2493, -1000, 1775, -70, 1228, 90501, 111137, 3539, -107,
	-1000, 256, -73, -1000, 1121, 252, 3420, -1000, -1000, -1000,
	-1000, -1000, 3537, 3536, -1000, 1012, 694, 692, 401, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 685, 681, 681,
	681, -1000, 343, 676, 296, 675, 674, 671, -1000, -1000,
	-1000, -1000, -1000, 2785, 90501, 111137, 3534, -248, 91040, -78,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 111137, -1000,
	-1000, -1000, 3533, -1000, 90501, -1000, -1000, 90501, 215, 2942,
	-1000, 90501, -1000, 90501, 214, 2941, -1000, -1000, 111137, -1000,
	90501, 90501, -1000, 111137, 111137, 111137, 74723, 74723, 227, -1000,
	90501, 883, -76, 1127, -40, -1000, -1000, -1000, 1329, -1000,
	1954, -1000, -1000, -1000, -1000, -1000, -1000, 1409, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1011, -1000, -1000, -1000,
	-1000, -1000, -1000, 3411, 3409, -32, -1000, -1000, 24491, -1000,
	-42, 1564, 1849, 1227, -1000, 77432, 2314, 3159, 3532, 2586,
	3138, 1589, -1000, 1473, -1000, 3259, 81247, 3334, 3342, 1292,
	-1000, 2784, -1000, -1000, 924, 1671, 1705, 1226, 1225, 81247,
	2037, -1000, 65923, -1000, 2523, 3244, 1398, 1393, 1398, 1398,
	1379, -1000, 81247, 1704, 1224, 1221, 1219, 1868, 1861, -1000,
	-1000, 1962, -1000, 1213, 1211, 828, 1854, -1000, -43, 3306,
	3339, 1286, -1000, 2780, 1210, -1000, -1000, -1000, 3239, 90501,
	24491, 1555, 1549, 1535, 1702, 1205, -33, -1000, 3304, 1204,
	1203, -1000, 4703, -1000, 74723, 1869, 2937, 2635, 893, 2634,
	-1000, -1000, -1000, 893, -34, 71377, 111137, 251, -1000, 51,
	46550, 46550, 51, 46550, 51, 3280, 2932, -1000, -1000, -1000,
	-1000, -1000, 3531, 1920, 2436, -1000, -1000, 670, 2298, 2778,
	111137, 2530, -36, 90501, -1000, 66471, 2928, 69726, 2037, 2296,
	-1000, -1000, 82332, -1000, 2917, 520, 2295, -1000, 706, 3530,
	2916, -1000, 115449, -1000, 3170, 1258, 2915, 1071, 726, 3357,
	-1000, 726, 63204, -1000, 111137, -1000, -16, 1032, 76354, -79,
	-81, 492, -1000, 100791, 111137, 1066, 76893, 111137, 3108, 975,
	57178, -1000, 57178, -82, -275, 2633, 1453, 960, 960, 893,
	-1000, 893, -1000, 90501, 2828, -1000, -1000, 74723, 960, 960,
	960, -1000, -1000, -1000, -1000, 3529, 3527, 3525, 3519, -1000,
	-1000, 976, 90501, 111137, 90501, -1000, 250, -1000, 111137, -1000,
	111137, 111137, 90501, -1000, 976, 111137, 976, 111137, 976, 111137,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 51, 46550, -1000,
	-1000, 3518, 1601, -1000, 2827, -1000, 2826, -1000, 25, -1000,
	-1000, -1000, -1000, -1000, -1000, 1913, -1000, -1000, -1000, -1000,
	90501, 90501, 90501, 90501, 111137, 3093, -1000, 111137, 3091, 90501,
	-1000, -1000, 81247, -1000, 2405, 2825, -1000, -1000, -1000, -1000,
	-1000, -1000, 1366, 2180, -1000, 2470, -1000, 1532, -1000, -1000,
	-1000, 122769, 51117, -1000, -1000, 122769, 1795, -1000, 49415, 48842,
	-1000, -1000, 1617, 90501, 2538, -1000, 2538, -217, -1000, 121278,
	2468, 90501, -1000, -1000, -1000, -1000, -1000, 918, 988, 988,
	1250, 1250, 1250, 1250, 3330, 1294, 374, 5917, 8613, 8613,
	458, 458, 458, 458, 458, 8613, 5277, 606, 606, 5277,
	5277, 5277, 5277, 5277, 606, 606, 606, 8613, 8613, 8613,
	12676, 5614, 9808, 46550, 46550, 1200, 1891, 575, 8425, 46550,
	7047, 7047, 7047, 7047, -1000, 1832, -1000, -1000, -1000, -1000,
	2762, 669, 50561, 50561, -1000, -1000, -1000, -1000, 26207, 46550,
	-1000, -1000, -1000, -1000, 36044, -1000, -1000, 120617, -321, 490,
	-195, 6, -1000, 46550, 46550, 46550, 489, -1000, 246, 46550,
	111137, -1000, 15380, 789, -145, -1000, -87, 1396, -1000, 46550,
	-1000, -1000, 1195, -1000, 1185, 1183, 1179, -1000, 668, 488,
	-1000, 242, -1000, 2119, 664, 662, 46550, -1000, -1000, -1000,
	-1000, -1000, 120393, -1000, -1000, 120186, -1000, -1000, 120015, -1000,
	-1000, 119751, -1000, -1000, -1000, 122545, 14455, 11760, 11580, 6626,
	10869, 9897, -88, 487, -89, 485, 916, 914, 484, 482,
	480, -95, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -98, 477, -1000, 2753, -195, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 475, -1000, 459,
	-1000, 122338, -195, 428, 7231, -1000, 50561, 50561, 50561, -1000,
	427, -1000, 121086, -1000, 122167, 35471, 35471, 35471, 425, 121905,
	46550, -195, -104, -1000, -109, -1000, -1000, 551, -111, 989,
	34886, 53349, 24491, -1000, 989, 989, 46550, -1000, 46550, 2481,
	-1000, -1000, -1000, -1000, 2480, 1805, 2607, 54442, -1000, -1000,
	-1000, -1000, 100245, -1000, 3415, 2592, -1000, 100245, -1000, -1000,
	111137, 520, -1000, 100245, 100245, 24491, 895, -1000, 895, 100245,
	679, -1000, -1000, -1000, -1000, -1000, 424, 59946, 6, 239,
	24491, 977, -1000, -1000, 2574, 2574, 2574, 2574, -1000, -1000,
	111137, 1178, -38, -144, -1000, 3376, -1000, 2031, -1000, 65923,
	-1000, 800, 1035, 24491, -1000, -1000, -1000, 658, -1000, 3420,
	3420, -1000, 3420, 111137, 2749, 178, -1000, 100, 69726, 69726,
	3515, -1000, -1000, 215, -1000, 90501, 215, 215, -1000, 90501,
	90501, 2177, -1000, 226, -1000, 218, -1000, -1000, -75, -1000,
	985, 32582, -1000, 1329, -1000, -1000, 1540, -1000, 1922, -1000,
	1241, -1000, -1000, -1000, -1000, 32582, -1000, 2125, 111137, 111137,
	90501, -1000, 111137, -1000, 2058, 69726, -1000, 2291, 114910, 2287,
	65923, 111137, -1000, -1000, 656, 943, 2465, 2464, 1064, 111137,
	111137, 2463, 114371, 113832, -1000, 3512, 111137, 2069, 46550, 3230,
	2143, 4453, 51, 51, -1000, 51, 51, 51, -1000, 655,
	1359, 90501, 90501, 111137, 69726, 90501, 1782, -1000, -1000, -1000,
	-1000, -1000, 81786, -1000, -1000, 3427, 3426, -1000, 1398, -1000,
	-1000, -1000, 1398, 2037, 1708, 111137, 69726, 90501, 69726, 113293,
	112754, -1000, 1696, 111137, 1436, -1000, 828, 2039, 51, 51,
	-1000, 51, 51, 51, 649, 24491, 1901, -1000, 2869, 111137,
	3464, 112215, 3461, 111137, 111137, 111137, 69726, 3172, 111137, 111137,
	69726, 4703, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 70838, 1076, 977, 1692, 1174, 1170, 81247,
	57178, 974, 57178, 2596, -1000, -1000, 21705, -1000, 122769, 122769,
	-1000, 122769, -1000, 66471, 111137, -1000, 1018, 111137, 76893, 944,
	2908, 62126, -248, 960, 74723, 90501, -36, 2530, 111137, -1000,
	-1000, 2037, 2904, 520, 2289, -1000, 74723, 3356, 2903, 646,
	3511, 3510, -1000, 90501, 2211, 2288, -1000, -1000, 111676, 3043,
	828, 111137, 989, 54442, 1918, -1000, 60492, 1039, 111137, 1813,
	94, -1000, -1000, -1000, 8, 111137, -1000, 811, -1000, -1000,
	1032, 1032, 960, -302, 645, -1000, 868, 867, 57734, 74723,
	-118, -1000, -1000, -1000, -1000, 2287, 90501, 111137, 1273, 2599,
	111137, -121, -1000, 236, 643, -1000, 2246, -1000, -275, -1000,
	975, 57178, 2748, 2746, -1000, -1000, 984, -1000, 1374, 960,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -17, 111137, -248, -248, -37, -38, -1000, 976, -1000,
	976, -1000, 976, -1000, 122769, -1000, -1000, 1599, 1597, 111137,
	-1000, 24491, 111137, 90501, 24491, 90501, 2823, 2813, -1000, -1000,
	-1000, 111137, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1080,
	-1000, 1795, 2178, -1000, 642, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2388, -1000, -39, 32009, 899, -1000,
	-1000, 90501, -18, 46550, 46550, 7681, 7426, 46550, 50561, 50561,
	-1000, 46550, 6660, -1000, -1000, -1000, -1000, -1000, 2741, 639,
	46550, 65923, 6215, 6185, -1000, 423, 9296, 5277, -1000, 46550,
	-1000, 419, 34313, -1000, 121540, -71, -124, -1000, 18347, -195,
	-130, -1000, -1000, 799, -1000, 3039, -1000, 46550, 121713, 2313,
	1989, 1789, 1615, 3420, 3458, 21148, -1000, 63748, 994, 2144,
	119570, -1000, -1000, -1000, -1000, 65923, 65923, 46550, 46550, -1000,
	46550, 46550, 46550, -1000, -1000, -1000, 3420, 930, -1000, -1000,
	-1000, 930, -1000, -1000, 1398, -1000, 1398, -1000, 46550, -1000,
	-1000, 2737, 46550, -1000, 65923, 65923, 50561, 50561, 50561, 50561,
	50561, 50561, 50561, 50561, 50561, 50561, 50561, 50561, 50561, 50561,
	50561, 50561, 50561, 50561, 50561, 2429, 50561, 3399, 3399, 3399,
	-1000, 2783, 2737, 46550, 46550, 65923, 411, 410, 409, -1000,
	46550, -195, -1000, -1000, 1032, 638, -1000, 2376, -1000, 2677,
	-1000, 46550, -1000, -159, -1000, 2443, -1000, -1000, 2677, 2677,
	-131, 122769, 54442, 54442, -1000, 636, 46550, 2477, -1000, -1000,
	786, -322, -1000, 865, -1000, -1000, -1000, -1000, -1000, 520,
	-1000, -1000, -1000, 222, 100245, 100245, 785, -1000, -142, -1000,
	-1000, -148, -1000, 3355, 404, 24491, -1000, 989, 2606, -1000,
	-1000, -1000, -1000, -1000, -1000, -248, 111137, 111137, 2159, 3456,
	-1000, 3425, 796, 784, 220, 3420, 403, 402, 398, -248,
	111137, 111137, 111137, -1000, -1000, -1000, -1000, 215, -1000, -1000,
	-1000, 214, -1000, -1000, -1000, -1000, 2543, -1000, -40, -1000,
	-1000, -1000, 46550, -1000, -1000, 3154, 1169, 1166, -1000, -1000,
	-1000, -1000, 2779, -1000, 2898, -1000, 2279, -1000, 1046, -1000,
	1542, -1000, 46550, 635, 2591, 632, 631, 3509, 2079, 3505,
	1065, 2897, 2177, 2896, 2177, -1000, -1000, -1000, 937, -1000,
	122769, 2143, -1000, 628, 622, -1000, -42, 1562, 1830, 1165,
	983, -1000, -1000, -1000, -1000, 46550, 46550, 99706, -1000, 478,
	3148, -19, -1000, -1000, -1000, 1665, 1164, 1163, -1000, -1000,
	-1000, -1000, 2037, 1629, 1162, 1160, -1000, -1000, -1000, -1000,
	-1000, 2278, -1000, -1000, 2893, 982, -1000, 2859, 2858, 913,
	111137, -1000, 981, -1000, -1000, -1000, -1000, 46550, -1000, -43,
	1159, 3297, 2272, 90501, -1000, 2177, 2890, 1157, -1000, 1155,
	-1000, -1000, -1000, 3302, 3301, 1172, -1000, -1000, -1000, -1000,
	-1000, 70282, -1000, 111137, 69726, 90501, 1645, 893, -1000, 2412,
	893, 974, 2733, -1000, 2529, 980, 90501, 3504, 396, -149,
	-46, 65923, 3353, -1000, 2222, 640, 90501, 917, -1000, 3415,
	-1000, -1000, -1000, 978, -1000, 3291, 90501, 3352, 2889, 977,
	51, 90501, 3434, -1000, -1000, 3351, 90501, 2887, 2210, 2267,
	2424, 828, 75815, 977, 2131, -67, -1000, 1813, 33728, 3144,
	-150, -1000, -1000, -1000, 989, 63204, 54442, 46550, 3503, -158,
	-1000, -1000, -1000, -1000, -1000, 97543, 97543, 74723, 74723, 74723,
	960, 111137, 111137, 76893, -1000, -1000, 619, 111137, 111137, 618,
	-1000, 111137, 111137, 3501, 74723, -49, 614, -1000, 864, 859,
	857, -1000, -1000, -1000, -1000, -1000, 975, -1000, -275, 57178,
	51, -1000, 2150, 90501, -1000, 20591, -1000, -1000, -1000, -1000,
	-1000, -1000, 976, -1000, -1000, 2047, 2233, 2047, 1799, 1798,
	-1000, -1000, 2175, -1000, -1000, -1000, -1000, 2552, 3166, 24491,
	3310, 7047, 46550, 46550, 356, 6152, 6035, 7047, 46550, 46550,
	65923, 10262, -161, 46550, 46550, -1000, 46550, 777, 122769, 3455,
	46550, 393, 392, -1000, -1000, -1000, 3416, -1000, -1000, -1000,
	122769, 46550, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 387,
	-1000, 186, -1000, -1000, -1000, 118144, -1000, 46550, 385, 3229,
	-1000, 383, 381, 9208, 548, 119381, 119293, 119104, 379, -1000,
	-1000, 377, 376, 122769, 2783, 122769, -1000, -1000, 964, 964,
	1372, 1372, 1372, 1372, 3399, 574, 1119, 472, 340, 340,
	340, 445, 862, 862, 340, 340, 340, 2728, 2428, 605,
	7350, -1000, -1000, 122769, 122769, 371, -1000, -1000, -1000, -195,
	362, 1032, -1000, 2669, 3228, 122769, -1000, 54442, 2669, 2669,
	-1000, -1000, 1805, 111137, 122769, 54442, -1000, 2592, -1000, 18915,
	-1000, 24491, -1000, -1000, -1000, -1000, 3415, -1000, 59946, -1000,
	596, -1000, 95, -1000, 2606, -1000, 854, -1000, -1000, 74723,
	74723, -248, -264, -1000, -1000, 776, 3496, 794, 24491, 357,
	-1000, -1000, -1000, -248, -248, -248, -1000, -1000, -1000, 3107,
	122769, 111137, 111137, 1433, 99167, 111137, 2883, -1000, 2241, -1000,
	1064, 118721, 54986, -1000, 54986, 111137, -1000, -1000, -1000, 1870,
	1486, 3495, 1112, -1000, 3201, 111137, -1000, 111137, -1000, -1000,
	-1000, 111137, 111137, 90501, 111137, -1000, 69726, 2870, -164, 122769,
	-50, -1000, 852, -1000, 1389, -1000, 20034, 111137, 69726, 90501,
	111137, 69726, 90501, 2882, 111137, 2088, -1000, -1000, 2857, -1000,
	2867, -166, 24491, -1000, 3449, 3444, 2881, 3206, -1000, 111137,
	3442, 111137, 90501, 3106, -1000, -1000, -1000, -1000, -1000, 1627,
	1153, 1146, 974, -51, 593, -1000, 848, -1000, -1000, 847,
	-1000, 974, -1000, 74723, 57178, 3494, 520, -1000, 2585, -1000,
	95359, 2220, 51, -1000, 3490, 98089, 591, -1000, 2148, -1000,
	750, -1000, 2392, 69726, 2037, 51, 90501, -1000, -1000, 520,
	355, -57, -1000, 2949, 1057, 24491, 90501, 2880, 2426, 828,
	75815, -1000, 1258, 2502, -1000, -66, -1000, 684, 51, 2131,
	-1000, -67, 122769, -1000, 844, -1000, -169, -1000, -1000, 352,
	-1000, 3105, 3101, -1000, 2678, 54986, 589, 588, 111137, 3097,
	-1000, -1000, -175, 2490, 2490, 74723, 57178, 74723, -1000, 975,
	893, -1000, 2336, -1000, -1000, -1000, -1000, -1000, 24491, 1668,
	-1000, 585, 583, -1000, -1000, -1000, -1000, 3166, 7047, 7047,
	46550, 46550, 46550, 7047, 10262, -182, -1000, 7047, 7047, -195,
	-1000, -1000, 121540, -1000, -1000, -1000, 122769, -1000, 19477, 2051,
	-1000, 118693, -1000, 32009, -1000, -1000, 46550, 46550, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 50561, 2714, 582, 65923,
	-1000, -1000, 338, 965, 46550, 48269, 2443, 965, 965, -1000,
	-184, -1000, -1000, -1000, 3415, 95, -1000, -1000, 3488, 24491,
	-1000, 74723, -1000, -1000, 3487, 793, -1000, 3486, -1000, -1000,
	-1000, -1000, -1000, 2632, 3350, -1000, 1853, -1000, 111137, -1000,
	111137, -1000, 24491, 111137, 2698, 1264, -1000, 943, 2461, 581,
	50561, 90501, 907, -1000, 3370, 2668, -189, -1000, 111137, 46550,
	111137, -190, -196, 2248, -1000, -1000, 1249, 46550, -1000, -1000,
	-1000, 65923, 580, 2177, 2177, -197, -198, -1000, -1000, -1000,
	46550, 1141, 111137, 33155, -1000, 3485, 3148, -1000, -1000, -1000,
	-1000, -1000, -1000, 111137, -1000, 111137, -1000, 46550, 1140, -1000,
	-1000, -1000, 3440, 2177, 24491, 2177, -1000, 2177, 3206, 1111,
	111137, 69726, 90501, -1000, 2457, 2457, 74723, 57178, -1000, -75,
	974, -1000, 3349, 2554, 3483, -1000, -1000, -1000, -1000, 2460,
	-1000, -1000, 111137, 2448, 961, -1000, -205, -1000, 843, 841,
	76893, 944, 938, -1000, -100, 579, -1000, 835, -1000, -1000,
	-1000, -1000, 520, 3347, -1000, 3436, 578, 577, 111137, 2208,
	576, 24491, 3141, 828, 75815, -1000, 3043, 1813, -1000, 2258,
	111137, 3137, -1000, 2502, 575, -1000, 960, 571, 563, 2420,
	2420, -206, 54986, 54986, -207, 556, 960, -1000, -212, -1000,
	-1000, -1000, -1000, -1000, -101, -1000, 878, 874, -1000, -1000,
	90501, 90501, 46550, 46550, -1000, 7047, 7047, 7047, -1000, 316,
	-1000, -1000, 2131, 3226, -1000, -116, 17112, 16941, 5236, 50561,
	65923, -215, -1000, -1000, 111137, 122769, -137, -1000, 122769, 555,
	552, 444, -1000, -1000, -1000, 607, -1000, -1000, -1000, 3482,
	-1000, 98628, 111137, -1000, -1000, 1611, -1000, -1000, -1000, 111137,
	2264, -1000, -1000, -1000, 1063, 46550, 7350, 545, 46550, -1000,
	3346, -1000, 2534, 2774, 1822, 54986, -1000, 3166, -1000, 16515,
	-1000, 1040, 1902, -1000, -1000, -1000, 122769, 3206, 54986, -1000,
	-1000, 535, 528, 122769, 527, 830, 2713, -1000, -1000, -1000,
	-1000, -1000, 122769, 526, 3297, -1000, -1000, -1000, -1000, 2177,
	90501, -1000, -1000, -1000, -1000, -220, -1000, -1000, 1921, 51,
	2044, 2618, -1000, 2220, 525, -1000, -1000, 2190, 2532, -1000,
	98089, 32582, 32582, 311, 3344, 938, -1000, 3395, -1000, 3082,
	3082, 46550, 3343, 51, -1000, 3434, 54986, -1000, 90501, 54986,
	2203, 1962, 2404, 75815, -1000, 2424, -1000, -1000, -223, 111137,
	1813, -1000, -1000, 74723, 74723, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1040, -228, -229, -1000,
	74723, -1000, -1000, 2336, -1000, 111137, -1000, 111137, -1000, -1000,
	-230, -236, -1000, 2126, 46550, 32009, -1000, -1000, 5236, -239,
	-1000, -167, -1000, 3338, 48269, 3481, 3479, 3475, -1000, -1000,
	-1000, 1833, -1000, -1000, -1000, 2879, 2672, 16487, 2381, 111137,
	16057, -1000, 2744, -1000, -1000, 2554, 522, -1000, -1000, -1000,
	-1000, 899, 111137, 2554, 2662, 90501, 1058, -242, 2047, 2047,
	46550, 31436, 2075, 46550, -1000, -1000, 3206, -1000, 2700, 3403,
	-1000, 944, -1000, 2056, 111137, -1000, 3189, -1000, 3095, -1000,
	-1000, -1000, 2585, 51, -1000, -1000, -1000, -245, 122769, 51,
	-1000, 307, -247, 1057, -250, 90501, 1840, -1000, 828, -1000,
	2426, 989, -1000, -1000, -252, -253, 1822, 1040, 2039, -255,
	-1000, -258, -261, -1000, -1000, 297, 47696, 47696, 47696, -195,
	-217, -1000, 111137, 521, -1000, -1000, -1000, -1000, -1000, 2854,
	971, -1000, 2191, 1828, 274, 1075, -1000, -1000, 2039, 111137,
	-1000, -1000, -1000, 967, 520, -1000, 46550, 1040, -263, -1000,
	1038, -266, -1000, 1016, -268, -1000, 2707, -1000, -269, 2177,
	962, 3279, -1000, -1000, -1000, 2190, 90501, -274, -1000, -1000,
	2304, -1000, 2554, 961, -1000, -1000, -1000, 1040, 519, 1822,
	518, 1444, 828, -1000, -1000, 1398, 3141, 3005, 960, 960,
	2554, 1822, 959, -1000, 960, -1000, -1000, -1000, 2913, -1000,
	51673, 2221, 1790, 120824, 2913, 2913, -1000, -1000, 111137, 3262,
	-1000, 2199, 2198, 1478, -1000, -1000, -1000, -1000, -1000, -1000,
	2668, -277, 3255, 2381, 122769, 2554, -1000, 2047, 2611, -1000,
	2047, 2704, -1000, 2054, -1000, -1000, -1000, 1687, 3402, 2393,
	517, -1000, 111137, 1773, 1749, 3474, 2044, 2190, 1822, 54986,
	2554, 54986, -1000, -1000, 111137, -1000, 1962, 1307, -1000, -1000,
	2039, 2554, 989, 515, -1000, -1000, 1812, 3366, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 827, -1000, 3068, -1000,
	1079, 1985, 1985, 989, -1000, 825, 2191, -1000, -1000, 514,
	-1000, 509, -1000, 2145, -1000, -1000, -1000, -1000, 111137, -1000,
	-1000, 3471, -1000, 944, -1000, 2554, -279, 2039, -282, -1000,
	-248, 1840, -1000, 1552, 959, 2039, -1000, 1786, -1000, -1000,
	2128, 47123, 46550, -1000, 3354, -1000, -1000, 2451, -1000, -1000,
	46550, 2668, 46550, 46550, 61582, -284, -1000, 2190, 2039, 1040,
	959, 1822, 1444, 63204, 989, 959, -1000, -1000, -1000, 122769,
	-1000, -1000, -1000, 122769, -1000, -285, -290, -302, 97543, 2172,
	2393, 959, 1822, 989, 2554, -1000, -276, -1000, 989, 2039,
	1138, -291, -1000, -1000, -1000, -1000, 989, 2554, -1000, 2039,
	-1000, -1000, -1000, -1000, 508, -1000, -1000, 2039, 959, 46550,
	959, 989, -313, 989, -1000, 2039, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4339, 4334, 4320, 4318, 4314, 4313, 4307, 4306, 4304,
	4303, 4302, 4300, 4299, 4298, 4297, 4296, 4295, 4294, 4292,
	4291, 4290, 4287, 4286, 4281, 4280, 4279, 4278, 4277, 4276,
	4273, 4271, 4269, 4260, 4254, 4250, 4249, 4248, 4225, 4224,
	4223, 4222, 4221, 4219, 4216, 4214, 4213, 4212, 4211, 4210,
	4208, 4205, 4204, 4203, 4202, 4201, 4199, 4197, 4195, 4193,
	4191, 4188, 4185, 53, 4184, 4180, 4171, 4170, 4169, 4166,
	4165, 4164, 4163, 4162, 4159, 4156, 4152, 4147, 4146, 4144,
	4142, 4140, 4137, 4132, 56, 4131, 259, 4129, 4123, 4121,
	4120, 4119, 4118, 4116, 4115, 4109, 4108, 4106, 4105, 257,
	4103, 124, 4102, 4101, 4099, 4098, 4097, 256, 4096, 4094,
	4091, 4090, 265, 4089, 4088, 4086, 4085, 4083, 4082, 4080,
	4079, 4077, 4076, 4075, 109, 207, 4074, 4073, 472, 4072,
	4071, 4070, 4069, 4068, 4067, 4064, 4063, 4062, 4061, 238,
	4059, 254, 4058, 4057, 4056, 4054, 4053, 4052, 4050, 4046,
	4045, 4044, 4043, 4041, 4040, 4038, 4036, 4034, 4033, 4027,
	4024, 4023, 4022, 4021, 4020, 4019, 4018, 4017, 4016, 4013,
	4009, 4007, 4005, 4003, 4001, 4000, 3999, 3997, 3996, 232,
	264, 176, 3995, 3994, 253, 252, 3993, 3992, 3991, 3989,
	3987, 118, 9, 83, 3986, 3985, 79, 80, 78, 102,
	97, 89, 3984, 105, 3982, 116, 57, 3980, 21, 2,
	161, 237, 5340, 230, 3979, 3978, 3977, 236, 180, 3975,
	226, 3971, 3970, 3969, 3968, 3965, 67, 51, 174, 165,
	163, 159, 736, 3964, 146, 96, 81, 55, 41, 17,
	86, 203, 22, 3962, 244, 8, 133, 1, 35, 3959,
	3958, 3957, 3956, 3670, 113, 3951, 251, 240, 155, 3947,
	3944, 3942, 479, 3941, 3940, 48, 3939, 189, 95, 126,
	33, 114, 3938, 143, 37, 3937, 150, 58, 3934, 156,
	88, 82, 11653, 11868, 3933, 108, 62, 131, 125, 208,
	183, 190, 104, 153, 154, 182, 202, 199, 168, 63,
	3932, 241, 3931, 3327, 173, 171, 3928, 3926, 3925, 84,
	186, 99, 3924, 3923, 72, 15, 36, 4, 6, 134,
	24, 23, 16, 3916, 20, 111, 40, 27, 3912, 28,
	3911, 3908, 3901, 3900, 3899, 43, 151, 3894, 263, 3890,
	123, 50, 54, 3889, 11, 211, 3888, 228, 120, 3887,
	3886, 243, 193, 172, 3885, 73, 222, 3880, 3877, 3876,
	3875, 3873, 121, 3, 127, 3869, 3865, 130, 3864, 47,
	231, 185, 3860, 60, 3859, 3857, 164, 107, 129, 261,
	216, 213, 103, 219, 191, 223, 3854, 3853, 3851, 205,
	3850, 3849, 214, 138, 3847, 3845, 194, 270, 87, 44,
	71, 225, 77, 181, 145, 3844, 195, 3843, 3842, 262,
	170, 209, 12, 7, 91, 119, 3836, 5, 227, 142,
	217, 115, 3832, 6617, 545, 201, 3830, 3829, 139, 141,
	74, 132, 140, 250, 100, 3828, 3824, 1079, 3823, 3822,
	3821, 3820, 178, 3819, 3818, 3816, 144, 166, 198, 3815,
	92, 65, 46, 26, 112, 239, 255, 110, 220, 167,
	246, 3813, 3812, 3811, 184, 3810, 76, 117, 149, 187,
	242, 61, 3809, 152, 3808, 148, 1724, 64, 147, 3807,
	221, 3806, 3804, 3802, 3801, 3800, 3799, 3798, 1714, 224,
	3796, 3793, 3792, 34, 179, 3790, 249, 158, 175, 94,
	70, 3789, 98, 2081, 3787, 1675, 2636, 66, 247, 329,
	248, 3785, 4660, 52, 3784, 0, 13510, 7338, 9929, 12608,
	3783, 4198, 3775, 3770, 3767, 206, 137, 3762, 3758, 3757,
	106, 3754, 85, 3753, 3751, 69, 3750, 25, 10, 18,
	29, 31, 297, 169, 3748, 3742, 59, 122, 135, 3741,
	260, 215, 3740, 3731, 3730, 3722, 93, 3714, 39, 3691,
	32, 3690, 3688, 45, 14, 30, 3687, 3686, 192, 3685,
	212, 235, 3684, 157, 3679, 3324, 128, 3678, 3677, 3676,
	68, 49, 245, 90, 3675, 274, 3674, 3244, 3673, 3672,
	19, 3671, 3664, 234, 197, 162, 210, 3663, 3661, 160,
	3659, 3658, 3657, 268, 3655, 3654, 3653, 38, 3652, 13,
	3650, 3649, 196, 3038, 3647, 3646, 42, 3493, 177,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 31, 32, 32, 33, 34,
	34, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 17, 17, 37, 37, 18, 18, 39, 39,
	19, 19, 40, 40, 582, 582, 594, 594, 22, 22,
	42, 42, 23, 43, 16, 583, 583, 583, 583, 35,
	24, 44, 28, 28, 28, 28, 28, 194, 194, 194,
	194, 21, 21, 38, 38, 229, 229, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 578, 578, 231, 231, 230, 224, 224,
	225, 225, 584, 584, 232, 232, 232, 234, 234, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 477,
	477, 477, 510, 510, 509, 509, 509, 508, 508, 598,
	598, 599, 599, 599, 599, 599, 127, 127, 375, 375,
	375, 52, 52, 52, 52, 52, 573, 573, 196, 196,
	196, 198, 198, 197, 197, 197, 197, 197, 75, 75,
	589, 589, 590, 590, 588, 591, 591, 591, 195, 195,
	195, 123, 123, 123, 123, 123, 123, 124, 124, 125,
	125, 199, 199, 199, 201, 201, 200, 200, 200, 200,
	200, 200, 200, 200, 205, 15, 15, 15, 15, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 103, 103,
	512, 512, 513, 513, 190, 190, 191, 191, 191, 191,
	192, 192, 193, 193, 193, 66, 66, 202, 202, 204,
	204, 203, 203, 203, 203, 203, 54, 54, 54, 54,
	54, 54, 54, 55, 55, 55, 55, 55, 56, 56,
	56, 56, 56, 56, 57, 57, 57, 57, 57, 57,
	64, 64, 64, 64, 64, 181, 181, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	72, 72, 72, 72, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 601, 601, 602, 602, 603, 603, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 81, 81, 337, 337, 302,
	302, 82, 82, 82, 83, 83, 84, 84, 68, 68,
	571, 571, 352, 352, 468, 468, 69, 579, 579, 579,
	581, 581, 580, 580, 86, 86, 374, 374, 87, 87,
	87, 87, 87, 87, 88, 88, 88, 88, 88, 88,
	88, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 96, 96, 96, 96, 96,
	97, 97, 97, 94, 94, 94, 91, 91, 91, 90,
	90, 90, 95, 95, 95, 570, 291, 291, 93, 93,
	93, 92, 92, 92, 353, 353, 98, 98, 98, 98,
	303, 99, 99, 99, 99, 99, 99, 99, 99, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 470, 470, 100, 100, 100, 435, 435, 104,
	104, 104, 390, 390, 105, 105, 105, 105, 105, 106,
	106, 106, 106, 106, 106, 106, 106, 126, 126, 126,
	126, 126, 126, 126, 575, 575, 345, 345, 256, 256,
	256, 256, 116, 116, 116, 116, 117, 117, 117, 118,
	118, 186, 186, 133, 133, 133, 133, 133, 132, 132,
	132, 132, 132, 132, 58, 58, 58, 59, 59, 60,
	60, 61, 61, 62, 62, 63, 63, 63, 63, 63,
	135, 135, 595, 595, 137, 134, 134, 134, 136, 136,
	136, 136, 138, 139, 139, 139, 139, 139, 139, 139,
	139, 140, 140, 502, 502, 361, 361, 500, 500, 522,
	522, 501, 501, 307, 307, 307, 307, 307, 308, 308,
	308, 511, 511, 511, 511, 511, 511, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 187, 187, 188, 189,
	189, 189, 189, 189, 164, 164, 164, 180, 180, 180,
	180, 180, 180, 180, 167, 167, 167, 151, 151, 142,
	142, 142, 142, 142, 142, 142, 146, 146, 146, 146,
	146, 146, 146, 146, 143, 143, 153, 153, 153, 153,
	153, 147, 147, 148, 148, 148, 148, 174, 174, 150,
	150, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	144, 144, 144, 144, 155, 155, 155, 155, 397, 397,
	397, 179, 179, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 177, 177, 177, 177, 177, 177,
	592, 592, 593, 593, 171, 171, 171, 171, 171, 171,
	449, 449, 165, 165, 165, 165, 170, 170, 170, 170,
	173, 173, 173, 173, 380, 380, 162, 162, 162, 163,
	163, 163, 168, 168, 169, 166, 166, 172, 172, 172,
	172, 145, 145, 145, 145, 605, 605, 605, 175, 175,
	161, 161, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 606, 606, 157, 157, 157, 156, 156,
	156, 156, 159, 159, 160, 160, 160, 160, 160, 160,
	158, 149, 178, 572, 572, 568, 568, 568, 568, 568,
	568, 568, 568, 569, 569, 569, 569, 574, 574, 109,
	109, 109, 109, 109, 119, 119, 119, 119, 119, 110,
	110, 110, 110, 110, 112, 112, 111, 111, 111, 111,
	76, 76, 76, 76, 76, 14, 14, 14, 77, 77,
	247, 247, 208, 208, 208, 326, 326, 209, 209, 315,
	315, 315, 315, 206, 206, 207, 207, 78, 78, 607,
	607, 607, 585, 585, 585, 586, 586, 586, 586, 586,
	586, 309, 309, 310, 310, 415, 415, 415, 415, 415,
	313, 313, 313, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 316, 316, 233, 233, 233, 324, 325, 325,
	317, 317, 323, 322, 322, 321, 321, 320, 320, 318,
	319, 319, 319, 328, 328, 327, 330, 330, 329, 414,
	531, 531, 533, 533, 533, 533, 533, 533, 533, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 398, 398, 608, 608, 529, 529, 529, 530, 525,
	525, 526, 526, 526, 526, 526, 311, 311, 312, 312,
	312, 312, 527, 528, 343, 343, 453, 532, 532, 534,
	534, 536, 609, 609, 609, 609, 609, 609, 610, 610,
	610, 413, 413, 412, 412, 335, 335, 537, 537, 537,
	537, 538, 538, 538, 538, 538, 541, 540, 539, 539,
	539, 539, 539, 80, 80, 80, 377, 377, 376, 376,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 183, 183, 259, 259, 74,
	74, 74, 12, 12, 12, 587, 587, 587, 79, 79,
	79, 79, 79, 79, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 577, 577, 576, 576, 260, 260,
	612, 612, 85, 85, 85, 85, 85, 85, 85, 85,
	471, 471, 472, 472, 73, 73, 73, 73, 73, 399,
	399, 396, 396, 395, 395, 342, 342, 451, 451, 451,
	452, 264, 264, 265, 265, 226, 226, 226, 30, 29,
	20, 20, 25, 25, 26, 26, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 27, 27, 46, 46, 46,
	46, 47, 47, 47, 47, 50, 50, 51, 51, 45,
	45, 45, 45, 48, 48, 41, 41, 596, 596, 597,
	597, 115, 115, 120, 120, 120, 120, 120, 121, 121,
	121, 121, 122, 122, 122, 122, 131, 131, 182, 182,
	182, 182, 182, 182, 182, 53, 53, 53, 53, 65,
	65, 65, 65, 129, 614, 614, 614, 130, 130, 130,
	613, 613, 257, 257, 409, 409, 410, 410, 615, 615,
	411, 411, 411, 411, 411, 250, 249, 251, 251, 252,
	252, 71, 71, 71, 242, 242, 241, 239, 239, 514,
	514, 244, 244, 244, 245, 245, 235, 235, 236, 236,
	237, 237, 238, 238, 248, 248, 616, 616, 107, 107,
	107, 185, 185, 301, 301, 301, 406, 406, 406, 336,
	336, 271, 271, 408, 408, 408, 408, 373, 373, 373,
	184, 184, 350, 350, 363, 363, 364, 364, 465, 465,
	365, 113, 113, 114, 114, 128, 128, 212, 212, 210,
	210, 210, 210, 210, 210, 210, 210, 217, 217, 218,
	218, 219, 219, 220, 221, 221, 221, 221, 354, 354,
	222, 222, 222, 211, 211, 211, 213, 213, 213, 213,
	213, 213, 213, 216, 216, 216, 216, 223, 223, 223,
	215, 215, 548, 548, 548, 550, 550, 552, 552, 551,
	551, 547, 547, 549, 549, 611, 611, 379, 379, 379,
	333, 334, 331, 331, 332, 332, 340, 340, 338, 339,
	339, 341, 341, 450, 450, 450, 227, 227, 227, 370,
	370, 370, 370, 371, 371, 402, 402, 400, 400, 400,
	400, 401, 401, 403, 403, 403, 404, 404, 405, 405,
	367, 367, 368, 368, 369, 369, 369, 369, 431, 431,
	214, 214, 214, 347, 347, 347, 348, 348, 421, 421,
	421, 421, 421, 421, 422, 422, 420, 420, 420, 420,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 455,
	456, 456, 349, 349, 457, 407, 407, 566, 566, 566,
	567, 567, 448, 448, 458, 458, 458, 458, 458, 458,
	446, 446, 447, 447, 466, 467, 467, 383, 383, 383,
	383, 381, 381, 384, 384, 384, 384, 384, 382, 382,
	459, 459, 459, 459, 372, 372, 460, 460, 460, 460,
	461, 462, 462, 463, 463, 416, 417, 417, 473, 473,
	473, 473, 475, 346, 346, 346, 346, 346, 524, 523,
	523, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 490, 490, 490, 490, 490, 490, 490, 476,
	476, 476, 476, 476, 480, 480, 480, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 481, 481,
	486, 486, 487, 487, 487, 482, 483, 488, 488, 488,
	488, 617, 617, 492, 492, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 478, 478, 478, 485, 485, 485,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 391, 391, 393, 393, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 425, 425, 425, 425, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 542, 542, 542, 542, 542, 542, 542,
	542, 427, 427, 545, 545, 546, 546, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 553, 553, 554, 554,
	556, 556, 557, 557, 558, 559, 559, 559, 560, 561,
	561, 555, 555, 562, 562, 562, 562, 563, 563, 564,
	564, 564, 564, 564, 565, 565, 565, 565, 565, 437,
	437, 438, 438, 444, 444, 444, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 261, 261, 261, 261, 261, 359, 359, 357,
	357, 357, 360, 360, 358, 358, 356, 356, 355, 355,
	434, 434, 432, 432, 436, 436, 385, 385, 491, 491,
	491, 491, 491, 491, 491, 491, 386, 386, 386, 394,
	387, 387, 388, 388, 388, 388, 388, 428, 429, 389,
	389, 389, 430, 430, 439, 443, 443, 442, 441, 441,
	440, 440, 418, 418, 419, 419, 366, 366, 618, 618,
	362, 362, 464, 464, 464, 464, 305, 305, 351, 351,
	304, 304, 296, 296, 297, 297, 297, 297, 344, 344,
	445, 445, 493, 493, 494, 494, 495, 495, 496, 496,
	497, 498, 499, 433, 433, 281, 280, 268, 269, 279,
	278, 277, 267, 270, 274, 275, 276, 272, 273, 287,
	286, 285, 240, 243, 292, 293, 293, 295, 295, 294,
	294, 283, 284, 469, 266, 298, 298, 299, 299, 299,
	300, 300, 300, 300, 262, 262, 263, 263, 288, 288,
	289, 290, 290, 282, 282, 282, 253, 253, 253, 254,
	254, 255, 255, 507, 507, 504, 504, 504, 505, 505,
	505, 506, 506, 506, 506, 503, 503, 503, 503, 503,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	516, 516, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	518, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 521, 521,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 9, 6, 8, 4, 4,
	5, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 1, 0, 6, 6,
	6, 6, 6, 6, 4, 4, 4, 4, 3, 4,
	4, 4, 7, 7, 9, 8, 9, 5, 3, 5,
	7, 4, 12, 4, 12, 1, 3, 5, 5, 2,
	5, 3, 6, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 4, 2, 3, 10, 3, 6, 4,
	3, 1, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 1, 12, 3,
	1, 0, 1, 1, 2, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 6,
	4, 9, 7, 12, 12, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	6, 6, 6, 6, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	6, 3, 8, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 7, 2, 5, 0,
	1, 3, 3, 1, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 9, 5, 2, 6, 4, 7,
	7, 7, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 1, 1,
	1, 1, 2, 2, 5, 7, 3, 3, 3, 4,
	4, 6, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	4, 3, 4, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 4, 3, 3, 5, 3,
	4, 3, 5, 3, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 3, 1, 1, 1, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 13, 16,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 2, 8, 4, 2, 5, 5, 5,
	2, 2, 0, 1, 3, 11, 12, 9, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 12, 15, 3, 1, 0, 4, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 5, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 587, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-182, -187, -188, -189, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -183, -184, -185, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-136, -137, 452, -53, -65, -130, -129, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -600, 102, -549, -89,
	-92, -122, -604, 161, 219, -110, -111, 364, -117, -118,
	417, -120, -121, 419, 162, -60, -59, 156, -210, -212,
	-134, -135, -186, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 457, -169,
	-178, 517, 49, 471, 82, 146, 427, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -548, -90, -91, -94, -96,
	-97, -93, -95, 416, -213, -211, 584, 532, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 553, 562, -216, -214, -215, -223,
	444, 540, 491, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, -303, 2, -283, -288, -289,
	-290, -282, -253, -518, -521, 4, -515, -519, 168, 229,
	328, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 499, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 225, 230, 231, 232, 236, 233, 242, 243, 247,
	248, 249, 251, 255, 256, 257, 258, 259, 260, 262,
	264, 263, 266, 269, 270, 273, 277, 278, 282, 283,
	279, 284, 285, 287, 288, 291, 289, 292, 293, 290,
	294, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 295, 310, 308, 312, 313, 314, 326,
	323, 318, 319, 315, 320, 316, 317, 321, 322, 325,
	330, 331, 334, 216, 336, 337, 340, 358, 344, 345,
	346, 349, 350, 353, 356, 357, 359, 360, 361, 362,
	363, 364, 365, 366, 368, 369, 371, 372, 373, 375,
	376, 377, 379, 381, 382, 384, 385, 387, 388, 389,
	390, 391, 392, 393, 395, 397, 396, 398, 400, 402,
	403, 404, 409, 415, 411, 412, 413, 414, 416, 417,
	418, 419, 421, 422, 423, 425, 426, 427, 428, 430,
	432, 433, 437, 438, 454, 455, 473, 434, 435, 436,
	439, 440, 441, 442, 443, 447, 445, 446, 448, 449,
	450, 452, 453, 456, 457, 459, 460, 461, 462, 463,
	464, 467, 469, 470, 471, 490, 472, 474, 478, 479,
	480, 481, 475, 476, 489, 483, 484, 486, 487, 492,
	493, 494, 495, 496, 497, 498, 500, 502, 510, 511,
	512, 514, 517, 518, 519, 520, 508, 522, 523, 526,
	527, 528, 531, 529, 530, 532, 534, 537, 538, 539,
	545, 544, 546, 549, 554, 555, 557, 558, 559, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 124,
	125, 153, 164, 165, 177, 190, 191, 203, 205, 213,
	214, 215, 237, 238, 240, 245, 267, 333, 335, 351,
	355, 370, 374, 378, 380, 394, 429, 465, 477, 482,
	503, 504, 505, 506, 513, 515, 540, 541, 542, 547,
	556, -303, 2, -283, 342, -276, 2, -253, -253, 381,
	28, 2, 28, 369, 446, 494, 496, 2, -575, -345,
	2, 28, -256, -253, 102, 201, 444, -276, 2, -575,
	-345, 25, 2, -253, 2, 356, 22, 27, 66, 77,
	98, 140, 163, 185, 188, -603, 358, 388, 432, 448,
	489, 500, 514, 2, 544, 288, 445, 491, 229, 120,
	519, 439, -587, 437, 438, 356, 386, 425, 204, 533,
	-257, 2, 434, -253, 288, 2, 587, 94, 278, 74,
	429, 449, -139, 511, -138, 503, 439, -140, -502, 2,
	310, -253, 587, 587, 587, 28, -266, -253, 491, 229,
	439, 120, 487, 587, 2, 491, 361, 544, 445, 120,
	391, 229, 519, 188, 140, 27, 126, 439, -587, 288,
	-573, 2, -568, 4, -519, -515, -297, -296, 491, 497,
	120, -290, -282, 577, -289, 587, 587, 587, 2, 248,
	249, 390, 389, 449, 450, 587, 587, 587, 587, 437,
	2, 163, 22, 27, 66, 93, 98, 126, 185, 188,
	347, -601, 358, 388, 448, 489, 493, 500, 514, -586,
	472, 68, 414, 439, -585, -587, 288, 519, 140, -395,
	120, 278, 199, 527, 496, 494, 525, 132, 236, 530,
	529, 587, 587, -101, 2, 584, 32, 31, 142, 452,
	-205, 491, 241, 2, -253, 587, 587, 2, 248, 249,
	437, 438, 587, 587, 186, -568, 2, 587, 587, 2,
	248, 249, 437, 438, 241, 2, 68, 441, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 2, -180, 449, 472, 210, 47, 46, 74,
	28, 387, 79, 362, 121, 148, 520, 202, 229, 230,
	256, 93, 94, -397, 44, 249, 248, 438, -592, 437,
	-449, 492, 440, 446, 486, 260, 434, 511, 102, 534,
	426, 559, 391, 392, 484, 404, 279, 157, 187, 4,
	120, 310, 451, 503, 278, 433, 365, 84, -611, 2,
	491, -613, 2, 511, 511, 2, -613, 2, -613, 2,
	-613, 2, -614, 511, 556, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, -211, -213, -212, 587, 587, 587, 587, 587,
	587, 587, -180, 449, 2, 74, 28, -338, -340, 524,
	239, 150, 348, -210, -212, 2, -548, -500, 2, -423,
	-522, -425, 575, 576, 568, 488, 67, 327, 560, -437,
	126, 525, 342, -521, -426, -439, 153, 429, -360, 8,
	9, 5, 6, 7, -262, -427, -433, 516, 167, 332,
	-300, 588, 10, 584, -545, -212, -438, 37, 205, 65,
	-504, -299, -263, -476, 240, -298, -282, -542, -543, 4,
	-515, -516, -505, -479, -487, -483, -484, -490, -253, -518,
	77, 111, 112, 110, 115, 114, 281, 280, 116, 113,
	451, 533, 66, 36, 213, 214, 245, 333, 215, 75,
	-544, 141, -517, 237, 238, 465, 51, 394, 177, 125,
	124, 335, 56, 54, 541, -488, 122, 503, 504, 505,
	506, 190, 191, 58, 164, 165, 355, 378, 482, 513,
	515, 203, 267, 43, 106, 187, 235, 217, 244, 246,
	250, 268, 271, 311, 324, 329, 352, 354, 424, 458,
	-617, 542, 477, 69, 70, -550, 396, -551, -276, -550,
	587, 587, 589, 587, -331, -333, -334, 2, 28, 138,
	584, 2, -454, 2, -455, -459, -212, 261, -458, 584,
	-456, 582, -283, 343, -546, 430, -542, -543, -262, -282,
	-299, 4, -515, -517, 586, -335, 584, 120, 491, 78,
	229, 163, -390, 584, -253, 28, 342, 507, 589, -332,
	385, -435, 584, 342, 186, 345, 60, 292, 2, 2,
	2, 2, 2, 213, -253, 491, 119, 2, 259, 2,
	2, 2, 2, 2, 2, 2, -353, 213, 2, -283,
	544, -353, 213, 2, -353, 213, 2, -396, 2, 87,
	-267, 213, 2, -253, -291, 213, 2, -286, -288, -295,
	213, 2, -293, -253, -513, 213, 2, -512, -507, 10,
	-506, 5, 4, -515, -519, -516, -518, 77, -423, 2,
	-128, 2, 60, -253, 544, 2, 2, 454, 2, 584,
	-139, 71, 511, 43, 449, -410, 2, -411, -249, -250,
	-251, -466, -252, 247, 384, 393, 563, 130, 327, 559,
	-500, -595, 186, 567, 507, -500, -361, 586, 2, 2,
	2, 2, 2, 2, -459, 213, -283, 2, -280, -503,
	4, -515, -519, -516, -520, 28, 31, 32, 33, 35,
	37, 38, 39, 40, 57, 65, 66, 72, 76, 78,
	87, 93, 102, 110, 111, 113, 112, 114, 115, 116,
	126, 130, 134, 138, 139, 143, 146, 150, 167, 169,
	182, 185, 186, 201, 204, 207, 220, 234, 239, 241,
	261, 265, 272, 280, 281, 327, 332, 338, 342, 343,
	347, 348, 367, 383, 399, 420, 444, 451, 468, 485,
	491, 501, 507, 509, 516, 524, 525, 533, 535, 543,
	548, 550, 551, 552, 553, -521, 2, -459, 213, 2,
	-285, 213, -459, -288, 2, -267, 2, -279, -503, 2,
	-304, 213, -283, -284, -288, -286, 2, 2, 2, 2,
	2, -293, 2, -512, 213, 2, 544, 241, 507, 589,
	-351, -296, -297, -499, 8, -344, -253, 586, -423, 2,
	-128, -112, 2, 182, -423, 213, 2, -128, 213, 2,
	-423, 213, 2, -128, 213, 2, -589, 2, -512, 213,
	-253, 2, 292, 2, 2, 514, 2, 98, 491, 119,
	2, 413, -602, 432, 518, 2, 2, 2, 2, 2,
	2, 2, 491, -272, 2, -253, 182, 475, -293, 213,
	-294, 2, 445, -612, 396, -512, 213, 2, 544, -286,
	213, 2, -286, 229, 243, -267, 213, 2, 496, 494,
	496, 494, 186, 2, 241, 2, 241, 2, -460, 2,
	-461, -455, -462, 582, 343, -470, 2, -469, -506, 540,
	-101, 584, -101, 584, 449, 584, -512, -283, -283, -423,
	2, -128, -112, 2, -423, 2, -128, 2, -125, -512,
	-124, 584, 186, -423, 2, -128, -112, 2, -423, 2,
	-128, 2, -205, 182, 2, 120, 491, -180, 2, 182,
	535, 2, 8, 2, 220, -512, 440, 392, 174, 2,
	454, 2, 455, 74, -397, 559, 74, 186, 2, 186,
	2, -380, 2, 553, 186, 2, 2, -572, 2, 342,
	186, 2, 186, 2, 186, 2, 186, 2, 186, 2,
	-179, 450, 512, 490, 389, 249, 2, -128, 550, -112,
	-423, 550, 2, -593, 182, 438, -423, 2, 510, 258,
	158, 186, -380, 2, 186, 2, 186, 2, 5, 2,
	390, 473, 2, 247, 384, 473, 2, -283, -605, 28,
	2, 491, 544, 445, 2, 2, 88, 89, 186, 2,
	186, 2, 200, 186, 2, 186, 491, 559, 2, -372,
	-459, -409, -410, -409, 507, -338, -340, -180, 454, 2,
	-217, -370, -219, 182, -400, -401, -220, 272, 169, 338,
	-221, -379, 28, 138, -379, -379, 60, 585, 585, 11,
	12, 76, 41, 575, 576, 577, 578, 180, 579, 580,
	573, 574, 572, 565, 566, 570, 253, 254, 95, 569,
	567, 86, 286, 431, 170, 171, 172, 173, 410, 227,
	34, 228, 14, 15, 16, 33, 347, 271, 560, 217,
	458, 568, 17, 18, 19, 244, 246, 329, 50, 220,
	-261, -306, -423, -423, -423, -423, -423, -423, -423, 354,
	584, -366, -418, 582, -212, 584, 584, 584, -499, -212,
	-423, -437, 585, -358, 584, -212, -437, -432, 584, 429,
	582, 584, -440, -423, 5, 5, 5, 584, 586, -553,
	554, 182, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 380, -481, 584,
	-480, 584, -480, -480, 545, -478, 584, 562, 555, 584,
	-478, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 545, 589, -550, -335, 584, -362,
	-464, -423, 577, -362, -362, 342, -355, -423, 106, -383,
	250, 311, 187, 268, 424, 235, -420, 588, -420, -448,
	562, -212, -456, -282, -212, -458, 584, -454, -448, -102,
	-499, -86, -99, -107, -128, -141, -184, -185, 577, -283,
	584, 186, 584, 586, -503, 186, -344, -267, -283, -298,
	-299, -304, 2, 137, -355, -568, 519, 439, 445, -344,
	-256, 38, -434, -473, -474, -524, 588, -523, -476, -486,
	-482, -485, 370, 374, -505, 54, 541, -488, 240, 4,
	-515, -517, 237, 238, 465, 51, 394, 177, 125, 124,
	335, 56, 503, 504, 505, 506, 190, 191, 58, 542,
	477, 69, 70, -568, 519, 439, 445, -344, 182, -510,
	2, -509, -508, 116, 451, -506, 5, 2, 153, 2,
	2, 2, -253, -232, 589, 64, 418, 153, -353, 213,
	-232, 153, -232, 153, -305, 213, -304, -232, 153, -232,
	589, 153, -232, 589, 153, 586, 589, 153, -510, 2,
	-396, -502, -355, 38, -410, 2, 126, -508, -615, 589,
	270, -308, 285, 326, 209, 343, 557, 336, 130, -511,
	5, 4, -433, -445, 126, 278, 240, -493, -495, 8,
	-494, 9, -496, 575, 576, -501, -500, 109, 586, -503,
	-229, 411, 452, 357, -228, 24, 29, 142, 231, 314,
	538, 159, -321, 232, -318, 361, 153, 469, 528, -582,
	-583, 436, 498, 499, 90, 336, 452, 357, 411, 153,
	-376, -378, 38, 118, 314, 356, 61, 224, 290, 291,
	471, 547, 153, 452, 357, 411, 357, 24, 142, -244,
	-241, 452, -583, 99, 411, 483, 383, -583, -231, 469,
	528, -582, -583, 436, 411, -230, -323, -318, 361, 153,
	588, 24, 142, 411, 452, 357, -598, -599, 29, 411,
	357, -576, -547, 553, 153, -459, 213, -590, -124, 262,
	5, 10, -512, -124, -351, 589, 589, -503, 577, 438,
	437, 153, 153, 153, 153, 182, 327, 2, 2, 2,
	2, 2, 188, -585, -603, 2, 2, -283, 213, -337,
	342, -571, -352, 491, -283, 182, 327, 43, -285, 213,
	2, -288, 544, -576, 327, -287, 213, -283, 38, 584,
	327, 2, -396, 2, 229, -547, 327, -460, -301, -283,
	-455, -301, 452, -276, 38, -420, -283, 585, 589, -470,
	-470, -512, -193, 553, 186, 102, 584, 584, -205, -467,
	589, -466, 220, -513, -125, -512, 414, -512, -571, -267,
	2, -283, 2, 491, 251, -512, -193, 220, -512, -512,
	-512, -502, 28, 455, 2, -179, 450, 512, 89, 455,
	2, -283, 491, 120, 229, 80, -253, -574, 182, -569,
	425, 439, 519, -568, -283, 120, -283, 120, -283, 120,
	-283, -283, 2, 2, 2, 2, 2, 85, 85, 2,
	46, -593, 182, 2, 510, 2, 510, 2, -253, -253,
	-253, 472, 270, -283, 492, -606, 2, 186, 182, 2,
	491, 229, 491, 229, 120, 186, 74, 120, 28, 491,
	435, -232, 589, -257, -217, -370, -502, -371, -370, -218,
	-217, -220, 182, 393, 529, 314, 456, 255, -401, -400,
	28, -423, -405, 176, 313, -423, -403, -425, 575, 576,
	-494, -496, -354, 336, -211, -211, -211, -341, -450, -423,
	383, 229, -475, -473, -473, -281, -503, 503, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, 271, 217, 458, 50, 220, -423, 507,
	-423, -423, -423, -423, 308, 327, 332, 516, 167, 526,
	138, 336, -618, 485, 40, -430, -212, -359, 584, -444,
	35, 468, 28, -437, 584, 2, -418, -423, -419, -356,
	-355, -355, 585, 543, 28, 138, 577, 2, 585, 589,
	38, 585, -423, -356, -436, -432, -355, -443, -442, 550,
	-391, -392, 558, 295, 123, 211, 293, -393, 443, -497,
	8, -503, 577, -554, 175, 204, 584, 585, 2, 585,
	2, 585, -423, 2, 585, -423, 2, 585, -423, 2,
	585, -423, 2, 585, 2, -423, -423, -423, -423, -423,
	-423, -423, -355, 8, -497, -497, 503, 503, -497, -497,
	-497, -489, 370, 371, 372, 373, 273, 274, 275, 276,
	374, 375, 376, 377, 300, 301, 302, 303, 296, 297,
	298, 299, 304, 305, 306, 307, 195, 196, 197, 198,
	191, 192, 193, 194, -489, -385, 2, -491, -355, 4,
	558, 295, 123, 211, 293, 443, 5, -385, 2, -386,
	2, -423, -355, -387, -424, -425, 575, 576, 568, -437,
	-388, 2, -423, -356, -423, 57, 265, 509, -389, -423,
	186, -355, -355, 2, -355, 2, -551, 38, -355, -347,
	589, 186, 38, 4, -347, -347, 584, 585, 589, -384,
	208, 289, 284, 243, -384, -454, -383, 250, -381, 352,
	-381, -381, -448, -268, 582, 590, -503, -448, -447, -446,
	38, -276, 349, -448, -448, 586, 585, -447, 583, -566,
	584, 587, 587, 587, 587, 587, -283, 584, -355, -503,
	586, 474, 2, 585, 244, 244, 244, 244, 430, 585,
	507, -570, -291, -295, 2, 553, -101, 344, 585, 589,
	-346, 37, 582, 586, -497, 2, 2, -492, 545, 584,
	584, -392, 584, 186, -570, -295, 2, -345, 589, 507,
	-253, 2, -283, -353, -232, 153, -353, -353, -232, 589,
	153, -267, -286, -291, -293, -295, -253, -512, -513, -232,
	-287, -595, 585, 511, -411, -307, 393, 467, 412, 447,
	487, 8, 9, 8, 9, 589, -503, 589, -596, 93,
	507, 78, 439, -246, 279, 507, -414, 213, 78, -525,
	-270, 93, -526, -253, 72, 525, 383, 185, 151, -596,
	93, 383, -596, 93, 2, 231, 93, 452, 472, 28,
	60, -459, 41, 41, 28, -594, 325, 266, 549, 186,
	559, 491, 229, 439, 507, 507, -459, -378, -473, 118,
	290, 291, 60, -498, -493, 575, 576, -498, 60, -498,
	-498, -498, 553, -285, -459, 439, 507, 507, 507, 402,
	402, -241, 507, 507, -616, 567, 402, 589, 41, 41,
	28, -594, 325, 266, 186, 507, -304, -268, 539, 42,
	539, 42, 539, 507, 42, 439, 507, 589, 42, 507,
	507, -577, -258, 105, 320, 283, 321, 97, 317, 96,
	316, 103, 318, 104, 319, 546, 330, 63, 315, 294,
	322, -259, -260, 363, 537, -512, 452, 357, 411, 153,
	220, -467, 220, -467, -296, -253, 586, -128, -423, -423,
	-128, -423, -128, 46, 153, 2, -612, 259, 584, -311,
	327, 186, -344, -468, 241, 589, -352, -568, 153, -509,
	-377, -376, 327, -287, 213, 2, 153, -335, 327, 147,
	584, 391, 2, 153, -269, 213, -254, -253, -396, -235,
	495, 153, -374, 535, -406, -128, 584, 126, 38, -406,
	-363, -364, -465, -365, -270, 584, -276, -420, -101, -469,
	585, 585, 585, -192, 346, -191, -253, 5, -205, 535,
	-310, -415, -414, -529, -530, -525, 271, 229, 525, 243,
	168, -336, -271, -270, 119, -199, 553, -124, -125, 585,
	-467, 220, 475, -193, -193, -467, -467, -283, 182, -512,
	-193, -193, -193, 2, 2, 2, 2, -380, -283, -267,
	-304, -283, 586, -344, -344, -295, -291, -380, -267, -380,
	-267, -380, -267, -128, -423, 2, 449, 182, 182, 586,
	-380, 391, 120, 491, 361, 229, -283, -304, -283, -304,
	-267, 120, -267, 121, -283, -459, -371, -218, 343, 255,
	456, -403, -404, -425, 429, 430, -404, 429, 430, 8,
	9, 8, 9, -222, 460, 331, -353, 589, -226, 39,
	134, 255, -283, 559, 149, -423, -423, 507, -618, 485,
	-430, 149, -423, 308, 332, 516, 167, 526, 138, 336,
	186, 584, -424, -424, 585, -357, -423, -423, 583, 592,
	585, -340, 589, -338, -423, -355, -355, 585, 586, -355,
	-344, 583, 583, 589, 585, -441, -442, 143, -423, 507,
	507, 507, 507, 584, 585, 586, -559, 353, 584, 584,
	-423, 585, 585, 585, 585, 38, 589, 589, 589, 585,
	589, 589, 589, 585, 585, 585, 589, 585, 559, 559,
	585, 585, 585, 585, 589, 585, 589, 585, 186, 585,
	585, -394, 367, 585, 11, 12, 575, 576, 577, 578,
	180, 579, 580, 573, 574, 572, 565, 566, 567, 86,
	286, 431, 14, 15, 16, 244, 220, -424, -424, -424,
	585, -428, -429, 186, 182, 38, -389, -389, -389, 585,
	186, -355, 585, 585, 584, -552, 288, 327, 585, -417,
	-416, 551, -464, -348, 2, -454, -278, -503, -417, -417,
	-355, -423, 250, 250, -382, 535, 342, -384, -454, -447,
	-499, -422, -421, 184, 39, 134, 323, 216, -447, -276,
	-335, -447, -447, -503, -448, -448, -446, 585, -567, -499,
	585, -349, -457, -546, -340, 586, -503, -202, -547, -181,
	5, 332, -181, -181, -181, -344, 507, 507, 25, 368,
	-473, 582, 583, 8, -503, 584, -497, -497, -497, -344,
	186, 186, 186, -509, -509, 2, -232, -353, -232, -232,
	-304, -305, -232, -232, -232, -375, 553, -500, -410, 523,
	83, 393, 503, -500, -228, 411, -270, -270, -283, -292,
	-253, 199, 403, -509, 327, -414, 213, -234, 327, -473,
	-277, -253, 584, -398, 555, 255, 255, 535, -270, -277,
	255, 213, -270, 213, -277, 2, -277, -578, 393, 337,
	-423, 60, -319, 277, 391, 328, -229, 411, 452, 357,
	-128, -128, -128, -128, -128, 584, -595, 535, 137, -283,
	-304, -283, -292, -509, -287, 452, 357, 411, 324, -298,
	-498, -498, -376, 452, 357, 411, -292, -509, -285, -509,
	-240, 213, -253, -240, 213, 439, -267, 402, 559, 45,
	-616, -230, -128, -128, -128, -128, -128, 584, -268, -231,
	411, 5, 213, -270, 5, -270, 213, 5, -253, -270,
	-292, -509, -599, 24, 142, -270, -292, -509, -258, -512,
	332, 531, -576, 439, 507, 507, -459, -124, -196, 553,
	-124, -190, 225, 577, -573, -253, 544, -253, -309, -312,
	-310, -270, -208, -209, 555, 553, 153, -302, -283, 582,
	-193, -512, -283, -468, -293, -294, 153, -335, 327, -512,
	38, 153, 584, 2, 2, -286, 342, 327, -269, 213,
	-236, 144, -616, -267, -417, -348, -373, -408, 420, 342,
	-336, 540, -276, -373, -350, 589, 186, 567, 586, -336,
	-463, 577, -101, -101, -193, 589, 584, 567, 567, 584,
	-512, -512, 585, 589, -234, -283, -269, 229, 229, -275,
	-254, 585, 589, 586, 584, -201, 346, -200, 145, 257,
	242, 461, 462, 463, 464, 136, -467, -199, -125, 186,
	186, -61, 553, 491, -193, 588, -253, -380, -380, -380,
	449, 449, -253, -279, -267, -283, -280, -304, 182, 182,
	-267, 529, -404, 343, 282, -450, -227, 561, -283, 588,
	-423, -423, 149, 149, -423, -424, -424, -423, 149, 186,
	584, -423, -434, 33, 33, 585, 589, -419, -423, 585,
	543, -340, -340, 585, 577, -503, 588, 585, -432, 146,
	-423, 501, 295, 211, 293, -393, 293, -393, -393, -497,
	5, -503, 577, -560, -273, 584, -253, 551, -339, 348,
	585, -475, -473, -423, -423, -423, -423, -423, -497, -478,
	-478, -493, -493, -423, -428, -423, -475, -473, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, 138, 327, 336,
	-424, -429, -428, -423, -423, -473, 585, 585, 585, -355,
	-101, 584, 288, -367, 204, -423, -467, 589, -367, -367,
	585, -454, -454, 584, -423, 250, 583, 589, 591, 567,
	-335, 586, -446, -447, 583, 585, 589, 585, 589, -407,
	38, 585, -503, -417, -204, -203, 135, 53, 107, 133,
	332, -344, -344, 345, 5, 8, 582, 583, 586, -497,
	585, 585, 585, -344, -344, -344, -232, -232, 119, 314,
	-423, 507, 507, 60, 220, 153, 327, 537, -531, -526,
	151, -423, 584, 229, 584, 584, 2, -224, -225, 142,
	452, 24, -597, 2, 535, 153, -232, 153, -232, 557,
	-319, 584, 584, 507, 439, -246, 507, 553, -355, -423,
	-194, 126, -502, -583, 588, -583, 588, 439, 507, 507,
	439, 507, 507, 327, 153, 553, 166, 166, 559, -240,
	553, -355, 507, -477, 48, 26, 327, -286, -232, 153,
	507, 507, 519, 452, -512, 332, -292, -509, -287, 452,
	357, 411, -467, -198, 346, -197, 145, 422, 136, 257,
	222, -467, -196, 186, 241, 553, -287, 2, 585, 585,
	589, -532, 38, 340, 340, 584, -283, -82, 553, -466,
	-499, -579, 553, 43, -285, 38, 153, -576, -128, -287,
	-471, -472, 5, 38, -283, 153, 342, 327, -237, 264,
	-616, -507, -547, -340, -373, -362, 328, 91, 585, -417,
	-364, -348, -423, 2, 585, -191, -192, -512, -512, -512,
	-193, -205, -205, -415, -313, 584, -269, -254, 584, -205,
	-271, 2, -513, 589, 584, 567, 567, 567, -199, -467,
	-124, -128, 346, -283, 577, -380, -325, -324, 361, 336,
	-325, 429, 429, 343, 176, 260, -226, -268, -423, -423,
	149, 33, 33, -423, -423, -434, 585, -423, -423, -355,
	583, 5, -423, 585, 585, 8, -423, 585, 586, -561,
	-253, -423, 585, 60, 585, 585, 589, 589, 585, 585,
	585, 585, 585, 585, 585, -429, 186, 138, 336, 584,
	585, 585, -101, -431, 207, 60, -454, -431, -431, -382,
	-344, -454, -421, -268, 582, -503, -499, -457, 584, 586,
	-203, 567, -512, -512, 553, 583, 2, 582, -503, 585,
	119, -270, -270, 491, 429, -240, 383, -414, 153, -533,
	93, -535, 76, 168, 102, 327, 332, 525, 383, 72,
	126, 399, -608, 38, 564, 585, -342, -451, -546, 584,
	-253, -342, -344, 327, 480, 126, 327, 126, 548, 119,
	2, 519, 79, -270, -277, -344, -344, -283, -292, -509,
	160, 585, 589, 567, 2, 577, 577, -292, -509, -287,
	-292, -509, -285, 153, -240, 359, 166, 160, 585, -268,
	5, 5, 153, -265, 76, -270, 5, -270, -286, 119,
	439, 507, 507, -196, 589, 584, 567, 567, -196, -513,
	-124, 2, -335, -326, 231, -270, -530, -527, -528, 383,
	-534, -536, 168, 383, -128, 2, -207, -206, -253, 5,
	584, -311, 346, 583, -581, 346, -580, 117, 136, -509,
	-377, -128, -287, -335, 585, 589, 147, -399, 535, -268,
	-283, 153, -238, 263, -616, -507, -235, -402, -400, 139,
	584, 342, -128, -340, 567, 585, 585, 119, 119, 223,
	152, -342, 584, 584, -344, 119, 585, -200, -201, -512,
	-124, -512, -199, -467, -62, -63, 229, 93, 366, -280,
	491, 229, 584, 584, -226, -423, -423, -423, 585, -340,
	-503, 577, -555, 361, 585, -450, -423, -423, -424, 186,
	584, -434, 585, -556, 552, -423, -368, -369, -423, 428,
	108, 205, -556, -556, 585, -499, 2, -512, 2, 582,
	2, 220, 38, 402, -414, -277, -281, -274, -253, 168,
	213, 332, 548, -398, 255, 584, -424, -283, 584, 2,
	30, -609, 130, 234, 585, 589, -452, -264, -253, -423,
	-452, 585, 585, 332, 332, 548, -423, -473, 584, -232,
	-232, 585, 585, -423, 507, -502, 100, -500, 2, -583,
	-240, -267, -423, 507, 5, -232, -281, -232, -232, -265,
	519, -292, -509, -287, -197, -198, -512, -124, -196, 38,
	-316, 233, 2, -532, 255, -274, 255, -607, 553, 585,
	589, 567, 567, -309, -208, -83, -84, 508, -466, 589,
	584, 567, -335, 38, 5, 584, 584, -253, 342, 584,
	-268, -248, 92, -616, -507, -236, -373, 328, -344, 93,
	-402, -430, -193, 584, 584, -314, 81, 94, 127, 212,
	189, 230, 472, 478, 28, -314, 585, -342, -342, 585,
	584, -193, 585, 589, 28, 584, 28, 584, -283, -304,
	-355, -355, 585, -340, 60, 589, 585, 585, -424, -434,
	585, -557, -558, -273, 589, 584, 584, 453, 583, 2,
	-240, 383, -253, -535, -274, 327, 535, -423, -255, 584,
	-423, 38, 234, 131, 218, -413, -610, 101, 481, 221,
	-451, -226, 585, -412, 535, 399, -265, -342, 584, 584,
	584, 567, 186, 584, -477, -232, -286, 585, -588, 397,
	-128, -320, -321, 220, 584, -315, 342, 119, 314, -206,
	-500, -500, 585, 38, -84, 9, -580, -581, -423, 38,
	-128, -471, -342, -283, -342, 342, -242, -241, 272, -507,
	-237, 585, -277, -373, -513, -513, -412, 585, 585, -513,
	-63, -344, -344, 585, 585, -562, 391, 430, 206, -355,
	-341, 585, 589, 38, -369, 2, 2, 2, 402, 153,
	208, 585, -537, 287, -253, 585, 131, 218, -316, 584,
	-227, -452, -316, 208, -283, -584, 535, 585, -328, -327,
	-324, -330, -329, -324, -355, -500, 100, 359, -355, -265,
	-591, 187, -590, 5, 10, -208, 359, -343, -453, -270,
	82, 119, -326, -128, 585, -128, 585, 585, -399, 585,
	-283, -239, -514, 402, 404, -616, -238, -417, 585, 585,
	-413, -412, -322, -318, 585, 585, 585, 585, -563, -564,
	50, 522, 109, -423, -563, -563, -558, -560, 168, 553,
	-538, -541, -540, 342, 459, 187, 360, 585, 480, 547,
	-322, -344, 553, -335, -423, -412, 585, 589, 540, 585,
	589, 540, 585, 186, 585, -232, -195, 553, 46, -315,
	-283, 585, 589, 382, 132, 142, -316, -607, -412, 584,
	-413, 584, -245, -244, -616, -493, -248, 139, -193, -193,
	-316, -413, -209, 553, -193, -565, 151, -564, 379, 181,
	429, 379, 181, -565, -565, -274, 55, -540, 342, -541,
	342, 529, 132, -609, 585, 55, -537, -316, -327, 220,
	-329, 186, 359, 437, -590, 30, -247, -246, 584, -453,
	430, 430, 2, -320, -315, -413, -342, -316, -342, -243,
	-344, -242, 328, 529, -322, -316, -417, 109, 204, 502,
	314, 33, 567, -539, 314, 418, 64, 452, -539, -417,
	567, -538, 584, 584, 346, -344, 2, -208, -316, 585,
	-322, 585, -239, 452, -209, -322, 429, 350, -564, -423,
	23, 332, 126, -423, -609, -355, -355, -192, 584, 585,
	-315, -322, -412, -209, -413, -245, -363, -417, -209, 585,
	585, -192, -233, 64, 418, -247, -209, -413, -417, -316,
	-417, -417, -317, -318, 507, 585, -417, -316, -322, 584,
	-322, -209, -355, -209, -417, 585, -417, -317,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 539, 540, 542, 543, 544, 546,
	547, 549, 551, 553, 554, 555, 557, 558, 560, 561,
	562, 563, 564, 566, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	633, 635, 0, 1328, 1330, 1332, 1334, 0, 778, 0,
	36, 37, 39, 0, -2, 326, 328, 330, 0, 357,
	359, 360, 362, 364, 365, 366, 368, -2, 0, 474,
	475, 477, 479, -2, 0, 969, 971, 0, 622, 624,
	0, 974, 976, 0, 0, 644, 645, 0, 1435, -2,
	638, 640, 642, 707, 709, 711, 713, 715, 717, 719,
	721, 723, 724, 726, 728, 730, 732, 734, 735, 737,
	739, 741, 742, 744, 745, 747, 749, 751, 753, 755,
	757, 759, 761, 763, 765, 767, 769, 771, -2, 774,
	775, -2, -2, 0, -2, -2, -2, 1346, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 418, 420, 422,
	424, 426, 429, 431, 433, 1493, 481, 483, 485, 487,
	489, 491, 493, 0, -2, 1507, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 103,
	104, 105, 106, 107, 108, 109, 110, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 101, 71, 0, 0, 1466, 1468, 1470, 1472,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 541, 545, 548, 550, 552,
	556, 559, 565, 567, 569, 526, 527, 530, 2171, 2188,
	2189, 2190, 2193, 2194, 2195, 2196, 2197, 2198, 2640, 2722,
	2723, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258,
	2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268,
	2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278,
	2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288,
	2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308,
	2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318,
	2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328,
	2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338,
	2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348,
	2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 528, 529, 1146, 0, 593, 591, 2156, 594, 2442,
	596, 598, 468, 469, 470, 471, 472, 473, 0, 615,
	606, 1505, 616, 618, 619, 620, 621, 588, 586, 0,
	615, 2224, 613, 1326, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 397, 1195, 1196, 1197,
	1311, 1312, 2486, 1353, 0, 227, 634, -2, -2, -2,
	2605, -2, 666, -2, 673, 2609, 2489, 678, 0, 680,
	-2, 683, 1329, 1331, 1333, 776, 777, 2174, 0, 0,
	0, 0, 0, 38, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 237, -2, -2, -2, -2, 0, 0, 2533,
	2276, 2124, 2190, 2127, 2122, 327, 329, 331, 332, 0,
	0, 0, 0, 0, 0, 358, 361, 363, 367, -2,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1030, 1022, 1023, 1253, 0, 0, 0,
	-2, 476, 478, 531, 532, 0, 1494, 1494, -2, 0,
	0, 0, 0, 297, 284, 970, 972, 973, 0, 0,
	0, 0, 623, 625, 0, 0, 266, 975, 977, 978,
	0, 0, 0, 0, 0, 299, 0, 0, 639, 641,
	643, 708, 710, 712, 714, 716, 718, 720, 722, 725,
	727, 729, 731, 733, 736, 738, 740, 743, 746, 748,
	750, 752, 754, 756, 758, 760, 762, 764, 766, 768,
	770, 772, 773, 784, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 872, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 950, 0, 0, 787,
	789, 790, 791, 0, 850, 870, 871, 880, 0, 1186,
	1495, 1355, 1336, 1350, 1355, 1338, 1339, 1340, 1341, 1342,
	1347, 1349, 1343, 1344, 1345, 42, 44, 46, 48, 50,
	52, 54, 56, 58, 419, 421, 423, 425, 427, 430,
	432, 434, -2, 1464, 1465, 482, 484, 486, 488, 490,
	492, 494, 626, 0, 628, 0, 788, -2, 0, 1499,
	1499, 1499, 0, 0, 1465, 1463, 0, 631, 632, 687,
	688, 1767, 0, 0, 0, 0, 0, 0, 0, 2021,
	1853, 0, 689, -2, 1884, 1886, 2580, 2605, 2020, 1888,
	1889, 1890, 1891, 1892, 0, 1894, 1895, 1896, 1897, 1898,
	1899, 0, 1901, 0, 1906, 1907, 1908, 0, 2587, 2101,
	2184, -2, 0, 0, 2593, 2180, 0, 1987, 1924, -2,
	-2, 2207, 2186, 1699, 1700, 1701, 1702, 1703, -2, -2,
	2623, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 0, 2568, 2588, 2589, 2594, 2596, 2590, 2577,
	1949, 2289, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1726, 1735, -2, -2, -2,
	-2, -2, -2, -2, 2581, 2582, 2599, 2602, 2608, 2613,
	2614, 2586, 2595, 2622, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	1727, -2, -2, -2, -2, 1482, 2455, 1485, 1146, 1483,
	1467, 1469, 0, 1471, 0, 0, 0, 1476, 1502, 1500,
	0, 1551, 1480, 1481, 1569, 1569, 1593, 0, 1574, 0,
	1593, 1494, 1620, 0, 1580, 2478, 1925, 1926, 0, 2190,
	2185, -2, -2, 2620, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 0, 595, 597, 0, 0, 0, 614,
	1504, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	402, 403, 404, 2588, 0, 0, 0, 409, 0, 411,
	412, 413, 414, 415, 416, 417, 196, 2588, 499, 524,
	0, 196, 2588, 502, 196, 2588, 505, 0, 508, 1251,
	196, 2588, 511, 2152, 196, 2588, 514, 516, 2160, 196,
	2588, 520, 2167, 2165, 521, 2588, 523, 302, 300, 301,
	2203, 2204, 2211, 2212, 2213, 2214, 2621, 2623, 1322, 1323,
	1324, 1325, 0, 1352, 1252, 636, 637, 0, 661, 0,
	665, 2576, -2, 0, 2498, -2, 669, 1356, 1360, 1361,
	1362, 1363, 1364, 0, 0, 0, 0, 1369, 0, 0,
	675, 0, 0, 662, 663, 681, 684, 0, 779, 780,
	781, 782, 783, 70, 0, 2588, 1620, 72, 0, 2146,
	2215, 2216, 2217, 2218, 2219, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 76, 0, 2588, 81,
	0, 2588, 0, -2, 92, 0, 102, 0, 2149, 111,
	0, 2588, 0, 2121, -2, 0, 208, 285, 286, 287,
	288, 0, 997, -2, 2588, 1194, 0, 0, 0, 0,
	960, 2118, 2123, 961, 2142, 962, 2128, 0, 333, 334,
	335, 336, 337, 0, 338, 2588, 340, 341, 0, 343,
	344, 2588, 346, 347, 0, 349, 0, 249, 250, 2588,
	371, 373, 0, 375, 376, 0, 378, 0, 0, 0,
	382, -2, 398, 0, 395, 385, 386, 388, 389, 390,
	391, 392, 0, 438, 436, 2157, 0, 0, -2, 2588,
	0, 994, 0, 0, 1231, -2, 2588, 1191, 0, 1238,
	2588, 1234, 0, -2, 0, 1492, 2588, 1373, 1026, 1027,
	1028, 1029, 1632, 465, 0, 1400, 0, 1402, 0, 1421,
	1626, 1569, 0, 0, 1631, 0, -2, 582, 2173, -2,
	534, 0, 535, 0, -2, 0, 314, 0, 0, 979,
	980, 981, 982, 983, 986, 987, 988, 989, 1606, 267,
	269, 0, 0, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 0, 0, 646, 0, 0, 785, 786, 0,
	0, 796, 797, 798, 0, 314, 2490, 2451, 2310, 805,
	0, 808, 811, -2, 0, 0, 0, 0, 815, 0,
	820, 821, 822, 0, 0, 826, 828, 968, 830, 0,
	0, 832, 0, 836, 0, 839, 0, 841, 0, 843,
	-2, -2, -2, 851, 852, -2, 856, -2, 0, 859,
	861, 0, 863, -2, 0, 872, 868, 869, 0, 0,
	0, 0, 888, 889, 0, 898, 0, 901, 902, 903,
	0, 905, 906, 0, 908, 909, 910, 911, 0, 0,
	914, 915, -2, -2, 919, 921, 0, -2, 0, 937,
	0, 941, 0, 0, 949, 0, 0, 792, 793, 196,
	1624, 1335, -2, 1337, 0, -2, 0, 627, 0, 630,
	1524, 1450, 1447, 0, 1521, 1522, 1451, 0, 0, 0,
	1458, 0, 1497, 1498, 0, 0, 0, 1437, 1438, 0,
	0, 0, 0, 2026, 2027, 2028, 2029, 2030, 2031, 2034,
	2035, 2032, 2033, 2036, 2037, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2039, 2040, 2041, 0, 0, 2043, 0, 2045,
	0, 0, 0, 0, 0, 0, 1832, 1834, 2109, 0,
	0, 2042, 1772, 1773, 1774, 1775, 1776, 1811, 1812, 0,
	0, 1885, 2106, 2105, 1887, 0, 2057, 0, 1900, -2,
	0, 2021, 2052, 0, 0, 1909, 1910, 1911, 0, 0,
	2057, 0, 0, 2100, 1921, 1922, 1764, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 1712, 0,
	1714, 0, 1715, 1716, 1723, 1736, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 2081, -2,
	0, 0, 0, 0, 1728, 0, 1484, 0, 0, 1555,
	2110, 2114, 2115, 1555, 1555, 0, 0, 2058, 1617, 1617,
	0, 0, 1612, 1612, 1612, 1610, 1593, 0, 1593, 1603,
	0, 1593, 1593, 0, -2, 1574, 0, 0, 1603, 0,
	1587, 570, 572, 574, 576, 577, 578, 580, 1621, 1622,
	0, 0, 0, 0, 2191, 0, 0, 0, 0, 0,
	2176, 0, 354, 0, 0, 0, 2543, 2489, -2, 600,
	617, 1494, 0, 2060, 1647, 1651, 0, 1653, 1654, 1655,
	1656, 1657, 0, 0, 1648, -2, 1724, 1726, 1747, 2208,
	2209, 2210, 1707, 1708, 1709, 1710, 1711, 1719, 1706, 1706,
	1706, 1717, 1746, 1738, 1746, 1742, 1692, 1693, 1694, 1729,
	1730, 1731, 1732, 0, 2543, 2489, -2, 608, 0, 0,
	1432, 212, 214, 215, 216, 217, 218, 399, 0, 406,
	407, 408, 0, 495, 0, 194, 195, 0, 196, 2588,
	500, 0, 503, 0, 196, 2588, 2116, 509, 0, 512,
	0, 0, 518, 0, 0, 0, 0, 0, 196, 1434,
	0, 0, 0, 0, -2, 671, 676, 677, 0, 1358,
	0, 1365, 698, 699, 700, 1367, 1368, 0, 1370, 674,
	701, 702, 703, 704, 705, 706, 0, 2130, 2131, 2132,
	2133, 2136, 2137, 0, 0, 672, 691, 679, 0, 685,
	112, 1308, 0, 0, 155, 0, 1308, 1308, 0, 0,
	0, 0, 181, 0, 1065, 0, 0, 0, 0, 127,
	140, 151, 124, 125, 0, 0, 0, 0, 0, 0,
	82, 1168, 0, 1171, 0, 0, 0, 0, 0, 0,
	0, 1184, 0, 0, 0, 0, 0, 0, 0, 98,
	99, 0, 139, 0, 0, 1397, 0, 134, 114, 0,
	0, 127, 141, 153, 0, 185, 187, 1062, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 219, 0, 0,
	0, 1192, 0, 1491, 0, 0, 2588, 0, 1606, 2358,
	-2, -2, 267, 1606, 959, 0, 0, 2191, 2126, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 377, 379,
	380, 381, 0, 1230, 0, 387, 428, 1117, 2588, 0,
	0, 455, 450, 0, 452, 0, 0, 0, 1167, 2588,
	1165, 2161, 0, 1189, 0, 1146, 2588, 2159, 0, 0,
	0, 1239, 2200, 1248, 1252, 1387, 0, 467, 0, 1403,
	1405, 0, 0, 1627, 0, 1629, 1569, 1494, 0, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 273,
	0, 1605, 0, 0, 1606, 267, 2466, 314, 314, 1606,
	648, 1606, 650, 0, 0, 799, 800, 0, 314, 314,
	314, 806, 807, 809, 810, -2, -2, -2, -2, 812,
	813, 895, 0, 0, 0, 894, 825, 829, 0, 953,
	2474, 2489, 2543, 966, 895, 2276, 895, 2276, 895, 2276,
	840, 842, 845, 883, 891, 855, 860, 0, 0, 865,
	873, -2, 0, 875, 0, 877, 0, 879, 895, 896,
	899, 904, 907, 912, 913, 0, 928, 933, 934, 930,
	0, 0, 0, 0, 0, 0, 944, 945, 0, 0,
	952, 1185, 0, 1348, 1524, 1450, 629, 1441, 1523, 1442,
	1449, 1452, 0, 0, 1454, 0, 1456, 0, 1519, 1520,
	1527, 1528, 0, 1538, 1539, 1531, 0, -2, 0, 0,
	1534, 1535, 1460, 0, 1477, 1478, 1479, 1508, 1511, 1267,
	0, 2722, 1768, 1642, 1769, 1770, 2145, 0, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, -2, -2,
	-2, -2, -2, -2, -2, -2, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, -2, -2, -2,
	1809, 1810, -2, 2044, 2046, 0, 2109, 0, -2, 0,
	-2, -2, -2, -2, 1829, 0, 1831, 1836, 1838, 1840,
	0, 0, 0, 0, 2108, 1850, 2092, 2093, 0, 0,
	2023, 2024, 2025, 1835, 0, 1854, 2107, 2104, 0, 0,
	2056, 1507, 1913, 0, 0, 0, 0, 1920, 1905, 2054,
	0, 2053, 0, 0, 0, 2064, 0, 2099, 2095, 0,
	2143, 1763, 1750, 1751, 1752, 1753, 1754, 1755, 1765, 0,
	2140, 2177, 2183, 1997, 0, 0, 0, 1950, 1951, 1952,
	1953, 1954, 0, 1956, 1957, 0, 1959, 1960, 0, 1962,
	1963, 0, 1965, 1966, 1967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 0, 0, 1969, 0, 2067, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1971, 0,
	1973, 2058, 2078, 0, 0, 1855, 0, 0, 0, 2021,
	0, 1976, 2058, 2086, 0, 0, 0, 0, 0, 2058,
	0, 2091, 0, 1983, 0, 1985, 1486, 0, 0, 1637,
	0, 0, 0, 2113, 1637, 1637, 0, 1550, 0, 0,
	1613, 1614, 1615, 1616, 0, 0, 1617, 0, 1607, 1611,
	1608, 1609, 1603, 1566, 0, 0, 2147, 1603, 1572, 1602,
	0, 1146, 1592, 1603, 1603, 0, -2, 1576, 1593, 0,
	0, 571, 573, 575, 579, 581, 0, 0, 1507, -2,
	0, -2, 316, 1145, 0, 0, 0, 0, 590, 592,
	0, 0, 515, 0, 605, 0, 584, 0, 587, 0,
	1638, 1641, 0, 0, 1652, 1658, 1659, 0, -2, 0,
	0, 1748, 0, 0, 0, 0, 612, 0, 0, 0,
	0, 410, 525, 196, 497, 0, 196, 196, 506, 0,
	0, 196, 517, 196, 2168, 196, 2166, 303, 522, 1433,
	230, 0, 664, 0, 1357, 1366, 0, 695, 0, 697,
	0, 2134, 2138, 2135, 2139, 0, 686, 0, 0, 0,
	0, 1307, 0, 1274, 0, 0, 159, 2588, 0, 198,
	0, 0, 1110, 2153, 0, 1102, 0, 0, 2296, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 1169, 1170, 1172,
	1179, 1181, 0, 1175, 2141, 0, 0, 1176, 0, 1178,
	1180, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 0, 0, 1396, 1397, 0, 0, 0,
	123, 0, 0, 0, 0, 0, 0, 2120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 1224, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 0, 0, -2, 0, 0, 0, 0,
	0, 240, 0, 305, 2119, 2129, 0, 984, 985, 339,
	342, 345, 348, 236, 0, 383, 0, 0, 1032, 1007,
	0, 0, 437, 314, 0, 0, 451, 455, 2170, 992,
	1163, 1166, 0, 1146, 2588, 1203, 0, 0, 0, 0,
	0, 0, 1237, 0, 0, 2588, 2148, 2199, 2200, 1389,
	1397, 0, 1637, 0, 1419, 1406, 0, 0, 0, 1419,
	1423, 1424, 1426, 1427, 0, 0, 1628, 1634, 533, 583,
	1494, 1494, 314, 312, 2419, 310, 307, 309, 0, 0,
	0, 1033, 1035, 1036, 1037, 198, 0, 2200, 1102, 2347,
	2200, 0, 1409, 1411, 0, 261, 0, 270, 1606, 268,
	273, 0, 0, 0, 449, 647, 652, 794, 0, 314,
	802, 803, 804, 847, 885, 893, 932, 814, 816, 817,
	818, 0, 0, 967, 963, 964, 965, 831, 895, 834,
	895, 837, 895, 858, 862, 867, 874, 0, 0, 0,
	887, 0, 0, 0, 0, 0, 0, 0, 938, 939,
	940, 942, 947, 946, 951, 1625, 1445, 1446, 1448, 0,
	1457, 0, 0, 1533, -2, -2, 1532, 1536, 1537, -2,
	-2, -2, -2, 1453, 0, 1462, 1459, 0, 1518, 1265,
	1266, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1851, 0, -2, 1830, 1833, 1837, 1839, 1841, 0, 0,
	0, 0, 0, 0, 2047, 0, 2049, 1852, 2102, 2105,
	2019, 0, 0, 1506, 1507, 1507, 0, 1919, 0, 2055,
	0, 2062, 2063, 0, 1912, 0, 2096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1923, 0, 0, 0,
	0, 1955, 1958, 1961, 1964, 0, 0, 0, 0, 1944,
	0, 0, 0, 1948, 1718, 1704, 0, 1746, 1744, 1745,
	1739, 1746, 1743, 1696, 0, 1695, 0, 1968, 0, 1970,
	1972, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 1859, 1860,
	1975, 2084, 2085, 0, 0, 0, 0, 0, 0, 1981,
	0, 2090, 1982, 1984, 1494, 0, 1487, 0, 1552, 1541,
	1636, 0, 2111, 1606, 1554, 1556, 2112, 2150, 1541, 1541,
	0, 2059, 0, 0, 1597, 0, 0, 0, 1599, 1570,
	0, 0, 1564, 0, 1560, 1561, 1562, 1563, 1571, 1146,
	1601, 1573, 1577, 2177, 0, 1603, 0, 1588, 0, 1590,
	1623, 0, 1582, 1585, 0, 0, 2192, 1637, 0, 350,
	355, 356, 351, 352, 353, 599, 0, 0, 0, 0,
	2061, 0, 1643, 0, 1649, 0, 0, 0, 0, 607,
	0, 0, 0, 213, 1431, 405, 496, 196, 501, 504,
	2117, 196, 510, 513, 519, 226, 0, 660, -2, 693,
	694, 696, 0, 692, 156, 1308, 0, 0, 1270, 1272,
	2164, 1276, 1282, 1285, 0, 161, 2588, 172, 0, 1081,
	0, 2151, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 2588, 196, 2588, 196, 175, 177, 180, 0, 184,
	182, 0, 1069, 0, 0, 1072, 113, 1308, 0, 0,
	116, 120, 128, 129, 132, 0, 0, 0, 138, 0,
	0, 0, 1287, 1291, 1299, 0, 0, 0, 1173, 1174,
	1177, 1183, 83, 0, 0, 0, 1295, 1297, 1303, 93,
	94, 2588, 2162, 96, 2588, 0, 1269, 0, 0, 0,
	0, 186, 118, 122, 130, 131, 133, 0, 1305, 115,
	0, 211, 0, 0, 201, 196, 2588, 0, 203, 0,
	204, 205, 220, 0, 0, 0, 995, 996, 1225, 1187,
	1188, 0, 1193, 0, 0, 0, 0, 1606, 232, 0,
	1606, 240, 0, 2125, 0, 370, 0, 0, 0, 0,
	1031, 1128, 0, 1002, 0, 0, 0, 443, 439, 0,
	448, 454, 453, 459, -2, 0, 0, 0, 0, -2,
	0, 0, 1241, 1235, 1236, 0, 0, 0, 0, 2588,
	1391, 1397, 0, 1492, 1507, 466, 1398, 1419, 0, 0,
	0, 1408, 1404, 1401, 1637, 0, 0, 0, 0, 0,
	1630, 1633, 536, 537, 289, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 1038, 1042, 0, 2200, 2200, 0,
	2155, 0, 0, 0, 0, 271, 0, 274, 0, 0,
	0, 279, 280, 281, 282, 283, 273, 263, 1606, 0,
	0, 649, 0, 0, 801, 0, 824, 833, 835, 838,
	876, 878, 895, 922, 923, 1059, 0, 1059, 0, 0,
	943, 1455, 0, 1530, 1461, 1512, 1513, 0, 1267, 0,
	1771, 1814, 0, 0, -2, 0, 0, 1818, 0, 0,
	0, -2, 0, 0, 0, 2048, 2050, 0, 2104, 1914,
	0, 0, 0, 1918, 1902, 1903, 0, 2022, 2065, 2094,
	2098, 0, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 0,
	2144, 2178, 2182, 1995, 1996, 2000, 2158, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	1741, 0, 0, 2066, 2077, 2079, 1856, 1857, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, -2, -2,
	-2, 1874, 1875, 1876, -2, -2, -2, 0, 0, 0,
	2080, 2082, 2083, 2087, 2088, 0, 1978, 1979, 1980, 2089,
	0, 1494, 1488, 1549, 0, 1635, 1553, 0, 1549, 1549,
	1501, 1595, 0, 0, 1619, 0, 1567, 0, 1568, 0,
	1600, 0, 1575, 1578, 1579, 1589, 0, 1581, 0, 1584,
	0, 1914, -2, 315, 317, 319, 0, 322, 323, 0,
	0, 602, 603, 601, 585, 0, 0, 1645, 0, 0,
	1721, 1725, 1749, 610, 611, 609, 498, 507, 228, 0,
	1604, 0, 0, 0, 0, 0, 0, 197, 1079, 1109,
	0, 0, 0, 1101, 0, 0, 1115, 163, 164, 0,
	0, 0, 0, 173, 0, 0, 170, 0, 179, 183,
	1066, 0, 0, 0, 0, 1275, 0, 0, 0, 135,
	136, 137, 0, 142, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1381, 1382, 0, 1376,
	0, 0, 0, 199, 0, 0, 0, 1264, 222, 0,
	0, 0, 0, 0, 1228, 1229, 1288, 1292, 1300, 0,
	0, 0, 240, 238, 0, 241, 0, 244, 245, 0,
	247, 240, 234, 0, 0, 0, 1146, 384, 1005, 1116,
	0, 1118, 0, 1003, 0, 0, 1117, 435, 0, 442,
	0, 456, 0, 0, 1167, 0, 0, 1190, 1201, 1146,
	0, 1240, 1242, 0, 1250, 0, 0, 0, 1393, 1397,
	0, 1386, 1387, 1526, 1399, 1417, -2, 0, 0, 1507,
	1425, 1422, 1428, 1429, 0, 311, 0, 306, 308, 0,
	292, 0, 0, 1034, 1039, 0, 0, 0, 0, 0,
	1410, 1412, 0, 0, 0, 0, 0, 0, 262, 273,
	1606, 298, 0, 795, 819, 886, 924, 1058, 0, 0,
	926, 0, 0, 1529, 1516, 1517, 1514, 1267, 1816, 1820,
	0, 0, 0, 1822, -2, 0, 1844, -2, -2, 2051,
	2103, 1893, 1507, 1915, 1917, 1904, 2097, 1766, 0, 2002,
	1999, 0, 1986, 0, 1939, 1940, 0, 0, 1943, 1945,
	1946, 1947, 1705, 1698, 1697, 2076, 0, 0, 0, 0,
	1977, 1489, 0, 1991, 0, 0, 1557, 1991, 1991, 1596,
	0, 1598, 1565, 1558, 0, 2178, 1591, 1583, 0, 0,
	320, 0, 324, 325, 0, 1639, 1644, 0, 1650, 1720,
	229, 157, 158, 1279, 1283, 1280, 0, 160, 0, 1080,
	0, 1083, 0, 0, 0, 0, 1090, 1102, 0, 0,
	0, 0, 0, 1103, 0, 1132, 0, 1255, 1262, 0,
	-2, 0, 0, 0, 166, 189, 0, 0, 190, 1309,
	168, 0, 0, 196, 196, 0, 0, 1271, 1273, 1286,
	0, 0, 0, 0, 145, 0, 0, 1289, 1293, 1301,
	1296, 1298, 1304, 0, 97, 0, 1383, 0, 0, 1306,
	209, 210, 0, 196, 0, 196, 202, 196, 1264, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 233, 304,
	240, 372, 0, 1053, 0, 1128, 1120, 1121, 1122, 0,
	1127, 1129, 0, 0, 1019, 1004, 0, 1015, 0, 0,
	1032, 1007, 0, 440, 457, 0, 460, 0, 463, 993,
	1164, 1198, 1146, 0, 1232, 0, 0, 0, 0, 0,
	0, 0, 1395, 1397, 0, 1388, 1389, 1419, 1525, 0,
	0, 0, 1407, 1526, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 275, 0, 276,
	277, 278, 264, 265, 651, 653, 0, 0, 659, 1057,
	0, 0, 0, 0, 1515, 1824, -2, -2, 1845, 0,
	2179, 2181, 1507, 0, 1988, 1509, 0, 0, -2, 0,
	0, 0, 1490, 1473, 0, 1548, 1540, 1542, 1544, 2477,
	2271, 2587, 1474, 1475, 1618, 0, 1586, 321, 604, 0,
	1646, 0, 0, 1281, 162, 0, 1084, 1085, 2154, 1087,
	0, 1089, 1091, 1092, 1093, 0, 1096, 2202, 0, 1100,
	0, 1111, 1133, 0, 1142, 0, 1257, 1267, 1261, 0,
	1259, 1144, 0, 165, 167, 191, 188, 1264, 0, 169,
	178, 0, 0, 117, 0, 0, 2265, 148, 146, 144,
	95, 1268, 119, 0, 211, 221, 1263, 223, 206, 196,
	0, 1290, 1294, 1302, 242, 0, 243, 246, 0, 0,
	1068, 0, 1006, 1119, 0, 1130, 1131, 1009, 0, 1008,
	0, 0, 0, 0, 0, 441, 444, 0, 447, 0,
	0, 0, 0, 0, 1243, 1241, 0, 1249, 0, 0,
	0, 1375, 0, 0, 1390, 1391, 464, 1413, 0, 0,
	1419, 1430, 291, 0, 0, 1040, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1041, 1144, 0, 0, 1108,
	0, 296, 272, 0, 655, 0, 657, 0, 925, 927,
	0, 0, 1916, 2006, 0, 0, 1941, 1942, -2, 0,
	1882, 1990, 1992, 0, 0, 0, 0, 0, 1559, 1640,
	1277, 0, 1284, 1082, 1086, 0, 0, 0, 1150, 0,
	0, 1104, 0, 1136, 1137, 1053, 0, 1138, 1139, 1140,
	1256, 1518, 1262, 1053, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 200, 224, 1264, 239, 257, 0,
	1199, 1007, 1067, 0, 0, 1017, 0, 1020, 0, 1016,
	1013, 1014, 1005, 0, 445, 446, 461, 0, 462, 0,
	1202, 0, 0, 1250, 0, 0, 1378, 1374, 1397, 1392,
	1393, 1637, 1416, 1420, 0, 0, 1142, 1144, 1064, 0,
	654, 0, 0, 935, 936, 0, 0, 0, 0, 2001,
	1510, 1883, 0, 0, 1543, 1545, 1546, 1547, 1278, 0,
	0, 1095, 1155, 0, 0, 0, 1134, 1135, 1064, 0,
	1260, 1258, 1113, 0, 1146, 171, 0, 1144, 0, 1073,
	0, 0, 1076, 0, 0, 149, 2265, 147, 0, 196,
	260, 0, 254, 252, 253, 1009, 0, 0, 1124, 1126,
	0, 1021, 1053, 1019, 458, 1200, 1233, 1144, 0, 1142,
	0, 1385, 1397, 1379, 1380, 0, 1395, 0, 314, 314,
	1053, 1142, 1007, 1063, 314, 656, 658, 1998, 2018, 2007,
	-2, 2546, 2272, 0, 2018, 2018, 1993, 1994, 0, 0,
	1097, 1151, 1152, 0, 1147, 1148, 1149, 2201, 1098, 1099,
	1132, 0, 0, 1150, 192, 1053, 1070, 0, 0, 1071,
	0, 0, 152, 0, 154, 225, 248, 0, 0, 1001,
	0, 1123, 0, 0, 0, 0, 1068, 1009, 1142, 0,
	1053, 0, 1371, 1384, 0, 1394, 1375, 0, 293, 294,
	1064, 1053, 1637, 0, 295, 2003, 0, 0, 2009, 2010,
	2011, 2012, 2013, 2004, 2005, 1088, 0, 1153, 0, 1154,
	0, 0, 0, 1637, 1141, 0, 1155, 176, 1074, 0,
	1077, 0, 150, 0, 255, 256, 998, 1000, 0, 1125,
	1010, 0, 1012, 1007, 1018, 1053, 0, 1064, 0, 1377,
	2163, 1378, 1414, 0, 1007, 1064, 1107, 0, 2015, 2016,
	0, 0, 0, 1156, 0, 1159, 1160, 0, 1157, 1112,
	0, 1132, 0, 0, 0, 0, 1011, 1009, 1064, 1144,
	1007, 1142, 1385, 0, 1637, 1007, 2014, 2017, 2008, 1094,
	1158, 1161, 1162, 1143, 1114, 0, 0, 258, 0, 1056,
	1001, 1007, 1142, 1637, 1053, 1372, 1637, 1105, 1637, 1061,
	0, 0, 1052, 1054, 1055, 999, 1637, 1053, 1246, 1064,
	1415, 1106, 1075, 1060, 0, 259, 1244, 1064, 1007, 0,
	1007, 1637, 0, 1637, 1247, 1061, 1245, 1078,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 573, 3, 579, 574, 3,
	584, 585, 577, 575, 589, 576, 586, 578, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 592, 3,
	565, 567, 566, 570, 588, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 582, 3, 583, 580, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 590, 572, 591, 568,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 569, 57908, 571, 57909, 581,
	57910, 587, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1304
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1331
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1438
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1452
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1470
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1478
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1514
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1531
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1538
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1548
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1557
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1564
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1621
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1625
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1635
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1645
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1654
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1665
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1669
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1706
		{
		}
	case 127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1707
		{
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1711
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1732
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1737
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1756
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1771
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1780
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1791
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1799
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1810
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1820
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1830
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1839
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1850
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1856
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 150:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1882
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1887
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1934
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1973
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1987
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2016
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2019
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2025
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2077
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = nil
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = true
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = false
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2250
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2254
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2257
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2292
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2304
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2312
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2343
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2427
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2435
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2462
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2579
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = nil
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2596
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2632
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = nil
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2805
		{
			return unimplemented(sqllex, "alter function")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2813
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2817
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2855
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2864
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2875
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2880
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2885
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2890
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2894
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2921
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = nil
		}
	case 315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2997
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3011
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3063
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3065
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3066
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3093
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3177
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3193
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3197
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3202
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3221
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "CREATE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3235
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplemented(sqllex, "create access method")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return unimplemented(sqllex, "create cast")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3242
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3244
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3245
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3246
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3248
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3249
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			return unimplemented(sqllex, "create operator")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			return unimplemented(sqllex, "create publication")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3252
		{
			return unimplemented(sqllex, "create rule")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			return unimplemented(sqllex, "create server")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3261
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3264
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3265
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3268
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3269
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3272
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3273
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3278
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3279
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3280
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3281
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3283
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3284
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3285
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			return unimplemented(sqllex, "drop server")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3290
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3294
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3297
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3416
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3451
		{

			sqlVAL.union.val = nil
		}
	case 456:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3487
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "DELETE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3538
		{
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "DROP")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3569
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3764
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3830
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3854
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3862
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "DELETE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3884
		{
			return helpWith(sqllex, "INSERT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "DELETE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "INSERT")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3939
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3972
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4061
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4065
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return helpWith(sqllex, "GRANT")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4116
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4128
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "RESET")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "RESET")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4183
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "USE")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4202
		{
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4204
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "USE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4390
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4409
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4421
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4431
		{
			return unimplemented(sqllex, "set from current")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4445
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = tree.Low
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = tree.Normal
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = tree.High
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4598
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4602
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "SHOW")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4619
		{
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4642
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.str = "client_encoding"
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.str = "timezone"
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4692
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4696
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4707
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4715
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4755
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4764
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4848
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4901
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4933
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = true
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = true
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = false
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5062
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5109
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = false
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5164
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5174
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5179
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = true
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = false
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5226
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5247
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5275
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5283
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5310
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5328
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5336
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5367
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5371
		{
		}
	case 935:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5380
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5403
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5474
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5484
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5491
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5498
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5631
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5683
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5732
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5734
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5744
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			return helpWith(sqllex, "RESUME")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5764
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5813
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5915
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5931
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5960
		{

			sqlVAL.union.val = nil
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.str = ""
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5976
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = nil
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5999
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6003
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6029
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6043
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6058
		{
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6059
		{
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6060
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6152
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6155
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6158
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6159
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6165
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6186
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.str = ""
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6329
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6429
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6454
		{

			sqlVAL.union.val = true
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = false
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6465
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6466
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6567
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6605
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6620
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6685
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6686
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6687
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6688
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6689
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6690
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6762
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6846
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6855
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6863
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6874
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6889
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6892
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6894
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6904
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6957
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = true
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6967
		{

			sqlVAL.union.val = true
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = false
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6982
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6996
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7008
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7020
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7030
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7040
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = nil
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7150
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7151
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7176
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7178
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7180
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7182
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7184
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7186
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7224
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7242
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7261
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7278
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7295
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = false
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = true
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = false
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = true
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = false
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7359
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7373
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.str = ""
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.str = ""
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7432
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7438
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7663
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7669
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7681
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7687
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7701
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7707
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7725
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7728
		{
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7729
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7740
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7758
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7788
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7817
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7825
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7840
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7861
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7866
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7884
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7894
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7895
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7912
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7916
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7957
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7959
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7963
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8050
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.str = ""
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8076
		{

		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8091
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.str = ""
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.str = ""
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.str = ""
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.str = ""
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8146
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8159
		{
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8160
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8189
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8211
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8269
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8296
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8300
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8338
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8391
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8406
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8585
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8586
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8648
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8692
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = true
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = false
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8762
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = nil
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8775
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8776
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = true
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = false
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = true
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8805
		{
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8806
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8809
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8810
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8851
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8872
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8877
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8906
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8994
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8995
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8998
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9065
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9067
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9082
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9104
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9109
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9125
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9156
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9195
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9205
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9251
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9281
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9314
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9316
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = nil
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = true
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = false
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.str = tree.AstFull
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.str = tree.AstRight
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.str = tree.AstInner
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9434
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.str = tree.AstHash
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.str = ""
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9503
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9508
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9526
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9538
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9548
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = true
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = false
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = true
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = false
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9597
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9610
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9618
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9619
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9637
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9639
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9647
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9667
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9676
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9716
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9728
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9729
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = types.Geography
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9778
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9786
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9812
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9820
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = nil
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = types.Int2
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = types.Int
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = types.Float4
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = types.Float
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9863
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9871
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9879
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = types.Bool
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9893
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = types.Float
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9912
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9918
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9940
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = types.String
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = true
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = false
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = types.Date
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9989
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9997
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10011
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10020
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10028
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10045
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = true
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = false
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = false
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = types.Interval
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10069
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10153
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = nil
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10198
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10258
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10576
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10797
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10823
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10832
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10847
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10877
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10888
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10889
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10913
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10979
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11118
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11175
		{
			return unimplemented(sqllex, "treat")
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11201
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11248
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.str = ""
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11350
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11447
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = tree.Any
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = tree.Some
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.All
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = tree.Div
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = tree.LT
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = tree.GT
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.LE
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = tree.GE
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = tree.NE
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = tree.Like
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11808
		{
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11809
		{
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11889
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11962
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11978
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11987
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11998
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12007
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12015
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12027
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12240
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12253
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12260
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.str = ""
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
