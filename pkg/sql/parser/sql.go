// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:875
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NOSQLLOGIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13690

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1589,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 410,
	-2, 0,
	-1, 74,
	244, 243,
	521, 243,
	-2, 0,
	-1, 87,
	232, 1325,
	246, 1325,
	262, 406,
	394, 406,
	405, 1073,
	444, 406,
	457, 1073,
	505, 1073,
	532, 406,
	558, 1073,
	-2, 0,
	-1, 93,
	133, 1589,
	239, 1589,
	543, 1589,
	544, 1589,
	-2, 0,
	-1, 109,
	152, 1560,
	171, 1560,
	184, 1560,
	242, 1560,
	275, 1560,
	345, 1560,
	355, 1560,
	538, 1560,
	-2, 1531,
	-1, 150,
	160, 922,
	261, 922,
	397, 883,
	462, 883,
	504, 883,
	524, 922,
	526, 883,
	-2, 0,
	-1, 154,
	4, 1591,
	21, 1591,
	22, 1591,
	23, 1591,
	24, 1591,
	25, 1591,
	26, 1591,
	27, 1591,
	29, 1591,
	30, 1591,
	36, 1591,
	41, 1591,
	42, 1591,
	44, 1591,
	45, 1591,
	46, 1591,
	47, 1591,
	48, 1591,
	49, 1591,
	50, 1591,
	51, 1591,
	53, 1591,
	54, 1591,
	55, 1591,
	56, 1591,
	58, 1591,
	59, 1591,
	60, 1591,
	61, 1591,
	62, 1591,
	63, 1591,
	64, 1591,
	68, 1591,
	69, 1591,
	70, 1591,
	71, 1591,
	73, 1591,
	74, 1591,
	75, 1591,
	79, 1591,
	80, 1591,
	81, 1591,
	82, 1591,
	83, 1591,
	84, 1591,
	85, 1591,
	88, 1591,
	89, 1591,
	90, 1591,
	91, 1591,
	92, 1591,
	94, 1591,
	96, 1591,
	97, 1591,
	98, 1591,
	99, 1591,
	100, 1591,
	101, 1591,
	103, 1591,
	104, 1591,
	105, 1591,
	107, 1591,
	108, 1591,
	109, 1591,
	117, 1591,
	118, 1591,
	119, 1591,
	120, 1591,
	121, 1591,
	123, 1591,
	124, 1591,
	125, 1591,
	126, 1591,
	128, 1591,
	129, 1591,
	130, 1591,
	132, 1591,
	133, 1591,
	134, 1591,
	136, 1591,
	137, 1591,
	138, 1591,
	141, 1591,
	142, 1591,
	143, 1591,
	145, 1591,
	146, 1591,
	147, 1591,
	149, 1591,
	150, 1591,
	151, 1591,
	153, 1591,
	154, 1591,
	155, 1591,
	156, 1591,
	157, 1591,
	158, 1591,
	159, 1591,
	160, 1591,
	161, 1591,
	162, 1591,
	163, 1591,
	164, 1591,
	165, 1591,
	166, 1591,
	167, 1591,
	168, 1591,
	170, 1591,
	176, 1591,
	177, 1591,
	178, 1591,
	179, 1591,
	183, 1591,
	185, 1591,
	186, 1591,
	190, 1591,
	191, 1591,
	192, 1591,
	193, 1591,
	194, 1591,
	195, 1591,
	196, 1591,
	197, 1591,
	198, 1591,
	199, 1591,
	200, 1591,
	201, 1591,
	202, 1591,
	203, 1591,
	205, 1591,
	206, 1591,
	208, 1591,
	209, 1591,
	211, 1591,
	212, 1591,
	213, 1591,
	214, 1591,
	215, 1591,
	216, 1591,
	217, 1591,
	218, 1591,
	219, 1591,
	221, 1591,
	222, 1591,
	224, 1591,
	225, 1591,
	226, 1591,
	227, 1591,
	228, 1591,
	232, 1591,
	233, 1591,
	234, 1591,
	235, 1591,
	236, 1591,
	239, 1591,
	240, 1591,
	241, 1591,
	243, 1591,
	245, 1591,
	246, 1591,
	248, 1591,
	250, 1591,
	251, 1591,
	252, 1591,
	254, 1591,
	258, 1591,
	259, 1591,
	260, 1591,
	261, 1591,
	262, 1591,
	263, 1591,
	265, 1591,
	266, 1591,
	267, 1591,
	269, 1591,
	270, 1591,
	272, 1591,
	273, 1591,
	276, 1591,
	277, 1591,
	278, 1591,
	279, 1591,
	280, 1591,
	281, 1591,
	282, 1591,
	285, 1591,
	286, 1591,
	287, 1591,
	288, 1591,
	290, 1591,
	291, 1591,
	292, 1591,
	293, 1591,
	294, 1591,
	295, 1591,
	296, 1591,
	297, 1591,
	298, 1591,
	299, 1591,
	300, 1591,
	301, 1591,
	302, 1591,
	303, 1591,
	304, 1591,
	305, 1591,
	306, 1591,
	307, 1591,
	308, 1591,
	309, 1591,
	310, 1591,
	311, 1591,
	313, 1591,
	315, 1591,
	316, 1591,
	317, 1591,
	318, 1591,
	319, 1591,
	320, 1591,
	321, 1591,
	322, 1591,
	323, 1591,
	324, 1591,
	325, 1591,
	326, 1591,
	327, 1591,
	328, 1591,
	329, 1591,
	331, 1591,
	332, 1591,
	334, 1591,
	336, 1591,
	337, 1591,
	338, 1591,
	340, 1591,
	341, 1591,
	342, 1591,
	343, 1591,
	344, 1591,
	347, 1591,
	350, 1591,
	351, 1591,
	352, 1591,
	353, 1591,
	356, 1591,
	357, 1591,
	358, 1591,
	360, 1591,
	362, 1591,
	363, 1591,
	364, 1591,
	365, 1591,
	366, 1591,
	367, 1591,
	368, 1591,
	369, 1591,
	370, 1591,
	371, 1591,
	372, 1591,
	373, 1591,
	374, 1591,
	376, 1591,
	377, 1591,
	378, 1591,
	379, 1591,
	380, 1591,
	381, 1591,
	382, 1591,
	383, 1591,
	384, 1591,
	385, 1591,
	386, 1591,
	387, 1591,
	388, 1591,
	389, 1591,
	390, 1591,
	392, 1591,
	393, 1591,
	395, 1591,
	396, 1591,
	397, 1591,
	398, 1591,
	399, 1591,
	400, 1591,
	401, 1591,
	402, 1591,
	403, 1591,
	404, 1591,
	405, 1591,
	406, 1591,
	407, 1591,
	409, 1591,
	411, 1591,
	412, 1591,
	413, 1591,
	419, 1591,
	421, 1591,
	422, 1591,
	423, 1591,
	424, 1591,
	425, 1591,
	426, 1591,
	427, 1591,
	428, 1591,
	429, 1591,
	430, 1591,
	432, 1591,
	433, 1591,
	434, 1591,
	436, 1591,
	437, 1591,
	438, 1591,
	439, 1591,
	440, 1591,
	441, 1591,
	442, 1591,
	444, 1591,
	445, 1591,
	446, 1591,
	447, 1591,
	448, 1591,
	449, 1591,
	450, 1591,
	451, 1591,
	452, 1591,
	453, 1591,
	454, 1591,
	455, 1591,
	457, 1591,
	458, 1591,
	459, 1591,
	460, 1591,
	461, 1591,
	462, 1591,
	464, 1591,
	465, 1591,
	466, 1591,
	467, 1591,
	468, 1591,
	469, 1591,
	471, 1591,
	472, 1591,
	473, 1591,
	474, 1591,
	475, 1591,
	476, 1591,
	477, 1591,
	478, 1591,
	480, 1591,
	482, 1591,
	483, 1591,
	484, 1591,
	485, 1591,
	486, 1591,
	487, 1591,
	488, 1591,
	489, 1591,
	490, 1591,
	491, 1591,
	492, 1591,
	493, 1591,
	494, 1591,
	495, 1591,
	496, 1591,
	497, 1591,
	498, 1591,
	500, 1591,
	501, 1591,
	503, 1591,
	504, 1591,
	506, 1591,
	507, 1591,
	508, 1591,
	509, 1591,
	510, 1591,
	511, 1591,
	512, 1591,
	513, 1591,
	514, 1591,
	516, 1591,
	517, 1591,
	518, 1591,
	519, 1591,
	520, 1591,
	522, 1591,
	524, 1591,
	525, 1591,
	526, 1591,
	527, 1591,
	528, 1591,
	529, 1591,
	531, 1591,
	532, 1591,
	533, 1591,
	534, 1591,
	535, 1591,
	536, 1591,
	537, 1591,
	540, 1591,
	541, 1591,
	542, 1591,
	543, 1591,
	544, 1591,
	545, 1591,
	546, 1591,
	548, 1591,
	551, 1591,
	552, 1591,
	553, 1591,
	554, 1591,
	555, 1591,
	556, 1591,
	558, 1591,
	559, 1591,
	560, 1591,
	561, 1591,
	562, 1591,
	563, 1591,
	564, 1591,
	569, 1591,
	570, 1591,
	571, 1591,
	572, 1591,
	573, 1591,
	574, 1591,
	-2, 0,
	-1, 155,
	1, 1442,
	131, 1442,
	250, 1442,
	333, 1442,
	392, 1442,
	401, 1442,
	578, 1442,
	608, 1442,
	-2, 0,
	-1, 157,
	1, 1442,
	608, 1442,
	-2, 0,
	-1, 158,
	1, 1442,
	608, 1442,
	-2, 0,
	-1, 159,
	1, 1442,
	521, 1442,
	608, 1442,
	-2, 0,
	-1, 188,
	152, 1559,
	171, 1559,
	184, 1559,
	242, 1559,
	275, 1559,
	345, 1559,
	355, 1559,
	538, 1559,
	-2, 1534,
	-1, 237,
	4, 1598,
	5, 1598,
	6, 1598,
	7, 1598,
	8, 1598,
	9, 1598,
	10, 1598,
	21, 1598,
	22, 1598,
	23, 1598,
	24, 1598,
	25, 1598,
	26, 1598,
	27, 1598,
	29, 1598,
	30, 1598,
	36, 1598,
	37, 1598,
	41, 1598,
	42, 1598,
	43, 1598,
	44, 1598,
	45, 1598,
	46, 1598,
	47, 1598,
	48, 1598,
	49, 1598,
	50, 1598,
	51, 1598,
	53, 1598,
	54, 1598,
	55, 1598,
	56, 1598,
	58, 1598,
	59, 1598,
	60, 1598,
	61, 1598,
	62, 1598,
	63, 1598,
	64, 1598,
	65, 1598,
	66, 1598,
	67, 1598,
	68, 1598,
	69, 1598,
	70, 1598,
	71, 1598,
	73, 1598,
	74, 1598,
	75, 1598,
	77, 1598,
	79, 1598,
	80, 1598,
	81, 1598,
	82, 1598,
	83, 1598,
	84, 1598,
	85, 1598,
	88, 1598,
	89, 1598,
	90, 1598,
	91, 1598,
	92, 1598,
	94, 1598,
	96, 1598,
	97, 1598,
	98, 1598,
	99, 1598,
	100, 1598,
	101, 1598,
	103, 1598,
	104, 1598,
	105, 1598,
	106, 1598,
	107, 1598,
	108, 1598,
	109, 1598,
	110, 1598,
	111, 1598,
	112, 1598,
	113, 1598,
	114, 1598,
	115, 1598,
	116, 1598,
	117, 1598,
	118, 1598,
	119, 1598,
	120, 1598,
	121, 1598,
	122, 1598,
	123, 1598,
	124, 1598,
	125, 1598,
	126, 1598,
	127, 1598,
	128, 1598,
	129, 1598,
	130, 1598,
	132, 1598,
	133, 1598,
	134, 1598,
	136, 1598,
	137, 1598,
	138, 1598,
	141, 1598,
	142, 1598,
	143, 1598,
	145, 1598,
	146, 1598,
	147, 1598,
	149, 1598,
	150, 1598,
	151, 1598,
	153, 1598,
	154, 1598,
	155, 1598,
	156, 1598,
	157, 1598,
	158, 1598,
	159, 1598,
	160, 1598,
	161, 1598,
	162, 1598,
	163, 1598,
	164, 1598,
	165, 1598,
	166, 1598,
	167, 1598,
	168, 1598,
	169, 1598,
	170, 1598,
	176, 1598,
	177, 1598,
	178, 1598,
	179, 1598,
	183, 1598,
	185, 1598,
	186, 1598,
	189, 1598,
	190, 1598,
	191, 1598,
	192, 1598,
	193, 1598,
	194, 1598,
	195, 1598,
	196, 1598,
	197, 1598,
	198, 1598,
	199, 1598,
	200, 1598,
	201, 1598,
	202, 1598,
	203, 1598,
	205, 1598,
	206, 1598,
	208, 1598,
	209, 1598,
	211, 1598,
	212, 1598,
	213, 1598,
	214, 1598,
	215, 1598,
	216, 1598,
	217, 1598,
	218, 1598,
	219, 1598,
	220, 1598,
	221, 1598,
	222, 1598,
	224, 1598,
	225, 1598,
	226, 1598,
	227, 1598,
	228, 1598,
	232, 1598,
	233, 1598,
	234, 1598,
	235, 1598,
	236, 1598,
	238, 1598,
	239, 1598,
	240, 1598,
	241, 1598,
	243, 1598,
	245, 1598,
	246, 1598,
	247, 1598,
	248, 1598,
	249, 1598,
	250, 1598,
	251, 1598,
	252, 1598,
	253, 1598,
	254, 1598,
	258, 1598,
	259, 1598,
	260, 1598,
	261, 1598,
	262, 1598,
	263, 1598,
	265, 1598,
	266, 1598,
	267, 1598,
	269, 1598,
	270, 1598,
	271, 1598,
	272, 1598,
	273, 1598,
	274, 1598,
	276, 1598,
	277, 1598,
	278, 1598,
	279, 1598,
	280, 1598,
	281, 1598,
	282, 1598,
	283, 1598,
	284, 1598,
	285, 1598,
	286, 1598,
	287, 1598,
	288, 1598,
	290, 1598,
	291, 1598,
	292, 1598,
	293, 1598,
	294, 1598,
	295, 1598,
	296, 1598,
	297, 1598,
	298, 1598,
	299, 1598,
	300, 1598,
	301, 1598,
	302, 1598,
	303, 1598,
	304, 1598,
	305, 1598,
	306, 1598,
	307, 1598,
	308, 1598,
	309, 1598,
	310, 1598,
	311, 1598,
	313, 1598,
	314, 1598,
	315, 1598,
	316, 1598,
	317, 1598,
	318, 1598,
	319, 1598,
	320, 1598,
	321, 1598,
	322, 1598,
	323, 1598,
	324, 1598,
	325, 1598,
	326, 1598,
	327, 1598,
	328, 1598,
	329, 1598,
	330, 1598,
	331, 1598,
	332, 1598,
	333, 1598,
	334, 1598,
	335, 1598,
	336, 1598,
	337, 1598,
	338, 1598,
	339, 1598,
	340, 1598,
	341, 1598,
	342, 1598,
	343, 1598,
	344, 1598,
	347, 1598,
	351, 1598,
	352, 1598,
	353, 1598,
	356, 1598,
	357, 1598,
	358, 1598,
	359, 1598,
	360, 1598,
	361, 1598,
	362, 1598,
	363, 1598,
	364, 1598,
	365, 1598,
	366, 1598,
	367, 1598,
	368, 1598,
	369, 1598,
	370, 1598,
	371, 1598,
	372, 1598,
	373, 1598,
	374, 1598,
	376, 1598,
	377, 1598,
	378, 1598,
	379, 1598,
	380, 1598,
	381, 1598,
	382, 1598,
	383, 1598,
	384, 1598,
	385, 1598,
	386, 1598,
	387, 1598,
	388, 1598,
	389, 1598,
	390, 1598,
	392, 1598,
	393, 1598,
	395, 1598,
	396, 1598,
	397, 1598,
	398, 1598,
	399, 1598,
	400, 1598,
	401, 1598,
	402, 1598,
	403, 1598,
	404, 1598,
	405, 1598,
	406, 1598,
	407, 1598,
	409, 1598,
	411, 1598,
	412, 1598,
	413, 1598,
	419, 1598,
	421, 1598,
	422, 1598,
	423, 1598,
	424, 1598,
	425, 1598,
	426, 1598,
	427, 1598,
	428, 1598,
	429, 1598,
	430, 1598,
	432, 1598,
	433, 1598,
	434, 1598,
	435, 1598,
	436, 1598,
	437, 1598,
	438, 1598,
	439, 1598,
	440, 1598,
	441, 1598,
	442, 1598,
	444, 1598,
	445, 1598,
	446, 1598,
	447, 1598,
	448, 1598,
	449, 1598,
	450, 1598,
	451, 1598,
	452, 1598,
	453, 1598,
	454, 1598,
	455, 1598,
	457, 1598,
	458, 1598,
	459, 1598,
	460, 1598,
	461, 1598,
	462, 1598,
	463, 1598,
	464, 1598,
	465, 1598,
	466, 1598,
	467, 1598,
	468, 1598,
	469, 1598,
	470, 1598,
	471, 1598,
	472, 1598,
	473, 1598,
	474, 1598,
	475, 1598,
	476, 1598,
	477, 1598,
	478, 1598,
	480, 1598,
	482, 1598,
	483, 1598,
	484, 1598,
	485, 1598,
	486, 1598,
	487, 1598,
	488, 1598,
	489, 1598,
	490, 1598,
	491, 1598,
	492, 1598,
	493, 1598,
	494, 1598,
	495, 1598,
	496, 1598,
	497, 1598,
	498, 1598,
	500, 1598,
	501, 1598,
	502, 1598,
	503, 1598,
	504, 1598,
	506, 1598,
	507, 1598,
	508, 1598,
	509, 1598,
	510, 1598,
	511, 1598,
	512, 1598,
	513, 1598,
	514, 1598,
	516, 1598,
	517, 1598,
	518, 1598,
	519, 1598,
	520, 1598,
	522, 1598,
	524, 1598,
	525, 1598,
	526, 1598,
	527, 1598,
	528, 1598,
	529, 1598,
	530, 1598,
	531, 1598,
	532, 1598,
	533, 1598,
	534, 1598,
	535, 1598,
	536, 1598,
	537, 1598,
	539, 1598,
	540, 1598,
	541, 1598,
	542, 1598,
	543, 1598,
	544, 1598,
	545, 1598,
	546, 1598,
	547, 1598,
	548, 1598,
	551, 1598,
	552, 1598,
	553, 1598,
	554, 1598,
	555, 1598,
	556, 1598,
	558, 1598,
	559, 1598,
	560, 1598,
	561, 1598,
	562, 1598,
	563, 1598,
	564, 1598,
	569, 1598,
	570, 1598,
	571, 1598,
	572, 1598,
	573, 1598,
	574, 1598,
	575, 1598,
	589, 1598,
	596, 1598,
	597, 1598,
	598, 1598,
	605, 1598,
	609, 1598,
	-2, 0,
	-1, 754,
	4, 1323,
	21, 1323,
	22, 1323,
	23, 1323,
	24, 1323,
	25, 1323,
	26, 1323,
	27, 1323,
	29, 1323,
	30, 1323,
	36, 1323,
	41, 1323,
	42, 1323,
	44, 1323,
	45, 1323,
	46, 1323,
	47, 1323,
	48, 1323,
	49, 1323,
	50, 1323,
	51, 1323,
	53, 1323,
	54, 1323,
	55, 1323,
	56, 1323,
	58, 1323,
	59, 1323,
	60, 1323,
	61, 1323,
	62, 1323,
	63, 1323,
	64, 1323,
	68, 1323,
	69, 1323,
	70, 1323,
	71, 1323,
	73, 1323,
	74, 1323,
	75, 1323,
	79, 1323,
	80, 1323,
	81, 1323,
	82, 1323,
	83, 1323,
	84, 1323,
	85, 1323,
	88, 1323,
	89, 1323,
	90, 1323,
	91, 1323,
	92, 1323,
	94, 1323,
	96, 1323,
	97, 1323,
	98, 1323,
	99, 1323,
	100, 1323,
	101, 1323,
	103, 1323,
	104, 1323,
	105, 1323,
	107, 1323,
	108, 1323,
	109, 1323,
	117, 1323,
	118, 1323,
	119, 1323,
	120, 1323,
	121, 1323,
	123, 1323,
	124, 1323,
	125, 1323,
	126, 1323,
	128, 1323,
	129, 1323,
	130, 1323,
	132, 1323,
	133, 1323,
	134, 1323,
	136, 1323,
	137, 1323,
	138, 1323,
	141, 1323,
	142, 1323,
	143, 1323,
	145, 1323,
	146, 1323,
	147, 1323,
	149, 1323,
	150, 1323,
	151, 1323,
	153, 1323,
	154, 1323,
	155, 1323,
	156, 1323,
	157, 1323,
	158, 1323,
	159, 1323,
	160, 1323,
	161, 1323,
	162, 1323,
	163, 1323,
	164, 1323,
	165, 1323,
	166, 1323,
	167, 1323,
	168, 1323,
	170, 1323,
	176, 1323,
	177, 1323,
	178, 1323,
	179, 1323,
	183, 1323,
	185, 1323,
	186, 1323,
	190, 1323,
	191, 1323,
	192, 1323,
	193, 1323,
	194, 1323,
	195, 1323,
	196, 1323,
	197, 1323,
	198, 1323,
	199, 1323,
	200, 1323,
	201, 1323,
	202, 1323,
	203, 1323,
	205, 1323,
	206, 1323,
	208, 1323,
	209, 1323,
	211, 1323,
	212, 1323,
	213, 1323,
	214, 1323,
	215, 1323,
	216, 1323,
	217, 1323,
	218, 1323,
	219, 1323,
	221, 1323,
	222, 1323,
	224, 1323,
	225, 1323,
	226, 1323,
	227, 1323,
	228, 1323,
	232, 1323,
	233, 1323,
	234, 1323,
	235, 1323,
	236, 1323,
	239, 1323,
	240, 1323,
	241, 1323,
	243, 1323,
	245, 1323,
	246, 1323,
	248, 1323,
	250, 1323,
	251, 1323,
	252, 1323,
	254, 1323,
	258, 1323,
	259, 1323,
	260, 1323,
	261, 1323,
	262, 1323,
	263, 1323,
	265, 1323,
	266, 1323,
	267, 1323,
	269, 1323,
	270, 1323,
	272, 1323,
	273, 1323,
	276, 1323,
	277, 1323,
	278, 1323,
	279, 1323,
	280, 1323,
	281, 1323,
	282, 1323,
	285, 1323,
	286, 1323,
	287, 1323,
	288, 1323,
	290, 1323,
	291, 1323,
	292, 1323,
	293, 1323,
	294, 1323,
	295, 1323,
	296, 1323,
	297, 1323,
	298, 1323,
	299, 1323,
	300, 1323,
	301, 1323,
	302, 1323,
	303, 1323,
	304, 1323,
	305, 1323,
	306, 1323,
	307, 1323,
	308, 1323,
	309, 1323,
	310, 1323,
	311, 1323,
	313, 1323,
	315, 1323,
	316, 1323,
	317, 1323,
	318, 1323,
	319, 1323,
	320, 1323,
	321, 1323,
	322, 1323,
	323, 1323,
	324, 1323,
	325, 1323,
	326, 1323,
	327, 1323,
	328, 1323,
	329, 1323,
	331, 1323,
	332, 1323,
	334, 1323,
	336, 1323,
	337, 1323,
	338, 1323,
	340, 1323,
	341, 1323,
	342, 1323,
	343, 1323,
	344, 1323,
	347, 1323,
	351, 1323,
	352, 1323,
	353, 1323,
	356, 1323,
	357, 1323,
	358, 1323,
	360, 1323,
	362, 1323,
	363, 1323,
	364, 1323,
	365, 1323,
	366, 1323,
	367, 1323,
	368, 1323,
	369, 1323,
	370, 1323,
	371, 1323,
	372, 1323,
	373, 1323,
	374, 1323,
	376, 1323,
	377, 1323,
	378, 1323,
	379, 1323,
	380, 1323,
	381, 1323,
	382, 1323,
	383, 1323,
	384, 1323,
	385, 1323,
	386, 1323,
	387, 1323,
	388, 1323,
	389, 1323,
	390, 1323,
	392, 1323,
	393, 1323,
	395, 1323,
	396, 1323,
	397, 1323,
	398, 1323,
	399, 1323,
	400, 1323,
	401, 1323,
	402, 1323,
	403, 1323,
	404, 1323,
	405, 1323,
	406, 1323,
	407, 1323,
	409, 1323,
	411, 1323,
	412, 1323,
	413, 1323,
	419, 1323,
	421, 1323,
	422, 1323,
	423, 1323,
	424, 1323,
	425, 1323,
	426, 1323,
	427, 1323,
	428, 1323,
	429, 1323,
	430, 1323,
	432, 1323,
	433, 1323,
	434, 1323,
	436, 1323,
	437, 1323,
	438, 1323,
	439, 1323,
	440, 1323,
	441, 1323,
	442, 1323,
	444, 1323,
	445, 1323,
	446, 1323,
	447, 1323,
	448, 1323,
	449, 1323,
	450, 1323,
	451, 1323,
	452, 1323,
	453, 1323,
	454, 1323,
	455, 1323,
	457, 1323,
	458, 1323,
	459, 1323,
	460, 1323,
	461, 1323,
	462, 1323,
	464, 1323,
	465, 1323,
	466, 1323,
	467, 1323,
	468, 1323,
	469, 1323,
	471, 1323,
	472, 1323,
	473, 1323,
	474, 1323,
	475, 1323,
	476, 1323,
	477, 1323,
	478, 1323,
	480, 1323,
	482, 1323,
	483, 1323,
	484, 1323,
	485, 1323,
	486, 1323,
	487, 1323,
	488, 1323,
	489, 1323,
	490, 1323,
	491, 1323,
	492, 1323,
	493, 1323,
	494, 1323,
	495, 1323,
	496, 1323,
	497, 1323,
	498, 1323,
	500, 1323,
	501, 1323,
	503, 1323,
	504, 1323,
	506, 1323,
	507, 1323,
	508, 1323,
	509, 1323,
	510, 1323,
	511, 1323,
	512, 1323,
	513, 1323,
	514, 1323,
	516, 1323,
	517, 1323,
	518, 1323,
	519, 1323,
	520, 1323,
	522, 1323,
	524, 1323,
	525, 1323,
	526, 1323,
	527, 1323,
	528, 1323,
	529, 1323,
	531, 1323,
	532, 1323,
	533, 1323,
	534, 1323,
	535, 1323,
	536, 1323,
	537, 1323,
	540, 1323,
	541, 1323,
	542, 1323,
	543, 1323,
	544, 1323,
	545, 1323,
	546, 1323,
	548, 1323,
	551, 1323,
	552, 1323,
	553, 1323,
	554, 1323,
	555, 1323,
	556, 1323,
	558, 1323,
	559, 1323,
	560, 1323,
	561, 1323,
	562, 1323,
	563, 1323,
	564, 1323,
	569, 1323,
	570, 1323,
	571, 1323,
	572, 1323,
	573, 1323,
	574, 1323,
	-2, 0,
	-1, 773,
	188, 2387,
	521, 2387,
	588, 2387,
	607, 2387,
	-2, 0,
	-1, 774,
	188, 2374,
	521, 2374,
	588, 2374,
	607, 2374,
	-2, 0,
	-1, 776,
	188, 2639,
	521, 2639,
	588, 2639,
	607, 2639,
	-2, 0,
	-1, 779,
	188, 2499,
	521, 2499,
	588, 2499,
	607, 2499,
	-2, 0,
	-1, 780,
	188, 2682,
	521, 2682,
	588, 2682,
	607, 2682,
	-2, 0,
	-1, 788,
	188, 2526,
	521, 2526,
	588, 2526,
	607, 2526,
	-2, 706,
	-1, 823,
	607, 2323,
	610, 2323,
	-2, 1002,
	-1, 824,
	607, 2325,
	610, 2325,
	-2, 1003,
	-1, 825,
	607, 2324,
	610, 2324,
	-2, 1004,
	-1, 826,
	610, 2249,
	-2, 1005,
	-1, 849,
	184, 264,
	-2, 0,
	-1, 873,
	43, 2296,
	-2, 0,
	-1, 874,
	558, 1301,
	-2, 1074,
	-1, 890,
	4, 1729,
	21, 1729,
	22, 1729,
	23, 1729,
	24, 1729,
	25, 1729,
	26, 1729,
	27, 1729,
	29, 1729,
	30, 1729,
	36, 1729,
	41, 1729,
	42, 1729,
	44, 1729,
	45, 1729,
	46, 1729,
	47, 1729,
	48, 1729,
	49, 1729,
	50, 1729,
	51, 1729,
	53, 1729,
	54, 1729,
	55, 1729,
	56, 1729,
	58, 1729,
	59, 1729,
	60, 1729,
	61, 1729,
	62, 1729,
	63, 1729,
	64, 1729,
	68, 1729,
	69, 1729,
	70, 1729,
	71, 1729,
	73, 1729,
	74, 1729,
	75, 1729,
	79, 1729,
	80, 1729,
	81, 1729,
	82, 1729,
	83, 1729,
	84, 1729,
	85, 1729,
	88, 1729,
	89, 1729,
	90, 1729,
	91, 1729,
	92, 1729,
	94, 1729,
	96, 1729,
	97, 1729,
	98, 1729,
	99, 1729,
	100, 1729,
	101, 1729,
	103, 1729,
	104, 1729,
	105, 1729,
	107, 1729,
	108, 1729,
	109, 1729,
	117, 1729,
	118, 1729,
	119, 1729,
	120, 1729,
	121, 1729,
	123, 1729,
	124, 1729,
	125, 1729,
	126, 1729,
	128, 1729,
	129, 1729,
	130, 1729,
	132, 1729,
	133, 1729,
	134, 1729,
	136, 1729,
	137, 1729,
	138, 1729,
	141, 1729,
	142, 1729,
	143, 1729,
	145, 1729,
	146, 1729,
	147, 1729,
	149, 1729,
	150, 1729,
	151, 1729,
	153, 1729,
	154, 1729,
	155, 1729,
	156, 1729,
	157, 1729,
	158, 1729,
	159, 1729,
	160, 1729,
	161, 1729,
	162, 1729,
	163, 1729,
	164, 1729,
	165, 1729,
	166, 1729,
	167, 1729,
	168, 1729,
	170, 1729,
	176, 1729,
	177, 1729,
	178, 1729,
	179, 1729,
	183, 1729,
	185, 1729,
	186, 1729,
	190, 1729,
	191, 1729,
	192, 1729,
	193, 1729,
	194, 1729,
	195, 1729,
	196, 1729,
	197, 1729,
	198, 1729,
	199, 1729,
	200, 1729,
	201, 1729,
	202, 1729,
	203, 1729,
	205, 1729,
	206, 1729,
	208, 1729,
	209, 1729,
	211, 1729,
	212, 1729,
	213, 1729,
	214, 1729,
	215, 1729,
	216, 1729,
	217, 1729,
	218, 1729,
	219, 1729,
	221, 1729,
	222, 1729,
	224, 1729,
	225, 1729,
	226, 1729,
	227, 1729,
	228, 1729,
	232, 1729,
	233, 1729,
	234, 1729,
	235, 1729,
	236, 1729,
	239, 1729,
	240, 1729,
	241, 1729,
	243, 1729,
	245, 1729,
	246, 1729,
	248, 1729,
	250, 1729,
	251, 1729,
	252, 1729,
	254, 1729,
	258, 1729,
	259, 1729,
	260, 1729,
	261, 1729,
	262, 1729,
	263, 1729,
	265, 1729,
	266, 1729,
	267, 1729,
	269, 1729,
	270, 1729,
	272, 1729,
	273, 1729,
	276, 1729,
	277, 1729,
	278, 1729,
	279, 1729,
	280, 1729,
	281, 1729,
	282, 1729,
	285, 1729,
	286, 1729,
	287, 1729,
	288, 1729,
	290, 1729,
	291, 1729,
	292, 1729,
	293, 1729,
	294, 1729,
	295, 1729,
	296, 1729,
	297, 1729,
	298, 1729,
	299, 1729,
	300, 1729,
	301, 1729,
	302, 1729,
	303, 1729,
	304, 1729,
	305, 1729,
	306, 1729,
	307, 1729,
	308, 1729,
	309, 1729,
	310, 1729,
	311, 1729,
	313, 1729,
	315, 1729,
	316, 1729,
	317, 1729,
	318, 1729,
	319, 1729,
	320, 1729,
	321, 1729,
	322, 1729,
	323, 1729,
	324, 1729,
	325, 1729,
	326, 1729,
	327, 1729,
	328, 1729,
	329, 1729,
	331, 1729,
	332, 1729,
	334, 1729,
	336, 1729,
	337, 1729,
	338, 1729,
	340, 1729,
	341, 1729,
	342, 1729,
	343, 1729,
	344, 1729,
	347, 1729,
	351, 1729,
	352, 1729,
	353, 1729,
	356, 1729,
	357, 1729,
	358, 1729,
	360, 1729,
	362, 1729,
	363, 1729,
	364, 1729,
	365, 1729,
	366, 1729,
	367, 1729,
	368, 1729,
	369, 1729,
	370, 1729,
	371, 1729,
	372, 1729,
	373, 1729,
	374, 1729,
	376, 1729,
	377, 1729,
	378, 1729,
	379, 1729,
	380, 1729,
	381, 1729,
	382, 1729,
	383, 1729,
	384, 1729,
	385, 1729,
	386, 1729,
	387, 1729,
	388, 1729,
	389, 1729,
	390, 1729,
	392, 1729,
	393, 1729,
	395, 1729,
	396, 1729,
	397, 1729,
	398, 1729,
	399, 1729,
	400, 1729,
	401, 1729,
	402, 1729,
	403, 1729,
	404, 1729,
	405, 1729,
	406, 1729,
	407, 1729,
	409, 1729,
	411, 1729,
	412, 1729,
	413, 1729,
	419, 1729,
	421, 1729,
	422, 1729,
	423, 1729,
	424, 1729,
	425, 1729,
	426, 1729,
	427, 1729,
	428, 1729,
	429, 1729,
	430, 1729,
	432, 1729,
	433, 1729,
	434, 1729,
	436, 1729,
	437, 1729,
	438, 1729,
	439, 1729,
	440, 1729,
	441, 1729,
	442, 1729,
	444, 1729,
	445, 1729,
	446, 1729,
	447, 1729,
	448, 1729,
	449, 1729,
	450, 1729,
	451, 1729,
	452, 1729,
	453, 1729,
	454, 1729,
	455, 1729,
	457, 1729,
	458, 1729,
	459, 1729,
	460, 1729,
	461, 1729,
	462, 1729,
	464, 1729,
	465, 1729,
	466, 1729,
	467, 1729,
	468, 1729,
	469, 1729,
	471, 1729,
	472, 1729,
	473, 1729,
	474, 1729,
	475, 1729,
	476, 1729,
	477, 1729,
	478, 1729,
	480, 1729,
	482, 1729,
	483, 1729,
	484, 1729,
	485, 1729,
	486, 1729,
	487, 1729,
	488, 1729,
	489, 1729,
	490, 1729,
	491, 1729,
	492, 1729,
	493, 1729,
	494, 1729,
	495, 1729,
	496, 1729,
	497, 1729,
	498, 1729,
	500, 1729,
	501, 1729,
	503, 1729,
	504, 1729,
	506, 1729,
	507, 1729,
	508, 1729,
	509, 1729,
	510, 1729,
	511, 1729,
	512, 1729,
	513, 1729,
	514, 1729,
	516, 1729,
	517, 1729,
	518, 1729,
	519, 1729,
	520, 1729,
	522, 1729,
	524, 1729,
	525, 1729,
	526, 1729,
	527, 1729,
	528, 1729,
	529, 1729,
	531, 1729,
	532, 1729,
	533, 1729,
	534, 1729,
	535, 1729,
	536, 1729,
	537, 1729,
	540, 1729,
	541, 1729,
	542, 1729,
	543, 1729,
	544, 1729,
	545, 1729,
	546, 1729,
	548, 1729,
	551, 1729,
	552, 1729,
	553, 1729,
	554, 1729,
	555, 1729,
	556, 1729,
	558, 1729,
	559, 1729,
	560, 1729,
	561, 1729,
	562, 1729,
	563, 1729,
	564, 1729,
	569, 1729,
	570, 1729,
	571, 1729,
	572, 1729,
	573, 1729,
	574, 1729,
	-2, 0,
	-1, 900,
	262, 410,
	-2, 0,
	-1, 973,
	397, 884,
	462, 884,
	504, 884,
	526, 884,
	-2, 0,
	-1, 974,
	397, 883,
	462, 883,
	504, 883,
	526, 883,
	-2, 816,
	-1, 978,
	1, 936,
	604, 936,
	606, 936,
	608, 936,
	-2, 0,
	-1, 980,
	1, 858,
	604, 858,
	606, 858,
	608, 858,
	-2, 0,
	-1, 981,
	1, 862,
	604, 862,
	606, 862,
	608, 862,
	-2, 0,
	-1, 982,
	1, 1001,
	184, 1001,
	604, 1001,
	606, 1001,
	608, 1001,
	-2, 0,
	-1, 990,
	1, 889,
	604, 889,
	606, 889,
	608, 889,
	-2, 0,
	-1, 997,
	1, 936,
	604, 936,
	606, 936,
	608, 936,
	-2, 0,
	-1, 998,
	1, 938,
	604, 938,
	606, 938,
	608, 938,
	-2, 0,
	-1, 999,
	1, 941,
	604, 941,
	606, 941,
	608, 941,
	-2, 0,
	-1, 1005,
	1, 965,
	604, 965,
	606, 965,
	608, 965,
	-2, 0,
	-1, 1006,
	1, 967,
	604, 967,
	606, 967,
	608, 967,
	-2, 0,
	-1, 1011,
	1, 995,
	604, 995,
	606, 995,
	608, 995,
	-2, 0,
	-1, 1064,
	171, 1602,
	184, 1602,
	275, 1602,
	345, 1602,
	-2, 1538,
	-1, 1079,
	171, 1601,
	184, 1601,
	275, 1601,
	345, 1601,
	-2, 1535,
	-1, 1108,
	607, 2322,
	-2, 714,
	-1, 1137,
	5, 2314,
	605, 2312,
	-2, 2303,
	-1, 1145,
	5, 2335,
	605, 2332,
	-2, 2323,
	-1, 1146,
	5, 2336,
	605, 2333,
	-2, 2324,
	-1, 1154,
	607, 2320,
	-2, 2302,
	-1, 1155,
	605, 2767,
	-2, 2321,
	-1, 1178,
	605, 2766,
	-2, 2337,
	-1, 1179,
	5, 1804,
	-2, 2737,
	-1, 1180,
	5, 1805,
	-2, 2738,
	-1, 1181,
	5, 1806,
	-2, 2752,
	-1, 1182,
	5, 1807,
	-2, 2716,
	-1, 1183,
	5, 1808,
	-2, 2750,
	-1, 1184,
	5, 1816,
	-2, 2729,
	-1, 1185,
	5, 1803,
	-2, 2725,
	-1, 1186,
	5, 1803,
	-2, 2724,
	-1, 1187,
	5, 1803,
	-2, 2743,
	-1, 1188,
	5, 1814,
	-2, 2718,
	-1, 1189,
	5, 1819,
	-2, 2717,
	-1, 1190,
	5, 1821,
	-2, 2762,
	-1, 1193,
	5, 1843,
	-2, 2755,
	-1, 1194,
	5, 1835,
	-2, 2756,
	-1, 1195,
	5, 1843,
	-2, 2757,
	-1, 1196,
	5, 1839,
	-2, 2758,
	-1, 1197,
	5, 1789,
	-2, 2730,
	-1, 1198,
	5, 1790,
	-2, 2731,
	-1, 1199,
	5, 1791,
	-2, 2719,
	-1, 1227,
	5, 1826,
	-2, 2763,
	-1, 1228,
	5, 1827,
	-2, 2753,
	-1, 1229,
	5, 1828,
	559, 1828,
	-2, 2720,
	-1, 1230,
	5, 1829,
	559, 1829,
	-2, 2721,
	-1, 1267,
	605, 2332,
	-2, 2323,
	-1, 1268,
	605, 2333,
	-2, 2324,
	-1, 1369,
	188, 2682,
	521, 2682,
	588, 2682,
	607, 2682,
	-2, 0,
	-1, 1374,
	1, 691,
	608, 691,
	-2, 1450,
	-1, 1502,
	364, 2297,
	421, 2297,
	464, 2297,
	598, 2297,
	-2, 2287,
	-1, 1513,
	609, 2297,
	-2, 2299,
	-1, 1521,
	1, 1298,
	426, 1257,
	464, 1257,
	581, 1257,
	585, 1257,
	604, 1298,
	606, 1298,
	608, 1298,
	-2, 1587,
	-1, 1527,
	204, 1395,
	223, 1395,
	434, 1395,
	-2, 0,
	-1, 1573,
	405, 1073,
	558, 1073,
	-2, 405,
	-1, 1590,
	43, 2295,
	-2, 1039,
	-1, 1597,
	1, 1298,
	604, 1298,
	606, 1298,
	608, 1298,
	-2, 1587,
	-1, 1605,
	4, 1323,
	21, 1323,
	22, 1323,
	23, 1323,
	24, 1323,
	25, 1323,
	26, 1323,
	27, 1323,
	29, 1323,
	30, 1323,
	36, 1323,
	41, 1323,
	42, 1323,
	44, 1323,
	45, 1323,
	46, 1323,
	47, 1323,
	48, 1323,
	49, 1323,
	50, 1323,
	51, 1323,
	53, 1323,
	54, 1323,
	55, 1323,
	56, 1323,
	58, 1323,
	59, 1323,
	60, 1323,
	61, 1323,
	62, 1323,
	63, 1323,
	64, 1323,
	68, 1323,
	69, 1323,
	70, 1323,
	71, 1323,
	73, 1323,
	74, 1323,
	75, 1323,
	79, 1323,
	80, 1323,
	81, 1323,
	82, 1323,
	83, 1323,
	84, 1323,
	85, 1323,
	88, 1323,
	89, 1323,
	90, 1323,
	91, 1323,
	92, 1323,
	94, 1323,
	96, 1323,
	97, 1323,
	98, 1323,
	99, 1323,
	100, 1323,
	101, 1323,
	103, 1323,
	104, 1323,
	105, 1323,
	107, 1323,
	108, 1323,
	109, 1323,
	117, 1323,
	118, 1323,
	119, 1323,
	120, 1323,
	121, 1323,
	123, 1323,
	124, 1323,
	125, 1323,
	126, 1323,
	128, 1323,
	129, 1323,
	130, 1323,
	132, 1323,
	133, 1323,
	134, 1323,
	136, 1323,
	137, 1323,
	138, 1323,
	141, 1323,
	142, 1323,
	143, 1323,
	145, 1323,
	146, 1323,
	147, 1323,
	149, 1323,
	150, 1323,
	151, 1323,
	153, 1323,
	154, 1323,
	155, 1323,
	156, 1323,
	157, 1323,
	158, 1323,
	159, 1323,
	160, 1323,
	161, 1323,
	162, 1323,
	163, 1323,
	164, 1323,
	165, 1323,
	166, 1323,
	167, 1323,
	168, 1323,
	176, 1323,
	177, 1323,
	178, 1323,
	179, 1323,
	183, 1323,
	185, 1323,
	186, 1323,
	190, 1323,
	191, 1323,
	192, 1323,
	193, 1323,
	194, 1323,
	195, 1323,
	196, 1323,
	197, 1323,
	198, 1323,
	199, 1323,
	200, 1323,
	201, 1323,
	202, 1323,
	203, 1323,
	205, 1323,
	206, 1323,
	208, 1323,
	209, 1323,
	211, 1323,
	212, 1323,
	213, 1323,
	214, 1323,
	215, 1323,
	216, 1323,
	217, 1323,
	218, 1323,
	219, 1323,
	221, 1323,
	222, 1323,
	224, 1323,
	225, 1323,
	226, 1323,
	227, 1323,
	228, 1323,
	233, 1323,
	234, 1323,
	235, 1323,
	236, 1323,
	239, 1323,
	240, 1323,
	241, 1323,
	243, 1323,
	245, 1323,
	246, 1323,
	248, 1323,
	250, 1323,
	251, 1323,
	252, 1323,
	254, 1323,
	258, 1323,
	259, 1323,
	260, 1323,
	261, 1323,
	262, 1323,
	263, 1323,
	265, 1323,
	266, 1323,
	267, 1323,
	269, 1323,
	270, 1323,
	272, 1323,
	273, 1323,
	276, 1323,
	277, 1323,
	278, 1323,
	279, 1323,
	280, 1323,
	281, 1323,
	282, 1323,
	285, 1323,
	286, 1323,
	287, 1323,
	288, 1323,
	290, 1323,
	291, 1323,
	292, 1323,
	293, 1323,
	294, 1323,
	295, 1323,
	296, 1323,
	297, 1323,
	298, 1323,
	299, 1323,
	300, 1323,
	301, 1323,
	302, 1323,
	303, 1323,
	304, 1323,
	305, 1323,
	306, 1323,
	307, 1323,
	308, 1323,
	309, 1323,
	310, 1323,
	311, 1323,
	313, 1323,
	315, 1323,
	316, 1323,
	317, 1323,
	318, 1323,
	319, 1323,
	320, 1323,
	321, 1323,
	322, 1323,
	323, 1323,
	324, 1323,
	325, 1323,
	326, 1323,
	327, 1323,
	328, 1323,
	329, 1323,
	331, 1323,
	332, 1323,
	336, 1323,
	337, 1323,
	338, 1323,
	340, 1323,
	341, 1323,
	342, 1323,
	343, 1323,
	344, 1323,
	347, 1323,
	349, 1323,
	351, 1323,
	352, 1323,
	353, 1323,
	356, 1323,
	357, 1323,
	358, 1323,
	360, 1323,
	362, 1323,
	363, 1323,
	364, 1323,
	365, 1323,
	366, 1323,
	367, 1323,
	368, 1323,
	369, 1323,
	370, 1323,
	371, 1323,
	372, 1323,
	373, 1323,
	374, 1323,
	376, 1323,
	377, 1323,
	378, 1323,
	379, 1323,
	380, 1323,
	381, 1323,
	382, 1323,
	383, 1323,
	384, 1323,
	385, 1323,
	386, 1323,
	387, 1323,
	388, 1323,
	389, 1323,
	390, 1323,
	392, 1323,
	393, 1323,
	395, 1323,
	396, 1323,
	397, 1323,
	398, 1323,
	399, 1323,
	400, 1323,
	401, 1323,
	402, 1323,
	403, 1323,
	404, 1323,
	405, 1323,
	406, 1323,
	407, 1323,
	409, 1323,
	411, 1323,
	412, 1323,
	413, 1323,
	419, 1323,
	421, 1323,
	422, 1323,
	423, 1323,
	424, 1323,
	425, 1323,
	426, 1323,
	427, 1323,
	428, 1323,
	429, 1323,
	430, 1323,
	432, 1323,
	433, 1323,
	434, 1323,
	436, 1323,
	437, 1323,
	438, 1323,
	439, 1323,
	440, 1323,
	441, 1323,
	442, 1323,
	444, 1323,
	445, 1323,
	446, 1323,
	447, 1323,
	448, 1323,
	449, 1323,
	450, 1323,
	451, 1323,
	452, 1323,
	453, 1323,
	454, 1323,
	455, 1323,
	457, 1323,
	458, 1323,
	459, 1323,
	460, 1323,
	461, 1323,
	462, 1323,
	464, 1323,
	465, 1323,
	466, 1323,
	467, 1323,
	468, 1323,
	469, 1323,
	471, 1323,
	472, 1323,
	473, 1323,
	474, 1323,
	475, 1323,
	476, 1323,
	477, 1323,
	478, 1323,
	480, 1323,
	482, 1323,
	483, 1323,
	484, 1323,
	485, 1323,
	486, 1323,
	487, 1323,
	488, 1323,
	489, 1323,
	490, 1323,
	491, 1323,
	492, 1323,
	493, 1323,
	494, 1323,
	495, 1323,
	496, 1323,
	497, 1323,
	498, 1323,
	500, 1323,
	501, 1323,
	503, 1323,
	504, 1323,
	506, 1323,
	507, 1323,
	508, 1323,
	509, 1323,
	510, 1323,
	511, 1323,
	512, 1323,
	513, 1323,
	514, 1323,
	516, 1323,
	517, 1323,
	518, 1323,
	519, 1323,
	520, 1323,
	522, 1323,
	524, 1323,
	525, 1323,
	526, 1323,
	527, 1323,
	528, 1323,
	529, 1323,
	531, 1323,
	532, 1323,
	533, 1323,
	534, 1323,
	535, 1323,
	536, 1323,
	537, 1323,
	540, 1323,
	541, 1323,
	542, 1323,
	543, 1323,
	544, 1323,
	545, 1323,
	546, 1323,
	548, 1323,
	551, 1323,
	552, 1323,
	553, 1323,
	554, 1323,
	555, 1323,
	556, 1323,
	558, 1323,
	559, 1323,
	560, 1323,
	561, 1323,
	562, 1323,
	563, 1323,
	564, 1323,
	569, 1323,
	570, 1323,
	571, 1323,
	572, 1323,
	573, 1323,
	574, 1323,
	-2, 0,
	-1, 1628,
	1, 550,
	604, 550,
	606, 550,
	608, 550,
	-2, 1558,
	-1, 1631,
	4, 2761,
	11, 2761,
	12, 2761,
	14, 2761,
	15, 2761,
	16, 2761,
	17, 2761,
	18, 2761,
	19, 2761,
	21, 2761,
	22, 2761,
	23, 2761,
	24, 2761,
	25, 2761,
	26, 2761,
	27, 2761,
	29, 2761,
	30, 2761,
	33, 2761,
	34, 2761,
	36, 2761,
	38, 2761,
	41, 2761,
	42, 2761,
	44, 2761,
	45, 2761,
	46, 2761,
	47, 2761,
	48, 2761,
	49, 2761,
	50, 2761,
	51, 2761,
	53, 2761,
	54, 2761,
	55, 2761,
	56, 2761,
	58, 2761,
	59, 2761,
	60, 2761,
	61, 2761,
	62, 2761,
	63, 2761,
	64, 2761,
	67, 2761,
	68, 2761,
	69, 2761,
	70, 2761,
	71, 2761,
	73, 2761,
	74, 2761,
	75, 2761,
	76, 2761,
	79, 2761,
	80, 2761,
	81, 2761,
	82, 2761,
	83, 2761,
	84, 2761,
	85, 2761,
	86, 2761,
	88, 2761,
	89, 2761,
	90, 2761,
	91, 2761,
	92, 2761,
	94, 2761,
	95, 2761,
	96, 2761,
	97, 2761,
	98, 2761,
	99, 2761,
	100, 2761,
	101, 2761,
	103, 2761,
	104, 2761,
	105, 2761,
	106, 2761,
	107, 2761,
	108, 2761,
	109, 2761,
	117, 2761,
	118, 2761,
	119, 2761,
	120, 2761,
	121, 2761,
	123, 2761,
	124, 2761,
	125, 2761,
	126, 2761,
	128, 2761,
	129, 2761,
	130, 2761,
	132, 2761,
	133, 2761,
	134, 2761,
	136, 2761,
	137, 2761,
	138, 2761,
	141, 2761,
	142, 2761,
	143, 2761,
	145, 2761,
	146, 2761,
	147, 2761,
	149, 2761,
	150, 2761,
	151, 2761,
	153, 2761,
	154, 2761,
	155, 2761,
	156, 2761,
	157, 2761,
	158, 2761,
	159, 2761,
	160, 2761,
	161, 2761,
	162, 2761,
	163, 2761,
	164, 2761,
	165, 2761,
	166, 2761,
	167, 2761,
	168, 2761,
	172, 2761,
	173, 2761,
	174, 2761,
	175, 2761,
	176, 2761,
	177, 2761,
	178, 2761,
	179, 2761,
	182, 2761,
	183, 2761,
	185, 2761,
	186, 2761,
	189, 2761,
	190, 2761,
	191, 2761,
	192, 2761,
	193, 2761,
	194, 2761,
	195, 2761,
	196, 2761,
	197, 2761,
	198, 2761,
	199, 2761,
	200, 2761,
	201, 2761,
	202, 2761,
	203, 2761,
	205, 2761,
	206, 2761,
	208, 2761,
	209, 2761,
	211, 2761,
	212, 2761,
	213, 2761,
	214, 2761,
	215, 2761,
	216, 2761,
	217, 2761,
	218, 2761,
	219, 2761,
	220, 2761,
	221, 2761,
	222, 2761,
	223, 2761,
	224, 2761,
	225, 2761,
	226, 2761,
	227, 2761,
	228, 2761,
	230, 2761,
	231, 2761,
	233, 2761,
	234, 2761,
	235, 2761,
	236, 2761,
	238, 2761,
	239, 2761,
	240, 2761,
	241, 2761,
	243, 2761,
	245, 2761,
	246, 2761,
	247, 2761,
	248, 2761,
	249, 2761,
	250, 2761,
	251, 2761,
	252, 2761,
	253, 2761,
	254, 2761,
	256, 2761,
	257, 2761,
	258, 2761,
	259, 2761,
	260, 2761,
	261, 2761,
	262, 2761,
	263, 2761,
	265, 2761,
	266, 2761,
	267, 2761,
	269, 2761,
	270, 2761,
	271, 2761,
	272, 2761,
	273, 2761,
	274, 2761,
	276, 2761,
	277, 2761,
	278, 2761,
	279, 2761,
	280, 2761,
	281, 2761,
	282, 2761,
	285, 2761,
	286, 2761,
	287, 2761,
	288, 2761,
	289, 2761,
	290, 2761,
	291, 2761,
	292, 2761,
	293, 2761,
	294, 2761,
	295, 2761,
	296, 2761,
	297, 2761,
	298, 2761,
	299, 2761,
	300, 2761,
	301, 2761,
	302, 2761,
	303, 2761,
	304, 2761,
	305, 2761,
	306, 2761,
	307, 2761,
	308, 2761,
	309, 2761,
	310, 2761,
	311, 2761,
	313, 2761,
	314, 2761,
	315, 2761,
	316, 2761,
	317, 2761,
	318, 2761,
	319, 2761,
	320, 2761,
	321, 2761,
	322, 2761,
	323, 2761,
	324, 2761,
	325, 2761,
	326, 2761,
	327, 2761,
	328, 2761,
	329, 2761,
	331, 2761,
	332, 2761,
	335, 2761,
	336, 2761,
	337, 2761,
	338, 2761,
	340, 2761,
	341, 2761,
	342, 2761,
	343, 2761,
	344, 2761,
	347, 2761,
	351, 2761,
	352, 2761,
	353, 2761,
	354, 2761,
	356, 2761,
	357, 2761,
	358, 2761,
	360, 2761,
	362, 2761,
	363, 2761,
	364, 2761,
	365, 2761,
	366, 2761,
	367, 2761,
	368, 2761,
	369, 2761,
	370, 2761,
	371, 2761,
	372, 2761,
	373, 2761,
	374, 2761,
	376, 2761,
	377, 2761,
	378, 2761,
	379, 2761,
	380, 2761,
	381, 2761,
	382, 2761,
	383, 2761,
	384, 2761,
	385, 2761,
	386, 2761,
	387, 2761,
	388, 2761,
	389, 2761,
	390, 2761,
	392, 2761,
	393, 2761,
	395, 2761,
	396, 2761,
	397, 2761,
	398, 2761,
	399, 2761,
	400, 2761,
	401, 2761,
	402, 2761,
	403, 2761,
	404, 2761,
	405, 2761,
	406, 2761,
	407, 2761,
	409, 2761,
	411, 2761,
	412, 2761,
	413, 2761,
	419, 2761,
	420, 2761,
	421, 2761,
	422, 2761,
	423, 2761,
	424, 2761,
	425, 2761,
	426, 2761,
	427, 2761,
	428, 2761,
	429, 2761,
	430, 2761,
	432, 2761,
	433, 2761,
	434, 2761,
	435, 2761,
	436, 2761,
	437, 2761,
	438, 2761,
	439, 2761,
	440, 2761,
	441, 2761,
	442, 2761,
	443, 2761,
	444, 2761,
	445, 2761,
	446, 2761,
	447, 2761,
	448, 2761,
	449, 2761,
	450, 2761,
	451, 2761,
	452, 2761,
	453, 2761,
	454, 2761,
	455, 2761,
	457, 2761,
	458, 2761,
	459, 2761,
	460, 2761,
	461, 2761,
	462, 2761,
	464, 2761,
	465, 2761,
	466, 2761,
	467, 2761,
	468, 2761,
	469, 2761,
	470, 2761,
	471, 2761,
	472, 2761,
	473, 2761,
	474, 2761,
	475, 2761,
	476, 2761,
	477, 2761,
	478, 2761,
	480, 2761,
	482, 2761,
	483, 2761,
	484, 2761,
	485, 2761,
	486, 2761,
	487, 2761,
	488, 2761,
	489, 2761,
	490, 2761,
	491, 2761,
	492, 2761,
	493, 2761,
	494, 2761,
	495, 2761,
	496, 2761,
	497, 2761,
	498, 2761,
	500, 2761,
	501, 2761,
	502, 2761,
	503, 2761,
	504, 2761,
	506, 2761,
	507, 2761,
	508, 2761,
	509, 2761,
	510, 2761,
	511, 2761,
	512, 2761,
	513, 2761,
	514, 2761,
	516, 2761,
	517, 2761,
	518, 2761,
	519, 2761,
	520, 2761,
	522, 2761,
	524, 2761,
	525, 2761,
	526, 2761,
	527, 2761,
	528, 2761,
	529, 2761,
	531, 2761,
	532, 2761,
	533, 2761,
	534, 2761,
	535, 2761,
	536, 2761,
	537, 2761,
	540, 2761,
	541, 2761,
	542, 2761,
	543, 2761,
	544, 2761,
	545, 2761,
	546, 2761,
	548, 2761,
	551, 2761,
	552, 2761,
	553, 2761,
	554, 2761,
	555, 2761,
	556, 2761,
	558, 2761,
	559, 2761,
	560, 2761,
	561, 2761,
	562, 2761,
	563, 2761,
	564, 2761,
	569, 2761,
	570, 2761,
	571, 2761,
	572, 2761,
	573, 2761,
	574, 2761,
	575, 2761,
	577, 2761,
	586, 2761,
	587, 2761,
	588, 2761,
	589, 2761,
	590, 2761,
	591, 2761,
	593, 2761,
	594, 2761,
	595, 2761,
	596, 2761,
	597, 2761,
	598, 2761,
	599, 2761,
	600, 2761,
	601, 2761,
	603, 2761,
	606, 2761,
	607, 2761,
	609, 2761,
	610, 2761,
	-2, 0,
	-1, 1636,
	188, 2639,
	521, 2639,
	588, 2639,
	607, 2639,
	-2, 0,
	-1, 1685,
	397, 884,
	462, 884,
	504, 884,
	526, 884,
	-2, 0,
	-1, 1696,
	1, 1395,
	604, 1395,
	606, 1395,
	608, 1395,
	-2, 0,
	-1, 1713,
	1, 879,
	604, 879,
	606, 879,
	608, 879,
	-2, 0,
	-1, 1714,
	1, 923,
	604, 923,
	606, 923,
	608, 923,
	-2, 0,
	-1, 1715,
	1, 931,
	604, 931,
	606, 931,
	608, 931,
	-2, 0,
	-1, 1718,
	1, 888,
	604, 888,
	606, 888,
	608, 888,
	-2, 0,
	-1, 1720,
	1, 894,
	604, 894,
	606, 894,
	608, 894,
	-2, 0,
	-1, 1723,
	1, 890,
	604, 890,
	606, 890,
	608, 890,
	-2, 0,
	-1, 1728,
	1, 904,
	604, 904,
	606, 904,
	608, 904,
	-2, 0,
	-1, 1759,
	1, 2622,
	604, 2622,
	606, 2622,
	607, 2622,
	608, 2622,
	-2, 0,
	-1, 1763,
	1, 976,
	604, 976,
	606, 976,
	608, 976,
	-2, 0,
	-1, 1778,
	1, 1445,
	608, 1445,
	-2, 1450,
	-1, 1781,
	171, 1601,
	184, 1601,
	275, 1601,
	345, 1601,
	-2, 1539,
	-1, 1883,
	152, 1560,
	171, 1560,
	184, 1560,
	242, 1560,
	275, 1560,
	345, 1560,
	355, 1560,
	538, 1560,
	-2, 2008,
	-1, 1944,
	606, 2183,
	-2, 0,
	-1, 1979,
	152, 1560,
	171, 1560,
	184, 1560,
	242, 1560,
	275, 1560,
	345, 1560,
	355, 1560,
	538, 1560,
	-2, 1690,
	-1, 2016,
	521, 2636,
	607, 2636,
	610, 2636,
	-2, 0,
	-1, 2033,
	605, 1831,
	-2, 1819,
	-1, 2065,
	188, 2636,
	607, 2636,
	610, 2636,
	-2, 0,
	-1, 2107,
	1, 693,
	608, 693,
	-2, 1450,
	-1, 2248,
	223, 259,
	-2, 2331,
	-1, 2249,
	223, 260,
	-2, 312,
	-1, 2356,
	1, 881,
	604, 881,
	606, 881,
	608, 881,
	-2, 0,
	-1, 2357,
	1, 925,
	604, 925,
	606, 925,
	608, 925,
	-2, 0,
	-1, 2358,
	1, 933,
	604, 933,
	606, 933,
	608, 933,
	-2, 0,
	-1, 2359,
	1, 978,
	604, 978,
	606, 978,
	608, 978,
	-2, 0,
	-1, 2400,
	1, 906,
	604, 906,
	606, 906,
	608, 906,
	-2, 0,
	-1, 2418,
	1, 961,
	604, 961,
	606, 961,
	608, 961,
	-2, 0,
	-1, 2463,
	441, 1628,
	442, 1628,
	-2, 1864,
	-1, 2496,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1884,
	-1, 2497,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1885,
	-1, 2498,
	95, 0,
	256, 0,
	257, 0,
	590, 0,
	591, 0,
	-2, 1886,
	-1, 2499,
	95, 0,
	256, 0,
	257, 0,
	590, 0,
	591, 0,
	-2, 1887,
	-1, 2500,
	95, 0,
	256, 0,
	257, 0,
	590, 0,
	591, 0,
	-2, 1888,
	-1, 2501,
	95, 0,
	256, 0,
	257, 0,
	590, 0,
	591, 0,
	-2, 1889,
	-1, 2502,
	95, 0,
	256, 0,
	257, 0,
	590, 0,
	591, 0,
	-2, 1890,
	-1, 2503,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1891,
	-1, 2515,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1903,
	-1, 2516,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1904,
	-1, 2517,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1905,
	-1, 2521,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1912,
	-1, 2527,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1916,
	-1, 2529,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1924,
	-1, 2530,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1925,
	-1, 2531,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1926,
	-1, 2532,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1927,
	-1, 2706,
	5, 2335,
	188, 2194,
	605, 2332,
	-2, 2323,
	-1, 2707,
	188, 2195,
	-2, 2712,
	-1, 2708,
	188, 2196,
	-2, 2525,
	-1, 2709,
	188, 2197,
	-2, 2405,
	-1, 2710,
	188, 2198,
	-2, 2462,
	-1, 2711,
	188, 2199,
	-2, 2510,
	-1, 2712,
	188, 2200,
	-2, 2634,
	-1, 2713,
	188, 2201,
	-2, 1991,
	-1, 2784,
	1, 1691,
	2, 1691,
	106, 1691,
	152, 1691,
	171, 1691,
	184, 1691,
	189, 1691,
	207, 1691,
	210, 1691,
	238, 1691,
	242, 1691,
	253, 1691,
	271, 1691,
	275, 1691,
	314, 1691,
	345, 1691,
	349, 1691,
	355, 1691,
	431, 1691,
	435, 1691,
	538, 1691,
	549, 1691,
	566, 1691,
	567, 1691,
	568, 1691,
	578, 1691,
	604, 1691,
	606, 1691,
	608, 1691,
	610, 1691,
	-2, 1690,
	-1, 2797,
	605, 2304,
	-2, 2318,
	-1, 2799,
	1, 329,
	566, 329,
	-2, 1587,
	-1, 2828,
	605, 1830,
	-2, 1820,
	-1, 3019,
	1, 1298,
	426, 1257,
	464, 1257,
	581, 1257,
	585, 1257,
	604, 1298,
	606, 1298,
	608, 1298,
	-2, 1587,
	-1, 3205,
	350, 1631,
	-2, 2751,
	-1, 3206,
	350, 1632,
	-2, 2619,
	-1, 3210,
	441, 2260,
	442, 2260,
	-2, 1989,
	-1, 3211,
	441, 2264,
	442, 2264,
	-2, 1990,
	-1, 3212,
	441, 2261,
	442, 2261,
	-2, 1989,
	-1, 3213,
	441, 2265,
	442, 2265,
	-2, 1990,
	-1, 3227,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1914,
	-1, 3228,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1918,
	-1, 3234,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1920,
	-1, 3458,
	1, 688,
	604, 688,
	606, 688,
	608, 688,
	-2, 1450,
	-1, 3624,
	43, 2295,
	-2, 1040,
	-1, 3629,
	1, 1298,
	604, 1298,
	606, 1298,
	608, 1298,
	-2, 1587,
	-1, 3740,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1922,
	-1, 3747,
	247, 0,
	249, 0,
	335, 0,
	-2, 1941,
	-1, 3815,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1970,
	-1, 3816,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1971,
	-1, 3817,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1972,
	-1, 3821,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1976,
	-1, 3822,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1977,
	-1, 3823,
	14, 0,
	15, 0,
	16, 0,
	586, 0,
	587, 0,
	588, 0,
	-2, 1978,
	-1, 3870,
	605, 2305,
	-2, 2319,
	-1, 4045,
	607, 2868,
	-2, 1513,
	-1, 4106,
	247, 0,
	249, 0,
	335, 0,
	-2, 1942,
	-1, 4109,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1945,
	-1, 4110,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1947,
	-1, 4208,
	607, 2320,
	-2, 1333,
	-1, 4362,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1946,
	-1, 4363,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 1948,
	-1, 4374,
	247, 0,
	-2, 1981,
	-1, 4561,
	247, 0,
	-2, 1982,
	-1, 4761,
	50, 0,
	220, 0,
	274, 0,
	470, 0,
	575, 0,
	589, 0,
	-2, 2715,
}

const sqlPrivate = 57344

const sqlLast = 133812

var sqlAct = [...]int{
	273, 4878, 3613, 4483, 4957, 3365, 4754, 4594, 4819, 3094,
	4865, 4423, 4742, 4753, 4602, 4760, 2890, 4771, 3612, 4630,
	4894, 3107, 4626, 4651, 2157, 2245, 4772, 1260, 4687, 4729,
	4710, 4089, 4204, 4490, 4773, 4832, 4707, 2960, 2934, 4514,
	4405, 4565, 4468, 3780, 4759, 4312, 4317, 4278, 3732, 4428,
	3064, 4383, 4351, 3479, 2473, 4037, 4029, 1341, 4299, 4292,
	1345, 1271, 4499, 4301, 3646, 3964, 4205, 3219, 4185, 3539,
	4253, 1790, 2020, 2089, 714, 825, 4528, 4322, 1334, 2739,
	2544, 3640, 4010, 3608, 3992, 2294, 2076, 3994, 2483, 785,
	3482, 2141, 2321, 4379, 3687, 2165, 3116, 3597, 1408, 2474,
	1985, 825, 2973, 3131, 1080, 3118, 3689, 3083, 3050, 2332,
	3590, 3589, 1336, 3410, 3388, 3873, 4088, 1499, 1652, 3348,
	3380, 3080, 3371, 2003, 902, 4145, 898, 4, 3126, 725,
	3369, 1954, 3078, 2330, 3115, 3109, 3095, 2234, 4866, 1693,
	2232, 3501, 3026, 1088, 179, 2176, 2892, 2192, 2777, 3347,
	1930, 3841, 2480, 2622, 1861, 4566, 1891, 2557, 3203, 3476,
	1506, 893, 3125, 3054, 1339, 1592, 781, 2233, 267, 820,
	2216, 2990, 2209, 266, 3065, 2228, 2149, 1389, 265, 2145,
	2776, 2087, 2779, 2757, 1141, 2613, 1778, 2140, 2541, 2933,
	1313, 2135, 1955, 1146, 2462, 2445, 2811, 2443, 1629, 3610,
	3088, 758, 2281, 1650, 1595, 1324, 2915, 967, 3417, 2736,
	826, 4652, 3119, 827, 2616, 2878, 1376, 2810, 1964, 1925,
	822, 2766, 1254, 1974, 1971, 3986, 1233, 2747, 2594, 2021,
	2668, 1875, 701, 766, 1791, 2444, 723, 179, 2702, 1728,
	1268, 188, 1792, 831, 1713, 2307, 189, 2446, 834, 777,
	1250, 1627, 1148, 2242, 1531, 1620, 2164, 4820, 2280, 4879,
	2467, 1122, 3061, 718, 108, 44, 43, 41, 32, 831,
	30, 1797, 1231, 28, 834, 815, 874, 3257, 715, 1256,
	726, 741, 1777, 1542, 1091, 988, 3855, 3251, 3856, 875,
	73, 2078, 4970, 2078, 4960, 2078, 2756, 2078, 3665, 1719,
	3367, 4944, 2078, 2078, 4943, 2756, 4933, 74, 2756, 4914,
	2254, 1191, 4912, 4427, 4851, 4808, 4427, 4800, 2254, 4809,
	4398, 917, 4797, 78, 1535, 1084, 2756, 4795, 4792, 1659,
	4789, 2756, 4793, 4757, 4790, 4756, 4755, 2254, 4750, 2254,
	2099, 4749, 2099, 4740, 3655, 2099, 1251, 4427, 1327, 4738,
	4735, 4705, 4676, 4427, 4502, 4427, 2819, 4669, 4395, 2254,
	4668, 2756, 1248, 87, 2756, 4663, 4662, 4656, 4622, 4427,
	4427, 2254, 4269, 4563, 1645, 4545, 4542, 2819, 4539, 4074,
	2254, 4492, 4427, 4446, 4445, 4493, 4434, 2254, 2254, 4433,
	2254, 1385, 4426, 4427, 4390, 1074, 4427, 4364, 2254, 4341,
	3656, 2819, 4330, 2099, 900, 4248, 3665, 4231, 4166, 2756,
	3426, 2756, 4108, 3443, 1234, 1234, 2819, 49, 4053, 107,
	1084, 1065, 3682, 2331, 93, 104, 1064, 1385, 2839, 3665,
	3441, 2570, 2571, 2572, 2589, 2590, 2591, 4047, 1284, 2749,
	4008, 3682, 1807, 1808, 4009, 3865, 1291, 2096, 3863, 3866,
	2254, 2592, 3864, 3848, 3764, 1085, 2624, 2756, 2254, 3845,
	3760, 3681, 3672, 2254, 2756, 3682, 3673, 1079, 1556, 3364,
	3060, 3359, 1810, 2756, 3358, 2756, 3309, 2815, 2756, 93,
	3310, 1544, 3307, 94, 1863, 3299, 3308, 3297, 3268, 3300,
	3266, 2756, 2756, 3135, 3105, 3218, 3267, 2099, 2317, 2096,
	3104, 1807, 1808, 2582, 2317, 1235, 2862, 1809, 2756, 2818,
	2756, 1544, 2578, 2819, 2808, 4677, 2801, 2254, 2756, 2254,
	2254, 2755, 2316, 4567, 1838, 2756, 2317, 1285, 1237, 4558,
	1238, 1810, 1807, 1808, 4546, 1840, 1841, 1842, 1851, 1852,
	1853, 4502, 2099, 3845, 2748, 4310, 4269, 2096, 1285, 4232,
	4074, 3673, 2963, 2169, 1844, 1838, 1544, 1863, 2877, 2114,
	2875, 2077, 1810, 2093, 3056, 2253, 1809, 2983, 1950, 1530,
	3947, 1857, 3735, 3709, 1972, 2221, 1829, 3657, 1695, 2793,
	2756, 2792, 2791, 2790, 2789, 1826, 237, 237, 1863, 2583,
	2584, 2585, 2586, 3318, 3319, 1239, 3658, 1809, 1236, 2577,
	1073, 1072, 1071, 1070, 1807, 1808, 1069, 1829, 1068, 1067,
	1063, 3318, 3319, 1815, 1062, 1139, 1826, 3177, 2651, 1061,
	1060, 1059, 1058, 1057, 1056, 1055, 1054, 1838, 1053, 3318,
	3319, 1052, 97, 1051, 1810, 239, 239, 1050, 1049, 1048,
	1047, 4102, 1046, 1028, 965, 964, 3318, 3319, 963, 962,
	961, 960, 959, 958, 957, 2079, 956, 2079, 955, 2079,
	1863, 2079, 1832, 1833, 1834, 1835, 2079, 2079, 954, 1809,
	953, 952, 1815, 2587, 2588, 3256, 951, 950, 949, 948,
	947, 946, 1555, 945, 238, 238, 944, 187, 100, 943,
	942, 103, 941, 1832, 1833, 1834, 1835, 940, 231, 939,
	1550, 938, 937, 1815, 3333, 936, 2580, 232, 935, 934,
	933, 932, 931, 930, 920, 919, 915, 237, 914, 908,
	1837, 1839, 907, 3318, 3319, 901, 3336, 3337, 3338, 1144,
	150, 892, 891, 848, 847, 190, 190, 846, 4549, 4324,
	4161, 1848, 2096, 845, 1858, 4104, 1824, 1825, 837, 836,
	835, 1837, 1839, 237, 801, 792, 791, 790, 772, 1350,
	1146, 261, 260, 259, 3324, 258, 239, 257, 1854, 256,
	1855, 255, 237, 254, 253, 1815, 252, 1824, 1825, 1830,
	251, 250, 3324, 237, 1543, 150, 249, 1146, 1146, 1146,
	248, 247, 154, 246, 245, 1846, 1860, 244, 3333, 243,
	3324, 242, 239, 241, 240, 1411, 4120, 192, 3887, 1411,
	1830, 3859, 3683, 3413, 1535, 238, 1350, 3324, 3279, 4547,
	3262, 239, 3655, 1837, 1839, 3253, 3159, 3036, 237, 231,
	3362, 2823, 239, 2798, 2392, 1285, 2649, 2254, 232, 2849,
	1146, 2077, 1146, 2096, 1146, 3091, 191, 2783, 2093, 2438,
	1350, 238, 2096, 2324, 2635, 1860, 1856, 1933, 1975, 2633,
	2581, 2748, 1721, 3073, 1932, 231, 190, 1663, 1285, 2143,
	238, 3334, 3363, 2098, 232, 1845, 1350, 239, 1393, 1394,
	1395, 238, 1830, 1509, 231, 1998, 1860, 1804, 4782, 1514,
	1380, 1902, 1936, 232, 3324, 231, 1350, 1538, 1137, 3318,
	3319, 1933, 190, 1350, 232, 3318, 3319, 3334, 1932, 1397,
	1836, 1146, 1270, 1146, 1549, 4781, 4778, 1350, 4758, 1862,
	4737, 190, 237, 1146, 3334, 1146, 238, 4637, 4555, 4570,
	1534, 4378, 190, 1831, 4418, 1335, 1931, 1247, 4331, 2323,
	231, 1836, 4309, 1318, 1321, 4172, 1372, 1860, 4326, 232,
	4143, 4142, 4136, 1331, 4135, 4134, 1601, 1604, 1860, 3340,
	4127, 4126, 4124, 4119, 1831, 1860, 1544, 1374, 4116, 1263,
	1893, 239, 4115, 1350, 4007, 3891, 3890, 190, 1900, 1519,
	3889, 4013, 3869, 1860, 3836, 1502, 3835, 3834, 1513, 1335,
	3756, 1849, 1862, 1146, 1649, 1358, 1146, 831, 3751, 3408,
	1860, 3334, 834, 2567, 2568, 2569, 2593, 2579, 2573, 3355,
	2575, 2576, 2574, 2561, 2562, 2563, 2564, 2565, 2566, 3346,
	238, 3317, 1143, 1862, 3314, 3335, 1366, 1811, 1812, 1813,
	1814, 1816, 1817, 73, 231, 3313, 1831, 2297, 1590, 1533,
	179, 179, 1532, 232, 3311, 3306, 3305, 3304, 3301, 3298,
	74, 1664, 2619, 3278, 3261, 3254, 1335, 1335, 1632, 1634,
	3252, 3335, 3106, 2784, 2606, 1536, 78, 1804, 2261, 1895,
	3324, 190, 3945, 1893, 3318, 3319, 3324, 1860, 3335, 1803,
	1827, 1823, 2259, 1820, 1818, 1819, 1811, 1812, 1813, 1814,
	1816, 1817, 4964, 4904, 4903, 1862, 1847, 1146, 1146, 1146,
	1146, 1146, 1146, 1146, 1146, 4014, 87, 1821, 1822, 1828,
	1850, 1827, 1823, 3075, 1820, 1818, 1819, 1811, 1812, 1813,
	1814, 1816, 1817, 1087, 4867, 4818, 3433, 4130, 4816, 1272,
	1146, 4129, 1894, 3782, 1892, 4697, 1146, 1737, 1266, 4629,
	4613, 1623, 1380, 2620, 3360, 1380, 4610, 900, 4609, 4608,
	1404, 4588, 1496, 1501, 237, 3335, 1504, 4587, 4585, 1120,
	1085, 4569, 107, 4568, 4543, 4527, 4526, 93, 104, 1782,
	2547, 4512, 4509, 4508, 237, 4503, 1669, 3334, 3320, 3321,
	3322, 3323, 3325, 3326, 4442, 4413, 1820, 1818, 1819, 1811,
	1812, 1813, 1814, 1816, 1817, 1644, 3320, 3321, 3322, 3323,
	3325, 3326, 4376, 239, 4325, 2821, 4359, 1658, 4358, 4338,
	4337, 3329, 3327, 3328, 3320, 3321, 3322, 3323, 3325, 3326,
	4295, 4571, 2650, 239, 4270, 2621, 94, 2618, 1882, 1607,
	3328, 3320, 3321, 3322, 3323, 3325, 3326, 2553, 237, 4014,
	4298, 1146, 1146, 1146, 4160, 3324, 4141, 1146, 4075, 4067,
	4064, 3933, 238, 1860, 1268, 3932, 1268, 3915, 3914, 3912,
	1686, 3851, 1262, 3839, 3746, 1880, 231, 1805, 3684, 3666,
	3632, 1411, 238, 3556, 1722, 232, 3514, 3481, 3435, 3283,
	3282, 1146, 3277, 1783, 825, 3243, 231, 239, 237, 3049,
	2038, 825, 1939, 1938, 1937, 232, 1952, 1934, 3330, 3331,
	3332, 1926, 1924, 190, 2830, 3329, 3327, 3328, 3320, 3321,
	3322, 3323, 3325, 3326, 2829, 4550, 1787, 4168, 1779, 3074,
	2795, 237, 2788, 3090, 2754, 2631, 1961, 1879, 1786, 1997,
	1065, 3335, 1953, 1948, 1947, 1064, 238, 239, 1946, 1807,
	1808, 1945, 1781, 1944, 2126, 2125, 1935, 1943, 2134, 2136,
	231, 2008, 3334, 1942, 1800, 1801, 2325, 1941, 1940, 232,
	2011, 1807, 1808, 1921, 1920, 1919, 1146, 1918, 1917, 1810,
	239, 1350, 1916, 1958, 1959, 97, 1776, 1915, 1982, 1914,
	1913, 1912, 1911, 1910, 2623, 1909, 238, 190, 1908, 1907,
	1146, 1810, 1906, 1895, 1085, 1881, 4548, 1878, 1411, 1264,
	231, 179, 1873, 1621, 1809, 2083, 1927, 1928, 2085, 232,
	1365, 2159, 3405, 1289, 2090, 1234, 1280, 4112, 2092, 238,
	3886, 3862, 3854, 2095, 3265, 2786, 1809, 2132, 1860, 1626,
	187, 100, 4396, 231, 103, 3661, 4170, 190, 3885, 1894,
	2648, 3431, 232, 1876, 1993, 2105, 1392, 4901, 237, 237,
	3318, 3319, 831, 2104, 4234, 1390, 1513, 834, 2634, 831,
	237, 2006, 4893, 2632, 834, 2961, 2134, 2129, 901, 2134,
	190, 4611, 4504, 150, 2134, 4495, 1973, 4494, 1980, 1380,
	1983, 3329, 3327, 3328, 3320, 3321, 3322, 3323, 3325, 3326,
	4329, 4272, 3322, 3323, 3325, 3326, 4271, 239, 239, 4233,
	4163, 4774, 2617, 1513, 2012, 1951, 3335, 4079, 2081, 239,
	1815, 2061, 4078, 1391, 3517, 1385, 2218, 2204, 1916, 4077,
	1085, 2938, 4076, 1992, 1991, 1990, 1988, 3857, 1987, 1350,
	1350, 1986, 1916, 1977, 2832, 154, 3686, 4417, 3685, 1411,
	1246, 3668, 2032, 3667, 4847, 4845, 238, 238, 1975, 2018,
	192, 4500, 4017, 3733, 1774, 2988, 2107, 1933, 238, 3959,
	231, 231, 1385, 3303, 1932, 3302, 3548, 2103, 1685, 232,
	232, 3225, 231, 2120, 2920, 1388, 3483, 237, 1901, 3930,
	1904, 232, 2619, 2131, 1044, 3615, 4830, 3614, 2235, 191,
	1738, 2322, 3677, 4491, 4804, 2348, 1694, 190, 190, 4785,
	2199, 2035, 2208, 4770, 2298, 2213, 3598, 1385, 3132, 190,
	1695, 2236, 4021, 2169, 4004, 3961, 3956, 3938, 3706, 3456,
	2329, 2130, 2002, 4380, 3367, 3271, 239, 3784, 4779, 2614,
	1045, 2828, 1949, 2110, 1350, 1929, 1350, 4437, 1350, 2969,
	3606, 2291, 4409, 1600, 1526, 4219, 1361, 2246, 2251, 2137,
	2127, 1317, 4794, 4216, 1350, 1350, 2980, 3327, 3328, 3320,
	3321, 3322, 3323, 3325, 3326, 1350, 4791, 3651, 2917, 4603,
	2977, 2975, 2203, 2620, 2175, 238, 2202, 1350, 3907, 1350,
	1350, 1350, 1625, 2177, 4313, 4704, 4581, 3486, 3925, 231,
	3113, 3087, 2238, 2239, 3581, 4849, 4780, 1673, 232, 831,
	4848, 2968, 4440, 825, 834, 3158, 2181, 4436, 4415, 3028,
	3727, 2334, 2287, 1090, 1806, 3460, 2197, 3974, 4464, 4221,
	1567, 2863, 3432, 2406, 4959, 1146, 190, 1042, 4617, 1528,
	2916, 2404, 1040, 1038, 4457, 1036, 4448, 4262, 2292, 4261,
	3972, 1533, 1033, 4883, 1532, 2304, 3971, 3963, 3953, 3952,
	3950, 1626, 3949, 2881, 3937, 2621, 3902, 2618, 3901, 3587,
	1146, 2108, 2196, 2178, 2193, 2327, 2212, 1735, 2879, 1575,
	2347, 2822, 2352, 2290, 3084, 1024, 1736, 2881, 3586, 3425,
	3276, 3275, 3274, 3273, 3229, 2252, 3973, 1089, 1392, 2986,
	2985, 2982, 2879, 1083, 1146, 2121, 1146, 2971, 887, 2954,
	2953, 2453, 2948, 1146, 2947, 2312, 1146, 2946, 2038, 2038,
	1411, 2301, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
	1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
	1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
	1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 2314, 1146,
	2272, 1146, 1146, 1146, 1146, 1391, 2273, 1576, 2335, 4215,
	2451, 4438, 2437, 2455, 2310, 1623, 4410, 2309, 1734, 2309,
	2306, 831, 2182, 2240, 2442, 4217, 834, 1146, 2925, 1671,
	2924, 1146, 1146, 1082, 764, 2318, 1366, 2319, 764, 1146,
	1386, 3462, 2885, 1146, 2809, 1146, 1146, 1392, 1085, 2528,
	1085, 1780, 2664, 1411, 888, 2026, 2663, 2485, 2836, 1146,
	1146, 1146, 1146, 2813, 2623, 1146, 1146, 1146, 1146, 1146,
	1146, 1146, 1146, 2377, 2339, 3516, 1813, 1814, 1816, 1817,
	3483, 2356, 3546, 2236, 2918, 2416, 2138, 2139, 2183, 2184,
	2322, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
	2367, 1817, 4884, 1613, 1146, 1612, 1611, 1386, 1610, 2418,
	2595, 2596, 2179, 2918, 1391, 1375, 1268, 4357, 3707, 2430,
	2400, 2166, 1666, 1411, 2595, 2611, 2922, 2271, 2435, 1030,
	1717, 2344, 1268, 1263, 2479, 1263, 2206, 2466, 2894, 4178,
	1571, 1772, 1584, 2478, 2870, 2543, 1084, 2427, 1146, 1411,
	3138, 2659, 2543, 1589, 1625, 2162, 1529, 1717, 2180, 1382,
	1303, 2452, 2800, 2364, 2439, 2417, 2340, 3172, 2441, 1747,
	2705, 2705, 2719, 2908, 2595, 2454, 2942, 2740, 2742, 3201,
	2440, 2447, 2617, 2746, 2559, 2167, 2168, 2481, 2482, 1065,
	3326, 2410, 1065, 1065, 2470, 2357, 2614, 2471, 2472, 2398,
	4235, 2610, 3922, 4177, 2935, 2936, 4916, 2935, 2936, 2453,
	2032, 2032, 2935, 2936, 2551, 2163, 1785, 2361, 1687, 3910,
	2907, 2549, 1714, 2311, 1683, 2771, 1382, 2796, 1751, 3716,
	3715, 2429, 1364, 3174, 4213, 2355, 2450, 1716, 2763, 4218,
	1667, 4473, 1387, 1596, 1386, 3547, 3216, 2623, 4260, 3183,
	1350, 1350, 2150, 2897, 1982, 4848, 2555, 2151, 928, 2358,
	2884, 3951, 4596, 763, 1716, 3773, 713, 763, 2451, 2035,
	2035, 1993, 3948, 2608, 3894, 2365, 1773, 2812, 4862, 3881,
	2185, 1733, 4776, 1234, 2884, 2979, 1715, 3593, 2525, 2169,
	2866, 3585, 708, 1085, 1411, 1594, 2816, 3544, 2762, 2981,
	1730, 1383, 1266, 1085, 1266, 2945, 1695, 1085, 2858, 1387,
	1384, 2868, 1695, 179, 2785, 2923, 2436, 2978, 2844, 3459,
	2701, 3920, 2852, 2731, 2848, 2007, 2835, 2744, 2038, 1081,
	2714, 2976, 2974, 2258, 2257, 2764, 2752, 2753, 2859, 2860,
	2768, 2769, 1335, 3208, 3209, 2770, 3934, 2775, 2869, 4200,
	2781, 2782, 2449, 1935, 1980, 4870, 4869, 2186, 890, 889,
	2855, 3186, 2807, 1382, 1347, 4919, 4837, 2194, 1383, 2867,
	2880, 2152, 1411, 1380, 765, 4094, 4093, 1384, 765, 3710,
	3215, 3594, 3770, 4193, 3649, 4598, 3648, 4186, 1350, 2156,
	4356, 1335, 3983, 3180, 1672, 2405, 1085, 2886, 4888, 2921,
	1034, 2831, 2150, 2403, 4184, 1034, 1034, 2151, 1035, 1146,
	1146, 2854, 1146, 4188, 4200, 1034, 1573, 1927, 1928, 2452,
	2426, 2843, 1335, 1335, 2623, 2846, 1262, 2847, 1262, 3935,
	2834, 2959, 2861, 2169, 3533, 825, 2883, 1350, 4194, 799,
	4211, 2853, 2200, 2838, 2972, 885, 1387, 884, 4193, 3984,
	4947, 2078, 3470, 2882, 4604, 2943, 4214, 2896, 2523, 39,
	4777, 2526, 2153, 2158, 3771, 3240, 3648, 2219, 1350, 4683,
	4744, 2927, 4745, 4897, 1104, 1963, 1748, 4624, 3098, 921,
	2864, 4187, 1350, 3525, 1350, 3023, 2195, 1385, 2001, 4401,
	4474, 3534, 3982, 3127, 2450, 3238, 4889, 3185, 2962, 1350,
	2017, 3591, 4472, 4194, 2428, 1383, 3071, 2066, 4470, 2068,
	1276, 4673, 2522, 2889, 1384, 2952, 1502, 2899, 2902, 2955,
	3559, 2152, 2937, 2939, 2940, 2941, 1570, 3067, 3182, 2189,
	3031, 2987, 3461, 2661, 3532, 3033, 3020, 3021, 2662, 2156,
	3526, 2665, 3024, 2666, 2667, 2154, 1302, 1146, 2363, 1513,
	2950, 797, 1273, 2949, 1385, 271, 4469, 2928, 1967, 1596,
	2951, 3130, 2957, 1264, 4775, 1264, 2222, 2219, 1745, 2967,
	762, 2229, 831, 2026, 2026, 2101, 2172, 834, 3129, 2207,
	2032, 3139, 3140, 3524, 4471, 3022, 2190, 1696, 2231, 3156,
	2851, 2539, 3146, 3147, 3148, 3029, 2160, 1278, 3112, 1527,
	3133, 4212, 1287, 831, 3231, 2895, 4891, 1970, 834, 1146,
	179, 2542, 2153, 2158, 1533, 1146, 1146, 3034, 1749, 3136,
	2215, 2537, 1965, 2623, 3141, 1668, 3142, 3047, 3102, 2188,
	1146, 2824, 1031, 2173, 3184, 3057, 2399, 3235, 3162, 2035,
	1968, 709, 3921, 929, 4189, 2230, 3100, 2214, 2799, 3465,
	4190, 3188, 3153, 3190, 1746, 3058, 4597, 1967, 2911, 3082,
	4195, 3093, 3471, 4836, 1277, 3236, 3103, 2550, 3164, 3241,
	3166, 2926, 3168, 1146, 1146, 3114, 2171, 4287, 3502, 1146,
	1784, 2210, 2360, 1966, 2944, 2223, 3498, 3134, 1682, 1684,
	3101, 1385, 1146, 1146, 1513, 2154, 1363, 3178, 1146, 1146,
	2354, 4671, 4192, 1922, 1146, 1335, 1970, 2191, 2524, 4189,
	3429, 2167, 2168, 1750, 1076, 4190, 1015, 2205, 3382, 4196,
	3029, 2765, 710, 3163, 2205, 4195, 4895, 3578, 922, 923,
	2721, 3592, 3504, 2958, 2207, 3997, 2219, 3997, 2160, 1968,
	1078, 2211, 3508, 3497, 4672, 3995, 2160, 3995, 1108, 1146,
	1146, 1146, 4090, 4537, 4859, 1146, 1513, 3232, 1513, 4369,
	909, 2881, 4727, 2533, 2201, 1146, 4715, 4192, 4245, 2204,
	798, 3207, 711, 4353, 712, 731, 2900, 1872, 3281, 2605,
	2155, 2767, 1146, 4920, 4196, 2534, 1077, 3198, 3197, 2780,
	1084, 2535, 4811, 838, 3786, 2540, 4302, 3503, 4907, 3506,
	2466, 4297, 4812, 3202, 1969, 4890, 4529, 2198, 4084, 4905,
	3217, 4265, 1963, 3882, 4948, 2079, 4303, 3224, 1292, 4530,
	800, 4095, 3729, 3999, 796, 3999, 3199, 1701, 4631, 3259,
	3260, 4720, 1016, 4650, 3263, 4511, 4264, 4896, 4263, 4035,
	2206, 3636, 3507, 2279, 1960, 1263, 1290, 1283, 700, 4012,
	4191, 3255, 4139, 4531, 3825, 1795, 3237, 4091, 3998, 2469,
	3998, 1263, 2170, 3155, 3230, 2122, 3239, 4835, 3418, 3875,
	4925, 4435, 1095, 4898, 1146, 1146, 1146, 1146, 3165, 4520,
	3167, 1794, 3169, 1274, 1146, 1146, 1146, 4580, 2119, 1146,
	4201, 4202, 4036, 1794, 1789, 1967, 3967, 3954, 4288, 1146,
	1268, 1411, 3906, 1969, 3477, 1146, 2226, 1146, 3374, 3375,
	3637, 3628, 4352, 3473, 3072, 4191, 1268, 4533, 3381, 3066,
	3051, 2305, 2299, 3876, 2203, 2293, 924, 925, 2202, 3191,
	2155, 3769, 3193, 4632, 1411, 3196, 2285, 1275, 2265, 2264,
	4532, 3898, 1564, 2026, 1970, 1294, 1268, 2459, 3270, 1411,
	3877, 3993, 3874, 3840, 771, 4201, 4202, 4688, 4534, 1965,
	3730, 1794, 1085, 2224, 2117, 4653, 2884, 2411, 3357, 2115,
	2038, 4038, 4489, 3411, 1411, 4318, 2758, 1968, 1021, 1020,
	3048, 2150, 2536, 1305, 3376, 1793, 2151, 4096, 4487, 4412,
	1350, 3398, 2538, 2929, 3489, 3485, 3484, 1793, 3222, 2345,
	3200, 3853, 3379, 3378, 3699, 1718, 2225, 2806, 2118, 910,
	911, 2761, 1146, 2805, 1266, 1724, 1723, 3697, 2804, 2803,
	1966, 2802, 4003, 3386, 3055, 1017, 1146, 3690, 1082, 1619,
	1266, 3996, 4300, 3996, 2159, 1617, 1350, 4424, 3384, 3407,
	1605, 2038, 839, 840, 927, 3466, 3467, 4591, 3826, 4810,
	3913, 3412, 2760, 4354, 1606, 1795, 4140, 2759, 3827, 1146,
	4484, 4279, 2905, 3678, 2303, 1793, 3487, 1795, 2159, 3491,
	3601, 3903, 4097, 3450, 2901, 1350, 4856, 4335, 4628, 4399,
	3446, 3027, 4924, 3448, 3449, 2460, 3404, 3416, 3452, 3442,
	3453, 3368, 3454, 3352, 3353, 3354, 3427, 1350, 3383, 1350,
	2152, 3385, 1872, 3457, 3488, 3137, 3396, 3493, 3032, 3030,
	3495, 3397, 3399, 3400, 2333, 2235, 1676, 3463, 2156, 3560,
	2218, 4694, 1411, 1380, 4592, 3692, 4407, 4420, 4419, 2218,
	4701, 4633, 4685, 1350, 4146, 3474, 3390, 1350, 1262, 3899,
	3691, 1969, 3562, 4425, 3564, 3842, 3519, 3568, 1018, 4334,
	3549, 3574, 2630, 4860, 1262, 3878, 3469, 1768, 3402, 2422,
	3403, 3523, 3420, 3421, 3422, 3423, 4722, 1350, 2930, 2931,
	3542, 4861, 4408, 1075, 1702, 1019, 4858, 2402, 1513, 1513,
	1770, 1350, 3451, 1350, 1767, 4796, 3447, 1411, 842, 841,
	4620, 2153, 2158, 1765, 825, 1350, 4612, 3521, 4375, 3430,
	3458, 1742, 3419, 1740, 3464, 1712, 1350, 912, 913, 1710,
	4695, 4535, 4138, 4593, 1708, 3537, 3611, 4536, 4002, 3535,
	1357, 1350, 2032, 1706, 3557, 1704, 3349, 3745, 1698, 1023,
	4476, 3704, 3391, 3688, 3904, 3703, 3440, 3312, 1268, 3242,
	3052, 3505, 3644, 770, 2970, 1692, 1690, 1022, 3515, 1615,
	2919, 1513, 843, 844, 2833, 3569, 2431, 3127, 2000, 3575,
	1630, 1996, 1771, 1350, 1350, 1654, 3127, 3528, 3531, 2369,
	3478, 1618, 3642, 3350, 2154, 1264, 2290, 1616, 3529, 3627,
	2244, 2035, 3530, 3389, 3550, 3725, 926, 3724, 1350, 1789,
	3176, 1264, 3175, 2032, 3144, 3558, 2448, 3620, 2629, 3596,
	1541, 3599, 1548, 1729, 1554, 2952, 3635, 2372, 3653, 3571,
	3583, 3577, 2284, 2263, 2067, 1905, 3395, 1665, 1588, 4769,
	4246, 2148, 3958, 3957, 4247, 2160, 4230, 4684, 4316, 4252,
	3561, 4243, 4182, 1411, 4034, 4025, 1411, 3584, 3970, 3955,
	3928, 2424, 1108, 1108, 1108, 2423, 4311, 3926, 3905, 3664,
	3631, 3626, 2035, 3698, 3693, 3694, 3695, 3696, 4833, 2401,
	1494, 2927, 831, 3603, 1494, 3638, 1769, 834, 3645, 1146,
	1766, 1643, 3623, 1648, 3624, 3625, 1146, 1146, 2146, 1764,
	1146, 1146, 1146, 1657, 1146, 1662, 3616, 1741, 3708, 1739,
	3701, 1711, 1032, 1146, 2038, 1709, 3680, 3085, 179, 179,
	1707, 3077, 1146, 3650, 3676, 3070, 1335, 1146, 3059, 1705,
	3723, 1703, 3659, 1411, 1697, 3045, 3662, 3663, 3700, 3044,
	3025, 2147, 1146, 3392, 3393, 3652, 3394, 2850, 2845, 3674,
	1411, 1691, 1689, 3766, 3722, 1614, 3436, 3437, 2262, 3438,
	2038, 2038, 1146, 1146, 2260, 1146, 1146, 1146, 2237, 2220,
	1720, 2368, 2187, 3545, 2174, 3712, 2161, 3713, 2100, 3714,
	3444, 2097, 2243, 1146, 2094, 2091, 3748, 1146, 3731, 2038,
	2038, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
	1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
	1146, 3702, 1146, 3719, 2086, 3053, 2084, 3798, 2080, 3799,
	1146, 1146, 2038, 2071, 3641, 1085, 3472, 1146, 4824, 2155,
	2010, 3728, 1243, 3758, 3759, 1513, 3220, 3582, 1146, 3572,
	4302, 4849, 3588, 3699, 2229, 1798, 2123, 4590, 3194, 1268,
	1268, 3192, 3018, 1146, 4732, 4340, 3697, 4333, 1244, 4332,
	4303, 4259, 4174, 3128, 2142, 3522, 3690, 2434, 1569, 4522,
	1037, 1039, 1041, 2881, 2906, 4515, 4046, 2169, 3755, 3753,
	2881, 1762, 1763, 2359, 1411, 2302, 1326, 3536, 2879, 3538,
	1325, 3871, 1154, 2396, 3765, 2903, 2391, 4222, 3772, 3774,
	3775, 4731, 2366, 4254, 3643, 2026, 3837, 3781, 3160, 1688,
	3161, 4557, 3788, 2432, 4422, 1807, 1808, 4147, 2909, 4125,
	3500, 2910, 3796, 3570, 1885, 2932, 3797, 3576, 1890, 3858,
	1802, 1359, 3221, 1146, 1293, 3801, 4852, 3829, 269, 269,
	269, 3803, 703, 704, 4843, 719, 703, 719, 729, 1263,
	2910, 769, 1146, 262, 4805, 789, 1799, 3838, 3573, 2433,
	795, 1807, 1808, 3043, 3692, 1263, 2032, 269, 3830, 1245,
	1326, 3849, 3850, 3844, 179, 1326, 2026, 3966, 4022, 3691,
	1809, 2286, 1370, 2977, 2975, 1146, 1146, 906, 2984, 2481,
	3789, 1810, 2966, 269, 2914, 1263, 3846, 3847, 2964, 3965,
	697, 2912, 3720, 4693, 3896, 2965, 4678, 2913, 3897, 4644,
	4638, 3726, 2032, 2032, 4589, 4506, 4482, 4400, 2481, 3804,
	4032, 3860, 4024, 4011, 3868, 2035, 1809, 1146, 3630, 3092,
	2745, 2106, 2019, 4892, 4724, 4421, 2956, 1989, 1525, 4725,
	1524, 2032, 2032, 3428, 4923, 3318, 3319, 4640, 3927, 1350,
	3929, 3833, 1350, 4724, 3861, 2111, 4031, 1350, 4725, 4864,
	1807, 1808, 2873, 2874, 3939, 2871, 2872, 1675, 1535, 4117,
	2625, 2035, 2035, 1674, 2032, 3884, 3943, 2873, 2871, 2660,
	1744, 4507, 2038, 1743, 3944, 3946, 4458, 4256, 4251, 3960,
	4250, 4113, 3883, 3777, 3566, 3563, 3909, 1899, 1898, 4909,
	2035, 2035, 4871, 4682, 4681, 4680, 3962, 4619, 4618, 4573,
	4485, 3968, 3931, 1350, 4452, 4397, 3936, 4394, 1266, 1146,
	4392, 3969, 4290, 4276, 703, 703, 4220, 1268, 1146, 4169,
	4048, 4070, 269, 2035, 1266, 4052, 3985, 3987, 1350, 1350,
	1350, 3264, 3098, 3981, 4006, 3924, 1494, 2927, 3916, 4039,
	3634, 3633, 3494, 3445, 3181, 1350, 1350, 1350, 4055, 3173,
	3152, 3151, 4005, 3150, 1266, 3149, 3076, 3046, 4001, 3127,
	2904, 2841, 2837, 4040, 1350, 2826, 3989, 2825, 2814, 3979,
	1411, 2554, 4043, 2425, 2397, 2390, 2389, 4028, 2388, 2387,
	4019, 2386, 3698, 3693, 3694, 3695, 3696, 4018, 2300, 2274,
	3991, 2270, 3978, 4000, 3776, 2269, 1411, 3990, 2268, 1146,
	1146, 1335, 4071, 2267, 4023, 1146, 1146, 2038, 2266, 4042,
	1146, 1146, 2074, 1146, 2073, 2072, 2070, 3795, 1146, 2009,
	1761, 1760, 1699, 4059, 1583, 1582, 1581, 1580, 1579, 1146,
	4026, 1578, 1262, 1577, 1572, 1568, 1566, 1565, 1518, 1517,
	4044, 4041, 1516, 1402, 1401, 1146, 1400, 4050, 1262, 1399,
	1398, 1362, 4049, 1312, 1311, 1108, 4060, 4061, 1310, 1309,
	4066, 4054, 4098, 1494, 4080, 2290, 4068, 1308, 4062, 1307,
	4065, 4069, 1306, 1304, 1299, 1298, 1297, 1263, 1262, 4107,
	1296, 1295, 4082, 899, 8, 1226, 2113, 1043, 1029, 4595,
	4199, 2007, 4111, 4198, 4197, 2421, 4081, 92, 4099, 1574,
	4092, 3478, 861, 86, 2227, 3923, 1268, 4799, 1630, 994,
	1630, 4721, 4623, 1557, 1268, 869, 4703, 4087, 1411, 2026,
	1411, 4020, 3496, 2989, 2032, 2371, 1700, 1268, 2373, 3406,
	2787, 4670, 4121, 3280, 4564, 3424, 4368, 2628, 1350, 1350,
	1903, 3361, 88, 1130, 1176, 4286, 4285, 4183, 1411, 3908,
	3117, 4283, 3888, 4282, 3411, 2023, 2025, 1094, 1414, 3439,
	4743, 2124, 1136, 2133, 2827, 2026, 2026, 2704, 1153, 1264,
	1150, 2027, 2029, 1268, 1152, 1268, 1151, 2028, 4175, 4176,
	1923, 4137, 1149, 2035, 2022, 1264, 4030, 3096, 3660, 1624,
	1622, 996, 2128, 2548, 2026, 2026, 2612, 3269, 1350, 1896,
	4206, 1110, 4206, 4223, 1494, 2774, 1132, 4209, 1411, 2609,
	1350, 1288, 1121, 1350, 1109, 1264, 3387, 3366, 3647, 3867,
	4155, 2458, 879, 3315, 1411, 4158, 4144, 2026, 4148, 2615,
	4154, 4151, 4149, 4150, 4179, 1279, 4153, 2728, 2720, 2716,
	4159, 3455, 4224, 179, 3086, 1775, 1266, 4255, 4162, 4257,
	4382, 1874, 3097, 1396, 4167, 1114, 2546, 1887, 3247, 2032,
	2468, 3654, 4181, 1350, 1350, 3409, 2820, 4173, 4728, 3785,
	3179, 2278, 1242, 1241, 1286, 1240, 4709, 4706, 2217, 4063,
	3609, 2116, 2865, 1350, 2558, 4244, 4280, 3617, 1126, 1512,
	2415, 3372, 3679, 2393, 1585, 1411, 4239, 794, 4429, 1138,
	1350, 1859, 3014, 3013, 4584, 1381, 1379, 1378, 1377, 4880,
	4946, 3919, 4258, 3918, 3917, 236, 3214, 3980, 2035, 4228,
	4274, 1796, 1788, 233, 235, 1268, 4249, 4277, 234, 4291,
	3872, 4242, 4237, 3415, 4305, 4240, 4319, 1350, 1350, 1350,
	1350, 4803, 3941, 3600, 23, 22, 21, 113, 42, 4268,
	4308, 1411, 4206, 20, 152, 3595, 130, 4336, 4273, 149,
	4320, 4267, 4266, 1146, 1146, 1146, 148, 122, 1263, 1263,
	1262, 4307, 147, 146, 4323, 4281, 145, 144, 151, 143,
	142, 1411, 4275, 137, 4296, 141, 1146, 140, 1281, 1146,
	1146, 139, 2290, 138, 136, 134, 135, 4314, 129, 1146,
	133, 132, 2038, 131, 128, 127, 126, 1146, 1146, 4321,
	125, 124, 1335, 4328, 123, 121, 153, 120, 119, 118,
	117, 1301, 1411, 116, 1350, 115, 114, 4360, 782, 783,
	4343, 61, 60, 269, 112, 269, 269, 110, 1330, 269,
	1340, 4342, 111, 19, 40, 4348, 14, 1411, 65, 4355,
	66, 1360, 18, 13, 35, 1146, 4345, 2552, 91, 789,
	102, 101, 789, 36, 99, 98, 34, 17, 1146, 16,
	15, 1108, 96, 1885, 4377, 1494, 4349, 1146, 95, 4365,
	33, 31, 2038, 11, 9, 4371, 269, 2026, 269, 269,
	1330, 1146, 269, 269, 1146, 37, 1984, 1340, 4403, 12,
	5, 184, 183, 4388, 4389, 186, 3718, 1264, 1146, 182,
	185, 269, 90, 1537, 181, 1411, 180, 4391, 4432, 89,
	29, 10, 1350, 176, 4498, 4016, 81, 178, 2727, 177,
	175, 174, 1350, 1350, 1562, 4404, 173, 1266, 1266, 4402,
	82, 79, 4411, 172, 85, 171, 80, 84, 83, 27,
	6, 64, 7, 1587, 4350, 3705, 1340, 105, 106, 38,
	269, 269, 77, 1330, 76, 75, 26, 4475, 1494, 63,
	4443, 4444, 3611, 4454, 25, 4497, 170, 1411, 218, 217,
	1350, 216, 4449, 215, 789, 4451, 269, 269, 4488, 4463,
	214, 213, 4453, 212, 211, 206, 205, 210, 1268, 1268,
	4459, 208, 4461, 4460, 4462, 207, 209, 204, 4467, 906,
	228, 227, 221, 220, 226, 4478, 4516, 4477, 225, 1146,
	1146, 224, 2026, 4486, 223, 4206, 4206, 222, 219, 4505,
	4540, 4541, 230, 4481, 203, 202, 1146, 2038, 1494, 4496,
	4517, 201, 199, 195, 4465, 194, 1263, 4519, 198, 200,
	197, 4480, 196, 193, 2032, 229, 72, 168, 169, 71,
	4323, 1262, 1262, 4518, 1494, 167, 4523, 4501, 4229, 166,
	4524, 165, 4538, 164, 1146, 163, 1146, 162, 1146, 4513,
	4238, 161, 70, 4241, 4525, 24, 2, 269, 1268, 1,
	0, 4552, 0, 0, 4544, 0, 0, 0, 4553, 4554,
	0, 1146, 0, 1268, 0, 0, 0, 0, 4579, 4562,
	0, 4441, 269, 2035, 0, 4206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4575,
	4206, 0, 4578, 4556, 2032, 4607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2159, 3879, 3880, 4304, 4599, 1146, 1146, 4600, 0, 0,
	0, 2111, 0, 0, 2250, 1146, 3892, 3893, 4627, 3895,
	1268, 0, 4606, 1268, 0, 0, 0, 1350, 2463, 0,
	0, 0, 0, 0, 4614, 0, 0, 1350, 1350, 0,
	0, 0, 1630, 2035, 0, 0, 1513, 4206, 1264, 1264,
	4206, 0, 4647, 4616, 1350, 4649, 0, 0, 0, 1494,
	4615, 4621, 0, 4634, 4661, 1266, 0, 0, 1146, 1146,
	0, 4639, 4642, 0, 0, 4646, 4641, 3037, 1146, 0,
	3040, 0, 3042, 0, 4655, 1263, 4657, 4654, 0, 0,
	0, 0, 0, 1263, 4659, 4660, 4635, 4636, 4658, 0,
	0, 0, 0, 0, 4455, 0, 1263, 0, 4696, 4665,
	0, 4664, 0, 0, 0, 0, 4700, 0, 4501, 0,
	0, 1146, 1146, 4675, 1146, 0, 0, 3089, 0, 4679,
	3089, 0, 0, 0, 0, 0, 0, 1494, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 4674, 4691, 4692,
	4708, 4711, 1263, 1335, 1263, 4726, 4730, 0, 0, 4698,
	4723, 4699, 0, 0, 0, 703, 0, 0, 0, 0,
	0, 0, 4748, 0, 0, 0, 2722, 0, 0, 4751,
	0, 0, 1146, 1146, 1146, 0, 269, 4752, 269, 1262,
	0, 0, 269, 0, 0, 4733, 0, 4717, 2035, 0,
	4712, 4746, 0, 4716, 4739, 1537, 1330, 2004, 269, 0,
	269, 3170, 4747, 4713, 0, 1146, 269, 1537, 719, 0,
	4783, 0, 0, 269, 1537, 0, 1537, 4765, 4766, 4767,
	4788, 0, 4768, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 4466, 0, 0, 0, 0, 4813, 0, 0,
	269, 0, 0, 0, 1266, 0, 4806, 269, 4817, 0,
	1409, 0, 1266, 4815, 1507, 4827, 4829, 2026, 0, 0,
	4828, 0, 1146, 4802, 4786, 1266, 0, 0, 4814, 0,
	0, 0, 0, 0, 0, 0, 0, 4834, 0, 0,
	0, 4821, 1537, 2727, 0, 4822, 789, 4823, 0, 0,
	0, 0, 4854, 0, 1263, 4850, 0, 0, 0, 0,
	4846, 4840, 4841, 0, 4798, 0, 4801, 4844, 0, 0,
	4842, 1266, 0, 1266, 0, 4853, 1264, 1268, 0, 1268,
	2159, 4876, 4708, 4874, 4857, 4711, 4730, 4855, 0, 0,
	0, 4863, 4886, 0, 4873, 4887, 4872, 2026, 4627, 4868,
	0, 4885, 4825, 4826, 4206, 0, 4206, 4882, 4831, 4875,
	0, 4877, 0, 0, 0, 0, 4900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2727, 2727, 1262, 0,
	4899, 4902, 0, 0, 0, 0, 1262, 1670, 4911, 1015,
	0, 0, 0, 0, 0, 1108, 0, 0, 4917, 1262,
	4913, 4910, 0, 1146, 1146, 4915, 0, 0, 0, 0,
	4918, 0, 1146, 1078, 1146, 1146, 0, 0, 4921, 0,
	0, 0, 0, 0, 4927, 0, 4937, 4152, 0, 0,
	0, 4942, 4938, 4941, 4939, 4935, 4940, 4936, 0, 4931,
	4934, 0, 0, 3098, 0, 1262, 0, 1262, 4950, 0,
	0, 4954, 4953, 4952, 4951, 4949, 4955, 0, 4956, 269,
	4958, 0, 0, 269, 4945, 4962, 4961, 0, 0, 0,
	0, 0, 0, 1266, 0, 1146, 4966, 4963, 4968, 0,
	0, 0, 4969, 0, 4971, 4972, 4965, 4958, 0, 0,
	0, 4210, 1015, 4928, 4929, 0, 0, 0, 0, 0,
	0, 0, 2026, 4930, 0, 1016, 0, 0, 4225, 4226,
	0, 0, 0, 0, 0, 1264, 1078, 269, 0, 0,
	0, 269, 0, 1264, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 269, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 269, 0, 0, 4967, 703, 0, 269, 2727, 2727,
	2727, 2727, 0, 0, 2111, 0, 0, 0, 0, 789,
	0, 0, 0, 906, 0, 0, 0, 1263, 1263, 0,
	0, 0, 1264, 0, 1264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1262, 269, 0,
	1330, 269, 0, 0, 0, 0, 0, 0, 1016, 0,
	2111, 0, 0, 0, 0, 789, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	2370, 0, 3244, 3245, 0, 269, 269, 0, 269, 0,
	269, 0, 269, 4339, 269, 0, 0, 0, 0, 2111,
	0, 1021, 1020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 1263, 0, 2407,
	0, 2111, 2408, 2111, 2409, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 0, 0, 269, 269, 269, 269,
	0, 3204, 0, 0, 0, 0, 0, 0, 1017, 1494,
	0, 0, 0, 0, 0, 3318, 3319, 2111, 3336, 3337,
	3338, 2111, 0, 769, 1494, 0, 0, 789, 0, 0,
	0, 0, 0, 0, 0, 0, 1999, 4103, 0, 0,
	0, 0, 3509, 3510, 1264, 3511, 3512, 3513, 0, 1494,
	0, 0, 0, 0, 0, 0, 1266, 1266, 0, 1263,
	0, 0, 1263, 0, 1021, 1020, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 2722, 2722, 0, 1108, 0, 0,
	3333, 894, 0, 0, 3551, 3552, 0, 3553, 3554, 3555,
	0, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 73, 0,
	897, 896, 2560, 0, 3342, 3343, 3344, 3345, 0, 0,
	0, 1018, 0, 0, 0, 74, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 1266, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 0, 1019, 0,
	0, 1266, 0, 2144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1559, 0, 0, 0, 0, 0,
	1262, 1262, 0, 0, 0, 0, 3324, 0, 0, 0,
	0, 87, 0, 703, 0, 0, 0, 1494, 0, 0,
	1597, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 4521, 1023, 0, 0, 0, 0, 703, 0, 0,
	0, 0, 0, 0, 269, 0, 703, 1638, 1266, 0,
	1022, 1266, 900, 0, 1018, 0, 0, 0, 269, 0,
	0, 1651, 0, 0, 0, 49, 0, 107, 0, 0,
	0, 3340, 93, 104, 0, 0, 269, 1340, 0, 0,
	0, 1019, 1494, 0, 0, 0, 2722, 2722, 2722, 2722,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4572, 0, 0, 4574, 1262, 0, 0, 0, 0,
	0, 0, 0, 3334, 0, 0, 0, 1677, 0, 0,
	0, 0, 0, 0, 2255, 269, 1340, 0, 0, 0,
	719, 94, 0, 0, 2840, 1023, 0, 1264, 1264, 0,
	269, 0, 0, 269, 0, 0, 0, 269, 0, 269,
	0, 0, 0, 1022, 1330, 0, 269, 269, 0, 1340,
	1340, 2856, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 1262, 0, 0, 1262, 0, 0, 0, 0,
	0, 0, 1807, 1808, 0, 0, 1263, 0, 1263, 1860,
	0, 0, 0, 0, 0, 2727, 2727, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 1810, 2893, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 1264, 1494, 0,
	0, 1494, 0, 0, 0, 0, 0, 269, 1863, 0,
	0, 0, 1264, 0, 0, 0, 0, 1809, 0, 0,
	269, 0, 0, 0, 4666, 0, 4667, 0, 0, 0,
	0, 789, 0, 0, 0, 789, 0, 3335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 269, 0, 2727, 2727, 2727, 2727, 2727,
	2727, 2727, 2727, 2727, 2727, 2727, 2727, 2727, 2727, 2727,
	2727, 2727, 2727, 2727, 2727, 0, 2727, 0, 1494, 1264,
	0, 0, 1264, 0, 0, 0, 269, 3035, 0, 0,
	0, 0, 0, 4718, 0, 1494, 4719, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 100, 0, 0, 103,
	0, 0, 1537, 0, 0, 269, 0, 269, 0, 0,
	0, 0, 0, 1815, 269, 1266, 0, 1266, 0, 0,
	0, 0, 0, 0, 3081, 237, 0, 0, 0, 0,
	0, 0, 0, 901, 2893, 0, 703, 0, 150, 0,
	0, 0, 0, 0, 0, 3110, 906, 0, 2893, 2893,
	0, 0, 0, 0, 0, 2484, 0, 0, 0, 73,
	0, 1837, 1839, 4784, 0, 0, 0, 269, 0, 0,
	3330, 3331, 3332, 0, 239, 0, 74, 3329, 3327, 3328,
	3320, 3321, 3322, 3323, 3325, 3326, 269, 1330, 269, 0,
	0, 0, 78, 0, 0, 1537, 0, 1537, 1340, 269,
	154, 2111, 1330, 0, 1330, 0, 1330, 0, 0, 0,
	0, 3741, 3742, 0, 0, 192, 0, 0, 0, 1494,
	1830, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 231, 0, 1262,
	0, 1262, 0, 0, 0, 0, 232, 0, 2626, 269,
	269, 269, 269, 1330, 191, 0, 1330, 0, 269, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 900, 895, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4881, 107, 0,
	0, 0, 269, 93, 104, 0, 1860, 0, 1101, 0,
	269, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813,
	3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823,
	3824, 0, 3828, 0, 0, 0, 0, 4906, 0, 0,
	0, 0, 0, 4908, 0, 0, 0, 0, 0, 0,
	4027, 0, 1807, 1808, 2797, 0, 0, 0, 0, 0,
	0, 0, 94, 2722, 2722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 1810, 0, 1831, 0, 1264, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 4083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 0, 0, 1862, 0, 3318, 3319, 0, 3336, 3337,
	3338, 0, 0, 2722, 2722, 2722, 2722, 2722, 2722, 2722,
	2722, 2722, 2722, 2722, 2722, 2722, 2722, 2722, 2722, 2722,
	2722, 2722, 2722, 0, 2722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2817, 0, 0, 0, 0, 0, 0, 0, 2876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 3318, 3319, 0, 3336, 3337, 3338, 0,
	3333, 0, 0, 1815, 0, 1494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3750, 1819, 1811, 1812, 1813,
	1814, 1816, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1494, 2320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2111, 0, 0, 0, 187, 100, 1344, 2336,
	103, 1837, 1839, 0, 2111, 0, 0, 2111, 0, 2338,
	0, 0, 269, 0, 0, 0, 0, 0, 3333, 0,
	0, 2346, 0, 2349, 2350, 2351, 237, 0, 269, 0,
	0, 0, 0, 703, 901, 0, 0, 0, 703, 150,
	0, 703, 0, 0, 703, 703, 3324, 0, 0, 0,
	703, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	1830, 0, 0, 0, 1807, 1808, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 239, 0, 2111, 0, 0,
	0, 0, 0, 0, 0, 3318, 3319, 1838, 3336, 3337,
	3338, 0, 0, 0, 1810, 0, 1537, 0, 0, 0,
	0, 154, 0, 1494, 0, 1494, 0, 3749, 269, 0,
	0, 3340, 269, 269, 3324, 0, 192, 0, 0, 0,
	1863, 0, 0, 0, 238, 0, 0, 0, 0, 1809,
	0, 0, 0, 1494, 0, 0, 1860, 0, 231, 1829,
	0, 2893, 2893, 269, 0, 2004, 0, 232, 1826, 0,
	0, 2893, 0, 3334, 3480, 191, 0, 0, 0, 0,
	3333, 4289, 2893, 3480, 0, 2893, 3480, 0, 0, 3480,
	0, 0, 0, 0, 4306, 190, 0, 0, 0, 3340,
	0, 0, 0, 0, 269, 269, 2004, 0, 269, 0,
	0, 0, 0, 1494, 0, 0, 0, 4327, 0, 0,
	0, 0, 0, 0, 3744, 0, 0, 0, 2004, 1494,
	269, 0, 3541, 3541, 1831, 0, 0, 1330, 0, 0,
	0, 3334, 0, 0, 0, 1832, 1833, 1834, 1835, 1860,
	0, 0, 0, 0, 0, 1815, 0, 0, 2893, 0,
	2893, 0, 3567, 2893, 2004, 0, 0, 2893, 2004, 0,
	0, 789, 0, 0, 0, 0, 3324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	1494, 1330, 0, 1837, 1839, 0, 0, 0, 269, 0,
	0, 0, 1537, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 2727, 0, 0, 269, 3335, 3605, 1824,
	1825, 3607, 2893, 0, 0, 269, 2111, 0, 0, 269,
	0, 3340, 1340, 0, 0, 0, 1807, 1808, 0, 1840,
	1841, 1842, 1851, 1852, 1853, 0, 1494, 0, 0, 0,
	269, 0, 1830, 0, 0, 3081, 0, 0, 1330, 1838,
	269, 0, 0, 2893, 0, 703, 1810, 0, 0, 2727,
	0, 0, 2893, 3334, 0, 1857, 1494, 1811, 1812, 1813,
	1814, 1816, 1817, 0, 0, 3335, 0, 0, 0, 0,
	0, 0, 1863, 269, 3081, 0, 0, 3081, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 1494, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 3711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 1860,
	3717, 0, 0, 1537, 2857, 1344, 1330, 269, 0, 269,
	3330, 3331, 3332, 0, 0, 1330, 0, 3329, 3327, 3328,
	3320, 3321, 3322, 3323, 3325, 3326, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 0, 0, 269, 0, 1832, 1833, 1834,
	1835, 0, 1807, 1808, 0, 0, 1831, 1815, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 3335, 3330, 3331,
	3332, 0, 1810, 0, 0, 3329, 3327, 3328, 3320, 3321,
	3322, 3323, 3325, 3326, 0, 1848, 3373, 0, 1858, 0,
	2727, 0, 0, 0, 3783, 1837, 1839, 0, 1863, 0,
	0, 0, 0, 0, 0, 1862, 0, 1809, 0, 4374,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 3401,
	0, 1824, 1825, 0, 0, 0, 0, 0, 0, 0,
	2727, 0, 3019, 0, 3414, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 2727, 0, 0, 0, 3434,
	0, 0, 0, 0, 0, 4414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4625, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 269, 1827, 1823, 0, 1820, 1818, 1819, 1811,
	1812, 1813, 1814, 1816, 1817, 0, 4645, 0, 0, 0,
	3330, 3331, 3332, 1815, 0, 703, 703, 3329, 3327, 3328,
	3320, 3321, 3322, 3323, 3325, 3326, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 1537, 1537,
	0, 0, 0, 3145, 0, 0, 0, 0, 0, 0,
	73, 2722, 0, 1537, 1537, 0, 1537, 0, 0, 0,
	0, 1837, 1839, 0, 0, 0, 0, 74, 0, 0,
	3318, 3319, 0, 3336, 3337, 3338, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 1836, 0, 0, 0, 0,
	1108, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 2722, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 87, 0, 0, 0, 0, 0, 789,
	0, 0, 0, 0, 0, 1849, 0, 0, 4734, 0,
	0, 0, 0, 0, 4736, 3333, 4561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3541, 0, 900, 0, 0, 1862, 0, 0,
	0, 0, 3414, 0, 0, 269, 0, 49, 0, 107,
	0, 0, 1843, 0, 93, 104, 4583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 2004, 0,
	269, 0, 0, 0, 719, 719, 1340, 1108, 0, 0,
	0, 4605, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	1847, 3324, 0, 94, 269, 0, 0, 0, 0, 269,
	0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820, 1818,
	1819, 1811, 1812, 1813, 1814, 1816, 1817, 0, 2893, 269,
	0, 0, 0, 0, 1831, 0, 0, 0, 3110, 3110,
	0, 0, 3341, 0, 906, 906, 2893, 0, 2722, 0,
	3081, 3081, 0, 0, 906, 2893, 0, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 3340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	269, 1409, 0, 0, 0, 0, 0, 0, 2722, 0,
	0, 0, 0, 1862, 1807, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3334, 0,
	0, 0, 0, 2722, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 97, 0, 0, 4122, 0, 0, 3762, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 3778, 0, 0, 1826, 0,
	0, 0, 0, 0, 1860, 1818, 1819, 1811, 1812, 1813,
	1814, 1816, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 187, 100, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 1537, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 3739, 0, 0, 237, 0, 269,
	0, 0, 0, 0, 0, 901, 0, 0, 0, 0,
	150, 0, 0, 0, 1340, 1832, 1833, 1834, 1835, 0,
	0, 0, 3335, 0, 0, 1815, 0, 1340, 0, 0,
	0, 0, 0, 0, 2893, 2893, 0, 3541, 2893, 0,
	0, 0, 0, 0, 0, 4208, 239, 4208, 1537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2893,
	0, 3480, 0, 0, 0, 1537, 1537, 269, 2004, 3870,
	0, 0, 154, 1837, 1839, 0, 0, 0, 1807, 1808,
	0, 2004, 0, 269, 2004, 0, 269, 192, 3541, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 1824,
	1825, 1838, 0, 2893, 0, 2893, 269, 0, 1810, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 1830, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 2893, 1809, 0, 0, 1635, 4293, 1843, 0,
	0, 0, 0, 1829, 1843, 0, 0, 0, 269, 0,
	1843, 0, 1826, 0, 0, 3330, 3331, 3332, 269, 0,
	0, 0, 3329, 3327, 3328, 3320, 3321, 3322, 3323, 3325,
	3326, 0, 3318, 3319, 0, 3336, 3337, 3338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4208, 0, 0,
	1537, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3579, 0, 0, 0, 0, 0, 0, 0, 1832,
	1833, 1834, 1835, 0, 0, 0, 0, 0, 0, 1815,
	1843, 0, 0, 0, 0, 1843, 0, 3333, 0, 3604,
	0, 0, 0, 1836, 1843, 0, 0, 0, 0, 1843,
	3621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3629, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2893, 0, 3480, 0, 0,
	4406, 0, 0, 1824, 1825, 0, 0, 3670, 3671, 269,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 4430,
	1843, 4430, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 3324, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3541, 0, 1330, 0,
	0, 0, 802, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 813, 0, 1258,
	0, 1093, 1093, 1093, 0, 0, 0, 0, 0, 0,
	4406, 0, 0, 0, 0, 0, 0, 0, 2893, 0,
	0, 0, 1860, 1827, 1823, 0, 1820, 1818, 1819, 1811,
	1812, 1813, 1814, 1816, 1817, 0, 4510, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 264, 699, 1537, 0,
	3334, 0, 0, 0, 1539, 0, 1545, 0, 1551, 0,
	4208, 4208, 0, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
	1843, 0, 0, 0, 0, 0, 0, 1836, 0, 269,
	269, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	807, 0, 0, 0, 0, 0, 1843, 819, 0, 0,
	1831, 0, 0, 3783, 0, 4157, 0, 0, 0, 0,
	0, 812, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 1537, 3541, 4577, 0, 1641, 1860, 1646, 0, 0,
	4406, 0, 0, 4171, 0, 0, 0, 1655, 0, 1660,
	0, 0, 2726, 0, 0, 0, 0, 0, 0, 0,
	4208, 0, 0, 0, 0, 1843, 0, 0, 0, 1862,
	811, 1843, 0, 0, 0, 4208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 764, 0, 3007,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 809, 0, 3335, 0, 0, 1725, 0, 0,
	1731, 0, 2997, 2995, 0, 0, 4293, 0, 0, 2999,
	3001, 2991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4208, 0, 269, 4208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3480, 0, 1827, 1823, 0,
	1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 0,
	0, 818, 3015, 0, 0, 0, 0, 0, 0, 0,
	0, 1537, 0, 1537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4689, 0,
	0, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 0,
	0, 0, 0, 0, 4430, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 804, 0,
	1537, 0, 0, 1537, 1884, 0, 0, 3330, 3331, 3332,
	1897, 0, 2893, 0, 3329, 3327, 3328, 3320, 3321, 3322,
	3323, 3325, 3326, 0, 0, 0, 4366, 0, 0, 808,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3975, 0, 0, 3976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3783, 0, 2993, 1807, 1808, 0, 763, 4366, 0, 1851,
	1852, 1853, 0, 3009, 0, 0, 0, 0, 0, 0,
	1537, 814, 0, 0, 0, 0, 1838, 806, 0, 0,
	0, 0, 2484, 1810, 3008, 2998, 2996, 3000, 3002, 2992,
	2994, 3010, 1857, 0, 3012, 0, 0, 0, 0, 0,
	269, 0, 3004, 3006, 0, 1956, 1956, 1956, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 0,
	0, 0, 4056, 4057, 4058, 803, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 3016, 1826, 0, 1344,
	4072, 4073, 4406, 0, 0, 0, 0, 0, 0, 0,
	2484, 0, 0, 810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 2893, 0, 0, 0, 0, 0, 0, 4208,
	0, 4208, 0, 0, 1537, 0, 0, 0, 0, 0,
	0, 0, 816, 817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 1833, 1834, 1835, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 0, 0, 0,
	1537, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	3011, 0, 0, 0, 1093, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 1858, 0, 0, 1843, 0,
	0, 0, 1837, 1839, 0, 0, 0, 0, 0, 0,
	3110, 0, 0, 0, 0, 0, 0, 0, 0, 2893,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1825,
	0, 0, 0, 0, 0, 3110, 1843, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 1846, 3017, 0, 0,
	0, 0, 0, 0, 1843, 0, 3003, 3005, 0, 0,
	0, 1830, 4164, 4165, 0, 1843, 1843, 1843, 1843, 1843,
	1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
	1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
	1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
	1843, 0, 0, 0, 0, 0, 1843, 0, 1843, 1843,
	1843, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	2726, 2726, 0, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 1316, 1316, 0, 1843, 0, 1860, 0, 0,
	0, 0, 0, 0, 2697, 2698, 2699, 2700, 2693, 2694,
	2695, 2696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 1843, 1344, 0, 1511,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1843, 0, 0, 1843,
	0, 0, 1843, 0, 0, 1843, 2673, 2674, 2675, 2676,
	0, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 2685,
	2686, 2687, 2688, 2681, 2682, 2683, 2684, 2689, 2690, 2691,
	2692, 4344, 0, 4346, 4347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	3339, 0, 2726, 2726, 2726, 2726, 0, 0, 0, 1843,
	0, 1843, 0, 0, 0, 0, 1843, 0, 0, 2394,
	0, 0, 0, 0, 0, 0, 0, 0, 2669, 2670,
	2671, 2672, 2677, 2678, 2679, 2680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 4393, 0,
	0, 0, 0, 0, 2419, 0, 0, 0, 0, 0,
	0, 1850, 1827, 1823, 0, 1820, 1818, 1819, 1811, 1812,
	1813, 1814, 1816, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 2457, 0,
	2461, 0, 0, 0, 0, 0, 0, 2475, 0, 0,
	1093, 0, 0, 0, 0, 0, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 0, 2527, 0, 2529, 2530, 2531, 2532, 0,
	0, 0, 0, 0, 0, 0, 4479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 2607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2637, 2640, 2643, 2646, 0, 0, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 0, 0, 0, 0,
	0, 0, 1807, 1808, 0, 1840, 1841, 1842, 1851, 1852,
	1853, 0, 0, 0, 0, 0, 0, 2718, 0, 2730,
	2732, 2737, 0, 0, 1844, 1838, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 1807, 1808, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 1131, 109, 0, 0, 1826, 1838, 1178, 0,
	0, 0, 0, 0, 1810, 0, 0, 1843, 1843, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 2005, 0, 1511, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 1833, 1834, 1835, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 109, 1316, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 1344, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3233, 0, 0, 0, 1344, 0,
	0, 1848, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 1837, 1839, 0, 0, 1832, 1833, 1834, 1835, 0,
	1843, 0, 0, 0, 0, 1815, 0, 0, 1854, 0,
	1855, 0, 0, 0, 0, 0, 0, 1824, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1066, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 1837, 1839, 0, 1843, 1843, 0, 2726,
	2726, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3339, 3339, 0, 0, 1843, 1843, 1824,
	1825, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 1252, 0, 0, 0, 1856, 0, 1269, 0,
	0, 1843, 0, 3038, 3039, 0, 3041, 0, 0, 0,
	0, 0, 1830, 1843, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2726,
	2726, 2726, 2726, 2726, 2726, 2726, 2726, 2726, 2726, 2726,
	2726, 2726, 2726, 2726, 2726, 2726, 2726, 2726, 2726, 0,
	2726, 3339, 3339, 3339, 3339, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 2276, 0, 0, 0, 2283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2296, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3171, 0, 1836, 0, 0, 2308, 0, 2308, 0,
	0, 0, 0, 0, 2315, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2283, 0, 0, 2342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 2362,
	0, 0, 0, 0, 1093, 1862, 0, 0, 1843, 0,
	0, 0, 0, 2378, 0, 2380, 1847, 2382, 0, 2384,
	0, 2385, 0, 0, 0, 0, 0, 1821, 1822, 1828,
	1850, 1827, 1823, 0, 1820, 1818, 1819, 1811, 1812, 1813,
	1814, 1816, 1817, 0, 0, 0, 0, 3227, 3228, 0,
	0, 4128, 0, 3234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2412, 2413, 2414, 0, 0, 0, 0,
	0, 0, 3248, 3249, 0, 0, 0, 0, 2607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 1823, 0, 1820, 1818, 1819, 1811,
	1812, 1813, 1814, 1816, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3258, 0, 1807, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3272,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 1810, 3284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1843, 0, 0, 1843,
	3339, 3339, 1843, 0, 0, 0, 1843, 0, 2737, 2737,
	2737, 0, 0, 1843, 0, 3226, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 1843, 0, 0, 0,
	0, 3377, 0, 0, 0, 0, 1832, 1833, 1834, 1835,
	0, 0, 0, 109, 0, 0, 1815, 1269, 0, 1843,
	1843, 1843, 1843, 1843, 0, 2794, 0, 0, 0, 1843,
	0, 1843, 0, 0, 3339, 3339, 3339, 3339, 3339, 3339,
	3339, 3339, 3339, 3339, 3339, 3339, 3339, 3339, 3339, 3339,
	3339, 3339, 3339, 3339, 0, 0, 0, 3339, 0, 0,
	1843, 1843, 0, 1269, 1837, 1839, 0, 1269, 0, 0,
	0, 0, 1843, 0, 1269, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 0, 109, 0, 109, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 2842, 1269, 0,
	1316, 0, 0, 0, 1316, 0, 1316, 0, 0, 0,
	1093, 0, 0, 1830, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 2296, 1269, 1807, 1808, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 1086, 109,
	109, 0, 0, 3499, 1269, 0, 0, 0, 1838, 0,
	0, 1269, 0, 0, 109, 1810, 109, 0, 0, 1843,
	0, 0, 0, 0, 0, 1269, 109, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 1860,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 1833, 1834, 1835,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 2283, 0, 0, 0, 0, 0, 0, 0,
	0, 2296, 0, 0, 0, 0, 0, 0, 0, 1843,
	1843, 0, 0, 0, 1843, 1843, 1862, 0, 1843, 1843,
	0, 1066, 0, 1843, 0, 0, 0, 1843, 0, 0,
	0, 0, 1843, 0, 1837, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 2726, 0, 0,
	0, 0, 0, 0, 3143, 0, 0, 0, 0, 0,
	1824, 1825, 1883, 0, 0, 0, 1889, 0, 0, 0,
	0, 0, 0, 3154, 0, 3157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2726, 1827, 1823, 0, 1820, 1818, 1819,
	1811, 1812, 1813, 1814, 1816, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3187, 1511, 3189, 1511,
	0, 0, 0, 2475, 0, 3195, 0, 0, 0, 0,
	3736, 3737, 0, 0, 3740, 0, 0, 0, 3743, 0,
	0, 0, 0, 0, 0, 0, 0, 3747, 0, 1860,
	1807, 1808, 0, 0, 0, 0, 3754, 0, 0, 1316,
	0, 3377, 0, 0, 0, 0, 1976, 3223, 1979, 0,
	109, 0, 1269, 1838, 1269, 0, 3767, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1269,
	0, 0, 0, 0, 0, 0, 3790, 3791, 0, 3792,
	3793, 3794, 0, 0, 1836, 73, 1863, 0, 2039, 0,
	0, 0, 0, 0, 0, 1809, 0, 3800, 0, 0,
	0, 3802, 74, 0, 0, 1829, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1843, 1843, 0, 3831, 3832, 0, 0, 0, 0,
	0, 1843, 1843, 3339, 2726, 0, 0, 0, 0, 0,
	1843, 0, 3843, 1843, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 1862, 3852, 0, 1269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3339, 2726, 0, 0, 0, 0, 0,
	0, 1832, 1833, 1834, 1835, 0, 1269, 0, 0, 900,
	1843, 1815, 0, 0, 0, 0, 0, 0, 1843, 2726,
	0, 0, 49, 0, 107, 0, 1843, 0, 0, 93,
	104, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3900, 0, 1837,
	1839, 0, 0, 0, 1827, 1823, 0, 1820, 1818, 1819,
	1811, 1812, 1813, 1814, 1816, 1817, 3911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3940, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1269, 1269, 0,
	3339, 0, 0, 0, 0, 0, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1142, 0,
	0, 1843, 3339, 0, 0, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 268, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 1316, 0, 0, 0, 1511,
	1511, 0, 0, 832, 0, 0, 1086, 97, 1086, 0,
	0, 0, 1269, 1956, 1269, 0, 1269, 0, 0, 1836,
	0, 0, 4051, 0, 0, 0, 0, 0, 0, 832,
	3468, 0, 1269, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 0, 1269, 1269, 1269,
	0, 0, 187, 100, 0, 0, 103, 0, 0, 0,
	0, 3518, 3520, 0, 0, 2296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 109, 0, 0, 0,
	901, 1862, 0, 4100, 4101, 150, 0, 0, 0, 4105,
	4106, 0, 0, 1843, 4109, 4110, 0, 0, 0, 0,
	0, 0, 4114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4118, 0, 0, 1843, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 4123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 1265, 0,
	1066, 0, 0, 1066, 1066, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 2039, 2039, 1269, 0,
	238, 0, 1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816,
	1817, 0, 3618, 0, 231, 0, 3622, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2545, 0, 0, 0, 0, 0, 0, 0, 1807,
	1808, 1633, 1840, 1841, 1842, 1851, 1852, 1853, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 1838, 0, 0, 1883, 0, 0, 0, 1810,
	3675, 1843, 0, 0, 0, 1843, 0, 0, 1857, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3721, 0, 1511, 0, 1252, 0,
	0, 0, 0, 0, 1269, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 1979, 0, 0, 0, 0, 0,
	1269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3734, 0, 0, 0, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	1832, 1833, 1834, 1835, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 1837, 1839,
	0, 0, 0, 0, 0, 0, 0, 4361, 4362, 4363,
	0, 0, 0, 0, 0, 1854, 0, 1855, 1269, 1269,
	0, 0, 0, 0, 1824, 1825, 0, 0, 0, 0,
	2475, 0, 0, 4372, 4373, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 4381, 4384, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1808, 0, 1840, 1841, 1842, 1851, 1852, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 1838, 0, 2039, 0, 0, 0,
	0, 1810, 0, 1856, 0, 0, 0, 0, 0, 0,
	1857, 0, 4431, 0, 0, 0, 0, 0, 0, 0,
	0, 4439, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 1860, 0, 4447, 1809, 0, 1093, 0,
	1269, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 4456, 0, 0, 1826, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 268,
	109, 268, 268, 109, 0, 268, 0, 0, 0, 109,
	0, 0, 1832, 1833, 1834, 1835, 1269, 0, 1849, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	1269, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1269, 0, 0,
	1862, 0, 268, 0, 268, 268, 0, 2296, 268, 268,
	1848, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	1837, 1839, 0, 0, 0, 0, 2296, 832, 0, 0,
	0, 0, 0, 0, 109, 0, 4015, 1854, 0, 1855,
	0, 0, 0, 0, 0, 0, 1824, 1825, 4582, 749,
	0, 2296, 4586, 0, 0, 0, 4033, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 732,
	0, 0, 0, 1847, 733, 0, 268, 268, 0, 1830,
	0, 0, 0, 0, 1821, 1822, 1828, 1850, 1827, 1823,
	0, 1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817,
	0, 0, 268, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 1856, 0, 4085, 0, 1093,
	1093, 0, 0, 0, 0, 0, 0, 0, 0, 4643,
	0, 0, 0, 0, 1845, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 0, 2545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	1883, 0, 0, 2475, 0, 0, 0, 0, 0, 0,
	0, 0, 4384, 268, 0, 0, 0, 0, 0, 0,
	1836, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 1831, 739, 0, 0, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 764, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4764, 4764, 4764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 751, 4787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	2296, 0, 0, 0, 0, 0, 1821, 1822, 1828, 1850,
	1827, 1823, 0, 1820, 1818, 1819, 1811, 1812, 1813, 1814,
	1816, 1817, 1252, 0, 0, 0, 4764, 0, 1269, 1269,
	3752, 0, 0, 0, 0, 0, 0, 0, 1252, 0,
	761, 0, 742, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 743, 1269, 2296, 0, 1269, 0, 0,
	0, 0, 1978, 0, 1265, 4315, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 1269, 0, 268, 1978, 268, 0, 0, 0,
	0, 0, 832, 763, 0, 0, 0, 0, 1269, 832,
	0, 744, 0, 0, 0, 0, 759, 760, 757, 0,
	0, 0, 0, 0, 752, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 4764, 4922, 0,
	0, 0, 0, 0, 1269, 0, 4926, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 749,
	746, 0, 753, 0, 0, 109, 109, 0, 109, 109,
	109, 747, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 1269, 733, 748, 0, 0, 0, 0,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 765, 1269, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 750, 0, 109, 109, 0,
	109, 109, 109, 734, 0, 0, 4416, 0, 0, 0,
	1269, 0, 0, 0, 735, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 0, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 850, 0, 1269,
	0, 1269, 2296, 0, 0, 1269, 0, 0, 737, 0,
	0, 0, 0, 1269, 0, 0, 0, 852, 0, 0,
	0, 0, 853, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 0, 0, 0, 0, 1269,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 832,
	1252, 0, 0, 1086, 739, 0, 1269, 740, 0, 0,
	0, 854, 0, 871, 0, 0, 0, 109, 109, 0,
	0, 0, 0, 0, 764, 0, 0, 0, 0, 0,
	0, 1269, 1269, 0, 0, 0, 0, 0, 855, 0,
	0, 0, 0, 856, 0, 0, 4551, 1511, 0, 754,
	0, 0, 0, 268, 0, 0, 1269, 268, 0, 0,
	0, 0, 0, 268, 0, 880, 0, 0, 0, 268,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 878, 268, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 1269, 0, 0, 0, 751, 0,
	851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 858, 0, 268, 859, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 0, 764, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 0,
	0, 832, 268, 0, 268, 0, 268, 0, 268, 0,
	268, 1269, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1269, 0,
	0, 4648, 0, 0, 0, 0, 0, 0, 2039, 2039,
	0, 762, 0, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 268, 268, 268, 881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 876, 2039, 2039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 763, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 759, 760, 757, 0,
	2039, 0, 0, 109, 752, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 1252, 0, 4702, 0, 0, 1269, 1269, 860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 753, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 1269, 0, 0, 0, 0, 0, 0, 0,
	4741, 863, 0, 0, 0, 748, 0, 0, 0, 0,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 765, 0, 0, 0, 0, 872,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 849, 0, 873, 0, 0, 0,
	0, 0, 0, 0, 0, 864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 870, 0, 0, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 865, 0,
	1265, 0, 866, 885, 0, 884, 0, 0, 0, 867,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 0, 0, 0, 0, 877, 0,
	0, 0, 268, 0, 886, 0, 883, 0, 0, 0,
	0, 0, 765, 0, 0, 0, 0, 1269, 0, 0,
	1269, 0, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 268, 0, 0, 268,
	0, 0, 0, 268, 0, 268, 0, 0, 0, 0,
	0, 1269, 268, 268, 0, 0, 0, 0, 0, 1252,
	0, 0, 268, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1269, 1269, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 1269, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 1269, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1269, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 274, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 109, 832, 0, 0, 0, 0, 1252, 0,
	268, 0, 0, 0, 1269, 824, 1252, 0, 0, 0,
	0, 0, 1269, 0, 0, 0, 1269, 0, 1269, 0,
	0, 0, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1269, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 1269, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 268, 1269, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1269, 0, 1269, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 268, 268, 268, 0,
	0, 0, 0, 0, 268, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 1269, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 268, 1155,
	0, 1269, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 1269, 0, 0, 0, 0, 1269, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 0, 270, 270, 270, 0, 0,
	0, 0, 0, 0, 0, 1269, 1269, 1269, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1269,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1269,
	270, 0, 0, 0, 0, 0, 1807, 1808, 0, 1840,
	1841, 1842, 1851, 1852, 1853, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 1844, 1838,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	1269, 0, 1269, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 1269, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 0, 0, 0, 0, 0, 0,
	1269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1269, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 1833, 1834,
	1835, 0, 0, 0, 0, 0, 0, 1815, 1265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1265, 1269, 0, 0, 1269, 0,
	0, 0, 2545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 1269, 1269, 1858, 0,
	0, 0, 0, 0, 1978, 1837, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 1855, 0, 0, 0, 0, 0,
	0, 1824, 1825, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 268, 0, 0, 0, 268, 268,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1269, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	268, 268, 0, 0, 268, 109, 0, 0, 0, 0,
	1860, 1978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 109,
	0, 0, 0, 1351, 0, 0, 0, 0, 1269, 0,
	0, 1269, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 1412, 0, 0, 0, 0, 1831, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 832, 0, 1351, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	1351, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 1265, 109, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820, 1818,
	1819, 1811, 1812, 1813, 1814, 1816, 1817, 1351, 0, 0,
	0, 3293, 0, 0, 0, 3294, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 268, 270, 270, 0, 0, 270, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 0, 1269, 0, 0,
	0, 0, 0, 270, 1353, 270, 270, 0, 1353, 270,
	270, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 1807, 1808, 0, 1840, 1841,
	1842, 1851, 1852, 1853, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 1844, 1838, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 1353, 0, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 1353, 0, 0, 0, 0,
	1809, 0, 1353, 270, 270, 0, 0, 1265, 1265, 0,
	1829, 0, 0, 0, 0, 0, 1353, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 1832, 1833, 1834, 1835,
	0, 0, 0, 0, 270, 0, 1815, 0, 824, 0,
	0, 0, 0, 0, 0, 824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 1837, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 1855, 0, 0, 0, 0, 0, 0,
	1824, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 1351, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 268, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 1856,
	268, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 1265, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 1351, 0, 0, 0, 0, 270,
	0, 0, 0, 1412, 0, 0, 0, 1831, 0, 0,
	1353, 0, 0, 0, 0, 270, 270, 270, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 270, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	1351, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 1265, 0, 0, 0, 1351, 1351,
	0, 0, 1265, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 0, 1978, 0, 1353, 0, 1847,
	0, 1351, 0, 1351, 1351, 1351, 0, 0, 0, 0,
	1821, 1822, 1828, 1850, 1827, 1823, 0, 1820, 1818, 1819,
	1811, 1812, 1813, 1814, 1816, 1817, 1147, 824, 160, 0,
	2603, 0, 0, 0, 2604, 0, 73, 0, 46, 45,
	0, 1978, 0, 1978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	67, 0, 268, 0, 0, 0, 0, 48, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 47, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 1353, 1353,
	270, 0, 0, 0, 1412, 0, 50, 68, 1353, 0,
	0, 0, 0, 0, 0, 51, 0, 0, 0, 0,
	57, 0, 0, 0, 268, 158, 0, 0, 0, 0,
	0, 0, 0, 49, 268, 107, 0, 0, 0, 0,
	93, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 270, 0,
	0, 0, 0, 1978, 270, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 0, 0, 0, 0, 270, 0, 270, 0,
	0, 0, 0, 0, 270, 0, 0, 1412, 0, 94,
	0, 0, 0, 1353, 0, 1353, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1353, 270, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 1353, 0, 1353, 1353,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 270, 270, 0, 270, 0, 270, 0, 270,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 270, 270, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 53, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1353,
	0, 56, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 0, 0, 1351, 1351, 69, 0, 0, 0,
	0, 0, 58, 187, 100, 0, 0, 103, 0, 0,
	0, 54, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 55, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 1978, 1978, 1412, 0,
	0, 62, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 268, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 1807, 1808, 0, 1840, 1841, 1842, 1851,
	1852, 1853, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 1838, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 154, 0,
	0, 0, 1857, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 1978, 0, 0, 1863,
	0, 238, 1351, 0, 0, 0, 0, 0, 1809, 0,
	0, 1978, 1353, 0, 0, 231, 0, 0, 1829, 0,
	0, 0, 0, 0, 232, 0, 0, 1826, 0, 0,
	0, 0, 191, 268, 0, 270, 0, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	0, 1351, 190, 270, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	268, 1978, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 0, 1351, 0,
	0, 0, 270, 0, 1832, 1833, 1834, 1835, 0, 0,
	0, 0, 0, 1351, 1815, 0, 0, 270, 0, 0,
	270, 0, 0, 0, 270, 0, 270, 0, 0, 0,
	0, 0, 0, 270, 270, 0, 0, 0, 0, 1353,
	1353, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 1837, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 1854,
	0, 1855, 0, 1353, 0, 0, 0, 0, 1824, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 268,
	0, 1830, 0, 0, 0, 1352, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 1353, 0, 0, 0, 0, 0, 1856, 0, 0,
	0, 1413, 0, 0, 0, 1413, 0, 1353, 0, 0,
	0, 0, 1352, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 268, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 270, 0, 270, 0, 1353, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 1353, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 0, 0, 1352,
	0, 1353, 0, 1353, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 1352, 270, 1978, 0, 1978, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 270, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 270, 270, 270,
	0, 0, 0, 0, 0, 270, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 270,
	0, 0, 0, 0, 0, 1412, 0, 270, 1821, 1822,
	1828, 1850, 1827, 1823, 0, 1820, 1818, 1819, 1811, 1812,
	1813, 1814, 1816, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 3296, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1808, 0, 1840, 1841, 1842, 1851, 1852, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 1838, 0, 0, 0, 0, 0,
	1351, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 1351, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 1832, 1833, 1834, 1835, 0, 0, 0, 0,
	1353, 0, 1815, 0, 0, 1351, 0, 1351, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 824, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 1858, 0, 1351, 0, 1352, 1353, 0,
	1837, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 1855,
	0, 0, 0, 1353, 1413, 0, 1824, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 1351, 1353,
	0, 0, 0, 0, 1846, 270, 0, 0, 0, 270,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 1412, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 270, 0, 1353, 270, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1353, 270, 1353, 0,
	0, 0, 0, 0, 0, 1352, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 1353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 1353, 1412, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 1353, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	1353, 0, 1353, 0, 0, 0, 1353, 0, 0, 0,
	1849, 0, 0, 270, 1353, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 1353, 270, 0, 0, 0,
	1352, 0, 1352, 0, 1352, 0, 0, 0, 0, 0,
	1353, 0, 1862, 0, 0, 0, 0, 270, 0, 0,
	1352, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 1352, 1352, 1352, 0, 0,
	0, 0, 1353, 1353, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1353, 1412, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 1822, 1828, 1850,
	1827, 1823, 0, 1820, 1818, 1819, 1811, 1812, 1813, 1814,
	1816, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 270, 1353, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 1808, 1413, 1840, 1841, 1842,
	1851, 1852, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 1838, 0, 0,
	0, 0, 1353, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 1351, 0, 0, 1351, 0, 0, 1829,
	0, 1351, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 1351, 1351, 1832, 1833, 1834, 1835, 1413,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 1351,
	1351, 1351, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 1351, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 1837, 1839, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 1855, 0, 0, 0, 0, 0, 0, 1824,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 1845, 1353, 0,
	0, 1353, 1412, 0, 1412, 0, 1353, 270, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 1351, 0, 0, 270, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 1353, 1836, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 1352, 0, 1831, 1353, 1353, 1353,
	0, 0, 1412, 0, 1351, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 1353, 1353, 1353, 0, 1412, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 0, 0, 270, 0, 1353,
	0, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 1351, 1351, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1352, 1412,
	1352, 0, 0, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 1351, 1351, 1351, 1351, 0, 0, 0, 0, 1821,
	1822, 1828, 1850, 1827, 1823, 1412, 1820, 1818, 1819, 1811,
	1812, 1813, 1814, 1816, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 3295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1353, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1353, 1353, 0,
	0, 0, 0, 0, 0, 0, 1412, 1353, 1351, 0,
	1807, 1808, 0, 1840, 1841, 1842, 1851, 1852, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 1844, 1838, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 270, 0, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 1353, 0, 1353,
	270, 0, 1353, 270, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 270, 1826, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 1351, 0, 0,
	0, 0, 1353, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 1353, 270, 0, 0, 0, 1353,
	0, 1412, 0, 0, 1351, 0, 0, 0, 0, 0,
	0, 1832, 1833, 1834, 1835, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1353, 1353, 1353, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 1837,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 1854, 0, 1855, 0,
	0, 0, 0, 0, 0, 1824, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 1353, 0, 1353, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 1353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 1860, 0, 0, 0, 0, 0,
	1413, 1351, 1351, 0, 1353, 0, 0, 0, 0, 0,
	0, 1353, 270, 0, 0, 0, 1352, 0, 1351, 0,
	0, 1353, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 1808, 0,
	1840, 1841, 1842, 1851, 1852, 1853, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1838, 0, 1352, 0, 0, 0, 1353, 1810, 0, 1353,
	0, 0, 1831, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 1849,
	0, 1352, 1809, 0, 0, 0, 270, 270, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 1352, 0, 1352, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 0, 0, 1832, 1833,
	1834, 1835, 0, 0, 1847, 0, 0, 1352, 1815, 1352,
	0, 0, 0, 1413, 270, 1821, 1822, 1828, 1850, 1827,
	1823, 1352, 1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816,
	1817, 0, 1352, 0, 0, 0, 0, 0, 0, 3292,
	0, 0, 0, 0, 0, 0, 1848, 1352, 0, 1858,
	0, 0, 0, 0, 0, 0, 1837, 1839, 0, 0,
	0, 270, 0, 0, 0, 0, 1353, 0, 0, 0,
	0, 0, 0, 1854, 0, 1855, 1353, 1353, 0, 0,
	0, 0, 1824, 1825, 0, 0, 0, 0, 0, 1352,
	1352, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 1830, 0, 1807, 1808, 0,
	1840, 1841, 1842, 1851, 1852, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1838, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 270, 0, 1857, 0, 0, 1413,
	0, 1856, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	1845, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 1829, 0, 0, 0, 0, 0, 0, 0,
	270, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 270, 1832, 1833,
	1834, 1835, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 1862, 1858,
	0, 0, 0, 0, 0, 0, 1837, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 1855, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820,
	1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 3291, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 1808, 0, 1840,
	1841, 1842, 1851, 1852, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 1844, 1838,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 1352, 0, 0, 1352, 0,
	0, 0, 1863, 1352, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 1352, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 1352, 1352, 0, 0, 0, 1832, 1833, 1834,
	1835, 0, 0, 0, 0, 0, 0, 1815, 0, 0,
	1352, 1847, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820,
	1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 0, 0,
	0, 0, 1413, 0, 0, 1848, 3290, 0, 1858, 0,
	0, 0, 0, 0, 0, 1837, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 1855, 0, 0, 0, 0, 0,
	0, 1824, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 1808, 1830, 1840, 1841, 1842, 1851, 1852,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 1838, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 1413, 0, 1413, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 1845,
	0, 0, 0, 0, 1352, 1352, 0, 1829, 0, 0,
	1860, 0, 0, 0, 1413, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 1352, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	1413, 0, 0, 1832, 1833, 1834, 1835, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 1858, 0, 0, 1862, 0, 1352,
	0, 1837, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 1352, 0, 1854, 0,
	1855, 0, 0, 0, 0, 0, 0, 1824, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 1352, 1352, 1352, 1352, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820, 1818,
	1819, 1811, 1812, 1813, 1814, 1816, 1817, 1413, 0, 0,
	0, 0, 0, 0, 0, 2604, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 1413, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 1352, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 1352, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 1822, 1828,
	1850, 1827, 1823, 0, 1820, 1818, 1819, 1811, 1812, 1813,
	1814, 1816, 1817, 0, 0, 0, 0, 4690, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 1352, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 1415, 285, 286, 1416, 1417, 1418,
	1352, 1419, 645, 1420, 1421, 1422, 1423, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 1424, 650, 297, 298, 299, 300, 301,
	302, 1425, 1426, 0, 303, 651, 652, 653, 1427, 304,
	305, 654, 1428, 1354, 1429, 306, 307, 308, 309, 310,
	311, 312, 0, 1430, 314, 315, 316, 313, 317, 1431,
	318, 0, 319, 320, 321, 322, 323, 324, 1432, 325,
	326, 327, 1210, 328, 329, 330, 1433, 1434, 1436, 1435,
	1437, 1438, 1439, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 1440, 341, 337, 339, 1441, 342, 340,
	343, 1442, 344, 345, 346, 1443, 1444, 347, 348, 349,
	1445, 350, 351, 352, 1446, 353, 354, 355, 1447, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 1448, 275, 1449, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	1450, 374, 375, 1451, 1452, 1211, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	1453, 388, 663, 1454, 664, 389, 1455, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 1213, 395, 396, 1456,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 1457, 1212, 405, 668, 669, 1458, 670,
	1459, 407, 408, 1214, 671, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	1460, 419, 421, 420, 1461, 422, 672, 1217, 423, 424,
	1218, 1462, 425, 426, 427, 428, 429, 430, 433, 1463,
	1464, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 1465,
	277, 1221, 476, 477, 478, 1466, 673, 479, 674, 481,
	482, 1467, 0, 483, 0, 1468, 1469, 485, 486, 487,
	1470, 1471, 488, 489, 675, 1222, 490, 1223, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 1472, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 1473, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 1474, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 1475, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 1476, 567, 568, 566, 569, 570, 571, 1477,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 1478, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 1479, 600, 601, 0, 597,
	588, 1480, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 1481, 610, 686, 687, 688, 689, 1482, 620, 1483,
	611, 613, 614, 690, 615, 691, 1484, 616, 617, 618,
	619, 612, 621, 622, 1485, 1486, 623, 624, 625, 627,
	628, 626, 629, 1487, 630, 1488, 0, 631, 632, 633,
	692, 693, 694, 1489, 635, 634, 636, 637, 695, 638,
	639, 1490, 1491, 1492, 1493, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 2772,
	0, 0, 0, 0, 0, 0, 0, 2773, 278, 280,
	279, 281, 282, 283, 284, 1415, 285, 286, 1416, 1417,
	1418, 0, 1419, 645, 1420, 1421, 1422, 1423, 287, 288,
	1209, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 1424, 650, 297, 298, 299, 300,
	301, 302, 1425, 1426, 0, 303, 651, 652, 653, 1427,
	304, 305, 654, 1428, 1354, 1429, 306, 307, 308, 309,
	310, 311, 312, 0, 1430, 314, 315, 316, 313, 317,
	1431, 318, 0, 319, 320, 321, 322, 323, 324, 1432,
	325, 326, 327, 1210, 328, 329, 330, 1433, 1434, 1436,
	1435, 1437, 1438, 1439, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 1440, 341, 337, 339, 1441, 342,
	340, 343, 1442, 344, 345, 346, 1443, 1444, 347, 348,
	349, 1445, 350, 351, 352, 1446, 353, 354, 355, 1447,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 1448, 275, 1449, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 1450, 374, 375, 1451, 1452, 1211, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 1453, 388, 663, 1454, 664, 389, 1455, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 1213, 395, 396,
	1456, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 1457, 1212, 405, 668, 669, 1458,
	670, 1459, 407, 408, 1214, 671, 1215, 409, 410, 411,
	1216, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 1460, 419, 421, 420, 1461, 422, 672, 1217, 423,
	424, 1218, 1462, 425, 426, 427, 428, 429, 430, 433,
	1463, 1464, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1219, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 1220, 474, 462,
	1465, 277, 1221, 476, 477, 478, 1466, 673, 479, 674,
	481, 482, 1467, 0, 483, 0, 1468, 1469, 485, 486,
	487, 1470, 1471, 488, 489, 675, 1222, 490, 1223, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1472, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 1473, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 1474, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 1475, 542,
	543, 544, 1224, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 1476, 567, 568, 566, 569, 570, 571,
	1477, 572, 573, 555, 556, 574, 575, 1225, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 1478, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 1479, 600, 601, 0,
	597, 588, 1480, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 1481, 610, 686, 687, 688, 689, 1482, 620,
	1483, 611, 613, 614, 690, 615, 691, 1484, 616, 617,
	618, 619, 612, 621, 622, 1485, 1486, 623, 624, 625,
	627, 628, 626, 629, 1487, 630, 1488, 0, 631, 632,
	633, 692, 693, 694, 1489, 635, 634, 636, 637, 695,
	638, 639, 1490, 1491, 1492, 1493, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 0, 0, 3761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3763, 278, 280, 279,
	281, 282, 283, 284, 1415, 285, 286, 1416, 1417, 1418,
	0, 1419, 645, 1420, 1421, 1422, 1423, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 1424, 650, 297, 298, 299, 300, 301,
	302, 1425, 1426, 0, 303, 651, 652, 653, 1427, 304,
	305, 654, 1428, 1354, 1429, 306, 307, 308, 309, 310,
	311, 312, 0, 1430, 314, 315, 316, 313, 317, 1431,
	318, 0, 319, 320, 321, 322, 323, 324, 1432, 325,
	326, 327, 1210, 328, 329, 330, 1433, 1434, 1436, 1435,
	1437, 1438, 1439, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 1440, 341, 337, 339, 1441, 342, 340,
	343, 1442, 344, 345, 346, 1443, 1444, 347, 348, 349,
	1445, 350, 351, 352, 1446, 353, 354, 355, 1447, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 1448, 275, 1449, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	1450, 374, 375, 1451, 1452, 1211, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	1453, 388, 663, 1454, 664, 389, 1455, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 1213, 395, 396, 1456,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 1457, 1212, 405, 668, 669, 1458, 670,
	1459, 407, 408, 1214, 671, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	1460, 419, 421, 420, 1461, 422, 672, 1217, 423, 424,
	1218, 1462, 425, 426, 427, 428, 429, 430, 433, 1463,
	1464, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 1465,
	277, 1221, 476, 477, 478, 1466, 673, 479, 674, 481,
	482, 1467, 0, 483, 0, 1468, 1469, 485, 486, 487,
	1470, 1471, 488, 489, 675, 1222, 490, 1223, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 1472, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 1473, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 1474, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 1475, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 1476, 567, 568, 566, 569, 570, 571, 1477,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 1478, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 1479, 600, 601, 0, 597,
	588, 1480, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 1481, 610, 686, 687, 688, 689, 1482, 620, 1483,
	611, 613, 614, 690, 615, 691, 1484, 616, 617, 618,
	619, 612, 621, 622, 1485, 1486, 623, 624, 625, 627,
	628, 626, 629, 1487, 630, 1488, 0, 631, 632, 633,
	692, 693, 694, 1489, 635, 634, 636, 637, 695, 638,
	639, 1490, 1491, 1492, 1493, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4156,
	278, 280, 279, 281, 282, 283, 284, 1415, 285, 286,
	1416, 1417, 1418, 0, 1419, 645, 1420, 1421, 1422, 1423,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 1424, 650, 297, 298,
	299, 300, 301, 302, 1425, 1426, 0, 303, 651, 652,
	653, 1427, 304, 305, 654, 1428, 1354, 1429, 306, 307,
	308, 309, 310, 311, 312, 0, 1430, 314, 315, 316,
	313, 317, 1431, 318, 0, 319, 320, 321, 322, 323,
	324, 1432, 325, 326, 327, 1210, 328, 329, 330, 1433,
	1434, 1436, 1435, 1437, 1438, 1439, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 1440, 341, 337, 339,
	1441, 342, 340, 343, 1442, 344, 345, 346, 1443, 1444,
	347, 348, 349, 1445, 350, 351, 352, 1446, 353, 354,
	355, 1447, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 1448, 275,
	1449, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 1450, 374, 375, 1451, 1452, 1211, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 1453, 388, 663, 1454, 664, 389, 1455,
	390, 391, 392, 393, 394, 665, 666, 667, 480, 1213,
	395, 396, 1456, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 1457, 1212, 405, 668,
	669, 1458, 670, 1459, 407, 408, 1214, 671, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 1460, 419, 421, 420, 1461, 422, 672,
	1217, 423, 424, 1218, 1462, 425, 426, 427, 428, 429,
	430, 433, 1463, 1464, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1465, 277, 1221, 476, 477, 478, 1466, 673,
	479, 674, 481, 482, 1467, 0, 483, 0, 1468, 1469,
	485, 486, 487, 1470, 1471, 488, 489, 675, 1222, 490,
	1223, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1472, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	1473, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 1474, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	1475, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 1476, 567, 568, 566, 569,
	570, 571, 1477, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	1478, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 1479, 600,
	601, 0, 597, 588, 1480, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 1481, 610, 686, 687, 688, 689,
	1482, 620, 1483, 611, 613, 614, 690, 615, 691, 1484,
	616, 617, 618, 619, 612, 621, 622, 1485, 1486, 623,
	624, 625, 627, 628, 626, 629, 1487, 630, 1488, 0,
	631, 632, 633, 692, 693, 694, 1489, 635, 634, 636,
	637, 695, 638, 639, 1490, 1491, 1492, 1493, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4367, 278, 280,
	279, 281, 282, 283, 284, 1415, 285, 286, 1416, 1417,
	1418, 0, 1419, 645, 1420, 1421, 1422, 1423, 287, 288,
	1209, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 1424, 650, 297, 298, 299, 300,
	301, 302, 1425, 1426, 0, 303, 651, 652, 653, 1427,
	304, 305, 654, 1428, 1354, 1429, 306, 307, 308, 309,
	310, 311, 312, 0, 1430, 314, 315, 316, 313, 317,
	1431, 318, 0, 319, 320, 321, 322, 323, 324, 1432,
	325, 326, 327, 1210, 328, 329, 330, 1433, 1434, 1436,
	1435, 1437, 1438, 1439, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 1440, 341, 337, 339, 1441, 342,
	340, 343, 1442, 344, 345, 346, 1443, 1444, 347, 348,
	349, 1445, 350, 351, 352, 1446, 353, 354, 355, 1447,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 1448, 275, 1449, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 1450, 374, 375, 1451, 1452, 1211, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 1453, 388, 663, 1454, 664, 389, 1455, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 1213, 395, 396,
	1456, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 1457, 1212, 405, 668, 669, 1458,
	670, 1459, 407, 408, 1214, 671, 1215, 409, 410, 411,
	1216, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 1460, 419, 421, 420, 1461, 422, 672, 1217, 423,
	424, 1218, 1462, 425, 426, 427, 428, 429, 430, 433,
	1463, 1464, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1219, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 1220, 474, 462,
	1465, 277, 1221, 476, 477, 478, 1466, 673, 479, 674,
	481, 482, 1467, 0, 483, 0, 1468, 1469, 485, 486,
	487, 1470, 1471, 488, 489, 675, 1222, 490, 1223, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1472, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 1473, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 1474, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 1475, 542,
	543, 544, 1224, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 1476, 567, 568, 566, 569, 570, 571,
	1477, 572, 573, 555, 556, 574, 575, 1225, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 1478, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 1479, 600, 601, 0,
	597, 588, 1480, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 1481, 610, 686, 687, 688, 689, 1482, 620,
	1483, 611, 613, 614, 690, 615, 691, 1484, 616, 617,
	618, 619, 612, 621, 622, 1485, 1486, 623, 624, 625,
	627, 628, 626, 629, 1487, 630, 1488, 0, 631, 632,
	633, 692, 693, 694, 1489, 635, 634, 636, 637, 695,
	638, 639, 1490, 1491, 1492, 1493, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4236, 278, 280, 279, 281,
	282, 283, 284, 1415, 285, 286, 1416, 1417, 1418, 0,
	1419, 645, 1420, 1421, 1422, 1423, 287, 288, 1209, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 1424, 650, 297, 298, 299, 300, 301, 302,
	1425, 1426, 0, 303, 651, 652, 653, 1427, 304, 305,
	654, 1428, 1354, 1429, 306, 307, 308, 309, 310, 311,
	312, 0, 1430, 314, 315, 316, 313, 317, 1431, 318,
	0, 319, 320, 321, 322, 323, 324, 1432, 325, 326,
	327, 1210, 328, 329, 330, 1433, 1434, 1436, 1435, 1437,
	1438, 1439, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 1440, 341, 337, 339, 1441, 342, 340, 343,
	1442, 344, 345, 346, 1443, 1444, 347, 348, 349, 1445,
	350, 351, 352, 1446, 353, 354, 355, 1447, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 1448, 275, 1449, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 1450,
	374, 375, 1451, 1452, 1211, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 1453,
	388, 663, 1454, 664, 389, 1455, 390, 391, 392, 393,
	394, 665, 666, 667, 480, 1213, 395, 396, 1456, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 1457, 1212, 405, 668, 669, 1458, 670, 1459,
	407, 408, 1214, 671, 1215, 409, 410, 411, 1216, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 1460,
	419, 421, 420, 1461, 422, 672, 1217, 423, 424, 1218,
	1462, 425, 426, 427, 428, 429, 430, 433, 1463, 1464,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1219,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 1220, 474, 462, 1465, 277,
	1221, 476, 477, 478, 1466, 673, 479, 674, 481, 482,
	1467, 0, 483, 0, 1468, 1469, 485, 486, 487, 1470,
	1471, 488, 489, 675, 1222, 490, 1223, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	1472, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 1473, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 1474, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 1475, 542, 543, 544,
	1224, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 1476, 567, 568, 566, 569, 570, 571, 1477, 572,
	573, 555, 556, 574, 575, 1225, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 1478, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 1479, 600, 601, 0, 597, 588,
	1480, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	1481, 610, 686, 687, 688, 689, 1482, 620, 1483, 611,
	613, 614, 690, 615, 691, 1484, 616, 617, 618, 619,
	612, 621, 622, 1485, 1486, 623, 624, 625, 627, 628,
	626, 629, 1487, 630, 1488, 0, 631, 632, 633, 692,
	693, 694, 1489, 635, 634, 636, 637, 695, 638, 639,
	1490, 1491, 1492, 1493, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4086, 278, 280, 279, 281, 282, 283,
	284, 1415, 285, 286, 1416, 1417, 1418, 0, 1419, 645,
	1420, 1421, 1422, 1423, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	1424, 650, 297, 298, 299, 300, 301, 302, 1425, 1426,
	0, 303, 651, 652, 653, 1427, 304, 305, 654, 1428,
	1354, 1429, 306, 307, 308, 309, 310, 311, 312, 0,
	1430, 314, 315, 316, 313, 317, 1431, 318, 0, 319,
	320, 321, 322, 323, 324, 1432, 325, 326, 327, 1210,
	328, 329, 330, 1433, 1434, 1436, 1435, 1437, 1438, 1439,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	1440, 341, 337, 339, 1441, 342, 340, 343, 1442, 344,
	345, 346, 1443, 1444, 347, 348, 349, 1445, 350, 351,
	352, 1446, 353, 354, 355, 1447, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 1448, 275, 1449, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 1450, 374, 375,
	1451, 1452, 1211, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 1453, 388, 663,
	1454, 664, 389, 1455, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 1213, 395, 396, 1456, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	1457, 1212, 405, 668, 669, 1458, 670, 1459, 407, 408,
	1214, 671, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 1460, 419, 421,
	420, 1461, 422, 672, 1217, 423, 424, 1218, 1462, 425,
	426, 427, 428, 429, 430, 433, 1463, 1464, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 1465, 277, 1221, 476,
	477, 478, 1466, 673, 479, 674, 481, 482, 1467, 0,
	483, 0, 1468, 1469, 485, 486, 487, 1470, 1471, 488,
	489, 675, 1222, 490, 1223, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1472, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 1473, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 1474, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 1475, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 1476,
	567, 568, 566, 569, 570, 571, 1477, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 1478, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 1479, 600, 601, 0, 597, 588, 1480, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 1481, 610,
	686, 687, 688, 689, 1482, 620, 1483, 611, 613, 614,
	690, 615, 691, 1484, 616, 617, 618, 619, 612, 621,
	622, 1485, 1486, 623, 624, 625, 627, 628, 626, 629,
	1487, 630, 1488, 0, 631, 632, 633, 692, 693, 694,
	1489, 635, 634, 636, 637, 695, 638, 639, 1490, 1491,
	1492, 1493, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3779, 278, 280, 279, 281, 282, 283, 284, 1415,
	285, 286, 1416, 1417, 1418, 0, 1419, 645, 1420, 1421,
	1422, 1423, 287, 288, 1209, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 1424, 650,
	297, 298, 299, 300, 301, 302, 1425, 1426, 0, 303,
	651, 652, 653, 1427, 304, 305, 654, 1428, 1354, 1429,
	306, 307, 308, 309, 310, 311, 312, 0, 1430, 314,
	315, 316, 313, 317, 1431, 318, 0, 319, 320, 321,
	322, 323, 324, 1432, 325, 326, 327, 1210, 328, 329,
	330, 1433, 1434, 1436, 1435, 1437, 1438, 1439, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 1440, 341,
	337, 339, 1441, 342, 340, 343, 1442, 344, 345, 346,
	1443, 1444, 347, 348, 349, 1445, 350, 351, 352, 1446,
	353, 354, 355, 1447, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	1448, 275, 1449, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 1450, 374, 375, 1451, 1452,
	1211, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 1453, 388, 663, 1454, 664,
	389, 1455, 390, 391, 392, 393, 394, 665, 666, 667,
	480, 1213, 395, 396, 1456, 397, 398, 399, 400, 401,
	0, 0, 0, 276, 402, 403, 404, 406, 1457, 1212,
	405, 668, 669, 1458, 670, 1459, 407, 408, 1214, 671,
	1215, 409, 410, 411, 1216, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 1460, 419, 421, 420, 1461,
	422, 672, 1217, 423, 424, 1218, 1462, 425, 426, 427,
	428, 429, 430, 433, 1463, 1464, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1219, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 1220, 474, 462, 1465, 277, 1221, 476, 477, 478,
	1466, 673, 479, 674, 481, 482, 1467, 0, 483, 0,
	1468, 1469, 485, 486, 487, 1470, 1471, 488, 489, 675,
	1222, 490, 1223, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 1472, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 1473, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 1474,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 1475, 542, 543, 544, 1224, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 1476, 567, 568,
	566, 569, 570, 571, 1477, 572, 573, 555, 556, 574,
	575, 1225, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 1478, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	1479, 600, 601, 0, 597, 588, 1480, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 1481, 610, 686, 687,
	688, 689, 1482, 620, 1483, 611, 613, 614, 690, 615,
	691, 1484, 616, 617, 618, 619, 612, 621, 622, 1485,
	1486, 623, 624, 625, 627, 628, 626, 629, 1487, 630,
	1488, 0, 631, 632, 633, 692, 693, 694, 1489, 635,
	634, 636, 637, 695, 638, 639, 1490, 1491, 1492, 1493,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3602,
	278, 280, 279, 281, 282, 283, 284, 1415, 285, 286,
	1416, 1417, 1418, 0, 1419, 645, 1420, 1421, 1422, 1423,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 1424, 650, 297, 298,
	299, 300, 301, 302, 1425, 1426, 0, 303, 651, 652,
	653, 1427, 304, 305, 654, 1428, 1354, 1429, 306, 307,
	308, 309, 310, 311, 312, 0, 1430, 314, 315, 316,
	313, 317, 1431, 318, 0, 319, 320, 321, 322, 323,
	324, 1432, 325, 326, 327, 1210, 328, 329, 330, 1433,
	1434, 1436, 1435, 1437, 1438, 1439, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 1440, 341, 337, 339,
	1441, 342, 340, 343, 1442, 344, 345, 346, 1443, 1444,
	347, 348, 349, 1445, 350, 351, 352, 1446, 353, 354,
	355, 1447, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 1448, 275,
	1449, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 1450, 374, 375, 1451, 1452, 1211, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 1453, 388, 663, 1454, 664, 389, 1455,
	390, 391, 392, 393, 394, 665, 666, 667, 480, 1213,
	395, 396, 1456, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 1457, 1212, 405, 668,
	669, 1458, 670, 1459, 407, 408, 1214, 671, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 1460, 419, 421, 420, 1461, 422, 672,
	1217, 423, 424, 1218, 1462, 425, 426, 427, 428, 429,
	430, 433, 1463, 1464, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1465, 277, 1221, 476, 477, 478, 1466, 673,
	479, 674, 481, 482, 1467, 0, 483, 0, 1468, 1469,
	485, 486, 487, 1470, 1471, 488, 489, 675, 1222, 490,
	1223, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1472, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	1473, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 1474, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	1475, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 1476, 567, 568, 566, 569,
	570, 571, 1477, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	1478, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 1479, 600,
	601, 0, 597, 588, 1480, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 1481, 610, 686, 687, 688, 689,
	1482, 620, 1483, 611, 613, 614, 690, 615, 691, 1484,
	616, 617, 618, 619, 612, 621, 622, 1485, 1486, 623,
	624, 625, 627, 628, 626, 629, 1487, 630, 1488, 0,
	631, 632, 633, 692, 693, 694, 1489, 635, 634, 636,
	637, 695, 638, 639, 1490, 1491, 1492, 1493, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2627, 278, 280,
	279, 281, 282, 283, 284, 1415, 285, 286, 1416, 1417,
	1418, 0, 1419, 645, 1420, 1421, 1422, 1423, 287, 288,
	1209, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 1424, 650, 297, 298, 299, 300,
	301, 302, 1425, 1426, 0, 303, 651, 652, 653, 1427,
	304, 305, 654, 1428, 1354, 1429, 306, 307, 308, 309,
	310, 311, 312, 0, 1430, 314, 315, 316, 313, 317,
	1431, 318, 0, 319, 320, 321, 322, 323, 324, 1432,
	325, 326, 327, 1210, 328, 329, 330, 1433, 1434, 1436,
	1435, 1437, 1438, 1439, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 1440, 341, 337, 339, 1441, 342,
	340, 343, 1442, 344, 345, 346, 1443, 1444, 347, 348,
	349, 1445, 350, 351, 352, 1446, 353, 354, 355, 1447,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 1448, 275, 1449, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 1450, 374, 375, 1451, 1452, 1211, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 1453, 388, 663, 1454, 664, 389, 1455, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 1213, 395, 396,
	1456, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 1457, 1212, 405, 668, 669, 1458,
	670, 1459, 407, 408, 1214, 671, 1215, 409, 410, 411,
	1216, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 1460, 419, 421, 420, 1461, 422, 672, 1217, 423,
	424, 1218, 1462, 425, 426, 427, 428, 429, 430, 433,
	1463, 1464, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1219, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 1220, 474, 462,
	1465, 277, 1221, 476, 477, 478, 1466, 673, 479, 674,
	481, 482, 1467, 0, 483, 0, 1468, 1469, 485, 486,
	487, 1470, 1471, 488, 489, 675, 1222, 490, 1223, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1472, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 1473, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 1474, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 1475, 542,
	543, 544, 1224, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 1476, 567, 568, 566, 569, 570, 571,
	1477, 572, 573, 555, 556, 574, 575, 1225, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 1478, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 1479, 600, 601, 0,
	597, 588, 1480, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 1481, 610, 686, 687, 688, 689, 1482, 620,
	1483, 611, 613, 614, 690, 615, 691, 1484, 616, 617,
	618, 619, 612, 621, 622, 1485, 1486, 623, 624, 625,
	627, 628, 626, 629, 1487, 630, 1488, 0, 631, 632,
	633, 692, 693, 694, 1489, 635, 634, 636, 637, 695,
	638, 639, 1490, 1491, 1492, 1493, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 1505, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2256, 278, 280, 279, 281,
	282, 283, 284, 1415, 285, 286, 1416, 1417, 1418, 0,
	1419, 645, 1420, 1421, 1422, 1423, 287, 288, 1209, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 1424, 650, 297, 298, 299, 300, 301, 302,
	1425, 1426, 0, 303, 651, 652, 653, 1427, 304, 305,
	654, 1428, 1354, 1429, 306, 307, 308, 309, 310, 311,
	312, 0, 1430, 314, 315, 316, 313, 317, 1431, 318,
	0, 319, 320, 321, 322, 323, 324, 1432, 325, 326,
	327, 1210, 328, 329, 330, 1433, 1434, 1436, 1435, 1437,
	1438, 1439, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 1440, 341, 337, 339, 1441, 342, 340, 343,
	1442, 344, 345, 346, 1443, 1444, 347, 348, 349, 1445,
	350, 351, 352, 1446, 353, 354, 355, 1447, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 1448, 275, 1449, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 1450,
	374, 375, 1451, 1452, 1211, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 1453,
	388, 663, 1454, 664, 389, 1455, 390, 391, 392, 393,
	394, 665, 666, 667, 480, 1213, 395, 396, 1456, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 1457, 1212, 405, 668, 669, 1458, 670, 1459,
	407, 408, 1214, 671, 1215, 409, 410, 411, 1216, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 1460,
	419, 421, 420, 1461, 422, 672, 1217, 423, 424, 1218,
	1462, 425, 426, 427, 428, 429, 430, 433, 1463, 1464,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1219,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 1220, 474, 462, 1465, 277,
	1221, 476, 477, 478, 1466, 673, 479, 674, 481, 482,
	1467, 0, 483, 0, 1468, 1469, 485, 486, 487, 1470,
	1471, 488, 489, 675, 1222, 490, 1223, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	1472, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 1473, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 1474, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 1475, 542, 543, 544,
	1224, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 1476, 567, 568, 566, 569, 570, 571, 1477, 572,
	573, 555, 556, 574, 575, 1225, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 1478, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 1479, 600, 601, 0, 597, 588,
	1480, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	1481, 610, 686, 687, 688, 689, 1482, 620, 1483, 611,
	613, 614, 690, 615, 691, 1484, 616, 617, 618, 619,
	612, 621, 622, 1485, 1486, 623, 624, 625, 627, 628,
	626, 629, 1487, 630, 1488, 0, 631, 632, 633, 692,
	693, 694, 1489, 635, 634, 636, 637, 695, 638, 639,
	1490, 1491, 1492, 1493, 640, 641, 696, 642, 643, 644,
	1407, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 1415, 285, 286, 1416,
	1417, 1418, 0, 1419, 645, 1420, 1421, 1422, 1423, 287,
	288, 1209, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 1424, 650, 297, 298, 299,
	300, 301, 302, 1425, 1426, 0, 303, 651, 652, 653,
	1427, 304, 305, 654, 1428, 1354, 1429, 306, 307, 308,
	309, 310, 311, 312, 0, 1430, 314, 315, 316, 313,
	317, 1431, 318, 0, 319, 320, 321, 322, 323, 324,
	1432, 325, 326, 327, 1210, 328, 329, 330, 1433, 1434,
	1436, 1435, 1437, 1438, 1439, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 1440, 341, 337, 339, 1441,
	342, 340, 343, 1442, 344, 345, 346, 1443, 1444, 347,
	348, 349, 1445, 350, 351, 352, 1446, 353, 354, 355,
	1447, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 1448, 275, 1449,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 1450, 374, 375, 1451, 1452, 1211, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 1453, 388, 663, 1454, 664, 389, 1455, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 1213, 395,
	396, 1456, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 1457, 1212, 405, 668, 669,
	1458, 670, 1459, 407, 408, 1214, 671, 1215, 409, 410,
	411, 1216, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 1460, 419, 421, 420, 1461, 422, 672, 1217,
	423, 424, 1218, 1462, 425, 426, 427, 428, 429, 430,
	433, 1463, 1464, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1219, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 1220, 474,
	462, 1465, 277, 1221, 476, 477, 478, 1466, 673, 479,
	674, 481, 482, 1467, 0, 483, 0, 1468, 1469, 485,
	486, 487, 1470, 1471, 488, 489, 675, 1222, 490, 1223,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1472, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 1473,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 1474, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 1475,
	542, 543, 544, 1224, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 1476, 567, 568, 566, 569, 570,
	571, 1477, 572, 573, 555, 556, 574, 575, 1225, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 1478,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 1479, 600, 601,
	0, 597, 588, 1480, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 1481, 610, 686, 687, 688, 689, 1482,
	620, 1483, 611, 613, 614, 690, 615, 691, 1484, 616,
	617, 618, 619, 612, 621, 622, 1485, 1486, 623, 624,
	625, 627, 628, 626, 629, 1487, 630, 1488, 0, 631,
	632, 633, 692, 693, 694, 1489, 635, 634, 636, 637,
	695, 638, 639, 1490, 1491, 1492, 1493, 640, 641, 696,
	642, 643, 644, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 1415, 285, 286,
	1416, 1417, 1418, 0, 1419, 645, 1420, 1421, 1422, 1423,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 1424, 650, 297, 298,
	299, 300, 301, 302, 1425, 1426, 0, 303, 651, 652,
	653, 1427, 304, 305, 654, 1428, 1354, 1429, 306, 307,
	308, 309, 310, 311, 312, 0, 1430, 314, 315, 316,
	313, 317, 1431, 318, 0, 319, 320, 321, 322, 323,
	324, 1432, 325, 326, 327, 1210, 328, 329, 330, 1433,
	1434, 1436, 1435, 1437, 1438, 1439, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 1440, 341, 337, 339,
	1441, 342, 340, 343, 1442, 344, 345, 346, 1443, 1444,
	347, 348, 349, 1445, 350, 351, 352, 1446, 353, 354,
	355, 1447, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 1448, 275,
	1449, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 1450, 374, 375, 1451, 1452, 1211, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 1453, 388, 663, 1454, 664, 389, 1455,
	390, 391, 392, 393, 394, 665, 666, 667, 480, 1213,
	395, 396, 1456, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 1457, 1212, 405, 668,
	669, 1458, 670, 1459, 407, 408, 1214, 671, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 1460, 419, 421, 420, 1461, 422, 672,
	1217, 423, 424, 1218, 1462, 425, 426, 427, 428, 429,
	430, 433, 1463, 1464, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1465, 277, 1221, 476, 477, 478, 1466, 673,
	479, 674, 481, 482, 1467, 0, 483, 0, 1468, 1469,
	485, 486, 487, 1470, 1471, 488, 489, 675, 1222, 490,
	1223, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1472, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	1473, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 1474, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	1475, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 1476, 567, 568, 566, 569,
	570, 571, 1477, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	1478, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 1479, 600,
	601, 0, 597, 588, 1480, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 1481, 610, 686, 687, 688, 689,
	1482, 620, 1483, 611, 613, 614, 690, 615, 691, 1484,
	616, 617, 618, 619, 612, 621, 622, 1485, 1486, 623,
	624, 625, 627, 628, 626, 629, 1487, 630, 1488, 0,
	631, 632, 633, 692, 693, 694, 1489, 635, 634, 636,
	637, 695, 638, 639, 1490, 1491, 1492, 1493, 640, 641,
	696, 642, 643, 644, 2602, 0, 1145, 1117, 1118, 1119,
	1115, 1116, 1128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	2599, 285, 286, 0, 0, 0, 0, 0, 1169, 1133,
	0, 0, 0, 287, 288, 1209, 289, 290, 291, 292,
	293, 294, 646, 1182, 0, 295, 1189, 296, 1188, 0,
	1199, 297, 298, 299, 300, 301, 302, 1135, 1168, 1100,
	303, 1229, 1230, 653, 0, 304, 305, 1175, 0, 1156,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 1210, 328,
	329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331,
	332, 333, 334, 335, 1192, 336, 338, 1186, 1185, 1105,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 2600, 0, 347, 1177, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 1111, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 1200, 1201,
	369, 1124, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 1184, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 1211, 376, 377, 378, 1197, 1198, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 1207, 0,
	1134, 389, 0, 390, 391, 392, 393, 394, 1170, 1171,
	1174, 480, 1213, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	1212, 405, 1179, 1180, 0, 1140, 0, 407, 408, 1214,
	1172, 1215, 409, 410, 411, 1216, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1208, 1217, 423, 424, 1218, 0, 425, 426,
	427, 428, 429, 430, 433, 1163, 1162, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1219, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 1220, 474, 462, 1102, 277, 1221, 476, 477,
	478, 1125, 1173, 479, 1187, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 1222, 490, 1223, 1202, 491, 492, 1112, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 1203, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1183, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1224, 545, 546,
	547, 548, 549, 1113, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1166, 572, 573, 555, 556,
	574, 575, 1225, 576, 577, 578, 579, 580, 581, 582,
	1181, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 1228, 591, 592, 593, 594, 1204, 598,
	599, 0, 600, 601, 1099, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 1193,
	1194, 1195, 1196, 0, 620, 0, 611, 613, 614, 1205,
	615, 1206, 1123, 616, 617, 618, 619, 612, 621, 622,
	0, 1106, 623, 624, 625, 627, 628, 626, 629, 1167,
	630, 0, 0, 631, 632, 633, 692, 1190, 1227, 2598,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1098, 0, 0, 0, 0, 0, 0, 1096, 1097,
	2601, 0, 0, 0, 0, 0, 0, 1129, 2597, 0,
	1087, 1127, 1145, 1117, 1118, 1119, 1115, 1116, 1128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 1169, 1133, 0, 0, 0, 287,
	288, 1209, 289, 290, 291, 292, 293, 294, 646, 1182,
	0, 295, 1189, 296, 1188, 0, 1199, 297, 298, 299,
	300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230, 653,
	0, 304, 305, 1175, 0, 1156, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 1210, 328, 329, 330, 1159, 1157,
	1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334, 335,
	1192, 336, 338, 1186, 1185, 1105, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	1177, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 1111, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 1200, 1201, 369, 1124, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 1184, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 1211, 376, 377,
	378, 1197, 1198, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 1207, 0, 1134, 389, 0, 390,
	391, 392, 393, 394, 1170, 1171, 1174, 480, 1213, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 0, 1212, 405, 1179, 1180,
	0, 1140, 0, 407, 408, 1214, 1172, 1215, 409, 410,
	411, 1216, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1208, 1217,
	423, 424, 1218, 0, 425, 426, 427, 428, 429, 430,
	433, 1163, 1162, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1219, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 1220, 474,
	462, 1102, 277, 1221, 476, 477, 478, 1125, 1173, 479,
	1187, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 1222, 490, 1223,
	1202, 491, 492, 1112, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 1203, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1183, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1224, 545, 546, 547, 548, 549, 1113,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 237, 567, 568, 566, 569, 570,
	571, 1166, 572, 573, 555, 556, 574, 575, 1225, 576,
	577, 578, 579, 580, 581, 582, 1181, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 1228,
	591, 592, 593, 594, 1204, 598, 599, 0, 600, 601,
	1099, 597, 588, 239, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 1193, 1194, 1195, 1196, 0,
	620, 0, 611, 613, 614, 1205, 615, 1206, 1123, 616,
	617, 618, 619, 612, 621, 622, 0, 1106, 623, 624,
	625, 627, 628, 626, 629, 1167, 630, 0, 0, 631,
	632, 633, 1631, 1190, 1227, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 231, 640, 641, 696,
	642, 643, 644, 1103, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1098, 0, 0,
	0, 0, 0, 0, 1096, 1097, 1145, 1117, 1118, 1119,
	1115, 1116, 1128, 1888, 1886, 0, 0, 1127, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 1169, 1133,
	0, 0, 0, 287, 288, 1209, 289, 290, 291, 292,
	293, 294, 646, 1182, 0, 295, 1189, 296, 1188, 0,
	1199, 297, 298, 299, 300, 301, 302, 1135, 1168, 1100,
	303, 1229, 1230, 653, 0, 304, 305, 1175, 0, 1156,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 1210, 328,
	329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331,
	332, 333, 334, 335, 1192, 336, 338, 1186, 1185, 1105,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 1177, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 1111, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 1200, 1201,
	369, 1124, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 1184, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 1211, 376, 377, 378, 1197, 1198, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 1207, 0,
	1134, 389, 0, 390, 391, 392, 393, 394, 1170, 1171,
	1174, 480, 1213, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	1212, 405, 1179, 1180, 0, 1140, 0, 407, 408, 1214,
	1172, 1215, 409, 410, 411, 1216, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1208, 1217, 423, 424, 1218, 0, 425, 426,
	427, 428, 429, 430, 433, 1163, 1162, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1219, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 1220, 474, 462, 1102, 277, 1221, 476, 477,
	478, 1125, 1173, 479, 1187, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 1222, 490, 1223, 1202, 491, 492, 1112, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 1203, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1183, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1224, 545, 546,
	547, 548, 549, 1113, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 237, 567,
	568, 566, 569, 570, 571, 1166, 572, 573, 555, 556,
	574, 575, 1225, 576, 577, 578, 579, 580, 581, 582,
	1181, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 1228, 591, 592, 593, 594, 1204, 598,
	599, 0, 600, 601, 1099, 597, 588, 239, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 1193,
	1194, 1195, 1196, 0, 620, 0, 611, 613, 614, 1205,
	615, 1206, 1123, 616, 617, 618, 619, 612, 621, 622,
	0, 1106, 623, 624, 625, 627, 628, 626, 629, 1167,
	630, 0, 0, 631, 632, 633, 1631, 1190, 1227, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	231, 640, 641, 696, 642, 643, 644, 1103, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1098, 0, 0, 0, 0, 0, 0, 1096, 1097,
	1145, 1117, 1118, 1119, 1115, 1116, 1128, 1888, 3246, 0,
	0, 1127, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 1169, 1133, 0, 0, 0, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 1182, 0, 295,
	1189, 296, 1188, 0, 1199, 297, 298, 299, 300, 301,
	302, 1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304,
	305, 1175, 0, 1156, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165,
	1161, 1160, 1164, 331, 332, 333, 334, 335, 1192, 336,
	338, 1186, 1185, 1105, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 1177, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 1111, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 1200, 1201, 369, 1124, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 1184, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 1211, 376, 377, 378, 1197,
	1198, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 1207, 0, 1134, 389, 0, 390, 391, 392,
	393, 394, 1170, 1171, 1174, 480, 1213, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 1212, 405, 1179, 1180, 0, 1140,
	0, 407, 408, 1214, 1172, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1208, 1217, 423, 424,
	1218, 0, 425, 426, 427, 428, 429, 430, 433, 1163,
	1162, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 1102,
	277, 1221, 476, 477, 478, 1125, 1173, 479, 1187, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 1222, 490, 1223, 1202, 491,
	492, 1112, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 1203, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1183, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 1113, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 237, 567, 568, 566, 569, 570, 571, 1166,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 1181, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 1228, 591, 592,
	593, 594, 1204, 598, 599, 0, 600, 601, 1099, 597,
	588, 239, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 1193, 1194, 1195, 1196, 0, 620, 0,
	611, 613, 614, 1205, 615, 1206, 1123, 616, 617, 618,
	619, 612, 621, 622, 0, 1106, 623, 624, 625, 627,
	628, 626, 629, 1167, 630, 0, 0, 631, 632, 633,
	1631, 1190, 1227, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 231, 640, 641, 696, 642, 643,
	644, 1103, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1098, 0, 0, 0, 0,
	0, 0, 1096, 1097, 1145, 1117, 1118, 1119, 1115, 1116,
	1128, 1888, 1886, 0, 0, 1127, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 1169, 1133, 0, 0,
	0, 287, 288, 1209, 289, 290, 291, 292, 293, 294,
	646, 1182, 0, 295, 1189, 296, 1188, 2733, 1199, 297,
	298, 299, 300, 301, 302, 1135, 1168, 1100, 303, 1229,
	1230, 653, 0, 304, 305, 1175, 0, 1156, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1210, 328, 329, 330,
	1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333,
	334, 335, 1192, 336, 338, 1186, 1185, 1105, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 1177, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 1111, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 1200, 1201, 369, 1124,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 1184,
	0, 0, 0, 373, 0, 374, 375, 0, 2738, 1211,
	376, 377, 378, 1197, 1198, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 1207, 0, 1134, 389,
	0, 390, 391, 392, 393, 394, 1170, 1171, 1174, 480,
	1213, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 1212, 405,
	1179, 1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215,
	409, 410, 411, 1216, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 2734, 422,
	1208, 1217, 423, 424, 1218, 0, 425, 426, 427, 428,
	429, 430, 433, 1163, 1162, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1219, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	1220, 474, 462, 1102, 277, 1221, 476, 477, 478, 1125,
	1173, 479, 1187, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 1222,
	490, 1223, 1202, 491, 492, 1112, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 1203, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1183, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1224, 545, 546, 547, 548,
	549, 1113, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1166, 572, 573, 555, 556, 574, 575,
	1225, 576, 577, 578, 579, 580, 581, 582, 1181, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 1228, 591, 592, 593, 594, 1204, 598, 599, 0,
	600, 601, 1099, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 1193, 1194, 1195,
	1196, 0, 620, 2735, 611, 613, 614, 1205, 615, 1206,
	1123, 616, 617, 618, 619, 612, 621, 622, 0, 1106,
	623, 624, 625, 627, 628, 626, 629, 1167, 630, 0,
	0, 631, 632, 633, 692, 1190, 1227, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1103, 0, 0, 0, 2647,
	0, 1145, 1117, 1118, 1119, 1115, 1116, 1128, 0, 1098,
	0, 0, 0, 0, 0, 0, 1096, 1097, 278, 280,
	279, 281, 282, 283, 284, 1129, 285, 286, 0, 1127,
	0, 0, 0, 1169, 1133, 0, 0, 0, 287, 288,
	1209, 289, 290, 291, 292, 293, 294, 646, 1182, 0,
	295, 1189, 296, 1188, 0, 1199, 297, 298, 299, 300,
	301, 302, 1135, 1168, 1100, 303, 1229, 1230, 653, 0,
	304, 305, 1175, 0, 1156, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1210, 328, 329, 330, 1159, 1157, 1158,
	1165, 1161, 1160, 1164, 331, 332, 333, 334, 335, 1192,
	336, 338, 1186, 1185, 1105, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1177,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1111, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1200, 1201, 369, 1124, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1184, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 1211, 376, 377, 378,
	1197, 1198, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 1207, 0, 1134, 389, 0, 390, 391,
	392, 393, 394, 1170, 1171, 1174, 480, 1213, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 1212, 405, 1179, 1180, 0,
	1140, 0, 407, 408, 1214, 1172, 1215, 409, 410, 411,
	1216, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1208, 1217, 423,
	424, 1218, 0, 425, 426, 427, 428, 429, 430, 433,
	1163, 1162, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1219, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 1220, 474, 462,
	1102, 277, 1221, 476, 477, 478, 1125, 1173, 479, 1187,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 1222, 490, 1223, 1202,
	491, 492, 1112, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 1203, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1183,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1224, 545, 546, 547, 548, 549, 1113, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1166, 572, 573, 555, 556, 574, 575, 1225, 576, 577,
	578, 579, 580, 581, 582, 1181, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 1228, 591,
	592, 593, 594, 1204, 598, 599, 0, 600, 601, 1099,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 1193, 1194, 1195, 1196, 0, 620,
	0, 611, 613, 614, 1205, 615, 1206, 1123, 616, 617,
	618, 619, 612, 621, 622, 0, 1106, 623, 624, 625,
	627, 628, 626, 629, 1167, 630, 0, 0, 631, 632,
	633, 692, 1190, 1227, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1098, 0, 0, 0,
	0, 0, 0, 1096, 1097, 0, 0, 0, 0, 0,
	0, 0, 1129, 2645, 0, 2644, 1127, 1145, 1117, 1118,
	1119, 1115, 1116, 1128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 1169,
	1133, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 1182, 0, 295, 1189, 296, 1188,
	0, 1199, 297, 298, 299, 300, 301, 302, 1135, 1168,
	1100, 303, 1229, 1230, 653, 0, 304, 305, 1175, 0,
	1156, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164,
	331, 332, 333, 334, 335, 1192, 336, 338, 1186, 1185,
	1105, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1177, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1111, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1200,
	1201, 369, 1124, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1184, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 1197, 1198, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 1207,
	0, 1134, 389, 0, 390, 391, 392, 393, 394, 1170,
	1171, 1174, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 1212, 405, 1179, 1180, 0, 1140, 0, 407, 408,
	1214, 1172, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1208, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 1163, 1162, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 1102, 277, 1221, 476,
	477, 478, 1125, 1173, 479, 1187, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 1202, 491, 492, 1112, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 1203,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1183, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 1113, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1166, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 1181, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 1228, 591, 592, 593, 594, 1204,
	598, 599, 0, 600, 601, 1099, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	1193, 1194, 1195, 1196, 0, 620, 0, 611, 613, 614,
	1205, 615, 1206, 1123, 616, 617, 618, 619, 612, 621,
	622, 0, 1106, 623, 624, 625, 627, 628, 626, 629,
	1167, 630, 0, 0, 631, 632, 633, 692, 1190, 1227,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1098, 0, 0, 0, 0, 0, 0, 1096,
	1097, 0, 0, 0, 0, 0, 0, 0, 1129, 2642,
	0, 2641, 1127, 1145, 1117, 1118, 1119, 1115, 1116, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 1169, 1133, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	1182, 0, 295, 1189, 296, 1188, 0, 1199, 297, 298,
	299, 300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230,
	653, 0, 304, 305, 1175, 0, 1156, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 1159,
	1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334,
	335, 1192, 336, 338, 1186, 1185, 1105, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 1177, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 1111, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 1200, 1201, 369, 1124, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 1184, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 1197, 1198, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 1207, 0, 1134, 389, 0,
	390, 391, 392, 393, 394, 1170, 1171, 1174, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 1212, 405, 1179,
	1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1208,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 1163, 1162, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1102, 277, 1221, 476, 477, 478, 1125, 1173,
	479, 1187, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 1202, 491, 492, 1112, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 1203, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1183, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	1113, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1166, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 1181, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	1228, 591, 592, 593, 594, 1204, 598, 599, 0, 600,
	601, 1099, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 1193, 1194, 1195, 1196,
	0, 620, 0, 611, 613, 614, 1205, 615, 1206, 1123,
	616, 617, 618, 619, 612, 621, 622, 0, 1106, 623,
	624, 625, 627, 628, 626, 629, 1167, 630, 0, 0,
	631, 632, 633, 692, 1190, 1227, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1098, 0,
	0, 0, 0, 0, 0, 1096, 1097, 0, 0, 0,
	0, 0, 0, 0, 1129, 2639, 0, 2638, 1127, 1145,
	1117, 1118, 1119, 1115, 1116, 1128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 1169, 1133, 0, 0, 0, 287, 288, 1209, 289,
	290, 291, 292, 293, 294, 646, 1182, 0, 295, 1189,
	296, 1188, 0, 1199, 297, 298, 299, 300, 301, 302,
	1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304, 305,
	1175, 0, 1156, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165, 1161,
	1160, 1164, 331, 332, 333, 334, 335, 1192, 336, 338,
	1186, 1185, 1105, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 1177, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	1111, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 1200, 1201, 369, 1124, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 1184, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 1211, 376, 377, 378, 1197, 1198,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 1207, 0, 1134, 389, 0, 390, 391, 392, 393,
	394, 1170, 1171, 1174, 480, 1213, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 0, 1212, 405, 1179, 1180, 0, 1140, 0,
	407, 408, 1214, 1172, 1215, 409, 410, 411, 1216, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1208, 1217, 423, 424, 1218,
	0, 425, 426, 427, 428, 429, 430, 433, 1163, 1162,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1219,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 1220, 474, 462, 1102, 277,
	1221, 476, 477, 478, 1125, 1173, 479, 1187, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 1222, 490, 1223, 1202, 491, 492,
	1112, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 1203, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1183, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1224, 545, 546, 547, 548, 549, 1113, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1166, 572,
	573, 555, 556, 574, 575, 1225, 576, 577, 578, 579,
	580, 581, 582, 1181, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 1228, 591, 592, 593,
	594, 1204, 598, 599, 0, 600, 601, 1099, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 1193, 1194, 1195, 1196, 0, 620, 0, 611,
	613, 614, 1205, 615, 1206, 1123, 616, 617, 618, 619,
	612, 621, 622, 0, 1106, 623, 624, 625, 627, 628,
	626, 629, 1167, 630, 0, 0, 631, 632, 633, 692,
	1190, 1227, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1098, 0, 0, 0, 0, 0,
	0, 1096, 1097, 0, 0, 0, 0, 0, 0, 0,
	1129, 2636, 0, 1727, 1127, 1145, 1117, 1118, 1119, 1115,
	1116, 1128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 1169, 1133, 0,
	0, 0, 287, 288, 1209, 289, 290, 291, 292, 293,
	294, 646, 1182, 0, 295, 1189, 296, 1188, 0, 1199,
	297, 298, 299, 300, 301, 302, 1135, 1168, 1100, 303,
	1229, 1230, 653, 0, 304, 305, 1175, 0, 1156, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1210, 328, 329,
	330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332,
	333, 334, 335, 1192, 336, 338, 1186, 1185, 1105, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 1177, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 1111, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1200, 1201, 369,
	1124, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	1184, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	1211, 376, 377, 378, 1197, 1198, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 1207, 0, 1134,
	389, 0, 390, 391, 392, 393, 394, 1170, 1171, 1174,
	480, 1213, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 276, 402, 403, 404, 406, 0, 1212,
	405, 1179, 1180, 0, 1140, 0, 407, 408, 1214, 1172,
	1215, 409, 410, 411, 1216, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1208, 1217, 423, 424, 1218, 0, 425, 426, 427,
	428, 429, 430, 433, 1163, 1162, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1219, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 1220, 474, 462, 1102, 277, 1221, 476, 477, 478,
	1125, 1173, 479, 1187, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	1222, 490, 1223, 1202, 491, 492, 1112, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 1203, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1183, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1224, 545, 546, 547,
	548, 549, 1113, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1166, 572, 573, 555, 556, 574,
	575, 1225, 576, 577, 578, 579, 580, 581, 582, 1181,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 1228, 591, 592, 593, 594, 1204, 598, 599,
	0, 600, 601, 1099, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 1193, 1194,
	1195, 1196, 0, 620, 0, 611, 613, 614, 1205, 615,
	1206, 1123, 616, 617, 618, 619, 612, 621, 622, 0,
	1106, 623, 624, 625, 627, 628, 626, 629, 1167, 630,
	0, 0, 631, 632, 633, 692, 1190, 1227, 0, 635,
	634, 636, 637, 695, 638, 639, 1726, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1103, 0, 0, 0,
	1092, 0, 1145, 1117, 1118, 1119, 1115, 1116, 1128, 0,
	1098, 0, 0, 0, 0, 0, 0, 1096, 1097, 278,
	280, 279, 281, 282, 283, 284, 1129, 285, 286, 0,
	1127, 0, 0, 0, 1169, 1133, 0, 0, 0, 287,
	288, 1209, 289, 290, 291, 292, 293, 294, 646, 1182,
	0, 295, 1189, 296, 1188, 0, 1199, 297, 298, 299,
	300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230, 653,
	0, 304, 305, 1175, 0, 1156, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 1210, 328, 329, 330, 1159, 1157,
	1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334, 335,
	1192, 336, 338, 1186, 1185, 1105, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	1177, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 1111, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 1200, 1201, 369, 1124, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 1184, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 1211, 376, 377,
	378, 1197, 1198, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 1207, 0, 1134, 389, 0, 390,
	391, 392, 393, 394, 1170, 1171, 1174, 480, 1213, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 0, 1212, 405, 1179, 1180,
	0, 1140, 0, 407, 408, 1214, 1172, 1215, 409, 410,
	411, 1216, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1208, 1217,
	423, 424, 1218, 0, 425, 426, 427, 428, 429, 430,
	433, 1163, 1162, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1219, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 1220, 474,
	462, 1102, 277, 1221, 476, 477, 478, 1125, 1173, 479,
	1187, 481, 482, 0, 0, 483, 0, 1107, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 1222, 490, 1223,
	1202, 491, 492, 1112, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 1203, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1183, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1224, 545, 546, 547, 548, 549, 1113,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1166, 572, 573, 555, 556, 574, 575, 1225, 576,
	577, 578, 579, 580, 581, 582, 1181, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 1228,
	591, 592, 593, 594, 1204, 598, 599, 0, 600, 601,
	1099, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 1193, 1194, 1195, 1196, 0,
	620, 0, 611, 613, 614, 1205, 615, 1206, 1123, 616,
	617, 618, 619, 612, 621, 622, 0, 1106, 623, 624,
	625, 627, 628, 626, 629, 1167, 630, 0, 0, 631,
	632, 633, 692, 1190, 1227, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1103, 0, 0, 0, 0, 0, 1145,
	1117, 1118, 1119, 1115, 1116, 1128, 0, 1098, 0, 0,
	0, 0, 0, 0, 1096, 1097, 278, 280, 279, 281,
	282, 283, 284, 1129, 285, 286, 0, 1127, 0, 0,
	0, 1169, 1133, 0, 0, 0, 287, 288, 1209, 289,
	290, 291, 292, 293, 294, 646, 1182, 0, 295, 1189,
	296, 1188, 0, 1199, 297, 298, 299, 300, 301, 302,
	1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304, 305,
	1175, 0, 1156, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 4714, 324, 0, 325, 326,
	327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165, 1161,
	1160, 1164, 331, 332, 333, 334, 335, 1192, 336, 338,
	1186, 1185, 1105, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 1177, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	1111, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 1200, 1201, 369, 1124, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 1184, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 1211, 376, 377, 378, 1197, 1198,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 1207, 0, 1134, 389, 0, 390, 391, 392, 393,
	394, 1170, 1171, 1174, 480, 1213, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 0, 1212, 405, 1179, 1180, 0, 1140, 0,
	407, 408, 1214, 1172, 1215, 409, 410, 411, 1216, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1208, 1217, 423, 424, 1218,
	0, 425, 426, 427, 428, 429, 430, 433, 1163, 1162,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1219,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 1220, 474, 462, 1102, 277,
	1221, 476, 477, 478, 1125, 1173, 479, 1187, 481, 482,
	0, 0, 483, 0, 1107, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 1222, 490, 1223, 1202, 491, 492,
	1112, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 1203, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1183, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1224, 545, 546, 547, 548, 549, 1113, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1166, 572,
	573, 555, 556, 574, 575, 1225, 576, 577, 578, 579,
	580, 581, 582, 1181, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 1228, 591, 592, 593,
	594, 1204, 598, 599, 0, 600, 601, 1099, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 1193, 1194, 1195, 1196, 0, 620, 0, 611,
	613, 614, 1205, 615, 1206, 1123, 616, 617, 618, 619,
	612, 621, 622, 0, 1106, 623, 624, 625, 627, 628,
	626, 629, 1167, 630, 0, 0, 631, 632, 633, 692,
	1190, 1227, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1103, 0, 0, 0, 0, 0, 1145, 1117, 1118, 1119,
	1115, 1116, 1128, 0, 1098, 0, 0, 0, 0, 0,
	0, 1096, 1097, 278, 280, 279, 281, 282, 283, 284,
	1129, 285, 286, 0, 1127, 0, 0, 0, 1169, 1133,
	0, 0, 0, 287, 288, 1209, 289, 290, 291, 292,
	293, 294, 646, 1182, 0, 295, 1189, 296, 1188, 0,
	1199, 297, 298, 299, 300, 301, 302, 1135, 1168, 1100,
	303, 1229, 1230, 653, 0, 304, 305, 1175, 0, 1156,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 1210, 328,
	329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331,
	332, 333, 334, 335, 1192, 336, 338, 1186, 1185, 1105,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 1177, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 1111, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 1200, 1201,
	369, 1124, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 1184, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 1211, 376, 377, 378, 1197, 1198, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 1207, 0,
	1134, 389, 0, 390, 391, 392, 393, 394, 1170, 1171,
	1174, 480, 1213, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 2477, 402, 403, 404, 406, 0,
	1212, 405, 1179, 1180, 0, 1140, 0, 407, 408, 1214,
	1172, 1215, 409, 410, 411, 1216, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1208, 1217, 423, 424, 1218, 0, 425, 426,
	427, 428, 429, 430, 433, 1163, 1162, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1219, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 1220, 474, 462, 1102, 277, 1221, 476, 477,
	478, 1125, 1173, 479, 1187, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 1222, 490, 1223, 1202, 491, 492, 1112, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 1203, 510,
	680, 511, 512, 2476, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1183, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1224, 545, 546,
	547, 548, 549, 1113, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1166, 572, 573, 555, 556,
	574, 575, 1225, 576, 577, 578, 579, 580, 581, 582,
	1181, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 1228, 591, 592, 593, 594, 1204, 598,
	599, 0, 600, 601, 1099, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 1193,
	1194, 1195, 1196, 0, 620, 0, 611, 613, 614, 1205,
	615, 1206, 1123, 616, 617, 618, 619, 612, 621, 622,
	0, 1106, 623, 624, 625, 627, 628, 626, 629, 1167,
	630, 0, 0, 631, 632, 633, 692, 1190, 1227, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1103, 0, 0,
	0, 0, 0, 1145, 1117, 1118, 1119, 1115, 1116, 1128,
	0, 1098, 0, 0, 0, 0, 0, 0, 1096, 1097,
	278, 280, 279, 281, 282, 283, 284, 1129, 285, 286,
	0, 1127, 0, 0, 0, 1169, 1133, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	1182, 0, 295, 1189, 296, 1188, 0, 1199, 297, 298,
	299, 300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230,
	653, 0, 304, 305, 1175, 0, 1156, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 1159,
	1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334,
	335, 1192, 336, 338, 1186, 1185, 1105, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 1177, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 1111, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 1200, 1201, 369, 1124, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 1184, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 1197, 1198, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 1207, 0, 1134, 389, 0,
	390, 391, 392, 393, 394, 1170, 1171, 1174, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 1212, 405, 1179,
	1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1208,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 1163, 1162, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1102, 277, 1221, 476, 477, 478, 1125, 1173,
	479, 1187, 481, 482, 0, 0, 483, 0, 1107, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 1202, 491, 492, 1112, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 1203, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1183, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	1113, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1166, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 1181, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	1228, 591, 592, 593, 594, 1204, 598, 599, 0, 600,
	601, 1099, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 1193, 1194, 1195, 1196,
	0, 620, 0, 611, 613, 614, 1205, 615, 1206, 1123,
	616, 617, 618, 619, 612, 621, 622, 0, 1106, 623,
	624, 625, 627, 628, 626, 629, 1167, 630, 0, 0,
	631, 632, 633, 692, 1190, 1227, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1103, 0, 0, 0, 0, 0,
	1145, 1117, 1118, 1119, 1115, 1116, 1128, 0, 1098, 0,
	0, 0, 0, 0, 0, 1096, 1097, 278, 280, 279,
	281, 282, 283, 284, 1129, 285, 286, 0, 1127, 0,
	0, 0, 1169, 1133, 0, 0, 0, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 1182, 0, 295,
	1189, 296, 1188, 0, 1199, 297, 298, 299, 300, 301,
	302, 1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304,
	305, 1175, 0, 1156, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 4450, 324, 0, 325,
	326, 327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165,
	1161, 1160, 1164, 331, 332, 333, 334, 335, 1192, 336,
	338, 1186, 1185, 1105, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 1177, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 1111, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 1200, 1201, 369, 1124, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 1184, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 1211, 376, 377, 378, 1197,
	1198, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 1207, 0, 1134, 389, 0, 390, 391, 392,
	393, 394, 1170, 1171, 1174, 480, 1213, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 1212, 405, 1179, 1180, 0, 1140,
	0, 407, 408, 1214, 1172, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1208, 1217, 423, 424,
	1218, 0, 425, 426, 427, 428, 429, 430, 433, 1163,
	1162, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 1102,
	277, 1221, 476, 477, 478, 1125, 1173, 479, 1187, 481,
	482, 0, 0, 483, 0, 1107, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 1222, 490, 1223, 1202, 491,
	492, 1112, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 1203, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1183, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 1113, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1166,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 1181, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 1228, 591, 592,
	593, 594, 1204, 598, 599, 0, 600, 601, 1099, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 1193, 1194, 1195, 1196, 0, 620, 0,
	611, 613, 614, 1205, 615, 1206, 1123, 616, 617, 618,
	619, 612, 621, 622, 0, 1106, 623, 624, 625, 627,
	628, 626, 629, 1167, 630, 0, 0, 631, 632, 633,
	692, 1190, 1227, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1103, 0, 0, 0, 0, 0, 1145, 1117, 1118,
	1119, 1115, 1116, 1128, 0, 1098, 0, 0, 0, 0,
	0, 0, 1096, 1097, 278, 280, 279, 281, 282, 283,
	284, 1129, 285, 286, 0, 1127, 0, 0, 0, 1169,
	1133, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 1182, 0, 295, 1189, 296, 1188,
	0, 1199, 297, 298, 299, 300, 301, 302, 1135, 1168,
	1100, 303, 1229, 1230, 653, 0, 304, 305, 1175, 0,
	1156, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164,
	331, 332, 333, 334, 335, 1192, 336, 338, 1186, 1185,
	1105, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1177, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1111, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1200,
	1201, 369, 1124, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1184, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 1197, 1198, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 1207,
	0, 1134, 389, 0, 390, 391, 392, 393, 394, 1170,
	1171, 1174, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 1212, 405, 1179, 1180, 0, 1140, 0, 407, 408,
	1214, 1172, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1208, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 1163, 1162, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 1102, 4045, 1221, 476,
	477, 478, 1125, 1173, 479, 1187, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 1202, 491, 492, 1112, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 1203,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1183, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 1113, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1166, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 1181, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 1228, 591, 592, 593, 594, 1204,
	598, 599, 0, 600, 601, 1099, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	1193, 1194, 1195, 1196, 0, 620, 0, 611, 613, 614,
	1205, 615, 1206, 1123, 616, 617, 618, 619, 612, 621,
	622, 0, 1106, 623, 624, 625, 627, 628, 626, 629,
	1167, 630, 0, 0, 631, 632, 633, 692, 1190, 1227,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1098, 0, 0, 0, 0, 0, 0, 1096,
	1097, 1957, 0, 0, 0, 0, 0, 0, 1129, 0,
	0, 0, 1127, 1145, 1117, 1118, 1119, 1115, 1116, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 1169, 1133, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	1182, 0, 295, 1189, 296, 1188, 0, 1199, 297, 298,
	299, 300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230,
	653, 0, 304, 305, 1175, 0, 1156, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 1159,
	1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334,
	335, 1192, 336, 338, 1186, 1185, 1105, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 1177, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 1111, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 1200, 1201, 369, 1124, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 1184, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 1197, 1198, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 1207, 0, 1134, 389, 0,
	390, 391, 392, 393, 394, 1170, 1171, 1174, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 1212, 405, 1179,
	1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1208,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 1163, 1162, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1102, 277, 1221, 476, 477, 478, 1125, 1173,
	479, 1187, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 1202, 491, 492, 1112, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 1203, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1183, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	1113, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1166, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 1181, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	1228, 591, 592, 593, 594, 1204, 598, 599, 0, 600,
	601, 1099, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 1193, 1194, 1195, 1196,
	0, 620, 0, 611, 613, 614, 1205, 615, 1206, 1123,
	616, 617, 618, 619, 612, 621, 622, 0, 1106, 623,
	624, 625, 627, 628, 626, 629, 1167, 630, 0, 0,
	631, 632, 633, 692, 1190, 1227, 3757, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1103, 0, 0, 0, 0, 0,
	1145, 1117, 1118, 1119, 1115, 1116, 1128, 0, 1098, 0,
	0, 0, 0, 0, 0, 1096, 1097, 278, 280, 279,
	281, 282, 283, 284, 1129, 285, 286, 0, 1127, 0,
	0, 0, 1169, 1133, 0, 0, 0, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 1182, 0, 295,
	1189, 296, 1188, 0, 1199, 297, 298, 299, 300, 301,
	302, 1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304,
	305, 1175, 0, 1156, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165,
	1161, 1160, 1164, 331, 332, 333, 334, 335, 1192, 336,
	338, 1186, 1185, 1105, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 1177, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 1111, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 1200, 1201, 369, 1124, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 1184, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 1211, 376, 377, 378, 1197,
	1198, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 1207, 0, 1134, 389, 0, 390, 391, 392,
	393, 394, 1170, 1171, 1174, 480, 1213, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 1212, 405, 1179, 1180, 0, 1140,
	0, 407, 408, 1214, 1172, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1208, 1217, 423, 424,
	1218, 0, 425, 426, 427, 428, 429, 430, 433, 1163,
	1162, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 1102,
	277, 1221, 476, 477, 478, 1125, 1173, 479, 1187, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 1222, 490, 1223, 1202, 491,
	492, 1112, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 1203, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1183, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 1113, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1166,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 1181, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 1228, 591, 592,
	593, 594, 1204, 598, 599, 0, 600, 601, 1099, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 1193, 1194, 1195, 1196, 0, 620, 0,
	611, 613, 614, 1205, 615, 1206, 1123, 616, 617, 618,
	619, 612, 621, 622, 0, 1106, 623, 624, 625, 627,
	628, 626, 629, 1167, 630, 0, 0, 631, 632, 633,
	692, 1190, 1227, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1098, 0, 0, 0, 0,
	0, 0, 1096, 1097, 1957, 0, 0, 0, 0, 0,
	0, 1129, 0, 0, 0, 1127, 1145, 1117, 1118, 1119,
	1115, 1116, 1128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 1169, 1133,
	0, 0, 0, 287, 288, 1209, 289, 290, 291, 292,
	293, 294, 646, 1182, 0, 295, 1189, 296, 1188, 0,
	1199, 297, 298, 299, 300, 301, 302, 1135, 1168, 1100,
	303, 1229, 1230, 653, 0, 304, 305, 1175, 0, 1156,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 1210, 328,
	329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331,
	332, 333, 334, 335, 1192, 336, 338, 1186, 1185, 1105,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 1177, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 1111, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 1200, 1201,
	369, 1124, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 1184, 0, 0, 0, 373, 0, 374, 375, 0,
	2738, 1211, 376, 377, 378, 1197, 1198, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 1207, 0,
	1134, 389, 0, 390, 391, 392, 393, 394, 1170, 1171,
	1174, 480, 1213, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	1212, 405, 1179, 1180, 0, 1140, 0, 407, 408, 1214,
	1172, 1215, 409, 410, 411, 1216, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1208, 1217, 423, 424, 1218, 0, 425, 426,
	427, 428, 429, 430, 433, 1163, 1162, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1219, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 1220, 474, 462, 1102, 277, 1221, 476, 477,
	478, 1125, 1173, 479, 1187, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 1222, 490, 1223, 1202, 491, 492, 1112, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 1203, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1183, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1224, 545, 546,
	547, 548, 549, 1113, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1166, 572, 573, 555, 556,
	574, 575, 1225, 576, 577, 578, 579, 580, 581, 582,
	1181, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 1228, 591, 592, 593, 594, 1204, 598,
	599, 0, 600, 601, 1099, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 1193,
	1194, 1195, 1196, 0, 620, 0, 611, 613, 614, 1205,
	615, 1206, 1123, 616, 617, 618, 619, 612, 621, 622,
	0, 1106, 623, 624, 625, 627, 628, 626, 629, 1167,
	630, 0, 0, 631, 632, 633, 692, 1190, 1227, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1103, 0, 0,
	0, 0, 0, 1145, 1117, 1118, 1119, 1115, 1116, 1128,
	0, 1098, 0, 0, 0, 0, 0, 0, 1096, 1097,
	278, 280, 279, 281, 282, 283, 284, 1129, 285, 286,
	0, 1127, 0, 0, 0, 1169, 1133, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	1182, 0, 295, 1189, 296, 1188, 0, 1199, 297, 298,
	299, 300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230,
	653, 0, 304, 305, 1175, 0, 1156, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 1159,
	1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334,
	335, 1192, 336, 338, 1186, 1185, 1105, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 1177, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 1111, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 1200, 1201, 369, 1124, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 1184, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 1197, 1198, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 1207, 0, 1134, 389, 0,
	390, 391, 392, 393, 394, 1170, 1171, 1174, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 1212, 405, 1179,
	1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1208,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 1163, 1162, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1102, 277, 1221, 476, 477, 478, 1125, 1173,
	479, 1187, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 1202, 491, 492, 1112, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 1203, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1183, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	1113, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1166, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 1181, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	1228, 591, 592, 593, 594, 1204, 598, 599, 0, 600,
	601, 1099, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 1193, 1194, 1195, 1196,
	0, 620, 0, 611, 613, 614, 1205, 615, 1206, 1123,
	616, 617, 618, 619, 612, 621, 622, 0, 1106, 623,
	624, 625, 627, 628, 626, 629, 1167, 630, 0, 0,
	631, 632, 633, 692, 1190, 1227, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1098, 0,
	0, 0, 0, 0, 0, 1096, 1097, 0, 0, 0,
	0, 0, 0, 0, 1129, 1886, 0, 2743, 1127, 1145,
	1117, 1118, 1119, 1115, 1116, 1128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 1169, 1133, 0, 0, 0, 287, 288, 1209, 289,
	290, 291, 292, 293, 294, 646, 1182, 0, 295, 1189,
	296, 1188, 0, 1199, 297, 298, 299, 300, 301, 302,
	1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304, 305,
	1175, 0, 1156, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165, 1161,
	1160, 1164, 331, 332, 333, 334, 335, 1192, 336, 338,
	1186, 1185, 1105, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 1177, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	1111, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 1200, 1201, 369, 1124, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 1184, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 1211, 376, 377, 378, 1197, 1198,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 1207, 0, 1134, 389, 0, 390, 391, 392, 393,
	394, 1170, 1171, 1174, 480, 1213, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 0, 1212, 405, 1179, 1180, 0, 1140, 0,
	407, 408, 1214, 1172, 1215, 409, 410, 411, 1216, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1208, 1217, 423, 424, 1218,
	0, 425, 426, 427, 428, 429, 430, 433, 1163, 1162,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1219,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 1220, 474, 462, 1102, 277,
	1221, 476, 477, 478, 1125, 1173, 479, 1187, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 1222, 490, 1223, 1202, 491, 492,
	1112, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 1203, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1183, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1224, 545, 546, 547, 548, 549, 1113, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1166, 572,
	573, 555, 556, 574, 575, 1225, 576, 577, 578, 579,
	580, 581, 582, 1181, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 1228, 591, 592, 593,
	594, 1204, 598, 599, 0, 600, 601, 1099, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 1193, 1194, 1195, 1196, 0, 620, 0, 611,
	613, 614, 1205, 615, 1206, 1123, 616, 617, 618, 619,
	612, 621, 622, 0, 1106, 623, 624, 625, 627, 628,
	626, 629, 1167, 630, 0, 0, 631, 632, 633, 692,
	1190, 1227, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1103, 0, 0, 0, 2741, 0, 1145, 1117, 1118, 1119,
	1115, 1116, 1128, 0, 1098, 0, 0, 0, 0, 0,
	0, 1096, 1097, 278, 280, 279, 281, 282, 283, 284,
	1129, 285, 286, 0, 1127, 0, 0, 0, 1169, 1133,
	0, 0, 0, 287, 288, 1209, 289, 290, 291, 292,
	293, 294, 646, 1182, 0, 295, 1189, 296, 1188, 0,
	1199, 297, 298, 299, 300, 301, 302, 1135, 1168, 1100,
	303, 1229, 1230, 653, 0, 304, 305, 1175, 0, 1156,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 1210, 328,
	329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331,
	332, 333, 334, 335, 1192, 336, 338, 1186, 1185, 1105,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 1177, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 1111, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 1200, 1201,
	369, 1124, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 1184, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 1211, 376, 377, 378, 1197, 1198, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 1207, 0,
	1134, 389, 0, 390, 391, 392, 393, 394, 1170, 1171,
	1174, 480, 1213, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	1212, 405, 1179, 1180, 0, 1140, 0, 407, 408, 1214,
	1172, 1215, 409, 410, 411, 1216, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1208, 1217, 423, 424, 1218, 0, 425, 426,
	427, 428, 429, 430, 433, 1163, 1162, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1219, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 1220, 474, 462, 1102, 277, 1221, 476, 477,
	478, 1125, 1173, 479, 1187, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 1222, 490, 1223, 1202, 491, 492, 1112, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 1203, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1183, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1224, 545, 546,
	547, 548, 549, 1113, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1166, 572, 573, 555, 556,
	574, 575, 1225, 576, 577, 578, 579, 580, 581, 582,
	1181, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 1228, 591, 592, 593, 594, 1204, 598,
	599, 0, 600, 601, 1099, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 1193,
	1194, 1195, 1196, 0, 620, 0, 611, 613, 614, 1205,
	615, 1206, 1123, 616, 617, 618, 619, 612, 621, 622,
	0, 1106, 623, 624, 625, 627, 628, 626, 629, 1167,
	630, 0, 0, 631, 632, 633, 692, 1190, 1227, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1103, 0, 0,
	0, 2729, 0, 1145, 1117, 1118, 1119, 1115, 1116, 1128,
	0, 1098, 0, 0, 0, 0, 0, 0, 1096, 1097,
	278, 280, 279, 281, 282, 283, 284, 1129, 285, 286,
	0, 1127, 0, 0, 0, 1169, 1133, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	1182, 0, 295, 1189, 296, 1188, 0, 1199, 297, 298,
	299, 300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230,
	653, 0, 304, 305, 1175, 0, 1156, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 1159,
	1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334,
	335, 1192, 336, 338, 1186, 1185, 1105, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 1177, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 1111, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 1200, 1201, 369, 1124, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 1184, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 1197, 1198, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 1207, 0, 1134, 389, 0,
	390, 391, 392, 393, 394, 1170, 1171, 1174, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 1212, 405, 1179,
	1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1208,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 1163, 1162, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1102, 277, 1221, 476, 477, 478, 1125, 1173,
	479, 1187, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 1202, 491, 492, 1112, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 1203, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1183, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	1113, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1166, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 1181, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	1228, 591, 592, 593, 594, 1204, 598, 599, 0, 600,
	601, 1099, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 1193, 1194, 1195, 1196,
	0, 620, 0, 611, 613, 614, 1205, 615, 1206, 1123,
	616, 617, 618, 619, 612, 621, 622, 0, 1106, 623,
	624, 625, 627, 628, 626, 629, 1167, 630, 0, 0,
	631, 632, 633, 692, 1190, 1227, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1103, 0, 0, 0, 2717, 0,
	1145, 1117, 1118, 1119, 1115, 1116, 1128, 0, 1098, 0,
	0, 0, 0, 0, 0, 1096, 1097, 278, 280, 279,
	281, 282, 283, 284, 1129, 285, 286, 0, 1127, 0,
	0, 0, 1169, 1133, 0, 0, 0, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 1182, 0, 295,
	1189, 296, 1188, 0, 1199, 297, 298, 299, 300, 301,
	302, 1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304,
	305, 1175, 0, 1156, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165,
	1161, 1160, 1164, 331, 332, 333, 334, 335, 1192, 336,
	338, 1186, 1185, 1105, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 1177, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 1111, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 1200, 1201, 369, 1124, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 1184, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 1211, 376, 377, 378, 1197,
	1198, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 1207, 0, 1134, 389, 0, 390, 391, 392,
	393, 394, 1170, 1171, 1174, 480, 1213, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 1212, 405, 1179, 1180, 0, 1140,
	0, 407, 408, 1214, 1172, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1208, 1217, 423, 424,
	1218, 0, 425, 426, 427, 428, 429, 430, 433, 1163,
	1162, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 1102,
	277, 1221, 476, 477, 478, 1125, 1173, 479, 1187, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 1222, 490, 1223, 1202, 491,
	492, 1112, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 1203, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1183, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 1113, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1166,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 1181, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 1228, 591, 592,
	593, 594, 1204, 598, 599, 0, 600, 601, 1099, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 1193, 1194, 1195, 1196, 0, 620, 0,
	611, 613, 614, 1205, 615, 1206, 1123, 616, 617, 618,
	619, 612, 621, 622, 0, 1106, 623, 624, 625, 627,
	628, 626, 629, 1167, 630, 0, 0, 631, 632, 633,
	692, 1190, 1227, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1103, 0, 0, 0, 2715, 0, 2706, 2713, 1118,
	1119, 1115, 1116, 1128, 0, 1098, 0, 0, 0, 0,
	0, 0, 1096, 1097, 278, 280, 279, 281, 282, 283,
	284, 1129, 285, 286, 0, 1127, 0, 0, 0, 1169,
	1133, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 1182, 0, 295, 1189, 296, 1188,
	0, 1199, 297, 298, 299, 300, 301, 302, 1135, 1168,
	1100, 303, 1229, 1230, 653, 0, 304, 305, 1175, 0,
	1156, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164,
	331, 332, 333, 334, 335, 1192, 2709, 338, 1186, 1185,
	1105, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1177, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1111, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1200,
	1201, 369, 1124, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1184, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 1197, 1198, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 1207,
	0, 1134, 389, 0, 390, 391, 392, 2710, 394, 1170,
	1171, 1174, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 1212, 405, 1179, 1180, 0, 1140, 0, 407, 408,
	1214, 1172, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1208, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 1163, 1162, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 2711,
	443, 2708, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 1102, 277, 1221, 476,
	477, 478, 1125, 1173, 479, 1187, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 1202, 491, 492, 1112, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 1203,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1183, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 1113, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 2712, 0,
	567, 568, 566, 569, 570, 571, 1166, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 1181, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 1228, 591, 592, 593, 594, 1204,
	598, 599, 0, 600, 601, 1099, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	1193, 1194, 1195, 1196, 0, 620, 0, 611, 613, 614,
	1205, 615, 1206, 1123, 616, 617, 618, 619, 612, 621,
	622, 0, 1106, 623, 624, 625, 627, 628, 626, 629,
	1167, 630, 0, 0, 631, 632, 633, 692, 1190, 1227,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 2707, 644, 1103, 0,
	0, 0, 2703, 0, 2706, 2713, 1118, 1119, 1115, 1116,
	1128, 0, 1098, 0, 0, 0, 0, 0, 0, 1096,
	1097, 278, 280, 279, 281, 282, 283, 284, 1129, 285,
	286, 0, 1127, 0, 0, 0, 1169, 1133, 0, 0,
	0, 287, 288, 1209, 289, 290, 291, 292, 293, 294,
	646, 1182, 0, 295, 1189, 296, 1188, 0, 1199, 297,
	298, 299, 300, 301, 302, 1135, 1168, 1100, 303, 1229,
	1230, 653, 0, 304, 305, 1175, 0, 1156, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1210, 328, 329, 330,
	1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333,
	334, 335, 1192, 2709, 338, 1186, 1185, 1105, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 1177, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 1111, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 1200, 1201, 369, 1124,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 1184,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 1211,
	376, 377, 378, 1197, 1198, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 1207, 0, 1134, 389,
	0, 390, 391, 392, 2710, 394, 1170, 1171, 1174, 480,
	1213, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 1212, 405,
	1179, 1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215,
	409, 410, 411, 1216, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1208, 1217, 423, 424, 1218, 0, 425, 426, 427, 428,
	429, 430, 433, 1163, 1162, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 2711, 443, 2708, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1219, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	1220, 474, 462, 1102, 277, 1221, 476, 477, 478, 1125,
	1173, 479, 1187, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 1222,
	490, 1223, 1202, 491, 492, 1112, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 1203, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1183, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1224, 545, 546, 547, 548,
	549, 1113, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 2712, 0, 567, 568, 566,
	569, 570, 571, 1166, 572, 573, 555, 556, 574, 575,
	1225, 576, 577, 578, 579, 580, 581, 582, 1181, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 1228, 591, 592, 593, 594, 1204, 598, 599, 0,
	600, 601, 1099, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 1193, 1194, 1195,
	1196, 0, 620, 0, 611, 613, 614, 1205, 615, 1206,
	1123, 616, 617, 618, 619, 612, 621, 622, 0, 1106,
	623, 624, 625, 627, 628, 626, 629, 1167, 630, 0,
	0, 631, 632, 633, 692, 1190, 1227, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 2707, 644, 1103, 0, 0, 0, 0,
	0, 1145, 1117, 1118, 1119, 1115, 1116, 1128, 0, 1098,
	0, 0, 0, 0, 0, 0, 1096, 1097, 278, 280,
	279, 281, 282, 283, 284, 1129, 285, 286, 0, 1127,
	0, 0, 0, 1169, 1133, 0, 0, 0, 287, 288,
	1209, 289, 290, 291, 292, 293, 294, 646, 1182, 0,
	295, 1189, 296, 1188, 0, 1199, 297, 298, 299, 300,
	301, 302, 1135, 1168, 1100, 303, 1229, 1230, 653, 0,
	304, 305, 1175, 0, 1156, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1210, 328, 329, 330, 1159, 1157, 1158,
	1165, 1161, 1160, 1164, 331, 332, 333, 334, 335, 1192,
	336, 338, 1186, 1185, 1105, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1177,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1111, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1200, 1201, 369, 1124, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1184, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 1211, 376, 377, 378,
	1197, 1198, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 1207, 0, 1134, 389, 0, 390, 391,
	392, 393, 394, 1170, 1171, 1174, 480, 1213, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 1212, 405, 1179, 1180, 0,
	1140, 0, 407, 408, 1214, 1172, 1215, 409, 410, 411,
	1216, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1208, 1217, 423,
	424, 1218, 0, 425, 426, 427, 428, 429, 430, 433,
	1163, 1162, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1219, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 1220, 474, 462,
	1102, 277, 1221, 476, 477, 478, 1125, 1173, 479, 1187,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 1222, 490, 1223, 1202,
	491, 492, 1112, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 1203, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1183,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1224, 545, 546, 547, 548, 549, 1113, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1166, 572, 573, 555, 556, 574, 575, 1225, 576, 577,
	578, 579, 580, 581, 582, 1181, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 1228, 591,
	592, 593, 594, 1204, 598, 599, 0, 600, 601, 1099,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 1193, 1194, 1195, 1196, 0, 620,
	0, 611, 613, 614, 1205, 615, 1206, 1123, 616, 617,
	618, 619, 612, 621, 622, 0, 1106, 623, 624, 625,
	627, 628, 626, 629, 1167, 630, 0, 0, 631, 632,
	633, 692, 1190, 1227, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1098, 0, 0, 0,
	0, 0, 0, 1096, 1097, 0, 0, 0, 0, 0,
	1894, 0, 1129, 0, 0, 0, 1127, 1145, 1117, 1118,
	1119, 1115, 1116, 1128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 2456, 285, 286, 0, 0, 0, 0, 0, 1169,
	1133, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 1182, 0, 295, 1189, 296, 1188,
	0, 1199, 297, 298, 299, 300, 301, 302, 1135, 1168,
	1100, 303, 1229, 1230, 653, 0, 304, 305, 1175, 0,
	1156, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164,
	331, 332, 333, 334, 335, 1192, 336, 338, 1186, 1185,
	1105, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1177, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1111, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1200,
	1201, 369, 1124, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1184, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 1197, 1198, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 1207,
	0, 1134, 389, 0, 390, 391, 392, 393, 394, 1170,
	1171, 1174, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 1212, 405, 1179, 1180, 0, 1140, 0, 407, 408,
	1214, 1172, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1208, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 1163, 1162, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 1102, 277, 1221, 476,
	477, 478, 1125, 1173, 479, 1187, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 1202, 491, 492, 1112, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 1203,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1183, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 1113, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1166, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 1181, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 1228, 591, 592, 593, 594, 1204,
	598, 599, 0, 600, 601, 1099, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	1193, 1194, 1195, 1196, 0, 620, 0, 611, 613, 614,
	1205, 615, 1206, 1123, 616, 617, 618, 619, 612, 621,
	622, 0, 1106, 623, 624, 625, 627, 628, 626, 629,
	1167, 630, 0, 0, 631, 632, 633, 692, 1190, 1227,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1103, 0,
	0, 0, 2420, 0, 1145, 1117, 1118, 1119, 1115, 1116,
	1128, 0, 1098, 0, 0, 0, 0, 0, 0, 1096,
	1097, 278, 280, 279, 281, 282, 283, 284, 1129, 285,
	286, 0, 1127, 0, 0, 0, 1169, 1133, 0, 0,
	0, 287, 288, 1209, 289, 290, 291, 292, 293, 294,
	646, 1182, 0, 295, 1189, 296, 1188, 0, 1199, 297,
	298, 299, 300, 301, 302, 1135, 1168, 1100, 303, 1229,
	1230, 653, 0, 304, 305, 1175, 0, 1156, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1210, 328, 329, 330,
	1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333,
	334, 335, 1192, 336, 338, 1186, 1185, 1105, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 1177, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 1111, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 1200, 1201, 369, 1124,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 1184,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 1211,
	376, 377, 378, 1197, 1198, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 1207, 0, 1134, 389,
	0, 390, 391, 392, 393, 394, 1170, 1171, 1174, 480,
	1213, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 1212, 405,
	1179, 1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215,
	409, 410, 411, 1216, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1208, 1217, 423, 424, 1218, 0, 425, 426, 427, 428,
	429, 430, 433, 1163, 1162, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1219, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	1220, 474, 462, 1102, 277, 1221, 476, 477, 478, 1125,
	1173, 479, 1187, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 1222,
	490, 1223, 1202, 491, 492, 1112, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 1203, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1183, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1224, 545, 546, 547, 548,
	549, 1113, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1166, 572, 573, 555, 556, 574, 575,
	1225, 576, 577, 578, 579, 580, 581, 582, 1181, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 1228, 591, 592, 593, 594, 1204, 598, 599, 0,
	600, 601, 1099, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 1193, 1194, 1195,
	1196, 0, 620, 0, 611, 613, 614, 1205, 615, 1206,
	1123, 616, 617, 618, 619, 612, 621, 622, 0, 1106,
	623, 624, 625, 627, 628, 626, 629, 1167, 630, 0,
	0, 631, 632, 633, 692, 1190, 1227, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1103, 0, 0, 0, 2395,
	0, 1145, 1117, 1118, 1119, 1115, 1116, 1128, 0, 1098,
	0, 0, 0, 0, 0, 0, 1096, 1097, 278, 280,
	279, 281, 282, 283, 284, 1129, 285, 286, 0, 1127,
	0, 0, 0, 1169, 1133, 0, 0, 0, 287, 288,
	1209, 289, 290, 291, 292, 293, 294, 646, 1182, 0,
	295, 1189, 296, 1188, 0, 1199, 297, 298, 299, 300,
	301, 302, 1135, 1168, 1100, 303, 1229, 1230, 653, 0,
	304, 305, 1175, 0, 1156, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1210, 328, 329, 330, 1159, 1157, 1158,
	1165, 1161, 1160, 1164, 331, 332, 333, 334, 335, 1192,
	336, 338, 1186, 1185, 1105, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1177,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1111, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1200, 1201, 369, 1124, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1184, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 1211, 376, 377, 378,
	1197, 1198, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 1207, 0, 1134, 389, 0, 390, 391,
	392, 393, 394, 1170, 1171, 1174, 480, 1213, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 1212, 405, 1179, 1180, 0,
	1140, 0, 407, 408, 1214, 1172, 1215, 409, 410, 411,
	1216, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1208, 1217, 423,
	424, 1218, 0, 425, 426, 427, 428, 429, 430, 433,
	1163, 1162, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1219, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 1220, 474, 462,
	1102, 277, 1221, 476, 477, 478, 1125, 1173, 479, 1187,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 1222, 490, 1223, 1202,
	491, 492, 1112, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 1203, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1183,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1224, 545, 546, 547, 548, 549, 1113, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1166, 572, 573, 555, 556, 574, 575, 1225, 576, 577,
	578, 579, 580, 581, 582, 1181, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 1228, 591,
	592, 593, 594, 1204, 598, 599, 0, 600, 601, 1099,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 1193, 1194, 1195, 1196, 0, 620,
	0, 611, 613, 614, 1205, 615, 1206, 1123, 616, 617,
	618, 619, 612, 621, 622, 0, 1106, 623, 624, 625,
	627, 628, 626, 629, 1167, 630, 0, 0, 631, 632,
	633, 692, 1190, 1227, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1103, 0, 0, 0, 1732, 0, 1145, 1117,
	1118, 1119, 1115, 1116, 1128, 0, 1098, 0, 0, 0,
	0, 0, 0, 1096, 1097, 278, 280, 279, 281, 282,
	283, 284, 1129, 285, 286, 0, 1127, 0, 0, 0,
	1169, 1133, 0, 0, 0, 287, 288, 1209, 289, 290,
	291, 292, 293, 294, 646, 1182, 0, 295, 1189, 296,
	1188, 0, 1199, 297, 298, 299, 300, 301, 302, 1135,
	1168, 1100, 303, 1229, 1230, 653, 0, 304, 305, 1175,
	0, 1156, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1210, 328, 329, 330, 1159, 1157, 1158, 1165, 1161, 1160,
	1164, 331, 332, 333, 334, 335, 1192, 336, 338, 1186,
	1185, 1105, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1177, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1111,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1200, 1201, 369, 1124, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1184, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 1211, 376, 377, 378, 1197, 1198, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	1207, 0, 1134, 389, 0, 390, 391, 392, 393, 394,
	1170, 1171, 1174, 480, 1213, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 276, 402, 403, 404,
	406, 0, 1212, 405, 1179, 1180, 0, 1140, 0, 407,
	408, 1214, 1172, 1215, 409, 410, 411, 1216, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1208, 1217, 423, 424, 1218, 0,
	425, 426, 427, 428, 429, 430, 433, 1163, 1162, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1219, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 1220, 474, 462, 1102, 277, 1221,
	476, 477, 478, 1125, 1173, 479, 1187, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 1222, 490, 1223, 1202, 491, 492, 1112,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	1203, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1183, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1224,
	545, 546, 547, 548, 549, 1113, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1166, 572, 573,
	555, 556, 574, 575, 1225, 576, 577, 578, 579, 580,
	581, 582, 1181, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 1228, 591, 592, 593, 594,
	1204, 598, 599, 0, 600, 601, 1099, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 1193, 1194, 1195, 1196, 0, 620, 0, 611, 613,
	614, 1205, 615, 1206, 1123, 616, 617, 618, 619, 612,
	621, 622, 0, 1106, 623, 624, 625, 627, 628, 626,
	629, 1167, 630, 0, 0, 631, 632, 633, 692, 1190,
	1227, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1103,
	0, 0, 0, 1661, 0, 1145, 1117, 1118, 1119, 1115,
	1116, 1128, 0, 1098, 0, 0, 0, 0, 0, 0,
	1096, 1097, 278, 280, 279, 281, 282, 283, 284, 1129,
	285, 286, 0, 1127, 0, 0, 0, 1169, 1133, 0,
	0, 0, 287, 288, 1209, 289, 290, 291, 292, 293,
	294, 646, 1182, 0, 295, 1189, 296, 1188, 0, 1199,
	297, 298, 299, 300, 301, 302, 1135, 1168, 1100, 303,
	1229, 1230, 653, 0, 304, 305, 1175, 0, 1156, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1210, 328, 329,
	330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332,
	333, 334, 335, 1192, 336, 338, 1186, 1185, 1105, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 1177, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 1111, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1200, 1201, 369,
	1124, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	1184, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	1211, 376, 377, 378, 1197, 1198, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 1207, 0, 1134,
	389, 0, 390, 391, 392, 393, 394, 1170, 1171, 1174,
	480, 1213, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 276, 402, 403, 404, 406, 0, 1212,
	405, 1179, 1180, 0, 1140, 0, 407, 408, 1214, 1172,
	1215, 409, 410, 411, 1216, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1208, 1217, 423, 424, 1218, 0, 425, 426, 427,
	428, 429, 430, 433, 1163, 1162, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1219, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 1220, 474, 462, 1102, 277, 1221, 476, 477, 478,
	1125, 1173, 479, 1187, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	1222, 490, 1223, 1202, 491, 492, 1112, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 1203, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1183, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1224, 545, 546, 547,
	548, 549, 1113, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1166, 572, 573, 555, 556, 574,
	575, 1225, 576, 577, 578, 579, 580, 581, 582, 1181,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 1228, 591, 592, 593, 594, 1204, 598, 599,
	0, 600, 601, 1099, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 1193, 1194,
	1195, 1196, 0, 620, 0, 611, 613, 614, 1205, 615,
	1206, 1123, 616, 617, 618, 619, 612, 621, 622, 0,
	1106, 623, 624, 625, 627, 628, 626, 629, 1167, 630,
	0, 0, 631, 632, 633, 692, 1190, 1227, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1103, 0, 0, 0,
	1656, 0, 1145, 1117, 1118, 1119, 1115, 1116, 1128, 0,
	1098, 0, 0, 0, 0, 0, 0, 1096, 1097, 278,
	280, 279, 281, 282, 283, 284, 1129, 285, 286, 0,
	1127, 0, 0, 0, 1169, 1133, 0, 0, 0, 287,
	288, 1209, 289, 290, 291, 292, 293, 294, 646, 1182,
	0, 295, 1189, 296, 1188, 0, 1199, 297, 298, 299,
	300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230, 653,
	0, 304, 305, 1175, 0, 1156, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 1210, 328, 329, 330, 1159, 1157,
	1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334, 335,
	1192, 336, 338, 1186, 1185, 1105, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	1177, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 1111, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 1200, 1201, 369, 1124, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 1184, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 1211, 376, 377,
	378, 1197, 1198, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 1207, 0, 1134, 389, 0, 390,
	391, 392, 393, 394, 1170, 1171, 1174, 480, 1213, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 0, 1212, 405, 1179, 1180,
	0, 1140, 0, 407, 408, 1214, 1172, 1215, 409, 410,
	411, 1216, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1208, 1217,
	423, 424, 1218, 0, 425, 426, 427, 428, 429, 430,
	433, 1163, 1162, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1219, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 1220, 474,
	462, 1102, 277, 1221, 476, 477, 478, 1125, 1173, 479,
	1187, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 1222, 490, 1223,
	1202, 491, 492, 1112, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 1203, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1183, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1224, 545, 546, 547, 548, 549, 1113,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1166, 572, 573, 555, 556, 574, 575, 1225, 576,
	577, 578, 579, 580, 581, 582, 1181, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 1228,
	591, 592, 593, 594, 1204, 598, 599, 0, 600, 601,
	1099, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 1193, 1194, 1195, 1196, 0,
	620, 0, 611, 613, 614, 1205, 615, 1206, 1123, 616,
	617, 618, 619, 612, 621, 622, 0, 1106, 623, 624,
	625, 627, 628, 626, 629, 1167, 630, 0, 0, 631,
	632, 633, 692, 1190, 1227, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1103, 0, 0, 0, 1647, 0, 1145,
	1117, 1118, 1119, 1115, 1116, 1128, 0, 1098, 0, 0,
	0, 0, 0, 0, 1096, 1097, 278, 280, 279, 281,
	282, 283, 284, 1129, 285, 286, 0, 1127, 0, 0,
	0, 1169, 1133, 0, 0, 0, 287, 288, 1209, 289,
	290, 291, 292, 293, 294, 646, 1182, 0, 295, 1189,
	296, 1188, 0, 1199, 297, 298, 299, 300, 301, 302,
	1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304, 305,
	1175, 0, 1156, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165, 1161,
	1160, 1164, 331, 332, 333, 334, 335, 1192, 336, 338,
	1186, 1185, 1105, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 1177, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	1111, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 1200, 1201, 369, 1124, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 1184, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 1211, 376, 377, 378, 1197, 1198,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 1207, 0, 1134, 389, 0, 390, 391, 392, 393,
	394, 1170, 1171, 1174, 480, 1213, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 0, 1212, 405, 1179, 1180, 0, 1140, 0,
	407, 408, 1214, 1172, 1215, 409, 410, 411, 1216, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1208, 1217, 423, 424, 1218,
	0, 425, 426, 427, 428, 429, 430, 433, 1163, 1162,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1219,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 1220, 474, 462, 1102, 277,
	1221, 476, 477, 478, 1125, 1173, 479, 1187, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 1222, 490, 1223, 1202, 491, 492,
	1112, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 1203, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1183, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1224, 545, 546, 547, 548, 549, 1113, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1166, 572,
	573, 555, 556, 574, 575, 1225, 576, 577, 578, 579,
	580, 581, 582, 1181, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 1228, 591, 592, 593,
	594, 1204, 598, 599, 0, 600, 601, 1099, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 1193, 1194, 1195, 1196, 0, 620, 0, 611,
	613, 614, 1205, 615, 1206, 1123, 616, 617, 618, 619,
	612, 621, 622, 0, 1106, 623, 624, 625, 627, 628,
	626, 629, 1167, 630, 0, 0, 631, 632, 633, 692,
	1190, 1227, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1103, 0, 0, 0, 1642, 0, 1145, 1117, 1118, 1119,
	1115, 1116, 1128, 0, 1098, 0, 0, 0, 0, 0,
	0, 1096, 1097, 278, 280, 279, 281, 282, 283, 284,
	1129, 285, 286, 0, 1127, 0, 0, 0, 1169, 1133,
	0, 0, 0, 287, 288, 1209, 289, 290, 291, 292,
	293, 294, 646, 1182, 0, 295, 1189, 296, 1188, 0,
	1199, 297, 298, 299, 300, 301, 302, 1135, 1168, 1100,
	303, 1229, 1230, 653, 0, 304, 305, 1175, 0, 1156,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 1210, 328,
	329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331,
	332, 333, 334, 335, 1192, 336, 338, 1186, 1185, 1105,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 1177, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 1111, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 1200, 1201,
	369, 1124, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 1184, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 1211, 376, 377, 378, 1197, 1198, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 1207, 0,
	1134, 389, 0, 390, 391, 392, 393, 394, 1170, 1171,
	1174, 480, 1213, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	1212, 405, 1179, 1180, 0, 1140, 0, 407, 408, 1214,
	1172, 1215, 409, 410, 411, 1216, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1208, 1217, 423, 424, 1218, 0, 425, 426,
	427, 428, 429, 430, 433, 1163, 1162, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1219, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 1220, 474, 462, 1102, 277, 1221, 476, 477,
	478, 1125, 1173, 479, 1187, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 1222, 490, 1223, 1202, 491, 492, 1112, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 1203, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1183, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1224, 545, 546,
	547, 548, 549, 1113, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1166, 572, 573, 555, 556,
	574, 575, 1225, 576, 577, 578, 579, 580, 581, 582,
	1181, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 1228, 591, 592, 593, 594, 1204, 598,
	599, 0, 600, 601, 1099, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 1193,
	1194, 1195, 1196, 0, 620, 0, 611, 613, 614, 1205,
	615, 1206, 1123, 616, 617, 618, 619, 612, 621, 622,
	0, 1106, 623, 624, 625, 627, 628, 626, 629, 1167,
	630, 0, 0, 631, 632, 633, 692, 1190, 1227, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1103, 0, 0,
	0, 1553, 0, 1145, 1117, 1118, 1119, 1115, 1116, 1128,
	0, 1098, 0, 0, 0, 0, 0, 0, 1096, 1097,
	278, 280, 279, 281, 282, 283, 284, 1129, 285, 286,
	0, 1127, 0, 0, 0, 1169, 1133, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	1182, 0, 295, 1189, 296, 1188, 0, 1199, 297, 298,
	299, 300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230,
	653, 0, 304, 305, 1175, 0, 1156, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 1159,
	1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334,
	335, 1192, 336, 338, 1186, 1185, 1105, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 1177, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 1111, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 1200, 1201, 369, 1124, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 1184, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 1197, 1198, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 1207, 0, 1134, 389, 0,
	390, 391, 392, 393, 394, 1552, 1171, 1174, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 1212, 405, 1179,
	1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1208,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 1163, 1162, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1102, 277, 1221, 476, 477, 478, 1125, 1173,
	479, 1187, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 1202, 491, 492, 1112, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 1203, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1183, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	1113, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1166, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 1181, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	1228, 591, 592, 593, 594, 1204, 598, 599, 0, 600,
	601, 1099, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 1193, 1194, 1195, 1196,
	0, 620, 0, 611, 613, 614, 1205, 615, 1206, 1123,
	616, 617, 618, 619, 612, 621, 622, 0, 1106, 623,
	624, 625, 627, 628, 626, 629, 1167, 630, 0, 0,
	631, 632, 633, 692, 1190, 1227, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1103, 0, 0, 0, 1547, 0,
	1145, 1117, 1118, 1119, 1115, 1116, 1128, 0, 1098, 0,
	0, 0, 0, 0, 0, 1096, 1097, 278, 280, 279,
	281, 282, 283, 284, 1129, 285, 286, 0, 1127, 0,
	0, 0, 1169, 1133, 0, 0, 0, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 1182, 0, 295,
	1189, 296, 1188, 0, 1199, 297, 298, 299, 300, 301,
	302, 1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304,
	305, 1175, 0, 1156, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165,
	1161, 1160, 1164, 331, 332, 333, 334, 335, 1192, 336,
	338, 1186, 1185, 1105, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 1177, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 1111, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 1200, 1201, 369, 1124, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 1184, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 1211, 376, 377, 378, 1197,
	1198, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 1207, 0, 1134, 389, 0, 390, 391, 392,
	393, 394, 1546, 1171, 1174, 480, 1213, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 1212, 405, 1179, 1180, 0, 1140,
	0, 407, 408, 1214, 1172, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1208, 1217, 423, 424,
	1218, 0, 425, 426, 427, 428, 429, 430, 433, 1163,
	1162, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 1102,
	277, 1221, 476, 477, 478, 1125, 1173, 479, 1187, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 1222, 490, 1223, 1202, 491,
	492, 1112, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 1203, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1183, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 1113, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1166,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 1181, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 1228, 591, 592,
	593, 594, 1204, 598, 599, 0, 600, 601, 1099, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 1193, 1194, 1195, 1196, 0, 620, 0,
	611, 613, 614, 1205, 615, 1206, 1123, 616, 617, 618,
	619, 612, 621, 622, 0, 1106, 623, 624, 625, 627,
	628, 626, 629, 1167, 630, 0, 0, 631, 632, 633,
	692, 1190, 1227, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1103, 0, 0, 0, 1540, 0, 1145, 1117, 1118,
	1119, 1115, 1116, 1128, 0, 1098, 0, 0, 0, 0,
	0, 0, 1096, 1097, 278, 280, 279, 281, 282, 283,
	284, 1129, 285, 286, 0, 1127, 0, 0, 0, 1169,
	1133, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 1182, 0, 295, 1189, 296, 1188,
	0, 1199, 297, 298, 299, 300, 301, 302, 1135, 1168,
	1100, 303, 1229, 1230, 653, 0, 304, 305, 1175, 0,
	1156, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164,
	331, 332, 333, 334, 335, 1192, 336, 338, 1186, 1185,
	1105, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1177, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1111, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1200,
	1201, 369, 1124, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1184, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 1197, 1198, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 1207,
	0, 1134, 389, 0, 390, 391, 392, 393, 394, 1170,
	1171, 1174, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 1212, 405, 1179, 1180, 0, 1140, 0, 407, 408,
	1214, 1172, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1208, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 1163, 1162, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 1102, 277, 1221, 476,
	477, 478, 1125, 1173, 479, 1187, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 1202, 491, 492, 1112, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 1203,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1183, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 1113, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1166, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 1181, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 1228, 591, 592, 593, 594, 1204,
	598, 599, 0, 600, 601, 1099, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	1193, 1194, 1195, 1196, 0, 620, 0, 611, 613, 614,
	1205, 615, 1206, 1123, 616, 617, 618, 619, 612, 621,
	622, 0, 1106, 623, 624, 625, 627, 628, 626, 629,
	1167, 630, 0, 0, 631, 632, 633, 692, 1190, 1227,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1103, 0,
	0, 0, 1356, 0, 1145, 1117, 1118, 1119, 1115, 1116,
	1128, 0, 1098, 0, 0, 0, 0, 0, 0, 1096,
	1097, 278, 280, 279, 281, 282, 283, 284, 1129, 285,
	286, 0, 1127, 0, 0, 0, 1169, 1133, 0, 0,
	0, 287, 288, 1209, 289, 290, 291, 292, 293, 294,
	646, 1182, 0, 295, 1189, 296, 1188, 0, 1199, 297,
	298, 299, 300, 301, 302, 1135, 1168, 1100, 303, 1229,
	1230, 653, 0, 304, 305, 1175, 0, 1156, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1210, 328, 329, 330,
	1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333,
	334, 335, 1192, 336, 338, 1186, 1185, 1105, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 1177, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 1111, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 1200, 1201, 369, 1124,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 1184,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 1211,
	376, 377, 378, 1197, 1198, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 1207, 0, 1134, 389,
	0, 390, 391, 392, 393, 394, 1170, 1171, 1174, 480,
	1213, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 1212, 405,
	1179, 1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215,
	409, 410, 411, 1216, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1208, 1217, 423, 424, 1218, 0, 425, 426, 427, 428,
	429, 430, 433, 1163, 1162, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1219, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	1220, 474, 462, 1102, 277, 1221, 476, 477, 478, 1125,
	1173, 479, 1187, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 1222,
	490, 1223, 1202, 491, 492, 1112, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 1203, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1183, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1224, 545, 546, 547, 548,
	549, 1113, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1166, 572, 573, 555, 556, 574, 575,
	1225, 576, 577, 578, 579, 580, 581, 582, 1181, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 1228, 591, 592, 593, 594, 1204, 598, 599, 0,
	600, 601, 1099, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 1193, 1194, 1195,
	1196, 0, 620, 0, 611, 613, 614, 1205, 615, 1206,
	1123, 616, 617, 618, 619, 612, 621, 622, 0, 1106,
	623, 624, 625, 627, 628, 626, 629, 1167, 630, 0,
	0, 631, 632, 633, 692, 1190, 1227, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1103, 0, 0, 0, 0,
	0, 1145, 1117, 1118, 1119, 1115, 1116, 1128, 0, 1098,
	0, 0, 0, 0, 0, 0, 1096, 1097, 278, 280,
	279, 281, 282, 283, 284, 1129, 285, 286, 0, 1127,
	0, 0, 0, 1169, 1133, 0, 0, 0, 287, 288,
	1209, 289, 290, 291, 292, 293, 294, 646, 1182, 0,
	295, 1189, 296, 1188, 0, 1199, 297, 298, 299, 300,
	301, 302, 1135, 1168, 1100, 303, 1229, 1230, 653, 0,
	304, 305, 1175, 0, 1156, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1210, 328, 329, 330, 1159, 1157, 1158,
	1165, 1161, 1160, 1164, 331, 332, 333, 334, 335, 1192,
	336, 338, 1186, 1185, 1105, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 1177,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 1111, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1200, 1201, 369, 1124, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 1184, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 1211, 376, 377, 378,
	1197, 1198, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 1207, 0, 1134, 389, 0, 390, 391,
	392, 393, 394, 1170, 1171, 1174, 480, 1213, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 1212, 405, 1179, 1180, 0,
	1140, 0, 407, 408, 1214, 1172, 1215, 409, 410, 411,
	1216, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1208, 1217, 423,
	424, 1218, 0, 425, 426, 427, 428, 429, 430, 433,
	1163, 1162, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1219, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 1220, 474, 462,
	1102, 277, 1221, 476, 477, 478, 1125, 1173, 479, 1187,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 1222, 490, 1223, 1202,
	491, 492, 1112, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 1203, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1183,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1224, 545, 546, 547, 548, 549, 1113, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1166, 572, 573, 555, 556, 574, 575, 1225, 576, 577,
	578, 579, 580, 581, 582, 1181, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 1228, 591,
	592, 593, 594, 1204, 598, 599, 0, 600, 601, 1099,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 1193, 1194, 1195, 1196, 0, 620,
	0, 611, 613, 614, 1205, 615, 1206, 1123, 616, 617,
	618, 619, 612, 621, 622, 0, 1106, 623, 624, 625,
	627, 628, 626, 629, 1167, 630, 0, 0, 631, 632,
	633, 692, 1190, 1227, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1103, 0, 0, 0, 0, 0, 1145, 1117,
	1118, 1119, 1115, 1116, 1128, 0, 1098, 0, 0, 0,
	0, 0, 0, 1096, 1097, 278, 280, 279, 281, 282,
	283, 284, 1129, 285, 286, 0, 1127, 0, 0, 0,
	1169, 1133, 0, 0, 0, 287, 288, 1209, 289, 290,
	291, 292, 293, 294, 646, 1182, 0, 295, 1189, 296,
	1188, 0, 1199, 297, 298, 299, 300, 301, 302, 1135,
	1168, 1100, 303, 1229, 1230, 653, 0, 304, 305, 1175,
	0, 1156, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1210, 328, 329, 4763, 1159, 1157, 1158, 1165, 1161, 1160,
	1164, 331, 332, 333, 334, 335, 1192, 336, 338, 1186,
	1185, 1105, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 1177, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 1111,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	1200, 1201, 369, 1124, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 1184, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 1211, 376, 377, 378, 1197, 1198, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	1207, 0, 1134, 389, 0, 390, 391, 392, 393, 394,
	1170, 1171, 1174, 480, 1213, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 276, 402, 403, 404,
	406, 0, 1212, 405, 1179, 1180, 0, 1140, 0, 407,
	408, 1214, 1172, 1215, 409, 410, 411, 1216, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1208, 1217, 423, 424, 1218, 0,
	425, 426, 427, 428, 429, 430, 433, 1163, 1162, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1219, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 1220, 474, 462, 1102, 277, 1221,
	476, 477, 478, 1125, 1173, 479, 1187, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 1222, 490, 1223, 1202, 491, 492, 1112,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	1203, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1183, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1224,
	545, 546, 547, 548, 549, 1113, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1166, 572, 573,
	555, 556, 574, 575, 1225, 576, 577, 578, 579, 580,
	581, 582, 1181, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 1228, 591, 592, 593, 594,
	1204, 598, 599, 0, 600, 601, 1099, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 1193, 1194, 1195, 1196, 0, 620, 0, 611, 613,
	614, 1205, 615, 1206, 1123, 616, 617, 618, 619, 612,
	4762, 622, 0, 1106, 623, 624, 625, 627, 628, 626,
	629, 1167, 630, 0, 0, 631, 632, 633, 692, 1190,
	1227, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1103,
	0, 0, 0, 0, 0, 1145, 1117, 1118, 1119, 1115,
	1116, 1128, 0, 1098, 0, 0, 0, 0, 0, 0,
	1096, 1097, 278, 280, 279, 281, 282, 283, 284, 1129,
	285, 286, 0, 1127, 0, 0, 0, 1169, 1133, 0,
	0, 0, 287, 288, 1209, 289, 290, 291, 292, 293,
	294, 4761, 1182, 0, 295, 1189, 296, 1188, 0, 1199,
	297, 298, 299, 300, 301, 302, 1135, 1168, 1100, 303,
	1229, 1230, 653, 0, 304, 305, 1175, 0, 1156, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1210, 328, 329,
	4763, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332,
	333, 334, 335, 1192, 336, 338, 1186, 1185, 1105, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 1177, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 1111, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1200, 1201, 369,
	1124, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	1184, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	1211, 376, 377, 378, 1197, 1198, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 1207, 0, 1134,
	389, 0, 390, 391, 392, 393, 394, 1170, 1171, 1174,
	480, 1213, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 276, 402, 403, 404, 406, 0, 1212,
	405, 1179, 1180, 0, 1140, 0, 407, 408, 1214, 1172,
	1215, 409, 410, 411, 1216, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1208, 1217, 423, 424, 1218, 0, 425, 426, 427,
	428, 429, 430, 433, 1163, 1162, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1219, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 1220, 474, 462, 1102, 277, 1221, 476, 477, 478,
	1125, 1173, 479, 1187, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	1222, 490, 1223, 1202, 491, 492, 1112, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 1203, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1183, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1224, 545, 546, 547,
	548, 549, 1113, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1166, 572, 573, 555, 556, 574,
	575, 1225, 576, 577, 578, 579, 580, 581, 582, 1181,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 1228, 591, 592, 593, 594, 1204, 598, 599,
	0, 600, 601, 1099, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 1193, 1194,
	1195, 1196, 0, 620, 0, 611, 613, 614, 1205, 615,
	1206, 1123, 616, 617, 618, 619, 612, 4762, 622, 0,
	1106, 623, 624, 625, 627, 628, 626, 629, 1167, 630,
	0, 0, 631, 632, 633, 692, 1190, 1227, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1103, 0, 0, 0,
	0, 0, 1145, 1117, 1118, 1119, 1115, 1116, 1128, 0,
	1098, 0, 0, 0, 0, 0, 0, 1096, 1097, 278,
	280, 279, 281, 282, 283, 284, 1129, 285, 286, 0,
	1127, 0, 0, 0, 1169, 1133, 0, 0, 0, 287,
	288, 1209, 289, 290, 291, 292, 293, 294, 646, 1182,
	0, 295, 1189, 296, 1188, 0, 1199, 297, 298, 299,
	300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230, 653,
	0, 304, 305, 1175, 0, 1156, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 1210, 328, 4386, 330, 1159, 1157,
	1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334, 335,
	1192, 336, 338, 1186, 1185, 1105, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	1177, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 1111, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 1200, 1201, 369, 1124, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 1184, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 1211, 376, 377,
	378, 1197, 1198, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 1207, 0, 4387, 389, 0, 390,
	391, 392, 393, 394, 1170, 1171, 1174, 480, 1213, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 0, 1212, 405, 1179, 1180,
	0, 1140, 0, 407, 408, 1214, 1172, 1215, 409, 410,
	411, 1216, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1208, 1217,
	423, 424, 1218, 0, 425, 426, 427, 428, 429, 430,
	433, 1163, 1162, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1219, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 1220, 474,
	462, 1102, 277, 1221, 476, 477, 478, 1125, 1173, 479,
	1187, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 1222, 490, 1223,
	1202, 491, 492, 1112, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 1203, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1183, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1224, 545, 546, 547, 4385, 549, 1113,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1166, 572, 573, 555, 556, 574, 575, 1225, 576,
	577, 578, 579, 580, 581, 582, 1181, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 1228,
	591, 592, 593, 594, 1204, 598, 599, 0, 600, 601,
	1099, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 1193, 1194, 1195, 1196, 0,
	620, 0, 611, 613, 614, 1205, 615, 1206, 1123, 616,
	617, 618, 619, 612, 621, 622, 0, 1106, 623, 624,
	625, 627, 628, 626, 629, 1167, 630, 0, 0, 631,
	632, 633, 692, 1190, 1227, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1103, 0, 0, 0, 0, 0, 1145,
	1117, 1118, 1119, 3212, 3213, 1128, 0, 1098, 0, 0,
	0, 0, 0, 0, 1096, 1097, 278, 280, 279, 281,
	282, 283, 284, 1129, 285, 286, 0, 1127, 0, 0,
	0, 1169, 1133, 0, 0, 0, 287, 288, 1209, 289,
	290, 291, 292, 293, 294, 646, 1182, 0, 295, 1189,
	296, 1188, 0, 1199, 297, 298, 299, 300, 301, 302,
	1135, 1168, 1100, 303, 1229, 1230, 653, 0, 304, 305,
	1175, 0, 1156, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165, 1161,
	1160, 1164, 331, 332, 333, 334, 335, 1192, 336, 338,
	1186, 1185, 1105, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 1177, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	1111, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 1200, 1201, 369, 1124, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 1184, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 1211, 376, 377, 378, 1197, 1198,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 1207, 0, 1134, 389, 0, 390, 391, 392, 393,
	394, 1170, 1171, 1174, 480, 1213, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 0, 1212, 405, 1179, 1180, 0, 1140, 0,
	407, 408, 1214, 1172, 1215, 409, 410, 411, 1216, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1208, 1217, 423, 424, 1218,
	0, 425, 426, 427, 428, 429, 430, 433, 1163, 1162,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1219,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 1220, 474, 462, 1102, 277,
	1221, 476, 477, 478, 1125, 1173, 479, 1187, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 1222, 490, 1223, 1202, 491, 492,
	1112, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 1203, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1183, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1224, 545, 546, 547, 548, 549, 1113, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1166, 572,
	573, 555, 556, 574, 575, 1225, 576, 577, 578, 579,
	580, 581, 582, 1181, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 1228, 591, 592, 593,
	594, 1204, 598, 599, 0, 600, 601, 1099, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 1193, 1194, 1195, 1196, 0, 620, 0, 611,
	613, 614, 1205, 615, 1206, 1123, 616, 617, 618, 619,
	612, 621, 622, 0, 1106, 623, 624, 625, 627, 628,
	626, 629, 1167, 630, 0, 0, 631, 632, 633, 692,
	1190, 1227, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1103, 0, 0, 0, 0, 0, 1145, 1117, 1118, 1119,
	3210, 3211, 1128, 0, 1098, 0, 0, 0, 0, 0,
	0, 1096, 1097, 278, 280, 279, 281, 282, 283, 284,
	1129, 285, 286, 0, 1127, 0, 0, 0, 1169, 1133,
	0, 0, 0, 287, 288, 1209, 289, 290, 291, 292,
	293, 294, 646, 1182, 0, 295, 1189, 296, 1188, 0,
	1199, 297, 298, 299, 300, 301, 302, 1135, 1168, 1100,
	303, 1229, 1230, 653, 0, 304, 305, 1175, 0, 1156,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 1210, 328,
	329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331,
	332, 333, 334, 335, 1192, 336, 338, 1186, 1185, 1105,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 1177, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 1111, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 1200, 1201,
	369, 1124, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 1184, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 1211, 376, 377, 378, 1197, 1198, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 1207, 0,
	1134, 389, 0, 390, 391, 392, 393, 394, 1170, 1171,
	1174, 480, 1213, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	1212, 405, 1179, 1180, 0, 1140, 0, 407, 408, 1214,
	1172, 1215, 409, 410, 411, 1216, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1208, 1217, 423, 424, 1218, 0, 425, 426,
	427, 428, 429, 430, 433, 1163, 1162, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1219, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 1220, 474, 462, 1102, 277, 1221, 476, 477,
	478, 1125, 1173, 479, 1187, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 1222, 490, 1223, 1202, 491, 492, 1112, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 1203, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1183, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1224, 545, 546,
	547, 548, 549, 1113, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1166, 572, 573, 555, 556,
	574, 575, 1225, 576, 577, 578, 579, 580, 581, 582,
	1181, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 1228, 591, 592, 593, 594, 1204, 598,
	599, 0, 600, 601, 1099, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 1193,
	1194, 1195, 1196, 0, 620, 0, 611, 613, 614, 1205,
	615, 1206, 1123, 616, 617, 618, 619, 612, 621, 622,
	0, 1106, 623, 624, 625, 627, 628, 626, 629, 1167,
	630, 0, 0, 631, 632, 633, 692, 1190, 1227, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1103, 0, 0,
	0, 0, 0, 1145, 1117, 1118, 1119, 1115, 1116, 1128,
	0, 1098, 0, 0, 0, 0, 0, 0, 1096, 1097,
	278, 280, 279, 281, 282, 283, 284, 1129, 285, 286,
	0, 1127, 0, 0, 0, 1169, 1133, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	1182, 0, 295, 1189, 296, 1188, 0, 1199, 297, 298,
	299, 300, 301, 302, 1135, 1168, 1100, 303, 1229, 1230,
	653, 0, 304, 305, 1175, 0, 1156, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 1159,
	1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334,
	335, 1192, 336, 338, 1186, 1185, 1105, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 1177, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 1111, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 1200, 1201, 369, 1124, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 1184, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 1197, 1198, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 1207, 0, 1134, 389, 0,
	390, 391, 392, 393, 394, 1170, 1171, 1174, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 1212, 405, 1179,
	1180, 0, 1140, 0, 407, 408, 1214, 1172, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1208,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 1163, 1162, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 1102, 277, 1221, 476, 477, 478, 1125, 1173,
	479, 1187, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 1202, 491, 492, 1112, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 1203, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1183, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	1113, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1166, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 1181, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	1228, 591, 592, 593, 594, 1204, 598, 599, 0, 600,
	601, 1099, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 1193, 1194, 1195, 1196,
	0, 620, 0, 611, 613, 614, 1205, 615, 1206, 1123,
	616, 617, 618, 619, 612, 621, 622, 0, 1106, 623,
	624, 625, 627, 628, 626, 629, 1167, 630, 0, 0,
	631, 632, 633, 692, 1190, 1227, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1103, 0, 0, 0, 0, 0,
	1145, 1117, 1118, 1119, 1115, 1116, 1128, 0, 1098, 0,
	0, 0, 0, 0, 0, 2464, 2465, 278, 280, 279,
	281, 282, 283, 284, 1129, 285, 286, 0, 1127, 0,
	0, 0, 1169, 1133, 0, 0, 0, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 1182, 0, 295,
	1189, 296, 1188, 0, 1199, 297, 298, 299, 300, 301,
	302, 1135, 1168, 0, 303, 1229, 1230, 653, 0, 304,
	305, 1175, 0, 1156, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1210, 328, 329, 330, 1159, 1157, 1158, 1165,
	1161, 1160, 1164, 331, 332, 333, 334, 335, 1192, 336,
	338, 1186, 1185, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 1177, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 1111, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 1200, 1201, 369, 1124, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 1184, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 1211, 376, 377, 378, 1197,
	1198, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 1207, 0, 1134, 389, 0, 390, 391, 392,
	393, 394, 1170, 1171, 1174, 480, 1213, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 1212, 405, 1179, 1180, 0, 1140,
	0, 407, 408, 1214, 1172, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1208, 1217, 423, 424,
	1218, 0, 425, 426, 427, 428, 429, 430, 433, 1163,
	1162, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 0,
	277, 1221, 476, 477, 478, 1125, 1173, 479, 1187, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 1222, 490, 1223, 1202, 491,
	492, 1112, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 1203, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1183, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 1113, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1166,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 1181, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 1228, 591, 592,
	593, 594, 1204, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 1193, 1194, 1195, 1196, 0, 620, 0,
	611, 613, 614, 1205, 615, 1206, 1123, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 1167, 630, 0, 0, 631, 632, 633,
	692, 1190, 1227, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 1145, 1117, 1118,
	1119, 1115, 1116, 1128, 0, 2725, 0, 0, 0, 0,
	0, 0, 2723, 2724, 278, 280, 279, 281, 282, 283,
	284, 1129, 285, 286, 0, 1127, 0, 0, 0, 1169,
	1133, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 1182, 0, 295, 1189, 296, 1188,
	0, 1199, 297, 298, 299, 300, 301, 302, 1135, 1168,
	0, 303, 1229, 1230, 653, 0, 304, 305, 1175, 0,
	1156, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164,
	331, 332, 333, 334, 335, 1192, 336, 338, 1186, 1185,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 1177, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 1111, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1200,
	1201, 369, 1124, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 1184, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 1197, 1198, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 1207,
	0, 1134, 389, 0, 390, 391, 392, 393, 394, 1170,
	1171, 1174, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 1212, 405, 1179, 1180, 0, 1140, 0, 407, 408,
	1214, 1172, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1208, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 1163, 1162, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 0, 277, 1221, 476,
	477, 478, 1125, 1173, 479, 1187, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 1202, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 1203,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1183, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 3205, 3206, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1166, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 1181, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 1228, 591, 592, 593, 594, 1204,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	1193, 1194, 1195, 1196, 0, 620, 0, 611, 613, 614,
	1205, 615, 1206, 1123, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	1167, 630, 0, 0, 631, 632, 633, 692, 1190, 1227,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 1145, 1117, 1118, 1119, 1115, 1116,
	1128, 0, 0, 0, 0, 0, 0, 0, 0, 2138,
	2139, 278, 280, 279, 281, 282, 283, 284, 1129, 285,
	286, 0, 1127, 0, 0, 0, 1169, 1133, 0, 0,
	0, 287, 288, 1209, 289, 290, 291, 292, 293, 294,
	0, 1182, 0, 295, 1189, 296, 1188, 0, 1199, 297,
	298, 299, 300, 301, 302, 1135, 1168, 1100, 303, 1229,
	1230, 653, 0, 304, 305, 1175, 0, 1156, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1210, 328, 329, 4763,
	1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333,
	334, 335, 1192, 336, 338, 1186, 1185, 1105, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 1177, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 1111, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 1200, 1201, 369, 1124,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 1184,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 1211,
	376, 377, 378, 1197, 1198, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 1207, 0, 1134, 389,
	0, 390, 391, 392, 393, 394, 1170, 1171, 1174, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 1212, 405,
	1179, 1180, 0, 1140, 0, 407, 408, 0, 1172, 0,
	409, 410, 411, 1216, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1208, 1217, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 1163, 1162, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1219, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	1220, 474, 462, 1102, 277, 0, 476, 477, 478, 1125,
	1173, 479, 1187, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 1222,
	490, 1223, 1202, 491, 492, 1112, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 1203, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1183, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1224, 545, 546, 547, 548,
	549, 1113, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1166, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 1181, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 1228, 591, 592, 593, 594, 1204, 598, 599, 0,
	600, 601, 1099, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 1193, 1194, 1195,
	1196, 0, 620, 0, 611, 613, 614, 1205, 615, 1206,
	1123, 616, 617, 618, 619, 612, 4762, 622, 0, 1106,
	623, 624, 625, 627, 628, 626, 629, 1167, 630, 0,
	0, 631, 632, 633, 692, 1190, 1227, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 1087,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1096, 1097, 278, 280,
	279, 281, 282, 283, 284, 1129, 285, 286, 0, 1127,
	0, 0, 0, 1169, 0, 0, 0, 0, 287, 288,
	1209, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 1168, 0, 303, 651, 652, 653, 0,
	304, 305, 1175, 0, 1156, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1210, 328, 329, 330, 1159, 1157, 1158,
	1165, 1161, 1160, 1164, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 1200, 1201, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 1211, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 1207, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 1170, 1171, 1174, 480, 1213, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 1212, 405, 668, 669, 0,
	670, 0, 407, 408, 1214, 1172, 1215, 409, 410, 411,
	1216, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 1253, 419, 421, 420, 0, 422, 1208, 1217, 423,
	424, 1218, 0, 425, 426, 427, 428, 429, 430, 433,
	1163, 1162, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1219, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 1220, 474, 462,
	0, 277, 1221, 476, 477, 478, 0, 1173, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 1259, 485, 486,
	487, 0, 0, 488, 489, 675, 1222, 490, 1223, 1202,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 1203, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1224, 545, 546, 547, 548, 549, 682, 1261,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 237, 567, 568, 566, 569, 570, 571,
	1166, 572, 573, 555, 556, 574, 575, 1225, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 1204, 598, 599, 0, 600, 601, 0,
	597, 588, 239, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 1205, 615, 1206, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 1167, 630, 0, 0, 631, 632,
	633, 1631, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 231, 640, 641, 696, 642,
	643, 644, 1267, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	1257, 0, 1981, 0, 1169, 0, 0, 0, 0, 287,
	288, 1209, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 1168, 0, 303, 651, 652, 653,
	0, 304, 305, 1175, 0, 1156, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 1210, 328, 329, 330, 1159, 1157,
	1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 1200, 1201, 369, 0, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 1211, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 1207, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 1170, 1171, 1174, 480, 1213, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 0, 1212, 405, 668, 669,
	0, 670, 0, 407, 408, 1214, 1172, 1215, 409, 410,
	411, 1216, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 1253, 419, 421, 420, 0, 422, 1208, 1217,
	423, 424, 1218, 0, 425, 426, 427, 428, 429, 430,
	433, 1163, 1162, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1219, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 1220, 474,
	462, 0, 277, 1221, 476, 477, 478, 0, 1173, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 1259, 485,
	486, 487, 0, 0, 488, 489, 675, 1222, 490, 1223,
	1202, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 1203, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1224, 545, 546, 547, 548, 549, 682,
	1261, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 237, 567, 568, 566, 569, 570,
	571, 1166, 572, 573, 555, 556, 574, 575, 1225, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 1204, 598, 599, 0, 600, 601,
	0, 597, 588, 239, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 1205, 615, 1206, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 1167, 630, 0, 0, 631,
	632, 633, 1631, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 231, 640, 641, 696,
	642, 643, 644, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3370, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1257, 0, 1981, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 1168,
	0, 303, 651, 652, 653, 0, 304, 305, 1175, 0,
	1156, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 1159, 1157, 1158, 1165, 1161, 1160, 1164,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 1200,
	1201, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 1207,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 1170,
	1171, 1174, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 1212, 405, 668, 669, 0, 670, 0, 407, 408,
	1214, 1172, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 1253, 419, 421,
	420, 0, 422, 1208, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 1163, 1162, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 0, 277, 1221, 476,
	477, 478, 0, 1173, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 1259, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 1202, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 1203,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 682, 1261, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1166, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 1204,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	1205, 615, 1206, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	1167, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1249, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1257, 0, 1255, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 287,
	288, 1209, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 1168, 0, 303, 651, 652, 653,
	0, 304, 305, 1175, 0, 1156, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 1210, 328, 329, 330, 1159, 1157,
	1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 1200, 1201, 369, 0, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 1211, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 1207, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 1170, 1171, 1174, 480, 1213, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 0, 1212, 405, 668, 669,
	0, 670, 0, 407, 408, 1214, 1172, 1215, 409, 410,
	411, 1216, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 1253, 419, 421, 420, 0, 422, 1208, 1217,
	423, 424, 1218, 0, 425, 426, 427, 428, 429, 430,
	433, 1163, 1162, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1219, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 1220, 474,
	462, 0, 277, 1221, 476, 477, 478, 0, 1173, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 1259, 485,
	486, 487, 0, 0, 488, 489, 675, 1222, 490, 1223,
	1202, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 1203, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1224, 545, 546, 547, 548, 549, 682,
	1261, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1166, 572, 573, 555, 556, 574, 575, 1225, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 1204, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 1205, 615, 1206, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 1167, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 1257, 0, 1255, 0, 1169, 0, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 1168, 0, 303, 651, 652,
	653, 0, 304, 305, 1175, 0, 1156, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 1159,
	1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 1200, 1201, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 1207, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 1170, 1171, 1174, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 1212, 405, 668,
	669, 0, 670, 0, 407, 408, 1214, 1172, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 1253, 419, 421, 420, 0, 422, 1208,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 1163, 1162, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 0, 277, 1221, 476, 477, 478, 0, 1173,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 1259,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 1202, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 1203, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	682, 1261, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1166, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 1204, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 1205, 615, 1206, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 1167, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 1257, 0, 1255, 0, 1169, 0, 0, 0,
	0, 287, 288, 1209, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 1168, 0, 303, 651,
	652, 653, 0, 304, 305, 1175, 0, 1156, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1210, 328, 329, 330,
	1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 1200, 1201, 369, 0,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 1211,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 1207, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 1170, 1171, 1174, 480,
	1213, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 1212, 405,
	668, 669, 0, 670, 0, 407, 408, 1214, 1172, 1215,
	409, 410, 411, 1216, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1208, 1217, 423, 424, 1218, 0, 425, 426, 427, 428,
	429, 430, 433, 1163, 1162, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1219, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	1220, 474, 462, 0, 277, 1221, 476, 477, 478, 0,
	1173, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 1222,
	490, 1223, 1202, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 1203, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1224, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1166, 572, 573, 555, 556, 574, 575,
	1225, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 1204, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 1205, 615, 1206,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 1167, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 4207, 0, 1169, 0, 0,
	0, 0, 287, 288, 1209, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 1168, 0, 303,
	651, 652, 653, 0, 304, 305, 1175, 0, 1156, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1210, 328, 329,
	330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1200, 1201, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	1211, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 1207, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 1170, 1171, 1174,
	480, 1213, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 276, 402, 403, 404, 406, 0, 1212,
	405, 668, 669, 0, 670, 0, 407, 408, 1214, 1172,
	1215, 409, 410, 411, 1216, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1208, 1217, 423, 424, 1218, 0, 425, 426, 427,
	428, 429, 430, 433, 1163, 1162, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1219, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 1220, 474, 462, 0, 277, 1221, 476, 477, 478,
	0, 1173, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	1222, 490, 1223, 1202, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 1203, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1224, 545, 546, 547,
	548, 549, 682, 1261, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1166, 572, 573, 555, 556, 574,
	575, 1225, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 1204, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 1205, 615,
	1206, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 1167, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 272, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 2570, 2571, 2572,
	2589, 2590, 2591, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 2592, 0, 645,
	0, 0, 0, 0, 287, 288, 1878, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	1863, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 2582,
	0, 314, 315, 316, 313, 317, 0, 318, 2578, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 0, 0, 2583, 2584, 2585, 2586, 370,
	371, 372, 660, 0, 0, 2577, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 2587,
	2588, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 2580, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 0, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 682, 550, 2581, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 1862, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 1087, 0, 1349, 2567,
	2568, 2569, 2593, 2579, 2573, 0, 2575, 2576, 2574, 2561,
	2562, 2563, 2564, 2565, 2566, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 1209, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 1354, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1210, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 1211, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	665, 666, 667, 480, 1213, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 0, 402, 403, 404,
	406, 0, 1212, 405, 668, 669, 0, 670, 0, 407,
	408, 1214, 671, 1215, 409, 410, 411, 1216, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 1217, 423, 424, 1218, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1219, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 1220, 474, 462, 0, 0, 1221,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 1222, 490, 1223, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1224,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	237, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 1225, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 239,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 1631, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 231, 640, 641, 696, 642, 643, 644, 0,
	1628, 232, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 190,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 1209, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 1354, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 1210, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 1211, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 1213, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	0, 402, 403, 404, 406, 0, 1212, 405, 668, 669,
	0, 670, 0, 407, 408, 1214, 671, 1215, 409, 410,
	411, 1216, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 1217,
	423, 424, 1218, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1219, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 1220, 474,
	462, 0, 0, 1221, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 1222, 490, 1223,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1224, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 237, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 1225, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 239, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 1631, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 231, 640, 641, 696,
	642, 643, 644, 1349, 1348, 232, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 190, 0, 645, 0, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	653, 0, 304, 305, 654, 0, 1354, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 665, 666, 667, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 0, 402, 403, 404, 406, 0, 1212, 405, 668,
	669, 0, 670, 0, 407, 408, 1214, 671, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 0, 0, 1221, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1349, 1348, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 1653, 0, 645, 0, 0, 0,
	0, 287, 288, 1209, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 1354, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1210, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 1211,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	1213, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 0, 402, 403, 404, 406, 0, 1212, 405,
	668, 669, 0, 670, 0, 407, 408, 1214, 671, 1215,
	409, 410, 411, 1216, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 1217, 423, 424, 1218, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1219, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	1220, 474, 462, 0, 0, 1221, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 1222,
	490, 1223, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1224, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	1225, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1349, 1348, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 3669, 0, 645, 0, 0,
	0, 0, 287, 288, 1209, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	651, 652, 653, 0, 304, 305, 654, 0, 1354, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1210, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	1211, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 663, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 665, 666, 667,
	480, 1213, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 0, 402, 403, 404, 406, 0, 1212,
	405, 668, 669, 0, 670, 0, 407, 408, 1214, 671,
	1215, 409, 410, 411, 1216, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 672, 1217, 423, 424, 1218, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1219, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 1220, 474, 462, 0, 0, 1221, 476, 477, 478,
	0, 673, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	1222, 490, 1223, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 2337, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1224, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 1225, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1349, 2248, 0, 0,
	0, 0, 2249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 1653, 0, 645, 0,
	0, 0, 0, 287, 288, 1209, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 1354,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 1210, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 1211, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 1213, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 0, 402, 403, 404, 406, 0,
	1212, 405, 668, 669, 0, 670, 0, 407, 408, 1214,
	671, 1215, 409, 410, 411, 1216, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 2247, 421, 420,
	0, 422, 672, 1217, 423, 424, 1218, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1219, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 1220, 474, 462, 0, 0, 1221, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 1222, 490, 1223, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1224, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1225, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1349, 1348, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 1653, 0, 645,
	0, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	1354, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 1212, 405, 668, 669, 0, 670, 0, 407, 408,
	1214, 671, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 0, 0, 1221, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1087, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 1637, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 0,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 0, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 0, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	0, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 237, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 239, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	1631, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 272, 0, 231, 640, 641, 696, 642, 643,
	644, 0, 0, 232, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 190, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 277, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 272, 3111, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 1995, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	0, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 0, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 0, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 4932, 0, 1169, 0, 0,
	0, 0, 287, 288, 1209, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 1168, 0, 303,
	651, 652, 653, 0, 304, 305, 1175, 0, 1156, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1210, 328, 329,
	330, 1159, 1157, 1158, 1165, 1161, 1160, 1164, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 1200, 1201, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	1211, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 1207, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 1170, 1171, 1174,
	480, 1213, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 276, 402, 403, 404, 406, 0, 1212,
	405, 668, 669, 0, 670, 0, 407, 408, 1214, 1172,
	1215, 409, 410, 411, 1216, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1208, 1217, 423, 424, 1218, 0, 425, 426, 427,
	428, 429, 430, 433, 1163, 1162, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1219, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 1220, 474, 462, 0, 277, 1221, 476, 477, 478,
	0, 1173, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	1222, 490, 1223, 1202, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 1203, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1224, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1166, 572, 573, 555, 556, 574,
	575, 1225, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 1204, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 1205, 615,
	1206, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 1167, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 272, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 277, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 272,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 3619, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 305,
	654, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 0, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 665, 666, 667, 480, 0, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 0, 0, 405, 668, 669, 0, 670, 0,
	407, 408, 0, 671, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 0, 474, 462, 0, 277,
	0, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 0, 490, 0, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 686, 687, 688, 689, 0, 620, 0, 611,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 272, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 1625, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 0, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	0, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 0, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 272, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 3099, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	0, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 0, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 0, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 272, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 3782, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 0, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 0, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 0, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 918, 0, 823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 2326, 0, 0,
	0, 645, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 305,
	654, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 830, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 916, 0, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 665, 666, 667, 480, 0, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 0, 0, 405, 668, 669, 0, 670, 0,
	407, 408, 0, 671, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 0, 474, 462, 0, 277,
	0, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 0, 490, 0, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	828, 602, 603, 604, 605, 606, 829, 608, 363, 609,
	0, 610, 686, 687, 688, 689, 0, 620, 0, 611,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	823, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 2064, 285, 286, 0, 0, 0,
	0, 0, 645, 833, 0, 0, 0, 287, 288, 0,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 830, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	277, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 2063, 562, 563,
	564, 565, 0, 2065, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 828, 602, 603, 604, 605, 606, 829, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 2062,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 823, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 2015, 285, 286, 0, 0,
	0, 0, 0, 645, 833, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 830, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 277, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 2014, 562,
	563, 564, 565, 0, 2016, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 828, 602, 603, 604, 605, 606, 829, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	2013, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 821, 0, 823, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 833, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	830, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 277, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 828, 602, 603, 604, 605,
	606, 829, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 2037, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 833, 0,
	0, 0, 287, 288, 1209, 289, 290, 291, 292, 293,
	294, 0, 2043, 0, 295, 2033, 296, 2049, 0, 2056,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	2059, 2060, 0, 0, 304, 305, 0, 0, 1354, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 1210, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 1192, 336, 338, 2047, 2046, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 1177, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 0, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	2045, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	1211, 376, 377, 378, 2054, 2055, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 0, 0, 0,
	389, 0, 390, 391, 392, 393, 394, 0, 0, 0,
	480, 1213, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 0, 402, 403, 404, 406, 0, 1212,
	405, 2040, 2041, 0, 2036, 0, 407, 408, 1214, 0,
	1215, 409, 410, 411, 1216, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 0, 1217, 423, 424, 1218, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1219, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 1220, 474, 462, 0, 0, 1221, 476, 477, 478,
	0, 0, 479, 2048, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 0,
	1222, 490, 1223, 0, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 2030,
	504, 505, 506, 2031, 507, 508, 509, 0, 510, 0,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 2044, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1224, 545, 546, 547,
	548, 549, 0, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 1225, 576, 577, 578, 579, 580, 581, 582, 2042,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 2058, 591, 592, 593, 594, 0, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 2050, 2051,
	2052, 2053, 0, 620, 0, 611, 613, 614, 0, 615,
	0, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 0, 2034, 2057, 0, 635,
	634, 636, 637, 0, 638, 639, 0, 0, 0, 0,
	640, 641, 0, 642, 643, 644, 823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	2024, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 830, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 277, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 828, 602, 603,
	604, 605, 606, 829, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 823, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	833, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 830, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 277, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 2374,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 2375, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 828, 602,
	603, 604, 605, 606, 829, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 2376, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 272, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 833, 0, 0, 0, 287, 288, 0, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	0, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 0, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	665, 666, 667, 480, 0, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 276, 402, 403, 404,
	406, 0, 0, 405, 668, 669, 0, 670, 0, 407,
	408, 0, 671, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 0, 474, 462, 0, 277, 0,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 0, 490, 0, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1349,
	2112, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 645, 833, 0, 0, 0, 287, 288, 1209, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 305,
	654, 0, 1354, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1210, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 3062, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 1211, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 665, 666, 667, 480, 1213, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 0, 402, 403,
	404, 406, 0, 1212, 405, 668, 669, 0, 670, 0,
	407, 408, 1214, 671, 1215, 409, 410, 411, 1216, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 1217, 423, 424, 1218,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1219,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 1220, 474, 462, 0, 0,
	1221, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 1222, 490, 1223, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1224, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 3063, 572,
	573, 555, 556, 574, 575, 1225, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 686, 687, 688, 689, 0, 620, 0, 611,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1349, 1348, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 1354, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1210, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 1211, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 1213, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 0, 402,
	403, 404, 406, 0, 1212, 405, 668, 669, 0, 670,
	0, 407, 408, 1214, 671, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 1217, 423, 424,
	1218, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 0,
	0, 1221, 476, 477, 478, 3977, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 1222, 490, 1223, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1349, 1348, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	1209, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 1354, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 1210, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 1211, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 1213, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 0,
	402, 403, 404, 406, 0, 1212, 405, 668, 669, 0,
	670, 0, 407, 408, 1214, 671, 1215, 409, 410, 411,
	1216, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 1217, 423,
	424, 1218, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1219, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 1220, 474, 462,
	0, 0, 1221, 476, 477, 478, 3580, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 1222, 490, 1223, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1224, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 1225, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1681, 0, 1349, 1348, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 1209, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 1354, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 1210, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	275, 0, 0, 0, 0, 0, 1680, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 1211,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	1213, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 0, 402, 403, 404, 406, 0, 1212, 405,
	668, 669, 0, 670, 0, 407, 408, 1214, 671, 1215,
	409, 410, 411, 1216, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 1217, 423, 424, 1218, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1219, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	1220, 474, 462, 0, 0, 1221, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 1222,
	490, 1223, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	1679, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1224, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 1678, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	1225, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1599, 0, 1349, 1348, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	1354, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 1598,
	666, 667, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 1212, 405, 668, 669, 0, 670, 0, 407, 408,
	1214, 671, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 0, 0, 1221, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1558, 0,
	1349, 1348, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 1354, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1210, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 1211, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 1560, 666, 667, 480, 1213, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 0, 402,
	403, 404, 406, 0, 1212, 405, 668, 669, 0, 670,
	0, 407, 408, 1214, 671, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 1217, 423, 424,
	1218, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 0,
	0, 1221, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 1222, 490, 1223, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1523, 0, 1349, 1348, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	287, 288, 1209, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	653, 0, 304, 305, 654, 0, 1354, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 1210, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 1211, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 1522, 666, 667, 480, 1213,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 0, 402, 403, 404, 406, 0, 1212, 405, 668,
	669, 0, 670, 0, 407, 408, 1214, 671, 1215, 409,
	410, 411, 1216, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	1217, 423, 424, 1218, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1219, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 1220,
	474, 462, 0, 0, 1221, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 1222, 490,
	1223, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1224, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 1225,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1343, 0, 1349, 1348, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 1209, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 1354,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 1210, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 1211, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 1342, 666,
	667, 480, 1213, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 0, 402, 403, 404, 406, 0,
	1212, 405, 668, 669, 0, 670, 0, 407, 408, 1214,
	671, 1215, 409, 410, 411, 1216, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 1217, 423, 424, 1218, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1219, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 1220, 474, 462, 0, 0, 1221, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 1222, 490, 1223, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1224, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1225, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1349, 1348, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 1209, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	1354, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 1210,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 1211, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 1213, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 1212, 405, 668, 669, 0, 670, 0, 407, 408,
	1214, 671, 1215, 409, 410, 411, 1216, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 1217, 423, 424, 1218, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1219, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 1220, 474, 462, 0, 0, 1221, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 1222, 490, 1223, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1224, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1225, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1349, 2112,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 1209, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 1354, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	1210, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 2109, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 1211, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	665, 666, 667, 480, 1213, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 0, 402, 403, 404,
	406, 0, 1212, 405, 668, 669, 0, 670, 0, 407,
	408, 1214, 671, 1215, 409, 410, 411, 1216, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 1217, 423, 424, 1218, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1219, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 1220, 474, 462, 0, 0, 1221,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 1222, 490, 1223, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1224,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 1225, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1349,
	1348, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 287, 288, 1209, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 305,
	654, 0, 1354, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 1210, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 1211, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 665, 666, 667, 480, 1213, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 0, 402, 403,
	404, 406, 0, 1212, 405, 668, 669, 0, 670, 0,
	407, 408, 1214, 671, 1215, 409, 410, 411, 1216, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 1217, 423, 424, 1218,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1219,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 1220, 474, 462, 0, 0,
	1221, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 1222, 490, 1223, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1224, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 1225, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 686, 687, 688, 689, 0, 620, 0, 611,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1349, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 1209,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 1354, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 1210, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 1211, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 1213, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 0, 402,
	403, 404, 406, 0, 1212, 405, 668, 669, 0, 670,
	0, 407, 408, 1214, 671, 1215, 409, 410, 411, 1216,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 1217, 423, 424,
	1218, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1219, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 1220, 474, 462, 0,
	0, 1221, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 1222, 490, 1223, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1224, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1225, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 272, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 2894,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	2891, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	2898, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 3124, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 2897, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 3121,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 3123, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 3120, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 0, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 2896, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 3122, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 272, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	2894, 304, 305, 654, 0, 0, 2888, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 2891, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 2898, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 0, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 2897, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 2887, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	0, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 0, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 2896,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 2895, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1758, 0, 272, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 1757,
	285, 286, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	651, 652, 653, 0, 304, 305, 654, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 1756, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	0, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 663, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 665, 666, 667,
	480, 0, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 276, 402, 403, 404, 406, 0, 0,
	405, 668, 669, 0, 670, 0, 407, 408, 0, 671,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 672, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 0, 474, 462, 0, 277, 0, 476, 477, 478,
	0, 673, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	0, 490, 0, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	1759, 554, 561, 562, 563, 564, 565, 0, 1755, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	0, 600, 601, 0, 597, 588, 1753, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 1754,
	634, 636, 637, 695, 638, 639, 1498, 0, 272, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 0, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	0, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 0, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	1500, 666, 667, 480, 0, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 276, 402, 403, 404,
	406, 0, 0, 405, 668, 669, 0, 670, 0, 407,
	408, 0, 671, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 0, 474, 462, 0, 277, 0,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 1259, 485, 486, 487, 0, 0,
	488, 489, 675, 0, 490, 0, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1495,
	0, 272, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 1497, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 277, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 1259, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1403, 0, 272, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 1405, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 277, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	1259, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 728, 0, 272, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 727, 283,
	284, 717, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 720, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 721, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 0, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 722,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 716, 0,
	272, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 717, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 0,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 720, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 0, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	721, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 0, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	0, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 722, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 272, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 717, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 720,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 721, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 0,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 0, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 722, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 272, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 717, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	720, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 0, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 3988, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	0, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 0, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 722, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 272, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	653, 0, 304, 305, 654, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 0, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 665, 666, 667, 480, 0,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 0, 405, 668,
	669, 0, 670, 0, 407, 408, 0, 671, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 0,
	474, 462, 0, 277, 0, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 1259,
	485, 486, 487, 0, 0, 488, 489, 675, 0, 490,
	0, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 272, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	3527, 474, 462, 0, 277, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 3069, 0, 272, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 3068,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 277, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 2343, 0,
	272, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 0,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	277, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 272, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 277, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 2282, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 2289, 0, 272, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 2288, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 277, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 2275, 0, 272, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 2277,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 277, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 272, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 0, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	0, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 0, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	2241, 666, 667, 480, 0, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 276, 402, 403, 404,
	406, 0, 0, 405, 668, 669, 0, 670, 0, 407,
	408, 0, 671, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 0, 474, 462, 0, 277, 0,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 1259, 485, 486, 487, 0, 0,
	488, 489, 675, 0, 490, 0, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1603,
	0, 272, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 1602, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 277, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1515, 0, 272, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	275, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 276, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 277, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 1508, 0, 272, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 275, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 1510,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 276, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 277, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1333, 0,
	272, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 0,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 1332, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	277, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1323, 0, 272, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	653, 0, 304, 305, 654, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 0, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 1322, 666, 667, 480, 0,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 0, 405, 668,
	669, 0, 670, 0, 407, 408, 0, 671, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 0,
	474, 462, 0, 277, 0, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 0, 490,
	0, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1320, 0, 272, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 1319, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 277, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 1315, 0, 272,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 305,
	654, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 0, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 1314, 666, 667, 480, 0, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 0, 0, 405, 668, 669, 0, 670, 0,
	407, 408, 0, 671, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 0, 474, 462, 0, 277,
	0, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 0, 490, 0, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 686, 687, 688, 689, 0, 620, 0, 611,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	698, 0, 272, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 277, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 263, 0, 272, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	651, 652, 653, 0, 304, 305, 654, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	0, 275, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	0, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 663, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 665, 666, 667,
	480, 0, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 276, 402, 403, 404, 406, 0, 0,
	405, 668, 669, 0, 670, 0, 407, 408, 0, 671,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 672, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 0, 474, 462, 0, 277, 0, 476, 477, 478,
	0, 673, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	0, 490, 0, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 272, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 275, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 276, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 277, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 272, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 720, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 721, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 0, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 722,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 272, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 0, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	0, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 2383, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 275, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 0, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	665, 666, 667, 480, 0, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 276, 402, 403, 404,
	406, 0, 0, 405, 668, 669, 0, 670, 0, 407,
	408, 0, 671, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 0, 474, 462, 0, 277, 0,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 0, 490, 0, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 272,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 305,
	654, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 2381, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 275, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 0, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 665, 666, 667, 480, 0, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 276, 402, 403,
	404, 406, 0, 0, 405, 668, 669, 0, 670, 0,
	407, 408, 0, 671, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 0, 474, 462, 0, 277,
	0, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 0, 490, 0, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 686, 687, 688, 689, 0, 620, 0, 611,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	272, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 0,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 2379, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 275, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 276, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	277, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 272, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 275, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 2295, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 276,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 277, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 272, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 275, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 2088, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	276, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 277, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 272, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	653, 0, 304, 305, 654, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 275,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 0, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 2082, 666, 667, 480, 0,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 276, 402, 403, 404, 406, 0, 0, 405, 668,
	669, 0, 670, 0, 407, 408, 0, 671, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 0,
	474, 462, 0, 277, 0, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 0, 490,
	0, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 905, 0, 272, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 0, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 0, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 904, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 0, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 903, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 272, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 3124, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 0, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 4284, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1367, 0,
	272, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 1370,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 1368, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 0, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 0, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 788,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	0, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 787, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 786, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 1371, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 784, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1367, 0, 272, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	287, 288, 1370, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	1368, 0, 304, 305, 654, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 0, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 665, 666, 667, 480, 0,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 0, 402, 403, 404, 406, 0, 0, 405, 668,
	669, 0, 670, 0, 407, 408, 0, 671, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 788, 0, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 0,
	474, 462, 0, 0, 0, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 0, 490,
	0, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 787, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	786, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	1371, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 784, 687, 688, 689,
	0, 620, 0, 611, 1369, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 707, 0, 272, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	706, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 0, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 0, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 0, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 705, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 272, 3111, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 0, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 272, 4294,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 0, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	0, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 0, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 0, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	665, 666, 667, 480, 0, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 0, 402, 403, 404,
	406, 0, 0, 405, 668, 669, 0, 670, 0, 407,
	408, 0, 671, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 0, 474, 462, 0, 0, 0,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 0, 490, 0, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 272,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 305,
	654, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 0, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 665, 666, 667, 480, 0, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 0, 402, 403,
	404, 406, 0, 0, 405, 668, 669, 0, 670, 0,
	407, 408, 0, 671, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 0, 474, 462, 0, 0,
	0, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 0, 490, 0, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 4576, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 686, 687, 688, 689, 0, 620, 0, 611,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	272, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 0,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 0, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 665, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 0, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	0, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 4180, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 272, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 3942, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 0,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 0, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 272, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 2778, 0, 0, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 0, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	0, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 0, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 272, 3111, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	653, 0, 304, 305, 654, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 0, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 665, 666, 667, 480, 0,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 0, 402, 403, 404, 406, 0, 0, 405, 668,
	669, 0, 670, 0, 407, 408, 0, 671, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 0,
	474, 462, 0, 0, 0, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 3108, 0, 0, 488, 489, 675, 0, 490,
	0, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 272, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	0, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 0, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 0, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 2207, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 787, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 786, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 784, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 272, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 2353,
	285, 286, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	651, 652, 653, 0, 304, 305, 654, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	0, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 663, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 665, 666, 667,
	480, 0, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 0, 402, 403, 404, 406, 0, 0,
	405, 668, 669, 0, 670, 0, 407, 408, 0, 671,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 672, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 0, 474, 462, 0, 0, 0, 476, 477, 478,
	0, 673, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	0, 490, 0, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 2341, 0, 272, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 0, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	0, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 0, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 0, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	665, 666, 667, 480, 0, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 0, 402, 403, 404,
	406, 0, 0, 405, 668, 669, 0, 670, 0, 407,
	408, 0, 671, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 0, 474, 462, 0, 0, 0,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 0, 490, 0, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 2102,
	0, 272, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 0,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 0, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 2069, 0, 272, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	0, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 0, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 0, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 778, 0, 272, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 774, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 665,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 779, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 788, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 0, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 787,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 786, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 1636, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	784, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1609, 0,
	272, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 0,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 0, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 1608, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 0, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	0, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1593, 0, 272, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	653, 0, 304, 305, 654, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 0, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 1591, 666, 667, 480, 0,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 0, 402, 403, 404, 406, 0, 0, 405, 668,
	669, 0, 670, 0, 407, 408, 0, 671, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 0,
	474, 462, 0, 0, 0, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 0, 490,
	0, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1586, 0, 272, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 0, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 0, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 0, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 1563, 0, 272,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 305,
	654, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 0, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 1561, 666, 667, 480, 0, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 0, 402, 403,
	404, 406, 0, 0, 405, 668, 669, 0, 670, 0,
	407, 408, 0, 671, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 0, 474, 462, 0, 0,
	0, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 0, 490, 0, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 686, 687, 688, 689, 0, 620, 0, 611,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1520, 0, 272, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 0, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	0, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 0, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1503, 0, 272, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	651, 652, 653, 0, 304, 305, 654, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	0, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 663, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 665, 666, 667,
	480, 0, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 0, 402, 403, 404, 406, 0, 0,
	405, 668, 669, 0, 670, 0, 407, 408, 0, 671,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 672, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 0, 474, 462, 0, 0, 0, 476, 477, 478,
	0, 673, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	0, 490, 0, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 1373, 0, 272, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 0, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	0, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 0, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 0, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	665, 666, 667, 480, 0, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 0, 402, 403, 404,
	406, 0, 0, 405, 668, 669, 0, 670, 0, 407,
	408, 0, 671, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 0, 474, 462, 0, 0, 0,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 0, 490, 0, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	787, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 786, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 784, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1338,
	0, 272, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 1337, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 0,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 0, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1329, 0, 272, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	0, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 1328, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 0, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 0, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 272, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 1282,
	285, 286, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	651, 652, 653, 0, 304, 305, 654, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	0, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 663, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 665, 666, 667,
	480, 0, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 0, 402, 403, 404, 406, 0, 0,
	405, 668, 669, 0, 670, 0, 407, 408, 0, 671,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 672, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 0, 474, 462, 0, 0, 0, 476, 477, 478,
	0, 673, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	0, 490, 0, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 272, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	793, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 0, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 0, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 0, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 778, 0, 272,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 774,
	654, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 773,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 0, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 665, 666, 667, 480, 0, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 0, 402, 403,
	404, 406, 0, 0, 405, 668, 669, 0, 670, 0,
	407, 408, 0, 671, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 779, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 788, 0,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 0, 474, 462, 0, 0,
	0, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 0, 490, 0, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 787, 546, 547, 548, 549, 775, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 786, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 776, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 784, 687, 688, 689, 0, 620, 0, 611,
	780, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	767, 0, 272, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 0, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	0, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 0, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 768, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 730, 0, 272, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	651, 652, 653, 0, 304, 305, 654, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	0, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 663, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 665, 666, 667,
	480, 0, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 0, 402, 403, 404, 406, 0, 0,
	405, 668, 669, 0, 670, 0, 407, 408, 0, 671,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 672, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 0, 474, 462, 0, 0, 0, 476, 477, 478,
	0, 673, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	0, 490, 0, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 724, 0, 272, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 0, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	0, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 0, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 0, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	665, 666, 667, 480, 0, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 0, 402, 403, 404,
	406, 0, 0, 405, 668, 669, 0, 670, 0, 407,
	408, 0, 671, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 0, 474, 462, 0, 0, 0,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 0, 490, 0, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 702,
	0, 272, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 665, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 0,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 0, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 272, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 0, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	0, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 0, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 272, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	653, 0, 304, 305, 654, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 0, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 3639, 666, 667, 480, 0,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 0, 402, 403, 404, 406, 0, 0, 405, 668,
	669, 0, 670, 0, 407, 408, 0, 671, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 0,
	474, 462, 0, 0, 0, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 0, 490,
	0, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 272, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	0, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 665, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 0, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 0, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 787, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 786, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 784, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 272, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	651, 652, 653, 0, 304, 305, 654, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	0, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 663, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 3565, 666, 667,
	480, 0, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 0, 402, 403, 404, 406, 0, 0,
	405, 668, 669, 0, 670, 0, 407, 408, 0, 671,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 672, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 0, 474, 462, 0, 0, 0, 476, 477, 478,
	0, 673, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	0, 490, 0, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 272, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 0, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 389, 0, 390, 391, 392, 393, 394, 3543, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 0, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 0, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 272, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 278, 280, 279, 281, 282, 283,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 287, 288, 0, 289, 290, 291,
	292, 293, 294, 646, 647, 0, 295, 648, 296, 649,
	0, 650, 297, 298, 299, 300, 301, 302, 0, 0,
	0, 303, 651, 652, 653, 0, 304, 305, 654, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 314, 315, 316, 313, 317, 0, 318, 0, 319,
	320, 321, 322, 323, 324, 0, 325, 326, 327, 0,
	328, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 333, 334, 335, 0, 336, 338, 655, 656,
	0, 341, 337, 339, 0, 342, 340, 343, 0, 344,
	345, 346, 0, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 657, 358,
	359, 360, 362, 364, 361, 365, 366, 367, 368, 658,
	659, 369, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 660, 0, 0, 0, 373, 0, 374, 375,
	0, 0, 0, 376, 377, 378, 661, 662, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 0, 388, 663,
	0, 664, 389, 0, 390, 391, 392, 393, 394, 3540,
	666, 667, 480, 0, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 0, 0, 0, 402, 403, 404, 406,
	0, 0, 405, 668, 669, 0, 670, 0, 407, 408,
	0, 671, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 672, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 468, 470, 471, 466, 467, 469, 472, 473, 463,
	464, 475, 465, 0, 474, 462, 0, 0, 0, 476,
	477, 478, 0, 673, 479, 674, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 675, 0, 490, 0, 676, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 677, 504, 505, 506, 678, 507, 508, 509, 679,
	510, 680, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 681, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 682, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 683, 0, 583, 0, 584, 585, 586, 587, 589,
	557, 590, 595, 596, 684, 591, 592, 593, 594, 685,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 363, 609, 0, 610,
	686, 687, 688, 689, 0, 620, 0, 611, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 612, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 272, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 279, 281, 282,
	283, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 287, 288, 0, 289, 290,
	291, 292, 293, 294, 646, 647, 0, 295, 648, 296,
	649, 0, 650, 297, 298, 299, 300, 301, 302, 0,
	0, 0, 303, 651, 652, 653, 0, 304, 305, 654,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 312,
	0, 0, 314, 315, 316, 313, 317, 0, 318, 0,
	319, 320, 321, 322, 323, 324, 0, 325, 326, 327,
	0, 328, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 333, 334, 335, 0, 336, 338, 655,
	656, 0, 341, 337, 339, 0, 342, 340, 343, 0,
	344, 345, 346, 0, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 657,
	358, 359, 360, 362, 364, 361, 365, 366, 367, 368,
	658, 659, 369, 0, 0, 0, 0, 0, 0, 0,
	370, 371, 372, 660, 0, 0, 0, 373, 0, 374,
	375, 0, 0, 0, 376, 377, 378, 661, 662, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 388,
	663, 0, 664, 389, 0, 390, 391, 392, 393, 394,
	3492, 666, 667, 480, 0, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 0, 0, 0, 402, 403, 404,
	406, 0, 0, 405, 668, 669, 0, 670, 0, 407,
	408, 0, 671, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 672, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 468, 470, 471, 466, 467, 469, 472, 473,
	463, 464, 475, 465, 0, 474, 462, 0, 0, 0,
	476, 477, 478, 0, 673, 479, 674, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 675, 0, 490, 0, 676, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 677, 504, 505, 506, 678, 507, 508, 509,
	679, 510, 680, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 681, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 682, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 683, 0, 583, 0, 584, 585, 586, 587,
	589, 557, 590, 595, 596, 684, 591, 592, 593, 594,
	685, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 363, 609, 0,
	610, 686, 687, 688, 689, 0, 620, 0, 611, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 612,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 272,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 278, 280, 279, 281,
	282, 283, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 287, 288, 0, 289,
	290, 291, 292, 293, 294, 646, 647, 0, 295, 648,
	296, 649, 0, 650, 297, 298, 299, 300, 301, 302,
	0, 0, 0, 303, 651, 652, 653, 0, 304, 305,
	654, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 314, 315, 316, 313, 317, 0, 318,
	0, 319, 320, 321, 322, 323, 324, 0, 325, 326,
	327, 0, 328, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 333, 334, 335, 0, 336, 338,
	655, 656, 0, 341, 337, 339, 0, 342, 340, 343,
	0, 344, 345, 346, 0, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	657, 358, 359, 360, 362, 364, 361, 365, 366, 367,
	368, 658, 659, 369, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 372, 660, 0, 0, 0, 373, 0,
	374, 375, 0, 0, 0, 376, 377, 378, 661, 662,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 0,
	388, 663, 0, 664, 389, 0, 390, 391, 392, 393,
	394, 3490, 666, 667, 480, 0, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 0, 0, 0, 402, 403,
	404, 406, 0, 0, 405, 668, 669, 0, 670, 0,
	407, 408, 0, 671, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 672, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 468, 470, 471, 466, 467, 469, 472,
	473, 463, 464, 475, 465, 0, 474, 462, 0, 0,
	0, 476, 477, 478, 0, 673, 479, 674, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 675, 0, 490, 0, 676, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 677, 504, 505, 506, 678, 507, 508,
	509, 679, 510, 680, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 681, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 682, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 683, 0, 583, 0, 584, 585, 586,
	587, 589, 557, 590, 595, 596, 684, 591, 592, 593,
	594, 685, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 363, 609,
	0, 610, 686, 687, 688, 689, 0, 620, 0, 611,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	612, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	272, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 278, 280, 279,
	281, 282, 283, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 287, 288, 0,
	289, 290, 291, 292, 293, 294, 646, 647, 0, 295,
	648, 296, 649, 0, 650, 297, 298, 299, 300, 301,
	302, 0, 0, 0, 303, 651, 652, 653, 0, 304,
	305, 654, 0, 0, 0, 306, 307, 308, 309, 310,
	311, 312, 0, 0, 314, 315, 316, 313, 317, 0,
	318, 0, 319, 320, 321, 322, 323, 324, 0, 325,
	326, 327, 0, 328, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 333, 334, 335, 0, 336,
	338, 655, 656, 0, 341, 337, 339, 0, 342, 340,
	343, 0, 344, 345, 346, 0, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 657, 358, 359, 360, 362, 364, 361, 365, 366,
	367, 368, 658, 659, 369, 0, 0, 0, 0, 0,
	0, 0, 370, 371, 372, 660, 0, 0, 0, 373,
	0, 374, 375, 0, 0, 0, 376, 377, 378, 661,
	662, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	0, 388, 663, 0, 664, 389, 0, 390, 391, 392,
	393, 394, 3475, 666, 667, 480, 0, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 0, 0, 0, 402,
	403, 404, 406, 0, 0, 405, 668, 669, 0, 670,
	0, 407, 408, 0, 671, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 672, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 468, 470, 471, 466, 467, 469,
	472, 473, 463, 464, 475, 465, 0, 474, 462, 0,
	0, 0, 476, 477, 478, 0, 673, 479, 674, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 675, 0, 490, 0, 676, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 677, 504, 505, 506, 678, 507,
	508, 509, 679, 510, 680, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 681, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 682, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 683, 0, 583, 0, 584, 585,
	586, 587, 589, 557, 590, 595, 596, 684, 591, 592,
	593, 594, 685, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 363,
	609, 0, 610, 686, 687, 688, 689, 0, 620, 0,
	611, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 612, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 272, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 278, 280,
	279, 281, 282, 283, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 287, 288,
	0, 289, 290, 291, 292, 293, 294, 646, 647, 0,
	295, 648, 296, 649, 0, 650, 297, 298, 299, 300,
	301, 302, 0, 0, 0, 303, 651, 652, 653, 0,
	304, 305, 654, 0, 0, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 314, 315, 316, 313, 317,
	0, 318, 0, 319, 320, 321, 322, 323, 324, 0,
	325, 326, 327, 0, 328, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 333, 334, 335, 0,
	336, 338, 655, 656, 0, 341, 337, 339, 0, 342,
	340, 343, 0, 344, 345, 346, 0, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 657, 358, 359, 360, 362, 364, 361, 365,
	366, 367, 368, 658, 659, 369, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 660, 0, 0, 0,
	373, 0, 374, 375, 0, 0, 0, 376, 377, 378,
	661, 662, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 0, 388, 663, 0, 664, 389, 0, 390, 391,
	392, 393, 394, 3079, 666, 667, 480, 0, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 0, 0, 0,
	402, 403, 404, 406, 0, 0, 405, 668, 669, 0,
	670, 0, 407, 408, 0, 671, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 672, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 468, 470, 471, 466, 467,
	469, 472, 473, 463, 464, 475, 465, 0, 474, 462,
	0, 0, 0, 476, 477, 478, 0, 673, 479, 674,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 675, 0, 490, 0, 676,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 677, 504, 505, 506, 678,
	507, 508, 509, 679, 510, 680, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 681,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 682, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 683, 0, 583, 0, 584,
	585, 586, 587, 589, 557, 590, 595, 596, 684, 591,
	592, 593, 594, 685, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	363, 609, 0, 610, 686, 687, 688, 689, 0, 620,
	0, 611, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 612, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 272, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 278,
	280, 279, 281, 282, 283, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 287,
	288, 0, 289, 290, 291, 292, 293, 294, 646, 647,
	0, 295, 648, 296, 649, 0, 650, 297, 298, 299,
	300, 301, 302, 0, 0, 0, 303, 651, 652, 653,
	0, 304, 305, 654, 0, 0, 0, 306, 307, 308,
	309, 310, 311, 312, 0, 0, 314, 315, 316, 313,
	317, 0, 318, 0, 319, 320, 321, 322, 323, 324,
	0, 325, 326, 327, 0, 328, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 333, 334, 335,
	0, 336, 338, 655, 656, 0, 341, 337, 339, 0,
	342, 340, 343, 0, 344, 345, 346, 0, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 657, 358, 359, 360, 362, 364, 361,
	365, 366, 367, 368, 658, 659, 369, 0, 0, 0,
	0, 0, 0, 0, 370, 371, 372, 660, 0, 0,
	0, 373, 0, 374, 375, 0, 0, 0, 376, 377,
	378, 661, 662, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 0, 388, 663, 0, 664, 389, 0, 390,
	391, 392, 393, 394, 665, 666, 667, 480, 0, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 0, 0,
	0, 402, 403, 404, 406, 0, 0, 405, 668, 669,
	0, 670, 0, 407, 408, 0, 671, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 672, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 468, 470, 471, 466,
	467, 469, 472, 473, 463, 464, 475, 465, 0, 474,
	462, 0, 0, 0, 476, 477, 478, 0, 673, 479,
	674, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 675, 0, 490, 0,
	676, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 677, 504, 505, 506,
	678, 507, 508, 509, 679, 510, 680, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	681, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 682,
	550, 0, 551, 552, 768, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 683, 0, 583, 0,
	584, 585, 586, 587, 589, 557, 590, 595, 596, 684,
	591, 592, 593, 594, 685, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 363, 609, 0, 610, 686, 687, 688, 689, 0,
	620, 0, 611, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 612, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 272, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	278, 280, 279, 281, 282, 283, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 645, 0, 2313, 0, 0,
	287, 288, 0, 289, 290, 291, 292, 293, 294, 646,
	647, 0, 295, 648, 296, 649, 0, 650, 297, 298,
	299, 300, 301, 302, 0, 0, 0, 303, 651, 652,
	653, 0, 304, 305, 654, 0, 0, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 314, 315, 316,
	313, 317, 0, 318, 0, 319, 320, 321, 322, 323,
	324, 0, 325, 326, 327, 0, 328, 329, 330, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 336, 338, 655, 656, 0, 341, 337, 339,
	0, 342, 340, 343, 0, 344, 345, 346, 0, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 657, 358, 359, 360, 362, 364,
	361, 365, 366, 367, 368, 658, 659, 369, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 372, 660, 0,
	0, 0, 373, 0, 374, 375, 0, 0, 0, 376,
	377, 378, 661, 662, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 388, 663, 0, 664, 389, 0,
	390, 391, 392, 393, 394, 665, 666, 667, 480, 0,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 0,
	0, 0, 402, 403, 404, 406, 0, 0, 405, 668,
	669, 0, 670, 0, 407, 408, 0, 671, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 672,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 468, 470, 471,
	466, 467, 469, 472, 473, 463, 464, 475, 465, 0,
	474, 462, 0, 0, 0, 476, 477, 478, 0, 673,
	479, 674, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 675, 0, 490,
	0, 676, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 677, 504, 505,
	506, 678, 507, 508, 509, 679, 510, 680, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 681, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	682, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 0, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 683, 0, 583,
	0, 584, 585, 586, 587, 589, 557, 590, 595, 596,
	684, 591, 592, 593, 594, 685, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 363, 609, 0, 610, 686, 687, 688, 689,
	0, 620, 0, 611, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 612, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 272, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 278, 280, 279, 281, 282, 283, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 287, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 647, 0, 295, 648, 296, 649, 0, 650, 297,
	298, 299, 300, 301, 302, 0, 0, 0, 303, 651,
	652, 653, 0, 304, 305, 654, 0, 0, 0, 306,
	307, 308, 309, 310, 311, 312, 0, 0, 314, 315,
	316, 313, 317, 0, 318, 0, 319, 320, 321, 322,
	323, 324, 0, 325, 326, 327, 0, 328, 329, 330,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 333,
	334, 335, 0, 336, 338, 655, 656, 0, 341, 337,
	339, 0, 342, 340, 343, 0, 344, 345, 346, 0,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 657, 358, 359, 360, 362,
	364, 361, 365, 366, 367, 368, 658, 659, 369, 0,
	0, 0, 0, 0, 0, 0, 370, 371, 372, 660,
	0, 0, 0, 373, 0, 374, 375, 0, 0, 0,
	376, 377, 378, 661, 662, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 0, 388, 663, 0, 664, 389,
	0, 390, 391, 392, 393, 394, 1300, 666, 667, 480,
	0, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	0, 0, 0, 402, 403, 404, 406, 0, 0, 405,
	668, 669, 0, 670, 0, 407, 408, 0, 671, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	672, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 468, 470,
	471, 466, 467, 469, 472, 473, 463, 464, 475, 465,
	0, 474, 462, 0, 0, 0, 476, 477, 478, 0,
	673, 479, 674, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 675, 0,
	490, 0, 676, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 677, 504,
	505, 506, 678, 507, 508, 509, 679, 510, 680, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 681, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 682, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 683, 0,
	583, 0, 584, 585, 586, 587, 589, 557, 590, 595,
	596, 684, 591, 592, 593, 594, 685, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 363, 609, 0, 610, 686, 687, 688,
	689, 0, 620, 0, 611, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 612, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 272, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 278, 280, 279, 281, 282, 283, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 287, 288, 0, 289, 290, 291, 292, 293,
	294, 646, 647, 0, 295, 648, 296, 649, 0, 650,
	297, 298, 299, 300, 301, 302, 0, 0, 0, 303,
	651, 652, 653, 0, 304, 305, 654, 0, 0, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 314,
	315, 316, 313, 317, 0, 318, 0, 319, 320, 321,
	322, 323, 324, 0, 325, 326, 327, 0, 328, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	333, 334, 335, 0, 336, 338, 655, 656, 0, 341,
	337, 339, 0, 342, 340, 343, 0, 344, 345, 346,
	0, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 657, 358, 359, 360,
	362, 364, 361, 365, 366, 367, 368, 658, 659, 369,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 372,
	660, 0, 0, 0, 373, 0, 374, 375, 0, 0,
	0, 376, 377, 378, 661, 662, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 0, 388, 663, 0, 664,
	389, 0, 390, 391, 392, 393, 394, 665, 666, 667,
	480, 0, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 0, 0, 0, 402, 403, 404, 406, 0, 0,
	405, 668, 669, 0, 670, 0, 407, 408, 0, 671,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 672, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 468,
	470, 471, 466, 467, 469, 472, 473, 463, 464, 475,
	465, 0, 474, 462, 0, 0, 0, 476, 477, 478,
	0, 673, 479, 674, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 675,
	0, 490, 0, 676, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 677,
	504, 505, 506, 678, 507, 508, 509, 679, 510, 680,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 681, 522, 523, 1232, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 682, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 683,
	0, 583, 0, 584, 585, 586, 587, 589, 557, 590,
	595, 596, 684, 591, 592, 593, 594, 685, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 363, 609, 0, 610, 686, 687,
	688, 689, 0, 620, 0, 611, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 612, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 272, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 278, 280, 279, 281, 282, 283, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 287, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 647, 0, 295, 648, 296, 649, 0,
	650, 297, 298, 299, 300, 301, 302, 0, 0, 0,
	303, 651, 652, 653, 0, 304, 305, 654, 0, 0,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	314, 315, 316, 313, 317, 0, 318, 0, 319, 320,
	321, 322, 323, 324, 0, 325, 326, 327, 0, 328,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 333, 334, 335, 0, 336, 338, 655, 656, 0,
	341, 337, 339, 0, 342, 340, 343, 0, 344, 345,
	346, 0, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 657, 358, 359,
	360, 362, 364, 361, 365, 366, 367, 368, 658, 659,
	369, 0, 0, 0, 0, 0, 0, 0, 370, 371,
	372, 660, 0, 0, 0, 373, 0, 374, 375, 0,
	0, 0, 376, 377, 378, 661, 662, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 0, 388, 663, 0,
	664, 0, 0, 390, 391, 392, 393, 394, 665, 666,
	667, 480, 0, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 0, 0, 0, 402, 403, 404, 406, 0,
	0, 405, 668, 669, 0, 670, 0, 407, 408, 0,
	671, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 672, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	468, 470, 471, 466, 467, 469, 472, 473, 463, 464,
	475, 465, 0, 474, 462, 0, 0, 0, 476, 477,
	478, 0, 673, 479, 674, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	675, 0, 490, 0, 676, 491, 492, 484, 493, 494,
	0, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	677, 504, 505, 506, 678, 507, 508, 509, 679, 510,
	680, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 0, 520, 521, 681, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 682, 0, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	683, 0, 583, 0, 584, 585, 586, 587, 589, 557,
	590, 595, 596, 684, 591, 592, 593, 594, 685, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 363, 609, 0, 610, 686,
	687, 688, 689, 0, 620, 0, 611, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 612, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1807, 1808, 0,
	1840, 1841, 1842, 1851, 1852, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1838, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	1807, 1808, 1809, 1840, 1841, 1842, 1851, 1852, 1853, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1844, 1838, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 1833,
	1834, 1835, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 1837, 1839, 0, 0,
	0, 1832, 1833, 1834, 1835, 0, 0, 0, 0, 0,
	0, 1815, 0, 1854, 0, 1855, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 1858, 0, 0, 1830, 0, 0, 0, 1837,
	1839, 0, 0, 0, 0, 0, 0, 1807, 1808, 0,
	1840, 1841, 1842, 1851, 1852, 1853, 1854, 0, 1855, 0,
	0, 0, 0, 0, 0, 1824, 1825, 0, 0, 1844,
	1838, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 1856, 0, 1846, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	1845, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 1860, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 1833,
	1834, 1835, 0, 0, 0, 0, 1849, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 1831, 0, 0, 0, 1848, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 1837, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 1854, 0, 1855, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820,
	1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 0, 0,
	0, 0, 4686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 1821, 1822, 1828, 1850, 1827,
	1823, 1860, 1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816,
	1817, 0, 0, 0, 0, 4601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	1808, 0, 1840, 1841, 1842, 1851, 1852, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 1838, 0, 0, 0, 1836, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 1807, 1808, 1809, 1840, 1841, 1842, 1851, 1852,
	1853, 0, 0, 0, 1829, 0, 1849, 0, 0, 0,
	0, 0, 0, 1826, 1844, 1838, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 1833, 1834, 1835, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820,
	1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 1848, 0,
	0, 1858, 4560, 0, 0, 0, 0, 0, 1837, 1839,
	0, 0, 0, 1832, 1833, 1834, 1835, 0, 0, 0,
	0, 0, 0, 1815, 0, 1854, 0, 1855, 0, 0,
	0, 0, 0, 0, 1824, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 1858, 0, 0, 1830, 0, 0,
	0, 1837, 1839, 0, 0, 0, 0, 0, 0, 1807,
	1808, 0, 1840, 1841, 1842, 1851, 1852, 1853, 1854, 0,
	1855, 0, 0, 0, 0, 0, 0, 1824, 1825, 0,
	0, 1844, 1838, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 1856, 0, 1846, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 1845, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 1860, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 1833, 1834, 1835, 0, 0, 0, 0, 1849, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 1831, 0, 0, 0, 1848, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 1837, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 1854, 0, 1855, 0, 0,
	0, 0, 0, 0, 1824, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 1821, 1822, 1828, 1850, 1827, 1823,
	0, 1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817,
	0, 0, 0, 0, 4559, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 1821, 1822, 1828,
	1850, 1827, 1823, 1860, 1820, 1818, 1819, 1811, 1812, 1813,
	1814, 1816, 1817, 0, 0, 0, 0, 4370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1808, 0, 1840, 1841, 1842, 1851, 1852, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 1838, 0, 0, 0, 1836, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 1807, 1808, 1809, 1840, 1841, 1842,
	1851, 1852, 1853, 0, 0, 0, 1829, 0, 1849, 0,
	0, 0, 0, 0, 0, 1826, 1844, 1838, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 1822, 1828, 1850, 1827, 1823,
	0, 1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817,
	1848, 0, 0, 1858, 4203, 0, 0, 0, 0, 0,
	1837, 1839, 0, 0, 0, 1832, 1833, 1834, 1835, 0,
	0, 0, 0, 0, 0, 1815, 0, 1854, 0, 1855,
	0, 0, 0, 0, 0, 0, 1824, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 1858, 0, 0, 1830,
	0, 0, 0, 1837, 1839, 0, 0, 0, 0, 0,
	0, 1807, 1808, 0, 1840, 1841, 1842, 1851, 1852, 1853,
	1854, 0, 1855, 0, 0, 0, 0, 0, 0, 1824,
	1825, 0, 0, 1844, 1838, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 1856, 0, 1846, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 1845, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 1860, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 1833, 1834, 1835, 0, 0, 0, 0,
	1849, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 1831, 0, 0, 0,
	1848, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	1837, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 1854, 0, 1855,
	0, 0, 0, 0, 0, 0, 1824, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 1821, 1822, 1828, 1850,
	1827, 1823, 0, 1820, 1818, 1819, 1811, 1812, 1813, 1814,
	1816, 1817, 0, 0, 0, 0, 4133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 1821,
	1822, 1828, 1850, 1827, 1823, 1860, 1820, 1818, 1819, 1811,
	1812, 1813, 1814, 1816, 1817, 0, 0, 0, 0, 4132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 1808, 0, 1840, 1841, 1842, 1851,
	1852, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 1838, 0, 0, 0,
	1836, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 1807, 1808, 1809, 1840,
	1841, 1842, 1851, 1852, 1853, 0, 0, 0, 1829, 0,
	1849, 0, 0, 0, 0, 0, 0, 1826, 1844, 1838,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 1833, 1834, 1835, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 1822, 1828, 1850,
	1827, 1823, 0, 1820, 1818, 1819, 1811, 1812, 1813, 1814,
	1816, 1817, 1848, 0, 0, 1858, 4131, 0, 0, 0,
	0, 0, 1837, 1839, 0, 0, 0, 1832, 1833, 1834,
	1835, 0, 0, 0, 0, 0, 0, 1815, 0, 1854,
	0, 1855, 0, 0, 0, 0, 0, 0, 1824, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 1858, 0,
	0, 1830, 0, 0, 0, 1837, 1839, 0, 0, 0,
	0, 0, 0, 1807, 1808, 0, 1840, 1841, 1842, 1851,
	1852, 1853, 1854, 0, 1855, 0, 0, 0, 0, 0,
	0, 1824, 1825, 0, 0, 1844, 1838, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 1856, 0, 1846,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 1845, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 1860, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 1833, 1834, 1835, 0, 0,
	0, 0, 1849, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 1831, 0,
	0, 0, 1848, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 1837, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 1854,
	0, 1855, 0, 0, 0, 0, 0, 0, 1824, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 1821, 1822,
	1828, 1850, 1827, 1823, 0, 1820, 1818, 1819, 1811, 1812,
	1813, 1814, 1816, 1817, 0, 0, 0, 0, 3787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 1821, 1822, 1828, 1850, 1827, 1823, 1860, 1820, 1818,
	1819, 1811, 1812, 1813, 1814, 1816, 1817, 0, 0, 0,
	0, 3288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1808, 0, 1840, 1841,
	1842, 1851, 1852, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 1838, 0,
	0, 0, 1836, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 1807, 1808,
	1809, 1840, 1841, 1842, 1851, 1852, 1853, 0, 0, 0,
	1829, 0, 1849, 0, 0, 0, 0, 0, 0, 1826,
	1844, 1838, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 1833, 1834, 1835,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 1822,
	1828, 1850, 1827, 1823, 0, 1820, 1818, 1819, 1811, 1812,
	1813, 1814, 1816, 1817, 1848, 0, 0, 1858, 3287, 0,
	0, 0, 0, 0, 1837, 1839, 0, 0, 0, 1832,
	1833, 1834, 1835, 0, 0, 0, 0, 0, 0, 1815,
	0, 1854, 0, 1855, 0, 0, 0, 0, 0, 0,
	1824, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	1858, 0, 0, 1830, 0, 0, 0, 1837, 1839, 0,
	0, 0, 0, 0, 0, 1807, 1808, 0, 1840, 1841,
	1842, 1851, 1852, 1853, 1854, 0, 1855, 0, 0, 0,
	0, 0, 0, 1824, 1825, 0, 0, 1844, 1838, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 1856,
	0, 1846, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1845, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 1860,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 1833, 1834, 1835,
	0, 0, 0, 0, 1849, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	1831, 0, 0, 0, 1848, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 1837, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 1854, 0, 1855, 0, 0, 0, 0, 0, 0,
	1824, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	1821, 1822, 1828, 1850, 1827, 1823, 0, 1820, 1818, 1819,
	1811, 1812, 1813, 1814, 1816, 1817, 0, 0, 0, 0,
	3286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 1821, 1822, 1828, 1850, 1827, 1823, 1860,
	1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 0,
	0, 0, 0, 3285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 1808, 0,
	1840, 1841, 1842, 1851, 1852, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1838, 0, 0, 0, 1836, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 1849, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 1833,
	1834, 1835, 0, 0, 0, 0, 0, 0, 1815, 4839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 1822, 1828, 1850, 1827, 1823, 0, 1820, 1818, 1819,
	1811, 1812, 1813, 1814, 1816, 1817, 1848, 0, 3250, 1858,
	0, 0, 0, 0, 0, 0, 1837, 1839, 0, 0,
	0, 0, 0, 0, 1807, 1808, 0, 1840, 1841, 1842,
	1851, 1852, 1853, 1854, 0, 1855, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 0, 1844, 1838, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	1846, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 1807, 1808, 1809,
	1840, 1841, 1842, 1851, 1852, 1853, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 1844,
	1838, 0, 0, 0, 0, 3220, 0, 1810, 0, 0,
	0, 1856, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 1860, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 4838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 1833, 1834, 1835, 0,
	0, 0, 0, 0, 0, 1815, 0, 3350, 0, 0,
	0, 3349, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 3221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 1848, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 1837, 1839, 0, 0, 0, 1832, 1833,
	1834, 1835, 0, 0, 0, 0, 1849, 0, 1815, 0,
	1854, 0, 1855, 0, 0, 0, 0, 0, 0, 1824,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 1862, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 1858,
	0, 0, 1830, 0, 0, 0, 1837, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 1855, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 1830, 0, 1845, 0, 0,
	0, 0, 1821, 1822, 1828, 1850, 1827, 1823, 1860, 1820,
	1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 2751, 0, 0, 0, 0, 0, 0,
	1807, 1808, 0, 1840, 1841, 1842, 1851, 1852, 1853, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 1838, 0, 0, 1836, 2750, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1849, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	1822, 1828, 1850, 1827, 1823, 0, 1820, 1818, 1819, 1811,
	1812, 1813, 1814, 1816, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 1833, 1834, 1835, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820,
	1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 0, 1848,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 1837,
	1839, 0, 0, 0, 0, 0, 0, 1807, 1808, 0,
	1840, 1841, 1842, 1851, 1852, 1853, 1854, 0, 1855, 0,
	0, 0, 0, 0, 0, 1824, 1825, 0, 0, 1844,
	1838, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 1846, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	1807, 1808, 1809, 1840, 1841, 1842, 1851, 1852, 1853, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1844, 1838, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 1856, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 1860, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 1833,
	1834, 1835, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 1848, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 1837, 1839, 0, 0,
	0, 1832, 1833, 1834, 1835, 0, 0, 0, 0, 1849,
	0, 1815, 0, 1854, 0, 1855, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 1862, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 1858, 0, 0, 1830, 0, 0, 0, 1837,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 1855, 0,
	0, 0, 0, 0, 0, 1824, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 1830, 0,
	1845, 1084, 0, 0, 0, 1821, 1822, 1828, 1850, 1827,
	1823, 1860, 1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 1808, 0, 1840, 1841, 1842, 1851, 1852,
	1853, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 1844, 1838, 0, 0, 0, 1836,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 1849,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 1807, 1808, 0, 1840, 1841, 1842, 1851, 1852,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 1844, 1838, 0, 0, 0, 3351,
	0, 1847, 1810, 0, 3768, 0, 0, 0, 0, 0,
	0, 1857, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820,
	1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 1832, 1833, 1834, 1835, 1829, 0, 0,
	0, 0, 0, 1815, 0, 0, 1826, 0, 0, 3356,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 1822, 1828, 1850, 1827,
	1823, 0, 1820, 1818, 1819, 1811, 1812, 1813, 1814, 1816,
	1817, 1848, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 1837, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	1855, 0, 0, 0, 0, 0, 0, 1824, 1825, 0,
	0, 0, 0, 1832, 1833, 1834, 1835, 0, 0, 0,
	0, 0, 0, 1815, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 1837, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 0, 1854, 0,
	1855, 0, 0, 0, 0, 0, 0, 1824, 1825, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 1808, 0, 1840, 1841, 1842,
	1851, 1852, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 1838, 0, 0,
	0, 1836, 0, 0, 1810, 0, 1856, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 1845, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 1860, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 1849, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 1833, 1834, 1835, 0,
	0, 1849, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 1822, 1828,
	1850, 1827, 1823, 1862, 1820, 1818, 1819, 1811, 1812, 1813,
	1814, 1816, 1817, 1848, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 1837, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 1855, 0, 0, 0, 0, 0, 0, 1824,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 1821, 1822, 1828,
	1850, 1827, 1823, 0, 1820, 1818, 1819, 1811, 1812, 1813,
	1814, 1816, 1817, 0, 0, 0, 0, 1807, 1808, 0,
	1840, 1841, 1842, 1851, 1852, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 1844,
	1838, 0, 0, 0, 3289, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 3316, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 1832, 1833,
	1834, 1835, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 1837, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 1855, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	1822, 1828, 1850, 1827, 1823, 1830, 1820, 1818, 1819, 1811,
	1812, 1813, 1814, 1816, 1817, 0, 0, 1807, 1808, 0,
	1840, 1841, 1842, 1851, 1852, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1838, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 1856, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 1860, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 1833,
	1834, 1835, 0, 0, 0, 0, 1849, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1808, 0, 1840, 1841, 1842, 1851, 1852, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 1844, 1838, 0, 1848, 0, 0, 1858,
	0, 1810, 0, 0, 0, 0, 1837, 1839, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 1855, 0, 1863, 0, 0,
	0, 0, 1824, 1825, 0, 0, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	1846, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820,
	1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 966,
	1845, 1015, 1832, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 1860, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 989, 0, 972, 971, 0, 0, 0, 0, 0,
	1848, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	1837, 1839, 0, 0, 0, 991, 1836, 0, 0, 0,
	0, 973, 0, 0, 0, 0, 976, 1854, 0, 1855,
	0, 1027, 0, 0, 0, 0, 1824, 1825, 0, 1831,
	986, 987, 0, 0, 0, 0, 0, 0, 0, 1004,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 1016, 978, 1830,
	0, 0, 0, 0, 979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 980, 1862, 0,
	0, 0, 0, 0, 0, 0, 1013, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 982, 0, 0, 0, 0, 0, 0, 0,
	970, 0, 0, 0, 2328, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 983,
	984, 0, 1821, 1822, 1828, 1850, 1827, 1823, 0, 1820,
	1818, 1819, 1811, 1812, 1813, 1814, 1816, 1817, 992, 990,
	1836, 0, 0, 0, 0, 0, 985, 0, 0, 0,
	1001, 0, 0, 1021, 1020, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 1024, 1012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 977, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 975, 0, 0, 0, 1008, 1009, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	1011, 0, 0, 0, 0, 0, 1821, 1822, 1828, 1850,
	1827, 1823, 0, 1820, 1818, 1819, 1811, 1812, 1813, 1814,
	1816, 1817, 0, 1018, 1006, 0, 0, 0, 0, 0,
	0, 0, 1025, 1002, 0, 0, 995, 993, 0, 998,
	0, 0, 0, 0, 0, 999, 0, 0, 968, 0,
	1019, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1010, 0, 1000, 0, 0,
	0, 0, 0, 997, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1023, 0, 0, 0, 0, 0,
	0, 0, 1003, 0, 0, 0, 0, 0, 0, 0,
	0, 981, 1022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1007,
}

var sqlPact = [...]int{
	14357, -1000, -1000, -1000, -1000, 196, -1000, -1000, 195, 193,
	191, 189, 186, 185, 183, 182, 178, 173, 172, -1000,
	-1000, -1000, -1000, -1000, -1000, 168, -1000, -1000, 166, -1000,
	165, 163, 161, -1000, -1000, 159, -1000, 157, -1000, -1000,
	-1000, -1000, 155, 154, 153, 94621, 94058, 95182, 2349, 118227,
	101922, 2114, 83936, 117664, 83373, 117101, 2262, 11327, 116538, 2802,
	150, -1000, 115975, 149, 148, 147, -1000, 115412, -1000, 2169,
	-1000, 146, -1000, 7670, 70360, 142, 141, 140, 2641, 135,
	-1000, 129, 126, -1000, -1000, 125, -1000, 11955, 1665, -1000,
	124, 123, -1000, 5269, 99672, 114, 111, 2608, 110, 108,
	68675, 107, 106, 2327, 2892, -1000, -1000, 2040, -1000, -1000,
	105, 104, 103, 102, 101, 100, 97, 94, 93, 91,
	89, 84, 82, -1000, 81, 78, 75, 73, 72, -1000,
	71, 70, 69, -1000, 68, -1000, 63, 62, 60, 50,
	48, 46, 45, 44, 43, 42, 41, 40, 37, 36,
	133237, -1000, -1000, 35, 1977, 1740, 1733, 1731, 1730, 1725,
	1059, 34, 32, 31, 30, 29, 25, 23, 20, 18,
	17, 16, 15, 14, 13, 12, 11, 6, 2, 131,
	1, 0, -2, -5, -6, -7, -8, 2562, -1000, 1641,
	1121, 1252, 32378, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 126081, 118788, -10, -80, -13, -1000, 3360, 935, 56738,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 305, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 524,
	2282, 811, -1000, -1000, -1000, 114851, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2348, -83, -1000, 2059, -1000, -1000,
	-1000, -1000, -1000, 808, -1000, 2347, 258, 2316, -1000, -1000,
	-1000, 3404, 2500, 3819, 3818, 3814, 3813, 3812, 125520, 1891,
	3811, 2571, 3810, 3807, 3805, 3797, 3796, 3792, 3791, -1000,
	93495, 1093, 92932, 92369, 3418, 114290, 91806, 113727, 77182, 48650,
	993, 3401, -1000, -1000, -1000, -1000, -1000, -1000, 118788, -1000,
	1088, -1000, -1000, 3789, 2080, 805, 101359, -1000, -1000, 113164,
	1963, -1000, -1000, -1000, 1001, 1267, 34109, 34109, 34109, 302,
	-1000, -1000, -1000, -1000, -1000, -1000, 3788, 3787, 3784, 3782,
	3781, -1000, -1000, 82810, 25268, 82247, 81684, 112601, 24695, 91243,
	90680, 3780, 3777, 3776, 112038, 76609, 3542, 3540, 1086, 2056,
	1485, -1000, -1000, -1000, -1000, -1000, -1000, -41, 72614, 3590,
	118788, -1000, 290, -1000, -1000, -1000, -1000, -1000, -1000, 48073,
	782, 47496, 698, 46919, 466, -1000, -1000, -1000, -1000, 76036,
	-1000, 111475, 2497, 3775, 3774, 1192, 3773, 3300, 1871, 3772,
	1843, 1325, 3771, 3769, 3766, 3765, 3764, 3763, 3762, 1487,
	110912, 2984, 1514, 110349, 1688, 75463, 1085, 90117, 95182, 2658,
	109786, 1448, 1445, -1000, -1000, -1000, -1000, 3097, 2883, 2877,
	1401, -1000, -1000, -1000, -1000, 60168, 10186, 6831, -1000, -1000,
	11827, 109223, 63023, 95182, 95182, -1000, -1000, -1000, -1000, -1000,
	46342, 372, 45765, 992, -1000, -1000, 60739, 2927, -1000, -1000,
	-1000, -1000, 45188, 327, 44611, 865, 118788, -1000, 2983, 1970,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4875, 1695,
	3595, 2743, 74890, 2072, 1494, 3365, 3094, 3093, 1594, 2044,
	3076, 3760, 2675, 3073, 3071, 3062, 3057, 3053, 1610, 2603,
	297, 2614, 31801, 2969, 1700, 44034, 1607, 1588, 3051, 3049,
	3608, 2020, 2017, 2076, 81121, 3759, 3758, 3323, 3041, 3032,
	2804, 3028, -1000, 2924, 1486, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1552, -1000, -1000, -1000, -1000, -1000, 85619,
	-1000, -1000, 1826, -1000, -1000, 1826, -1000, -1000, -1000, -1000,
	-1000, 1380, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1641, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4978, -1000, 2064, -1000, -1000,
	2560, 3347, 3347, 3347, 3400, 473, 461, -1000, 131, 925,
	1179, -1000, -1000, 133070, -1000, -1000, 49227, 49227, 49227, 49227,
	49227, 49227, 49227, 49227, 2266, -1000, 797, -1000, -1000, 840,
	-1000, 792, 722, 660, -1000, -1000, -1000, -1000, -1000, -1000,
	790, -1000, -1000, -1000, -1000, -1000, -1000, 3590, -1000, 28206,
	-1000, -1000, -1000, 529, 788, 49227, -1000, -1000, 3623, 3622,
	973, -1000, 284, 1011, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2981, 787, 784, -1000,
	783, 780, 778, 777, 776, -1000, 775, -1000, 774, 772,
	767, 763, 762, 760, 759, 758, -1000, 2165, -1000, -1000,
	-1000, -1000, -1000, -1000, 697, 696, 696, 696, -1000, 1076,
	-1000, -1000, -1000, 331, 692, 287, 689, 688, 687, -1000,
	753, 752, 748, 742, 738, 736, 733, 729, 728, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1073, -1000, -1000, -1000,
	-1000, -42, 118788, -1000, 524, -42, -1000, -1000, 727, -1000,
	36446, 36446, 36446, -1000, -1000, 2345, 49227, -1000, 2556, -1000,
	-35, -35, 971, 58451, -1000, 55568, 971, 316, 846, 64158,
	-1000, 2923, -1000, -1000, 724, 278, -1000, -1000, -1000, -1000,
	25839, 2920, 118788, 118788, 118788, 95182, 95182, 95182, 3757, 3222,
	49227, -1000, -1000, 69797, 118788, 95743, -1000, -1000, 3524, 70921,
	69236, 118788, 2980, 108660, 3754, -1000, -1000, -1000, -1000, -1000,
	3198, 3753, 3752, 3750, -1000, 118788, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 231, 3193, -1000, -1000, 99109, 231, 3191,
	-1000, 231, 3189, -1000, 98548, -1000, -1000, 2237, 3160, -1000,
	-1000, 238, 3159, -1000, -1000, -1000, 233, 3156, -1000, -1000,
	266, -68, 3153, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 133070, -1000, -1000, -1000, 108097,
	-1000, 3329, -1000, 118788, -1000, 49227, -1000, -1000, 3523, 1759,
	78314, 3469, -1000, -1000, -51, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2546, 2526, 1223, 2372, -1000, 3245, 1340, 34109,
	3285, -1000, -1000, -1000, -1000, -1000, 262, 25839, -1000, -1000,
	-1000, -1000, -1000, -1000, 2807, 3151, 1523, -1000, 2369, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2062, 3149, -1000, 1645,
	3147, 2015, -1000, -1000, 2193, -1000, 3317, -1000, -1000, 2049,
	3144, -34, -1000, -1000, 2392, -1000, -1000, -1000, -1000, 2074,
	-1000, 1365, 3143, -1000, 2742, 2742, 89554, 3128, 62452, 60739,
	72614, -45, -1000, -1000, -1000, -1000, -147, -1000, 24117, 133070,
	-1000, -1000, -1000, -1000, 1734, 133070, 927, -1000, -1000, 3139,
	-1000, 133070, 913, -1000, -1000, 3133, -1000, 2979, -1000, -1000,
	2456, 2455, -1000, -1000, 3746, -1000, -1000, 3741, -1000, 3736,
	3733, 3729, -1000, 1787, 2026, 3727, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 88993, 2344, -1000, -1000, 87867, 2978,
	-1000, 2453, 3468, -1000, 88430, 1083, -1000, 1043, 2442, -1000,
	97987, 999, 2439, -1000, 3726, 3413, 2682, 1043, 2438, -1000,
	-1000, -1000, -1000, -1000, 1079, -1000, 66415, -1000, 66415, -1000,
	1609, -1000, 124959, -35, 95182, 3590, -1000, -84, -1000, -1000,
	-1000, 935, -1000, 59594, -1000, 59594, 100796, 77753, 1023, 751,
	68102, 132886, -1000, 1052, -1000, -1000, 133070, -1000, -1000, -1000,
	-187, 2741, -1000, 77753, 61881, 133070, -1000, -1000, -1000, -1000,
	133070, -1000, -1000, -1000, 77753, 87867, -1000, 107534, 87306, -1000,
	-1000, 1476, 2595, -1000, -1000, -1000, 77753, 1372, 77753, 77753,
	77753, -1000, 106971, -1000, -1000, 2083, 1583, 3324, 2065, 95182,
	-1000, 1893, -1000, -1000, -1000, 3352, 3117, 118788, -1000, -1000,
	2973, -1000, 72053, 97426, -1000, 96865, -1000, 96304, -1000, 95182,
	-1000, 95182, -1000, 3719, 3717, 3716, -1000, -1000, 3714, -1000,
	3713, 3341, -1000, 832, 43457, 133070, 3338, -1000, 3712, 2003,
	2969, 133070, -1000, 3025, 1729, 1721, 118788, -1000, -1000, 118788,
	-1000, 118788, -1000, -1000, -1000, 1555, -1000, -1000, 2544, -1000,
	-1000, -1000, -1000, 95182, 95182, 95182, 95182, 1509, -1000, 42880,
	-1000, -1000, 3007, 3711, 1765, -1000, 1849, -1000, 2918, 3369,
	-1000, 1473, 1719, -1000, -1000, 239, -1000, -1000, -51, -1000,
	124398, -1000, 2560, -1000, 118788, -1000, 2572, 2955, 2962, 1801,
	2360, 2640, -1000, 42303, 2619, 52689, 2366, 131, -1000, -1000,
	131, 131, 33532, -1000, -1000, 34109, 925, 70921, 70921, 25839,
	1390, 49227, 49227, 49227, 49227, 49227, 49227, 49227, 49227, 49227,
	49227, 49227, 49227, 49227, 49227, 49227, 49227, 49227, 49227, 49227,
	49227, 49227, 49227, 49227, 49227, 49227, 49227, 49227, 49227, 49227,
	49227, 49227, 49227, 49227, 49227, 49227, 49227, 2088, 49227, 1378,
	49227, 49227, 49227, 49227, 2302, -1000, -1000, 1962, 565, 2036,
	722, -1000, -1000, -1000, 3579, 3579, 3579, 431, 431, 431,
	10778, 10778, 632, 3709, 840, -1000, 49227, -1000, 130, 59013,
	49227, 26412, -1000, 461, 13774, 2591, -1000, 458, 27018, -1000,
	-1000, -1000, 28206, 660, 41697, 49227, 1064, 133070, -1000, -1000,
	1459, 3592, 23539, 2971, 2795, 720, 857, 852, 31195, 30589,
	29983, 29377, 834, 616, 49227, 49227, 49227, 49227, 49227, 49227,
	49227, 49227, -1000, -1000, 3601, -1000, 3592, -1000, -1000, -1000,
	-1000, 3592, 1389, 1385, 3592, -1000, 3592, 3592, 8270, 8270,
	41120, 40543, 39966, 53266, 39389, 49227, 28800, 38812, 38235, -1000,
	118788, -42, 3522, 49227, 251, -1000, 131239, -1000, 251, 251,
	719, -85, 133070, 2615, 2615, 57309, 2318, 2272, 2272, 2272,
	-1000, 971, 18886, 971, 105288, 2283, 971, 971, 240, 281,
	457, 54997, 2556, 105288, 821, 717, -24, -25, -26, -1000,
	-1000, -27, -29, -1000, -1000, 95182, 715, 26412, 25839, 226,
	2010, -90, 2624, 2622, -1000, 2621, 2616, -1000, 2610, -1000,
	1770, -92, 1373, 95182, 118788, 1407, 3706, -91, -1000, 5730,
	-97, -1000, 1168, 224, 3592, -1000, -1000, -1000, -1000, -1000,
	3705, 3703, -1000, 1072, 709, 699, 929, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 697, 696, 696, 696, -1000,
	331, 692, 287, 689, 688, 687, -1000, -1000, -1000, -1000,
	-1000, 2916, 95182, 118788, 1402, 3700, -147, 95743, -93, -1000,
	-1000, 118788, -1000, -1000, -1000, 3699, -1000, 95182, -1000, -1000,
	95182, 231, 3123, -1000, 95182, -1000, 95182, 229, 3122, -1000,
	-1000, 118788, -1000, 95182, 95182, -1000, 118788, 118788, 118788, 77753,
	77753, 227, -1000, 95182, 925, -100, 1196, -51, -1000, -1000,
	-1000, -1000, -1000, 1826, -1000, 1739, -1000, -1000, -1000, -1000,
	-1000, -1000, 1493, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 973, -1000, -1000, -1000, -1000, -1000, -1000, 3587, 3584,
	-50, -1000, -1000, 25839, -1000, -52, 1699, 1852, 1371, -1000,
	80558, 2533, 3332, 3698, 2678, 3311, 1606, -1000, 1537, -1000,
	3420, 85619, 3490, 3496, 1399, -1000, 2912, -1000, -1000, 1000,
	1744, 1714, 1359, 1357, 85619, 1645, -1000, 70921, -1000, 2725,
	3395, 1466, 1461, 1466, 1466, 1458, -1000, 85619, 1704, 1286,
	1283, 1281, -1000, -1000, 1992, 1989, -1000, -1000, 106410, -1000,
	1279, 1278, 119910, 3538, 4978, 2154, 877, 1937, -1000, -58,
	3487, 3494, 1370, -1000, 2906, 1276, -1000, -1000, -1000, 3391,
	95182, 25839, 1629, 1628, 1614, 1698, 1270, -43, -1000, 3476,
	1269, 1268, -1000, 1091, 7816, 3262, -1000, 77753, 1091, 1091,
	1971, 3115, 2708, 1681, -1000, 2736, 937, 2735, -1000, -1000,
	-1000, 937, -45, 72614, 118788, 220, -1000, 130, 49227, 49227,
	130, 49227, 130, 3447, 3114, 3110, -1000, -1000, -1000, -1000,
	-1000, 3695, 2004, 2568, -1000, -1000, 684, 2437, 2902, 118788,
	2630, -46, 95182, -1000, 71492, 3103, 73175, 1645, 2436, -1000,
	-1000, 86743, -1000, 3100, 524, 2431, -1000, 714, 3694, 3096,
	-1000, 123837, -1000, 3329, 1265, 3092, 1142, 718, 3521, -1000,
	718, 66978, -1000, 118788, -1000, -35, 261, 79436, -106, -112,
	456, -1000, 105849, 118788, 1141, 79997, 118788, 3274, 2025, 2008,
	1040, 60739, -1000, 60739, -113, -187, 2732, 1511, 1023, 1023,
	937, -1000, 937, -1000, 95182, 2960, -1000, -1000, 77753, 1023,
	1023, 1023, -1000, -1000, -1000, -1000, 3693, 3691, 3689, 3688,
	-1000, -1000, 1042, 95182, 118788, 95182, -1000, -1000, 1677, -1000,
	219, -1000, 118788, -1000, 118788, 118788, 95182, -1000, 1042, 118788,
	1042, 118788, 1042, 118788, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 130, -1000, -1000, 133070, -1000, 49227, -1000, -1000, 1531,
	3687, 1622, -1000, 2958, -1000, 2956, -1000, 10, -1000, -1000,
	1812, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3682, 133070,
	-1000, 1979, -1000, -1000, -1000, -1000, 95182, 95182, 95182, 95182,
	118788, 3261, -1000, 118788, 3257, 95182, -1000, -1000, 85619, -1000,
	2572, 2955, -1000, -1000, -1000, -1000, -1000, -1000, 1543, 2326,
	-1000, 2592, -1000, 1561, -1000, -1000, -1000, 133070, 53843, -1000,
	-1000, 133070, 1752, -1000, 52112, 51535, -1000, -1000, 1758, 95182,
	2636, -1000, 2636, -115, -1000, 130856, 2590, 95182, -50, 34109,
	-1000, -1000, -1000, -1000, -1000, 997, 1328, 1328, 1350, 1350,
	1350, 1350, 3480, 5531, 5931, 6641, 8092, 8092, 10149, 10149,
	10149, 10149, 10149, 8092, 593, 431, 431, 593, 593, 593,
	593, 593, 431, 431, 431, 8092, 8092, 8092, 431, 10778,
	15520, 9504, 49227, 49227, 1263, 1955, 565, 8893, 49227, 9794,
	9794, 9794, 9794, -1000, 2176, -1000, -1000, -1000, -1000, 2901,
	680, 53266, 53266, -1000, -1000, -1000, -1000, 27612, 49227, -1000,
	-1000, -1000, -1000, 37629, -1000, -1000, 130184, -326, 454, -1000,
	218, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 449, -102, 65, -1000, 49227, 49227,
	49227, 448, -1000, 213, 49227, 118788, -1000, 17895, 820, -114,
	-1000, -118, 1481, -1000, 49227, -1000, -1000, 1262, -1000, 1261,
	1260, 1259, -1000, 677, 447, -1000, 211, -1000, 2268, 675,
	674, 49227, -1000, -1000, -1000, -1000, -1000, 129957, -1000, -1000,
	129894, -1000, -1000, 129512, -1000, -1000, 129285, -1000, -1000, -1000,
	-1000, -1000, 132596, 17506, 17226, 16829, 13045, 16173, 14842, -119,
	443, -121, 442, 991, 989, 441, 440, 439, -124, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -130, 438, -1000, 2899, -102, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 429, -1000, 418, -1000, 132293, -102,
	415, 6869, -1000, 53266, 53266, 53266, 53266, -1000, 413, -1000,
	130793, -1000, 132001, 37052, 37052, 37052, 403, 131911, 49227, -102,
	-132, -1000, -135, -1000, -1000, 539, -137, 1058, 36446, 56153,
	25839, -1000, 1058, 1058, 49227, -1000, 49227, 2600, -1000, -1000,
	-1000, -1000, 2599, 2219, 2615, 57309, -1000, -1000, -1000, -1000,
	105288, -1000, 3590, 2947, -1000, 105288, -1000, -1000, 118788, 524,
	-1000, 105288, 105288, 25839, 971, -1000, 971, 105288, 806, -1000,
	-1000, -1000, -1000, -1000, 393, 65291, 65, 206, 25839, 1043,
	-1000, -1000, 2713, 2713, 2713, 2713, 2713, -1000, -1000, 118788,
	1258, -47, -111, 2723, -1000, 3548, -1000, 2184, -1000, 70921,
	-1000, 838, 1118, 25839, -1000, -1000, -1000, 673, -1000, 3592,
	3592, -1000, 3592, 118788, 2898, 242, 2716, -1000, 225, 73175,
	3681, -1000, -1000, 231, -1000, 95182, 231, 231, -1000, 95182,
	95182, 2237, -1000, 238, -1000, 233, -1000, -1000, -68, -1000,
	1051, 34109, -1000, 1826, -1000, -1000, 1632, -1000, 1981, -1000,
	1374, -1000, -1000, -1000, -1000, 34109, -1000, 2078, 118788, 118788,
	95182, -1000, 118788, -1000, 2100, 73175, -1000, 2430, 123276, 2421,
	70921, 118788, -1000, -1000, 672, 1006, 2588, 2587, 1138, 118788,
	118788, 2586, 122715, 122154, -1000, 3680, 118788, 2192, 49227, 3390,
	2248, 2228, 130, 130, -1000, 130, 130, 130, -1000, 671,
	1376, 95182, 95182, 118788, 73175, 95182, 1969, -1000, -1000, -1000,
	-1000, -1000, 86180, -1000, -1000, 3600, 3599, -1000, 1466, -1000,
	-1000, -1000, 1466, 1645, 1920, 118788, 73175, 95182, 73175, 121593,
	121032, -1000, -1000, 1696, 118788, -1000, -1000, -1000, -1000, -1000,
	1521, -1000, 877, 2218, 130, 130, -1000, 130, 130, 130,
	668, 25839, 1949, -1000, 2964, 118788, 3620, 120471, 3619, 118788,
	118788, 118788, 73175, 3345, 118788, 118788, 73175, -1000, 119910, 7816,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2207, 74317, 1149, 118788, 1365,
	-1000, -1000, 1690, 1257, 1238, 85619, 2147, 1686, 1794, 118788,
	60739, 1038, 60739, 2692, -1000, -1000, 22961, -1000, 133070, 133070,
	-1000, 133070, -1000, 71492, 77753, 118788, -1000, 1082, 118788, 79997,
	1017, 3081, 65852, -147, 1023, 77753, 95182, -46, 2630, 118788,
	-1000, -1000, -1000, -1000, -1000, 1645, 3046, 524, 2428, -1000,
	77753, 3520, 3045, 665, 3679, 3678, -1000, 95182, 2342, 2427,
	-1000, -1000, 119349, 3209, 877, 118788, 1058, 57309, 1885, -1000,
	63596, 1113, 118788, 1805, 212, -1000, -1000, -1000, -11, 118788,
	-1000, 837, -1000, -1000, 261, 261, 1023, -181, 664, -1000,
	955, 953, 61310, 77753, -144, -1000, -1000, -1000, -1000, 2421,
	95182, 118788, 1360, 2681, 118788, -145, -1000, 205, 663, 950,
	948, -1000, 2730, -1000, -187, -1000, 1040, 60739, 2897, 2893,
	-1000, -1000, 1050, -1000, 1463, 1023, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -36, 1792, 118788,
	-147, -147, -63, -47, -1000, 1042, -1000, 1042, -1000, 1042,
	-1000, 133070, -1000, -1000, -1000, 1619, 1618, 118788, -1000, -1000,
	118788, -1000, 25839, 118788, 95182, 25839, 95182, 2953, 2951, -1000,
	-1000, -1000, 118788, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1167, -1000, 1752, 2322, -1000, 660, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2525, -1000, -49, 33532, 977,
	-1000, -1000, 95182, -37, -50, 49227, 49227, 7357, 7133, 49227,
	53266, 53266, -1000, 49227, 6213, -1000, -1000, -1000, -1000, -1000,
	2889, 659, 49227, 70921, 6234, 6092, -1000, 392, 11070, 593,
	-1000, 49227, -1000, 417, -1000, 384, 35869, -1000, 131466, -30,
	-146, -1000, 19477, -102, -152, -1000, -1000, 836, -1000, 3135,
	-1000, 49227, 131529, 2483, 2018, 1819, 1642, 3592, 3618, 22383,
	-1000, 67540, 1061, 2289, 129222, -1000, -1000, -1000, -1000, 70921,
	70921, 49227, 49227, -1000, 49227, 49227, 49227, -1000, -1000, -1000,
	3592, 987, -1000, -1000, -1000, 987, -1000, -1000, 1466, -1000,
	1466, -1000, 49227, -1000, -1000, 2888, 49227, -1000, 70921, 70921,
	53266, 53266, 53266, 53266, 53266, 53266, 53266, 53266, 53266, 53266,
	53266, 53266, 53266, 53266, 53266, 53266, 53266, 53266, 53266, 53266,
	2565, 53266, 3564, 3564, 3564, 600, -1000, 2939, 2888, 49227,
	49227, 70921, 381, 380, 378, -1000, 49227, -102, -1000, -1000,
	1004, 658, -1000, 2512, -1000, 2788, -1000, 49227, -1000, -151,
	-1000, 2556, -1000, -1000, 2788, 2788, -153, 133070, 57309, 57309,
	-1000, 656, 49227, 2598, -1000, -1000, 818, -324, -1000, 939,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 524, -1000, -1000,
	-1000, 204, 105288, 105288, 817, -1000, -158, -1000, -1000, -161,
	-1000, 3516, 376, 25839, -1000, 1058, 2666, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -147, 118788, 118788, 1678, 2311, 3617,
	-1000, 3597, 835, 816, 201, 3592, 374, 370, 369, -147,
	118788, 118788, 1673, 118788, -1000, -1000, -1000, 231, -1000, -1000,
	-1000, 229, -1000, -1000, -1000, -1000, 2672, -1000, -51, -1000,
	-1000, -1000, 49227, -1000, -1000, 3325, 1237, 1235, -1000, -1000,
	-1000, 2861, -1000, 3043, -1000, 2419, -1000, 1127, -1000, 1916,
	-1000, 49227, 654, 2668, 653, 652, 3676, 2028, 3673, 1139,
	3042, 2237, 3035, 2237, -1000, -1000, -1000, 1007, -1000, 133070,
	2248, -1000, 650, 646, -1000, -52, 1675, 1828, 1233, 1049,
	-1000, -1000, -1000, -1000, 49227, 49227, 104727, -1000, 463, 3317,
	-39, -1000, -1000, -1000, 1671, 1231, 1229, -1000, -1000, -1000,
	-1000, 1645, 1660, 1228, 1227, -1000, -1000, -1000, -1000, -1000,
	2414, -1000, -1000, 3034, 1048, -1000, 3005, 3004, 985, 118788,
	-1000, 1047, -1000, -1000, -1000, -1000, 49227, -1000, -58, 1226,
	3481, 2413, 95182, -1000, 2237, 3033, 1225, -1000, 1219, -1000,
	-1000, -1000, 3472, 3471, 1253, -1000, -1000, -1000, 77753, -1000,
	-1000, 73746, -1000, -1000, 1091, 118788, 73175, 95182, 1878, -1000,
	-1000, 84497, 85058, 118788, 2708, -147, 937, -1000, 2448, 937,
	1038, 2880, -1000, 2628, -1000, 1046, 95182, 3672, 368, -166,
	-59, 70921, 3515, -1000, 2352, 634, 95182, 984, -1000, 3590,
	-1000, -1000, -1000, 1044, -1000, 3465, 95182, 3514, 3030, 1043,
	130, 95182, 3581, -1000, -1000, 3512, 95182, 3029, 2340, 2409,
	2554, 877, 78875, 1043, 2285, -67, -1000, 1805, 35263, 3315,
	-169, -1000, -1000, -1000, 1058, 66978, 57309, 49227, 3663, -188,
	-1000, -1000, -1000, -1000, -1000, 102483, 102483, 77753, 77753, 77753,
	1023, 118788, 118788, 79997, -1000, -1000, 645, 118788, 118788, 644,
	-1000, 118788, 118788, 3659, 77753, 77753, 77753, -60, 643, -1000,
	934, 931, 924, -1000, -1000, -1000, -1000, -1000, -1000, 919,
	1040, -1000, -187, 60739, 130, -1000, 2305, 95182, -1000, 21805,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1042, -147, -1000,
	-1000, 2234, 2364, 2234, 1785, 1784, -1000, -1000, 2321, -1000,
	-1000, -1000, -1000, 2659, 3327, 25839, 3434, 9794, 49227, 49227,
	490, 5184, 712, 9794, 49227, 49227, 70921, 6475, -194, 49227,
	49227, -1000, 49227, 813, 133070, -1000, 3616, 49227, 366, 362,
	-1000, -1000, -1000, 3591, -1000, -1000, -1000, 133070, 49227, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 357, -1000, 199, -1000,
	-1000, -1000, 126642, -1000, 49227, 356, 3389, -1000, 355, 354,
	8831, 521, 128840, 128613, 128550, 349, -1000, -1000, 348, 346,
	133070, 2939, 133070, -1000, -1000, 894, 894, 1439, 1439, 1439,
	1439, 3564, 635, 582, 1063, 618, 618, 618, 888, 600,
	600, 618, 618, 618, 600, 2874, 2563, 641, 6024, -1000,
	-1000, 133070, 133070, 345, -1000, -1000, -1000, -102, 344, 1004,
	-1000, 2774, 3387, 133070, -1000, 57309, 2774, 2774, -1000, -1000,
	2219, 118788, 133070, 57309, -1000, 2947, -1000, 20066, -1000, 25839,
	-1000, -1000, -1000, -1000, 3590, -1000, 65291, -1000, 639, -1000,
	133, -1000, 2666, -1000, 912, -1000, -1000, 77753, 77753, -147,
	-160, 118788, -1000, -1000, 713, 3657, 833, 25839, 339, -1000,
	-1000, -1000, -147, -147, 118788, -147, -1000, -1000, -1000, 3273,
	133070, 118788, 118788, 1548, 104166, 118788, 3027, -1000, 2161, -1000,
	1138, 128168, 57880, -1000, 57880, 118788, -1000, -1000, -1000, -1000,
	1957, 1526, 3654, 1186, -1000, 3348, 118788, -1000, 118788, -1000,
	-1000, -1000, 118788, 118788, 95182, 118788, -1000, 73175, 3014, -199,
	133070, -61, -1000, 911, -1000, 1452, -1000, 21227, 118788, 73175,
	95182, 118788, 73175, 95182, 3026, 118788, 2252, -1000, -1000, 3002,
	-1000, 3012, -201, 25839, -1000, 3615, 3613, 3024, 3357, -1000,
	118788, 3612, 118788, 95182, 3272, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1647, 1218, 1216, 2339, -62, 2337, 2309, -63,
	2147, 1038, -64, 619, -1000, 908, -1000, -1000, 903, -1000,
	1038, -1000, 77753, 60739, 3651, 524, -1000, 2677, -1000, 100233,
	2357, 130, -1000, 3650, 103044, 615, -1000, 2298, -1000, 636,
	-1000, 2529, 73175, 1645, 130, 95182, -1000, -1000, 524, 336,
	-65, -1000, 3047, 1135, 25839, 95182, 3023, 2559, 877, 78875,
	-1000, 1265, 2640, -1000, -66, -1000, 599, 130, 2285, -1000,
	-67, 133070, -1000, 902, -1000, -204, -1000, -1000, 332, -1000,
	3270, 3268, -1000, 2773, 57880, 605, 604, 118788, 3266, -1000,
	-1000, -207, -1000, -1000, 3249, 3249, 77753, 60739, 77753, 77753,
	-1000, 1040, 937, -1000, 2530, -1000, -1000, -1000, -1000, -1000,
	25839, 1735, -1000, 603, 601, -1000, -1000, -1000, -1000, 3327,
	9794, 9794, 49227, 49227, 49227, 9794, 6475, -209, -1000, 9794,
	9794, -102, -1000, -1000, 131466, -1000, -1000, -1000, 133070, -1000,
	20649, 2241, -1000, 127941, -1000, 33532, -1000, -1000, 49227, 49227,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53266, 2860,
	597, 70921, -1000, -1000, 325, 1056, 49227, 50958, 2556, 1056,
	1056, -1000, -212, -1000, -1000, -1000, 3590, 133, -1000, -1000,
	3648, 25839, -1000, 77753, -1000, -1000, 3645, -163, 829, -1000,
	3643, -1000, -1000, 132, -1000, -1000, -1000, 2706, 3509, -1000,
	1928, -1000, 118788, -1000, 118788, -1000, 25839, 118788, 2806, 1303,
	-1000, 1006, 2581, 580, 53266, 1165, 95182, 932, 2763, 2762,
	-1000, 3535, 3384, 2756, -214, -1000, 118788, 49227, 118788, -217,
	-220, 2382, -1000, -1000, 1164, 1298, 49227, 1159, -1000, -1000,
	-1000, 70921, 579, 2237, 2237, -222, -223, -1000, -1000, -1000,
	49227, 1215, 118788, 34686, -1000, 3642, 3317, -1000, -1000, -1000,
	-1000, -1000, -1000, 118788, -1000, 118788, -1000, 49227, 1213, -1000,
	-1000, -1000, 3611, 2237, 25839, 2237, -1000, 2237, 3357, 1185,
	118788, 73175, 95182, 1900, 1900, 2896, -1000, -1000, -1000, 2450,
	2450, 77753, 60739, -1000, -68, 1038, -1000, 3508, 2674, 3638,
	-1000, -1000, -1000, -1000, 2580, -1000, -1000, 118788, 2564, 1025,
	-1000, -225, -1000, 889, 887, 79997, 1017, 1029, -1000, -69,
	570, -1000, 884, -1000, -1000, -1000, -1000, 524, 3507, -1000,
	3606, 568, 567, 118788, 2336, 566, 25839, 3313, 877, 78875,
	-1000, 3209, 1805, -1000, 2395, 118788, 3306, -1000, 2640, 565,
	-1000, 1023, 561, 560, 2575, 2575, -228, 57880, 57880, -230,
	559, 1023, -1000, -231, -1000, -1000, -1000, -1000, -1000, -1000,
	-76, -1000, 791, 710, -1000, -1000, 95182, 95182, 49227, 49227,
	-1000, 9794, 9794, 9794, -1000, 322, -1000, -1000, 2285, 3381,
	-1000, -81, 127878, 127496, 7461, 53266, 70921, -233, -1000, -1000,
	118788, 133070, -87, -1000, 133070, 558, 556, 464, -1000, -1000,
	-1000, 617, -1000, -1000, -1000, 118788, 3637, -1000, 118788, 103605,
	118788, -1000, -1000, 2226, -1000, -1000, -1000, 118788, 2404, -1000,
	-1000, -1000, 1137, 49227, 6024, 53266, 553, 49227, -1000, 552,
	546, 3506, 3250, -1000, 2660, 2842, 2011, 57880, -1000, 3327,
	-1000, 127269, -1000, 1120, 1896, -1000, -1000, -1000, -1000, 133070,
	53266, 3357, 57880, -1000, -1000, 544, 543, 133070, 541, 883,
	2858, -1000, -1000, -1000, -1000, -1000, 133070, 535, 3481, -1000,
	-1000, -1000, -1000, 2237, 95182, -1000, -1000, -1000, 1207, -1000,
	-1000, -1000, -1000, 3636, 3635, 2852, 84497, -1000, -238, -1000,
	-1000, 1921, 130, 2220, 2705, -1000, 2357, 534, -1000, -1000,
	2329, 2664, -1000, 103044, 34109, 34109, 321, 3502, 1029, -1000,
	3568, -1000, 3253, 3253, 49227, 3501, 130, -1000, 3581, 57880,
	-1000, 95182, 57880, 2334, 2038, 2540, 78875, -1000, 2554, -1000,
	-1000, -239, 118788, 1805, -1000, -1000, 77753, 77753, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1120,
	-240, -241, -1000, 77753, -1000, -1000, 2530, -1000, 118788, -1000,
	118788, -1000, -1000, -246, -249, -1000, 2152, 49227, 33532, -1000,
	-1000, 7461, -254, -1000, -95, -1000, 3498, 50958, 3633, 3632,
	3631, -1000, -147, -1000, -147, -1000, 1908, -1000, -1000, -1000,
	3022, 2771, 127206, 6024, 2517, 118788, 18171, 1645, 1645, -1000,
	3495, 2839, -1000, -1000, 2674, 530, -1000, -1000, -1000, -1000,
	977, 118788, 2674, 2769, 95182, 6024, 1136, -255, 2234, 2234,
	49227, 32955, 2250, 49227, -1000, -1000, 3357, 118788, -1000, -1000,
	118788, 2332, -1000, 2827, 3578, -1000, 1017, -1000, 2246, 118788,
	-1000, 3349, -1000, 3265, -1000, -1000, -1000, 2677, 130, -1000,
	-1000, -1000, -256, 133070, 130, -1000, 314, -257, 1135, -263,
	95182, 1909, -1000, 877, -1000, 2559, 1058, -1000, -1000, -265,
	-268, 2011, 1120, 2218, -270, -1000, -271, -273, -1000, -1000,
	312, 50381, 50381, 50381, -102, -115, -1000, 118788, 528, -1000,
	-1000, -1000, -1000, -1000, 2999, 1035, -1000, 917, 1943, 310,
	1134, 309, 282, -1000, -1000, -1000, 2218, 118788, -1000, -1000,
	-1000, 1031, 524, -1000, 49227, 1120, -276, -1000, 1112, -278,
	-1000, 1098, -279, -1000, 2847, -1000, -284, 2237, -251, 227,
	1900, 1026, 3438, -1000, -1000, -1000, 2329, 95182, -291, -1000,
	-1000, 2509, -1000, 2674, 1025, -1000, -1000, -1000, 1120, 523,
	2011, 520, 1489, 877, -1000, -1000, 1466, 3313, 3218, 1023,
	1023, 2674, 2011, 1018, -1000, 1023, -1000, -1000, -1000, 3055,
	-1000, 54420, 2330, 1775, 130566, 3055, 3055, -1000, -1000, 118788,
	3419, -1000, 961, 960, 1562, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2756, -292, 3411, 2517, 133070, 2674, -1000,
	2234, 2703, -1000, 2234, 2838, -1000, 2238, -1000, -1000, -1000,
	2799, -1000, 2833, -1000, 1679, 3559, 2534, 519, -1000, 118788,
	1764, 1763, 3630, 2220, 2329, 2011, 57880, 2674, 57880, 2200,
	-1000, 118788, -1000, 2038, 1409, -1000, -1000, 2218, 2674, 1058,
	500, -1000, -1000, 2139, 3530, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 874, -1000, 3238, -1000, 1157, 2259, 2259,
	1058, -1000, 859, 917, -1000, -1000, 489, -1000, 488, -1000,
	2307, 118788, 2295, -1000, -1000, -1000, -1000, 118788, -1000, -1000,
	3627, -1000, 1017, -1000, 2674, -294, 2218, -297, -1000, -1000,
	-1000, -147, 1909, -1000, 1592, 1018, 2218, -1000, 1774, -1000,
	-1000, 2276, 49804, 49227, -1000, 3551, -1000, -1000, 2593, -1000,
	-1000, 49227, 2756, 49227, 49227, -1000, 227, 64720, -300, -1000,
	2329, 2218, 1120, 1018, 2011, 1489, 66978, 1058, 1018, -1000,
	-1000, -1000, 133070, -1000, -1000, -1000, 133070, -1000, -302, -305,
	-1000, -181, 102483, 2236, 2534, 1018, 2011, 1058, 2674, 2200,
	-266, -1000, 1058, 2218, 1203, -312, -1000, -1000, -1000, -1000,
	1058, 2674, -1000, 2218, -1000, -1000, -1000, -1000, -1000, 487,
	-1000, -1000, 2218, 1018, 49227, 1018, 1058, -314, 1058, -1000,
	2218, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4429, 4426, 4425, 4422, 4421, 4417, 4415, 4413, 4411,
	4409, 4405, 4399, 147, 4398, 4397, 4396, 4395, 4393, 4392,
	4390, 4389, 4388, 4385, 4383, 4382, 4381, 4375, 4374, 4372,
	4368, 4367, 4364, 4361, 4358, 4354, 4353, 4352, 4351, 4350,
	4347, 4346, 4345, 4341, 4337, 4336, 4335, 4334, 4333, 4331,
	4330, 4323, 4321, 4319, 4318, 4316, 4314, 4309, 4306, 4305,
	4304, 4302, 4299, 4298, 4297, 4295, 4294, 52, 4292, 4291,
	4290, 4289, 4288, 4287, 4286, 4285, 4284, 4283, 4281, 4280,
	4276, 4271, 4270, 4269, 4267, 4266, 4265, 4264, 62, 4263,
	273, 4261, 4260, 4259, 4256, 4254, 4252, 4250, 4249, 4245,
	4242, 4241, 4240, 270, 4239, 126, 161, 4236, 4235, 3823,
	4224, 4223, 268, 4221, 4220, 4218, 4212, 283, 4210, 4209,
	4207, 4206, 4205, 4204, 4203, 4201, 4200, 4198, 4194, 118,
	203, 4193, 4192, 2309, 4190, 4188, 4186, 4184, 4183, 4182,
	4177, 4174, 4172, 4171, 4169, 249, 166, 4168, 267, 4166,
	4165, 4163, 4160, 4159, 4158, 4157, 4156, 4155, 4154, 4151,
	4150, 4146, 4145, 4144, 4143, 4141, 4140, 4138, 4136, 4135,
	4134, 4133, 4131, 4127, 4125, 4123, 4120, 4119, 4118, 4117,
	4116, 4113, 4112, 4107, 4106, 4099, 4096, 4094, 244, 207,
	208, 4093, 4088, 266, 265, 4087, 4086, 4085, 4084, 4083,
	135, 21, 92, 4082, 4081, 97, 87, 84, 103, 106,
	94, 4073, 115, 4070, 124, 59, 4069, 18, 2, 264,
	246, 8922, 241, 4068, 4064, 4063, 247, 195, 4062, 242,
	4061, 4056, 4055, 4054, 4053, 4051, 67, 48, 176, 179,
	170, 172, 86, 4050, 159, 107, 81, 55, 46, 12,
	69, 211, 23, 1, 259, 4049, 257, 8, 138, 10,
	39, 4048, 4047, 4046, 4045, 3422, 121, 4044, 263, 233,
	171, 4043, 4042, 4041, 1159, 4039, 4038, 70, 4037, 348,
	102, 132, 16, 128, 4034, 155, 167, 40, 4032, 182,
	53, 4031, 160, 98, 88, 10478, 7699, 4030, 4029, 117,
	78, 85, 178, 173, 168, 196, 123, 164, 165, 112,
	213, 210, 184, 898, 4028, 245, 4027, 3483, 73, 181,
	154, 5898, 4024, 4022, 4021, 83, 199, 108, 4020, 4019,
	76, 19, 3, 4, 6, 141, 22, 24, 13, 4018,
	31, 116, 47, 36, 4017, 30, 4016, 4015, 4014, 4013,
	4012, 61, 162, 4011, 4010, 277, 4009, 104, 54, 32,
	4008, 1065, 225, 4006, 227, 130, 4005, 4001, 254, 202,
	190, 4000, 79, 228, 3998, 3997, 3996, 3995, 3993, 131,
	9, 136, 3992, 3991, 151, 3990, 51, 235, 197, 3985,
	64, 3984, 3981, 174, 50, 145, 271, 139, 221, 120,
	218, 183, 238, 3979, 3978, 3977, 209, 3975, 3969, 214,
	153, 3963, 3962, 205, 285, 90, 45, 71, 234, 77,
	194, 158, 3961, 200, 3959, 3958, 282, 186, 216, 14,
	7, 96, 134, 3957, 5, 231, 157, 224, 114, 3956,
	6914, 2580, 2722, 3954, 3952, 149, 119, 80, 125, 156,
	261, 72, 3951, 3949, 2324, 3946, 3941, 3939, 3937, 185,
	3936, 3933, 3932, 148, 180, 223, 3931, 99, 66, 49,
	29, 122, 250, 279, 113, 222, 346, 255, 3930, 3929,
	3928, 192, 3927, 109, 133, 163, 198, 251, 56, 3926,
	229, 3924, 152, 615, 65, 150, 3922, 219, 3920, 3917,
	3916, 3914, 3912, 3911, 3910, 311, 230, 3908, 3907, 3904,
	38, 191, 3903, 260, 456, 189, 100, 91, 187, 89,
	3945, 3902, 252, 2214, 60, 262, 470, 3901, 4504, 57,
	3900, 0, 14376, 8928, 12949, 12674, 3898, 2405, 3897, 3896,
	3895, 212, 146, 3893, 3891, 3890, 105, 3889, 82, 3887,
	3886, 68, 3885, 28, 17, 20, 34, 26, 1022, 729,
	3884, 3883, 27, 137, 143, 3882, 272, 226, 3881, 3880,
	3877, 3876, 93, 3874, 41, 3873, 43, 3872, 3871, 44,
	15, 35, 3870, 3869, 220, 3868, 217, 258, 3866, 169,
	3865, 74, 140, 3863, 3862, 3861, 63, 58, 256, 95,
	3856, 276, 3855, 201, 3853, 3852, 3852, 25, 3851, 3849,
	239, 111, 110, 3847, 253, 142, 42, 206, 177, 215,
	3845, 3844, 175, 3843, 3842, 3839, 281, 3837, 3835, 33,
	3834, 3833, 3830, 11, 3829, 3828, 204, 3242, 3827, 3826,
	37, 3825, 188,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 617, 617, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 621, 621, 622, 622,
	622, 622, 622, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 606, 606, 607,
	607, 605, 604, 604, 604, 608, 608, 608, 204, 204,
	204, 128, 128, 128, 128, 128, 128, 129, 129, 130,
	130, 208, 208, 208, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 214, 16, 16, 16,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 108,
	108, 528, 528, 529, 529, 199, 199, 200, 200, 200,
	200, 201, 201, 202, 202, 202, 70, 70, 211, 211,
	213, 213, 212, 212, 212, 212, 212, 58, 58, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 61, 61, 61, 61, 61,
	61, 68, 68, 68, 68, 68, 68, 190, 190, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 76, 76, 76, 76, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 624, 624, 625, 625, 626,
	626, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 85, 85, 353,
	353, 316, 316, 86, 86, 86, 87, 87, 88, 88,
	72, 72, 587, 587, 369, 369, 485, 485, 73, 595,
	595, 595, 597, 597, 596, 596, 90, 90, 391, 391,
	91, 91, 91, 91, 91, 91, 92, 92, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 100, 100, 100,
	100, 100, 101, 101, 101, 98, 98, 98, 95, 95,
	95, 94, 94, 94, 99, 99, 99, 586, 305, 305,
	97, 97, 97, 96, 96, 96, 370, 370, 102, 102,
	102, 102, 317, 103, 103, 103, 103, 103, 103, 103,
	103, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 487, 487, 104, 104,
	104, 452, 452, 109, 109, 109, 407, 407, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 131, 131, 131, 131, 131, 131, 131, 131,
	591, 591, 362, 362, 268, 268, 268, 268, 121, 121,
	121, 121, 122, 122, 122, 123, 123, 195, 195, 138,
	138, 138, 138, 137, 137, 137, 137, 137, 137, 137,
	137, 62, 62, 62, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 67, 67, 67, 141, 141, 618,
	618, 143, 140, 140, 140, 140, 140, 140, 140, 139,
	139, 142, 142, 142, 142, 144, 146, 146, 146, 146,
	146, 145, 145, 145, 145, 147, 147, 519, 519, 378,
	378, 517, 517, 538, 538, 518, 518, 323, 323, 323,
	323, 323, 324, 324, 324, 527, 527, 527, 527, 527,
	527, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 196, 196, 197, 198, 198, 198,
	198, 198, 173, 173, 173, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 176, 176, 176, 160,
	160, 149, 149, 149, 149, 149, 149, 149, 154, 154,
	154, 154, 154, 154, 154, 154, 150, 150, 162, 162,
	162, 162, 162, 155, 155, 156, 156, 156, 157, 157,
	157, 157, 183, 183, 159, 159, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 151, 151, 151, 151, 164,
	164, 164, 164, 414, 414, 414, 188, 188, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 186, 186, 186, 186, 186, 186,
	609, 609, 610, 610, 610, 180, 180, 180, 180, 180,
	180, 466, 466, 174, 174, 174, 174, 179, 179, 179,
	179, 182, 182, 182, 182, 397, 397, 171, 171, 171,
	172, 172, 172, 177, 177, 178, 354, 354, 175, 175,
	181, 181, 181, 181, 152, 152, 152, 152, 152, 152,
	152, 153, 153, 153, 153, 184, 184, 170, 170, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	628, 628, 166, 166, 166, 165, 165, 165, 165, 168,
	168, 169, 169, 169, 169, 169, 169, 167, 158, 187,
	588, 588, 584, 584, 584, 584, 584, 584, 584, 584,
	585, 585, 585, 585, 590, 590, 114, 114, 114, 114,
	114, 124, 124, 124, 124, 124, 115, 115, 115, 115,
	115, 115, 115, 117, 117, 116, 116, 116, 116, 80,
	80, 80, 80, 80, 15, 15, 15, 81, 81, 259,
	259, 217, 217, 217, 342, 342, 218, 218, 331, 331,
	331, 331, 215, 215, 216, 216, 82, 82, 629, 629,
	629, 601, 601, 601, 602, 602, 602, 602, 602, 602,
	325, 325, 326, 326, 432, 432, 432, 432, 432, 329,
	329, 329, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 332, 332, 243, 243, 243, 340, 341, 341, 333,
	333, 339, 338, 338, 337, 337, 336, 336, 334, 335,
	335, 335, 344, 344, 343, 346, 346, 345, 431, 547,
	547, 549, 549, 549, 549, 549, 549, 549, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 415, 415, 630, 630, 631,
	632, 545, 545, 545, 546, 541, 541, 542, 542, 542,
	542, 542, 327, 327, 328, 328, 328, 328, 543, 544,
	360, 360, 470, 548, 548, 550, 550, 552, 633, 633,
	633, 633, 633, 633, 634, 634, 634, 430, 430, 429,
	429, 351, 351, 553, 553, 553, 553, 554, 554, 554,
	554, 554, 557, 556, 555, 555, 555, 555, 555, 84,
	84, 84, 394, 394, 393, 393, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 192, 192, 271, 271, 271, 78, 78, 78, 12,
	12, 12, 12, 12, 12, 12, 286, 286, 13, 13,
	13, 13, 603, 603, 603, 83, 83, 83, 83, 83,
	83, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 593, 593, 592, 592, 272,
	272, 636, 636, 89, 89, 89, 89, 89, 89, 89,
	89, 488, 488, 489, 489, 77, 77, 77, 77, 77,
	416, 416, 413, 413, 412, 412, 359, 359, 468, 468,
	468, 469, 276, 276, 277, 277, 236, 236, 236, 31,
	30, 21, 21, 26, 26, 27, 27, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 28, 28, 49, 49,
	49, 49, 50, 50, 50, 50, 53, 53, 54, 54,
	48, 48, 48, 48, 51, 51, 44, 44, 55, 55,
	55, 55, 55, 611, 613, 613, 612, 612, 616, 616,
	616, 616, 616, 616, 614, 614, 615, 615, 619, 619,
	620, 620, 120, 120, 125, 125, 125, 125, 125, 126,
	126, 126, 126, 127, 127, 127, 127, 136, 136, 191,
	191, 191, 191, 191, 191, 191, 57, 57, 57, 57,
	69, 69, 69, 69, 134, 638, 638, 638, 135, 135,
	135, 637, 637, 269, 269, 426, 426, 427, 427, 639,
	639, 428, 428, 428, 428, 428, 262, 261, 263, 263,
	264, 264, 75, 75, 75, 252, 252, 251, 253, 253,
	254, 254, 249, 249, 530, 530, 256, 256, 256, 257,
	257, 245, 245, 246, 246, 247, 247, 248, 248, 260,
	260, 640, 640, 112, 112, 112, 194, 194, 315, 315,
	315, 423, 423, 423, 352, 352, 283, 283, 425, 425,
	425, 425, 390, 390, 390, 193, 193, 367, 367, 380,
	380, 381, 381, 482, 482, 382, 118, 118, 119, 119,
	133, 133, 221, 221, 219, 219, 219, 219, 219, 219,
	219, 219, 226, 226, 227, 227, 228, 228, 229, 230,
	230, 230, 230, 371, 371, 231, 231, 231, 220, 220,
	220, 222, 222, 222, 222, 222, 222, 222, 225, 225,
	225, 225, 232, 232, 232, 224, 224, 564, 564, 564,
	566, 566, 568, 568, 567, 567, 563, 563, 565, 565,
	635, 635, 396, 396, 396, 349, 350, 347, 347, 348,
	348, 357, 357, 355, 356, 356, 358, 358, 467, 467,
	467, 237, 237, 237, 387, 387, 387, 387, 388, 388,
	419, 419, 417, 417, 417, 417, 418, 418, 420, 420,
	420, 421, 421, 422, 422, 384, 384, 385, 385, 386,
	386, 386, 386, 448, 448, 223, 223, 223, 364, 364,
	364, 365, 365, 438, 438, 438, 438, 438, 438, 438,
	438, 439, 439, 437, 437, 437, 437, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 472, 473, 473, 366,
	366, 474, 424, 424, 582, 582, 582, 583, 583, 465,
	465, 475, 475, 475, 475, 475, 475, 463, 463, 464,
	464, 483, 484, 484, 400, 400, 400, 400, 398, 398,
	401, 401, 401, 401, 401, 399, 399, 476, 476, 476,
	476, 389, 389, 477, 477, 477, 477, 478, 479, 479,
	480, 480, 433, 434, 434, 490, 490, 490, 490, 492,
	363, 363, 363, 363, 363, 540, 539, 539, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 507,
	507, 507, 507, 507, 507, 507, 493, 493, 493, 493,
	493, 497, 497, 497, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 498, 498, 503, 503, 504,
	504, 504, 499, 500, 505, 505, 505, 505, 641, 641,
	509, 509, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 495, 495, 495, 502, 502, 502, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	408, 408, 410, 410, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 442, 442, 442, 442, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 558, 558, 558, 558, 558, 558,
	558, 558, 444, 444, 561, 561, 562, 562, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 569,
	569, 570, 570, 572, 572, 573, 573, 574, 575, 575,
	575, 576, 577, 577, 571, 571, 578, 578, 578, 578,
	579, 579, 580, 580, 580, 580, 580, 581, 581, 581,
	581, 581, 454, 454, 455, 455, 461, 461, 461, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 322, 322, 321, 273, 273, 273,
	273, 273, 273, 376, 376, 374, 374, 374, 377, 377,
	375, 375, 373, 373, 372, 372, 451, 451, 449, 449,
	453, 453, 402, 402, 508, 508, 508, 508, 508, 508,
	508, 508, 403, 403, 403, 411, 404, 404, 405, 405,
	405, 405, 405, 445, 446, 406, 406, 406, 447, 447,
	456, 460, 460, 459, 458, 458, 457, 457, 435, 435,
	436, 436, 383, 383, 642, 642, 379, 379, 481, 481,
	481, 481, 319, 319, 368, 368, 318, 318, 310, 310,
	311, 311, 311, 311, 361, 361, 462, 462, 510, 510,
	511, 511, 512, 512, 513, 513, 514, 515, 516, 450,
	450, 294, 293, 280, 281, 292, 291, 290, 279, 282,
	287, 288, 289, 284, 285, 301, 300, 299, 250, 255,
	306, 307, 307, 309, 309, 308, 308, 296, 297, 298,
	486, 278, 312, 312, 313, 313, 313, 314, 314, 314,
	314, 274, 274, 275, 275, 302, 302, 303, 304, 304,
	295, 295, 295, 265, 265, 265, 266, 266, 267, 267,
	524, 524, 521, 521, 521, 522, 522, 522, 523, 523,
	523, 523, 520, 520, 520, 520, 520, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 532, 532, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 534, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 537, 537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 4, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 4, 6, 4, 2, 6,
	4, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 4, 3, 4, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 5, 2, 0, 3, 3,
	4, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	3, 4, 5, 4, 4, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 7, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 13, 16, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 1, 1, 0, 1, 4, 1, 0, 3, 7,
	7, 1, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 2, 8, 4, 2, 3, 5, 5, 5,
	2, 5, 5, 2, 2, 2, 0, 1, 1, 3,
	4, 11, 12, 9, 5, 3, 1, 5, 10, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 3, 2, 2, 4, 7, 3, 4,
	6, 5, 7, 5, 5, 3, 3, 0, 2, 2,
	2, 2, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	8, 8, 4, 7, 3, 0, 7, 10, 1, 1,
	1, 1, 2, 2, 3, 0, 3, 0, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 13, 16, 3, 1, 0, 4, 1, 0,
	2, 2, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 5, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 5, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 608, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 156,
	129, 138, 204, 389, 434, 446, 404, 143, 425, 409,
	-142, -143, 464, -57, -69, -135, -134, 73, 130, 419,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -623, 102, -565, -93,
	-96, -127, -627, 163, 222, -115, -116, 371, -122, -123,
	427, -125, -126, 430, 164, -64, -63, 158, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	469, -178, -187, -156, 531, 49, 485, 82, 148, 438,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 426, -222, -220,
	605, 585, 546, -18, -23, -24, -19, -20, -22, -25,
	-21, -26, -27, -28, -40, -45, -46, -42, -43, -41,
	-44, -47, -48, -49, -50, -51, -52, -53, -54, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-29, 568, 577, -225, -223, -224, -232, 456, 554, 505,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, -317, 2, -296, -302, -303, -304, -295, -265,
	-534, -537, 4, -531, -535, 170, 232, 334, 21, 23,
	22, 24, 25, 26, 27, 29, 30, 41, 42, 44,
	45, 46, 47, 48, 49, 53, 55, 59, 60, 61,
	62, 63, 64, 68, 73, 74, 79, 80, 81, 82,
	83, 84, 85, 91, 88, 89, 90, 92, 94, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 107, 108,
	109, 117, 118, 119, 120, 121, 123, 129, 124, 130,
	133, 128, 132, 134, 136, 137, 138, 141, 142, 143,
	145, 146, 147, 149, 150, 151, 153, 154, 156, 157,
	158, 161, 159, 513, 160, 162, 163, 164, 165, 168,
	176, 177, 178, 183, 185, 186, 190, 191, 192, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 205, 209,
	211, 212, 213, 214, 215, 221, 222, 224, 225, 226,
	227, 228, 233, 234, 235, 239, 236, 245, 246, 250,
	251, 252, 254, 258, 259, 260, 261, 262, 263, 265,
	267, 266, 269, 272, 273, 276, 277, 278, 279, 280,
	281, 285, 286, 282, 287, 288, 290, 291, 294, 292,
	295, 296, 293, 297, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 298, 313, 311, 315,
	316, 317, 332, 326, 327, 329, 321, 322, 318, 323,
	319, 320, 324, 325, 331, 328, 336, 337, 338, 341,
	219, 343, 344, 347, 365, 351, 352, 353, 356, 357,
	360, 363, 364, 366, 367, 368, 369, 370, 371, 372,
	373, 374, 376, 377, 379, 380, 381, 383, 384, 385,
	387, 389, 390, 392, 393, 395, 396, 397, 398, 399,
	400, 401, 403, 404, 406, 405, 407, 409, 411, 412,
	413, 419, 425, 421, 422, 423, 424, 426, 427, 428,
	429, 430, 432, 433, 434, 436, 437, 438, 439, 440,
	442, 444, 445, 449, 450, 466, 467, 487, 446, 447,
	448, 451, 452, 453, 454, 455, 459, 457, 458, 460,
	461, 462, 464, 465, 468, 469, 471, 472, 473, 474,
	475, 476, 477, 480, 482, 483, 484, 485, 504, 486,
	488, 492, 493, 494, 495, 489, 490, 503, 497, 498,
	500, 501, 506, 507, 508, 509, 510, 511, 512, 514,
	516, 524, 535, 525, 526, 528, 531, 532, 533, 534,
	522, 536, 537, 540, 541, 542, 545, 543, 544, 546,
	548, 551, 552, 553, 559, 558, 560, 561, 563, 564,
	569, 570, 572, 573, 574, 36, 50, 51, 54, 56,
	58, 69, 70, 71, 75, 125, 126, 155, 166, 167,
	179, 193, 194, 206, 208, 216, 217, 218, 240, 241,
	243, 248, 270, 340, 342, 358, 362, 378, 382, 386,
	388, 402, 441, 478, 491, 496, 517, 518, 519, 520,
	527, 529, 554, 555, 556, 562, 571, -317, 2, -296,
	349, -289, 2, -265, -265, 389, 28, 2, 28, 377,
	458, 508, 510, 2, -591, -362, 2, 28, -268, -265,
	102, 204, 456, -289, 2, -591, -362, 25, 2, -265,
	2, 363, 22, 27, 66, 77, 98, 141, 165, 187,
	190, -626, 365, 396, 444, 460, 503, 514, 528, 2,
	558, 291, 457, 505, 232, 120, 533, 451, -603, 449,
	450, 363, 394, 436, 207, 547, -269, 2, 446, -265,
	291, 2, 608, 94, 74, 441, 461, -145, 2, 281,
	525, -146, -147, -144, 517, -519, 451, 436, 313, -265,
	608, 608, 608, 28, -278, -265, 505, 232, 451, 120,
	501, 608, 2, 505, 368, 558, 457, 120, 399, 232,
	533, 190, 141, 27, 451, -603, 582, 583, 291, 127,
	-589, 2, -584, 4, -535, -531, -311, -310, 505, 511,
	120, -304, -295, 598, -303, 608, 608, 608, 2, 251,
	252, 398, 397, 461, 462, 608, 608, 608, 608, 449,
	2, 165, 22, 27, 66, 93, 98, 127, 187, 190,
	354, -624, 365, 396, 460, 503, 507, 514, 528, -602,
	486, 68, 424, 451, -601, -603, 291, 533, 141, -412,
	120, 281, 202, 541, 510, 508, 539, 133, 239, 544,
	543, 608, 608, -106, 2, 605, 32, 31, -105, -109,
	143, 464, -214, 505, 244, 2, -265, 608, 608, 2,
	251, 252, 449, 450, 608, 608, 188, -584, 2, 608,
	608, 2, 251, 252, 449, 450, 244, 2, 68, 453,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 2, -189, 461, 486,
	213, 47, 46, 74, 28, 395, 79, 369, 121, 127,
	150, 534, 205, 232, 233, 259, 93, 94, -414, 44,
	252, 68, 251, 450, -609, 449, -466, 506, 452, 458,
	500, 263, 446, 525, 102, 548, 437, 574, 399, 400,
	498, 413, 282, 159, 189, 4, 120, 313, 436, 463,
	267, 266, 535, 517, 281, 445, 372, 84, 608, -635,
	2, 505, -637, 2, 525, 525, 2, -637, 2, -637,
	2, -637, 2, -638, 525, 571, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, -220, -222, -221, 608, 608, 608,
	608, 608, 608, 608, -189, 461, 2, 74, 28, -355,
	-357, 538, 242, 152, 355, -219, -221, 2, -564, 535,
	461, -517, 2, -440, -538, -442, 596, 597, 589, 502,
	67, -321, 333, 575, -454, 127, 539, 349, -537, -443,
	-456, 155, 365, 441, -377, 8, 9, 5, 6, 7,
	-274, -444, -450, 530, 169, 339, -314, 609, 10, 605,
	-561, -221, -455, 37, 208, 65, -521, -313, -275, -493,
	243, -312, -295, -558, -559, 4, -531, -532, -522, -496,
	-504, -500, -501, -507, -265, -534, 77, 111, 112, 110,
	115, 114, 284, 283, 116, 113, 463, 547, 66, 36,
	216, 217, 248, 340, 218, 75, -560, 142, -533, 240,
	241, 478, 51, 402, 179, 126, 125, 342, 56, 54,
	555, -505, 122, 517, 518, 519, 520, 193, 194, 58,
	166, 167, 362, 386, 496, 527, 529, 206, 270, 43,
	106, 189, 238, 220, 247, 249, 253, 271, 274, 314,
	330, 335, 359, 361, 435, 470, -641, 556, 491, 69,
	70, -566, 405, -567, -289, -566, 608, 608, 610, 608,
	-347, -349, -350, 2, 28, 139, 605, 2, -471, 2,
	-472, -476, -221, 264, -475, 605, -473, 603, -296, 350,
	-562, 442, -558, -559, -274, -295, -313, 4, -531, -533,
	607, -351, 605, 120, 451, 505, 78, 232, 165, -407,
	605, -265, 28, 349, 521, 610, -348, 393, -452, 605,
	349, 188, 352, 60, 295, 2, 2, 2, 2, 2,
	216, -265, 505, 119, 2, 262, 2, 2, 2, 2,
	2, 2, 2, -370, 216, 2, -296, 558, -370, 216,
	2, -370, 216, 2, -413, 2, 87, -279, 216, 2,
	-265, -305, 216, 2, -300, -302, -309, 216, 2, -307,
	-265, -529, 216, 2, -528, -524, 10, -523, 5, 4,
	-531, -535, -532, -534, 77, -440, 2, -133, 2, 60,
	-265, 558, 2, 466, 2, 605, -145, 2, 71, 525,
	43, 461, -146, 2, -427, 2, -428, -261, -262, -263,
	-483, -264, 250, 392, 401, 578, 131, 333, 574, -618,
	188, 588, 521, -517, -517, -517, -378, 607, 2, 2,
	2, 2, 2, 2, -476, 216, -296, 2, -293, -520,
	4, -531, -535, -532, -536, 28, 31, 32, 33, 35,
	37, 38, 39, 40, 57, 65, 66, 72, 76, 78,
	87, 93, 102, 110, 111, 113, 112, 114, 115, 116,
	127, 131, 135, 139, 140, 144, 148, 152, 169, 171,
	184, 187, 188, 204, 207, 210, 223, 237, 242, 244,
	264, 268, 275, 283, 284, 333, 339, 345, 349, 350,
	354, 355, 375, 391, 408, 431, 456, 463, 481, 499,
	505, 515, 521, 523, 530, 538, 539, 547, 549, 557,
	565, 566, 567, 568, -537, 2, -476, 216, 2, -299,
	216, -476, -302, 2, -279, 2, -292, -520, 2, -318,
	216, -296, -298, -302, -300, 2, 2, 2, 2, -307,
	2, -528, 216, 2, 28, 28, 558, 393, 244, 521,
	610, -368, -310, -311, -516, 8, -361, -265, 607, -440,
	2, -133, -117, 2, 184, -440, 216, 2, -133, 216,
	2, -440, 216, 2, -133, 216, 2, -604, 2, -528,
	216, 216, -265, 2, 295, 2, 2, 528, 2, 98,
	505, 119, 2, 423, -625, 444, 532, 2, 2, 2,
	2, 2, 2, 2, 505, -284, 2, -265, 184, 489,
	-307, 216, -308, 2, 457, -636, 405, -528, 216, 2,
	558, -300, 216, 2, -300, 232, 246, -279, 216, 2,
	510, 508, 510, 508, 188, 2, 244, 2, 244, 2,
	-477, 2, -478, -472, -479, 603, 350, -487, 2, -486,
	-523, 554, -106, 605, -106, 605, 461, 605, -528, -296,
	-296, -440, 2, -133, -117, 2, -440, 2, -133, 2,
	-130, -528, -129, 605, 188, -440, 2, -133, -117, 2,
	-440, 2, -133, 2, -214, 184, 2, 120, 505, -189,
	2, 184, 549, 2, 8, 2, 223, -528, 452, 400,
	176, 2, 466, 2, 467, 74, -414, 574, 74, 188,
	2, 188, 2, -397, 2, 568, 393, 188, 2, 2,
	-588, 2, 349, 188, 2, 188, 2, 188, 2, 188,
	2, 188, 2, -188, 462, 526, 504, 397, 252, 2,
	-133, 565, -117, 252, 251, -440, 565, 2, -610, 184,
	450, -440, 2, 524, 261, 160, 188, -397, 2, 188,
	2, 188, 2, 5, 2, 398, 487, 2, 250, 392,
	487, 2, -296, 505, 558, 457, 120, 28, 2, 449,
	2, 2, 88, 89, 188, 2, 188, 2, 203, 188,
	2, 188, 505, 574, 2, -389, -476, -426, -427, -426,
	521, -355, -357, -189, 466, 2, -226, -387, -228, 184,
	-417, -418, -229, 275, 171, 345, -230, -396, 28, 139,
	-396, -396, 60, 606, 606, -618, 535, 11, 12, 76,
	41, 596, 597, 598, 599, 182, 600, 601, 594, 595,
	593, 586, 587, 591, 256, 257, 95, 590, 588, 86,
	289, 443, 172, 173, 174, 175, 420, 230, 34, 231,
	14, 15, 16, -321, 33, 354, 274, 575, 220, 470,
	589, 17, 18, 19, 247, 249, 335, 50, 223, -273,
	365, -320, 502, 67, -440, -440, -440, -440, -440, -440,
	-440, -440, 361, 605, -383, -435, 603, -221, 605, 605,
	605, 605, -516, -221, -440, -454, 606, -375, 605, -221,
	-454, -449, 605, 441, 603, 605, -457, -440, 5, 5,
	5, 605, 607, -569, 569, 184, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 388, -498, 605, -497, 605, -497, -497, 559,
	-495, 605, 577, 570, 605, -495, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 559,
	610, -566, -351, 605, -379, -481, -440, 598, -379, -379,
	349, -372, -440, 106, -400, 253, 314, 189, 271, 435,
	238, -437, 609, -437, -465, 577, -221, -473, -295, -221,
	-475, 605, -471, -465, -107, -516, -90, -103, -112, -133,
	-148, -193, -194, 598, -296, 605, 188, 605, 607, -520,
	188, -361, -279, -306, -265, -296, -312, -313, -318, 2,
	138, -372, -584, 533, 451, 28, 457, -361, -268, 38,
	-451, -490, -491, -540, 609, -539, -493, -503, -499, -502,
	378, 382, -522, 54, 555, -505, 243, 4, -531, -533,
	240, 241, 478, 51, 402, 179, 126, 125, 342, 56,
	517, 518, 519, 520, 193, 194, 58, 556, 491, 69,
	70, -584, 533, 451, 28, 457, -361, 184, -361, 2,
	2, 155, 2, 2, 2, -265, -242, 610, 64, 428,
	155, -370, 216, -242, 155, -242, 155, -319, 216, -318,
	-242, 155, -242, 610, 155, -242, 610, 155, 607, 610,
	155, -361, 2, -413, -519, -372, 38, -427, 2, 127,
	-525, -523, 5, -639, 610, 273, -324, 288, 332, 212,
	350, 572, 343, 131, -527, 5, 4, -450, -462, 127,
	281, 243, -510, -512, 8, -511, 9, -513, 596, 597,
	-518, -517, 109, 607, -520, -239, 421, 464, 364, -238,
	24, 29, 143, 234, 317, 552, 161, -337, 235, -334,
	368, 155, 482, 542, -598, -599, 448, 512, 513, 90,
	343, 464, 364, 421, 155, -393, -395, 38, 118, 317,
	363, 61, 227, 293, 294, 485, 562, 155, 464, 364,
	421, 364, -13, -254, 24, 143, -256, -251, 464, -599,
	99, 421, 585, 581, 426, 374, 497, 391, -599, -241,
	482, 542, -598, -599, 448, 421, -240, -339, -334, 368,
	155, 609, 24, 143, 421, 464, 364, -621, -622, 29,
	421, 364, -592, -286, -563, 223, 568, 155, -286, -286,
	-476, 216, -614, 184, 2, -607, -129, 265, 5, 10,
	-528, -129, -368, 610, 610, -520, 598, 450, 449, 155,
	155, 155, 155, 184, 333, 333, 2, 2, 2, 2,
	2, 190, -601, -626, 2, 2, -296, 216, -353, 349,
	-587, -369, 505, -296, 184, 333, 43, -299, 216, 2,
	-302, 558, -592, 333, -301, 216, -296, 38, 605, 333,
	2, -413, 2, 232, -563, 333, -477, -315, -296, -472,
	-315, 464, -289, 38, -437, -296, 606, 610, -487, -487,
	-528, -202, 568, 188, 102, 605, 605, -214, 568, 568,
	-484, 610, -483, 223, -529, -130, -528, 424, -528, -587,
	-279, 2, -296, 2, 505, 254, -528, -202, 223, -528,
	-528, -528, -519, 28, 467, 2, -188, 462, 526, 89,
	467, 2, -296, 505, 120, 232, 80, -614, 184, 2,
	-265, -590, 184, -585, 436, 451, 533, -584, -296, 120,
	-296, 120, -296, 120, -296, -296, 2, 2, 2, 2,
	2, 85, 2, -133, -440, 2, 85, 2, 46, 483,
	-610, 184, 2, 524, 2, 524, 2, -265, -265, -265,
	486, 273, -296, -296, -296, -297, -302, 506, 450, -440,
	2, -628, 2, 188, 184, 2, 505, 232, 505, 232,
	120, 188, 74, 120, 28, 505, 447, -242, 610, -269,
	-226, -387, -519, -388, -387, -227, -226, -229, 184, 401,
	543, 317, 468, 258, -418, -417, 28, -440, -422, 178,
	316, -440, -420, -442, 596, 597, -511, -513, -371, 343,
	-220, -220, -220, -358, -467, -440, 391, 232, -518, -618,
	-492, -490, -490, -294, -520, 517, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, 274, 220, 470, 50, 223, -440, 521, -440,
	-440, -440, -440, 311, 333, 339, 530, 169, 540, 139,
	343, -642, 499, 40, -447, -221, -376, 605, -461, 35,
	481, 28, -454, 605, 2, -435, -440, -436, -322, -320,
	-265, 596, 597, 598, 599, 600, 601, 586, 587, 588,
	14, 15, 16, 591, 595, 593, 594, 182, 95, 590,
	289, 443, 86, 172, 173, 174, 175, 256, 257, 17,
	18, 19, 34, 589, -373, -372, -372, 606, 557, 28,
	139, 598, 2, 606, 610, 38, 606, -440, -373, -453,
	-449, -372, -460, -459, 565, -408, -409, 573, 298, 123,
	214, 296, -410, 455, -514, 8, -520, 598, -570, 177,
	207, 605, 606, 2, 606, 2, 606, -440, 2, 606,
	-440, 2, 606, -440, 2, 606, -440, 2, 606, 2,
	606, 2, -440, -440, -440, -440, -440, -440, -440, -372,
	8, -514, -514, 517, 517, -514, -514, -514, -506, 378,
	379, 380, 381, 276, 277, 278, 279, 382, 383, 384,
	385, 303, 304, 305, 306, 299, 300, 301, 302, 307,
	308, 309, 310, 198, 199, 200, 201, 194, 195, 196,
	197, -506, -402, 2, -508, -372, 4, 573, 298, 123,
	214, 296, 455, 5, -402, 2, -403, 2, -440, -372,
	-404, -441, -442, 596, 597, 589, -321, -454, -405, 2,
	-440, -373, -440, 57, 268, 523, -406, -440, 188, -372,
	-372, 2, -372, 2, -567, 38, -372, -364, 610, 188,
	38, 4, -364, -364, 605, 606, 610, -401, 211, 292,
	287, 246, -401, -471, -400, 253, -398, 359, -398, -398,
	-465, -280, 603, 611, -520, -465, -464, -463, 38, -289,
	356, -465, -465, 607, 606, -464, 604, -582, 605, 608,
	608, 608, 608, 608, -296, 605, -372, -520, 607, 488,
	2, 606, 247, 247, 247, 247, 247, 442, 606, 521,
	-586, -305, -309, 506, 2, 568, -105, 351, 606, 610,
	-363, 37, 603, 607, -514, 2, 2, -509, 559, 605,
	605, -409, 605, 188, -586, -309, 506, 2, -362, 521,
	-265, 2, -296, -370, -242, 155, -370, -370, -242, 610,
	155, -279, -300, -305, -307, -309, -265, -528, -529, -242,
	-301, -618, 606, 525, -428, -323, 401, 480, 422, 459,
	501, 8, 9, 8, 9, 610, -520, 610, -619, 93,
	521, 78, 451, -258, 282, 521, -431, 216, 78, -541,
	-282, 93, -542, -265, 72, 539, 391, 187, 153, -619,
	93, 391, -619, 93, 2, 234, 93, 464, 486, 28,
	60, -476, 41, 41, 28, -617, 331, 269, 564, 188,
	574, 505, 232, 451, 521, 521, -476, -395, -490, 118,
	293, 294, 60, -515, -510, 596, 597, -515, 60, -515,
	-515, -515, 568, -299, -476, 451, 521, 521, 521, 411,
	411, -251, -146, 521, 521, -146, 28, -189, 429, 127,
	-640, 588, 411, 610, 41, 41, 28, -617, 331, 269,
	188, 521, -318, -280, 553, 42, 553, 42, 553, 521,
	42, 451, 521, 610, 42, 521, 521, -13, 464, -593,
	-270, 105, 323, 286, 324, 97, 320, 96, 319, 103,
	321, 104, 322, 560, 336, 561, 337, 63, 318, 297,
	325, 484, 328, -271, -272, 146, 370, 551, 120, -528,
	-13, -13, 464, 364, 421, 155, -615, 223, 28, -603,
	223, -484, 223, -484, -310, -265, 607, -133, -440, -440,
	-133, -440, -133, 46, 155, 155, 2, -636, 262, 605,
	-327, 333, 188, -361, -485, 244, 610, -369, -584, 155,
	-526, -525, 116, 463, -394, -393, 333, -301, 216, 2,
	155, -351, 333, 149, 605, 399, 2, 155, -281, 216,
	-266, -265, -413, -245, 509, 155, -391, 549, -423, -133,
	605, 127, 38, -423, -380, -381, -482, -382, -282, 605,
	-289, -437, -106, -486, 606, 606, 606, -201, 353, -200,
	-265, 5, -214, 549, -326, -432, -431, -545, -546, -541,
	274, 232, 539, 246, 170, -352, -283, -282, 119, 403,
	403, -208, 568, -129, -130, 606, -484, 223, 489, -202,
	-202, -484, -484, -296, 184, -528, -202, -202, -202, 2,
	2, 2, 2, -397, -296, -279, -318, -296, 28, 607,
	-361, -361, -309, -305, -397, -279, -397, -279, -397, -279,
	-133, -440, 486, 2, 461, 184, 184, 607, -397, -354,
	431, 2, 399, 120, 505, 368, 232, -296, -318, -296,
	-318, -279, 120, -279, 121, -296, -476, -388, -227, 350,
	258, 468, -420, -421, -442, 441, 442, -421, 441, 442,
	8, 9, 8, 9, -231, 472, 338, -370, 610, -236,
	39, 135, 258, -296, -518, 574, 151, -440, -440, 521,
	-642, 499, -447, 151, -440, 311, 339, 530, 169, 540,
	139, 343, 188, 605, -441, -441, 606, -374, -440, -440,
	604, 613, 606, 607, 606, -357, 610, -355, -440, -372,
	-372, 606, 607, -372, -361, 604, 604, 610, 606, -458,
	-459, 144, -440, 521, 521, 521, 521, 605, 606, 607,
	-575, 360, 605, 605, -440, 606, 606, 606, 606, 38,
	610, 610, 610, 606, 610, 610, 610, 606, 606, 606,
	610, 606, 574, 574, 606, 606, 606, 606, 610, 606,
	610, 606, 188, 606, 606, -411, 375, 606, 11, 12,
	596, 597, 598, 599, 182, 600, 601, 594, 595, 593,
	586, 587, 588, 86, 289, 443, 14, 15, 16, -321,
	247, 223, -441, -441, -441, -441, 606, -445, -446, 188,
	184, 38, -406, -406, -406, 606, 188, -372, 606, 606,
	605, -568, 291, 333, 606, -434, -433, 566, -481, -365,
	2, -471, -291, -520, -434, -434, -372, -440, 253, 253,
	-399, 549, 349, -401, -471, -464, -516, -439, -438, 186,
	39, 135, 326, 327, 329, 219, -464, -289, -351, -464,
	-464, -520, -465, -465, -463, 606, -583, -516, 606, -366,
	-474, -562, -357, 607, -520, -211, -563, -190, 5, 339,
	-190, -190, -190, -190, -361, 521, 521, 223, 25, 376,
	-490, 603, 604, 8, -520, 605, -514, -514, -514, -361,
	188, 188, 223, 188, -526, 2, -242, -370, -242, -242,
	-318, -319, -242, -242, -242, -392, 568, -517, -427, 537,
	83, 401, 517, -517, -238, 421, -282, -282, -296, -306,
	202, 412, -526, 333, -431, 216, -244, 333, -490, -290,
	-265, 605, -415, 570, 258, 258, 549, -282, -290, 258,
	216, -282, 216, -290, 2, -290, -594, 401, 344, -440,
	60, -335, 280, 399, 334, -239, 421, 464, 364, -133,
	-133, -133, -133, -133, 605, -618, 549, 138, -296, -318,
	-296, -306, -526, -301, 464, 364, 421, 330, -312, -515,
	-515, -393, 464, 364, 421, -306, -526, -299, -526, -250,
	216, -265, -250, 216, 451, -279, 411, 574, 45, -640,
	-240, -133, -133, -133, -133, -133, 605, -280, -241, 421,
	5, 216, -282, 5, -282, 216, 5, -265, -282, -306,
	-526, -622, 24, 143, -282, -306, -526, -270, 370, -528,
	339, 545, -279, -592, -286, 451, 521, 521, -476, -611,
	-612, 204, 434, 451, 437, -361, -129, -205, 568, -129,
	-199, 228, 598, -589, -528, -265, 558, -265, -325, -328,
	-326, -282, -217, -218, 570, 568, 155, -316, -296, 603,
	-202, -528, -296, -485, -307, -308, 155, -351, 333, -528,
	38, 155, 605, 2, 2, -300, 349, 333, -281, 216,
	-246, 145, -640, -279, -434, -365, -390, -425, 431, 349,
	-352, 554, -289, -390, -367, 610, 188, 588, 607, -352,
	-480, 598, -106, -106, -202, 610, 605, 588, 588, 605,
	-528, -528, 606, 610, -244, -296, -281, 232, 232, -288,
	-266, 606, 610, 607, 605, 588, 588, -210, 353, -209,
	147, 260, 245, 474, 475, 476, 477, 137, 473, 124,
	-484, -208, -130, 188, 188, -65, 568, 505, -202, 609,
	437, -265, -397, -397, -397, 461, 461, -265, -361, -292,
	-279, -296, -293, -318, 184, 184, -279, 543, -421, 350,
	285, -467, -237, 576, -296, 609, -440, -440, 151, 151,
	-440, -441, -441, -440, 151, 188, 605, -440, -451, 33,
	33, 606, 610, -436, -440, -320, 606, 557, -357, -357,
	606, 598, -520, 609, 606, -449, 148, -440, 515, 298,
	214, 296, -410, 296, -410, -410, -514, 5, -520, 598,
	-576, -285, 605, -265, 566, -356, 355, 606, -492, -490,
	-440, -440, -440, -440, -440, -514, -495, -495, -510, -510,
	-440, -445, -440, -492, -490, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, 139, 333, 343, -441, -446,
	-445, -440, -440, -490, 606, 606, 606, -372, -105, 605,
	291, -384, 207, -440, -484, 610, -384, -384, 606, -471,
	-471, 605, -440, 253, 604, 610, 612, 588, -351, 607,
	-463, -464, 604, 606, 610, 606, 610, -424, 38, 606,
	-520, -434, -213, -212, 136, 53, 107, 134, 339, -361,
	-361, 451, 352, 5, 8, 603, 604, 607, -514, 606,
	606, 606, -361, -361, 451, -361, -242, -242, 119, 317,
	-440, 521, 521, 60, 223, 155, 333, 551, -547, -542,
	153, -440, 605, 232, 605, 605, 2, -233, -234, -235,
	143, 464, 24, -620, 2, 549, 155, -242, 155, -242,
	572, -335, 605, 605, 521, 451, -258, 521, 568, -372,
	-440, -203, 127, -519, -599, 609, -599, 609, 451, 521,
	521, 451, 521, 521, 333, 155, 568, 168, 168, 574,
	-250, 568, -372, 521, -494, 48, 26, 333, -300, -242,
	155, 521, 521, 533, 464, -528, -528, 339, -13, -306,
	-526, -301, 464, 364, 421, -591, -362, -591, 204, -309,
	-615, -484, -207, 353, -206, 147, 433, 137, 260, 225,
	-484, -205, 188, 244, 568, -301, 2, 606, 606, 610,
	-548, 38, 347, 347, 605, -296, -86, 568, -483, -516,
	-595, 568, 43, -299, 38, 155, -592, -133, -301, -488,
	-489, 5, 38, -296, 155, 349, 333, -247, 267, -640,
	-524, -563, -357, -390, -379, 334, 91, 606, -434, -381,
	-365, -440, 2, 606, -200, -201, -528, -528, -528, -202,
	-214, -214, -432, -329, 605, -281, -266, 605, -214, -283,
	2, -529, -528, -528, 610, 605, 588, 588, 588, 588,
	-208, -484, -129, -133, 353, -296, 598, -397, -341, -340,
	368, 343, -341, 441, 441, 350, 178, 263, -236, -280,
	-440, -440, 151, 33, 33, -440, -440, -451, 606, -440,
	-440, -372, 604, 5, -440, 606, 606, 8, -440, 606,
	607, -577, -265, -440, 606, 60, 606, 606, 610, 610,
	606, 606, 606, 606, 606, 606, 606, -446, 188, 139,
	343, 605, 606, 606, -105, -448, 210, 60, -471, -448,
	-448, -399, -361, -471, -438, -280, 603, -520, -516, -474,
	605, 607, -212, 588, -528, -528, 568, -309, 604, 2,
	603, -520, 606, -309, 119, -282, -282, 505, 441, -250,
	391, -431, 155, -549, 93, -551, 76, 170, 102, 333,
	339, 539, 391, 72, 127, 349, 408, -630, -631, -632,
	38, 579, 580, 606, -359, -468, -562, 605, -265, -359,
	-361, 333, 494, 127, 349, 333, 127, 349, 563, 119,
	2, 533, 79, -282, -290, -361, -361, -296, -306, -526,
	162, 606, 610, 588, 2, 598, 598, -306, -526, -301,
	-306, -526, -299, 155, -250, 366, 168, 162, 606, -280,
	5, 5, 155, -277, 76, -282, 5, -282, -300, 119,
	451, 521, 521, 349, 349, 352, -611, -612, -205, 610,
	605, 588, 588, -205, -529, -129, 2, -351, -342, 234,
	-282, -546, -543, -544, 391, -550, -552, 170, 391, -133,
	2, -216, -215, -265, 5, 605, -327, 353, 604, -597,
	353, -596, 117, 137, -526, -394, -133, -301, -351, 606,
	610, 149, -416, 549, -280, -296, 155, -248, 266, -640,
	-524, -245, -419, -417, 140, 605, 349, -133, -357, 588,
	606, 606, 119, 119, 226, 154, -359, 605, 605, -361,
	119, 606, -209, -210, -528, -129, -528, -528, -208, -484,
	-66, -67, 232, 93, 373, -293, 505, 232, 605, 605,
	-236, -440, -440, -440, 606, -357, -520, 598, -571, 368,
	606, -467, -440, -440, -441, 188, 605, -451, 606, -572,
	567, -440, -385, -386, -440, 439, 108, 208, -572, -572,
	606, -516, 2, -528, 2, 521, 603, 2, 188, 223,
	38, 411, -431, -290, -294, -287, -265, 170, 216, 339,
	563, -415, 258, 605, -441, 543, -296, 605, 2, 215,
	215, 30, 60, -633, 131, 237, 606, 610, -469, -276,
	-265, -440, -469, 606, 606, 339, 543, 339, 563, -440,
	543, -490, 605, -242, -242, 606, 606, -440, 521, -519,
	100, -517, 2, -599, -250, -279, -440, 521, 5, -242,
	-294, -242, -242, -277, 533, -306, -526, -301, -616, 506,
	458, 534, 452, 191, 440, -616, 184, -206, -207, -528,
	-129, -205, 38, -332, 236, 2, -548, 258, -287, 258,
	-629, 568, 606, 610, 588, 588, -325, -217, -87, -88,
	522, -483, 610, 605, 588, -351, 38, 5, 605, 605,
	-265, 349, 605, -280, -260, 92, -640, -524, -246, -390,
	334, -361, 93, -419, -447, -202, 605, 605, -330, 81,
	94, 128, 215, 192, 233, 486, 492, 28, -330, 606,
	-359, -359, 606, 605, -202, 606, 610, 28, 605, 28,
	605, -296, -318, -372, -372, 606, -357, 60, 610, 606,
	606, -441, -451, 606, -573, -574, -285, 610, 605, 605,
	465, 604, -361, 2, -361, -250, 391, -265, -551, -287,
	333, 549, -440, -441, -267, 605, -440, 605, 605, 38,
	127, 237, 132, 221, -430, -634, 101, 495, 224, -468,
	-236, 606, -429, 549, 408, -441, -277, -359, 605, 605,
	605, 588, 188, 605, -494, -242, -300, 521, 2, 2,
	188, -591, 606, -605, 406, -133, -336, -337, 223, 605,
	-331, 349, 119, 317, -215, -517, -517, 606, 38, -88,
	9, -596, -597, -440, 38, -133, -488, -359, -296, -359,
	349, -252, -251, 275, -524, -247, 606, -290, -390, -529,
	-529, -429, 606, 606, -529, -67, -361, -361, 606, 606,
	-578, 399, 442, 209, -372, -358, 606, 610, 38, -386,
	2, 2, 2, 411, 155, 211, 606, -553, 290, -265,
	606, -394, -394, 38, 132, 221, -332, 605, -237, -469,
	-332, 211, -296, -600, 549, 606, -344, -343, -340, -346,
	-345, -340, -372, -517, 100, 366, -372, -277, -361, -361,
	349, -608, 189, -607, 5, 10, -217, 366, -360, -470,
	-282, 82, 119, -342, -133, 606, -133, 606, 606, -416,
	606, -296, -249, -530, 411, 413, -640, -248, -434, 606,
	606, -430, -429, -338, -334, 606, 606, 606, 606, -579,
	-580, 50, 536, 109, -440, -579, -579, -574, -576, 170,
	568, -554, -557, -556, 584, 471, 189, 367, 606, 494,
	562, 606, 606, -338, -361, 568, -351, -440, -429, 606,
	610, 554, 606, 610, 554, 606, 188, 606, -242, -613,
	568, -242, -616, -204, 568, 46, -331, -296, 606, 610,
	390, 133, 143, -332, -629, -429, 605, -430, 605, -257,
	-256, -640, -510, -260, 140, -202, -202, -332, -430, -218,
	568, -202, -581, 153, -580, 387, 183, 441, 387, 183,
	-581, -581, -287, 55, -556, 584, -557, 584, 543, 133,
	-633, 606, 55, -553, -332, -343, 223, -345, 188, 366,
	204, 188, 449, -607, 30, -259, -258, 605, -470, 442,
	442, 2, -336, -331, -430, -359, -332, -359, -253, -254,
	-255, -361, -252, 334, 543, -338, -332, -434, 109, 207,
	516, 317, 33, 588, -555, 317, 428, 64, 464, -555,
	-434, 588, -554, 605, 605, 352, -361, 353, -361, 2,
	-217, -332, 606, -338, 606, -249, 464, -218, -338, 441,
	357, -580, -440, 23, 339, 127, -440, -633, -372, -372,
	-242, -201, 605, 606, -331, -338, -429, -218, -430, -257,
	-380, -434, -218, 606, 606, -201, -243, 64, 428, -259,
	-218, -430, -434, -332, -253, -434, -434, -333, -334, 521,
	606, -434, -332, -338, 605, -338, -218, -372, -218, -434,
	606, -434, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 553, 554, 556, 557, 558, 560,
	561, 563, 565, 567, 568, 569, 571, 572, 574, 575,
	576, 577, 578, 580, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	649, 651, 0, 1419, 1421, 1423, 1425, 0, 806, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 0, 369,
	371, 372, 374, 376, 377, 378, 380, -2, 0, 486,
	487, 489, 491, -2, 0, 1016, 1018, 0, 638, 640,
	0, 1021, 1023, 0, 0, 661, 662, 0, 1530, -2,
	653, 655, 657, 659, 731, 733, 735, 737, 739, 741,
	743, 745, 747, 749, 750, 752, 754, 756, 758, 760,
	761, 763, 765, 767, 768, 770, 771, 773, 775, 777,
	779, 781, 783, 785, 787, 789, 791, 793, 795, 797,
	-2, 800, 801, 802, -2, -2, 0, -2, -2, -2,
	1437, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 430, 432, 434, 436, 438, 441, 443, 445, 1588,
	493, 495, 497, 499, 501, 503, 505, 0, -2, 1602,
	0, 0, 0, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 109, 110, 111, 112, 113, 114,
	115, 116, 75, 76, 77, 79, 80, 81, 82, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 107,
	73, 0, 0, 1561, 1563, 1565, 1567, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 555, 559, 562, 564, 566, 570, 573, 579,
	581, 583, 538, 539, 542, 2297, 2315, 2316, 2317, 2320,
	2321, 2322, 2323, 2324, 2325, 2786, 2867, 2868, 2347, 2348,
	2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 540, 541, 1202,
	0, 607, 605, 2282, 608, 2580, 610, 612, 480, 481,
	482, 483, 484, 485, 0, 631, 621, 1600, 632, 634,
	635, 636, 637, 602, 600, 0, 631, 2351, 629, 1417,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 409, 1262, 1263, 1264, 1402, 1403, 2627, 1444,
	0, 234, 650, -2, -2, 2751, -2, 686, 687, -2,
	-2, 701, 704, 696, 2755, 0, 2630, 2614, -2, 707,
	1420, 1422, 1424, 804, 805, 2301, 0, 0, 0, 0,
	0, 38, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 244, -2, -2, -2, -2, 0, 0, 2676,
	2403, 2250, 2317, 2253, 2248, 338, 340, 342, 343, 0,
	0, 0, 0, 0, 0, 370, 373, 375, 379, -2,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1079, 1071, 1072, 1324, 0, 0, 0,
	-2, 488, 490, 543, 544, 0, 1589, 1589, 551, 552,
	-2, 0, 0, 0, 0, 308, 296, 1017, 1019, 1020,
	0, 0, 0, 0, 639, 641, 0, 0, 276, 1022,
	1024, 1025, 0, 0, 0, 0, 0, 310, 0, 0,
	654, 656, 658, 660, 732, 734, 736, 738, 740, 742,
	744, 746, 748, 751, 753, 755, 757, 759, 762, 764,
	766, 769, 772, 774, 776, 778, 780, 782, 784, 786,
	788, 790, 792, 794, 796, 798, 799, 812, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 912, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 997, 0, 0, 815, 817, 818, 819, 820,
	821, 822, 823, 0, 885, 910, 911, 921, 803, 0,
	1242, 1590, 1446, 1427, 1441, 1446, 1429, 1430, 1431, 1432,
	1433, 1438, 1440, 1434, 1435, 1436, 42, 44, 46, 48,
	50, 52, 54, 56, 58, 60, 431, 433, 435, 437,
	439, 442, 444, 446, -2, 1559, 1560, 494, 496, 498,
	500, 502, 504, 506, 642, 0, 644, 0, 816, -2,
	0, 1594, 1594, 1594, 0, 0, 1560, 1558, 0, 0,
	0, 647, 648, 711, 712, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 2124, 1952, 0, 713, -2, 1985,
	1987, 2726, 2553, 2751, 2123, 1989, 1990, 1991, 1992, 1993,
	0, 1995, 1996, 1997, 1998, 1999, 2000, 0, 2002, 0,
	2007, 2008, 2009, 0, 2733, 2227, 2311, -2, 0, 0,
	2739, 2307, 0, 2090, 2025, -2, -2, 2334, 2313, 1796,
	1797, 1798, 1799, 1800, -2, -2, 2769, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 0, 2714,
	2734, 2735, 2740, 2742, 2736, 2723, 2050, 2417, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1823, 1832, -2, -2, -2, -2, -2, -2, -2,
	2727, 2728, 2745, 2748, 2754, 2759, 2760, 2732, 2741, 2768,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 1824, -2, -2, -2,
	-2, 1577, 2594, 1580, 1202, 1578, 1562, 1564, 0, 1566,
	0, 0, 0, 1571, 1597, 1595, 0, 1646, 1575, 1576,
	1666, 1666, 1690, 0, 1671, 0, 1690, 1589, 1717, 0,
	1677, 2619, 2026, 2027, 0, 2317, 2312, -2, -2, 2766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	0, 609, 611, 0, 0, 0, 630, 1599, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 414, 415, 416,
	2734, 0, 0, 0, 421, 0, 423, 424, 425, 426,
	427, 428, 429, 205, 2734, 511, 536, 0, 205, 2734,
	514, 205, 2734, 517, 0, 520, 1322, 205, 2734, 523,
	2278, 205, 2734, 526, 528, 2286, 205, 2734, 532, 2293,
	2291, 533, 2734, 535, 313, 311, 312, 2330, 2331, 2338,
	2339, 2340, 2341, 2767, 2769, 1413, 1414, 1415, 1416, 0,
	1443, 1323, 652, 0, 678, 0, 684, 685, 2722, -2,
	0, 2639, 689, 690, -2, 692, 1447, 1451, 1452, 1453,
	1454, 1455, 0, 0, 0, 0, 1460, 0, 0, 0,
	0, 679, 680, 699, 700, 705, 708, 0, 807, 808,
	809, 810, 811, 72, 0, 2734, 1717, 74, 0, 2272,
	2342, 2343, 2344, 2345, 2346, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861,
	2862, 2863, 2864, 2865, 2866, 78, 0, 2734, 83, 0,
	2734, 0, -2, 96, 0, 108, 0, 2275, 117, 0,
	2734, 0, 2247, -2, 0, 217, 297, 298, 299, 0,
	1046, -2, 2734, 1255, 1257, 1257, 0, -2, 0, 0,
	0, 1007, 2244, 2249, 1008, 2268, 1009, 2254, 0, 344,
	345, 346, 347, 348, 0, 349, 2734, 351, 352, 0,
	354, 355, 2734, 357, 358, 0, 360, 0, 256, 262,
	2734, 2734, 383, 385, 0, 387, 388, 0, 390, 0,
	0, 0, 394, -2, 410, 0, 407, 397, 398, 400,
	401, 402, 403, 404, 0, 450, 448, 2283, 0, 0,
	-2, 2734, 0, 1043, 0, 0, 1302, -2, 2734, 1248,
	0, 1309, 2734, 1305, 0, -2, 0, 1587, 2734, 1464,
	1075, 1076, 1077, 1078, 1729, 477, 0, 1495, 0, 1497,
	0, 1516, 1723, 1666, 0, 0, 1728, 0, -2, 596,
	2300, -2, 546, 0, 547, 0, -2, 0, 325, 0,
	0, 1026, 1028, 1029, 1031, 1032, 1035, 1036, 1037, 1038,
	1703, 277, 279, 0, 0, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 0, 0, 663, 0, 0, 813,
	814, 0, 0, 828, 829, 830, 0, 325, 2631, 2589,
	2439, 837, 0, 840, 843, -2, 0, 0, 0, 0,
	847, 0, 852, 853, 854, 0, -2, 0, 861, 863,
	1015, 865, 0, 0, 867, 0, 871, 0, 874, 0,
	876, 0, 878, -2, -2, -2, 886, 887, -2, 892,
	-2, 0, 896, -2, 0, 899, 0, 902, -2, 0,
	912, 908, 909, 0, 0, 0, 0, 929, 930, 0,
	939, 0, 942, 943, 944, 0, 948, 949, 0, 951,
	952, 953, 954, 0, 2704, 2636, 2403, 0, 960, -2,
	966, 968, 0, -2, 0, 984, 0, 988, 0, 0,
	996, 0, 0, 824, 825, 205, 1721, 1426, -2, 1428,
	0, -2, 0, 643, 0, 646, 1619, 1545, 1542, 0,
	1616, 1617, 1546, 0, 0, 0, 1553, 0, 1592, 1593,
	0, 0, 0, 1532, 1533, 0, 0, 0, 0, 0,
	0, 2129, 2130, 2131, 2132, 2145, 2133, 2134, 2144, 2142,
	2143, 2135, 2136, 2141, 2155, 2156, 2146, 2147, 2137, 2150,
	2148, 2149, 2151, 2152, 2153, 2154, 0, 0, 2160, 0,
	2138, 2139, 2140, 2168, 0, 0, 2169, 0, 2171, 0,
	2161, 2157, 2158, 2159, 0, 1931, 1933, 2235, 0, 0,
	0, 2167, 2162, 2163, 1869, 1870, 1871, 1872, 1873, 1906,
	1910, 1911, 0, 0, 1986, 2232, 2231, 1988, 0, 0,
	2183, 0, 2001, -2, 0, 2124, 2178, 0, 0, 2010,
	2011, 2012, 0, 0, 2183, 0, 0, 2226, 2022, 2023,
	1861, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1809, 0, 1811, 0, 1812, 1813, 1820,
	1833, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 2207, -2, 0, 0, 0, 0, 1825,
	0, 1579, 0, 0, 1650, 2236, 2240, 2241, 1650, 1650,
	0, 0, 2184, 1714, 1714, 0, 0, 1709, 1709, 1709,
	1707, 1690, 0, 1690, 1700, 0, 1690, 1690, 0, -2,
	1671, 0, 0, 1700, 0, 1684, 584, 586, 588, 590,
	591, 592, 594, 1718, 1719, 0, 0, 0, 0, 2318,
	0, 0, 0, 0, 2290, 0, 0, 2303, 0, 366,
	0, 0, 0, 2687, 2630, 0, -2, 614, 633, 1589,
	0, 2186, 1744, 1748, 0, 1750, 1751, 1752, 1753, 1754,
	0, 0, 1745, -2, 1821, 1823, 1844, 2335, 2336, 2337,
	1804, 1805, 1806, 1807, 1808, 1816, 1803, 1803, 1803, 1814,
	1843, 1835, 1843, 1839, 1789, 1790, 1791, 1826, 1827, 1828,
	1829, 0, 2687, 2630, 0, -2, 623, 0, 0, 1527,
	411, 0, 418, 419, 420, 0, 507, 0, 203, 204,
	0, 205, 2734, 512, 0, 515, 0, 205, 2734, 2242,
	521, 0, 524, 0, 0, 530, 0, 0, 0, 0,
	0, 205, 1529, 0, 0, 0, 0, -2, 694, 702,
	703, 224, 225, 0, 1449, 0, 1456, 722, 723, 724,
	1458, 1459, 0, 1461, 697, 725, 726, 727, 728, 729,
	730, 0, 2256, 2257, 2258, 2259, 2262, 2263, 0, 0,
	695, 715, 698, 0, 709, 118, 1399, 0, 0, 161,
	0, 1399, 1399, 0, 0, 0, 0, 188, 0, 1114,
	0, 0, 0, 0, 133, 146, 157, 130, 131, 0,
	0, 0, 0, 0, 0, 84, 1224, 0, 1227, 0,
	0, 0, 0, 0, 0, 0, 1240, 0, 0, 0,
	0, 0, 98, 99, 0, 0, 104, 105, 0, 145,
	0, 0, 0, 0, 0, 0, 1492, 0, 140, 120,
	0, 0, 133, 147, 159, 0, 192, 194, 1111, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 226, 0,
	0, 0, 1249, 0, 0, 0, 1586, 0, 0, 0,
	0, 2734, 1397, 0, 1382, 0, 1703, 2488, -2, -2,
	277, 1703, 1006, 0, 0, 2318, 2252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 389, 391, 392,
	393, 0, 1301, 0, 399, 440, 1173, 2734, 0, 0,
	467, 462, 0, 464, 0, 0, 0, 1223, 2734, 1221,
	2287, 0, 1246, 0, 1202, 2734, 2285, 0, 0, 0,
	1310, 2327, 1319, 1323, 1482, 0, 479, 0, 1498, 1500,
	0, 0, 1724, 0, 1726, 1666, 1589, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 1702, 0, 0, 1703, 277, 2605, 325, 325,
	1703, 665, 1703, 667, 0, 0, 831, 832, 0, 325,
	325, 325, 838, 839, 841, 842, -2, -2, -2, -2,
	844, 845, 936, 0, 0, 0, 935, 855, 0, 857,
	860, 864, 0, 1000, 2614, 2630, 2687, 1013, 936, 2403,
	936, 2403, 936, 2403, 875, 877, 880, 924, 932, 891,
	898, 0, 893, 897, 900, 903, 0, 905, 913, 0,
	-2, 0, 916, 0, 918, 0, 920, 936, 937, 940,
	947, 950, 955, 956, 957, 958, 2298, 959, -2, 963,
	964, 0, 975, 980, 981, 977, 0, 0, 0, 0,
	0, 0, 991, 992, 0, 0, 999, 1241, 0, 1439,
	1619, 1545, 645, 1536, 1618, 1537, 1544, 1547, 0, 0,
	1549, 0, 1551, 0, 1614, 1615, 1622, 1623, 0, 1633,
	1634, 1626, 0, -2, 0, 0, 1629, 1630, 1555, 0,
	1572, 1573, 1574, 1603, 1606, 1338, 0, 2867, 682, 0,
	1865, 1739, 1866, 1867, 2271, 0, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, -2, -2, -2, -2,
	-2, -2, -2, -2, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, -2, -2, -2, 1907, 1908,
	1909, -2, 2170, 2172, 0, 2235, 0, -2, 0, -2,
	-2, -2, -2, 1928, 0, 1930, 1935, 1937, 1939, 0,
	0, 0, 0, 2234, 1949, 2218, 2219, 0, 0, 2126,
	2127, 2128, 1934, 0, 1953, 2233, 2230, 0, 0, 2164,
	0, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 0, 2182, 1602, 2014, 0, 0,
	0, 0, 2021, 2006, 2180, 0, 2179, 0, 0, 0,
	2190, 0, 2225, 2221, 0, 2269, 1860, 1847, 1848, 1849,
	1850, 1851, 1852, 1862, 0, 2266, 2304, 2310, 2100, 0,
	0, 0, 2051, 2052, 2053, 2054, 2055, 0, 2057, 2058,
	0, 2060, 2061, 0, 2063, 2064, 0, 2066, 2067, 2068,
	2069, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 0, 0, 2072, 0, 2193, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2074, 0, 2076, 2184, 2204,
	0, 0, 1954, 0, 0, 0, 0, 2124, 0, 2079,
	2184, 2212, 0, 0, 0, 0, 0, 2184, 0, 2217,
	0, 2086, 0, 2088, 1581, 0, 0, 1734, 0, 0,
	0, 2239, 1734, 1734, 0, 1645, 0, 0, 1710, 1711,
	1712, 1713, 0, 0, 1714, 0, 1704, 1708, 1705, 1706,
	1700, 1663, 0, 0, 2273, 1700, 1669, 1699, 0, 1202,
	1689, 1700, 1700, 0, -2, 1673, 1690, 0, 0, 585,
	587, 589, 593, 595, 0, 0, 1602, -2, 0, -2,
	327, 1201, 0, 0, 0, 0, 0, 604, 606, 0,
	0, 527, 0, 0, 620, 0, 598, 0, 601, 0,
	1735, 1738, 0, 0, 1749, 1755, 1756, 0, -2, 0,
	0, 1845, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 422, 537, 205, 509, 0, 205, 205, 518, 0,
	0, 205, 529, 205, 2294, 205, 2292, 314, 534, 1528,
	237, 0, 681, 0, 1448, 1457, 0, 719, 0, 721,
	0, 2260, 2264, 2261, 2265, 0, 710, 0, 0, 0,
	0, 1398, 0, 1345, 0, 0, 165, 2734, 0, 207,
	0, 0, 1166, 2279, 0, 1156, 0, 0, 2425, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 1226, 1228,
	1235, 1237, 0, 1231, 2267, 0, 0, 1232, 0, 1234,
	1236, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 1258, 0, 0, 1259, 1260, 1261, 1470, 1471,
	0, 1491, 1492, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 2246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 1297,
	1295, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 0, 0, 0, 0, -2,
	1253, 1254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 316, 2245, 2255, 0, 1033, 1034, 350,
	353, 356, 359, 243, 0, 0, 395, 0, 0, 1081,
	1056, 0, 0, 449, 325, 0, 0, 463, 467, 2296,
	1041, 221, 222, 223, 1219, 1222, 0, 1202, 2734, 1270,
	0, 0, 0, 0, 0, 0, 1308, 0, 0, 2734,
	2274, 2326, 2327, 1484, 1492, 0, 1734, 0, 1514, 1501,
	0, 0, 0, 1514, 1518, 1519, 1521, 1522, 0, 0,
	1725, 1731, 545, 597, 1589, 1589, 325, 323, 2556, 321,
	318, 320, 0, 0, 0, 1082, 1084, 1085, 1086, 207,
	0, 2327, 1156, 2477, 2327, 0, 1504, 1506, 0, 0,
	0, 271, 0, 280, 1703, 278, 283, 0, 0, 0,
	461, 664, 669, 826, 0, 325, 834, 835, 836, 882,
	926, 934, 979, 846, 848, 849, 850, 0, 0, 0,
	1014, 1010, 1011, 1012, 866, 936, 869, 936, 872, 936,
	895, 901, 914, 907, 915, 0, 0, 0, 928, 945,
	0, 962, 0, 0, 0, 0, 0, 0, 0, 985,
	986, 987, 989, 994, 993, 998, 1722, 1540, 1541, 1543,
	0, 1552, 0, 0, 1628, -2, -2, 1627, 1631, 1632,
	-2, -2, -2, -2, 1548, 0, 1557, 1554, 0, 1613,
	1336, 1337, 0, 0, 683, 0, 0, -2, -2, 0,
	0, 0, 1950, 0, -2, 1929, 1932, 1936, 1938, 1940,
	0, 0, 0, 0, 0, 0, 2173, 0, 2175, 1951,
	2228, 2231, 2166, 0, 2122, 0, 0, 1601, 1602, 1602,
	0, 2020, 0, 2181, 0, 2188, 2189, 0, 2013, 0,
	2222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 0, 2056, 2059, 2062, 2065, 0,
	0, 0, 0, 2045, 0, 0, 0, 2049, 1815, 1801,
	0, 1843, 1841, 1842, 1836, 1843, 1840, 1793, 0, 1792,
	0, 2071, 0, 2073, 2075, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 1958, 1959, 1979, 2078, 2210, 2211, 0,
	0, 0, 0, 0, 0, 2084, 0, 2216, 2085, 2087,
	1589, 0, 1582, 0, 1647, 1636, 1733, 0, 2237, 1703,
	1649, 1651, 2238, 2276, 1636, 1636, 0, 2185, 0, 0,
	1694, 0, 0, 0, 1696, 1667, 0, 0, 1661, 0,
	1655, 1656, 1657, 1658, 1659, 1660, 1668, 1202, 1698, 1670,
	1674, 2304, 0, 1700, 0, 1685, 0, 1687, 1720, 0,
	1679, 1682, 0, 0, 2319, 1734, 0, 361, 367, 368,
	362, 363, 364, 365, 613, 0, 0, 0, 0, 0,
	2187, 0, 1740, 0, 1746, 0, 0, 0, 0, 622,
	0, 0, 0, 0, 1526, 417, 508, 205, 513, 516,
	2243, 205, 522, 525, 531, 233, 0, 677, -2, 717,
	718, 720, 0, 716, 162, 1399, 0, 0, 1341, 1343,
	1347, 1353, 1356, 0, 167, 2734, 179, 0, 1130, 0,
	2277, 0, 0, 0, 0, 0, 0, 1401, 0, 0,
	2734, 205, 2734, 205, 182, 184, 187, 0, 191, 189,
	0, 1118, 0, 0, 1121, 119, 1399, 0, 0, 122,
	126, 134, 135, 138, 0, 0, 0, 144, 0, 0,
	0, 1358, 1362, 1370, 0, 0, 0, 1229, 1230, 1233,
	1239, 85, 0, 0, 0, 1366, 1368, 1374, 97, 100,
	2734, 2288, 102, 2734, 0, 1340, 0, 0, 0, 0,
	193, 124, 128, 136, 137, 139, 0, 1376, 121, 0,
	220, 0, 0, 210, 205, 2734, 0, 212, 0, 213,
	214, 227, 0, 0, 0, 1044, 1045, 1296, 0, 1244,
	1245, 0, 1256, 1250, 0, 0, 0, 0, 0, 1378,
	1379, 0, 0, 0, 1397, 1394, 1703, 239, 0, 1703,
	247, 0, 2251, 0, 263, 382, 0, 0, 0, 0,
	1080, 1184, 0, 1051, 0, 0, 0, 455, 451, 0,
	460, 466, 465, 471, -2, 0, 0, 0, 0, -2,
	0, 0, 1312, 1306, 1307, 0, 0, 0, 0, 2734,
	1486, 1492, 0, 1587, 1602, 478, 1493, 1514, 0, 0,
	0, 1503, 1499, 1496, 1734, 0, 0, 0, 0, 0,
	1727, 1730, 548, 549, 300, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 1087, 1091, 0, 2327, 2327, 0,
	2281, 0, 0, 0, 0, 0, 0, 281, 0, 284,
	0, 0, 0, 289, 290, 291, 292, 293, 294, 0,
	283, 273, 1703, 0, 0, 666, 0, 0, 833, 0,
	856, 859, 868, 870, 873, 917, 919, 936, 946, 969,
	970, 1108, 0, 1108, 0, 0, 990, 1550, 0, 1625,
	1556, 1607, 1608, 0, 1338, 0, 1868, 1913, 0, 0,
	-2, 0, 0, 1917, 0, 0, 0, -2, 0, 0,
	0, 2174, 2176, 0, 2230, 2165, 2015, 0, 0, 0,
	2019, 2003, 2004, 0, 2125, 2191, 2220, 2224, 0, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 0, 2270, 2305, 2309,
	2098, 2099, 2103, 2284, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 1838, 0, 0,
	2192, 2203, 2205, 1955, 1956, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, -2, -2, -2, 1973, 1974,
	1975, -2, -2, -2, 1980, 0, 0, 0, 2206, 2208,
	2209, 2213, 2214, 0, 2081, 2082, 2083, 2215, 0, 1589,
	1583, 1644, 0, 1732, 1648, 0, 1644, 1644, 1596, 1692,
	0, 0, 1716, 0, 1664, 0, 1665, 0, 1697, 0,
	1672, 1675, 1676, 1686, 0, 1678, 0, 1681, 0, 2015,
	-2, 326, 328, 330, 0, 333, 334, 0, 0, 616,
	617, 0, 615, 599, 0, 0, 1742, 0, 0, 1818,
	1822, 1846, 625, 626, 0, 624, 510, 519, 235, 0,
	1701, 0, 0, 0, 0, 0, 0, 206, 1128, 1165,
	0, 0, 0, 1155, 0, 0, 1171, 169, 170, 171,
	0, 0, 0, 0, 180, 0, 0, 177, 0, 186,
	190, 1115, 0, 0, 0, 0, 1346, 0, 0, 0,
	141, 142, 143, 0, 148, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1476, 1477, 0,
	1467, 0, 0, 0, 208, 0, 0, 0, 1335, 229,
	0, 0, 0, 0, 0, 1243, 1299, 1300, 1252, 1359,
	1363, 1371, 0, 0, 0, 0, 631, 0, 636, 1396,
	0, 247, 245, 0, 248, 0, 251, 252, 0, 254,
	247, 241, 0, 0, 0, 1202, 396, 1054, 1172, 0,
	1174, 0, 1052, 0, 0, 1173, 447, 0, 454, 0,
	468, 0, 0, 1223, 0, 0, 1247, 1268, 1202, 0,
	1311, 1313, 0, 1321, 0, 0, 0, 1488, 1492, 0,
	1481, 1482, 1621, 1494, 1512, -2, 0, 0, 1602, 1520,
	1517, 1523, 1524, 0, 322, 0, 317, 319, 0, 303,
	0, 0, 1083, 1088, 0, 0, 0, 0, 0, 1505,
	1507, 0, 1027, 1030, 0, 0, 0, 0, 0, 0,
	272, 283, 1703, 309, 0, 827, 851, 927, 971, 1107,
	0, 0, 973, 0, 0, 1624, 1611, 1612, 1609, 1338,
	1915, 1919, 0, 0, 0, 1921, -2, 0, 1943, -2,
	-2, 2177, 2229, 1994, 1602, 2016, 2018, 2005, 2223, 1863,
	0, 2105, 2102, 0, 2089, 0, 2040, 2041, 0, 0,
	2044, 2046, 2047, 2048, 1802, 1795, 1794, 2202, 0, 0,
	0, 0, 2080, 1584, 0, 2094, 0, 0, 1652, 2094,
	2094, 1693, 0, 1695, 1662, 1653, 0, 2305, 1688, 1680,
	0, 0, 331, 0, 335, 336, 0, 0, 1736, 1741,
	0, 1747, 1817, 0, 236, 163, 164, 1350, 1354, 1351,
	0, 166, 0, 1129, 0, 1132, 0, 0, 0, 0,
	1139, 1156, 0, 0, 0, 0, 0, 0, 1158, 0,
	1157, 0, 0, 1188, 0, 1326, 1333, 0, -2, 0,
	0, 0, 173, 196, 0, 0, 0, 0, 199, 1400,
	175, 0, 0, 205, 205, 0, 0, 1342, 1344, 1357,
	0, 0, 0, 0, 151, 0, 0, 1360, 1364, 1372,
	1367, 1369, 1375, 0, 103, 0, 1478, 0, 0, 1377,
	218, 219, 0, 205, 0, 205, 211, 205, 1335, 0,
	0, 0, 0, 0, 0, 0, 1380, 1381, 238, 0,
	0, 0, 0, 240, 315, 247, 384, 0, 1102, 0,
	1184, 1176, 1177, 1178, 0, 1183, 1185, 0, 0, 1068,
	1053, 0, 1064, 0, 0, 1081, 1056, 0, 452, 469,
	0, 472, 0, 475, 1042, 1220, 1265, 1202, 0, 1303,
	0, 0, 0, 0, 0, 0, 0, 1490, 1492, 0,
	1483, 1484, 1514, 1620, 0, 0, 0, 1502, 1621, 0,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 285, 0, 286, 287, 288, 295, 274, 275,
	668, 670, 0, 0, 676, 1106, 0, 0, 0, 0,
	1610, 1923, -2, -2, 1944, 0, 2306, 2308, 1602, 0,
	2091, 1604, 0, 0, -2, 0, 0, 0, 1585, 1568,
	0, 1643, 1635, 1637, 1639, 2617, 2398, 2733, 1569, 1570,
	1715, 0, 1683, 332, 618, 0, 0, 1743, 0, 0,
	0, 1352, 168, 0, 1133, 1134, 2280, 1136, 0, 1138,
	1140, 1141, 1142, 0, 1145, 0, 2329, 0, 1150, 1153,
	1154, 0, 0, 1167, 1189, 0, 1198, 0, 1328, 1338,
	1332, 0, 1330, 1200, 0, 172, 198, 174, 200, 195,
	0, 1335, 0, 176, 185, 0, 0, 123, 0, 0,
	2392, 154, 152, 150, 101, 1339, 125, 0, 220, 228,
	1334, 230, 215, 205, 0, 1361, 1365, 1373, 0, 1388,
	1389, 1390, 1391, 0, 0, 0, 0, 249, 0, 250,
	253, 0, 0, 1117, 0, 1055, 1175, 0, 1186, 1187,
	1058, 0, 1057, 0, 0, 0, 0, 0, 453, 456,
	0, 459, 0, 0, 0, 0, 0, 1314, 1312, 0,
	1320, 0, 0, 0, 1466, 0, 0, 1485, 1486, 476,
	1508, 0, 0, 1514, 1525, 302, 0, 0, 1089, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1090, 1200,
	0, 0, 1164, 0, 307, 282, 0, 672, 0, 674,
	0, 972, 974, 0, 0, 2017, 2109, 0, 0, 2042,
	2043, -2, 0, 1983, 2093, 2095, 0, 0, 0, 0,
	0, 1654, 619, 1737, 627, 1348, 0, 1355, 1131, 1135,
	0, 0, 0, 1146, 1206, 0, 0, 1223, 1223, 1159,
	0, 0, 1192, 1193, 1102, 0, 1194, 1195, 1196, 1327,
	1613, 1333, 1102, 0, 0, 197, 202, 0, 0, 0,
	0, 0, 0, 0, 209, 231, 1335, 0, 1392, 1393,
	0, 0, 246, 267, 0, 1266, 1056, 1116, 0, 0,
	1066, 0, 1069, 0, 1065, 1062, 1063, 1054, 0, 457,
	458, 473, 0, 474, 0, 1269, 0, 0, 1321, 0,
	0, 1473, 1465, 1492, 1487, 1488, 1734, 1511, 1515, 0,
	0, 1198, 1200, 1113, 0, 671, 0, 0, 982, 983,
	0, 0, 0, 0, 2104, 1605, 1984, 0, 0, 1638,
	1640, 1641, 1642, 1349, 0, 0, 1144, 1211, 0, 0,
	0, 0, 0, 1160, 1190, 1191, 1113, 0, 1331, 1329,
	1169, 0, 1202, 178, 0, 1200, 0, 1122, 0, 0,
	1125, 0, 0, 155, 2392, 153, 0, 205, 1385, 205,
	0, 270, 0, 261, 259, 260, 1058, 0, 0, 1180,
	1182, 0, 1070, 1102, 1068, 470, 1267, 1304, 1200, 0,
	1198, 0, 1480, 1492, 1474, 1475, 0, 1490, 0, 325,
	325, 1102, 1198, 1056, 1112, 325, 673, 675, 2101, 2121,
	2110, -2, 2690, 2399, 0, 2121, 2121, 2096, 2097, 0,
	0, 1147, 1207, 1208, 0, 1203, 1204, 1205, 2328, 1148,
	1149, 1151, 1152, 1188, 0, 0, 1206, 201, 1102, 1119,
	0, 0, 1120, 0, 0, 158, 0, 160, 232, 1383,
	0, 1386, 0, 255, 0, 0, 1050, 0, 1179, 0,
	0, 0, 0, 1117, 1058, 1198, 0, 1102, 0, 1469,
	1479, 0, 1489, 1466, 0, 304, 305, 1113, 1102, 1734,
	0, 306, 2106, 0, 0, 2112, 2113, 2114, 2115, 2116,
	2107, 2108, 1137, 0, 1209, 0, 1210, 0, 0, 0,
	1734, 1197, 0, 1211, 183, 1123, 0, 1126, 0, 156,
	0, 0, 0, 265, 266, 1047, 1049, 0, 1181, 1059,
	0, 1061, 1056, 1067, 1102, 0, 1113, 0, 1462, 1468,
	1472, 2289, 1473, 1509, 0, 1056, 1113, 1163, 0, 2118,
	2119, 0, 0, 0, 1212, 0, 1215, 1216, 0, 1213,
	1168, 0, 1188, 0, 0, 1384, 205, 0, 0, 1060,
	1058, 1113, 1200, 1056, 1198, 1480, 0, 1734, 1056, 2117,
	2120, 2111, 1143, 1214, 1217, 1218, 1199, 1170, 0, 0,
	1387, 268, 0, 1105, 1050, 1056, 1198, 1734, 1102, 1469,
	1734, 1161, 1734, 1110, 0, 0, 1101, 1103, 1104, 1048,
	1734, 1102, 1317, 1113, 1463, 1510, 1162, 1124, 1109, 0,
	269, 1315, 1113, 1056, 0, 1056, 1734, 0, 1734, 1318,
	1110, 1316, 1127,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 594, 3, 600, 595, 3,
	605, 606, 598, 596, 610, 597, 607, 599, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 613, 3,
	586, 588, 587, 591, 609, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 603, 3, 604, 601, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 611, 593, 612, 589,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 590, 57929, 592,
	57930, 602, 57931, 608, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1626
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1695
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1707
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1791
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1823
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1847
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1877
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1885
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1909
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1913
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1922
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1934
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1939
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1958
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1973
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1982
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1987
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2001
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2012
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2022
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2032
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2041
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2052
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2058
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2084
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2089
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2180
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2223
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2226
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2232
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2467
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2471
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2474
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2499
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2803
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2936
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3045
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3082
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3091
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3097
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3102
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3112
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3117
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3140
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3148
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3208
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3224
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3258
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3408
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3428
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3433
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3451
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3452
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "CREATE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "create access method")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "create cast")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "create publication")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplemented(sqllex, "create rule")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "create server")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3492
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3495
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3496
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3499
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3500
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplemented(sqllex, "drop server")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3612
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3647
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3682
		{

			sqlVAL.union.val = nil
		}
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "DELETE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3769
		{
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "DROP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3995
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4061
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4069
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4077
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4085
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4093
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "DELETE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "INSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "INSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4174
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4182
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4207
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4297
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4312
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4375
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "RESET")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "USE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4461
		{
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4462
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4485
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4609
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4615
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4646
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4692
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4696
		{
			return unimplemented(sqllex, "set from current")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4700
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4705
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4714
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4731
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4736
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = tree.Low
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = tree.Normal
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = tree.High
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4916
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4920
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.str = "client_encoding"
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4968
		{
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.str = "timezone"
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4989
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5052
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5061
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5069
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5100
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5111
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5145
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5161
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5201
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5214
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5282
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = true
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = false
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5342
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5368
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5437
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5442
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5444
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5448
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = true
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = false
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5468
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5514
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = true
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = false
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5553
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5557
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5561
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5572
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5594
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5604
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5622
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5627
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5632
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5637
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5645
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5655
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5661
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5705
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5713
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5734
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5744
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5748
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5757
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5780
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5851
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5861
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5868
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5875
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6008
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6110
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6122
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6164
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6196
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6204
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6239
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6306
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6322
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{

			sqlVAL.union.val = nil
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6357
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.str = ""
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6367
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = nil
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6390
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6420
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6434
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6449
		{
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6450
		{
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6451
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6506
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6532
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6546
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6550
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6556
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6572
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.str = ""
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6720
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6824
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{

			sqlVAL.union.val = true
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = false
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6879
		{
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6886
		{
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6986
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7014
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7024
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7039
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7104
		{
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7105
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7106
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7107
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7181
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7265
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7274
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7282
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7293
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7298
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7312
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7314
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7320
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7335
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7339
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7366
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7400
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.str = ""
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7420
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = true
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7443
		{

			sqlVAL.union.val = true
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = false
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7458
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7472
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7484
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7496
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7506
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7516
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = nil
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7642
		{
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7668
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7670
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7672
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7674
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7678
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7716
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7734
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7753
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7770
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7787
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7791
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = false
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = true
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = false
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = true
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = false
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7845
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7851
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7865
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.str = ""
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.str = ""
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7924
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7930
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8155
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8161
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8173
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8179
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8193
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8199
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8258
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = true
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = false
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.Types
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8318
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8322
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8347
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8350
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8351
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8389
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8418
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8439
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8447
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8462
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8483
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8488
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8501
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8515
		{
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8517
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8538
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8566
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8579
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8581
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8674
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.str = ""
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8697
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8702
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{

		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8734
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.str = ""
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.str = ""
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.str = ""
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.str = ""
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8789
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8803
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8850
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8912
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8939
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9013
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9034
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9049
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9228
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9229
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9291
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9351
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = true
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = false
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9404
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9405
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = nil
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9418
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9419
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = true
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = false
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = false
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = true
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9452
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9453
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9515
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9520
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9546
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9579
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9639
		{
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9707
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9744
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9749
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9806
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9847
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9857
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9892
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9903
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9933
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9966
		{
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = nil
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = true
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = false
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.str = tree.AstFull
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.str = tree.AstRight
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.str = tree.AstInner
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10085
		{
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10086
		{
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.str = tree.AstHash
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.str = ""
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10155
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10178
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10184
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10190
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10200
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = true
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = false
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = true
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = false
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10249
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10262
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10270
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10271
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10289
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10299
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10319
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10368
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10380
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = types.Geography
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10430
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10438
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10472
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = nil
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = types.Int2
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = types.Int
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = types.Float4
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = types.Float
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10515
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10523
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10531
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = types.Bool
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10545
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = types.Float
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10564
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10570
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10592
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = types.String
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = true
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = false
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = types.Date
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10641
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10649
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10663
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10672
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10680
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10697
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = true
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = false
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = false
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = types.Interval
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10721
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = nil
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10850
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10910
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11059
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11180
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11246
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11268
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11376
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11384
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11485
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11511
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11520
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11535
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11569
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11580
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11581
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11596
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11605
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11671
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11842
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11872
		{
			return unimplemented(sqllex, "treat")
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.str = ""
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12034
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12047
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12115
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12144
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12220
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12560
		{
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12561
		{
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12633
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12641
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12691
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12714
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12730
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12739
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12750
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12759
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12767
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12784
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12869
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12877
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12926
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12933
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13003
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13016
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13023
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13048
		{
			sqlVAL.str = ""
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
